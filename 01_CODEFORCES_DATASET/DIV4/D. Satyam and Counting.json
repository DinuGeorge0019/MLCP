{
    "link": "https://codeforces.com//contest/2009/problem/D",
    "problemId": "2852153",
    "problem_idx": "D",
    "shortId": "2009D",
    "contest_number": "2009",
    "problem_submissions": {
        "G3": [
            279769452,
            279768632,
            279768293,
            279634016
        ],
        "G2": [
            279623507,
            279826246
        ],
        "G1": [
            279587563,
            279636106,
            279609767,
            279612959,
            279609227,
            279608763,
            279609285,
            279611833,
            279624668,
            279639153,
            279638461,
            279635081,
            279635668,
            279621773,
            279633270,
            279633684,
            279636753,
            279730650,
            279662759,
            279656445,
            279655663,
            279631130,
            279639017,
            279552989,
            279637280
        ],
        "F": [
            279547213,
            279564027,
            279559926,
            279582719,
            279583635,
            279613621,
            279577030,
            279594617,
            279621002,
            279590457,
            279608835,
            279603151,
            279614857,
            279626998,
            279613197,
            279621646,
            279597606,
            279601727,
            279569426
        ],
        "E": [
            279533616,
            279526687,
            279525143,
            279563806,
            279568079,
            279557530,
            279568309,
            279554596,
            279562319,
            279532877,
            279566258,
            280040026,
            279574760,
            279576830,
            279569963,
            279593338,
            279623467,
            279604028,
            279620362,
            279559627
        ],
        "D": [
            279533481,
            279557169,
            279569552,
            279571388,
            279553891,
            279540841,
            279541654,
            279543146,
            279532771,
            279609111,
            279548630,
            279584666,
            279578933,
            279553297,
            279551555,
            279565043,
            279612797,
            279573047,
            279527024
        ],
        "C": [
            279500445,
            279536680,
            279503360,
            279514834,
            279545156,
            279521416,
            279528596,
            279528820,
            279537845,
            279521228,
            279569591,
            279558031,
            279545403,
            286087129,
            279516214,
            279555897,
            279529719,
            279601758,
            279552170,
            279523006
        ],
        "B": [
            279496402,
            279511490,
            279496624,
            279497398,
            279513790,
            279507712,
            279513891,
            279508370,
            279503498,
            279497302,
            279514475,
            279523682,
            279500707,
            279500657,
            279545377,
            279514768,
            279554375,
            279500128,
            279509479
        ],
        "A": [
            279487493,
            279493652,
            279488106,
            279487346,
            279488818,
            279497706,
            279494564,
            279502386,
            279489427,
            279489773,
            279499517,
            279489734,
            279491016,
            279488760,
            279487942,
            279488254,
            279492954,
            279543689,
            279488083,
            279491184
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/133296",
    "editorial": "Problem Credits: Proof_by_QED Analysis: cry Solution Initially, the\r\nobvious case one might first consider is an upright right triangle\r\n(specifically, the triangle with one of its sides parallel to the\r\n-axis). This side can only be made with two points in the form and . We\r\nonly need to search third point. Turns out, the third point can be any\r\nother unused vertex! If the third point has , then it will be an upright\r\ntriangle, but if the third point has , it will simply be upside down.One\r\nof the other case is in the form of . Letâs see why this is a right\r\ntriangle. Recall that in right triangle, the sum of the squares of two\r\nof the sides must equal to the square of the third side. The length\r\nbetween the first and the second point is because it is the diagonal of\r\nby unit block. Similarily, the second and third point also has length .\r\nObviously, the length between the first and third point is . Since we\r\nhave , this is certainly a right triangle. Of course, we can flip the\r\nvalues of each point and it will still be a valid right triangle, just\r\nupside down.\r\n",
    "name": "D. Satyam and Counting",
    "statement": "Satyam is given n distinct points on the 2D coordinate plane. How many\r\ndifferent nondegenerate right triangles^{\r\ntext{ }} can be formed from choosing three different points as its\r\nvertices?Two triangles a and b are different if there is a point v such\r\nthat v is a vertex of a but not a vertex of b.^{\r\ntext{ }}A nondegenerate right triangle has positive area and an interior\r\n90^{\r\ncirc} angle.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;using ll=long long;using i128=__int128;using ull=unsigned long long;using ld=long double;using pii=pair<int,int>;using pll=pair<ll,ll>;clock_t a;const int M=998244353;const ll inf=1e17;const ld eps=1e-10;void oT(char c='.'){cout<<c<<\"Time:\"<<double(clock()-a)<<'\\n';}struct Solution{\t\tint n,x,y,k;vector<string>R;ll res=0;\tmap<int,int>a,b;\tvoid Init()\t{\t\tcin>>n;\t\tfor(int i=1,x,y;i<=n;i++)\t\t{\t\t\tcin>>x>>y;\t\t\tif(y==0)a[x]++;else b[x]++;\t\t}\t\tfor(auto&[x,c1]:a)\t\t{\t\t\tauto c2=b[x];\t\t\tres+=ll(c1)*c2*(n-c1-c2);\t\t}\t\tfor(auto&[x,c1]:a)\t\t{\t\t\tauto c2=b[x-1],c3=b[x+1];\t\t\tres+=ll(c1)*c2*c3;\t\t}\t\tfor(auto&[x,c1]:b)\t\t{\t\t\tauto c2=a[x-1],c3=a[x+1];\t\t\tres+=ll(c1)*c2*c3;\t\t}\t\tcout<<res<<\"\\n\";\t}\tvoid Solve()\t{ \t}};void precal(){}signed main() {    ios::sync_with_stdio(0);cin.tie(0);precal();    int t=1;cin>>t;while(t--){Solution sol;sol.Init();sol.Solve();}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\D. Satyam and Counting.json",
    "hint": []
}