{"link": "https://codeforces.com//contest/1915/problem/E", "problemId": "2402116", "problem_idx": "E", "shortId": "1915E", "contest_number": "1915", "problem_submissions": {"G": [239324603, 239298351, 239291102, 239327463, 239315080, 239298429, 239331435, 239358831, 239338223, 239314225, 239331510, 239346542, 239337633, 239370168, 239369180, 239346160, 239559103, 239363546, 239366749, 239350512, 239369322], "F": [239261781, 239274034, 239280013, 239277963, 239293339, 239315714, 239301552, 239299242, 239313346, 239255585, 239307013, 239309817, 239320406, 239305928, 239311152, 239289443, 239306361, 239321545, 239304709], "E": [239252852, 239258994, 239296056, 239261417, 239262022, 239235807, 239267335, 239276554, 239285923, 239294542, 239293476, 239282605, 239281481, 239274431, 239270230, 239292535, 239277557, 239285105, 239263650], "D": [239241155, 239247992, 239248670, 239253126, 239253995, 239265657, 239256680, 239258090, 239261104, 239300303, 239269518, 239270520, 239276544, 239257868, 239261471, 239248761, 239266865, 239256141, 239279955], "C": [239228990, 239226480, 239224069, 239236359, 239238727, 239222422, 239239617, 239236963, 239233571, 239295826, 239252410, 239245816, 239244426, 239235233, 239238862, 239256492, 239238732, 239259700, 239238830], "B": [239224409, 239251414, 239218293, 239226511, 239233979, 239239693, 239258634, 239229667, 239227054, 239241984, 239243810, 239239053, 239236365, 239228576, 239232683, 239242403, 239227250, 239227149, 239231560], "A": [239213502, 239213532, 239213467, 239216520, 239220630, 239778066, 239214629, 239216014, 239213684, 239216469, 239222519, 239229063, 239219211, 239218084, 239214816, 239220861, 239217466, 239213553, 239214366, 239215372]}, "name": "E. Romantic Glasses", "statement": "Iulia has n glasses arranged in a line. The i-th glass has a_i units of\r\njuice in it. Iulia drinks only from odd-numbered glasses, while her date\r\ndrinks only from even-numbered glasses.To impress her date, Iulia wants\r\nto find a contiguous subarray of these glasses such that both Iulia and\r\nher date will have the same amount of juice in total if only the glasses\r\nin this subarray are considered. Please help her to do that.More\r\nformally, find out if there exists two indices l, r such that 1\r\nleq l\r\nleq r\r\nleq n, and a_l + a_{l + 2} + a_{l + 4} +\r\ndots + a_{r} = a_{l + 1} + a_{l + 3} +\r\ndots + a_{r-1} if l and r have the same parity and a_l + a_{l + 2} +\r\na_{l + 4} +\r\ndots + a_{r - 1} = a_{l + 1} + a_{l + 3} +\r\ndots + a_{r} otherwise.\r\n", "solutions": ["#include \"bits/stdc++.h\"\nusing namespace std;       \n\n// #pragma comment(linker, \"/stack:200000000\")\n// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n\nusing ll = long long;\nusing ld = long double;\n#define pb push_back\n#define ff first\n#define ss second\n#define sz(x) (ll)(x).size()\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n\nvoid freopen(string s) { freopen((s+\".in\").c_str(), \"r\", stdin); freopen((s+\".out\").c_str(), \"w\", stdout); }\nvoid IOIGold2024_InshAllah() { ios_base::sync_with_stdio(false); cin.tie(NULL); }\nll binmul(ll a, ll b, ll c) { ll res = 0; while(b) { if(b&1) (res += a) %= c; (a += a) %= c; b >>= 1; } return res; }\nll binpow(ll a, ll b, ll c) { ll res = 1; while(b) { if(b&1) (res *= a) %= c; (a *= a) %= c; b >>= 1; } return res; }\ntemplate<typename T> T gcd(T a, T b) { if(b==0) return a; return gcd(b, a%b); }\ntemplate<typename T> T lcm(T a, T b) { return a/gcd(a, b)*b; }\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nld rnd() { return rng()%INT_MAX*1.0/INT_MAX; }\n\nconst ll inf = 1e18+7, MX = LLONG_MAX, MN = LLONG_MIN;\nconst ll mod = 1e9+7, N = 3e5+5;\nll a[N], even[N], odd[N];\n\nvoid kigash() {\n    ll n;\n    cin>>n;\n    // odd[i] - odd[j] = even[i] - even[j]\n    // odd[i] - even[i] = odd[j] - even[j]\n    map<ll, ll> have;\n    have[0] = 1;\n    ll f = 0;\n    for(ll i=1; i<=n; i++) {\n        cin>>a[i];\n        even[i] = even[i-1], odd[i] = odd[i-1];\n        if(i&1) odd[i] += a[i];\n        else even[i] += a[i];\n        if(have.count(odd[i]-even[i])) f = 1;\n        have[odd[i]-even[i]] = 1;\n    }\n    if(f) cout<<\"YES\\n\";\n    else cout<<\"NO\\n\";\n    return;\n}\n\nsigned main(/*Kigash Amir*/) {\n    // freopen(\"\");\n    IOIGold2024_InshAllah();\n    ll tt = 1;\n    cin>>tt;\n    for(ll i=1; i<=tt; i++) {\n        kigash();\n    }\n}"], "input": "", "output": "", "tags": ["data structures", "greedy", "math"], "dificulty": "1300", "interactive": false}