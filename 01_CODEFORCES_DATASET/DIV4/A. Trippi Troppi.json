{
    "link": "https://codeforces.com//contest/2094/problem/A",
    "problemId": "3326417",
    "problem_idx": "A",
    "shortId": "2094A",
    "contest_number": "2094",
    "problem_submissions": {
        "H": [
            315419761,
            315475577,
            315470679,
            315470636,
            315447403,
            315472991,
            315481699,
            315470433,
            315457458,
            315472587,
            315458143,
            315478761,
            315469463,
            315472080,
            315482401,
            315481019,
            315478074,
            315464921,
            315607458
        ],
        "F": [
            315396281,
            315388551,
            315409614,
            315481850,
            315437761,
            315390949,
            315425975,
            315449017,
            315703240,
            315404434,
            315443543,
            315469283,
            315425752,
            315412912,
            315376658,
            315477157,
            315362010,
            315383379
        ],
        "D": [
            315383815,
            315347351,
            315364078,
            315340868,
            315364354,
            315360286,
            315356506,
            315352517,
            315693932,
            315368582,
            315379758,
            315364770,
            315401092,
            315396704,
            315460385,
            315457804,
            315458686,
            315348761,
            315362339
        ],
        "G": [
            315369009,
            315435262,
            315444272,
            315427057,
            315414915,
            315407300,
            315454655,
            315446651,
            316647592,
            315428302,
            315469758,
            315415913,
            315437822,
            315439820,
            315442391,
            315469212,
            315369168,
            315388544
        ],
        "E": [
            315351093,
            315481211,
            315356936,
            315376691,
            315344797,
            315378834,
            315372756,
            315369929,
            315362020,
            315695603,
            315397242,
            315392274,
            315393102,
            315412664,
            315404204,
            315433563,
            315461155,
            315353693,
            315372826
        ],
        "C": [
            315340864,
            315328747,
            315341621,
            315331430,
            315340467,
            315345468,
            315339267,
            315334487,
            315692795,
            315337444,
            315347762,
            315338805,
            315379499,
            315384971,
            315371094,
            315456134,
            315343868,
            315348346
        ],
        "B": [
            315331624,
            315322301,
            315328304,
            315321940,
            315331517,
            315326804,
            315330306,
            315328733,
            315691792,
            315327268,
            315331200,
            315329516,
            315368901,
            315377376,
            315384313,
            315453826,
            315342307,
            315330475
        ],
        "A": [
            315321351,
            315309645,
            315310617,
            315309887,
            315314553,
            315318092,
            315322464,
            315691162,
            315310011,
            315311287,
            315309546,
            315349419,
            315368075,
            315318305,
            315452548,
            315340989,
            315317660
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/141796",
    "editorial": "Problem Credits: Proof_by_QED SolutionThis can be solved by printing the\r\nzero-th index of each string in sequence. For example, suppose your\r\nstrings are , , and . Then in C++, you can use cout << a[0] << b[0] <<\r\nc[0] << ’\r\nn’;, and similarly, in Python you can use print(a[0] + b[0] + c[0]). See\r\nyour preferred language’s syntax for how to obtain a given indexed\r\ncharacter from a string.\r\n",
    "name": "A. Trippi Troppi",
    "statement": "Trippi Troppi resides in a strange world. The ancient name of each\r\ncountry consists of three strings. The first letter of each string is\r\nconcatenated to form the country’s modern name. Given the country’s\r\nancient name, please output the modern name.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\A. Trippi Troppi.json",
    "hint": []
}