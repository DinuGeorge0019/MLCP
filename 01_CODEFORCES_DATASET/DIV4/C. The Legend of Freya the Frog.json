{
    "link": "https://codeforces.com//contest/2009/problem/C",
    "problemId": "2852152",
    "problem_idx": "C",
    "shortId": "2009C",
    "contest_number": "2009",
    "problem_submissions": {
        "G3": [
            279769452,
            279768632,
            279768293,
            279634016
        ],
        "G2": [
            279623507,
            279826246
        ],
        "G1": [
            279587563,
            279636106,
            279609767,
            279612959,
            279609227,
            279608763,
            279609285,
            279611833,
            279624668,
            279639153,
            279638461,
            279635081,
            279635668,
            279621773,
            279633270,
            279633684,
            279636753,
            279730650,
            279662759,
            279656445,
            279655663,
            279631130,
            279639017,
            279552989,
            279637280
        ],
        "F": [
            279547213,
            279564027,
            279559926,
            279582719,
            279583635,
            279613621,
            279577030,
            279594617,
            279621002,
            279590457,
            279608835,
            279603151,
            279614857,
            279626998,
            279613197,
            279621646,
            279597606,
            279601727,
            279569426
        ],
        "E": [
            279533616,
            279526687,
            279525143,
            279563806,
            279568079,
            279557530,
            279568309,
            279554596,
            279562319,
            279532877,
            279566258,
            280040026,
            279574760,
            279576830,
            279569963,
            279593338,
            279623467,
            279604028,
            279620362,
            279559627
        ],
        "D": [
            279533481,
            279557169,
            279569552,
            279571388,
            279553891,
            279540841,
            279541654,
            279543146,
            279532771,
            279609111,
            279548630,
            279584666,
            279578933,
            279553297,
            279551555,
            279565043,
            279612797,
            279573047,
            279527024
        ],
        "C": [
            279500445,
            279536680,
            279503360,
            279514834,
            279545156,
            279521416,
            279528596,
            279528820,
            279537845,
            279521228,
            279569591,
            279558031,
            279545403,
            286087129,
            279516214,
            279555897,
            279529719,
            279601758,
            279552170,
            279523006
        ],
        "B": [
            279496402,
            279511490,
            279496624,
            279497398,
            279513790,
            279507712,
            279513891,
            279508370,
            279503498,
            279497302,
            279514475,
            279523682,
            279500707,
            279500657,
            279545377,
            279514768,
            279554375,
            279500128,
            279509479
        ],
        "A": [
            279487493,
            279493652,
            279488106,
            279487346,
            279488818,
            279497706,
            279494564,
            279502386,
            279489427,
            279489773,
            279499517,
            279489734,
            279491016,
            279488760,
            279487942,
            279488254,
            279492954,
            279543689,
            279488083,
            279491184
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/133296",
    "editorial": "Problem Credits: Proof_by_QED Analysis: cry Solution Consider the and\r\ndirections separately and calculate the jumps we need in each direction.\r\nThe number of jumps we need in the direction is and similarily in the\r\ndirection. Now let\u00e2\u0080\u0099s try to combine them to obtain the total number of\r\njumps. Let\u00e2\u0080\u0099s consider the following cases: . In this case, there will\r\nneed to be extra jumps in the direction. While Freya performs these\r\nextra jumps, she will choose for the direction. In total, there will\r\nneed to be jumps. . We can use the same reasoning as the previous case,\r\nbut there\u00e2\u0080\u0099s a catch. Since Freya is initially facing the direction, for\r\nthe last jump, she does not need to jump in the direction. In total,\r\nthere will need to be jumps.\r\n",
    "name": "C. The Legend of Freya the Frog",
    "statement": "Freya the Frog is traveling on the 2D coordinate plane. She is currently\r\nat point (0,0) and wants to go to point (x,y). In one move, she chooses\r\nan integer d such that 0\r\nleq d\r\nleq k and jumps d spots forward in the direction she is facing.\r\nInitially, she is facing the positive x direction. After every move, she\r\nwill alternate between facing the positive x direction and the positive\r\ny direction (i.e., she will face the positive y direction on her second\r\nmove, the positive x direction on her third move, and so on). What is\r\nthe minimum amount of moves she must perform to land on point (x,y)?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;using ll=long long;using i128=__int128;using ull=unsigned long long;using ld=long double;using pii=pair<int,int>;using pll=pair<ll,ll>;clock_t a;const int M=998244353;const ll inf=1e17;const ld eps=1e-10;void oT(char c='.'){cout<<c<<\"Time:\"<<double(clock()-a)<<'\\n';}struct Solution{\t\tint n,x,y,k;vector<string>R;\tvoid Init()\t{\t\tcin>>x>>y>>k;\t\tx=(x+k-1)/k,y=(y+k-1)/k;\t\tcout<<max(x*2-1,y*2)<<'\\n';\t}\tvoid Solve()\t{\u00a0\t}};void precal(){}signed main() {    ios::sync_with_stdio(0);cin.tie(0);precal();    int t=1;cin>>t;while(t--){Solution sol;sol.Init();sol.Solve();}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\C. The Legend of Freya the Frog.json"
}