{"link": "https://codeforces.com//contest/1850/problem/G", "problemId": "2083773", "problem_idx": "G", "shortId": "1850G", "contest_number": "1850", "problem_submissions": {"H": [214871893, 214865969, 214852788, 214869885, 214859482, 214871930, 214890048, 214882151, 214901510, 214906261, 214875061, 214897397, 214901042, 215288667, 214912797, 214877629, 214908207, 214901454, 214905957, 214892389, 214894992], "G": [214828842, 214846473, 214837139, 214858241, 214868612, 214852093, 224564308, 214869726, 214870609, 214875672, 215057304, 214871890, 214803757, 214868618, 214885459, 215288625, 214843045, 214862477, 214892403, 214884644, 214841291, 214878802, 214871156], "F": [214815502, 214833560, 214816072, 214846638, 214841482, 214857335, 214863567, 214861114, 214839320, 214860814, 214821104, 214856950, 214839551, 215288612, 214856448, 214855319, 214835288, 214847715, 214831337, 214856836, 214841904], "E": [214804249, 214821169, 214840502, 214835624, 214832597, 214814581, 214835044, 214825933, 214819122, 214819358, 214821266, 215288692, 215288598, 214820552, 214886884, 214820942, 214833482, 214816679, 214841546, 214854853], "C": [214790919, 214777067, 214774253, 214778713, 214791898, 214779810, 214784107, 214784529, 214790788, 214779957, 214798775, 214783437, 214778795, 215288576, 214786043, 214771276, 214785575, 214784633, 214784836, 214789023, 214796431], "D": [214784734, 214830108, 214803817, 214792127, 214792253, 214803497, 214803302, 214793684, 214798203, 214802221, 214789266, 214813947, 214801704, 214805655, 215288587, 214803885, 214788179, 214795029, 214801980, 214802908, 214806616, 214816519], "B": [214769482, 214788903, 214769359, 214771548, 214775998, 214771521, 214772110, 214772055, 214779327, 214768046, 214785939, 214784384, 214771623, 215288562, 214776480, 214765670, 214772913, 214774261, 214777175, 214781034, 214784926], "A": [214759216, 214762760, 214761570, 214759352, 214761903, 214765601, 214759471, 214759894, 214759572, 214762667, 214759542, 214762985, 214760054, 214761038, 215288460, 214759685, 214758925, 214776553, 214759093, 214766299, 214760976, 214768326]}, "name": "G. The Morning Star", "statement": "A compass points directly toward the morning star. It can only point in\r\none of eight directions: the four cardinal directions (N, S, E, W) or\r\nsome combination (NW, NE, SW, SE). Otherwise, it will break. There are n\r\ndistinct points with integer coordinates on a plane. How many ways can\r\nyou put a compass at one point and the morning star at another so that\r\nthe compass does not break?\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\n#define dbg(a)  cerr << #a << \": \" << a << \"\\n\"\n\nll f(map<ll, ll> cnt) {\n\tll ret = 0;\n\tfor (auto [k, m]: cnt) {\n\t\tret += 1ll * m * (m - 1) / 2;\n\t}\n\treturn 2 * ret;\n}\n\nvoid solve () {\n\tint n;  cin >> n;\n\tvector<array<ll, 2>> a(n);\n\tfor (auto &[x, y]: a) {\n\t\tcin >> x >> y;\n\t}\n\tll ans = 0;\n\tmap<ll, ll> cnt_x, cnt_y, cnt_main, cnt_sec;\n\tfor (auto [x, y]: a) {\n\t\tcnt_x[x]++;\n\t\tcnt_y[y]++;\n\t\tcnt_main[x - y]++;\n\t\tcnt_sec[x + y]++;\n\t}\n\n\tcout << f(cnt_x) + f(cnt_y) + f(cnt_main) + f(cnt_sec) << \"\\n\";\n}\n\nint main(){\n\tios::sync_with_stdio(0), cin.tie(0);\n\t\n\tint tc = 1;\n\tcin >> tc;\n\tfor (int t = 1; t <= tc; ++t) {\n\t  solve();\n\t}\n}"], "input": "", "output": "", "tags": ["combinatorics", "data structures", "geometry", "implementation", "math", "sortings"], "dificulty": "1500", "interactive": false}