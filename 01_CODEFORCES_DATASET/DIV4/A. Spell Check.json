{
    "link": "https://codeforces.com//contest/1722/problem/A",
    "problemId": "1524433",
    "problem_idx": "A",
    "shortId": "1722A",
    "contest_number": "1722",
    "problem_submissions": {
        "F": [
            170228432,
            170238760,
            170238447,
            170210010,
            170244311,
            170249847,
            170248990,
            170242753,
            170253987,
            170258155,
            170276802,
            170261239,
            170275384,
            170277690,
            170282251,
            170270200,
            170259586,
            170262035,
            170269336
        ],
        "G": [
            170201112,
            170239449,
            170242558,
            170231194,
            170252747,
            170261353,
            170265362,
            170245859,
            170241143,
            170270513,
            170254138,
            170230903,
            170246195,
            170265008,
            170257046,
            170286329,
            170267206,
            170289304,
            170253883
        ],
        "E": [
            170193046,
            170214495,
            170222070,
            170186508,
            170214137,
            170237586,
            170233277,
            170270766,
            170263452,
            170259315,
            170236844,
            170358200,
            170246843,
            170283220,
            170249250,
            170244656,
            170245016,
            170419946,
            170419889,
            170419820,
            170419722,
            170404871,
            170404830,
            170404803,
            170251944,
            170235689,
            170243907,
            170288376
        ],
        "B": [
            170184199,
            170175987,
            170182860,
            170222795,
            170174365,
            170177381,
            170174290,
            170175147,
            170180988,
            170176801,
            170176996,
            170185025,
            170178862,
            170179975,
            170177572,
            170174442,
            170196613,
            170178351,
            170176426
        ],
        "D": [
            170183156,
            170200419,
            170184918,
            170213538,
            170201758,
            170199636,
            170199991,
            170191578,
            170207198,
            170225091,
            170208494,
            170210667,
            170213605,
            170217491,
            170221636,
            170192639,
            170223864,
            170205720,
            170207316
        ],
        "C": [
            170177096,
            170190052,
            170201001,
            170214549,
            170180461,
            170183783,
            170184985,
            170181654,
            170191714,
            170190466,
            170186277,
            170194039,
            170659608,
            170191919,
            170201222,
            170193920,
            170181146,
            170213055,
            170187645,
            170193080
        ],
        "A": [
            170175728,
            170174285,
            170175641,
            170177482,
            170172907,
            170174547,
            170172857,
            170173111,
            170175353,
            170173745,
            170174044,
            170177681,
            170172889,
            170175006,
            170172831,
            170173065,
            170200391,
            170175631,
            170172819
        ]
    },
    "name": "A. Spell Check",
    "statement": "Timur likes his name. As a spelling of his name, he allows any\r\npermutation of the letters of the name. For example, the following\r\nstrings are valid spellings of his name: , , , . Note that the correct\r\nspelling must have uppercased and lowercased other letters.Today he\r\nwrote string s of length n consisting only of uppercase or lowercase\r\nLatin letters. He asks you to check if s is the correct spelling of his\r\nname.\r\n",
    "solutions": [
        "#include<iostream>\n#include<iomanip>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define md(a) a=(a%mod+mod)%mod\n#define file(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\nint T;\nint n;\nstring s;\nint g(char c)\n{\n\tint ans=0;\n\tfor(int i=0;i<=4;i++)if(c==s[i])ans++;\n\treturn ans;\n}\nvoid solve()\n{\n\tcin>>n>>s;\n\tif(n!=5)\n\t{\n\t\tcout<<\"NO\"<<endl;\n\t\treturn ;\n\t}\n\tif(g('T')!=1){cout<<\"NO\"<<endl;return ;}\n\tif(g('i')!=1){cout<<\"NO\"<<endl;return ;}\n\tif(g('m')!=1){cout<<\"NO\"<<endl;return ;}\n\tif(g('u')!=1){cout<<\"NO\"<<endl;return ;}\n\tif(g('r')!=1){cout<<\"NO\"<<endl;return ;}\n\tcout<<\"YES\"<<endl;return ;\n}\nsigned main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)solve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\A. Spell Check.json",
    "editorial_link": "https://codeforces.com//blog/entry/106478",
    "editorial": "Here are two solutions. Iterate through the string character by\r\ncharacter. If , then ; otherwise, if or , then or . If the statement is\r\nfalse for any , the answer is . Otherwise it is . Replace all with ,\r\nsince they are the same anyway. Then just check if the two strings are\r\nequal.In either case the complexity is per testcase.\r\n",
    "hint": []
}