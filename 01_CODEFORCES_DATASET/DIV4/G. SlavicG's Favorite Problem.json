{"link": "https://codeforces.com//contest/1760/problem/G", "problemId": "1654044", "problem_idx": "G", "shortId": "1760G", "contest_number": "1760", "problem_submissions": {"F": [181970958, 181950281, 181958213, 181965757, 181944948, 181970759, 182137619, 181978710, 181975200, 182010196, 181966682, 181975500, 181975570, 182068449, 181971980, 181969952, 181982261, 181977736, 182001597, 182004425, 181959044, 181960815], "G": [181957910, 181964483, 181962348, 181994157, 181968737, 181984162, 181970230, 181984643, 181974424, 181996148, 181999866, 182000308, 182002923, 181998982, 182001075, 182008221, 181988981, 181982666, 181982848, 182019928], "D": [181925187, 181924159, 181926165, 181933690, 181961790, 181933549, 181948303, 181930557, 181924578, 181929764, 181933444, 181924258, 181934676, 181927528, 181934490, 181940229, 181930678, 181939059, 181941298, 181931472], "E": [181912280, 181936624, 181953534, 181942834, 181931986, 181946510, 181941618, 181954737, 181941455, 181949963, 181949921, 181956622, 181950008, 181945918, 181949626, 181947544, 181961711, 181955020, 181938685, 181941972], "C": [181906916, 181917198, 181915993, 181915337, 181922253, 181919151, 181912080, 181916644, 181911070, 181912168, 181914772, 181914699, 181915083, 181911256, 181917814, 181906724, 181913420, 181922501, 181911904, 181915134], "B": [181898180, 181911813, 181909417, 181906573, 181914704, 181908082, 181902374, 181901695, 181899205, 181901224, 181903533, 181905511, 181900583, 181898635, 181905113, 181899276, 181901539, 181906560, 181913258, 181900918], "A": [181894497, 181906833, 181903456, 181901896, 181908348, 181897559, 181894901, 181894647, 181894426, 181894493, 181895542, 181896483, 181894727, 181894560, 181895964, 181894478, 181895400, 181897142, 181898165, 181894344]}, "name": "G. SlavicG's Favorite Problem", "statement": "You are given a weighted tree with n vertices. Recall that a tree is a\r\nconnected graph without any cycles. A weighted tree is a tree in which\r\neach edge has a certain weight. The tree is undirected, it doesn\u2019t have\r\na root.Since trees bore you, you decided to challenge yourself and play\r\na game on the given tree.In a move, you can travel from a node to one of\r\nits neighbors (another node it has a direct edge with).You start with a\r\nvariable x which is initially equal to 0. When you pass through edge i,\r\nx changes its value to x \u00a0\r\nmathsf{XOR}\u00a0 w_i (where w_i is the weight of the i-th edge). Your task\r\nis to go from vertex a to vertex b, but you are allowed to enter node b\r\nif and only if after traveling to it, the value of x will become 0. In\r\nother words, you can travel to node b only by using an edge i such that\r\nx \u00a0\r\nmathsf{XOR}\u00a0 w_i = 0. Once you enter node b the game ends and you\r\nwin.Additionally, you can teleport at any point in time to any vertex\r\nexcept vertex b. You can teleport from any vertex, even from a.Answer\r\nwith \"\" if you can reach vertex b from a, and \"\" otherwise.Note that\r\nmathsf{XOR} represents the bitwise XOR operation.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nint n,a,b;\nvector<pair<int,int>> edge[100005];\nset<int> st;\nvoid dfs1(int x, int p, int v){\n  for(auto it: edge[x]){\n    if(it.first!=p){\n      int y=(v^it.second);\n      st.insert(y);\n      dfs1(it.first,x,y);\n    }\n  }\n}\nbool dfs2(int x, int p, int v){\n  for(auto it: edge[x]){\n    if(it.first==p || it.first==b) continue;\n    int y=(v^it.second);\n    if(dfs2(it.first,x,y) || st.find(y)!=st.end())\n      return true;\n  }\n  return false;\n}\nmain(){\n  int t;\n  cin>>t;\n  while(t--){\n    st.clear();\n    cin>>n>>a>>b;\n    for(int i=0;i<=n;i++)\n      edge[i].clear();\n    for(int i=1;i<n;i++){\n      int a,b,c;\n      cin>>a>>b>>c;\n      edge[a].push_back({b,c});\n      edge[b].push_back({a,c});\n    }\n    dfs1(b,-1,0);\n    if(dfs2(a,-1,0))\n      cout<<\"YES\\n\";\n    else if(st.find(0)!=st.end())\n      cout<<\"YES\\n\";\n    else\n      cout<<\"NO\\n\";\n  }\n}"], "input": "", "output": "", "tags": ["bitmasks", "dfs and similar", "graphs"], "dificulty": "1700", "interactive": false}