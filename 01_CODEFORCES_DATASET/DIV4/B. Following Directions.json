{
    "link": "https://codeforces.com//contest/1791/problem/B",
    "problemId": "1764442",
    "problem_idx": "B",
    "shortId": "1791B",
    "contest_number": "1791",
    "problem_submissions": {
        "G2": [
            191958131,
            191971714,
            191959659,
            191958230,
            191985981,
            191990107,
            192010397,
            192022143,
            192026632,
            192009247,
            192008489,
            191978702,
            192030245,
            192013013,
            192448135,
            192447632,
            192012370,
            191991972,
            192027059,
            192037908
        ],
        "G1": [
            191904574,
            191888658,
            191928315,
            191942325,
            191932732,
            191920192,
            191929765,
            191937199,
            191917827,
            191917733,
            191952488,
            191954182,
            191893606,
            191952450,
            191953930,
            191937779,
            191933720,
            191944464
        ],
        "F": [
            191897354,
            191937727,
            191921203,
            191922917,
            191913192,
            191911808,
            191930384,
            191936558,
            191928717,
            191910030,
            191952082,
            191946442,
            191935770,
            191962030,
            192024472,
            191941593,
            192576519,
            192576463,
            192575894,
            192575798,
            192036363,
            191955548,
            191950300,
            191940578,
            191953610
        ],
        "E": [
            191885323,
            191923099,
            191922588,
            191907909,
            191893339,
            191922711,
            191894210,
            191912372,
            191909000,
            191894812,
            191893693,
            191907186,
            191918338,
            191923434,
            191918943,
            191910133,
            191928876,
            191899722,
            191919676
        ],
        "D": [
            191871418,
            191874838,
            191907562,
            191882805,
            191886550,
            191882717,
            191886746,
            191888932,
            191885472,
            191885182,
            191895924,
            191887101,
            191876371,
            191900684,
            191898470,
            191887590,
            191891777,
            191884491
        ],
        "C": [
            191863568,
            191868815,
            191888044,
            191876716,
            191872443,
            191870687,
            191861973,
            191884084,
            191876016,
            191884999,
            191872708,
            191868481,
            191885394,
            191877725,
            191881646,
            191878136,
            191868081
        ],
        "B": [
            191857536,
            191860028,
            191862778,
            191859727,
            191863844,
            191863773,
            191869782,
            191862839,
            191865613,
            191870245,
            191922097,
            191860380,
            191886295,
            191869480,
            191878024,
            191867772,
            191858170
        ],
        "A": [
            191850371,
            191851499,
            191851786,
            191863602,
            191852219,
            191852453,
            191850271,
            191850785,
            191852180,
            191856918,
            191851785,
            191850906,
            191855840,
            191856980,
            191850674,
            191858794,
            191850528
        ]
    },
    "name": "B. Following Directions",
    "statement": "Alperen is standing at the point (0,0). He is given a string s of length\r\nn and performs n moves. The i-th move is as follows: if s_i =\r\ntexttt{L}, then move one unit left; if s_i =\r\ntexttt{R}, then move one unit right; if s_i =\r\ntexttt{U}, then move one unit up; if s_i =\r\ntexttt{D}, then move one unit down. There is a candy at (1,1) (that is,\r\none unit above and one unit to the right of Alperenâ€™s starting point).\r\nYou need to determine if Alperen ever passes the candy.\r\n",
    "solutions": [
        "#include \"bits/stdc++.h\"\nusing namespace std;\n#define int               long long\n#define pb                push_back\n#define ppb               pop_back\n#define all(x)            (x).begin(),(x).end()\n#define uniq(v)           (v).erase(unique(all(v)),(v).end())\n#define sz(x)             (int)((x).size())\n#define f                 first\n#define s                 second\n#define pii               pair<int,int>\n#define rep(i,a,b)        for(int i = a; i < b; i++)\n#define repd(i,a,b)       for(int i = a; i >= b; i--)\n#define mem1(a)           memset(a, -1, sizeof(a))\n#define ppc               __builtin_popcount\n#define ppcll             __builtin_popcountll\n#define ll                long long\n#define ld                long double\n\ntemplate<typename T,typename U>istream& operator>>(istream& in,pair<T,U> &a){in>>a.f>>a.s;return in;}\ntemplate<typename T,typename U>ostream& operator<<(ostream& out,pair<T,U> a){out<<'('<<a.f<<\", \"<<a.s<<')';return out;}\ntemplate<typename T>ostream& operator<<(ostream&cout,vector<T>const&v){cout<<\"[\";rep(i,0,sz(v)){if(i)cout<<\", \";cout<<v[i];}return cout<<\"]\";}\ntemplate<typename T, typename U> static inline void amin(T &x, U y){ if(y<x) x=y; }\ntemplate<typename T, typename U> static inline void amax(T &x, U y){ if(x<y) x=y; }\n\n#ifndef ONLINE_JUDGE\n#define dbg(...) __f(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n      cout << name << \" : \" << arg1 << std::endl;\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n      const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << \" : \" << arg1 << \" | \"; __f(comma + 1, args...);\n}\n#else\n#define dbg(...)\n#endif\n\nconst ld pi = 3.14159265358979323846;\nconst char nl = '\\n';\nconst long long INF=1e18;\nconst int32_t M=1e9+7;\nconst int32_t MM=998244353;\n\nconst int N=1e6+5;      \nll n, m, q, k, l, r, x, y, z, a[N], b[N], c[N];\nstring s,t;\n\n\n\nvoid KSBR(){\n      cin >> n >> s;\n      int dx = 0, dy = 0;\n      bool ok = 0;\n      for(char c : s) {\n            if(c == 'U') dy++;\n            else if(c == 'R') dx++;\n            else if(c == 'D') dy--;\n            else dx--;\n            ok |= dx == 1 && dy == 1;\n      }\n      cout << (ok ? \"YES\\n\" : \"NO\\n\");\n} \nsigned main(){\n      ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n      #ifdef SIEVE\n            sieve();\n      #endif\n      #ifdef NCR\n            init();\n      #endif\n      int t=1, tc = 1;\n      cin>>t;\n      while(t--) {\n            //cout << \"Case \" << \"#\" << tc++ << \": \";\n            KSBR();\n      }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\B. Following Directions.json",
    "editorial_link": "https://codeforces.com//blog/entry/112282",
    "editorial": "We can keep track of our current point as we iterate over the string: if\r\n, then decrement (set ); if , then increment (set ); if , then increment\r\n(set ); if , then decrement (set ). Initially, set . If is ever true,\r\nthen we should output ; otherwise, we output .The time complexity is .\r\n",
    "hint": []
}