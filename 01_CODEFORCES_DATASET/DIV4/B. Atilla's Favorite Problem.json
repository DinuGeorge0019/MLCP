{
    "link": "https://codeforces.com//contest/1760/problem/B",
    "problemId": "1654039",
    "problem_idx": "B",
    "shortId": "1760B",
    "contest_number": "1760",
    "problem_submissions": {
        "F": [
            181970958,
            181950281,
            181958213,
            181965757,
            181944948,
            181970759,
            182137619,
            181978710,
            181975200,
            182010196,
            181966682,
            181975500,
            181975570,
            182068449,
            181971980,
            181969952,
            181982261,
            181977736,
            182001597,
            182004425,
            181959044,
            181960815
        ],
        "G": [
            181957910,
            181964483,
            181962348,
            181994157,
            181968737,
            181984162,
            181970230,
            181984643,
            181974424,
            181996148,
            181999866,
            182000308,
            182002923,
            181998982,
            182001075,
            182008221,
            181988981,
            181982666,
            181982848,
            182019928
        ],
        "D": [
            181925187,
            181924159,
            181926165,
            181933690,
            181961790,
            181933549,
            181948303,
            181930557,
            181924578,
            181929764,
            181933444,
            181924258,
            181934676,
            181927528,
            181934490,
            181940229,
            181930678,
            181939059,
            181941298,
            181931472
        ],
        "E": [
            181912280,
            181936624,
            181953534,
            181942834,
            181931986,
            181946510,
            181941618,
            181954737,
            181941455,
            181949963,
            181949921,
            181956622,
            181950008,
            181945918,
            181949626,
            181947544,
            181961711,
            181955020,
            181938685,
            181941972
        ],
        "C": [
            181906916,
            181917198,
            181915993,
            181915337,
            181922253,
            181919151,
            181912080,
            181916644,
            181911070,
            181912168,
            181914772,
            181914699,
            181915083,
            181911256,
            181917814,
            181906724,
            181913420,
            181922501,
            181911904,
            181915134
        ],
        "B": [
            181898180,
            181911813,
            181909417,
            181906573,
            181914704,
            181908082,
            181902374,
            181901695,
            181899205,
            181901224,
            181903533,
            181905511,
            181900583,
            181898635,
            181905113,
            181899276,
            181901539,
            181906560,
            181913258,
            181900918
        ],
        "A": [
            181894497,
            181906833,
            181903456,
            181901896,
            181908348,
            181897559,
            181894901,
            181894647,
            181894426,
            181894493,
            181895542,
            181896483,
            181894727,
            181894560,
            181895964,
            181894478,
            181895400,
            181897142,
            181898165,
            181894344
        ]
    },
    "name": "B. Atilla's Favorite Problem",
    "statement": "In order to write a string, Atilla needs to first learn all letters that\r\nare contained in the string.Atilla needs to write a message which can be\r\nrepresented as a string s. He asks you what is the minimum alphabet size\r\nrequired so that one can write this message.The alphabet of size x (1\r\nleq x\r\nleq 26) contains x Latin letters. For example an alphabet of size 4\r\ncontains the characters\r\ntexttt{a},\r\ntexttt{b},\r\ntexttt{c} and\r\ntexttt{d}.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define ios ios::sync_with_stdio(false); cin.tie(NULL);\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define fr first\n#define sc second\n#define int long long\n#define endl '\\n'\nvoid fopn(string name){\n  freopen((name+\".in\").c_str(),\"r\",stdin);\n  freopen((name+\".out\").c_str(),\"w\",stdout);\n}\nconst int INF=1e18,mod=1e9+7;\nint binpow(int a,int b){\n  int cur=1;\n  while(b){\n    if(b&1)\n      cur=(cur*a)%mod;\n    a*=a;\n    a%=mod;\n    b/=2;\n  }\n  return cur;\n}\nint n;\nvoid solve(){\n  cin>>n;\n  string s;\n  cin>>s;\n  int res=0;\n  for(int i=0;i<n;i++)\n    res=max(res,(s[i]-'a'+1)*1ll);\n  cout<<res<<endl;\n}\nmain(){\n  //fopn(\"balance\");\n  ios;\n  int T=1;\n  cin>>T;\n  while(T--){\n    solve();\n  }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\B. Atilla's Favorite Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/109348",
    "editorial": "To solve the problem we need to find the character with the highest\r\nalphabetical order in our string, since Atilla will need at least that\r\nalphabet size and wonât need more. To do this iterate through the string\r\nand find the character with the highest alphabetical order. Output the\r\nmaximum alphabetical order found. The solution can be done in\r\n",
    "hint": []
}