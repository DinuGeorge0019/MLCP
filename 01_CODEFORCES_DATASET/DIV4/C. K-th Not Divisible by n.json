{
    "link": "https://codeforces.com//contest/1352/problem/C",
    "problemId": "616895",
    "problem_idx": "C",
    "shortId": "1352C",
    "contest_number": "1352",
    "problem_submissions": {
        "F": [
            79519824,
            79501899,
            79508349,
            79516237,
            79506001,
            79518696,
            79523931,
            79522749,
            79483374,
            79531674,
            79537014,
            79535573,
            79524146,
            79555211,
            79561303
        ],
        "G": [
            79504466,
            79502943,
            79532774,
            79495765,
            79544513,
            79506723,
            79542393,
            79531344,
            79510893,
            79543566,
            79546643,
            79551234,
            79538383,
            79529159,
            79529270
        ],
        "E": [
            79499837,
            79510559,
            79500279,
            79502777,
            79499957,
            79521311,
            79498277,
            79498269,
            79508383,
            79522598,
            79517137,
            79514677,
            79515124,
            79516881,
            79536338,
            79518155
        ],
        "D": [
            79490796,
            79507180,
            79492758,
            79507592,
            79490945,
            79501213,
            79506138,
            79501463,
            79536636,
            79509984,
            79508108,
            79508294,
            79510176,
            79506745,
            79499572
        ],
        "C": [
            79486074,
            79480411,
            79484795,
            79474929,
            79484699,
            79485552,
            79489387,
            79492925,
            79514110,
            79492840,
            79498250,
            79488969,
            79497059,
            79489417,
            79480049
        ],
        "B": [
            79475380,
            79486583,
            79480176,
            79484075,
            79479831,
            79480077,
            79512493,
            79485299,
            79484046,
            79486297,
            79488494,
            79485859,
            79481804,
            79499936,
            79483390,
            79489564
        ],
        "A": [
            79473627,
            79474594,
            79473761,
            79489909,
            79473724,
            79475259,
            79473858,
            79474663,
            79474493,
            79476206,
            79474153,
            79474833,
            79475651,
            79474141,
            79474705
        ]
    },
    "name": "C. K-th Not Divisible by n",
    "statement": "You are given two positive integers n and k. Print the k-th positive\r\ninteger that is not divisible by n.For example, if n=3, and k=7, then\r\nall numbers that are not divisible by 3 are: 1, 2, 4, 5, 7, 8, 10, 11,\r\n13\r\ndots. The 7-th number among them is 10.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define int long long \nusing namespace std;\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);\n    long long powmod(long long a,long long b,long long mod) {\n        if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }\n       \n        if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }\n        else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }\n    }\n    long long gcd(long long a, long long b) {\n        if (a==0) return b;\n        if (b==0) return a;\n        if (a>b) return gcd(a%b,b); else return gcd(b%a,a);\n    }\n      int prime(int p) { // 1 - простое\n        for (int i=2;i*i<=p;i++) {\n            if (p%i==0 && i<p) return i;  \n        }\n        return 1;\n    }\n    \n     int inv(int a, int mod) {\n        return powmod(a,mod-2,mod); \n    }\n  int random_modul() {\n    \n    uniform_int_distribution <int> u1(1e9, 2e9);\n    int pepega=u1(rnd); \n    while (prime(pepega)!=1) pepega=u1(rnd); \n    return pepega; \n}\n \n    void solve () {\n       \n       \n         /* --------- */\n       \n    int a,k;\n    cin>>k>>a;\n    \n    int l=1;\n    int r=3000000000;\n    while (r-l>1) {\n        int mid=(l+r)/2;\n        int q=mid-mid/k;\n        //cout<<l<<\" \"<<r<<\" \"<<mid<<\" \"<<q<<\" \"<<a<<\"\\n\"; \n        if (q>=a) r=mid; else l=mid+1; \n       // cout<<l<<\" \"<<r<<\" \"<<mid<<\" \"<<q<<\" \"<<a<<\"\\n\"; \n    }\n    int mid=l;\n        int q=mid-mid/k;\n        if (q<a) l=r;\n        cout<<l<<\"\\n\"; \n         /* --------- */   \n            return;\n    }\n     \n     \n     \n    signed main() {\n       ios_base::sync_with_stdio(false);\n       cin.tie(0);\n       cout.tie(0); \n       \n       //  cout<<fixed<<setprecision(10); \n       \n          int tututu;\n          tututu=1;\n          \n       \n        cin>>tututu; // если нет запросов, то закоментить\n        \n          for (int qwerty=0;qwerty<tututu;qwerty++) solve();\n      \n       \n        return 0;\n    }"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\C. K-th Not Divisible by n.json",
    "editorial_link": "https://codeforces.com//blog/entry/77161",
    "editorial": "Suppose the answer is just -th positive integer which we should \"shift\r\nright\" by some number. Each multiplier of shifts our answer by . The\r\nnumber of such multipliers is , where is divided by rounded down. So the\r\nfinal answer is (-th positive integer with the required number of\r\nskipped integers multipliers of ).You can also use a binary search to\r\nsolve this problem :)\r\n",
    "hint": []
}