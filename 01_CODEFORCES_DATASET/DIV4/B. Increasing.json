{
    "link": "https://codeforces.com//contest/1742/problem/B",
    "problemId": "1584057",
    "problem_idx": "B",
    "shortId": "1742B",
    "contest_number": "1742",
    "problem_submissions": {
        "F": [
            176088434,
            175953044,
            175949290,
            175945773,
            175971876,
            175956188,
            175957305,
            175965256,
            175956666,
            175986547,
            175967228,
            175990142,
            175973277,
            175995491,
            175965274,
            175965118,
            175981574,
            175999797,
            175962842,
            175951834
        ],
        "G": [
            176088369,
            175967459,
            175958531,
            175962640,
            175942664,
            175961452,
            175978946,
            175980978,
            175996879,
            175961906,
            175978933,
            175980234,
            175974556,
            175962390,
            175992279,
            176006662,
            175998640,
            175988444,
            175973867,
            176011912
        ],
        "E": [
            175929743,
            175927916,
            175936666,
            175943925,
            175935324,
            175941784,
            175923888,
            175943247,
            175943495,
            175938334,
            175943285,
            175964043,
            175940442,
            175952017,
            175952132,
            175946109,
            175938097,
            175944046,
            175930209
        ],
        "D": [
            175922448,
            175917700,
            175931114,
            175925762,
            175903264,
            175930423,
            175912934,
            175931204,
            175933934,
            175950019,
            175928370,
            175923385,
            175918999,
            175933942,
            175925951,
            175937215,
            175924390,
            175931438,
            175917485
        ],
        "C": [
            175911573,
            175932064,
            175915066,
            175911109,
            175944918,
            175919477,
            175930954,
            175917347,
            175913405,
            175915900,
            175916495,
            175915920,
            175929840,
            175935658,
            175910930,
            175920672,
            175928041,
            175977210,
            175909445
        ],
        "B": [
            175896747,
            175892645,
            175906800,
            175897939,
            175914560,
            175901372,
            175894798,
            175901141,
            175900477,
            175897511,
            175903643,
            175902169,
            175897218,
            175901587,
            175895073,
            175910023,
            175914406,
            175902476,
            175898799
        ],
        "A": [
            175891011,
            175890670,
            175898330,
            175892580,
            175898679,
            175893875,
            175890834,
            175893408,
            175892512,
            175891126,
            175892054,
            175894976,
            175891245,
            175892986,
            175890956,
            175896962,
            175898765,
            175893870,
            175893102
        ]
    },
    "name": "B. Increasing",
    "statement": "You are given an array a of n positive integers. Determine if, by\r\nrearranging the elements, you can make the array strictly increasing. In\r\nother words, determine if it is possible to rearrange the elements such\r\nthat a_1 < a_2 <\r\ndots < a_n holds.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define int long long \nusing namespace std;\n\nvoid solve()\n{\n\tint n;\n\tcin>>n;\n\n\t vector<int> v(n);\n     map<int,int> m;\n     bool ans=true;\n\t for(int i=0;i<n;i++)\n\t {\n\t \t cin>>v[i];\n\t \t m[v[i]]++;\n\n\t \t if(m[v[i]]>1)\n\t \t \t ans=false;\n\t }\n\n\t \tsort(v.begin(),v.end());\n\n\t \tif(ans)\n\t \t\t cout<<\"YES\"<<endl;\n\t \t\telse\n\t \t\t\tcout<<\"NO\"<<endl;\n}\n\nint32_t main()\n{\n\t int t=1;\n\n\t cin>>t;\n\n\t while(t--)\n\t {\n\t \t solve();\n\t }\n\t return 0;\n}                                    "
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\B. Increasing.json",
    "editorial_link": "https://codeforces.com//blog/entry/107962",
    "editorial": "If there are two elements with the same value, then the answer is ,\r\nbecause neither of these values is less than the other.Otherwise, the\r\nanswer is , since we can just sort the array.The time complexity is or\r\ndepending on the implementation.\r\n"
}