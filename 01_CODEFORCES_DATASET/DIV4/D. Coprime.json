{"link": "https://codeforces.com//contest/1742/problem/D", "problemId": "1584059", "problem_idx": "D", "shortId": "1742D", "contest_number": "1742", "problem_submissions": {"F": [176088434, 175953044, 175949290, 175945773, 175971876, 175956188, 175957305, 175965256, 175956666, 175986547, 175967228, 175990142, 175973277, 175995491, 175965274, 175965118, 175981574, 175999797, 175962842, 175951834], "G": [176088369, 175967459, 175958531, 175962640, 175942664, 175961452, 175978946, 175980978, 175996879, 175961906, 175978933, 175980234, 175974556, 175962390, 175992279, 176006662, 175998640, 175988444, 175973867, 176011912], "E": [175929743, 175927916, 175936666, 175943925, 175935324, 175941784, 175923888, 175943247, 175943495, 175938334, 175943285, 175964043, 175940442, 175952017, 175952132, 175946109, 175938097, 175944046, 175930209], "D": [175922448, 175917700, 175931114, 175925762, 175903264, 175930423, 175912934, 175931204, 175933934, 175950019, 175928370, 175923385, 175918999, 175933942, 175925951, 175937215, 175924390, 175931438, 175917485], "C": [175911573, 175932064, 175915066, 175911109, 175944918, 175919477, 175930954, 175917347, 175913405, 175915900, 175916495, 175915920, 175929840, 175935658, 175910930, 175920672, 175928041, 175977210, 175909445], "B": [175896747, 175892645, 175906800, 175897939, 175914560, 175901372, 175894798, 175901141, 175900477, 175897511, 175903643, 175902169, 175897218, 175901587, 175895073, 175910023, 175914406, 175902476, 175898799], "A": [175891011, 175890670, 175898330, 175892580, 175898679, 175893875, 175890834, 175893408, 175892512, 175891126, 175892054, 175894976, 175891245, 175892986, 175890956, 175896962, 175898765, 175893870, 175893102]}, "name": "D. Coprime", "statement": "Given an array of n positive integers a_1, a_2,\r\ndots, a_n (1\r\nle a_i\r\nle 1000). Find the maximum value of i + j such that a_i and a_j are\r\ncoprime,^{\r\ndagger} or -1 if no such i, j exist.For example consider the array [1,\r\n3, 5, 2, 4, 7, 7]. The maximum value of i + j that can be obtained is\r\n5 + 7, since a_5 = 4 and a_7 = 7 are coprime.^{\r\ndagger} Two integers p and q are coprime if the only positive integer\r\nthat is a divisor of both of them is 1 (that is, their greatest common\r\ndivisor is 1).\r\n", "solutions": ["#include<bits/stdc++.h>\n#define int long long \nusing namespace std;\n\nvoid solve()\n{\n\tmap<int,int> m;\n     int n;\n     cin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\t{\n       int a;\n\n       cin>>a;\n      // cout<<a<<endl;\n       m[a]=i;\n\t}\n  int ans=-1;\n\tfor(int i=1;i<=1000;i++)\n\t{\n\t\t for(int j=1;j<=1000;j++)\n\t\t {\n\t\t \tif((m.find(i)==m.end()) or (m.find(j)==m.end()))\n\t\t \t\tcontinue;\n\n          //cout<<i<<\" \"<<j<<endl;\n\t\t \t if(__gcd(i,j)==1)\n\t\t \t \tans=max(ans,m[i]+m[j]);\n\t\t }\n\t}\n\n\tcout<<ans<<endl;\n}\n\nint32_t main()\n{\n\t int t=1;\n\n\t cin>>t;\n\n\t while(t--)\n\t {\n\t \t solve();\n\t }\n\t return 0;\n}                                    "], "input": "", "output": "", "tags": ["brute force", "greedy", "number theory"], "dificulty": "1100", "interactive": false}