{
    "link": "https://codeforces.com//contest/1760/problem/C",
    "problemId": "1654040",
    "problem_idx": "C",
    "shortId": "1760C",
    "contest_number": "1760",
    "problem_submissions": {
        "F": [
            181970958,
            181950281,
            181958213,
            181965757,
            181944948,
            181970759,
            182137619,
            181978710,
            181975200,
            182010196,
            181966682,
            181975500,
            181975570,
            182068449,
            181971980,
            181969952,
            181982261,
            181977736,
            182001597,
            182004425,
            181959044,
            181960815
        ],
        "G": [
            181957910,
            181964483,
            181962348,
            181994157,
            181968737,
            181984162,
            181970230,
            181984643,
            181974424,
            181996148,
            181999866,
            182000308,
            182002923,
            181998982,
            182001075,
            182008221,
            181988981,
            181982666,
            181982848,
            182019928
        ],
        "D": [
            181925187,
            181924159,
            181926165,
            181933690,
            181961790,
            181933549,
            181948303,
            181930557,
            181924578,
            181929764,
            181933444,
            181924258,
            181934676,
            181927528,
            181934490,
            181940229,
            181930678,
            181939059,
            181941298,
            181931472
        ],
        "E": [
            181912280,
            181936624,
            181953534,
            181942834,
            181931986,
            181946510,
            181941618,
            181954737,
            181941455,
            181949963,
            181949921,
            181956622,
            181950008,
            181945918,
            181949626,
            181947544,
            181961711,
            181955020,
            181938685,
            181941972
        ],
        "C": [
            181906916,
            181917198,
            181915993,
            181915337,
            181922253,
            181919151,
            181912080,
            181916644,
            181911070,
            181912168,
            181914772,
            181914699,
            181915083,
            181911256,
            181917814,
            181906724,
            181913420,
            181922501,
            181911904,
            181915134
        ],
        "B": [
            181898180,
            181911813,
            181909417,
            181906573,
            181914704,
            181908082,
            181902374,
            181901695,
            181899205,
            181901224,
            181903533,
            181905511,
            181900583,
            181898635,
            181905113,
            181899276,
            181901539,
            181906560,
            181913258,
            181900918
        ],
        "A": [
            181894497,
            181906833,
            181903456,
            181901896,
            181908348,
            181897559,
            181894901,
            181894647,
            181894426,
            181894493,
            181895542,
            181896483,
            181894727,
            181894560,
            181895964,
            181894478,
            181895400,
            181897142,
            181898165,
            181894344
        ]
    },
    "name": "C. Advantage",
    "statement": "There are n participants in a competition, participant i having a\r\nstrength of s_i. Every participant wonders how much of an advantage they\r\nhave over the other best participant. In other words, each participant i\r\nwants to know the difference between s_i and s_j, where j is the\r\nstrongest participant in the competition, not counting i (a difference\r\ncan be negative).So, they ask you for your help! For each i (1\r\nleq i\r\nleq n) output the difference between s_i and the maximum strength of any\r\nparticipant other than participant i.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define int long long\n#define pb push_back\n#define pf push_front\n#define ppf pop_front\n#define ppb pop_back\n#define F first\n#define S second\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\n\nvoid freo(string x) {\n  freopen((x + \".in\").c_str(), \"r\", stdin);\n  freopen((x + \".out\").c_str(), \"w\", stdout);\n}\n\nvoid solve() {\n  int n;\n  cin >> n;\n  vector <pair <int, int>> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].F;\n    a[i].S = i;\n  }\n  sort(all(a));\n  int ans[n];\n  for (int i = 0; i < n - 1; i++) ans[a[i].S] = a[i].F - a[n - 1].F;\n  ans[a[n - 1].S] = a[n - 1].F - a[n - 2].F;\n  for (int i = 0; i < n; i++) cout << ans[i] << ' ';\n  cout << '\\n';\n}\n\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  //freo(\"timeline\");\n  int tt = 1;\n  cin >> tt;\n  while (tt--) solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\C. Advantage.json",
    "editorial_link": "https://codeforces.com//blog/entry/109348",
    "editorial": "Make a copy of the array : call it . Sort in non-decreasing order, so\r\nthat is the maximum strength and the second maximum strength.Then for\r\neveryone but the best person, they should compare with the best person\r\nwho has strength . So for all such that , we should output . Otherwise,\r\noutput the second highest strength, which is the next best person.\r\n",
    "hint": []
}