{
    "link": "https://codeforces.com//contest/2065/problem/E",
    "problemId": "3192584",
    "problem_idx": "E",
    "shortId": "2065E",
    "contest_number": "2065",
    "problem_submissions": {
        "E": [
            305312354,
            305194637,
            305291861,
            305309920,
            305191466,
            305278591,
            305269404,
            305338868,
            305236207,
            305244718,
            305249851,
            305252901,
            305349934,
            305269590,
            305273100,
            305259568
        ],
        "H": [
            305281397,
            305277196,
            305224889,
            305409482,
            305298450
        ],
        "G": [
            305270269,
            305243226,
            305283571,
            305303347,
            305246836,
            305290460,
            305288465,
            305291691,
            305285379,
            305320630,
            305316576,
            305330919,
            305297977
        ],
        "F": [
            305207005,
            305224958,
            305268816,
            305205600,
            305222883,
            305216507,
            305222057,
            305260089,
            305263894,
            305280050,
            305293362,
            305295319,
            305317233
        ],
        "C2": [
            305180569,
            305175163,
            305195198,
            305161534,
            305164762,
            305196151,
            305168272,
            305203417,
            305207903,
            305224173,
            305208149,
            305192948,
            305194564,
            305189082
        ],
        "D": [
            305170929,
            305192657,
            305245769,
            305169854,
            305167651,
            305189554,
            305177158,
            305214051,
            305194947,
            305233657,
            305228720,
            305230467,
            305236708,
            305231361
        ],
        "C1": [
            305166664,
            305175397,
            305194143,
            305170322,
            305170303,
            305159411,
            305196219,
            305205049,
            305201974,
            305189516,
            305173737,
            305175472,
            305190744
        ],
        "B": [
            305156321,
            305139860,
            305165371,
            305145780,
            305145036,
            305176896,
            305147932,
            305189102,
            305149733,
            305181688,
            305181612,
            305177814,
            305157221,
            305200290
        ],
        "A": [
            305141292,
            305137241,
            305159681,
            305138394,
            305141442,
            305138107,
            305171143,
            305138752,
            305155403,
            305142146,
            305137327,
            305142353,
            305157006
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/139178",
    "editorial": "Problem Credits: Proof_by_QED Analysis: macaquedev SolutionClaim 1: It\r\nis impossible when Proof 1: The entire string will have a balance value\r\ngreater than .Claim 2: It is impossible when Proof 2: The maximal\r\npossible balance value of any string with ones and zeroes is , as it is\r\nimpossible due to the balance value definition.To complete the\r\nconstruction, WLOG (because you can invert the string to get the\r\nsolution for . Output zeroes, then output alternating ones and zeroes,\r\nthen output the remaining ones at the end. Note that with this\r\nconstruction, a substring with balance value exists (as you can take the\r\nfirst numbers), but a substring with balance value does not exist (as\r\ntaking more of the string cannot increase the balance value).\r\n",
    "name": "E. Skibidus and Rizz",
    "statement": "Given a binary string^{\r\ntext{ }} t, let x represent the number of\r\ntexttt{0} in t and y represent the number of\r\ntexttt{1} in t. Its is defined as the value of\r\nmax(x-y, y-x).Skibidus gives you three integers n, m, and k. He asks for\r\nyour help to construct a binary string s of length n+m with exactly n\r\ntexttt{0}’s and m\r\ntexttt{1}’s such that the maximum among all of its substrings^{\r\ntext{ }} is k. If it is not possible, output .^{\r\ntext{ }}A binary string only consists of characters\r\ntexttt{0} and\r\ntexttt{1}.^{\r\ntext{ }}A string a is a substring of a string b if a can be obtained\r\nfrom b by the deletion of several (possibly, zero or all) characters\r\nfrom the beginning and several (possibly, zero or all) characters from\r\nthe end.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\E. Skibidus and Rizz.json",
    "hint": []
}