{"link": "https://codeforces.com//contest/1873/problem/G", "problemId": "2221685", "problem_idx": "G", "shortId": "1873G", "contest_number": "1873", "problem_submissions": {"H": [224421005, 224434092, 224442548, 224444884, 224429353, 224447629, 224472578, 224490336, 224458760, 224430156, 224460036, 224462926, 224435033, 224472482, 224481019, 224449100, 224483491, 224433014, 224471630, 224479428, 224475403], "G": [224398181, 224401164, 224406254, 224419325, 224390522, 224417167, 224412361, 224491010, 224422915, 224393328, 224420921, 224431335, 224428005, 224461695, 224433846, 224414175, 224421807, 224419744, 224467586, 224447652, 224433855, 224437230], "F": [224372046, 224373122, 224369498, 224376246, 224381924, 224384518, 224380906, 224491225, 224481536, 224395224, 224381572, 224389323, 224371276, 224387884, 224382851, 224393366, 224366956, 224396140, 224366592, 224366858, 224395356, 224377385], "E": [224351156, 224353080, 224351100, 224360822, 224403130, 224369607, 224358415, 224491425, 224480694, 224357946, 224402533, 224366854, 224602579, 224359354, 224365737, 224362005, 224365741, 224361557, 224362119, 224348462, 224348889, 224364484, 224357405], "D": [224343671, 224346367, 224341008, 224347817, 224351861, 225552572, 224357522, 224350305, 224491613, 224346294, 224350871, 224349059, 224351191, 224335809, 224349390, 224353266, 224340309, 224353771, 224342181, 224337374, 224355000, 224348839], "C": [224337317, 224347812, 224333882, 224342868, 224346028, 224353403, 224341122, 224491794, 224473860, 224340219, 224345973, 224343076, 224341381, 224328086, 224345135, 224347766, 224333608, 224342383, 224333130, 224326218, 224346669, 224342595], "B": [224326298, 224314681, 224323874, 224324627, 224340005, 224323358, 224320429, 224491990, 224472953, 224328963, 224341975, 224350409, 224325787, 224320523, 224331239, 236759133, 224330676, 224329098, 224328659, 224318318, 224316431, 224328354, 224330230], "A": [224318982, 224312408, 224314383, 224315684, 224321438, 224315171, 224314404, 224492113, 224312687, 224319303, 224318527, 224317026, 224317557, 224312751, 224317923, 224324437, 224315252, 224312917, 224312520, 224316486, 224314729]}, "name": "G. ABBC or BACB", "statement": "You are given a string s made up of characters\r\ntexttt{A} and\r\ntexttt{B}. Initially you have no coins. You can perform two types of\r\noperations: Pick a substring^\r\ndagger\r\ntexttt{AB}, change it to\r\ntexttt{BC}, and get a coin. Pick a substring^\r\ndagger\r\ntexttt{BA}, change it to\r\ntexttt{CB}, and get a coin. What is the most number of coins you can\r\nobtain?^\r\ndagger A of length 2 is a sequence of two adjacent characters of a\r\nstring.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define vec vector\n#define read(x) for (auto &zu: (x)) cin >> zu;\n#define F first\n#define S second\n#define pb push_back\n#define eb emplace_back\n#define print(x, sep) {for(auto &zu: (x))cout << zu << (sep);cout << \"\\n\";}\n#define len(x) (long long)((x).size())\n#define magic ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)\n#define sep << \" \" <<\n#define all(x) (x).begin(), (x).end()\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing vi = vector<int>;\nusing str = string;\nusing pii = pair<int, int>;\nusing ld = long double;\n\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\n\nostream &operator <<(ostream &os, pii a){\n    return os << a.F sep a.S;\n}\n\nll inf = 1e18;\n\nvoid fa(bool ok){ cout << (ok ? \"YES\": \"NO\") << \"\\n\"; }\n\n\nvoid solve(){\n    str s; cin >> s;\n    int n = len(s);\n    int cnt = count(all(s), 'A');\n    int bc = n - cnt;\n    if(s[0] == 'B' or s.back() == 'B'){\n        cout << cnt << \"\\n\";\n        return;\n    }\n    int mn = inf;\n    int cur = 0;\n    int sc = 0;\n    s += 'B';\n    for(int j = 0; j <= n; ++j){\n        char i = s[j];\n        if(i == 'B'){\n            if(j > 0 and s[j] == s[j - 1]){\n                cout << cnt << \"\\n\";\n                return;\n            }\n            if(cur != 0){\n                mn = min(mn, cur);\n                sc++;\n            }\n            cur = 0;\n        }else{\n            cur++;\n        }\n    }\n    cout << cnt - mn << \"\\n\";\n}\n\nsigned main(){\n    magic;\n    int t = 1;\n    cin >> t;\n    while (t--){\n        solve();\n    }\n    return 0;\n\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1500", "interactive": false}