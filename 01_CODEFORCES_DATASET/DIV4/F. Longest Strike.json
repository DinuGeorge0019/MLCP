{"link": "https://codeforces.com//contest/1676/problem/F", "problemId": "1394658", "problem_idx": "F", "shortId": "1676F", "contest_number": "1676", "problem_submissions": {"H1": [156663309, 156671035, 156676406, 156677707, 156687383, 156685420, 156683017, 156685580, 156680845, 156671307, 156687981, 156692199, 156657699, 156687504, 156687346, 156669994, 156692215, 156690772, 156699306, 156674281], "F": [156662637, 156656235, 156665211, 156662718, 156672962, 156670420, 156669171, 156672700, 156689970, 156701445, 156668704, 156670980, 156692969, 156667724, 156672833, 156697894, 156674219, 156675205, 156671046, 156695991], "H2": [156662559, 156672919, 156681840, 156677592, 156687173, 156685234, 156690935, 156688441, 156684282, 156671711, 156695356, 156692679, 156656052, 156687092, 156691243, 156679289, 156697513, 156691027, 156699563, 156671734], "G": [156653552, 156661675, 156671235, 156675609, 156680563, 156678234, 156674526, 156681628, 156674365, 156683892, 156676420, 156679729, 156701067, 156674224, 156680025, 156686261, 156680343, 156680683, 156677057, 156684128], "D": [156645060, 156650467, 156648808, 156663990, 156656243, 156654084, 156654738, 156653252, 156652931, 156720716, 156654408, 156652941, 156637656, 156666271, 156684420, 156652544, 156655842, 156653648, 156661131, 156659068, 156666840], "E": [156637739, 156656814, 156654288, 156651298, 156645000, 156661246, 156659306, 156663832, 156658669, 156662700, 156660368, 156647103, 156671327, 156659242, 156657789, 156660550, 156665251, 156665346, 156657650, 156676846], "C": [156635303, 156637333, 156640687, 156644760, 156634239, 156639390, 156648512, 156642440, 156638160, 156643703, 156638666, 156653980, 156643726, 156635835, 156643174, 156650355, 156639499, 156649527, 156641083, 156646143], "B": [156625015, 156622909, 156630747, 156623442, 156623221, 156628681, 156623121, 156628287, 156626048, 156630150, 156624457, 156631684, 156634804, 156625307, 156634457, 156622363, 156628178, 156624635, 156624141, 156627356], "A": [156619295, 156618687, 156622372, 156618765, 156618606, 156621261, 156618635, 156621495, 156621071, 156622861, 156618818, 156619301, 156623952, 156618523, 156619829, 156618483, 156619228, 156619089, 156618766, 156619486]}, "name": "F. Longest Strike", "statement": "Given an array a of length n and an integer k, you are tasked to find\r\nany two numbers l and r (l\r\nleq r) such that: For each x (l\r\nleq x\r\nleq r), x appears in a at least k times (i.e. k or more array elements\r\nare equal to x). The value r-l is maximized. If no numbers satisfy the\r\nconditions, output .For example, if a=[11, 11, 12, 13, 13, 14, 14] and\r\nk=2, then: for l=12, r=14 the first condition fails because 12 does not\r\nappear at least k=2 times. for l=13, r=14 the first condition holds,\r\nbecause 13 occurs at least k=2 times in a and 14 occurs at least k=2\r\ntimes in a. for l=11, r=11 the first condition holds, because 11 occurs\r\nat least k=2 times in a. A pair of l and r for which the first condition\r\nholds and r-l is maximal is l = 13, r = 14.\r\n", "solutions": ["#include <algorithm>\n#include <iostream>\n#include <map>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 200020;\n\nint a[N];\nmap<int, int> cnt;\nvector<int> v;\n\nint main()\n{\n\tint t;\n\tint n, k;\n\tint i, j;\n\tint ans;\n\tint l, r;\n\t\n\tcin >> t;\n\twhile(t --)\n\t{\n\t\tcin >> n >> k;\n\t\tfor(i = 1; i <= n; i ++)\n\t\t\tcin >> a[i];\n\t\t\n\t\tfor(i = 1, cnt.clear(); i <= n; i ++)\n\t\t\tcnt[a[i]] ++;\n\t\tfor(i = 1, v.clear(); i <= n; i ++)\n\t\t\tif(cnt[a[i]] >= k)\n\t\t\t\tv.push_back(a[i]);\n\t\tsort(v.begin(), v.end());\n\t\tv.erase(unique(v.begin(), v.end()), v.end());\n\t\tfor(i = ans = 0, l = r = -1; i < (signed)v.size(); i = j + 1)\n\t\t{\n\t\t\tfor(j = i; j + 1 < (signed)v.size() && v[j] + 1 == v[j + 1]; j ++)\n\t\t\t\t;\n\t\t\tif(j - i + 1 > ans)\n\t\t\t{\n\t\t\t\tans = j - i + 1;\n\t\t\t\tl = v[i];\n\t\t\t\tr = v[j];\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(ans)\n\t\t\tcout << l << ' ' << r << endl;\n\t\telse\n\t\t\tcout << -1 << endl;\n\t}\n\t\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "dificulty": "1300", "interactive": false}