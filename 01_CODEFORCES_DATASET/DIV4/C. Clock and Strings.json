{
    "link": "https://codeforces.com//contest/1971/problem/C",
    "problemId": "2639202",
    "problem_idx": "C",
    "shortId": "1971C",
    "contest_number": "1971",
    "problem_submissions": {
        "H": [
            260362535,
            260822765,
            260371666,
            260397740,
            260572480
        ],
        "D": [
            260332793,
            260619164,
            260293834,
            260318943,
            260285866,
            260297223,
            260297493,
            260303962,
            260298800,
            260317833,
            260300621,
            260298969,
            260323296,
            260301330,
            260299938,
            260296348,
            260312172,
            260322602,
            260329709,
            260315708,
            260305548
        ],
        "G": [
            260318101,
            260346461,
            260370299,
            260338789,
            260349494,
            260332463,
            260365537,
            260357744,
            260381741,
            260380369,
            260379573,
            260352747,
            260352107,
            260384902,
            260374792,
            260378065,
            260370763,
            260387279,
            260388583,
            260387982,
            260407205
        ],
        "F": [
            260311914,
            260326795,
            260360111,
            260329968,
            260317275,
            260354916,
            260350423,
            260349119,
            260336202,
            260364676,
            260362498,
            260375270,
            260375077,
            260363942,
            260349196,
            260367191,
            260362817,
            260359755,
            260377835,
            260359255,
            260371639
        ],
        "E": [
            260296226,
            260351050,
            260341223,
            260311677,
            260340083,
            260316423,
            260323335,
            260314737,
            260293250,
            260315133,
            260326824,
            260311919,
            260316640,
            260321913,
            260370561,
            260332549,
            260341765,
            260316401,
            260330894,
            260329726
        ],
        "C": [
            260278529,
            260284360,
            260290560,
            260279843,
            260286479,
            260285484,
            260287457,
            260287187,
            260300025,
            260288268,
            260288121,
            260292046,
            260286067,
            260290066,
            260284121,
            260301524,
            260296295,
            260291452,
            260307122,
            260298071
        ],
        "B": [
            260270392,
            260278408,
            260278588,
            260271129,
            260279256,
            260286648,
            260272716,
            260276541,
            260281282,
            260277131,
            260275088,
            260277607,
            260304678,
            260302390,
            260274653,
            260305537,
            260293089,
            260279287,
            260277350,
            260280496
        ],
        "A": [
            260263134,
            260263036,
            260264613,
            260265354,
            260266308,
            260268227,
            260263320,
            260263681,
            260264134,
            260265189,
            260267586,
            260268682,
            260263966,
            260267644,
            260265934,
            260268360,
            260268497,
            260264950,
            260263900,
            260268651
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129364",
    "editorial": "There are many ways to implement the solution, but many involve a lot of\r\ncasework. Below is the shortest solution we know of.Walk around the\r\nclock in the order , , , . If we pass by two red strings or two blue\r\nstrings in a row, the strings don\u00e2\u0080\u0099t intersect; otherwise, they do.This\r\nis because if we don\u00e2\u0080\u0099t have two red or blue in a row, then the red and\r\nblue strings alternate, so there must be an intersection.\r\n",
    "name": "C. Clock and Strings",
    "statement": "There is a clock labeled with the numbers 1 through 12 in clockwise\r\norder, as shown below. Alice and Bob have four integers a, b, c, d not\r\nmore than 12. Alice ties a red string connecting a and b, and Bob ties a\r\nblue string connecting c and d. Do the strings intersect? (The strings\r\nare straight line segments.)\r\n",
    "solutions": [
        "#include <iostream>#include <set>#include <map>#include <vector>#include <algorithm>#include <cmath>using namespace std;typedef long long ll;const int N = 5e5 + 10;//int a[N];void solve() {\tint a, b, c, d;\tcin >> a >> b >> c >> d;\tif (a > b) swap(a, b);\tif (c > d) swap(c, d);\tif (a > c) {\t\tswap(a, c);\t\tswap(b, d);\t}\tif (b > c && b < d) {\t\tcout << \"YES\\n\";\t}\telse cout << \"NO\\n\";}int main() {\tint t = 1;\tcin >> t;\twhile (t--) {\t\tsolve();\t} }"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\C. Clock and Strings.json"
}