{
    "link": "https://codeforces.com//contest/2044/problem/A",
    "problemId": "3086851",
    "problem_idx": "A",
    "shortId": "2044A",
    "contest_number": "2044",
    "problem_submissions": {
        "F": [
            296933150,
            296655063,
            296674411,
            296677763,
            296669954,
            296737361,
            296736034,
            296677816,
            296696398,
            296687386,
            296699481,
            296685099,
            296683886,
            296731517,
            296707787,
            296654373,
            296909091,
            296715340,
            296702594,
            296696190
        ],
        "G2": [
            296699390,
            296704280,
            296704818,
            298531131,
            296733068,
            296720698,
            296741262,
            296739720,
            296746308,
            296911444,
            296724382
        ],
        "H": [
            296697535,
            296733580,
            296740491,
            296722038,
            296725052,
            296682267,
            297077288,
            296716701,
            296694010,
            296739316,
            296709869
        ],
        "G1": [
            296659278,
            296653404,
            296691524,
            296692154,
            296687763,
            296690954,
            296714485,
            296708514,
            296694498,
            296722350,
            296692196,
            296714994,
            296716472,
            296675871,
            296678021,
            296689324,
            296711355,
            296718740,
            296717970
        ],
        "C": [
            296648915,
            296601876,
            296603677,
            296620266,
            296604632,
            296657618,
            296599716,
            296615593,
            296628687,
            296619240,
            296670537,
            297235105,
            296605830,
            296636731,
            296609140,
            296608950,
            296601490,
            296614087,
            296616894,
            296625117
        ],
        "E": [
            296623207,
            296640913,
            296636063,
            296663200,
            296642784,
            296664551,
            296656718,
            296657876,
            296674393,
            296649940,
            296693263,
            296657969,
            296721389,
            296645567,
            296630574,
            296667579,
            296641163,
            296648307,
            296683859
        ],
        "D": [
            296600718,
            296615344,
            296619619,
            296653987,
            296656132,
            296660646,
            296617887,
            302243346,
            296634501,
            296657055,
            296633273,
            296682986,
            296625109,
            296724190,
            296673253,
            296639245,
            296646292,
            296630851,
            296634818,
            296656565
        ],
        "B": [
            296590822,
            296591602,
            296590194,
            296602338,
            296593446,
            296653034,
            296591762,
            296620268,
            296615058,
            296600993,
            296669880,
            297230228,
            296596906,
            296631957,
            296596806,
            296598863,
            296591614,
            296604776,
            296608256,
            296609998
        ],
        "A": [
            296584122,
            296592381,
            296592956,
            296589246,
            296585131,
            296651916,
            296584578,
            296583609,
            296596837,
            296592612,
            296669080,
            297228403,
            296585930,
            296627664,
            296585567,
            296590101,
            296585364,
            296594212,
            296600836,
            296587924
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/137306",
    "editorial": "Problem Credits: cry Analysis: macaquedev Solution For any , Cube can\r\nset = any integer between and inclusive, and set . cannot be less than ,\r\nbecause then it would be non-positive, and cannot be greater than ,\r\nbecause then would be less than , which would make it non-positive.\r\nTherefore the answer is just for all .\r\n",
    "name": "A. Easy Problem",
    "statement": "Cube is given an integer n. She wants to know how many ordered pairs of\r\npositive integers (a,b) there are such that a=n-b. Since Cube is not\r\nvery good at math, please help her!\r\n",
    "solutions": [
        "#include<bits/stdc++.h>#define int long long#define pii pair<int,int>#define pb push_back#define in insert#define fi first#define se second#define ld long double#define vvec vector<vector<int>>using namespace std;const int mod=1000000007;const int N=2e5+7;const int inf=1e17;int a[N];int n;Â signed main(){    ios_base::sync_with_stdio(0);    cin.tie(0);cout.tie(0);    //freopen(\"TASK.inp\",\"r\",stdin);    //freopen(\"TASK.out\",\"w\",stdout);    int t;cin>>t;    while(t--){        cin>>n;        cout<<n-1<<'\\n';    }}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\A. Easy Problem.json",
    "hint": []
}