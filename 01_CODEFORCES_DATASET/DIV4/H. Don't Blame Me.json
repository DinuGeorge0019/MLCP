{
    "link": "https://codeforces.com//contest/1829/problem/H",
    "problemId": "1910852",
    "problem_idx": "H",
    "shortId": "1829H",
    "contest_number": "1829",
    "problem_submissions": {
        "H": [
            204823379,
            204818792,
            204824435,
            204813179,
            204829782,
            204824942,
            204824891,
            204831475,
            204829116,
            204812904,
            204820548,
            204813548,
            204853253,
            204828645,
            204819513,
            204862189,
            205152847,
            205152752,
            204813060,
            204833324,
            204856160
        ],
        "G": [
            204812415,
            204813072,
            204810737,
            204879903,
            204839324,
            204821300,
            204841768,
            204857522,
            204849840,
            204855874,
            204857412,
            204830495,
            204842991,
            204871081,
            204827619,
            204848652,
            204850787,
            204810246,
            204848842,
            204865545,
            204844410
        ],
        "F": [
            204795243,
            204797952,
            204799327,
            204802021,
            204800634,
            204808672,
            204802889,
            204801401,
            204800071,
            204801746,
            204812847,
            204814366,
            204820676,
            204827118,
            204799702,
            204893918,
            204852930,
            204810147,
            204811532
        ],
        "E": [
            204786697,
            204777053,
            204782830,
            204792056,
            204789229,
            204792045,
            204785911,
            204789109,
            204791218,
            204784445,
            204807615,
            204797187,
            204801035,
            204803562,
            204786341,
            204786937,
            204794944,
            204788261
        ],
        "D": [
            204781736,
            204798820,
            204773405,
            204783612,
            204777255,
            204783304,
            204777409,
            204779547,
            204782415,
            204783282,
            204775953,
            204790781,
            204784060,
            204790345,
            204792489,
            204794503,
            205414060,
            204778870,
            204783934,
            204793712
        ],
        "C": [
            204773988,
            204765804,
            204766404,
            204774510,
            204770221,
            204771018,
            204768526,
            204767918,
            204770763,
            204769787,
            204782101,
            204773789,
            204770871,
            204776634,
            204772786,
            204772890,
            204774161,
            204774203
        ],
        "B": [
            204757299,
            204752820,
            204757449,
            204757921,
            204757841,
            204763094,
            204755414,
            204756116,
            204756282,
            204756481,
            204771921,
            204758336,
            204757819,
            204765627,
            204777479,
            204755801,
            204764288,
            204760239
        ],
        "A": [
            204751190,
            204753835,
            204751237,
            204751978,
            204752622,
            204755727,
            204750673,
            204750589,
            204750742,
            204752279,
            204758952,
            204750800,
            204751415,
            204751397,
            204755067,
            204750777,
            204751807
        ]
    },
    "name": "H. Don't Blame Me",
    "statement": "Sadly, the problem setter couldn\u2019t think of an interesting story, thus\r\nhe just asks you to solve the following problem.Given an array a\r\nconsisting of n positive integers, count the number of subsequences for\r\nwhich the bitwise\r\nmathsf{AND} of the elements in the subsequence has exactly k set bits in\r\nits binary representation. The answer may be large, so output it modulo\r\n10^9+7.Recall that the subsequence of an array a is a sequence that can\r\nbe obtained from a by removing some (possibly, zero) elements. For\r\nexample, [1, 2, 3], [3], [1, 3] are subsequences of [1, 2, 3], but [3,\r\n2] and [4, 5, 6] are not.Note that\r\nmathsf{AND} represents the bitwise AND operation.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#define bit(i, x) (x >> i & 1)\n#define _unique(x) (x).resize(unique((x).begin(), (x).end()) - (x).begin());\n#define all(x) (x).begin(), (x).end()\n#define rep(i, l, r) for(int i = l; i <= r; i++)\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<class T> using ordered_set =tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update> ;\nconst int N = 3e5 + 3;\nconst int mod = 1e9 + 7;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nint rnd(int l,int r) {\n    return l+rng()%(r-l+1);\n}\ntemplate<typename T> void cmax(T &a, T b) {a = max(a, b);}\n\n#define fi first\n#define se second\n\nint n, k, a[N];\nint f[N][70];\n\nvoid solve() {\n    cin >> n >> k;\n    rep(i, 1, n) cin >> a[i];\n\n    f[0][63] = 1;\n    rep(i, 1, n) {\n        rep(j, 0, 63) {\n            int u = (j & a[i]);\n            f[i][u] = (f[i][u] + f[i - 1][j]) % mod;\n        }\n        rep(j, 0, 63) f[i][j] = (f[i][j] + f[i - 1][j]) % mod;\n    }\n\n//    rep(i, 1, n) cout << f[i][1] << \" \";\n\n    int res = 0;\n    if (k == 6) res--;\n    rep(x, 0, 63) {\n        int cnt = __builtin_popcount(x);\n        if (cnt != k) continue;\n        res = (res + f[n][x]) % mod;\n        if (res < 0) res = (res + mod) % mod;\n//        cout << x << \" \";\n    }\n    res = (res + mod) % mod;\n    cout << res << \"\\n\";\n\n    rep(i, 0, n) rep(j, 0, 63) f[i][j] = 0;\n}\n\nsigned main()\n{\n    ios_base::sync_with_stdio(NULL); cin.tie(nullptr); cout.tie(nullptr);\n\n//    freopen(\"testing.txt\", \"r\", stdin);\n//    freopen(\"outputing.txt\", \"w\", stdout);\n    #define task \"\"\n//    freopen(task\".inp\", \"r\", stdin);\n//    freopen(task\".out\", \"w\", stdout);\n//    #define Kawaii\n    #ifdef Kawaii\n        auto starttime = chrono::high_resolution_clock::now();\n    #endif\n\n    int t; cin >> t;\n    while (t--) solve();\n\n\n\n\n\n\n    #ifdef Kawaii\n        auto endtime = chrono::high_resolution_clock::now();\n        auto duration = chrono::duration_cast<chrono::milliseconds>(endtime - starttime).count();\n        cout << \"\\n=====\" << \"\\nUsed: \" << duration << \" ms\\n\";\n    #endif\n\n    return 0 ^ 0;\n}\n// Okina Matara sitting in a wheelchair\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\H. Don't Blame Me.json",
    "editorial_link": "https://codeforces.com//blog/entry/116108",
    "editorial": "We can notice that the numbers are pretty small (up to ) and the AND\r\nvalues will be up to as well. Thus, we can count the number of\r\nsubsequences that have AND value equal to for all from to .We can do\r\nthis using dynamic programming. Let\u00e2\u0080\u0099s denote as the number of\r\nsubsequences using the first elements that have a total AND value of .\r\nThe transitions are quite simple. We can iterate over all values\r\nobtained previously and update the values respectively:We have three\r\ncases:The first case is when we don\u00e2\u0080\u0099t use the -th value. Here we just\r\nupdate the in the following way: .The second case is when we use the -th\r\nvalue. Here we update the in the following way: . The third case is\r\nstarting a new subsequence with just the -th element. Thus, we update .\r\n"
}