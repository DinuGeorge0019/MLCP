{
    "link": "https://codeforces.com//contest/2065/problem/G",
    "problemId": "3192586",
    "problem_idx": "G",
    "shortId": "2065G",
    "contest_number": "2065",
    "problem_submissions": {
        "E": [
            305312354,
            305194637,
            305291861,
            305309920,
            305191466,
            305278591,
            305269404,
            305338868,
            305236207,
            305244718,
            305249851,
            305252901,
            305349934,
            305269590,
            305273100,
            305259568
        ],
        "H": [
            305281397,
            305277196,
            305224889,
            305409482,
            305298450
        ],
        "G": [
            305270269,
            305243226,
            305283571,
            305303347,
            305246836,
            305290460,
            305288465,
            305291691,
            305285379,
            305320630,
            305316576,
            305330919,
            305297977
        ],
        "F": [
            305207005,
            305224958,
            305268816,
            305205600,
            305222883,
            305216507,
            305222057,
            305260089,
            305263894,
            305280050,
            305293362,
            305295319,
            305317233
        ],
        "C2": [
            305180569,
            305175163,
            305195198,
            305161534,
            305164762,
            305196151,
            305168272,
            305203417,
            305207903,
            305224173,
            305208149,
            305192948,
            305194564,
            305189082
        ],
        "D": [
            305170929,
            305192657,
            305245769,
            305169854,
            305167651,
            305189554,
            305177158,
            305214051,
            305194947,
            305233657,
            305228720,
            305230467,
            305236708,
            305231361
        ],
        "C1": [
            305166664,
            305175397,
            305194143,
            305170322,
            305170303,
            305159411,
            305196219,
            305205049,
            305201974,
            305189516,
            305173737,
            305175472,
            305190744
        ],
        "B": [
            305156321,
            305139860,
            305165371,
            305145780,
            305145036,
            305176896,
            305147932,
            305189102,
            305149733,
            305181688,
            305181612,
            305177814,
            305157221,
            305200290
        ],
        "A": [
            305141292,
            305137241,
            305159681,
            305138394,
            305141442,
            305138107,
            305171143,
            305138752,
            305155403,
            305142146,
            305137327,
            305142353,
            305157006
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/139178",
    "editorial": "Problem Credits: larush Analysis: Proof_by_QED SolutionLet and for any\r\npair that we count.First, let’s note that since , we don’t need to\r\nconsider any cases where or has more than two prime factors. There are\r\nthree cases we must consider: and are primes, and . Then, and has two\r\nprime factors. is a semiprime, and is a prime factor of . Then, . is a\r\nsemiprime, and . To count this, let’s first factorize each number in the\r\narray (either by trial division in or sieve precomputation). Let’s\r\nmaintain two maps, one mapping each semiprime present in the array to\r\nits number of occurrences, and one mapping each prime present in the\r\narray to its number of occurrences. Let be the number of occurrences of\r\n. Then, we can count each case as follows: Let the total number of\r\nprimes be . For each prime , its contribution will be . Note that we\r\nmust divide our result by as we would have counted each pair twice. For\r\neach semiprime , add . For each semiprime , add . All of these can be\r\ndone in time. Be sure to not use dictionary, counter, or unordered_map\r\nas they can be hacked!\r\n",
    "name": "G. Skibidus and Capping",
    "statement": "An integer x is considered a if it can be written as p\r\ncdot q where p and q are (not necessarily distinct) prime numbers. For\r\nexample, 9 is a since it can be written as 3\r\ncdot 3, and 3 is a prime number.Skibidus was given an array a containing\r\nn integers. He must report the number of pairs (i, j) such that i\r\nleq j and\r\noperatorname{lcm}(a_i, a_j)^{\r\ntext{ }} is .^{\r\ntext{ }}Given two integers x and y,\r\noperatorname{lcm}(x, y) denotes the least common multiple of x and y.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV4\\G. Skibidus and Capping.json",
    "hint": []
}