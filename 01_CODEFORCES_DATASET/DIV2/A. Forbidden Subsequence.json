{"link": "https://codeforces.com//contest/1617/problem/A", "problemId": "1229930", "problem_idx": "A", "shortId": "1617A", "contest_number": "1617", "problem_submissions": {"D2": [139528258, 139511137, 139522542, 139519708, 139520670, 139523783, 139518761, 139530052, 139554537, 139536292, 139522659, 139517981, 139512155, 139519772, 139538893, 139543913, 139531998], "E": [139517842, 139538424, 139497648, 139535975, 139534847, 139545980, 139543568, 139544780, 139542416, 139541142, 139546720, 139613086, 139612916], "D1": [139501429, 139511244, 139522629, 139519806, 139515622, 139513160, 139518872, 139525357, 139508478, 139513182, 139525031, 139501096, 139517883, 139503934, 139519698, 139505351, 139502672, 139513862], "C": [139489946, 139490132, 139526014, 139489601, 139500619, 139496413, 139508980, 139499423, 139495044, 139500428, 139504938, 139495573, 139492326, 139510250, 139491535, 139494498, 139495193, 139495421], "B": [139486471, 139485548, 139527692, 139491898, 139493048, 139490679, 139500877, 139490165, 139489596, 139492975, 139498385, 139485704, 139488427, 139502448, 139486742, 139489499, 139488312, 139490271], "A": [139485264, 139485036, 139530317, 139495566, 139490417, 139485662, 139494269, 139485815, 139485225, 139486039, 139485608, 139487143, 139485767, 139485406, 139485431, 139485561, 139486024, 139485975]}, "name": "A. Forbidden Subsequence", "statement": "You are given strings S and T, consisting of lowercase English letters.\r\nIt is guaranteed that T is a permutation of the string . Find string S\u2019,\r\nthe permutation of S such that T is a subsequence of S\u2019.String a is a of\r\nstring b if the number of occurrences of each distinct character is the\r\nsame in both strings.A string a is a of a string b if a can be obtained\r\nfrom b by deletion of several (possibly, zero or all) elements.A string\r\na is than a string b if and only if one of the following holds: a is a\r\nprefix of b, but a\r\nne b; in the first position where a and b differ, the string a has a\r\nletter that appears earlier in the alphabet than the corresponding\r\nletter in b.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint t;\n\tfor (cin >> t; t; t -= 1) {\n\t\tstring S, T;\n\t\tcin >> S >> T;\n\t\tranges::sort(S);\n\t\tif (T != \"abc\" or S[0] != 'a') cout << S << \"\\n\";\n\t\telse {\n\t\t\tfor (int i = 0; i < 26; i += 1)\n\t\t\t\tfor (char c : S) {\n\t\t\t\t\tif (i == 0 or i >= 3) {\n\t\t\t\t\t\tif (c == 'a' + i) cout << c;\n\t\t\t\t\t}\n\t\t\t\t\telse if (c == 'a' + 3 - i) cout << c;\n\t\t\t\t}\n\t\t\tcout << \"\\n\";\n\t\t}\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "dificulty": "800", "interactive": false}