{"link": "https://codeforces.com//contest/219/problem/A", "problemId": "1612", "problem_idx": "A", "shortId": "219A", "contest_number": "219", "problem_submissions": {"E": [2056692, 2057598, 2059507, 2059313, 2058485, 2059875, 2060513, 2061809], "D": [2054476, 2056179, 2055432, 2056594, 2055868, 2055622, 2055003, 2054658, 2057835, 2054870, 2055878, 2057367, 2056847, 2058567, 2057046, 2057149, 2057027, 2055883, 2057861, 2055024], "C": [2053819, 2054931, 2054300, 2055466, 2059881, 2054433, 2054050, 2054365, 2056216, 2055640, 2054836, 2056204, 2055132, 2054423, 2055456, 2055579, 2055867, 2057241, 2056728, 2057355], "B": [2053118, 2053816, 2053245, 2053935, 2054094, 2053542, 2053200, 2053567, 2054115, 2053868, 2053799, 2054198, 2053471, 2055129, 2054481, 2054228, 2054209, 2054214, 2054824, 2055919], "A": [2052729, 2052827, 2052736, 2054458, 2053049, 2052760, 2052727, 2052921, 2052934, 2052917, 2052885, 2053077, 2052795, 2052871, 2052942, 2052755, 2053281, 2053122, 2053028, 2052909]}, "name": "A. k-String", "statement": "A string is called a -string if it can be represented as concatenated\r\ncopies of some string. For example, the string \"\" is at the same time a\r\n1-string, a 2-string and a 4-string, but it is not a 3-string, a\r\n5-string, or a 6-string and so on. Obviously any string is a\r\n1-string.You are given a string , consisting of lowercase English\r\nletters and a positive integer . Your task is to reorder the letters in\r\nthe string in such a way that the resulting string is a -string.\r\n", "solutions": ["#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <queue>\n#include <set>\n#include <map>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cctype>\nusing namespace std;\n\n#define PB push_back\n#define MP make_pair\n\nconst double pi\t\t=\tacos(-1.0);\nconst double eps\t=\t1e-8;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\n\nint main()\n{\n\tint k,cnt[100]={0};\n\tchar s[10000];\n\tscanf(\"%d%s\",&k,s);\n\tfor (int i=0;s[i];++i) ++cnt[s[i]-'a'];\n\tfor (int i=0;i<26;++i)\n\tif (cnt[i]%k){\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}else cnt[i]/=k;\n\t\n\tfor (int i=0;i<k;++i){\n\t\tfor (int j=0;j<26;++j){\n\t\t\tfor (int t=0;t<cnt[j];++t)\n\t\t\t\tprintf(\"%c\",j+'a');\n\t\t}\n\t}\n\tputs(\"\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1000", "interactive": false}