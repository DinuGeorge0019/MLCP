{
    "link": "https://codeforces.com//contest/1604/problem/F",
    "problemId": "1163967",
    "problem_idx": "F",
    "shortId": "1604F",
    "contest_number": "1604",
    "problem_submissions": {
        "E": [
            133665266,
            133665330,
            133659495,
            133662698,
            133665754,
            133665695,
            133667913,
            133670360,
            133670641,
            133670753,
            133676806,
            133672911,
            133673104,
            133674991,
            133676775,
            133679158,
            133677605,
            133683514,
            133682221,
            133683564
        ],
        "D": [
            133632914,
            133634675,
            133646997,
            133640774,
            133645923,
            133643402,
            133646411,
            133639935,
            133645645,
            133646807,
            133649571,
            133658060,
            133654131,
            133649231,
            133663364,
            133653039,
            133654438,
            133653052,
            133653688,
            133661097
        ],
        "C": [
            133630411,
            133638085,
            133632064,
            133625685,
            133635045,
            133633934,
            133631657,
            133625520,
            133634475,
            133635072,
            133633002,
            133634939,
            133644373,
            133640982,
            133632402,
            133642673,
            133644331,
            133633661,
            133631330,
            133642353
        ],
        "B": [
            133625396,
            133621698,
            133626014,
            133619603,
            134090905,
            133624581,
            133623770,
            133621459,
            133634337,
            133628885,
            133630875,
            133627020,
            133622232,
            133627089,
            133635361,
            133623364,
            133634078,
            133623924,
            133625391,
            133624417,
            133621609
        ],
        "A": [
            133617599,
            133618208,
            133617413,
            133617141,
            134090791,
            133617364,
            133617444,
            133617618,
            133619480,
            133619710,
            133620324,
            133618064,
            133617109,
            133626724,
            133628136,
            133617925,
            133618078,
            133619587,
            133619073,
            133618066,
            133617633
        ],
        "F": [
            133735630,
            133826813
        ]
    },
    "name": "F. Artistic Partition",
    "statement": "For two positive integers l and r (l\r\nle r) let c(l, r) denote the number of integer pairs (i, j) such that l\r\nle i\r\nle j\r\nle r and\r\noperatorname{gcd}(i, j)\r\nge l. Here,\r\noperatorname{gcd}(i, j) is the greatest common divisor (GCD) of integers\r\ni and j.YouKn0wWho has two integers n and k where 1\r\nle k\r\nle n. Let f(n, k) denote the minimum of\r\nsum\r\nlimits_{i=1}^{k}{c(x_i+1,x_{i+1})} over all integer sequences 0=x_1\r\nlt x_2\r\nlt\r\nldots\r\nlt x_{k}\r\nlt x_{k+1}=n.Help YouKn0wWho find f(n, k).\r\n",
    "solutions": [
        "#pragma GCC optimize(2)\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n\n#include<iostream>\n#include<iomanip>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int Mxdt=100000,N=100000;\nconst long long INF=1e18;\nchar gc(){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,Mxdt,stdin),p1==p2)?EOF:*p1++;\n}\nint read(){\n\tint a=0;bool opt=0;char c=gc();\n\twhile(c<'0'||c>'9')opt|=c=='-',c=gc();\n\twhile(c>='0'&&c<='9')a=(a<<3)+(a<<1)+(c^48),c=gc();\n\treturn opt?-a:a;\n}\ninline char pc(char ch,bool bj){\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf+Mxdt;\n\treturn (bj||(*p1++=ch)&&p1==p2)&&fwrite(p1=buf,1,p1-buf,stdout),0;\n}\nvoid print(long long x)\n{\n\tif(x>9)print(x/10);\n\tpc(x%10^48,false);\n}\ninline void printnum(long long x,char ch)\n{\n\tif(x<0)pc('-',false),x=-x;\n\tprint(x),pc(ch,false);\n}\nint T,n,k,vis[100005],prime[100005],tot,phi[100005];long long f[100005][20];\nint root[20],cnt,ls[4000005],rs[4000005];long long Min[4000005],tag[4000005];\nint newnode(){\n\t++cnt;Min[cnt]=INF;return cnt;\n}\nvoid Tag(int p,int x){if(!p)return;\n\ttag[p]+=x;if(Min[p]<INF)Min[p]+=x;\n}\nvoid pushdown(int p){\n\tif(tag[p]){\n\t\tTag(ls[p],tag[p]);\n\t\tTag(rs[p],tag[p]);\n\t\ttag[p]=0;\n\t}\n}\nvoid Change(int&p,int l,int r,int L,int R,int v){\n\tif(!p)return;\n\tif(L<=l&&r<=R){Tag(p,v);return;}\n\tint mid=l+r>>1;pushdown(p);\n\tif(L<=mid)Change(ls[p],l,mid,L,R,v);\n\tif(R>mid)Change(rs[p],mid+1,r,L,R,v);\n\tMin[p]=min(Min[ls[p]],Min[rs[p]]);\n}\nvoid change(int&p,int l,int r,int x,long long v){\n\tif(!p)p=newnode();\n\tif(l==r){Min[p]=v;return;}\n\tint mid=l+r>>1;pushdown(p);\n\tif(x<=mid)change(ls[p],l,mid,x,v);\n\telse change(rs[p],mid+1,r,x,v);\n\tMin[p]=min(Min[ls[p]],Min[rs[p]]);\n}\nint main(){\n\tphi[1]=1;\n\tfor(int i=2;i<=N;++i){\n\t\tif(!vis[i]){\n\t\t\tprime[++tot]=i;\n\t\t\tphi[i]=i-1;\n\t\t}\n\t\tfor(int j=1;j<=tot;++j){\n\t\t\tif(i*prime[j]>N)break;\n\t\t\tvis[i*prime[j]]=1;\n\t\t\tphi[i*prime[j]]=phi[i]*(prime[j]-1);\n\t\t\tif(i%prime[j]==0){\n\t\t\t\tphi[i*prime[j]]=phi[i]*prime[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tMin[0]=INF;change(root[0],1,N,1,0);\n\tfor(int i=1;i<=N;++i){\n\t\tint x=i;\n\t\tfor(int j=1;j*j<=x;++j){\n\t\t\tif(x%j==0){\n\t\t\t\tfor(int k=0;k<=16;++k){\n\t\t\t\t\tChange(root[k],1,N,1,j,phi[x/j]);\n\t\t\t\t\tif(x/j!=j){\n\t\t\t\t\t\tChange(root[k],1,N,1,x/j,phi[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int j=1;j<=16;++j)f[i][j]=Min[root[j-1]];\n\t\tfor(int j=1;j<=16;++j){\n\t\t\tchange(root[j],1,N,i+1,f[i][j]);\n\t\t}\n\t}\n\tT=read()+1;\n\twhile(--T){\n\t\tn=read();k=read();\n\t\tif(k>16)printnum(n,'\\n');\n\t\telse printnum(f[n][k],'\\n');\n\t}\n\treturn pc('o',true);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "number theory"
    ],
    "dificulty": "3000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. Artistic Partition.json",
    "editorial_link": "https://codeforces.com//blog/entry/96460",
    "editorial": "For now, let c(l,r)\n denote the number of integer pairs (i,j)\n such that l?i<j?r\n (instead of i?j\n) and gcd(i,j)?l\n. So we can add n\n to f(n,k)\n in the end.\n\nWe can construct a straightforward dp where f(n,k)=mini=1n(f(i?1,k?1)+c(i,n))\n. As a straightforward implementation of c(l,r)\n takes O(n2log2n)\n time, the total complexity of finding f(n,k)\n will be O(n5log2n)\n which is quite shameful.\n\nLet's see how to do better.\n\nTiny Observation: c(x,2?x?1)=0\n. It's easy to see why it holds.\n\nCute Observation: f(n,k)=0\n when k>log2n\n.\n\nProof: Let L=log2n\n. Following the tiny observation, we can split the numbers as [1,1],[2,3],[4,7],\u0085,[2L?1,2L?1],[2L,n]\n without spending a single penny.\n\nNow we can solve f(n,k)\n in O(n4log22n)\n which is still shameful.\n\nSo we just have to find f(n,k)\n for 1?n?105\n and 1?k?17\n.\n\nLet's optimize the calculation for c(l,r)\n .\n\nc(l,r)=?i=lr?j=i+1r[gcd(i,j)?l]\n=?k=lr?i=lr?j=i+1r[gcd(i,j)=k]\n=?k=lr?i=l,k|ir?j=i+1,k|jr[gcd(i,j)=k]\n=?k=lr?i=1?rk??j=i+1?rk?[gcd(i?k,j?k)=k]\n=?k=lr?i=1?rk??j=i+1?rk?[gcd(i,j)=1]\n=?k=lr?i=1?rk??(i)\n=?k=lrp(?rk?)\nHere, p(x)=?i=1x?(i)\n. We can calculate p(x)\n for all x?n\n in O(nlog2n)\n and calculate c(l,r)\n in O(n)\n. So currently we can solve our problem in O(n3)\n which is still not to be proud of.\n\nBut notice that there can be at most 2m???\n distinct values in the sequence ?m1?,?m2?,\u0085,?mm?\n. Check this for a proof. So we can calculate c(l,r)\n in O(n???)\n which improves our solution to O(n2n???)\n.\n\nBut notice that as c(l,r)=?k=lrp(?rk?)\n we can precalculate the suffix sums for each r=1\n to n\n over all distinct values of ?rk?\n and then calculate c(l,r)\n in O(1)\n. This preprocessing will take O(nn???)\n time and O(nn???)\n memory. That means we can solve our problem O(n2+nn???)\n which is promising.\n\nCritical Observation: c(l,r)\n satisfies quadrangle inequality, that is c(i,k)+c(j,l)?c(i,l)+c(j,k)\n for i?j?k?l\n.\n\nProof: Let f(i,j,r)=?k=ijp(?rk?)\n. Here,\nc(i,l)+c(j,k)=f(i,l,l)+f(j,k,k)\n=(f(i,j?1,l)+f(j,l,l))+(f(i,k,k)?f(i,j?1,k))\n=f(i,j?1,l)+c(j,l)+c(i,k)?f(i,j?1,k)\n=c(i,k)+c(j,l)+f(i,j?1,l)?f(i,j?1,k)\nBut clearly f(i,j?1,l)?f(i,j?1,k)\n as l?k\n. So c(i,k)+c(j,l)?c(i,l)+c(j,k)\n.\n\nYou can learn more about quadrangle inequality and how it is useful from here. Read it because I won't describe why it helps us here.\n\nThis suggests that we can solve this problem using Divide and Conquer DP or 1D1D DP which will optimize our O(n2)\n part to O(nlog22n)\n.\n\nTo solve for multiple queries we can just precalculate f(n,k)\n for 1?n?105\n and 1?k?17\n.\n\nOverall complexity: O(nlog22n+nn???)\n where n=105\n.\n\nThis problem can also be solved using Divide and Conquer DP and by calculating c(l,r)\n in O(r?l?????)\n in each level which runs pretty fast in practice (for n=5?105\n, it takes less than 3s) but I don't have a rigorous upper bound on the time complexity. Check out my solution for more clarity."
}