{
    "link": "https://codeforces.com//contest/499/problem/B",
    "problemId": "19905",
    "problem_idx": "B",
    "shortId": "499B",
    "contest_number": "499",
    "problem_submissions": {
        "E": [
            9253382,
            9249937,
            9254400,
            9253914,
            9258427,
            9257640,
            9257147,
            9258089,
            9261739,
            9261692
        ],
        "D": [
            9251144,
            9251936,
            15380925,
            15380903,
            9347944
        ],
        "C": [
            9247911,
            9250694,
            9253182,
            9259776,
            9246632,
            9250112,
            9251006,
            9250760,
            9255795,
            9252835,
            9246700,
            9246228,
            9248570,
            9248780,
            9246821,
            9248766,
            9247714,
            9250833
        ],
        "B": [
            9246389,
            9245483,
            9248025,
            9248145,
            9248497,
            9246640,
            9249042,
            9254662,
            9256938,
            9245721,
            9246128,
            9245971,
            9248045,
            9246498,
            9248899,
            9248096
        ],
        "A": [
            9245543,
            9245348,
            9246338,
            9245638,
            9246309,
            9245625,
            9247454,
            9253414,
            9305487,
            9252605,
            9245370,
            9245544,
            9245374,
            9249324,
            9247099,
            9246649
        ]
    },
    "name": "B. Lecture",
    "statement": "You have a new professor of graph theory and he speaks very quickly. You\r\ncome up with the following plan to keep up with his lecture and make\r\nnotes.You know two languages, and the professor is giving the lecture in\r\nthe first one. The words in both languages consist of lowercase English\r\ncharacters, each language consists of several words. For each language,\r\nall words are distinct, i.e. they are spelled differently. Moreover, the\r\nwords of these languages have a one-to-one correspondence, that is, for\r\neach word in each language, there exists exactly one word in the other\r\nlanguage having has the same meaning.You can write down every word the\r\nprofessor says in either the first language or the second language. Of\r\ncourse, during the lecture you write down each word in the language in\r\nwhich the word is shorter. In case of equal lengths of the corresponding\r\nwords you prefer the word of the first language.You are given the text\r\nof the lecture the professor is going to read. Find out how the lecture\r\nwill be recorded in your notes.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define SZ(X) ((int)(X).size())\n#define ALL(X) (X).begin(), (X).end()\n#define REP(I, N) for (int I = 0; I < (N); ++I)\n#define REPP(I, A, B) for (int I = (A); I < (B); ++I)\n#define RI(X) scanf(\"%d\", &(X))\n#define RII(X, Y) scanf(\"%d%d\", &(X), &(Y))\n#define RIII(X, Y, Z) scanf(\"%d%d%d\", &(X), &(Y), &(Z))\n#define DRI(X) int (X); scanf(\"%d\", &X)\n#define DRII(X, Y) int X, Y; scanf(\"%d%d\", &X, &Y)\n#define DRIII(X, Y, Z) int X, Y, Z; scanf(\"%d%d%d\", &X, &Y, &Z)\n#define RS(X) scanf(\"%s\", (X))\n#define CASET int ___T, case_n = 1; scanf(\"%d \", &___T); while (___T-- > 0)\n#define MP make_pair\n#define PB push_back\n#define MS0(X) memset((X), 0, sizeof((X)))\n#define MS1(X) memset((X), -1, sizeof((X)))\n#define LEN(X) strlen(X)\n#define PII pair<int,int>\n#define VPII vector<pair<int,int> >\n#define PLL pair<long long,long long>\n#define F first\n#define S second\ntypedef long long LL;\nusing namespace std;\nconst int MOD = 1e9+7;\nconst int SIZE = 1e6+10;\nint main(){\n    map<string,string>A,B;\n    DRII(n,m);\n    REP(i,m){\n        string str1,str2;\n        cin>>str1>>str2;\n        A[str1]=str2;\n        B[str2]=str1;\n    }\n    REP(i,n){\n        if(i)printf(\" \");\n        string str;\n        cin>>str;\n        if(SZ(A[str])<SZ(str))cout<<A[str];\n        else cout<<str;\n    }\n    cout<<endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Lecture.json",
    "editorial_link": "https://codeforces.com/blog/entry/15353",
    "editorial": "In this task you must find for every string in the text the pair\r\ncontaining that string, and from two strings of that pair output the\r\nshortest one.\r\n",
    "hint": []
}