{
    "link": "https://codeforces.com//contest/1972/problem/D2",
    "problemId": "2620260",
    "problem_idx": "D2",
    "shortId": "1972D2",
    "contest_number": "1972",
    "problem_submissions": {
        "E": [
            258907706,
            258906689,
            258908735,
            258886738,
            258901485,
            258906022,
            258913488,
            258911752,
            258913907,
            258913999,
            258916450,
            258914641,
            258910690,
            258920127,
            258912063,
            258910772,
            258915135,
            258914430
        ],
        "D2": [
            258898687,
            258895159,
            258892501,
            258911037,
            258914022,
            258908970,
            258902827,
            258898337,
            258897157,
            258907327,
            258896398,
            258902164,
            258918202,
            258887350,
            258904678,
            258922033,
            258908345,
            258904117
        ],
        "D1": [
            258879224,
            258887924,
            258886804,
            258889175,
            258886155,
            258888199,
            258887247,
            258892352,
            258882986,
            258888686,
            258890551,
            258888559,
            258871438,
            258899829,
            258888037,
            258891042,
            258898086
        ],
        "C": [
            258877059,
            258881081,
            258882446,
            258885988,
            258877387,
            258876397,
            258878529,
            258880771,
            258878031,
            258885936,
            258887870,
            258877926,
            258892416,
            258887161,
            258883084,
            258878181,
            258887720
        ],
        "B": [
            258867491,
            258869795,
            258867759,
            258890058,
            258867358,
            258869952,
            258866940,
            258871940,
            258871253,
            258870378,
            258871631,
            258870002,
            258877290,
            258868779,
            258871179,
            258886225,
            258878415
        ],
        "A": [
            258864858,
            258865079,
            258865742,
            258864993,
            258865457,
            258865824,
            258864584,
            258865871,
            258870891,
            258866770,
            258865991,
            258864627,
            258872625,
            258865600,
            258867355,
            258871468,
            258864633
        ],
        "F": [
            258956362
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129027",
    "editorial": "Denote gcd(a,b)\n as d\n. Assume that a=pd\n and b=qd\n, then we know that gcd(p,q)=1\n.\n\n(a+b)?(b?gcd(a,b))?(pd+qd)?(qd2)?(p+q)?(qd)\n.\n\nWe know that gcd(p+q,q)=gcd(p,q)=1\n, so (p+q)?d\n.\n\nWe also know that p?1,q?1\n, so p<d=ap?np\n and thus p2<n\n. Similarly, we can prove q2<m\n.\n\nSo the number of (p,q)\n is O(nm????)=O(n+m)\n. We can enumerate each (p,q)\n such that gcd(p,q)=1\n and calculate the answer. (p+q)?d\n is required, so we add ?min{?np?,?mq?}p+q?\n.\n\nTime Complexity: O(?n+?m)\n.",
    "name": "D2. Reverse Card  Hard Version ",
    "statement": "You are given two positive integers n, m.Calculate the number of ordered\r\npairs (a, b) satisfying the following conditions: 1\r\nle a\r\nle n, 1\r\nle b\r\nle m; b\r\ncdot\r\ngcd(a,b) is a multiple of a+b.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std; #define int int64_t#define pb push_back#define pii pair<int, int>#define st first#define nd second#define sz(x) (int)(x).size()#define all(x) (x).begin(), (x).end() int32_t main() {\tios_base::sync_with_stdio(false);\tcin.tie(NULL);\t\tint t=1;\tcin >> t;\twhile(t--) {\t\tint n, m;\t\tcin >> n >> m;\t\tint cnt = 0;\t\tfor(int i=1;i<=min(n, m);i++) {\t\t\tif(i%2==0) cnt++;\t\t}\t\tfor(int p=1;p*p<=n;p++) {\t\t\tfor(int q=1;q*q<=m;q++) {\t\t\t\tif(p==q) continue;\t\t\t\tif(__gcd(p, q)>1) continue;\t\t\t\tint sx = (p+q)/__gcd(q, p+q);\t\t\t\tint cnt1 = n/(p*sx);\t\t\t\tint cnt2 = m/(q*sx);\t\t\t\tcnt += min(cnt1, cnt2);\t\t\t\t// for(int x=sx;;x+=sx) {\t\t\t\t// \tif(x*p>n) break;\t\t\t\t// \tif(x*q>m) break;\t\t\t\t// \tcnt++;\t\t\t\t// }\t\t\t}\t\t}\t\tcout << cnt << \"\\n\";\t}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D2. Reverse Card  Hard Version .json",
    "hint": []
}