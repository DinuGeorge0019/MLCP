{"link": "https://codeforces.com//contest/1682/problem/A", "problemId": "1407919", "problem_idx": "A", "shortId": "1682A", "contest_number": "1682", "problem_submissions": {"F": [158050798, 158077786, 158086685, 158039286, 158069961, 158110252, 158078476, 158248901], "D": [158028363, 158027200, 158028814, 158069864, 158039569, 158036346, 158030046, 158050282, 158037974, 158041123, 158041068, 158036998, 158042298, 158032953, 158041526, 158029661, 158056637, 158029667], "C": [158015824, 158013904, 158013129, 158070941, 158017154, 158019512, 158011476, 158017137, 158021257, 158018627, 158020682, 158022180, 158021471, 158039652, 158019776, 158037446, 158028182], "B": [158006894, 158007821, 158007318, 158071816, 158008119, 158009978, 158007984, 158008572, 158013225, 158009923, 158010666, 158009973, 158013386, 158010013, 158016214, 158026210, 158017588, 158010270], "A": [158004280, 158004512, 158004427, 158072894, 158004570, 158007124, 158005591, 158005462, 158005647, 158004983, 158006433, 158004812, 158012816, 158004216, 158013837, 158039471, 158008517, 158004710], "E": [158050246, 158056393, 158060063, 158060073, 158067774, 158059309, 158065396, 158067467, 158070762, 158068042, 158070815, 158073429, 158070617, 158069678, 158075426, 158064743]}, "name": "A. Palindromic Indices", "statement": "You are given a string s of length n.You have to count the number of\r\nindices i (1\r\nle i\r\nle n) such that the string after removing s_i from s still remains a\r\npalindrome. For example, consider s = \"\" If we remove s_1 from s, the\r\nstring becomes \"\" which is not a palindrome. If we remove s_2 from s,\r\nthe string becomes \"\" which is a palindrome. If we remove s_3 from s,\r\nthe string becomes \"\" which is not a palindrome. A palindrome is a\r\nstring that reads the same backward as forward. For example, \"\", \"\", \"\"\r\nare palindromes whereas \"\", \"\", \"\" are not.\r\n", "solutions": ["#include<iostream>\n#include<cstdio>\nusing namespace std;\nchar s[200005];\ninline int read()\n{\n\tint n=0,f=1,ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tn=n*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn n*f;\n}\nint main()\n{\n\tint t,n;\n\tt=read();\n\tfor(int greg=1;greg<=t;greg++)\n\t{\n\t\tn=read();\n\t\tscanf(\"%s\",s+1);\n\t\tint l=(n+1)/2,r=(n+1)/2;\n\t\twhile(l>=1&&s[l]==s[(n+1)/2])l--;\n\t\twhile(r<=n&&s[r]==s[(n+1)/2])r++;\n\t\tprintf(\"%d\\n\",r-l-1);\n\t}\n\treturn 0;\n} "], "input": "", "output": "", "tags": ["greedy", "strings"], "dificulty": "800", "interactive": false}