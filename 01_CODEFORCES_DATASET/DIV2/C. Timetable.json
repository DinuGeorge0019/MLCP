{"link": "https://codeforces.com//contest/1040/problem/C", "problemId": "215707", "problem_idx": "C", "shortId": "1040C", "contest_number": "1040", "problem_submissions": {"C": [42525959, 42516403, 42520218, 42509951], "E": [42518563, 42515513, 42516608, 42523906, 42523822, 42524914, 42516929, 42524932, 42514503, 42511196, 42518320, 42524442, 42528537], "B": [42514292, 42503342, 42502589, 42503781, 42507515, 42504172, 42504545, 42506438, 42505683, 42503118, 42546497, 42508433, 42507210, 42502341, 42521565, 42507357, 42501900, 42505960, 42504857], "A": [42508408, 42500521, 42500426, 42504655, 42500575, 42500946, 42519886, 42500455, 42501027, 42501547, 42500337, 42501761, 42500387, 42500370, 42517380, 42500340, 42502900, 42500738, 42500745], "D": [42506377, 42520704, 42524366, 42520672, 42517604, 42513292, 42525930, 42524271, 42524410, 42522170, 42511068, 42514990, 42523580, 42531287, 42513155]}, "name": "C. Timetable", "statement": "There are two bus stops denoted A and B, and there n buses that go from\r\nA to B every day. The shortest path from A to B takes t units of time\r\nbut some buses might take longer paths. Moreover, buses are allowed to\r\novertake each other during the route.At each station one can find a\r\nsorted list of moments of time when a bus is at this station. We denote\r\nthis list as a_1 < a_2 <\r\nldots < a_n for stop A and as b_1 < b_2 <\r\nldots < b_n for stop B. The buses always depart from A and arrive to B\r\naccording to the timetable, but the order in which the buses arrive may\r\ndiffer. Let\u2019s call an order of arrivals valid if each bus arrives at\r\nleast t units of time later than departs.It is known that for an order\r\nto be valid the latest possible arrival for the bus that departs at a_i\r\nis b_{x_i}, i.e. x_i-th in the timetable. In other words, for each i\r\nthere exists such a valid order of arrivals that the bus departed i-th\r\narrives x_i-th (and all other buses can arrive arbitrary), but there is\r\nno valid order of arrivals in which the i-th departed bus arrives (x_i +\r\n1)-th.Formally, let\u2019s call a permutation p_1, p_2,\r\nldots, p_n valid, if b_{p_i}\r\nge a_i + t for all i. Then x_i is the maximum value of p_i among all\r\nvalid permutations.You are given the sequences a_1, a_2,\r\nldots, a_n and x_1, x_2,\r\nldots, x_n, but not the arrival timetable. Find out any suitable\r\ntimetable for stop B b_1, b_2,\r\nldots, b_n or determine that there is no such timetable.\r\n", "solutions": ["#include<bits/stdc++.h>\n\nusing namespace std;\n\nlong long n, t;\nlong long a[200010], x[200010], c[200010], m[200010], b[200010], ans = 3000000000000000000LL;\n\nint main() {\n    scanf(\"%lld%lld\",&n,&t);\n    for(int i = 1 ; i <= n ; i++) scanf(\"%lld\",a + i), c[i] = ans;\n    for(int i = 1 ; i <= n ; i++) {\n        scanf(\"%lld\",x + i);\n        if(x[i] < x[i - 1] || x[i] < i) {\n            puts(\"No\");\n            return 0;\n        }\n        if(x[i] < n) c[x[i]] = a[x[i] + 1] + t - 1;\n        if(i != x[i] && x[i] >= 2) m[x[i] - 1] = a[x[i]] + t;\n    }\n    for(int i = n ; i >= 1 ; i--) {\n        ans = min(ans, c[i]);\n        if(ans < m[i]) {\n            puts(\"No\");\n            return 0;\n        }\n        b[i] = ans;\n        ans--;\n    }\n    puts(\"Yes\");\n    for(int i = 1 ; i <= n ; i++) printf(\"%lld \",b[i]);\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "math"], "dificulty": "2300", "interactive": false}