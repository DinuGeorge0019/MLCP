{
    "link": "https://codeforces.com//contest/584/problem/C",
    "problemId": "37438",
    "problem_idx": "C",
    "shortId": "584C",
    "contest_number": "584",
    "problem_submissions": {
        "E": [
            13448030,
            13450163,
            88104477,
            88104151,
            13449935,
            13451571,
            13453816,
            13453484,
            13454516,
            13452930,
            13453585,
            13458236,
            13456357,
            13455755,
            13455102,
            13451472,
            13456813,
            13457020
        ],
        "D": [
            13443353,
            13443270,
            13445578,
            13446859,
            13447606,
            13447543,
            13447741,
            13446415,
            13448718,
            13445763,
            13446604,
            13445778,
            13448530,
            13449671,
            13448690,
            13448138
        ],
        "C": [
            13441835,
            13441802,
            13442513,
            13443476,
            13443861,
            13443254,
            13444395,
            13444004,
            13444710,
            13440670,
            13444125,
            13442160,
            13444719,
            13448622,
            13442919,
            13445377
        ],
        "B": [
            13438000,
            13437696,
            13438159,
            13439238,
            13437543,
            13437817,
            13438697,
            13448122,
            13439114,
            13441730,
            13440843,
            13438018,
            13442212,
            13445708,
            13438788,
            13438618
        ],
        "A": [
            13435549,
            13436265,
            13435303,
            13436790,
            13435284,
            13435093,
            13435788,
            13441140,
            13435389,
            13435044,
            13435995,
            13435611,
            13438071,
            13435350,
            13435872,
            13435359
        ]
    },
    "name": "C. Marina and Vasya",
    "statement": "Marina loves strings of the same length and Vasya loves when there is a\r\nthird string, different from them in exactly characters. Help Vasya find\r\nat least one such string.More formally, you are given two strings , of\r\nlength and number . Let’s denote as the number of characters in which\r\nstrings and are different. Then your task will be to find any string of\r\nlength , such that . If there is no such string, print .\r\n",
    "solutions": [
        "#include <cstdio>\n\nconst int MAXN = 1E5 + 10;\n\nint n, m;\nchar a[MAXN], b[MAXN];\n\nchar diff(char a, char b){\n\tif (a != 'a' && b != 'a')\n\t\treturn 'a';\n\telse if (a != 'b' && b != 'b')\n\t\treturn 'b';\n\telse\n\t\treturn 'c';\n}\n\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tscanf(\"%s%s\", a, b);\n\tint cnt = 0;\n\tfor (int i = 0; i < n; ++i)\n\t\tcnt += a[i] != b[i];\n\tif (m >= cnt){\n\t\tint t = m - cnt;\n\t\tfor (int i = 0; i < n; ++i){\n\t\t\tif (a[i] != b[i])\n\t\t\t\tputchar(diff(a[i], b[i]));\n\t\t\telse if (t){\n\t\t\t\t--t;\n\t\t\t\tputchar(diff(a[i], b[i]));\n\t\t\t}\n\t\t\telse\n\t\t\t\tputchar(a[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\telse if (m * 2 >= cnt){\n\t\tint t = 0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tif (a[i] != b[i]){\n\t\t\t\t++t;\n\t\t\t\tif (t <= m * 2 - cnt)\n\t\t\t\t\tputchar(diff(a[i], b[i]));\n\t\t\t\telse if (t <= m)\n\t\t\t\t\tputchar(b[i]);\n\t\t\t\telse\n\t\t\t\t\tputchar(a[i]);\n\t\t\t}\n\t\t\telse\n\t\t\t\tputchar(a[i]);\n\t\tputs(\"\");\n\t}\n\telse\n\t\tputs(\"-1\");\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Marina and Vasya.json",
    "editorial_link": "https://codeforces.com//blog/entry/20766",
    "editorial": "Letâs find a string that will be equal to in positions and equal to in\r\npositions. Letâs denote = quantity of that . If , then letâs take\r\npositions such that and put in answer the same symbols. Then put in\r\nother positions symbols, which are not equal to corresponding in and (we\r\ncan do it, because we have 26 letters). Now . So, if there is an answer,\r\nwhere exists such that , , letâs denote , and then in any position such\r\nthat and (and in the same position in ) we will choose , such that and\r\n(we can do it because ). So, for every position from we can put symbols,\r\nequal to corresponding symbols in and . Now we have strings of length\r\n(such that for every i) and we should find string such that . We know\r\nthat , so may be equal to corresponding in or to corresponding in or not\r\nequal to and to . So, we need, at least, symbols in answer to make and .\r\nConsequently, if , the answer is , and else just put first symbols in\r\nanswer from , next symbols from , and others wonât be equal to\r\ncorresponding in and . Solution works in .\r\n",
    "hint": []
}