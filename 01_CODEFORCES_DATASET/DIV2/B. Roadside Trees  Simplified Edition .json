{
    "link": "https://codeforces.com//contest/265/problem/B",
    "problemId": "2522",
    "problem_idx": "B",
    "shortId": "265B",
    "contest_number": "265",
    "problem_submissions": {
        "E": [
            2970019,
            2969814,
            2971806,
            2972492,
            2972772,
            2970736
        ],
        "D": [
            2968205,
            2967708,
            2967237,
            2968473,
            2967999,
            2967756,
            2971736,
            2969158,
            2969904,
            2966908,
            2968608,
            2970666,
            2968760,
            2968451,
            2969659,
            2966606,
            2966951
        ],
        "B": [
            2967771,
            2964317,
            2964787,
            2965276,
            2964902,
            2964309,
            2965378,
            2964669,
            3347348,
            2965826,
            2967252,
            2965239,
            2965920,
            2965167,
            2966106,
            2964904,
            2964503,
            2964762
        ],
        "A": [
            2964815,
            2963268,
            2963454,
            2963256,
            2963422,
            2963233,
            2963728,
            2963215,
            3347333,
            2964025,
            2963259,
            2963495,
            2963155,
            2963704,
            2964004,
            2965452,
            2963951,
            2963523
        ],
        "C": [
            2966018,
            2965716,
            2966720,
            2966022,
            2965227,
            2966717,
            2966330,
            2966665,
            2964777,
            2966177,
            2966801,
            2966556,
            2966845,
            2967129,
            2965425
        ]
    },
    "name": "B. Roadside Trees  Simplified Edition ",
    "statement": "Squirrel Liss loves nuts. There are trees (numbered to from west to\r\neast) along a street and there is a delicious nut on the top of each\r\ntree. The height of the tree is . Liss wants to eat all nuts.Now Liss is\r\non the root of the tree with the number . In one second Liss can perform\r\none of the following actions: Walk up or down one unit on a tree. Eat a\r\nnut on the top of the current tree. Jump to the next tree. In this\r\naction the height of Liss doesn’t change. More formally, when Liss is at\r\nheight of the tree (), she jumps to height of the tree . This action\r\ncan’t be performed if . Compute the minimal time (in seconds) required\r\nto eat all nuts.\r\n",
    "solutions": [
        "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n\nusing namespace std;\n\nint n;\n\nint H;\n\nint NH = 0;\n\nint ans = 0;\n\nint main()\n{\n\tcin >> n;\n\tcin >> H;\n\tans += (NH = H) + 1;\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tans++;\n\t\tcin >> H;\n\t\tif (H >= NH)\n\t\t{\n\t\t\tans += H - NH + 1;\n\t\t\tNH = H;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans += NH - H + 1;\n\t\t\tNH = H;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Roadside Trees  Simplified Edition .json",
    "editorial_link": "https://codeforces.com//blog/entry/6478",
    "editorial": "The optimal path of Liss is as follows: First she starts from the root of tree 1. Walk up the tree to the top and eat a nut. Walk down to the height min(h1,?h2). Jump to the tree 2. Walk up the tree to the top and eat a nut. Walk down to the height min(h2,?h3), ... and so on.\n",
    "hint": []
}