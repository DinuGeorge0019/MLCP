{
    "link": "https://codeforces.com//contest/373/problem/C",
    "problemId": "4179",
    "problem_idx": "C",
    "shortId": "373C",
    "contest_number": "373",
    "problem_submissions": {
        "B": [
            5429569,
            5424746,
            5426227,
            5425475,
            5422342,
            5425081,
            5426099,
            5425032,
            5425412,
            5436342,
            5426611,
            5423163,
            5423178,
            5425228
        ],
        "A": [
            5424943,
            5421235,
            5422611,
            5422595,
            5433909,
            5421126,
            5421160,
            5429834,
            5421622,
            5425841,
            5421003,
            5421386,
            5421391,
            5421143,
            5421194,
            5421261,
            5421350
        ],
        "C": [
            5424210,
            5422375,
            5423370,
            5427068,
            5424824,
            5427055,
            5423334,
            5430375,
            5422559,
            5425280,
            5426953,
            5423867,
            5424356,
            5424874,
            5424522,
            5427759,
            5426510,
            5427253
        ],
        "D": [
            5423101,
            5430116,
            5431564,
            5429533,
            5429205,
            5429913,
            5431205,
            5429336,
            5429567
        ],
        "E": [
            5431047,
            5431253,
            5445684,
            5431420,
            5431441
        ]
    },
    "name": "C. Counting Kangaroos is Fun",
    "statement": "There are kangaroos with pockets. Each kangaroo has a size (integer\r\nnumber). A kangaroo can go into another kangarooâ€™s pocket if and only if\r\nthe size of kangaroo who hold the kangaroo is at least twice as large as\r\nthe size of kangaroo who is held.Each kangaroo can hold at most one\r\nkangaroo, and the kangaroo who is held by another kangaroo cannot hold\r\nany kangaroos.The kangaroo who is held by another kangaroo cannot be\r\nvisible from outside. Please, find a plan of holding kangaroos with the\r\nminimal number of kangaroos who is visible.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int maxN = 500000 + 10;\n\nint a[maxN];\nint N, ans;\n\nbool check(int limit)\n{\n\tint r = limit + 1;\n\tfor (int l = 1; l <= limit; ++l) {\n\t\twhile (r <= N && a[r] < a[l] * 2) ++r;\n\t\tif (r > N) return false;\n\t\telse ++r;\n\t}\n\treturn true;\n}\n\nint main()\n{\n\tscanf(\"%d\", &N);\n\tfor (int i = 1; i <= N; ++i) scanf(\"%d\", &a[i]);\n\tsort(a + 1, a + N + 1);\n\tfor (int l = 0, r = N; l <= r;) {\n\t\tint m = (l + r) / 2;\n\t\tif (check(m)) ans = m, l = m + 1;\n\t\telse r = m - 1;\n\t}\n\tprintf(\"%d\\n\", N - ans);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Counting Kangaroos is Fun.json",
    "editorial_link": "https://codeforces.com//blog/entry/9944",
    "editorial": "Because of the number of holding-held relations is at most , We can\r\nassume that first half of kangaroos do not hold any kangaroos, and last\r\nhalf of kangaroos are not held by any kangaroos. So we can split\r\nkangaroos in two set, such that first set contains the kangaroos whose\r\nsize is in smaller half and second set contains the kangaroos whose size\r\nis in larger half, and use easy greedy algorithm. The time conplexity is\r\nO(N log N) for sorting and O(N) for greedy, so the time conplexity is\r\nO(N log N). my solution: http://ideone.com/w8ch4w\r\n",
    "hint": []
}