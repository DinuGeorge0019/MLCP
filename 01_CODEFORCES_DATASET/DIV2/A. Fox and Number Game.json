{
    "link": "https://codeforces.com//contest/389/problem/A",
    "problemId": "6400",
    "problem_idx": "A",
    "shortId": "389A",
    "contest_number": "389",
    "problem_submissions": {
        "E": [
            5882910,
            5882969,
            5882623,
            5886206,
            5886237,
            5881359,
            5883942,
            5881790,
            5884306,
            5884558,
            5884891,
            5884833,
            5884246,
            5880945,
            5884605,
            5886580,
            5885214
        ],
        "D": [
            5882237,
            5881458,
            5884902,
            5885057,
            5884493,
            5888919,
            5897772,
            5897726,
            49394197,
            5884093
        ],
        "C": [
            5876164,
            5877416,
            5877602,
            5880188,
            5879512,
            5878436,
            5876090,
            5875802,
            5879892,
            5879347,
            5879938,
            5880138,
            5877698,
            5882032,
            5878167,
            5879899,
            5881858,
            5880866,
            5879314
        ],
        "B": [
            5874987,
            5875378,
            5875703,
            5877586,
            5879904,
            5875848,
            5877618,
            5882807,
            5877301,
            5876662,
            5877573,
            5877789,
            5875543,
            5877904,
            5887635,
            5878765,
            5877214,
            5882962
        ],
        "A": [
            5874673,
            5874703,
            5875132,
            5876405,
            5874775,
            5878441,
            5882215,
            5875954,
            5875157,
            5875352,
            5876029,
            5874692,
            5875210,
            5881846,
            5875551,
            5874698,
            5879937
        ]
    },
    "name": "A. Fox and Number Game",
    "statement": "Fox Ciel is playing a game with numbers now. Ciel has positive integers:\r\n, , ..., . She can do the following operation as many times as needed:\r\nselect two different indexes and such that > hold, and then apply\r\nassignment = - . The goal is to make the sum of all numbers as small as\r\npossible.Please help Ciel to find this minimal sum.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; i++)\n#define FORD(i,a,b) for(int i=(a),_b=(b); i>=_b; i--)\n#define REP(i,a) for(int i=0,_a=(a); i<_a; i++)\n\n#define DEBUG(x) { cout << #x << \" = \"; cout << x << endl; }\n#define PR(a,n) { cout << #a << \" = \"; FOR(_,1,n) cout << a[_] << ' '; cout << endl; }\n#define PR0(a,n) { cout << #a << \" = \"; REP(_,n) cout << a[_] << ' '; cout << endl; }\nusing namespace std;\n\nint a[111];\n\nint main() {\n    ios :: sync_with_stdio(false);\n    int n;\n    while (cin >> n) {\n        FOR(i,1,n) cin >> a[i];\n        int g = a[1];\n        FOR(i,2,n) g = __gcd(g, a[i]);\n        cout << g * n << endl;\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Fox and Number Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/10629",
    "editorial": "First we know that: in the optimal solution, all number will be equal:\r\notherwise we can pick a and b (a < b) then do b = b a, it will make the\r\nanswer better. Then we need an observation: after each operation, the\r\nGCD (Greatest common divisor) of all number will remain same. It can be\r\nproved by this lemma: if g is a divisor of all number of x[], then after\r\nthe operation, g is still the divisor of these numbers, and vice versa.\r\nSo in the end, all number will become the GCD of x[]. Another solution\r\nthat can pass is: While there exist x[i] > x[j], then do x[i] -= x[j].\r\nWe can select arbitrary i and j if there exist more than 1 choice.\r\n"
}