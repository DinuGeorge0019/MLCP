{
    "link": "https://codeforces.com//contest/851/problem/E",
    "problemId": "120885",
    "problem_idx": "E",
    "shortId": "851E",
    "contest_number": "851",
    "problem_submissions": {
        "E": [
            30068335,
            30088610,
            30075383,
            30074656,
            30075499,
            30099471,
            30089475,
            30079934,
            30225549,
            30079493,
            30080353
        ],
        "C": [
            30064829,
            30063738,
            30067780,
            30065175,
            30067016,
            30064360,
            30092204,
            30067962,
            30063996,
            30066468,
            30071739,
            30067172,
            30067766,
            30070923,
            30067394,
            30066218,
            30067344,
            30067420,
            30068901,
            30074150,
            30069613
        ],
        "D": [
            30061008,
            30067092,
            30060975,
            30106276,
            30071770,
            30072710,
            30072481,
            30067736,
            30073597,
            30067133,
            30077107,
            30095645,
            30095491,
            30095471,
            30092613,
            30092592,
            30075289,
            30088915,
            30074494,
            30070223
        ],
        "A": [
            30056920,
            30055494,
            30061723,
            30055450,
            30059422,
            30055778,
            30056976,
            30055742,
            30059653,
            30055763,
            30057287,
            30071928,
            30055841,
            30056295,
            30055999,
            30055697,
            30056608,
            30056227
        ],
        "B": [
            30056298,
            30060194,
            30065585,
            30059352,
            30057773,
            30059430,
            30060590,
            30059837,
            30061170,
            30063102,
            30063850,
            30057800,
            30058628,
            30061891,
            30058378,
            30059786,
            30064409,
            30060348
        ]
    },
    "name": "E. Arpa and a game with Mojtaba",
    "statement": "Mojtaba and Arpa are playing a game. They have a list of numbers in the\r\ngame.In a player\u2019s turn, he chooses a number (where is a prime number\r\nand is a positive integer) such that divides at least one number in the\r\nlist. For each number in the list divisible by , call it , the player\r\nwill delete and add to the list. The player who can not make a valid\r\nchoice of and loses.Mojtaba starts the game and the players\r\nalternatively make moves. Determine which one of players will be the\r\nwinner if both players play optimally.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define N 8000009\nusing namespace std;\n\nint n,cnt;\nstruct node{ int x,y; }a[N];\nstruct hsh{\n\tint tot,fst[20000003],pnt[N],len[N],nxt[N];\n\tvoid ins(int x,int y){\n\t\tint z=x%20000003;\n\t\tpnt[++tot]=x; len[tot]=y; nxt[tot]=fst[z]; fst[z]=tot;\n\t}\n\tint calc(int x){\n\t\tint i,z=x%20000003;\n\t\tfor (i=fst[z]; i; i=nxt[i]) if (pnt[i]==x) return len[i];\n\t\treturn -1;\n\t}\n}sg;\nbool cmp(node u,node v){\n\treturn u.x<v.x;\n}\nint dp(int x){\n\tint tmp=sg.calc(x);\n\tif (tmp!=-1) return tmp;\n\tint i; bool vis[33];\n\tmemset(vis,0,sizeof(vis));\n\tfor (i=1; x>>i; i++) vis[dp(x>>i|x&(1<<i)-1)]=1;\n\tfor (i=0; vis[i]; i++); sg.ins(x,i); return i;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tint i,j,x;\n\tfor (i=1; i<=n; i++){\n\t\tscanf(\"%d\",&x);\n\t\tfor (j=2; j*j<=x; j++) if (!(x%j)){\n\t\t\ta[++cnt].x=j;\n\t\t\tfor (; !(x%j); x/=j) a[cnt].y++;\n\t\t}\n\t\tif (x>1){\n\t\t\ta[++cnt].x=x; a[cnt].y=1;\n\t\t}\n\t}\n\tsort(a+1,a+cnt+1,cmp);\n\tint ans=0;\n\tfor (i=j=1; i<=cnt; i=j){\n\t\tint tmp=0,now=0;\n\t\tfor (; j<=cnt && a[i].x==a[j].x; j++){\n\t\t\ttmp++; now|=1<<a[j].y;\n\t\t}\n\t\tif (tmp<n) now|=1;\n\t\tans^=dp(now);\n\t}\n\tputs((ans>0)?\"Mojtaba\":\"Arpa\");\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "dp",
        "games"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Arpa and a game with Mojtaba.json",
    "editorial_link": "https://codeforces.com//blog/entry/54317",
    "editorial": "The problem is separate for each prime, so we will calculate Grundy number for each prime and xor these number to find the answer.\n\nNow let's solve the problem for some prime like p. Let's show the game with a mask, i-th bit of mask is true if and only if there is a number in the list such that it is divisible by pi and it isn't divisible by pk?+?1.\n\nWhen some player chooses p and some k in his turn, in fact, he converts mask to (mask\u00bbk)|(mask&((1\u00abk)?-?1)). So, for each k, there is an edge between state (mask\u00bbk)|(mask&((1\u00abk)?-?1)) and mask. We can caluclate the grundy numbers by this way."
}