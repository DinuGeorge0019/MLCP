{
    "link": "https://codeforces.com//contest/1763/problem/B",
    "problemId": "1701405",
    "problem_idx": "B",
    "shortId": "1763B",
    "contest_number": "1763",
    "problem_submissions": {
        "C": [
            186020491,
            186014618,
            185970901,
            185991875,
            185997685,
            185982190,
            185984673,
            185981496,
            186009097,
            185973602,
            185981183,
            185984898,
            185981738,
            185976906,
            185977465
        ],
        "E": [
            185998794,
            185987416,
            185979003,
            185992302,
            186002492,
            185989056,
            185993894,
            186011236,
            186008232,
            186008161,
            185976627,
            185996244,
            185993843,
            185994524,
            185987330,
            185983728,
            186014244,
            186001030
        ],
        "D": [
            185995867,
            185980597,
            185999397,
            185984870,
            186005387,
            185985568,
            186006095,
            185982650,
            186022836,
            186016207,
            186014411,
            186000359,
            186003392,
            186001911,
            185991399,
            185982901,
            185988475,
            185988930,
            185993150,
            185994062
        ],
        "F": [
            185990818,
            186680252,
            186011772,
            186580963
        ],
        "B": [
            185964960,
            185964863,
            185976136,
            185966519,
            185970293,
            185964032,
            185970337,
            185968669,
            185966545,
            185964632,
            185967215,
            185968457,
            185964010,
            185967589,
            185966627,
            185963830,
            185965988,
            185967114,
            185965147
        ],
        "A": [
            185961159,
            185960941,
            185963086,
            185960882,
            185963700,
            185960926,
            185963152,
            185960960,
            185961563,
            185960964,
            185961279,
            185962189,
            185960916,
            185963432,
            185961791,
            185961037,
            185961928,
            185961021,
            185961325
        ]
    },
    "name": "B. Incinerate",
    "statement": "To destroy humanity, The Monster Association sent n monsters to Earth’s\r\nsurface. The i-th monster has health h_i and power p_i.With his last\r\nresort attack, True Spiral Incineration Cannon, Genos can deal k damage\r\nto all monsters alive. In other words, Genos can reduce the health of\r\nall monsters by k (if k > 0) with a single attack. However, after every\r\nattack Genos makes, the monsters advance. With their combined efforts,\r\nthey reduce Genos’ attack damage by the power of the ^\r\ndaggerweakest monster ^\r\nddaggeralive. In other words, the minimum p_i among all currently living\r\nmonsters is subtracted from the value of k after each attack.^\r\ndaggerThe Weakest monster is the one with the least power.^\r\nddaggerA monster is alive if its health is strictly greater than 0.Will\r\nGenos be successful in killing all the monsters?\r\n",
    "solutions": [
        "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<set>\nusing namespace std;\npair<int, int>a[100000];\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tint t;\n\tcin >> t;\n\tfor (; t--;) {\n\t\tint n, k;\n\t\tcin >> n >> k;\n\t\tfor (int i = 0; i ^ n; ++i)\n\t\t\tcin >> a[i].first;\n\t\tfor (int i = 0; i ^ n; ++i)\n\t\t\tcin >> a[i].second;\n\t\tmultiset<int>s;\n\t\tfor (int i = 0; i ^ n; ++i)\n\t\t\ts.emplace(a[i].second);\n\t\tsort(a, a + n);\n\t\tint pre = k;\n\t\tfor (int i = 0; i < n && k > 0;) {\n\t\t\tint j = i;\n\t\t\tfor (; j < n && a[j].first <= pre; ++j)\n\t\t\t\ts.erase(s.find(a[j].second));\n\t\t\tif (s.size())\n\t\t\t\tk -= *s.begin();\n\t\t\tpre += k;\n\t\t\ti = j;\n\t\t}\n\t\tcout << (k <= 0 ? \"NO\\n\" : \"YES\\n\");\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "math",
        "sortings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Incinerate.json",
    "editorial_link": "https://codeforces.com//blog/entry/110278",
    "editorial": "Solution 1Sort the monsters in ascending order of their powers.Now we\r\niterate through the monsters while maintaining the current attack power\r\nand the total damage dealt.Only the monsters with health greater than\r\nthe total damage dealt are considered alive, and every time we encounter\r\nsuch a monster it will be the weakest one at the current time, thus we\r\nneed to attack until the total damage dealt exceeds the current\r\nmonsterâs health while lowering our attack power by its power each\r\ntime.If we can kill all the monsters in this way, the answer is YES,\r\notherwise it is NO.Time Complexity:\r\n",
    "hint": [
        "Hint 1 What if the array was sorted?",
        "Hint 2 Is it necessary to decrease the health of each monster manually after every attack?"
    ]
}