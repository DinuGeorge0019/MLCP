{"link": "https://codeforces.com//contest/798/problem/D", "problemId": "103643", "problem_idx": "D", "shortId": "798D", "contest_number": "798", "problem_submissions": {"D": [26563361, 26555687, 26556558, 26548301, 26556247, 26549650, 26559045, 26559072, 26562479, 26559512, 26557370, 26565613, 26560823, 26560731, 26560614, 26557462, 26562930], "C": [26558945, 26549095, 26548532, 26556590, 26548339, 26561843, 26551518, 26554123, 26550774, 26560992, 26554844, 26558176, 26554570, 26556784, 26555580, 26562658, 26554462], "E": [26558449, 26556461], "A": [26551397, 26540062, 26540758, 26542419, 26540657, 26540976, 26540919, 26543392, 26540558, 26556942, 26542590, 26540075, 26542212, 26540478, 26550484, 26540647, 26543658], "B": [26542968, 26545085, 26543813, 26543222, 26543887, 26545396, 26544929, 26543829, 26543862, 26557828, 26543387, 26544400, 26546204, 26542828, 26550157, 26544256, 26545856]}, "name": "D. Mike and distribution", "statement": "Mike has always been thinking about the harshness of social inequality.\r\nHe\u2019s so obsessed with it that sometimes it even affects him while\r\nsolving problems. At the moment, Mike has two sequences of positive\r\nintegers and of length each which he uses to ask people some quite\r\npeculiar questions.To test you on how good are you at spotting\r\ninequality in life, he wants you to find an subset of the original\r\nsequence. To be more precise, he wants you to select numbers such that\r\nfor and elements in are distinct. Sequence will represent indices of\r\nelements that you\u2019ll select from both sequences. He calls such a subset\r\nif and only if the following conditions are satisfied: is than the sum\r\nof all elements from sequence , and is than the sum of all elements from\r\nthe sequence . Also, should be smaller or equal to because it will be to\r\neasy to find sequence if he allowed you to select too many elements!Mike\r\nguarantees you that a solution will always exist given the conditions\r\ndescribed above, so please help him satisfy his curiosity!\r\n", "solutions": ["#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<set>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pr;\nconst double pi=acos(-1);\n#define rep(i,a,n) for(int i=a;i<=n;i++)\n#define per(i,n,a) for(int i=n;i>=a;i--)\n#define Rep(i,u) for(int i=head[u];i;i=Next[i])\n#define clr(a) memset(a,0,sizeof a)\n#define pb push_back\n#define mp make_pair\n#define putk() putchar(' ')\nld eps=1e-9;\nll pp=1000000007;\nll mo(ll a,ll pp){if(a>=0 && a<pp)return a;a%=pp;if(a<0)a+=pp;return a;}\nll powmod(ll a,ll b,ll pp){ll ans=1;for(;b;b>>=1,a=mo(a*a,pp))if(b&1)ans=mo(ans*a,pp);return ans;}\nll gcd(ll a,ll b){return (!b)?a:gcd(b,a%b);}\nll read(){\n\tll ans=0;\n\tchar last=' ',ch=getchar();\n\twhile(ch<'0' || ch>'9')last=ch,ch=getchar();\n\twhile(ch>='0' && ch<='9')ans=ans*10+ch-'0',ch=getchar();\n\tif(last=='-')ans=-ans;\n\treturn ans;\n}\nvoid put(ll a){\n\tif(a<0)putchar('-'),a=-a;\n\tint top=0,q[20];\n\twhile(a)q[++top]=a%10,a/=10;\n\ttop=max(top,1);\n\twhile(top--)putchar('0'+q[top+1]);\n}\n//head\n#define N 110000\nint n,ans[N];\nstruct node{\n\tint x,y,id;\n}a[N];\nll s1,s2,t1,t2;\nbool cmp(node a,node b){\n\treturn a.x>b.x;\n}\nbool operator <(node a,node b){\n\treturn (a.y<b.y)||(a.y==b.y && a.x<b.x);\n}\nbool operator >(node a,node b){\n\treturn (a.y>b.y)||(a.y==b.y && a.x>b.x);\n}\nset<node>q;\nset<node>::iterator it;\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\n\tn=read();\n\trep(i,1,n)a[i].x=read(),s1+=a[i].x;\n\trep(i,1,n)a[i].y=read(),s2+=a[i].y;\n\trep(i,1,n)a[i].id=i;\n\tsort(a+1,a+n+1,cmp);\n\tint lim=n/2+1;\n\tfor(int i=1+n%2;i<=n;i+=2)\n\t\tif(a[i].y>a[i+1].y)\n\t\t\tans[a[i].id]=1;\n\t\telse ans[a[i+1].id]=1;\n\trep(i,1,n)\n\t\tif(!ans[a[i].id]){\n\t\t\tans[a[i].id]=1;\n\t\t\tbreak;\n\t\t}\n\t\tcout<<lim<<endl;\n\trep(i,1,n)\n\t\tif(ans[i])printf(\"%d \",i);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "sortings"], "dificulty": "2400", "interactive": false}