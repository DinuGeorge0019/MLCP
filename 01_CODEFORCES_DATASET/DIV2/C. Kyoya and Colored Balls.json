{
    "link": "https://codeforces.com//contest/554/problem/C",
    "problemId": "30334",
    "problem_idx": "C",
    "shortId": "554C",
    "contest_number": "554",
    "problem_submissions": {
        "E": [
            11746850,
            13764219,
            11830271,
            11766455,
            11747742,
            11764575,
            11774480,
            11758934
        ],
        "D": [
            11744247,
            11746031,
            11746127,
            11746736,
            11747437,
            11747976,
            11748267,
            11748288,
            11748030,
            11747975,
            11748807,
            11748413,
            11748580,
            11748828,
            11748890,
            11748381,
            11749085
        ],
        "C": [
            11742733,
            13059738,
            11743053,
            11742819,
            11744097,
            11744323,
            11744579,
            11743917,
            11744372,
            11744426,
            11744294,
            11742165,
            11745064,
            11744621,
            11745770,
            11745295,
            11745901,
            11746169,
            11746135
        ],
        "B": [
            11739897,
            11739637,
            11740204,
            11741151,
            11741795,
            11740995,
            11741073,
            11742270,
            11742529,
            11741366,
            11746029,
            11742271,
            11745027,
            11741791,
            11743493,
            11742926,
            11741663,
            11742603,
            11739370
        ],
        "A": [
            11739226,
            11738997,
            11739151,
            11739277,
            11740303,
            11739365,
            11739663,
            11740298,
            11740792,
            11739964,
            11739524,
            11740207,
            11741321,
            11739802,
            11762460,
            11740503,
            11740511,
            11739943,
            11741469,
            11738906
        ]
    },
    "name": "C. Kyoya and Colored Balls",
    "statement": "Kyoya Ootori has a bag with colored balls that are colored with\r\ndifferent colors. The colors are labeled from to . Balls of the same\r\ncolor are indistinguishable. He draws balls from the bag one by one\r\nuntil the bag is empty. He noticed that he drew the last ball of color\r\nbefore drawing the last ball of color for all from to . Now he wonders\r\nhow many different ways this can happen.\r\n",
    "solutions": [
        "#pragma comment (linker, \"/STACK:1000000000\")\n\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <map>\n#include <string>\n\nusing namespace std;\n\nconst int maxn = 1010;\n\nlong long fac[maxn];\n\nconst long long p = (int)1e9 + 7;\n\nint k;\nint n;\nint v[maxn];\nlong long dp[maxn][maxn];\nint sum[maxn];\nlong long c[maxn][maxn];\n\nlong long go_c(int n, int k) {\n\tif (c[n][k] == 0) {\n\t\tif (k == 0) {\n\t\t\tc[n][k] = 1;\n\t\t} else if (n == k) {\n\t\t\tc[n][k] = 1;\n\t\t} else {\n\t\t\tc[n][k] = go_c(n - 1, k - 1) + go_c(n - 1, k);\n\t\t\tc[n][k] %= p;\n\t\t}\n\t}\n\n\treturn c[n][k];\n}\n\nlong long go(int pos, int last) {\n\tif (dp[pos][last] == -1) {\n\t\tif (pos == k) {\n\t\t\tdp[pos][last] = 1;\n\t\t} else {\n\t\t\tdp[pos][last] = 0;\n\t\t\tint cnt = k - pos - 1;\n\t\t\tfor (int i = last + 1; i <= n - cnt; i++) {\n\t\t\t\tif (pos != 0 && i - sum[pos - 1] - 1 >= v[pos] - 1) {\n\t\t\t\t\tdp[pos][last] += go_c(i - sum[pos - 1] - 1, v[pos] - 1) * go(pos + 1, i);\n\t\t\t\t\tdp[pos][last] %= p;\n\t\t\t\t} else if (pos == 0 && i - 1 >= v[pos] - 1) {\n\t\t\t\t\tdp[pos][last] += go_c(i - 1, v[pos] - 1) * go(pos + 1, i);\n\t\t\t\t\tdp[pos][last] %= p;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dp[pos][last];\n}\n\nint main() {\n\tscanf(\"%d\", &k);\n\n\tfor (int i = 0; i < k; i++) {\n\t\tscanf(\"%d\", &v[i]);\n\n\t\tif (i == 0) {\n\t\t\tsum[i] = v[i];\n\t\t} else {\n\t\t\tsum[i] = sum[i - 1] + v[i];\n\t\t}\n\t\tn += v[i];\n\t}\n\n\tmemset(dp, -1, sizeof dp);\n\tcout << go(0, 0);\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Kyoya and Colored Balls.json",
    "editorial_link": "https://codeforces.com//blog/entry/18842",
    "editorial": "Let fi be the number of ways to solve the problem using only the first i colors. We want to compute fn.\n\nInitially, we have f1??=??1, since we only have a single color, and balls of the same color are indistinguishable. Now, to go from fi to fi?+?1, we note that we need to put at a ball of color i?+?1 at the very end, but the other balls of color i?+?1 can go anywhere in the sequence. The number of ways to arrange the balls of color i?+?1 is  (minus one because we need to put one ball at the very end). Using this recurrence, we can solve for fn.\n\nThus, we need to precompute binomial coefficients then evaluate the product."
}