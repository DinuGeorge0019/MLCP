{
    "link": "https://codeforces.com//contest/586/problem/A",
    "problemId": "37958",
    "problem_idx": "A",
    "shortId": "586A",
    "contest_number": "586",
    "problem_submissions": {
        "E": [
            13567845,
            13568877,
            13567853,
            13571593,
            13562355,
            13570559,
            13579749,
            13567129,
            13570139
        ],
        "D": [
            13563971,
            13564646,
            13563820,
            13563849,
            13568951,
            13565926,
            13563286,
            13563128,
            13565918,
            13569000,
            13562593,
            13568454,
            13565954,
            13567393,
            13563819,
            13565909,
            13564075,
            13560941,
            13564537
        ],
        "B": [
            13561164,
            13559370,
            13561077,
            13558098,
            13558769,
            13558957,
            13558122,
            13557083,
            13558517,
            13557741,
            13558248,
            13560292,
            13558220,
            13559476,
            13561469,
            13562240,
            13557548,
            13564661,
            13557987
        ],
        "C": [
            13559947,
            13561510,
            13560077,
            13560242,
            13565430,
            13561001,
            13561323,
            13561803,
            13560466,
            13563719,
            13560353,
            13561394,
            13595712,
            13558752,
            13585345,
            13584852
        ],
        "A": [
            13555951,
            13556306,
            13555953,
            13556124,
            13556417,
            13555955,
            13556118,
            13555916,
            13556066,
            13556106,
            13556370,
            13556409,
            13556782,
            13556040,
            13560781,
            13556168,
            13565723,
            13556286
        ],
        "F": [
            13577881,
            13572057,
            13572184,
            13570880,
            13588219,
            13595048,
            13570334,
            13571136,
            13601061
        ]
    },
    "name": "A. Alena s Schedule",
    "statement": "Alena has successfully passed the entrance exams to the university and\r\nis now looking forward to start studying.One two-hour lesson at the\r\nRussian university is traditionally called a , it lasts for two academic\r\nhours (an academic hour is equal to 45 minutes).The University works in\r\nsuch a way that every day it holds exactly lessons. Depending on the\r\nschedule of a particular group of students, on a given day, some pairs\r\nmay actually contain classes, but some may be empty (such pairs are\r\ncalled breaks).The official website of the university has already\r\npublished the schedule for tomorrow for Alena\u2019s group. Thus, for each of\r\nthe pairs she knows if there will be a class at that time or not.Alena\u2019s\r\nHouse is far from the university, so if there are breaks, she doesn\u2019t\r\nalways go home. Alena has time to go home only if the break consists of\r\nat least two free pairs in a row, otherwise she waits for the next pair\r\nat the university.Of course, Alena does not want to be sleepy during\r\npairs, so she will sleep as long as possible, and will only come to the\r\nfirst pair that is presented in her schedule. Similarly, if there are no\r\nmore pairs, then Alena immediately goes home.Alena appreciates the time\r\nspent at home, so she always goes home when it is possible, and returns\r\nto the university only at the beginning of the next pair. Help Alena\r\ndetermine for how many pairs she will stay at the university. Note that\r\nduring some pairs Alena may be at the university waiting for the\r\nupcoming pair.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <algorithm>\n\nconst int MAXN = 10001;\n\nint n, a[MAXN];\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", a + i);\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] == 0 && a[i - 1] == 1 && a[i + 1] == 1) {\n\t\t\ta[i] = 1;\n\t\t}\n\t}\n\tint counter = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tcounter += a[i];\n\tprintf(\"%d\\n\", counter);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Alena s Schedule.json",
    "editorial_link": "https://codeforces.com//blog/entry/20898",
    "editorial": "The problem has been prepared by adedalic. To solve this problem one\r\nshould remove all leading and trailing zeroes from array and then\r\ncalculate the number of ones and number of zeroes neighboured by ones.\r\nThe sum of this values is the answer for the problem. Complexity: .\r\n"
}