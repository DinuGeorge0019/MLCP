{
    "link": "https://codeforces.com//contest/476/problem/C",
    "problemId": "15275",
    "problem_idx": "C",
    "shortId": "476C",
    "contest_number": "476",
    "problem_submissions": {
        "E": [
            8204672,
            8203397,
            8207038,
            8211617
        ],
        "D": [
            8197947,
            8191751,
            8202943,
            8195927,
            8196039,
            8197811,
            8197369,
            8217545,
            8199329,
            8200501,
            8205151,
            8199419,
            8198018,
            8200566,
            8201223,
            8198122,
            8201729
        ],
        "C": [
            8188264,
            8188407,
            8188998,
            8189052,
            8201842,
            8185141,
            8195789,
            8189091,
            8193525,
            8196914,
            8196369,
            8196594,
            8195818,
            8195843,
            8196937,
            8193815
        ],
        "B": [
            8185985,
            8208310,
            8204785,
            8187126,
            8185874,
            8187135,
            8188697,
            8188022,
            8185704,
            8186819,
            8186804,
            8188777,
            8187192,
            8187477,
            8187062,
            8187450,
            8187242
        ],
        "A": [
            8184534,
            8184021,
            8184248,
            8184018,
            8184166,
            8186376,
            8185191,
            8184038,
            8184338,
            8184268,
            8185458,
            8184887,
            8184306,
            8184110,
            8184903,
            8184310
        ]
    },
    "name": "C. Dreamoon and Sums",
    "statement": "Dreamoon loves summing up something for no reason. One day he obtains\r\ntwo integers and occasionally. He wants to calculate the sum of all\r\nintegers. Positive integer is called if and , where is some number in\r\nrange .By we denote the of integer division of and . By we denote the of\r\ninteger division of and . You can read more about these operations here:\r\n.The answer may be large, so please print its remainder modulo (). Can\r\nyou compute it faster than Dreamoon?\r\n",
    "solutions": [
        "//BISM ILLAHHIRRAHMANNI RRAHIM\n\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <string>\n#include <vector>\n#include <list>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <iterator>\n#include <utility>\nusing namespace std;\n\ntemplate< class T > T _abs(T n) { return (n < 0 ? -n : n); }\ntemplate< class T > T _max(T a, T b) { return (!(a < b) ? a : b); }\ntemplate< class T > T _min(T a, T b) { return (a < b ? a : b); }\ntemplate< class T > T sq(T x) { return x * x; }\n\n#define ALL(p) p.begin(),p.end()\n#define MP(x, y) make_pair(x, y)\n#define SET(p) memset(p, -1, sizeof(p))\n#define CLR(p) memset(p, 0, sizeof(p))\n#define MEM(p, v) memset(p, v, sizeof(p))\n#define CPY(d, s) memcpy(d, s, sizeof(s))\n#define READ(f) freopen(f, \"r\", stdin)\n#define WRITE(f) freopen(f, \"w\", stdout)\n#define SZ(c) (int)c.size()\n#define PB(x) push_back(x)\n#define ff first\n#define ss second\n#define i64 long long\n#define ld long double\n#define pii pair< int, int >\n#define psi pair< string, int >\n#define vi vector< int >\n\n#define md 1000000007\n\nconst double EPS = 1e-9;\nconst int INF = 0x7f7f7f7f;\n\n\nint main() {\n    //READ(\"in.txt\");\n    //WRITE(\"out.txt\");\n    i64 a,b,t;\n    cin>>a>>b;\n    i64 s=0;\n    t=(a*(a+1))>>1;\n    t%=md;\n    t*=b;\n    t%=md;\n    t+=a;\n    t%=md;\n    for(int q=1;q<b;q++) {\n        s+=q*t;\n        s%=md;\n    }\n    cout<<s<<'\\n';\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Dreamoon and Sums.json",
    "editorial_link": "https://codeforces.com//blog/entry/14256",
    "editorial": "If we fix the value of k, and let d?=?div(x,?b), m?=?mod(x,?b), we have :\nd?=?mk\nx?=?db?+?m\nSo we have x?=?mkb?+?m?=?(kb?+?1)?*?m.\nAnd we know m would be in range [1,?b?-?1] because it's a remainder and x is positive, so the sum of x of that fixed k would be .\nNext we should notice that if an integer x is nice it can only be nice for a single particular k because a given x uniquely defines div(x,?b) and mod(x,?b).\nThus the final answer would be sum up for all individual k:  which can be calculated in O(a) and will pass the time limit of 1.5 seconds.\nAlso the formula above can be expanded to . Dreamoon says he's too lazy to do this part, so if you use O(1) solution you just computed the answer faster than Dreamoon!!!\nNote that no matter which approach one should be very careful of overflowing of the integer data type of the used language. For example one should do a module after every multiplication if using 64-bit integer type. And pay attention to precedence of operations: take c++ for example a+b%c would be executed as a+(b%c) instead of (a+b)%c, another c++ example a*(b*c)%m would be executed as (a*(b*c))%m instead of a*((b*c)%m).",
    "hint": []
}