{
    "link": "https://codeforces.com//contest/658/problem/A",
    "problemId": "53369",
    "problem_idx": "A",
    "shortId": "658A",
    "contest_number": "658",
    "problem_submissions": {
        "E": [
            17004085,
            49157877,
            17061517,
            17156655
        ],
        "D": [
            16999449,
            17015215,
            16997780,
            17002007,
            17001539,
            17001492,
            17003628,
            17003492,
            17003016,
            17002794,
            17003833,
            17004549,
            17006375,
            17005499,
            17005815,
            17005114,
            17019978,
            17005108,
            17005065,
            17003630,
            17006976
        ],
        "C": [
            16995068,
            16993450,
            16995031,
            16997375,
            16996718,
            16996690,
            16995850,
            16997578,
            17001691,
            16996778,
            16998533,
            16997776,
            16998853,
            16997308,
            16999990,
            16997317,
            16999080,
            17004966,
            16999164
        ],
        "B": [
            16992735,
            16994253,
            16992611,
            16991812,
            16993314,
            16992931,
            16992391,
            16993663,
            16993303,
            16993084,
            16992706,
            16992701,
            16994956,
            16993684,
            16993760,
            16992879,
            16993582,
            16992643,
            16994378
        ],
        "A": [
            16990896,
            16990442,
            16990585,
            16990357,
            16991634,
            16990650,
            16990607,
            16990450,
            16991276,
            16991187,
            16990751,
            16990621,
            16991771,
            16990461,
            16991470,
            16990648,
            16991140,
            16990764,
            16991241
        ]
    },
    "name": "A. Bear and Reverse Radewoosh",
    "statement": "Limak and Radewoosh are going to compete against each other in the\r\nupcoming algorithmic contest. They are equally skilled but they won’t\r\nsolve problems in the same order.There will be problems. The -th problem\r\nhas initial score and it takes exactly minutes to solve it. Problems are\r\nsorted by difficulty it’s guaranteed that and .A constant is given too,\r\nrepresenting the speed of loosing points. Then, submitting the -th\r\nproblem at time ( minutes after the start of the contest) gives\r\npoints.Limak is going to solve problems in order (sorted increasingly by\r\n). Radewoosh is going to solve them in order (sorted decreasingly by ).\r\nYour task is to predict the outcome print the name of the winner (person\r\nwho gets more points at the end) or a word \"\" in case of a tie.You may\r\nassume that the duration of the competition is greater or equal than the\r\nsum of all . That means both Limak and Radewoosh will accept all\r\nproblems.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <climits>\n#include <algorithm>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <cassert>\n#include <vector>\n#define all(x) x.begin() , x.end()\n#define fi first\n#define se second\n#define pb push_back\n#define umax( x , y ) x = max( x , (y) )\n#define umin( x , y ) x = min( x , (y) )\n#define For( i , a ) for(int i=1;i<=a;i++)\n#define ort (((b+s) < 0 )? (b+s)/2-1:(b+s)/2)\n#define y2 asrwjaelkf\n#define y1 asseopirwjaelkf\n\nusing namespace std;\n\ninline int read() {\n\tint res = 0 ;int neg ;\n\twhile(true){char ch = getchar();if(ch>='0' && ch<='9' || ch=='-'){if(ch=='-') neg = -1;else neg = 1 , res = ch-'0';break;} }\n\twhile(true){char ch = getchar();if(ch>='0' && ch<='9') res*=10 , res+=ch-'0';else break;}\n\treturn res*neg;\n}\n\ntypedef long long Lint;\ntypedef double db;\ntypedef pair<int,int> ii;\ntypedef pair<int,ii> iii;\n\nconst int maxn = 1000020;\nconst int MOd = 1e9+7;\n\nint a, b;\nint ar[maxn], t[maxn];\n\nint main() {\n\t\n\tscanf(\"%d %d\",&a,&b);\n\t\n\tfor(int i=1;i<=a;i++) scanf(\"%d\",&ar[i]);\n\tfor(int i=1;i<=a;i++) scanf(\"%d\",&t[i]);\n\n\tint ans1 = 0, ans2 = 0;\n\tfor(int i=1,tt=0;i<=a;i++) tt += t[i], ans1 += max( 0, ar[i]-b*tt );\n\tfor(int i=a,tt=0;i>=1;i--) tt += t[i], ans2 += max( 0, ar[i]-b*tt );\n\n\tif( ans1 > ans2 ) printf(\"Limak\\n\");\n\telse if( ans1 < ans2 ) printf(\"Radewoosh\\n\");\n\telse printf(\"Tie\\n\");\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Bear and Reverse Radewoosh.json",
    "editorial_link": "https://codeforces.com//blog/entry/44047",
    "editorial": "Iterate once from left to right to calculate one player's score and then iterate from right to left. It's generally good not to write something similar twice because you are more likely to make mistakes. Or maybe later you will find some bug and correct it only in one place. So, try to write calculating score in a function and run them twice. Maybe you will need to reverse the given arrays in some moment.",
    "hint": []
}