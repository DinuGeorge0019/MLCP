{"link": "https://codeforces.com//contest/1559/problem/E", "problemId": "1078717", "problem_idx": "E", "shortId": "1559E", "contest_number": "1559", "problem_submissions": {"D2": [125995494, 126036275, 125997805, 126009493, 126011074, 126008472, 126038189, 126005034, 126002626, 125999937, 126005467, 126005672, 126010740, 126006398, 126010473, 126011364, 126008532, 126039421, 126011147, 126008772, 126009477, 126012187, 126015439], "E": [125974477, 125957083, 125970146, 125961617, 125979742, 125976394, 125982640, 125984935, 125974866, 125973356, 125969825, 125970524, 125976580, 125988330, 125973822, 126039403, 125988355, 125979721, 125979087, 125993147, 125980201], "D1": [125944192, 125969277, 125954678, 125967980, 125953790, 125959046, 125952547, 125954032, 125984889, 125979313, 125972340, 125951958, 125981117, 125956127, 125979601, 125965087, 125984172, 125984989, 125957742, 125959852], "C": [125940467, 125947734, 125943938, 125945955, 125945435, 125954449, 125957788, 125959041, 125956677, 125953215, 125950646, 125956630, 125949058, 125946362, 125956010, 125954414, 125947800, 125952498, 125949073, 125951269], "B": [125938532, 125941057, 125937911, 125940291, 125940964, 125944375, 125941668, 125940207, 125948124, 125946366, 125951888, 125939403, 125942974, 125940405, 125941485, 125941898, 125941189, 125945855, 125940756, 125941646], "A": [125934889, 125935929, 125934894, 125936023, 125936520, 125944189, 125936005, 125935279, 125938830, 125941957, 125944772, 125935138, 125938909, 125935398, 125941621, 125935239, 125935795, 125938400, 125934867, 125935241]}, "name": "E. Mocha and Stars", "statement": "Mocha wants to be an astrologer. There are n stars which can be seen in\r\nZhijiang, and the brightness of the i-th star is a_i. Mocha considers\r\nthat these n stars form a constellation, and she uses (a_1,a_2,\r\nldots,a_n) to show its state. A state is called if all of the following\r\nthree conditions are satisfied: For all i (1\r\nle i\r\nle n), a_i is an integer in the range [l_i, r_i].\r\nsum\r\nlimits _{i=1} ^ n a_i\r\nle m.\r\ngcd(a_1,a_2,\r\nldots,a_n)=1. Here,\r\ngcd(a_1,a_2,\r\nldots,a_n) denotes the greatest common divisor (GCD) of integers\r\na_1,a_2,\r\nldots,a_n.Mocha is wondering how many different mathematical states of\r\nthis constellation exist. Because the answer may be large, you must find\r\nit modulo 998\r\n,244\r\n,353.Two states (a_1,a_2,\r\nldots,a_n) and (b_1,b_2,\r\nldots,b_n) are considered different if there exists i (1\r\nle i\r\nle n) such that a_i\r\nne b_i.\r\n", "solutions": ["#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,ssse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include <bits/stdc++.h>\n#define int long long\n#define rep(i, a, b) for(int i = a; i <= b; i++)\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\nconst int INF = 0x3f3f3f3f;\nconst int NINF = -INF - 1;\nconst int N = 1e5 + 10;\nconst int mod = 998244353;\nint n, m, cnt, maxr;\nint mu[N], prime[N], f[N], sum[N];\nbool vis[N];\nstd::pair<int, int > a[55];\nvoid init() { mu[1] = 1; rep(i, 2, 100000) { if(!vis[i]) mu[i] = -1, prime[++cnt] = i; for(int j = 1; i <= 100000 / prime[j]; j++) { vis[i * prime[j]] = 1; if(i % prime[j] == 0) { mu[i * prime[j]] = 0; break; } mu[i * prime[j]] = -mu[i]; } } }\nvoid Clear(int *b, int l, int r) { rep(i, l, r) b[i] = 0; }\nint query(int x) {\n    int h = m / x, ret=0; std::vector< std::pair <int ,int > > vec;\n    rep(i, 1, n) {\n        if( ( a[i].fi + x -1 ) / x > a[i].se / x ) return 0;\n        vec.eb( ( a[i].fi + x -1 ) / x , a[i].se / x );\n    }\n    rep(i, vec[0].fi, vec[0].se) {\n        if( h < vec[1].fi + i) break;\n        f[vec[1].fi + i] ++, f[std::min(vec[1].se + i, h) + 1] --;\n    }\n    rep(i, 1, h) sum[i] = f[i] + sum[i - 1];Clear(f, 1, h + 1);\n    rep(i, 2, n-1) {\n        rep(j, 1, h) {\n            if(!sum[j]) continue;\n            if(vec[i].fi + j > h ) break;\n            f[vec[i].fi + j] = ( f[vec[i].fi + j] + sum[j] ) % mod;\n            f[std::min(vec [i].se + j, h) + 1] = ( f[std::min(vec [i].se + j, h) + 1] - sum[j] + mod ) % mod;\n        }\n        rep(j, 1, h) sum[j] = ( f[j] + sum[j - 1] ) % mod;Clear(f, 1, h + 1);\n    }\n    rep(i, 1, h) ret = ( sum[i] + ret ) % mod;\n    return ret;\n}\nint solve() {\n    int ans = 0;\n    rep(i, 1, maxr) ans = ( query(i) * mu[i] + ans + mod ) % mod;\n    return ans;\n}\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    init();\n    std::cin >> n >> m;\n    for(int i = 1; i <= n; i++) std::cin >> a[i].fi >> a[i].se, maxr=std::max(maxr, a[i].se);\n    std::cout << solve();\n    return 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp", "fft", "math", "number theory"], "dificulty": "2200", "interactive": false}