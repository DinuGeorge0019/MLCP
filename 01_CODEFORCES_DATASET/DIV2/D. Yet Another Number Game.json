{
    "link": "https://codeforces.com//contest/282/problem/D",
    "problemId": "2738",
    "problem_idx": "D",
    "shortId": "282D",
    "contest_number": "282",
    "problem_submissions": {
        "C": [
            3308394,
            3301282,
            3301694,
            3302705,
            3302330,
            3303854,
            3303503,
            3306330,
            3302565,
            3304172,
            3301827,
            3306234,
            3301968,
            3303126,
            3305787,
            3304106,
            3308992,
            3303892
        ],
        "D": [
            3307917,
            3308314,
            3313040,
            3309690,
            3307151,
            3308890,
            3310469,
            3310597,
            3306177,
            3313465
        ],
        "E": [
            3306165,
            3309048,
            3304983,
            3304322,
            3304461,
            3306265,
            3306082,
            3304910,
            3308043,
            3302292,
            3312468,
            3305728,
            3309782,
            3317587,
            3317543,
            3317532,
            3317526,
            3317498,
            3310431
        ],
        "B": [
            3304464,
            3302327,
            3303236,
            3304724,
            3301374,
            3302658,
            3301911,
            3307835,
            3301590,
            3300782,
            3305075,
            3301928,
            3306464,
            3306058,
            3305193,
            3305485,
            3307741,
            3307907
        ],
        "A": [
            3299445,
            3300629,
            3299774,
            3299328,
            3299424,
            3300897,
            3299676,
            3309023,
            3299658,
            3299312,
            3299355,
            3299414,
            3299685,
            3300098,
            3300893,
            3301113,
            3299923,
            3300635
        ]
    },
    "name": "D. Yet Another Number Game",
    "statement": "Since most contestants do not read this part, I have to repeat that\r\nBitlandians are quite weird. They have their own jobs, their own working\r\nmethod, their own lives, their own sausages and their own games!Since\r\nyou are so curious about Bitland, I\u2019ll give you the chance of peeking at\r\none of these games.BitLGM and BitAryo are playing yet another of their\r\ncrazy-looking genius-needed Bitlandish games. They\u2019ve got a sequence of\r\nnon-negative integers . The players make moves in turns. BitLGM moves\r\nfirst. Each player can and must do one of the two following actions in\r\nhis turn: Take one of the integers (we\u2019ll denote it as ). Choose integer\r\n. And then decrease by , that is, apply assignment: . Choose integer .\r\nAnd then decrease all by , that is, apply assignment: , for all . The\r\nplayer who cannot make a move loses.You\u2019re given the initial sequence .\r\nDetermine who wins, if both players plays optimally well and if BitLGM\r\nand BitAryo start playing the described game in this sequence.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <vector>\n#include <queue>\n#include <iostream>\n#include <string>\nusing namespace std;\n#define LL long long\n#define maxn 3010100\n#define maxe 210000\n\ndouble sq5 = sqrt(5.0);\n\nint match(int a, int b){\n\tint j = b - a;\n\tint aj = floor(j * (sq5 + 1.0)/2.0);\n\tif(aj == a)\n\t\treturn 1;\n\t// printf(\"j = %d, aj = %d\\n\", j, aj);\n\treturn 0;\n}\nint sheng[301][301][301];\nint main()\n{\n\tint i,j,k,cnt=0;\n\tfor(i=0;i<301;i++)\n\t\tfor(j=0;j<301;j++)\n\t\t{\n\t\t\tfor(k=0;k<301;k++)if(!sheng[i][j][k])\n\t\t\t{\n\t\t\t\tint M=min(i,min(j,k));\n\t\t\t\tfor(int t=1;t+M<301;t++)\n\t\t\t\t{\n\t\t\t\t\tif(t+i<301)\n\t\t\t\t\t\tsheng[t+i][j][k]=1;\n\t\t\t\t\tif(t+j<301)\n\t\t\t\t\t\tsheng[i][j+t][k]=1;\n\t\t\t\t\tif(t+k<301)\n\t\t\t\t\t\tsheng[i][j][k+t]=1;\n\t\t\t\t\tif(t+j<301&&t+k<301&&t+i<301)\n\t\t\t\t\t\tsheng[i+t][j+t][k+t]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tif(n==1)\n\t\t{\n\t\t\tscanf(\"%d\",&i);\n\t\t\tif(i)\n\t\t\t\tputs(\"BitLGM\");\n\t\t\telse\n\t\t\t\tputs(\"BitAryo\");\n\t\t}\n\t\telse if(n==2)\n\t\t{\n\t\t\tint a,b;\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tif(a > b)\n\t\t\tswap(a, b);\n\t\tif(match(a, b)){\n\t\t\tprintf(\"BitAryo\\n\");\n\t\t}else{\n\t\t\tprintf(\"BitLGM\\n\");\n\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&i,&j,&k);\n\t\t\tint ii,jj,kk;\n\t\t\tii=min(min(i,j),k);\n\t\t\tkk=max(max(i,j),k);\n\t\t\tjj=i+j+k-ii-kk;\n\t\t\ti=ii,j=jj,k=kk;\n\n\t\t\tif(sheng[i][j][k])\n\t\t\t\tputs(\"BitLGM\");\n\t\t\telse\n\t\t\t\tputs(\"BitAryo\");\n\t\t}\n\t\t//printf(\"%d\\n\",cnt);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "games"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Yet Another Number Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/6999",
    "editorial": "For n=1, everything is clear. If a1?=?0 then BitAryo wins, otherwise BitLGM is the winner.\n\nFor n=2: define win[i][j] = (Whether i,j is a Winning position). It's easy to calculate win[i][j] for all i and j, using a loop (Checking all possible moves). This leads us to an O(n3) solution.\n\nFor n=3: Everything is similar to NIM, With the same statement of proof as for NIM, i,j,k is a winning position if and only if (i xor j xor k) ???0.[Don't forget the parentheses in code :) ] Complexity: O(1)\n\nOne can also solve this case using DP. We define lose[i][j]= (Least k, such that i,j,k is a losing position) ,lose2[i][j]=(Least k, such that k,k+i,k+i+j is a losing position) and win[i][j][k] just as the case with n=2. As in the codes below, one can calculate all these values in O(n3).\n\nUsing the same DP strategy for n=2 and the O(1) algorithm for n=3 and n=1, leads us to a total complexity of O(n2) which was not necessary in this contest."
}