{
    "link": "https://codeforces.com//contest/332/problem/B",
    "problemId": "3360",
    "problem_idx": "B",
    "shortId": "332B",
    "contest_number": "332",
    "problem_submissions": {
        "C": [
            4155522,
            4156354,
            4153132,
            4153078,
            4154819,
            4153485,
            4154446,
            4155481,
            4155178,
            4155623,
            4155730,
            4154794,
            4156773,
            4155378,
            4156846,
            4154112
        ],
        "E": [
            4153414,
            4232674,
            4158374
        ],
        "B": [
            4150245,
            4150553,
            4152758,
            4151567,
            4149063,
            4150850,
            4150633,
            4148733,
            4149973,
            4149574,
            4149995,
            4149281,
            4152409,
            4149688,
            4152014,
            4150178,
            4149649
        ],
        "A": [
            4152890,
            4148247,
            4148387,
            4148367,
            4148085,
            4148922,
            4150814,
            4148615,
            4148406,
            4149253,
            4148257,
            4148663,
            4148588,
            4148447
        ],
        "D": [
            4150491,
            4155596,
            4158402,
            4155100
        ]
    },
    "name": "B. Maximum Absurdity",
    "statement": "Reforms continue entering Berland. For example, during yesterday sitting\r\nthe Berland Parliament approved as much as laws (each law has been\r\nassigned a unique number from 1 to ). Today all these laws were put on\r\nthe table of the President of Berland, G.W. Boosch, to be signed.This\r\ntime mr. Boosch plans to sign laws. He decided to choose\r\nnon-intersecting segments of integers from 1 to of length and sign all\r\nlaws, whose numbers fall into these segments. More formally, mr. Boosch\r\nis going to choose two integers , and sign all laws with numbers lying\r\nin the segments and (borders are included).As mr. Boosch chooses the\r\nlaws to sign, he of course considers the public opinion. Allberland\r\nPublic Opinion Study Centre (APOSC) conducted opinion polls among the\r\ncitizens, processed the results into a report and gave it to the\r\npresident. The report contains the absurdity value for each law, in the\r\npublic opinion. As mr. Boosch is a real patriot, he is keen on signing\r\nthe laws with the maximum total absurdity. Help him.\r\n",
    "solutions": [
        "#include <iostream>\n#include <string.h>\n#include <algorithm>\n#include <set>\n#include <queue>\n#include <vector>\n#include <stdio.h>\n#include <stack>\n#include <math.h>\nusing namespace std;\n#define ll long long\nconst int N=2e5+9;\nll a[N],n,k,sl[N],sr[N],dp1[N],dp2[N];\nll a1[N],a2[N];\nint main()\n{\n//    freopen(\"in.txt\",\"r\",stdin);\n    cin>>n>>k;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    for(int i=1;i<=n;i++) sl[i]=sl[i-1]+a[i];\n    for(int i=k;i<=n;i++)\n    if(dp1[i-1]>=sl[i]-sl[i-k])\n    {\n        a1[i]=a1[i-1];\n        dp1[i]=dp1[i-1];\n    }else\n    {\n//        printf(\"***%lld***%d\\n\",i-k+1,i);\n        a1[i]=i-k+1;\n        dp1[i]=sl[i]-sl[i-k];\n    }\n    for(int i=n;i>=1;i--) sr[i]=sr[i+1]+a[i];\n\n    for(int i=n-k+1;i>=1;i--)\n    if(dp2[i+1]>sr[i]-sr[i+k])\n    {\n        a2[i]=a2[i+1];\n        dp2[i]=dp2[i+1];\n    }else\n    {\n        a2[i]=i;\n        dp2[i]=sr[i]-sr[i+k];\n    }\n//    for(int i=1;i<=n;i++)\n//    {\n////        printf(\"%d: %I64d %I64d %I64d %I64d\\n\",i,dp1[i],a1[i],dp2[i],a2[i]);\n//    }\n    ll ans=0,x,y;\n    for(int i=k;i+1<=n-k+1;i++)\n    if(dp1[i]+dp2[i+1]>ans)\n    {\n        ans=dp1[i]+dp2[i+1];\n        x=a1[i];\n        y=a2[i+1];\n    }\n//    cout<<ans<<endl;\n    cout<<x<<\" \"<<y<<endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "dp",
        "implementation"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Maximum Absurdity.json",
    "editorial_link": "https://codeforces.com/blog/entry/8447",
    "editorial": "Let s build the array of partial sums, which will permit to find the sum\r\nin any segment of the array in . Let\u00e2\u0080\u0099s iterate through the number (the\r\nleft edge of the leftmost segment) in descending order. Now we need to\r\nfind among segments of length , starting from position which index is\r\ngreater than or equal to , a segment with the maximum sum. Since we\r\nsearch in descending order, we can maintain this segment during the\r\ntransition from to . Asymptotics of the solution . Code\r\n"
}