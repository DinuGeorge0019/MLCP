{
    "link": "https://codeforces.com//contest/842/problem/B",
    "problemId": "120313",
    "problem_idx": "B",
    "shortId": "842B",
    "contest_number": "842",
    "problem_submissions": {
        "E": [
            29892175,
            29896709,
            29892728
        ],
        "C": [
            29876363,
            29876870,
            29881263,
            29880716,
            29891701,
            29882766,
            29881217,
            29877383,
            29881389,
            29887847,
            29882055,
            29876553,
            29885327,
            29897484,
            29879763,
            29887443,
            29895634,
            29895199,
            29916549,
            29916532,
            29916152,
            29891176,
            29895609
        ],
        "D": [
            29875168,
            29881874,
            29886504,
            29883941,
            29879589,
            29886046,
            29872999,
            29882468,
            29887643,
            29882954,
            29887687,
            29889517,
            29890953,
            29888540,
            29891985,
            29892689,
            29883468,
            29883460,
            29887258,
            29886746
        ],
        "B": [
            29874014,
            29874407,
            29872985,
            29872379,
            29886135,
            38859573,
            29873183,
            29883006,
            29876642,
            29873270,
            29874068,
            29874064,
            29886058,
            29876537,
            29878343,
            29881672,
            29872806,
            29873575,
            29872847,
            29873445,
            29873104
        ],
        "A": [
            29870801,
            29869133,
            29887434,
            29870152,
            29882916,
            29869760,
            29883576,
            29869196,
            29869793,
            29870793,
            29869617,
            29869267,
            29869102,
            29871125,
            29882379,
            29869173,
            29870818,
            29869360,
            29870433,
            29869454
        ]
    },
    "name": "B. Gleb And Pizza",
    "statement": "Gleb ordered pizza home. When the courier delivered the pizza, he was\r\nvery upset, because several pieces of sausage lay on the crust, and he\r\ndoes not really like the crust.The pizza is a circle of radius and\r\ncenter at the origin. Pizza consists of the main part circle of radius\r\nwith center at the origin, and crust around the main part of the width .\r\nPieces of sausage are also circles. The radius of the -th piece of the\r\nsausage is , and the center is given as a pair (, ).Gleb asks you to\r\nhelp determine the number of pieces of sausage caught on the crust. A\r\npiece of sausage got on the crust, if it completely lies on the crust.\r\n",
    "solutions": [
        "#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<set>\n#define INF 0x3FFFFFFF\n#define eps 1e-12\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint r1,r2,n,sum;\n\nint main()\n{\n\tregister int i,x,y,r;\n\tdouble d;\n\tr1=read(); r2=r1-read();\n\tn=read();\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tx=read(); y=read(); r=read();\n\t\td=sqrt(x*x+y*y);\n\t\tif (r+r2<=d+eps&&r1-r>=d-eps) ++sum;\n\t}\n\tprintf(\"%d\",sum);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Gleb And Pizza.json",
    "editorial_link": "https://codeforces.com//blog/entry/54179",
    "editorial": "To understand whether some piece of sausage intersects with pizza, we\r\ncan check if their borders intersect. And to check this, since their\r\nborders are circles, we are interested in their radii and the distance\r\nbetween their centers. To check if a piece of sausage is inside the\r\ncrust, we firstly check that it is inside the pizza ), and secondly\r\ncheck that it is completely outside the central part of the pizza ).\r\nhttps://ideone.com/Jd66XL\r\n"
}