{
    "link": "https://codeforces.com//contest/1884/problem/D",
    "problemId": "2278162",
    "problem_idx": "D",
    "shortId": "1884D",
    "contest_number": "1884",
    "problem_submissions": {
        "E": [
            229182998,
            232047287,
            229184537,
            229188100,
            229407530,
            229406745,
            229186340,
            229191046,
            229193161
        ],
        "D": [
            229158633,
            232074380,
            229168220,
            229164508,
            229173176,
            229157255,
            229153443,
            229155494,
            229159386,
            229160353,
            229156733,
            229156643,
            229161617,
            229157357,
            229162436,
            229158936,
            229165915,
            229162999,
            229162965,
            229163918,
            229164809
        ],
        "C": [
            229155589,
            229160960,
            229166024,
            229166680,
            229154105,
            229157494,
            229160291,
            229153826,
            229157399,
            229163211,
            229163270,
            229157632,
            229164398,
            229157764,
            229156973,
            229156300,
            229158818,
            229157218,
            229159145,
            229159718
        ],
        "B": [
            229151946,
            229151614,
            229152037,
            229164652,
            229149397,
            229159327,
            229149698,
            229150790,
            229150442,
            229150480,
            229151756,
            229152335,
            229149090,
            229150117,
            229151229,
            229150183,
            229155852,
            229153843,
            229154670,
            229153764
        ],
        "A": [
            229147132,
            229147400,
            229147746,
            229153787,
            229147017,
            229146825,
            229146890,
            229146981,
            229146866,
            229148682,
            229147191,
            229148012,
            229146920,
            229147887,
            229146935,
            229147042,
            229146861,
            229146944,
            229147243,
            229148319
        ]
    },
    "name": "D. Counting Rhyme",
    "statement": "You are given an array of integers a_1, a_2,\r\nldots, a_n.A pair of integers (i, j), such that 1\r\nle i < j\r\nle n, is called , if there an integer k (1\r\nle k\r\nle n) such that a_i is divisible by a_k and a_j is divisible by a_k at\r\nthe same time.Please, find the number of good pairs.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint N,A[1000006],cnt[1000006],g[1000006],fl[1000006];\nll f[1000006];\nvoid solve(){\n\tscanf(\"%d\",&N);\n\tfor(int i=1;i<=N;++i)f[i]=cnt[i]=g[i]=fl[i]=0;\n\tfor(int i=1;i<=N;++i)scanf(\"%d\",&A[i]),++cnt[A[i]],fl[A[i]]=1;\n\tfor(int i=1;i<=N;++i)for(int j=2*i;j<=N;j+=i)fl[j]|=fl[i];\n\tll res=0ll;\n\tfor(int i=N;i>=1;--i){\n\t\tg[i]=0;for(int j=i;j<=N;j+=i)g[i]+=cnt[j];\n\t\tf[i]=1ll*g[i]*(g[i]-1)/2ll;\n\t\tfor(int j=2*i;j<=N;j+=i)f[i]-=f[j];\n\t\tif(!fl[i])res+=f[i];\n\t//\tcout<<i<<\" \"<<f[i]<<\" \"<<g[i]<<endl;\n\t} cout<<res<<endl;\n}\nint main(){\n\tint t;cin>>t;\n\twhile(t--)solve(); \n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "math",
        "number theory"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Counting Rhyme.json",
    "editorial_link": "https://codeforces.com//blog/entry/121618",
    "editorial": "Note that if is divisible by and is divisible by , then is divisible by\r\n. Let\u00e2\u0080\u0099s calculate the number of pairs from the array for each , such\r\nthat the is equal to .To do this, we will create - the number of pairs\r\nin the array with equal to . For this, we will need an array of counts -\r\n, the number of occurrences of the number in the array. To calculate ,\r\nwe need to know how many numbers are divisible by , specifically the sum\r\n, where . Therefore, the number of pairs with equal to is . However, not\r\nall of them have equal to , it can be equal to a number that is a\r\nmultiple of . Therefore, . This dynamic programming can be calculated in\r\ntime.Now let\u00e2\u0080\u0099s understand which values are not suitable. If there is a\r\nnumber in the array (i.e., ), then all multiples of are not suitable.\r\nThis can also be calculated in time. Finally, we just need to sum up all\r\nthe values, where the number is not divisible by any number in the\r\narray.\r\n"
}