{
    "link": "https://codeforces.com//contest/1371/problem/C",
    "problemId": "658030",
    "problem_idx": "C",
    "shortId": "1371C",
    "contest_number": "1371",
    "problem_submissions": {
        "F": [
            85724126,
            85680245,
            85681350,
            85699885
        ],
        "E2": [
            85657442,
            85655168,
            85656290,
            85748587,
            85748232,
            85708674,
            85665045,
            85668857,
            85658632,
            85666166,
            85670120,
            85660293,
            85663781,
            85670954,
            85668210,
            85680055,
            85669661,
            85682351,
            85669454,
            85672846,
            85682060,
            85671106
        ],
        "E1": [
            85647787,
            85655311,
            85656202,
            85709850,
            85654362,
            85651600,
            85658237,
            85658032,
            85654262,
            85660541,
            85663528,
            85656065,
            85668083,
            85661660,
            85665638,
            85654459,
            85668563,
            85663741,
            85657234,
            85666469
        ],
        "D": [
            85643050,
            85667344,
            85644091,
            85642391,
            85641068,
            85648738,
            85648076,
            85650769,
            85650684,
            85651359,
            85649126,
            85650672,
            85644656,
            85652003,
            85647555,
            85653607,
            85654186,
            85646247,
            85653171
        ],
        "C": [
            85639893,
            85664644,
            85640509,
            85637217,
            85637662,
            85643069,
            85643313,
            85639582,
            85644962,
            85641558,
            85643750,
            85642402,
            85635916,
            85643555,
            85643224,
            85639831,
            85646794,
            85639649,
            85640565
        ],
        "B": [
            85637385,
            85659549,
            85636246,
            85634765,
            85643737,
            85638003,
            85639540,
            85641465,
            85641062,
            85638464,
            85641050,
            85638539,
            85645723,
            85639381,
            85639446,
            85646495,
            85640832,
            85636683,
            85636740
        ],
        "A": [
            85625335,
            85659712,
            85625054,
            85624966,
            85631182,
            85625230,
            85625986,
            85627166,
            85626824,
            85627013,
            85638725,
            85626600,
            85625210,
            85625324,
            85628198,
            85626246,
            85627731,
            85625426,
            85631949
        ]
    },
    "name": "C. A Cookie for You",
    "statement": "Anna is a girl so brave that she is loved by everyone in the city and\r\ncitizens love her cookies. She is planning to hold a party with cookies.\r\nNow she has a vanilla cookies and b chocolate cookies for the party.She\r\ninvited n guests of the first type and m guests of the second type to\r\nthe party. They will come to the party in some order. After coming to\r\nthe party, each guest will choose the type of cookie (vanilla or\r\nchocolate) to eat. There is a difference in the way how they choose that\r\ntype:If there are v vanilla cookies and c chocolate cookies at the\r\nmoment, when the guest comes, then if the guest of the first type: if\r\nv>c the guest selects a cookie. Otherwise, the guest selects a cookie.\r\nif the guest of the second type: if v>c the guest selects a cookie.\r\nOtherwise, the guest selects a cookie. After that: If there is at least\r\none cookie of the selected type, the guest eats one. Otherwise (there\r\nare no cookies of the selected type), the guest gets angry and returns\r\nto home. Anna wants to know if there exists some order of guests, such\r\nthat . Your task is to answer her question.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint T;\nlong long a, b, n, m;\nint main()\n{\n\tscanf(\"%d\", &T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%lld%lld%lld%lld\", &a, &b, &n, &m);\n\t\tif (m > min(a, b))\n\t\t{\n\t\t\tputs(\"No\");\n\t\t\tcontinue;\n\t\t}\n\t\tif (a + b < n + m)\n\t\t{\n\t\t\tputs(\"No\");\n\t\t\tcontinue;\n\t\t}\n\t\tputs(\"Yes\");\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. A Cookie for You.json",
    "editorial_link": "https://codeforces.com//blog/entry/79624",
    "editorial": "If are satisfied, the answer is \"\". Otherwise, the answer is \"\". Letâs\r\nproof it.Of course, must be satisfied, because violating this inequality\r\nmeans lack of cookies.When a type guest comes, or when , the value of is\r\ndecremented by . You need to consider only about the case that all type\r\nguests come first and after that all type guests come, because if there\r\nis a type guest before a type guest, swapping them is better to make no\r\none angry. (Because if there is a type guest before a type guest, the\r\ntype guest have a possibility to decrease the value of unnecessarily.)At\r\nlast, all of type guests eat one cookie when there is at least one\r\ncookie(both types are ok).Total complexity:\r\n",
    "hint": []
}