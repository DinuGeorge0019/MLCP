{
    "link": "https://codeforces.com//contest/1604/problem/D",
    "problemId": "1163965",
    "problem_idx": "D",
    "shortId": "1604D",
    "contest_number": "1604",
    "problem_submissions": {
        "E": [
            133665266,
            133665330,
            133659495,
            133662698,
            133665754,
            133665695,
            133667913,
            133670360,
            133670641,
            133670753,
            133676806,
            133672911,
            133673104,
            133674991,
            133676775,
            133679158,
            133677605,
            133683514,
            133682221,
            133683564
        ],
        "D": [
            133632914,
            133634675,
            133646997,
            133640774,
            133645923,
            133643402,
            133646411,
            133639935,
            133645645,
            133646807,
            133649571,
            133658060,
            133654131,
            133649231,
            133663364,
            133653039,
            133654438,
            133653052,
            133653688,
            133661097
        ],
        "C": [
            133630411,
            133638085,
            133632064,
            133625685,
            133635045,
            133633934,
            133631657,
            133625520,
            133634475,
            133635072,
            133633002,
            133634939,
            133644373,
            133640982,
            133632402,
            133642673,
            133644331,
            133633661,
            133631330,
            133642353
        ],
        "B": [
            133625396,
            133621698,
            133626014,
            133619603,
            134090905,
            133624581,
            133623770,
            133621459,
            133634337,
            133628885,
            133630875,
            133627020,
            133622232,
            133627089,
            133635361,
            133623364,
            133634078,
            133623924,
            133625391,
            133624417,
            133621609
        ],
        "A": [
            133617599,
            133618208,
            133617413,
            133617141,
            134090791,
            133617364,
            133617444,
            133617618,
            133619480,
            133619710,
            133620324,
            133618064,
            133617109,
            133626724,
            133628136,
            133617925,
            133618078,
            133619587,
            133619073,
            133618066,
            133617633
        ],
        "F": [
            133735630,
            133826813
        ]
    },
    "name": "D. Moderate Modular Mode",
    "statement": "YouKn0wWho has two integers x and y. Help him to find an integer n such\r\nthat 1\r\nle n\r\nle 2\r\ncdot 10^{18} and n\r\nbmod x = y\r\nbmod n. Here, a\r\nbmod b denotes the remainder of a after division by b. If there are\r\nmultiple such integers, output any. It can be shown that such an integer\r\nalways exists under the given constraints.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\ninline ll read() {\n    ll x=0,f=1;int c=getchar();\n    while(!isdigit(c)) {if(c=='-') f=-1;c=getchar();}\n    while(isdigit(c)) {x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*f;\n}\nll t,x,y;\nint main(){\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n    t=read();\n    while(t--){\n        x=read(),y=read();\n        if(x>y) printf(\"%lld\\n\",x+y);\n        else printf(\"%lld\\n\",y-y%x/2);\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Moderate Modular Mode.json",
    "editorial_link": "https://codeforces.com//blog/entry/96460",
    "editorial": "If x>y\n, then x+y\n works, as (x+y)modx=ymodx=y\n and ymod(x+y)=y\n.\n\nThe challenge arrives when x?y\n. The later part of the editorial assumes that x?y\n.\n\nClaim 1\n: n\n can't be less than x\n.\n\nProof: Assume that for some n<x\n, nmodx=ymodn\n is satisfied. Then nmodx=n\n but ymodn<n\n. So nmodx\n can't be equal to ymodn\n which is a contradiction.\n\nClaim 2\n: n\n can't be greater than y\n.\n\nProof: Assume that for some n>y\n, nmodx=ymodn\n is satisfied. Then nmodx<x\n but ymodn=y?x\n. So nmodx\n can't be equal to ymodn\n which is a contradiction.\n\nSo n\n should be in between x\n and y\n. But what is the exact value of n\n? Let's solve this intuitively.\n\nConsider a line on the X\n axis. Imagine you are at position 0\n. You will start jumping from 0\n to y\n with a step of length x\n. So there will be a position from where if you jump one more time it will exceed y\n. This position is p=y?ymodx\n. From this position let's go to y\n in exactly 2\n steps! Notice that y?p\n is guaranteed to be even as x\n and y\n both are even. So we need to jump with a length of y?p2\n and we will jump to the position t=p+y?p2\n. And voila! t\n is our desired n\n because tmodx=y?p2\n and ymodt=(y?p)?y?p2=y?p2\n. To be precise, n=t=y?ymodx2\n.",
    "hint": []
}