{
    "link": "https://codeforces.com//contest/680/problem/B",
    "problemId": "61900",
    "problem_idx": "B",
    "shortId": "680B",
    "contest_number": "680",
    "problem_submissions": {
        "E": [
            18325043,
            18336819,
            18313780,
            18325133,
            18326159,
            91465868,
            91465765,
            18326865,
            18326653,
            18321290,
            18325524
        ],
        "D": [
            18318422,
            18317712,
            18319515,
            18318081,
            18319018,
            18319894,
            18321280,
            18314391,
            18321896,
            18322082,
            18323629,
            18321461
        ],
        "C": [
            18310807,
            18309120,
            18309109,
            18310395,
            18309474,
            18309104,
            18322448,
            18311311,
            18310069,
            18313252,
            93169698,
            91285497,
            20188952,
            18318579,
            18308421,
            18311792,
            18307772,
            18311986,
            18308165,
            18323717,
            18309473,
            18312494
        ],
        "B": [
            18305109,
            18304731,
            18305069,
            18305817,
            18305879,
            18305478,
            18318612,
            18306119,
            18307273,
            18305717,
            54153853,
            54153852,
            54153523,
            54153520,
            18308586,
            18305117,
            18306452,
            18305702,
            18306808,
            18308328,
            18304898,
            18305913,
            18306422
        ],
        "A": [
            18302780,
            18302872,
            18302977,
            18303253,
            18302950,
            18302797,
            18317513,
            18303506,
            18302976,
            18303711,
            54152578,
            54152576,
            54152557,
            54152556,
            18306442,
            18302916,
            18303646,
            18303474,
            18304094,
            18302798,
            18302792,
            18304079,
            18303143
        ]
    },
    "name": "B. Bear and Finding Criminals",
    "statement": "There are cities in Bearland, numbered through . Cities are arranged in\r\none long row. The distance between cities and is equal to .Limak is a\r\npolice officer. He lives in a city . His job is to catch criminals. It’s\r\nhard because he doesn’t know in which cities criminals are. Though, he\r\nknows that there is criminal in each city.Limak is going to use a BCD\r\n(Bear Criminal Detector). The BCD will tell Limak how many criminals\r\nthere are for every distance from a city . After that, Limak can catch a\r\ncriminal in each city for which he that there must be a criminal.You\r\nknow in which cities criminals are. Count the number of criminals Limak\r\nwill catch, after he uses the BCD.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <cstdio>\n#include <string>\n#include <set>\n#include <map>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\n#define de(x) cout << #x << \"=\" << x << endl\n#define rep(i,a,b) for(int i=a;i<b;++i)\n#define all(x) (x).begin(),(x).end()\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\nint a , n , x[110] , o[110];\nint main(){\n    cin >> n >> a;\n    rep(i,1,n+1) cin >> x[i];\n    int ans = 0;\n    for(int i=a,j=a;i>=1||j<=n;--i,++j){\n        bool ok = true;\n        if(i >= 1 && !x[i]) ok = false;\n        if(j <= n && !x[j]) ok = false;\n        if(ok){\n            if(i >= 1) o[i] = true;\n            if(j <= n) o[j] = true;\n        }\n    }\n    rep(i,1,n+1) ans += o[i];\n    cout << ans << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Bear and Finding Criminals.json",
    "editorial_link": "https://codeforces.com//blog/entry/45310",
    "editorial": "Limak canât catch a criminal only if there are two cities at the same\r\ndistance and only one of them contains a criminal. You should iterate\r\nover the distance and for each distance check if and are both in range\r\nand if only one of them has . code1\r\n",
    "hint": []
}