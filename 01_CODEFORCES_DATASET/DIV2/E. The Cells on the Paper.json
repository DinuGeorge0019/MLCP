{
    "link": "https://codeforces.com//contest/1608/problem/E",
    "problemId": "1223927",
    "problem_idx": "E",
    "shortId": "1608E",
    "contest_number": "1608",
    "problem_submissions": {
        "G": [
            138775127
        ],
        "F": [
            138754387,
            138771178,
            138771063,
            138772062,
            138791656,
            138791262,
            138768315,
            138766868,
            157787859,
            164237887,
            237837030,
            237836998,
            237835750
        ],
        "E": [
            138739786,
            138742154,
            138749882,
            138750135,
            138747933,
            138773994,
            138772884,
            138751851,
            138752060,
            138750338,
            138775532,
            138760313,
            138774000,
            138762726,
            138757936,
            138757827,
            138764476,
            138758978,
            138759090,
            138760707,
            138762156,
            138756888
        ],
        "D": [
            138734567,
            138734532,
            138736194,
            138735000,
            138740009,
            138735872,
            138737965,
            138741407,
            138737384,
            138742340,
            138747991,
            138746601,
            138745994,
            138748332,
            138739363,
            138743644,
            138745225,
            138751720,
            138746081
        ],
        "C": [
            138730911,
            138728412,
            138732051,
            138729895,
            138733167,
            138732651,
            138732813,
            138735111,
            138729971,
            138736027,
            138735972,
            138737416,
            138733290,
            138734144,
            138732973,
            138735675,
            138739036,
            138733532,
            138737913
        ],
        "B": [
            138728496,
            138730558,
            138729168,
            138727806,
            138728454,
            138727786,
            138728495,
            138729879,
            138726790,
            138731838,
            138730784,
            138733303,
            138728802,
            138731138,
            138729760,
            138729468,
            138732919,
            138731528,
            138735209
        ],
        "A": [
            138720875,
            138721636,
            138720831,
            138720708,
            138721065,
            138720677,
            138722900,
            138720671,
            138720647,
            138720885,
            138721095,
            138720890,
            138720651,
            138720737,
            138720886,
            138721221,
            138721571,
            138720878,
            138720786
        ]
    },
    "name": "E. The Cells on the Paper",
    "statement": "On an endless checkered sheet of paper, n cells are chosen and colored\r\nin three colors, where n is divisible by 3. It turns out that there are\r\nexactly\r\nfrac{n}{3} marked cells of each of three colors! Find the largest such k\r\nthat it\u2019s possible to choose\r\nfrac{k}{3} cells of each color, remove all other marked cells, and then\r\nselect three rectangles with sides parallel to the grid lines so that\r\nthe following conditions hold: No two rectangles can intersect (but they\r\ncan share a part of the boundary). In other words, the area of\r\nintersection of any two of these rectangles must be 0. The i-th\r\nrectangle contains all the chosen cells of the i-th color and no chosen\r\ncells of other colors, for i = 1, 2, 3.\r\n",
    "solutions": [
        "#ifndef LOCAL\n#pragma GCC optimize (\"Ofast\")\n#pragma GCC optimize (\"unroll-loops\")\n#endif\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll=long long;\n//#define int ll\n\n#define rng(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,b) rng(i,0,b)\n#define gnr(i,a,b) for(int i=int(b)-1;i>=int(a);i--)\n#define per(i,b) gnr(i,0,b)\n#define pb push_back\n#define eb emplace_back\n#define a first\n#define b second\n#define bg begin()\n#define ed end()\n#define all(x) x.bg,x.ed\n#define si(x) int(x.size())\n#ifdef LOCAL\n#define dmp(x) cerr<<__LINE__<<\" \"<<#x<<\" \"<<x<<endl\n#else\n#define dmp(x) void(0)\n#endif\n\ntemplate<class t,class u> bool chmax(t&a,u b){if(a<b){a=b;return true;}else return false;}\ntemplate<class t,class u> bool chmin(t&a,u b){if(b<a){a=b;return true;}else return false;}\n\ntemplate<class t> using vc=vector<t>;\ntemplate<class t> using vvc=vc<vc<t>>;\n\nusing pi=pair<int,int>;\nusing vi=vc<int>;\n\ntemplate<class t,class u>\nostream& operator<<(ostream& os,const pair<t,u>& p){\n\treturn os<<\"{\"<<p.a<<\",\"<<p.b<<\"}\";\n}\n\ntemplate<class t> ostream& operator<<(ostream& os,const vc<t>& v){\n\tos<<\"{\";\n\tfor(auto e:v)os<<e<<\",\";\n\treturn os<<\"}\";\n}\n\n#define mp make_pair\n#define mt make_tuple\n#define one(x) memset(x,-1,sizeof(x))\n#define zero(x) memset(x,0,sizeof(x))\n#ifdef LOCAL\nvoid dmpr(ostream&os){os<<endl;}\ntemplate<class T,class... Args>\nvoid dmpr(ostream&os,const T&t,const Args&... args){\n\tos<<t<<\" \";\n\tdmpr(os,args...);\n}\n#define dmp2(...) dmpr(cerr,__LINE__,##__VA_ARGS__)\n#else\n#define dmp2(...) void(0)\n#endif\n\nusing uint=unsigned;\nusing ull=unsigned long long;\n\ntemplate<class t,size_t n>\nostream& operator<<(ostream&os,const array<t,n>&a){\n\treturn os<<vc<t>(all(a));\n}\n\ntemplate<int i,class T>\nvoid print_tuple(ostream&,const T&){\n}\n\ntemplate<int i,class T,class H,class ...Args>\nvoid print_tuple(ostream&os,const T&t){\n\tif(i)os<<\",\";\n\tos<<get<i>(t);\n\tprint_tuple<i+1,T,Args...>(os,t);\n}\n\ntemplate<class ...Args>\nostream& operator<<(ostream&os,const tuple<Args...>&t){\n\tos<<\"{\";\n\tprint_tuple<0,tuple<Args...>,Args...>(os,t);\n\treturn os<<\"}\";\n}\n\ntemplate<class t>\nvoid print(t x,int suc=1){\n\tcout<<x;\n\tif(suc==1)\n\t\tcout<<\"\\n\";\n\tif(suc==2)\n\t\tcout<<\" \";\n}\n\nll read(){\n\tll i;\n\tcin>>i;\n\treturn i;\n}\n\nvi readvi(int n,int off=0){\n\tvi v(n);\n\trep(i,n)v[i]=read()+off;\n\treturn v;\n}\n\npi readpi(int off=0){\n\tint a,b;cin>>a>>b;\n\treturn pi(a+off,b+off);\n}\n\ntemplate<class t,class u>\nvoid print(const pair<t,u>&p,int suc=1){\n\tprint(p.a,2);\n\tprint(p.b,suc);\n}\n\ntemplate<class T>\nvoid print(const vector<T>&v,int suc=1){\n\trep(i,v.size())\n\t\tprint(v[i],i==int(v.size())-1?suc:2);\n}\n\ntemplate<class T>\nvoid print_offset(const vector<T>&v,ll off,int suc=1){\n\trep(i,v.size())\n\t\tprint(v[i]+off,i==int(v.size())-1?suc:2);\n}\n\ntemplate<class T,size_t N>\nvoid print(const array<T,N>&v,int suc=1){\n\trep(i,N)\n\t\tprint(v[i],i==int(N)-1?suc:2);\n}\n\nstring readString(){\n\tstring s;\n\tcin>>s;\n\treturn s;\n}\n\ntemplate<class T>\nT sq(const T& t){\n\treturn t*t;\n}\n\n//#define CAPITAL\nvoid yes(bool ex=true){\n\t#ifdef CAPITAL\n\tcout<<\"YES\"<<\"\\n\";\n\t#else\n\tcout<<\"Yes\"<<\"\\n\";\n\t#endif\n\tif(ex)exit(0);\n\t#ifdef LOCAL\n\tcout.flush();\n\t#endif\n}\nvoid no(bool ex=true){\n\t#ifdef CAPITAL\n\tcout<<\"NO\"<<\"\\n\";\n\t#else\n\tcout<<\"No\"<<\"\\n\";\n\t#endif\n\tif(ex)exit(0);\n\t#ifdef LOCAL\n\tcout.flush();\n\t#endif\n}\nvoid possible(bool ex=true){\n\t#ifdef CAPITAL\n\tcout<<\"POSSIBLE\"<<\"\\n\";\n\t#else\n\tcout<<\"Possible\"<<\"\\n\";\n\t#endif\n\tif(ex)exit(0);\n\t#ifdef LOCAL\n\tcout.flush();\n\t#endif\n}\nvoid impossible(bool ex=true){\n\t#ifdef CAPITAL\n\tcout<<\"IMPOSSIBLE\"<<\"\\n\";\n\t#else\n\tcout<<\"Impossible\"<<\"\\n\";\n\t#endif\n\tif(ex)exit(0);\n\t#ifdef LOCAL\n\tcout.flush();\n\t#endif\n}\n\nconstexpr ll ten(int n){\n\treturn n==0?1:ten(n-1)*10;\n}\n\nconst ll infLL=LLONG_MAX/3;\n\n#ifdef int\nconst int inf=infLL;\n#else\nconst int inf=INT_MAX/2-100;\n#endif\n\nint topbit(signed t){\n\treturn t==0?-1:31-__builtin_clz(t);\n}\nint topbit(ll t){\n\treturn t==0?-1:63-__builtin_clzll(t);\n}\nint botbit(signed a){\n\treturn a==0?32:__builtin_ctz(a);\n}\nint botbit(ll a){\n\treturn a==0?64:__builtin_ctzll(a);\n}\nint popcount(signed t){\n\treturn __builtin_popcount(t);\n}\nint popcount(ll t){\n\treturn __builtin_popcountll(t);\n}\nbool ispow2(int i){\n\treturn i&&(i&-i)==i;\n}\nll mask(int i){\n\treturn (ll(1)<<i)-1;\n}\n\nbool inc(int a,int b,int c){\n\treturn a<=b&&b<=c;\n}\n\ntemplate<class t> void mkuni(vc<t>&v){\n\tsort(all(v));\n\tv.erase(unique(all(v)),v.ed);\n}\n\nll rand_int(ll l, ll r) { //[l, r]\n\t#ifdef LOCAL\n\tstatic mt19937_64 gen;\n\t#else\n\tstatic mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count());\n\t#endif\n\treturn uniform_int_distribution<ll>(l, r)(gen);\n}\n\ntemplate<class t>\nvoid myshuffle(vc<t>&a){\n\trep(i,si(a))swap(a[i],a[rand_int(0,i)]);\n}\n\ntemplate<class t>\nint lwb(const vc<t>&v,const t&a){\n\treturn lower_bound(all(v),a)-v.bg;\n}\n\nvvc<int> readGraph(int n,int m){\n\tvvc<int> g(n);\n\trep(i,m){\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\t//sc.read(a,b);\n\t\ta--;b--;\n\t\tg[a].pb(b);\n\t\tg[b].pb(a);\n\t}\n\treturn g;\n}\n\nvvc<int> readTree(int n){\n\treturn readGraph(n,n-1);\n}\n\nstruct P{\n\tint x,y,c;\n\tvoid readinit(){\n\t\tcin>>x>>y>>c;\n\t\tc--;\n\t}\n\tvoid rot(){\n\t\ttie(x,y)=pi(-y,x);\n\t}\n};\n\nvoid slv(){\n\tint n;cin>>n;\n\tvc<P> ps(n);\n\trep(i,n)ps[i].readinit();\n\tint lw=0,up=n/3+1;\n\tvi a,b,c;\n\twhile(up-lw>1){\n\t\tconst int mid=(lw+up)/2;\n\t\t\n\t\tbool ok=false;\n\t\trep(dir,4)if(!ok){\n\t\t\trep(ini,3)if(!ok){\n\t\t\t\ta.clear();\n\t\t\t\trep(i,n)if(ps[i].c==ini)a.pb(ps[i].x);\n\t\t\t\tnth_element(a.bg,a.bg+(mid-1),a.ed);\n\t\t\t\tint lf=a[mid-1];\n\t\t\t\t\n\t\t\t\trep(_,2){//x,y\n\t\t\t\t\tb.clear();\n\t\t\t\t\tc.clear();\n\t\t\t\t\trep(i,n)if(lf<ps[i].x){\n\t\t\t\t\t\tif(ps[i].c==(ini+1)%3){\n\t\t\t\t\t\t\tb.pb(_==0?ps[i].x:ps[i].y);\n\t\t\t\t\t\t}else if(ps[i].c==(ini+2)%3){\n\t\t\t\t\t\t\tc.pb(_==0?ps[i].x:ps[i].y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(si(b)>=mid&&si(c)>=mid){\n\t\t\t\t\t\trep($,2){\n\t\t\t\t\t\t\tnth_element(b.bg,b.bg+(mid-1),b.ed);\n\t\t\t\t\t\t\tnth_element(c.bg,c.ed-mid,c.ed);\n\t\t\t\t\t\t\tif(b[mid-1]<c[si(c)-mid]){\n\t\t\t\t\t\t\t\tok=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tswap(b,c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\trep(i,n){\n\t\t\t\tps[i].rot();\n\t\t\t}\n\t\t}\n\t\tif(ok)lw=mid;\n\t\telse up=mid;\n\t}\n\tprint(lw*3);\n}\n\nsigned main(){\n\tcin.tie(0);\n\tios::sync_with_stdio(0);\n\tcout<<fixed<<setprecision(20);\n\t\n\t//int t;cin>>t;rep(_,t)\n\tslv();\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "implementation",
        "sortings"
    ],
    "dificulty": "2800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. The Cells on the Paper.json",
    "editorial_link": "https://codeforces.com//blog/entry/97782",
    "editorial": "Rectangles in optimal answer always arranged in one of the following\r\nways: horizontally from left to right; divided by : first rectangle is\r\nupper than second and third, and the second is to the left of the third;\r\nrotations of previous ways. Lets consider all four rotations and find\r\nbest answer for arrangements 1 and 2. Additionally, fix the order of\r\ncolors, they will be .Arrangement 1 can be found by binary search on .\r\nGreedily take leftmost points of first color and rightmost points of\r\nthird. Check if rectangles does not cross and it is enough points of\r\nseconds color between rectangles.Arrangement 2 is binary search on too.\r\nTake uppermost points of first color, in remaining area take leftmost\r\npoints of second color, check if is enough points of third color in\r\nremaining area.Considering the constant factor, in total solution works\r\nin .Bonus. Task can be solved in . In first, sort all points once by and\r\nonce by . Arrangement 1 can be solved by two pointers in . For\r\narrangement 2 let first (upper) rectangle be empty, and all points be\r\ndivided into two noncrossed rectangles in such way that difference\r\nbetween sizes is minimal possible. Now lets move bottom of first\r\nrectangle and remove points of second and third colors from their\r\nrectangles keeping difference as minimum as possible. It can be achieved\r\nwith linked list in .\r\n"
}