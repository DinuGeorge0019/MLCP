{
    "link": "https://codeforces.com//contest/822/problem/D",
    "problemId": "112701",
    "problem_idx": "D",
    "shortId": "822D",
    "contest_number": "822",
    "problem_submissions": {
        "F": [
            28226477,
            28227833,
            28234485,
            121378904,
            28235297,
            28231678,
            28231485,
            28258361
        ],
        "D": [
            28220361,
            28241973,
            28222879,
            28224886,
            28220519,
            28218772,
            28221801,
            28232006,
            28222390,
            28222910,
            28223049,
            28223706,
            28222751,
            28223008,
            28223545,
            28225049,
            30808892,
            30808809,
            30775148,
            30775133,
            28260630,
            28260627,
            28260623,
            28260619,
            28260616,
            28222313,
            28221933,
            28223249,
            28222763
        ],
        "C": [
            28217855,
            28220105,
            28229992,
            28218508,
            28216902,
            28218827,
            28229058,
            28219916,
            28218406,
            28233624,
            28219679,
            28219443,
            28243847,
            28242189,
            28220976,
            28220363,
            28217221,
            28234024,
            28220512,
            28220807
        ],
        "B": [
            28215617,
            28217499,
            28217671,
            28215623,
            28216740,
            28215319,
            28227052,
            28216354,
            28215387,
            28712598,
            28216046,
            28216098,
            28217782,
            28218866,
            28215991,
            28217059,
            28215364,
            28224742,
            28216904,
            28216277
        ],
        "A": [
            28213695,
            28241921,
            28215982,
            28214402,
            28213808,
            28213653,
            28225926,
            28213772,
            28213642,
            28213882,
            28213766,
            28213670,
            28216840,
            28213795,
            28214218,
            28213662,
            28224209,
            28214112,
            28214126
        ],
        "E": [
            28265504,
            28265214,
            28263196,
            28263185,
            28262827,
            28262769,
            28261419,
            28261271,
            28261020,
            28248181,
            28229657,
            28474980,
            28225496,
            104050719,
            28227963,
            28248236,
            28295336,
            28271106
        ]
    },
    "name": "D. My pretty girl Noora",
    "statement": "In Pavlopolis University where Noora studies it was decided to hold\r\nbeauty contest \"Miss Pavlopolis University\". Let\u2019s describe the process\r\nof choosing the most beautiful girl in the university in more detail.The\r\ncontest is held in several stages. Suppose that exactly girls\r\nparticipate in the competition initially. All the participants are\r\ndivided into equal groups, participants in each group. Furthermore the\r\nnumber is chosen arbitrarily, i. e. on every stage number can be\r\ndifferent. Within each group the jury of the contest compares beauty of\r\nthe girls in the format \"each with each\". In this way, if group consists\r\nof girls, then comparisons occur. Then, from each group, the most\r\nbeautiful participant is selected. Selected girls enter the next stage\r\nof the competition. Thus if girls were divided into groups, participants\r\nin each group, then exactly participants will enter the next stage. The\r\ncontest continues until there is exactly one girl left who will be \"Miss\r\nPavlopolis University\"But for the jury this contest is a very tedious\r\ntask. They would like to divide the girls into groups in each stage so\r\nthat the total number of pairwise comparisons of the girls is as few as\r\npossible. Let be the minimal total number of comparisons that should be\r\nmade to select the most beautiful participant, if we admit girls to the\r\nfirst stage.The organizers of the competition are insane. They give\r\nNoora three integers , and and ask the poor girl to calculate the value\r\nof the following expression: . However, since the value of this\r\nexpression can be quite large the organizers ask her to calculate it\r\nmodulo . If Noora can calculate the value of this expression the\r\norganizers promise her to help during the beauty contest. But the poor\r\ngirl is not strong in mathematics, so she turned for help to Leha and he\r\nturned to you.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nconst int MOD = 1E9 + 7;\n\nstd::vector <int> prime;\nbool is_nonprime[5100000];\nint f[5100000];\n\nint main () {\n\tfor (int i = 2; i <= 5000000; ++i) {\n\t\tif (!is_nonprime[i]) {\n\t\t\tprime.push_back (i);\n\t\t\tf[i] = 1LL * i * (i - 1) / 2 % MOD;\n\t\t}\n\t\tfor (int j = 0; i * prime[j] <= 5000000 && j < prime.size (); ++j) {\n\t\t\tis_nonprime[i * prime[j]] = true;\n\t\t\tf[i * prime[j]] = (f[i] + (1LL * prime[j] * (prime[j] - 1) / 2 % MOD) * i % MOD) % MOD;\n\t\t\tif (i % prime[j] == 0) break;\n\t\t}\n\t}\n\tint T, L, R;\n\tscanf (\"%d%d%d\", &T, &L, &R);\n\tint mul = 1, ans = 0;\n\tfor (int i = L; i <= R; ++i) {\n//\t\tprintf (\"%d\\n\", f[i]);\n\t\tans = (ans + 1LL * mul * f[i] % MOD) % MOD;\n\t\tmul = (1LL * mul * T) % MOD;\n\t}\n\tprintf (\"%d\\n\", ans);\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. My pretty girl Noora.json",
    "editorial_link": "https://codeforces.com//blog/entry/53068?locale=en",
    "editorial": "Suppose we have already calculated . Then calculating the value of the\r\nexpression is easy.Consider process of calculating . Suppose we found\r\noptimal answer. Represent this answer as sequence of integers on the\r\nfirst stage we will divide girls into groups of participants, on the\r\nsecond stage into groups of participants and so on. Let us prove that\r\nall should be prime.Suppose some is a composite number. Then it can be\r\ndecomposed into two numbers . In addition, let girls are admitted to the\r\n-th stage. Then on current -th stage comparisons will occur. But if we\r\ndivide this stage into two new stages, then number of comparisons is .\r\nSo, we proved that all should be prime. Then it\u00e2\u0080\u0099s easy to write DP which\r\nwill be calculated by transition from the state to the states given by\r\ndividing current state by prime divisors. For solving this task we can\r\nuse Eratosthenes sieve.Total complexity is same as complexity of\r\nEratosthenes sieve: .In addition you can prove the fact that we should\r\nsplit the girls into groups by prime numbers in the order of their\r\nincreasing. This optimization significantly accelerates the algorithm.\r\n"
}