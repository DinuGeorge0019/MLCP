{"link": "https://codeforces.com//contest/604/problem/A", "problemId": "42005", "problem_idx": "A", "shortId": "604A", "contest_number": "604", "problem_submissions": {"D": [14596500, 14593346, 14595214, 14597164, 14594625, 14591286, 14596851, 14596627, 14597744, 14595935, 14605132, 14596012, 14596656, 14597363, 14604366], "E": [14595112, 14597709, 14599612, 14601657, 14601583, 14602620, 14601006, 14598712, 14611507, 14600405, 14603271, 14606898, 14598106], "C": [14591727, 14591485, 14590401, 14591803, 14590167, 14598812, 14590931, 14593957, 14594227, 14592838, 14592345, 14591994, 14604053, 14594007, 14591853, 14592988], "B": [14589366, 14588467, 14587631, 14589936, 14596744, 23519332, 14588532, 14589419, 14589534, 14587511, 14588487, 14588973, 14588129, 14588264, 14589189], "A": [14587013, 14586403, 14586260, 14587679, 14595485, 14586765, 14586177, 14586973, 14586715, 14586347, 14586267, 14586259, 14587001, 14586457, 14586288, 14586867]}, "name": "A. Uncowed Forces", "statement": "Kevin Sun has just finished competing in Codeforces Round 334! The round\r\nwas 120 minutes long and featured five problems with maximum point\r\nvalues of 500, 1000, 1500, 2000, and 2500, respectively. Despite the\r\nchallenging tasks, Kevin was uncowed and bulldozed through all of them,\r\ndistinguishing himself from the herd as the best cowmputer scientist in\r\nall of Bovinia. Kevin knows his submission time for each problem, the\r\nnumber of wrong submissions that he made on each problem, and his total\r\nnumbers of successful and unsuccessful hacks. Because Codeforces scoring\r\nis complicated, Kevin wants you to write a program to compute his final\r\nscore.Codeforces scores are computed as follows: If the maximum point\r\nvalue of a problem is , and Kevin submitted correctly at minute but made\r\nwrong submissions, then his score on that problem is . His total score\r\nis equal to the sum of his scores for each problem. In addition, Kevin\u2019s\r\ntotal score gets increased by points for each successful hack, but gets\r\ndecreased by points for each unsuccessful hack.All arithmetic operations\r\nare performed with absolute precision and no rounding. It is guaranteed\r\nthat Kevin\u2019s final score is an integer.\r\n", "solutions": ["#include<cstdio>\n#include<bitset>\n#include<vector>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<ctime>\n#include<map>\n#include<set>\n#include<queue>\n#include<algorithm>\n\nusing namespace std;\n\nint N, t[10], w[10], a, b;\n\ndouble mod (double x)\n{\n    if (x < 0) return -x;\n    return x;\n}\n\nint main()\n{\n//freopen (\"input\", \"r\", stdin);\n//freopen (\"output\", \"w\", stdout);\n\nfor (int i=1; i<=5; i++)\n    scanf (\"%d\", &t[i]);\nfor (int i=1; i<=5; i++)\n    scanf (\"%d\", &w[i]);\nscanf (\"%d %d\", &a, &b);\ndouble val = 100.0 * a - 50.0 * b;\nfor (int i=1; i<=5; i++)\n{\n    double x = i * 500.0;\n    double curr = x - (double) x * t[i] / 250.0 - 50.0 * w[i];\n    if (0.3 * x > curr) curr = 0.3 * x;\n    val += curr;\n}\n/*int sol = (int) val, pos, mini = 10000.0;\nfor (int i=sol - 2; i<=sol + 2; i++)\n    if (mod ((double) i - val) < mini)\n        mini = mod ((double) i - val), pos = i;\nprintf (\"%d\\n\", pos);*/\nprintf (\"%.lf\\n\", val);\n\nreturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1000", "interactive": false}