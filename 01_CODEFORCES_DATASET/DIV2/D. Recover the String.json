{"link": "https://codeforces.com//contest/709/problem/D", "problemId": "68948", "problem_idx": "D", "shortId": "709D", "contest_number": "709", "problem_submissions": {"E": [20130641, 20124651, 20127494, 20128647, 20134582, 20126856, 20131635], "D": [20124898, 20125348, 20125590, 20127651, 20134541, 20123785, 20123545, 20128259, 20122648, 20123757, 20124877, 20126002, 20125331, 20135343, 20147031, 20127080, 20127410], "A": [20115354, 20109861, 20109752, 20110920, 20109926, 20111099, 20110022, 20111671, 20109642, 20109791, 20110166, 20112527, 20111078, 20111468, 20109878, 20109709, 20111812, 20111626, 20110794], "B": [20113833, 20112032, 20112031, 20115708, 20113141, 20117610, 20114244, 20113474, 20115654, 20113525, 20115877, 20114171, 20127022, 20116909, 20114086, 20127412, 20114624, 20117349, 20114057], "C": [20111159, 20114853, 20115377, 20110581, 20114157, 20114293, 20114683, 20116230, 20114209, 20116228, 20114971, 20116431, 20115960, 20116412, 20115647, 20114195, 20117301, 20114265, 20116593]}, "name": "D. Recover the String", "statement": "For each string consisting of characters \u201d and \u201d one can define four\r\nintegers , , and , where is the number of of length of the string equal\r\nto the sequence . In these problem you are given four integers , , , and\r\nhave to find any non-empty string that matches them, or determine that\r\nthere is no such string. One can prove that if at least one answer\r\nexists, there exists an answer of length no more than .\r\n", "solutions": ["#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+10;\nconst int INF=1e8;\nint aa[N];\ntypedef __int64 LL;\nint sta[N],top;\nvoid init(){\n    int n=1e5;\n    int ed=2e9;\n    top=0;\n    sta[top++]=0;\n    for(int i=2;i<=n;i++){\n        if(i>ed/(i-1))break;\n        sta[top++]=i*(i-1)/2;\n    }\n    //printf(\"%d %d\\n\",top,sta[top-1]);\n}\nint fun(int b,int c,int x,int y){\n    if(x>(b+c)/y)return 0;\n    if(x*y==b+c)return 1;\n    return 0;\n}\nint main(){\n    #ifdef DouBi\n    freopen(\"in.cpp\",\"r\",stdin);\n    #endif // DouBi\n    init();\n    int a,b,c,d;\n    while(scanf(\"%d%d%d%d\",&a,&b,&c,&d)!=EOF){\n        int x=lower_bound(sta,sta+top,a)-sta;\n        int y=lower_bound(sta,sta+top,d)-sta;\n        if(x>=top||y>=top||sta[x]!=a||sta[y]!=d){\n            printf(\"Impossible\\n\");\n        }\n        else{\n            if(x&&y){\n                x++;y++;\n                if(fun(b,c,x,y)){\n                    while(b){\n                        if(b>=y){\n                            printf(\"0\");\n                            x--;\n                            b-=y;\n                        }\n                        else {\n                            printf(\"1\");\n                            y--;\n                        }\n                    }\n                    while(y)printf(\"1\"),y--;\n                    while(x)printf(\"0\"),x--;\n                    printf(\"\\n\");\n                }\n                else {\n                    printf(\"Impossible\\n\");\n                }\n            }\n            else {\n                if(b==0&&c==0){\n                    if(!x){\n                        for(int i=0;i<=y;i++)printf(\"1\");\n                        printf(\"\\n\");\n                    }\n                    else {\n                        for(int i=0;i<=x;i++)printf(\"0\");\n                        printf(\"\\n\");\n                    }\n                }\n                else {\n                    x++;y++;\n                    if(fun(b,c,x,y)){\n                        while(b){\n                            if(b>=y){\n                                printf(\"0\");\n                                x--;\n                                b-=y;\n                            }\n                            else {\n                                printf(\"1\");\n                                y--;\n                            }\n                        }\n                        while(y)printf(\"1\"),y--;\n                        while(x)printf(\"0\"),x--;\n                        printf(\"\\n\");\n                    }\n                    else {\n                        printf(\"Impossible\\n\");\n                    }\n                }\n            }\n        }\n//        else {\n//            printf(\"Impossible\\n\");\n//        }\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "math"], "dificulty": "1900", "interactive": false}