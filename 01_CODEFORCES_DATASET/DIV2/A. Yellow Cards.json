{
    "link": "https://codeforces.com//contest/1215/problem/A",
    "problemId": "412391",
    "problem_idx": "A",
    "shortId": "1215A",
    "contest_number": "1215",
    "problem_submissions": {
        "F": [
            60620224,
            60633144,
            60628796,
            62102987,
            60657759
        ],
        "E": [
            60614830,
            60620100,
            60624259,
            60618193,
            60620939,
            60619722,
            60618555,
            60619211,
            60623129,
            60624049,
            60623962,
            60621062,
            60625235,
            60625015,
            60623138,
            60622255,
            60623519,
            60627768,
            60628419,
            60622708
        ],
        "D": [
            60613485,
            60617335,
            60619535,
            60616864,
            60615351,
            60616017,
            60622796,
            60619079,
            60617400,
            60616935,
            60621165,
            60617806,
            60616391,
            60616135,
            60618699,
            60620021,
            60619257,
            60623666,
            60614165,
            60618490
        ],
        "C": [
            60611883,
            60614880,
            60616986,
            60613872,
            60612356,
            60613808,
            60613237,
            60615096,
            60615058,
            60613116,
            60615948,
            60615995,
            60614183,
            60613610,
            60614082,
            60612548,
            60614439,
            60618385,
            60611650,
            60615653
        ],
        "B": [
            60609609,
            60611892,
            60614411,
            60610320,
            60609887,
            60611712,
            60610288,
            60610941,
            60611470,
            60610159,
            60611942,
            60611586,
            60611453,
            60611164,
            60611443,
            60609621,
            60611512,
            60611710,
            60609773,
            60612774
        ],
        "A": [
            60609389,
            60610541,
            60610424,
            60609620,
            60609428,
            60610648,
            60609442,
            60611977,
            60609576,
            60609429,
            60610464,
            60609932,
            60609744,
            60609643,
            60609965,
            60616895,
            60610358,
            60609768,
            60609404,
            60611551
        ]
    },
    "name": "A. Yellow Cards",
    "statement": "The final match of the Berland Football Cup has been held recently. The\r\nreferee has shown n yellow cards throughout the match. At the beginning\r\nof the match there were a_1 players in the first team and a_2 players in\r\nthe second team.The rules of sending players off the game are a bit\r\ndifferent in Berland football. If a player from the first team receives\r\nk_1 yellow cards throughout the match, he can no longer participate in\r\nthe match he’s sent off. And if a player from the second team receives\r\nk_2 yellow cards, he’s sent off. After a player leaves the match, he can\r\nno longer receive any yellow cards. Each of n yellow cards was shown to\r\nexactly one player. Even if all players from one team (or even from both\r\nteams) leave the match, the game still continues.The referee has lost\r\nhis records on who has received each yellow card. Help him to determine\r\nthe minimum and the maximum number of players that could have been\r\nthrown out of the game.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define ll long long\n#define uint unsigned\n#define ull unsigned ll\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define PB push_back\n#define fi first\n#define se second\n#define For(i,j,k) for (int i=(int)(j);i<=(int)(k);i++)\n#define Rep(i,j,k) for (int i=(int)(j);i>=(int)(k);i--)\n#define CLR(a,v) memset(a,v,sizeof(a))\n#define CPY(a,b) memcpy(a,b,sizeof(a))\nusing namespace std;\nint a1,a2,k1,k2,n;\nint main(){\n\tscanf(\"%d%d%d%d%d\",&a1,&a2,&k1,&k2,&n);\n\tint low=a1*(k1-1)+a2*(k2-1);\n\tprintf(\"%d \",max(n-low,0));\n\tif (k1>k2) swap(k1,k2),swap(a1,a2);\n\tint T1=min(n/k1,a1); a1-=k1; n-=T1*k1;\n\tprintf(\"%d\",T1+n/k2);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Yellow Cards.json",
    "editorial_link": "https://codeforces.com//blog/entry/69815",
    "editorial": "At first, if , then we swap with and with , so the number of yellow\r\ncards required to send a player of the first team off is not greater\r\nthan the same value for the second team. If all players from the first\r\nteam receive cards each and all players from the second team receive\r\ncards each, we will minimize the number of players who left the game.\r\nLet . If , then the minimum number of players who left the game is equal\r\nto . In the other case, if any player receivse one more yellow card, he\r\nleaves the game. So the minimum number of players who left the game is\r\n.When we maximize the number of players who left the game, at first we\r\nshould give cards to players in the first team, and then give cards to\r\nplayers in the second team. So, if , the answer is . In the other case,\r\nthe answer is .\r\n",
    "hint": []
}