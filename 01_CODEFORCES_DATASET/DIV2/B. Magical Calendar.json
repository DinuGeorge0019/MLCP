{
    "link": "https://codeforces.com//contest/1371/problem/B",
    "problemId": "658942",
    "problem_idx": "B",
    "shortId": "1371B",
    "contest_number": "1371",
    "problem_submissions": {
        "F": [
            85724126,
            85680245,
            85681350,
            85699885
        ],
        "E2": [
            85657442,
            85655168,
            85656290,
            85748587,
            85748232,
            85708674,
            85665045,
            85668857,
            85658632,
            85666166,
            85670120,
            85660293,
            85663781,
            85670954,
            85668210,
            85680055,
            85669661,
            85682351,
            85669454,
            85672846,
            85682060,
            85671106
        ],
        "E1": [
            85647787,
            85655311,
            85656202,
            85709850,
            85654362,
            85651600,
            85658237,
            85658032,
            85654262,
            85660541,
            85663528,
            85656065,
            85668083,
            85661660,
            85665638,
            85654459,
            85668563,
            85663741,
            85657234,
            85666469
        ],
        "D": [
            85643050,
            85667344,
            85644091,
            85642391,
            85641068,
            85648738,
            85648076,
            85650769,
            85650684,
            85651359,
            85649126,
            85650672,
            85644656,
            85652003,
            85647555,
            85653607,
            85654186,
            85646247,
            85653171
        ],
        "C": [
            85639893,
            85664644,
            85640509,
            85637217,
            85637662,
            85643069,
            85643313,
            85639582,
            85644962,
            85641558,
            85643750,
            85642402,
            85635916,
            85643555,
            85643224,
            85639831,
            85646794,
            85639649,
            85640565
        ],
        "B": [
            85637385,
            85659549,
            85636246,
            85634765,
            85643737,
            85638003,
            85639540,
            85641465,
            85641062,
            85638464,
            85641050,
            85638539,
            85645723,
            85639381,
            85639446,
            85646495,
            85640832,
            85636683,
            85636740
        ],
        "A": [
            85625335,
            85659712,
            85625054,
            85624966,
            85631182,
            85625230,
            85625986,
            85627166,
            85626824,
            85627013,
            85638725,
            85626600,
            85625210,
            85625324,
            85628198,
            85626246,
            85627731,
            85625426,
            85631949
        ]
    },
    "name": "B. Magical Calendar",
    "statement": "A competitive eater, Alice is scheduling some practices for an eating\r\ncontest on a magical calendar. The calendar is unusual because a week\r\ncontains not necessarily 7 days!In detail, she can choose any integer k\r\nwhich satisfies 1\r\nleq k\r\nleq r, and set k days as the number of days in a week.Alice is going to\r\npaint some n consecutive days on this calendar. On this calendar, dates\r\nare written from the left cell to the right cell in a week. If a date\r\nreaches the last day of a week, the next day\u2019s cell is the leftmost cell\r\nin the next (under) row.She wants to make . It means, that for any two\r\npainted cells there should exist at least one sequence of painted cells,\r\nstarted in one of these cells, and ended in another, such that any two\r\nconsecutive cells in this sequence are connected by side.Alice is\r\nconsidering the shape of the painted cells. Two shapes are the same if\r\nthere exists a way to make them exactly overlapped .For example, in the\r\npicture, a week has 4 days and Alice paints 5 consecutive days. [1] and\r\n[2] are different shapes, but [1] and [3] are equal shapes. Alice wants\r\nto know exists . As was said before, she considers only shapes, there\r\nall cells are connected by side.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint T, n, r;\nint main()\n{\n\tscanf(\"%d\", &T);\n\twhile (T--)\n\t{\n\t\tscanf(\"%d%d\", &n, &r);\n\t\tprintf(\"%lld\\n\", (r >= n ? 1 : 0) + (long long) min(r, n - 1) * (min(r, n - 1) + 1) / 2);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Magical Calendar.json",
    "editorial_link": "https://codeforces.com//blog/entry/79624",
    "editorial": "First, let\u00e2\u0080\u0099s consider in case of a week has exactly days. If , the\r\nlength of painted cells is strictly more than one week. So there are\r\nvalid shapes. (The first week contains days) The shapes have -day width,\r\nthen if the value of are different, the shapes are also different.\r\nOtherwise , there is only one valid liner pattern. The shape is\r\ninsensitive to the chosen value of . We can sum up this for , by using\r\nfollowing well-known formula: Total complexity :\r\n"
}