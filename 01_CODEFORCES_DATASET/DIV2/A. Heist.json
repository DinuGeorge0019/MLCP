{
    "link": "https://codeforces.com//contest/1041/problem/A",
    "problemId": "220439",
    "problem_idx": "A",
    "shortId": "1041A",
    "contest_number": "1041",
    "problem_submissions": {
        "F": [
            42937145,
            42936460,
            42941789,
            42939791,
            42936055,
            42943259,
            42941945,
            42942600,
            42940476,
            42943214,
            42942904,
            42941561,
            42940422,
            42942676,
            42967085,
            42945698,
            42942819,
            42940517,
            42945082
        ],
        "E": [
            42931045,
            42932542,
            42929311,
            42932587,
            42939274,
            42934189,
            42934028,
            42935828,
            42936456,
            42936222,
            42934576,
            42934053,
            42934830,
            42936131,
            42933423,
            42935645,
            42936145,
            42934904
        ],
        "D": [
            42928058,
            42928419,
            42932086,
            42926606,
            42928328,
            42929346,
            42929592,
            42930860,
            42930895,
            42928722,
            42931546,
            42929735,
            42930750,
            42931175,
            42929657,
            42930694,
            42932165,
            42929565
        ],
        "C": [
            42924598,
            42925979,
            42923335,
            42923874,
            42924882,
            42924328,
            42925322,
            42926206,
            42927308,
            42925269,
            42926071,
            42925958,
            42929148,
            42926562,
            42925843,
            42927423,
            42929003,
            42925656
        ],
        "B": [
            42919830,
            42920297,
            42919741,
            42920667,
            42921333,
            42921057,
            42919493,
            42920331,
            42920664,
            42920599,
            42920862,
            42919750,
            42921237,
            42921905,
            42921366,
            42922548,
            42922190,
            42921585
        ],
        "A": [
            42918068,
            42918894,
            42917952,
            42918346,
            42918563,
            42921193,
            42918207,
            42918103,
            42917969,
            42918179,
            42919024,
            42917972,
            42919232,
            42918320,
            42918302,
            42919340,
            42918232,
            42918340
        ]
    },
    "name": "A. Heist",
    "statement": "There was an electronic store heist last night.All keyboards which were\r\nin the store yesterday were numbered in ascending order from some\r\ninteger number x. For example, if x = 4 and there were 3 keyboards in\r\nthe store, then the devices had indices 4, 5 and 6, and if x = 10 and\r\nthere were 7 of them then the keyboards had indices 10, 11, 12, 13, 14,\r\n15 and 16.After the heist, only n keyboards remain, and they have\r\nindices a_1, a_2,\r\ndots, a_n. Calculate the minimum possible number of keyboards that have\r\nbeen stolen. The staff remember neither x nor the number of keyboards in\r\nthe store before the heist.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint a[100009];\nmain(){\n    int n;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> a[i];\n    }\n    sort(a, a+n);\n    cout << (a[n-1] - a[0] + 1)-n << endl;\n\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Heist.json",
    "editorial_link": "https://codeforces.com/blog/entry/61876",
    "editorial": "Let the minimal number from the given numbers and the maximal. So we\r\nconsider that and were minimal and maximal keyboard numbers before the\r\nheist. All given numbers are distinct, so the answer is (initial number\r\nof the keyboards is minus the remaining number of keyboards ).\r\n",
    "hint": []
}