{
    "link": "https://codeforces.com//contest/931/problem/B",
    "problemId": "162264",
    "problem_idx": "B",
    "shortId": "931B",
    "contest_number": "931",
    "problem_submissions": {
        "F": [
            35940104,
            35941465,
            35943287,
            35941080,
            35942331,
            35943653,
            35947276,
            35943719,
            35948347,
            35944673,
            35940779,
            35944545,
            35939029,
            35944604,
            35941239,
            35940667,
            35943276,
            35942053,
            35941638
        ],
        "E": [
            35935873,
            35937949,
            35939388,
            35938861,
            35938615,
            35938585,
            35938306,
            35937388,
            35944915,
            35945452,
            35936046,
            35942168,
            35938423,
            35939249,
            35936882,
            35938436
        ],
        "C": [
            35932593,
            35935542,
            35932202,
            35935230,
            35934264,
            35936847,
            35933533,
            35934506,
            35935861,
            35934976,
            35935354,
            35943273,
            35946878,
            35947399,
            35947162
        ],
        "D": [
            35930635,
            35933077,
            35934832,
            35933775,
            35935452,
            35929853,
            35935211,
            35931557,
            35934131,
            35930406,
            35933242,
            35937131,
            35943429,
            35935627,
            35932316,
            35932452
        ],
        "B": [
            35929535,
            35929870,
            35928517,
            35928303,
            35929389,
            35931362,
            35930323,
            35930011,
            35929776,
            35928105,
            35928031,
            35931499,
            35930328,
            35928842,
            35930448,
            35928972
        ],
        "A": [
            35926848,
            35929929,
            35926934,
            35926799,
            35927905,
            35929233,
            35927305,
            35927514,
            35926795,
            35926930,
            35926789,
            35928102,
            35927117,
            35926792,
            35928368,
            35926987
        ]
    },
    "name": "B. World Cup",
    "statement": "The last stage of Football World Cup is played using the play-off\r\nsystem.There are teams left in this stage, they are enumerated from to .\r\nSeveral rounds are held, in each round the remaining teams are sorted in\r\nthe order of their ids, then the first in this order plays with the\r\nsecond, the third with the fourth, the fifth with the sixth, and so on.\r\nIt is guaranteed that in each round there is even number of teams. The\r\nwinner of each game advances to the next round, the loser is eliminated\r\nfrom the tournament, there are no draws. In the last round there is the\r\nonly game with two remaining teams: the round is called the Final, the\r\nwinner is called the champion, and the tournament is over.Arkady wants\r\nhis two favorite teams to play in the Final. Unfortunately, the team ids\r\nare already determined, and it may happen that it is impossible for\r\nteams to meet in the Final, because they are to meet in some earlier\r\nstage, if they are strong enough. Determine, in which round the teams\r\nwith ids and can meet.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nint p[1000];\n\nvoid build(int id, int l, int r) {\n\tif(l + 1 >= r) {\n\t\tp[l] = id;\n\t\treturn;\n\t}\n\tint m = (l + r)/2;\n\tbuild(2*id, l, m);\n\tbuild(2*id + 1, m, r);\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tint n;\n\tcin >> n;\n\tfor(int i = 0; i < 300; ++i) {\n\t\tp[i] = i/2;\n\t}\n\tint a,b;\n\tcin >> a >> b;\n\t--a;\n\t--b;\n\tbuild(1, 0, n);\n\tint r = 0;\n\tint xa = p[a];\n\tint xb = p[b];\n\twhile(xa != xb) {\n\t\txa /= 2;\n\t\txb /= 2;\n\t\t++r;\n\t}\n\tif((1<<r) == n) cout << \"Final!\" << endl;\n\telse cout << r << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. World Cup46195.json",
    "editorial_link": "https://codeforces.com//blog/entry/58177",
    "editorial": "Initially, we need to understand the following fact. Since the number of teams in each round is even, n should be a power of two.\n\nWe will solve the problem for the 0-indexing commands, so we decrease the given a and b on one.\n\nFor each round we will determine the number of the match, in which the teams with initial numbers a and b will play. The command a will play in the match number a?/?2, and the command b will play in the match number b?/?2.\n\nIf a?/?2?=?b?/?2, then these teams will play in the same match, and we need to print the number of the current round as an answer. If the number of remaining teams equals to two \u0097 this will be the final match of the tournament.\n\nIf the match numbers not equal we consider the next round. In this case, the number of command a becomes a?/?2 and the number of number b becomes b?/?2. The number of teams which will go to the next round is n?=?n?/?2. This process is always finite, because sooner or later will remain only 2 teams and in this round will be only one match \u0097 the final match of the tournament."
}