{"link": "https://codeforces.com//contest/907/problem/C", "problemId": "140851", "problem_idx": "C", "shortId": "907C", "contest_number": "907", "problem_submissions": {"A": [33575410, 33562373, 33540675, 33541958, 33569551, 33540657, 33540926, 33554400, 33543519, 33543455, 33545359, 33546723, 33543893, 33544746, 33541852, 33545259, 33542765, 33544738, 33545990], "E": [33569336, 33565777, 33581296, 33581269, 33579404, 33566284, 33569922, 33629468, 33568809, 33566385, 33570242, 33565403, 33570350], "D": [33565126, 33562641, 33581688, 33581260, 33565908, 33566346, 33568422, 33569754, 33570678], "C": [33549830, 33551329, 33554149, 33567015, 33549957, 33554343, 33567823, 33552808, 33554965, 33557383, 33556644, 33558626, 33561202, 33556067, 33558273, 33556336, 33558166, 33556124], "B": [33544318, 33546636, 33559945, 33562988, 33544727, 33549069, 33570043, 33548318, 33549618, 33552052, 33550884, 33550827, 33550979, 33551429, 33553199, 33549528, 33551065, 33549896], "F": [33567143, 33554423, 33558532, 40494408]}, "name": "C. Shockers", "statement": "Valentin participates in a show called \"Shockers\". The rules are quite\r\neasy: jury selects one letter which Valentin doesn\u2019t know. He should\r\nmake a small speech, but every time he pronounces a word that contains\r\nthe selected letter, he receives an electric shock. He can make guesses\r\nwhich letter is selected, but for each incorrect guess he receives an\r\nelectric shock too. The show ends when Valentin guesses the selected\r\nletter correctly.Valentin can\u2019t keep in mind everything, so he could\r\nguess the selected letter much later than it can be uniquely determined\r\nand get excessive electric shocks. Excessive electric shocks are those\r\nwhich Valentin got after the moment the selected letter can be uniquely\r\ndetermined. You should find out the number of excessive electric shocks.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define _USE_MATH_DEFINES\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef complex<ld> pt;\ntypedef vector<pt> pol;\n#define nl '\\n'\n\n///* advent of code\ntypedef istringstream iss;\n#define pb push_back\n#define ins insert\n#define multiset mset\n#define getl(A) getline(cin, A)\n//*/\n\nconst ll INF = 0x3f3f3f3f;\nconst ll MOD = 1e9+7;\nconst ld EPS = 1e-9;\n\n\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\n\tunordered_set<char> a;\n\tfor (int i = 0; i < 26; i++) {\n\t\ta.insert('a'+i);\n\t}\n\n\tint n;\n\tcin >> n;\n\n\tchar c;\n\tstring s;\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> c >> s;\n\t\tif (a.size() == 1) {\n\t\t\tif (c == '!')\n\t\t\t\tans++;\n\t\t\telse if (c == '?' && !a.count(s[0]))\n\t\t\t\tans++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (c == '!') {\n\t\t\tunordered_set<char> temp;\n\t\t\tfor (char j : s) {\n\t\t\t\ttemp.insert(j);\n\t\t\t}\n\t\t\tfor (auto it = a.begin(); it != a.end(); ) {\n\t\t\t\tif (temp.count(*it))\n\t\t\t\t\tit++;\n\t\t\t\telse\n\t\t\t\t\tit = a.erase(it);\n\t\t\t}\n\t\t}\n\t\telse if (c == '.') {\n\t\t\tfor (char j : s) {\n\t\t\t\ta.erase(j);\n\t\t\t}\n\t\t}\n\t\telse if (c == '?') {\n\t\t\ta.erase(s[0]);\n\t\t}\n\t}\n\n\tcout << ans << nl;\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "implementation", "strings"], "dificulty": "1600", "interactive": false}