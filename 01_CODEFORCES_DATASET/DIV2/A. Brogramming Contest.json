{
    "link": "https://codeforces.com//contest/2064/problem/A",
    "problemId": "3209693",
    "problem_idx": "A",
    "shortId": "2064A",
    "contest_number": "2064",
    "problem_submissions": {
        "F": [
            306407892,
            306425196,
            306377965,
            306528822,
            306420583,
            306436938,
            306464619,
            306464611,
            306464596,
            306421840,
            306436020,
            306431617
        ],
        "E": [
            306390714,
            306398471,
            306384310,
            306394422,
            306398127,
            306399878,
            306406503,
            306383184,
            306400855,
            306401726,
            306402720,
            306406500,
            306407308,
            306407643
        ],
        "D": [
            306371870,
            306386641,
            306395969,
            306366170,
            306368905,
            306376156,
            306376541,
            306371606,
            306373885,
            306397500,
            306381946,
            306383232,
            306376685,
            306374721,
            306378738,
            306378728,
            306379129
        ],
        "C": [
            306354396,
            306362052,
            306353937,
            306355169,
            306355714,
            306353717,
            306358223,
            306359445,
            306355168,
            306369168,
            306356490,
            306351942,
            306356412,
            306355663,
            306365036,
            306361215,
            306362138
        ],
        "B": [
            306350175,
            306351645,
            306349804,
            306350391,
            306352487,
            306349346,
            306350952,
            306351840,
            306351364,
            306350764,
            306349120,
            306348178,
            306353114,
            306350171,
            306353103,
            306355161,
            306356448
        ],
        "A": [
            306345365,
            306345586,
            306346094,
            306345382,
            306344838,
            306344890,
            306345366,
            306345254,
            306346099,
            306344812,
            306345138,
            306344813,
            306347979,
            306345325,
            306346230,
            306349362
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/138912",
    "editorial": "SolutionNotice that if starts with a we must move the entire string to\r\nat some point. Also Notice that if we perform the operation, the total\r\nnumber of occurrences of and across both strings can only decrease by\r\none. This gives us an upper bound on the answer being the number of\r\noccurrences of and in adding one to this if it starts with the character\r\n. Now the following construction uses the same number of moves as the\r\nupper bound (thus showing it is the minimum number of moves): If begins\r\nwith then select the entire string and move it to . Then repeatedly find\r\nthe first character in or which is not equal to the character before it\r\n(note under this construction such an index can only exist in one string\r\nat a time) and selected the suffix starting from this character and move\r\nit to the other string. During this construction some prefix of will\r\ncontain s and some prefix of will contain s, so after each move the\r\ntotal number of and will decrease.So the answer to this problem will be\r\nthe number of and in adding one to the answer if it starts with .\r\n",
    "name": "A. Brogramming Contest",
    "statement": "One day after waking up, your friend challenged you to a brogramming\r\ncontest. In a brogramming contest, you are given a binary string^{\r\ntext{ }} s of length n and an initially empty binary string t. During a\r\nbrogramming contest, you can make either of the following moves any\r\nnumber of times: remove some suffix^{\r\ntext{ }} from s and place it at the end of t, or remove some suffix from\r\nt and place it at the end of s. To win the brogramming contest, you must\r\nmake the number of moves required to make s contain only the character\r\ntexttt{0} and t contain only the character\r\ntexttt{1}. Find the minimum number of moves required.^{\r\ntext{ }}A is a string consisting of characters\r\ntexttt{0} and\r\ntexttt{1}.^{\r\ntext{ }}A string a is a suffix of a string b if a can be obtained from\r\ndeletion of several (possibly, zero or all) elements from the beginning\r\nof b.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Brogramming Contest.json",
    "hint": []
}