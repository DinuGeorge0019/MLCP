{
    "link": "https://codeforces.com//contest/1797/problem/C",
    "problemId": "1868415",
    "problem_idx": "C",
    "shortId": "1797C",
    "contest_number": "1797",
    "problem_submissions": {
        "B": [
            205419034,
            201275977,
            201268460,
            202344188,
            201271807,
            201275386,
            201273112,
            201272415,
            201269513,
            201276897,
            201277640,
            201269175,
            201275166,
            202145333,
            201276000,
            201267831,
            201270551,
            201276485,
            201289099,
            201272649,
            201271253,
            201272124,
            201270606
        ],
        "A": [
            205418993,
            201265764,
            201267671,
            202344137,
            201265725,
            201267108,
            201266341,
            201266676,
            201266049,
            201269061,
            201271927,
            201266144,
            201269858,
            202145345,
            201267522,
            201265871,
            201265945,
            201268294,
            201268304,
            201268572,
            201266365,
            201267763,
            201266314
        ],
        "C": [
            201304931,
            201299785,
            202344275,
            201282998,
            201300736,
            201289854,
            201285491,
            201299725,
            201282788,
            201290162,
            201283371,
            201295706,
            202145313,
            201292638,
            201281179,
            201287038,
            201297132,
            201271589,
            201298508,
            201283505,
            201292123,
            201308055
        ],
        "E": [
            201300187,
            201295260,
            201299598,
            201320286,
            202381158,
            201379930,
            201379655,
            201379250,
            201325544,
            201325138,
            201320528,
            201338561,
            201331085,
            201338593,
            201334166,
            202145221,
            201331849,
            201345570,
            201338770,
            201329752,
            201334417,
            201332873,
            201342334,
            201330509,
            201327922
        ],
        "D": [
            201273188,
            201286495,
            202344347,
            201311226,
            201292800,
            201301138,
            201293532,
            201309768,
            201303093,
            201302579,
            201300376,
            201317473,
            202145285,
            201313643,
            201313719,
            201306889,
            201311824,
            201310494,
            201312575,
            201304976,
            201303632,
            201307784
        ],
        "F": [
            201422339,
            201658184,
            201413786
        ]
    },
    "name": "C. Li Hua and Chess",
    "statement": "Li Ming and Li Hua are playing a game. Li Hua has a chessboard of size n\r\ntimes m. Denote (r, c) (1\r\nle r\r\nle n, 1\r\nle c\r\nle m) as the cell on the r-th row from the top and on the c-th column\r\nfrom the left. Li Ming put a king on the chessboard and Li Hua needs to\r\nguess its position.Li Hua can ask Li Ming questions. In each question,\r\nhe can choose a cell and ask the minimum steps needed to move the king\r\nto the chosen cell. Each question is independent, which means the king\r\ndoesn\u2019t actually move.A king can move from (x,y) to (x\u2019,y\u2019) if and only\r\nif\r\nmax\r\n{|x-x\u2019|,|y-y\u2019|\r\n}=1 (shown in the following picture). The position of the king is chosen\r\nthe interaction.Suppose you were Li Hua, please solve this problem.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define int long long\nconst int N=1e5+5,M=305;\nusing namespace std;\nint n,m,dis1,dis2,dis3;\nvoid solve()\n{\n\tcin>>n>>m;\n\tcout<<\"? 1 1\"<<endl;\n\tcin>>dis1;\n\tif(m<=1){cout<<\"! \"<<dis1+1<<' '<<1<<endl;return;}\n\tif(n<=1){cout<<\"! \"<<1<<' '<<dis1+1<<endl;return;}\n\tcout<<\"? 1 2\"<<endl;\n\tcin>>dis2;\n\tif(dis1==dis2)\n\t{\n\t\tcout<<\"? \"<<dis1+1<<\" 1\"<<endl;\n\t\tcin>>dis3;\n\t\tcout<<\"! \"<<dis1+1<<' '<<dis3+1<<endl;\n\t\treturn;\n\t}\nelse{\n\t\tcout<<\"? \"<<1<<' '<<dis1+1<<endl;\n\t\tcin>>dis3;\n\t\tcout<<\"! \"<<dis3+1<<' '<<dis1+1<<endl;\n\t}\n}\nint tt;\nsigned main()\n{\n//\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\ttt=1;\n\tcin>>tt;\n\twhile(tt--)solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "interactive"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Li Hua and Chess.json",
    "editorial_link": "https://codeforces.com//blog/entry/114890",
    "editorial": "We can first ask and get the result . Obviously, the king must be on the\r\nfollowing two segments: from to . from to . Then, we can ask and and get\r\nthe results . There are three cases: If , the king is at . If , the king\r\nis at . If , the king is at .\r\n"
}