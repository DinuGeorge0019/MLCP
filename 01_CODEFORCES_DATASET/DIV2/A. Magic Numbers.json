{
    "link": "https://codeforces.com//contest/320/problem/A",
    "problemId": "3250",
    "problem_idx": "A",
    "shortId": "320A",
    "contest_number": "320",
    "problem_submissions": {
        "E": [
            3947787,
            3947991,
            3950460,
            3950423,
            3950804,
            3966579,
            3964196,
            3952271
        ],
        "D": [
            3945386,
            3948801,
            3947835,
            3948803,
            3948306,
            3946600,
            3946788,
            3946323,
            3947962,
            3948204,
            3949156,
            3949185,
            3948762,
            3950341,
            3948763,
            3948830,
            3949570,
            3949588,
            3948736
        ],
        "C": [
            3944304,
            3946570,
            3945118,
            3946127,
            3947195,
            3945029,
            3945376,
            3944923,
            3946219,
            3946207,
            3946206,
            3946330,
            3946413,
            3944056,
            3946806,
            3947161,
            3946298,
            3946947
        ],
        "B": [
            3943587,
            3943527,
            3944238,
            3945074,
            3946102,
            3943469,
            3943701,
            3946193,
            3944211,
            3944838,
            3944825,
            3944402,
            3943607,
            3945327,
            3945105,
            3945231,
            3944216,
            3944488,
            3945725
        ],
        "A": [
            3942664,
            3942547,
            3943263,
            3943194,
            3942602,
            3942567,
            3942605,
            3944414,
            3942943,
            3942965,
            3942610,
            3942731,
            3942604,
            3944341,
            3942932,
            3943709,
            3942746,
            3943368
        ]
    },
    "name": "A. Magic Numbers",
    "statement": "A magic number is a number formed by concatenation of numbers , and . We\r\ncan use each of these numbers any number of times. Therefore , and are\r\nmagic numbers but , and are not.You\u2019re given a number. Determine if it\r\nis a magic number or not.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<fstream>\n#include<map>\n#include<ctime>\n#include<set>\n#include<queue>\n#include<cmath>\n#include<vector>\n#include<bitset>\n#include<functional>\n#define x first\n#define y second\n#define mp make_pair\n#define pb push_back\n#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))\n#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))\nusing namespace std;\n\ntypedef long long LL;\ntypedef double ld;\n\nint n;\nint f[100];\nstring a;\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n\tcin>>a;\n\tint i;\n\tf[0]=1;\n\tREP2(i,0,a.size())\n\t{\n\t\tf[i+1]=f[i] && a[i]=='1';\n\t\tif(i)\n\t\t\tf[i+1]=f[i+1] || ( f[i-1] && a[i-1]=='1' && a[i]=='4' );\n\t\tif(i>1)\n\t\t\tf[i+1]=f[i+1] || ( f[i-2] && a[i-2]=='1' && a[i-1]=='4' && a[i]=='4' );\n\t}\n\tif(f[a.size()])\n\t\tcout<<\"YES\"<<endl;\n\telse cout<<\"NO\"<<endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Magic Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/8166",
    "editorial": "Although the input number is very small, solving the problem for\r\narbitrary length numbers using strings is easier. It\u00e2\u0080\u0099s easy to prove\r\nthat a number meeting the following conditions is magical: Here is a\r\nsample implementation in C++:\r\n"
}