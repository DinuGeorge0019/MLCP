{"link": "https://codeforces.com//contest/298/problem/A", "problemId": "2854", "problem_idx": "A", "shortId": "298A", "contest_number": "298", "problem_submissions": {"C": [3570158, 3568738, 3569545, 3567890, 3567795, 3569019, 3570396, 3567853, 3569346, 3568955, 3569646, 3569940, 3571985, 3569198, 3566584, 3569693], "D": [3568096, 3570657, 3570524, 3570016, 3570399, 3570578, 3572279, 3569208, 3571015, 3570830, 3571239, 3572221, 3569761, 3572179, 3572808, 3571486], "B": [3566471, 3567469, 3566658, 3566618, 3566674, 3566985, 3566799, 3566534, 3567818, 3567371, 3567342, 3568432, 3567391, 3566870, 3566974, 3567848], "A": [3565924, 3565788, 3565272, 3565138, 3565194, 3565362, 3565614, 3565531, 3565855, 3565619, 3565475, 3565918, 3565883, 3565243, 3569485, 3566160], "E": [3577571, 3618894, 4783067, 3641979]}, "name": "A. Snow Footprints", "statement": "There is a straight snowy road, divided into blocks. The blocks are\r\nnumbered from 1 to from left to right. If one moves from the -th block\r\nto the -th block, he will leave a right footprint on the -th block.\r\nSimilarly, if one moves from the -th block to the -th block, he will\r\nleave a left footprint on the -th block. If there already is a footprint\r\non the -th block, the new footprint will cover the old one. At the\r\nbeginning, there were no footprints. Then polar bear Alice starts from\r\nthe -th block, makes a sequence of moves and ends in the -th block. It\r\nis known that Alice never moves outside of the road. You are given the\r\ndescription of Alice\u2019s footprints. Your task is to find a pair of\r\npossible values of by looking at the footprints.\r\n", "solutions": ["//In the Name of GOD\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#define MOD 1000000007ll\n\nusing namespace std;\n\n\n\n\nint main()\n{\n\tlong long n;\n\tcin>>n;\n\tstring s;\n\tcin>>s;\n\tbool r=0,l=0;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(s[i]=='R')\n\t\t\tr=1;\n\t\tif(s[i]=='L')\n\t\t\tl=1;\n\t}\n\tif(r==0)\n\t{\n\t\tfor(int i=0;i<n;i++)\n\t\t\tif(s[i]=='L')\n\t\t\t{\n\t\t\t\tcout<<i+1<<\" \"<<i;\n\t\t\t\treturn 0;\n\t\t\t}\n\t}\n\tif(l==0)\n\t{\n\t\tfor(int i=n-1;i>0;i--)\n\t\t\tif(s[i]=='R')\n\t\t\t{\n\t\t\t\tcout<<i+1<<\" \"<<i+2;\n\t\t\t\treturn 0;\n\t\t\t}\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tif(s[i]=='R')\n\t\t{\n\t\t\tcout<<i+1<<\" \";\n\t\t\tbreak;\n\t\t}\n\tfor(int i=0;i<n;i++)\n\t\tif(s[i]=='L')\n\t\t{\n\t\t\tcout<<i;\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "1300", "interactive": false}