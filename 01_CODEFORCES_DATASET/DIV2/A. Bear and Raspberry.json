{
    "link": "https://codeforces.com//contest/385/problem/A",
    "problemId": "5931",
    "problem_idx": "A",
    "shortId": "385A",
    "contest_number": "385",
    "problem_submissions": {
        "E": [
            5794434,
            5800310,
            5798100,
            12839340,
            5793580,
            5807353,
            5798624,
            5795785
        ],
        "D": [
            5791982,
            5791338,
            5792966,
            5793920,
            5795427,
            5791662,
            5796473,
            5796329,
            5793942
        ],
        "C": [
            5788908,
            5788383,
            5788712,
            5790434,
            5789032,
            5794132,
            5791478,
            5792236,
            5791660,
            5800872,
            5791637,
            5790324,
            5790844,
            5792509,
            5789960,
            5787897,
            5791710,
            5799045
        ],
        "B": [
            5786803,
            5786394,
            5787527,
            5788072,
            5786967,
            5787817,
            5788240,
            5790217,
            5789128,
            5788273,
            5787714,
            5788006,
            5786982,
            5787829,
            5787905,
            5791193,
            5786254,
            5787251,
            5788615
        ],
        "A": [
            5786226,
            5789111,
            5786358,
            5786644,
            5786233,
            5788977,
            5786318,
            5787575,
            5786766,
            5786887,
            5786239,
            5786463,
            5786289,
            5786726,
            5786980,
            5790591,
            5788602,
            5792556,
            5787159
        ]
    },
    "name": "A. Bear and Raspberry",
    "statement": "The bear decided to store some raspberry for the winter. He cunningly\r\nfound out the price for a barrel of honey in kilos of raspberry for each\r\nof the following days. According to the bear\u2019s data, on the -th day, the\r\nprice for one barrel of honey is going to is kilos of\r\nraspberry.Unfortunately, the bear has neither a honey barrel, nor the\r\nraspberry. At the same time, the bear\u2019s got a friend who is ready to\r\nlend him a barrel of honey for exactly one day for kilograms of\r\nraspberry. That\u2019s why the bear came up with a smart plan. He wants to\r\nchoose some day , lent a barrel of honey and immediately (on day ) sell\r\nit according to a daily exchange rate. The next day the bear wants to\r\nbuy a new barrel of honey according to a daily exchange rate (as he\u2019s\r\ngot some raspberry left from selling the previous barrel) and\r\nimmediately (on day ) give his friend the borrowed barrel of honey as\r\nwell as kilograms of raspberry for renting the barrel.The bear wants to\r\nexecute his plan at most once and then hibernate. What maximum number of\r\nkilograms of raspberry can he earn? Note that if at some point of the\r\nplan the bear runs out of the raspberry, then he won\u2019t execute such a\r\nplan.\r\n",
    "solutions": [
        "#include <cstdio>\n\nint n, c;\nint a[111];\n\nint main() {\n    scanf(\"%d%d\", &n, &c);\n    for (int i = 0; i < n; ++ i) scanf(\"%d\", &a[i]);\n    int ans = 0;\n    for (int i = 0; i < n - 1; ++ i) {\n        int t = a[i] - a[i + 1] - c;\n        if (t > ans) ans = t;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Bear and Raspberry.json",
    "editorial_link": "https://codeforces.com//blog/entry/10514",
    "editorial": "In this task required to understand that the answer max(), = and don\u00e2\u0080\u0099t\r\nforget that the answer not negative as Bear can not borrow in the debt\r\nbarrel of honey.\r\n"
}