{
    "link": "https://codeforces.com//contest/1825/problem/C",
    "problemId": "1909754",
    "problem_idx": "C",
    "shortId": "1825C",
    "contest_number": "1825",
    "problem_submissions": {
        "D1": [
            205098688,
            205101217,
            205100501,
            205098085,
            205105358,
            205106691,
            205097320,
            205101458,
            205101211,
            205102125,
            205103728,
            205102249,
            205106340,
            205105928,
            205101924,
            205105249,
            205105719,
            205103742,
            205103072,
            205109754
        ],
        "D2": [
            205098621,
            205101261,
            205100547,
            205107217,
            205105435,
            205173465,
            205106414,
            205109037,
            205107008,
            205108684,
            205105267,
            205107641,
            205106928,
            205108946,
            205109909,
            213433020,
            205105391,
            205107707,
            205184919,
            205108051,
            205106347,
            205107832,
            205114205
        ],
        "C": [
            205096242,
            205095032,
            205091245,
            205092408,
            205094374,
            205094650,
            205092981,
            205094950,
            205095388,
            205097859,
            205092688,
            205095415,
            205092193,
            205097135,
            205097614,
            205099450,
            205098808,
            205088004,
            205106824,
            205095380
        ],
        "B": [
            205093377,
            205085123,
            205089166,
            205085761,
            205087791,
            205086427,
            205087169,
            205088420,
            205087106,
            205087675,
            205085814,
            205086933,
            205087152,
            205089093,
            205086378,
            205083686,
            205091949,
            205097416,
            205089403,
            205087179
        ],
        "A": [
            205081314,
            205078338,
            205079019,
            205079835,
            205080709,
            205079855,
            205080562,
            205080265,
            205078425,
            205081350,
            205081019,
            205079877,
            205079523,
            205078495,
            213433083,
            205079154,
            205079009,
            205079859,
            205091489,
            205080325,
            205079396
        ],
        "E": [
            205276652,
            205175537,
            205175154
        ]
    },
    "name": "C. LuoTianyi and the Show",
    "statement": "There are n people taking part in a show about VOCALOID. They will sit\r\nin the row of seats, numbered 1 to m from left to right.The n people\r\ncome and sit in order. Each person occupies a seat in one of three ways:\r\nSit in the seat next to the left of the leftmost person who is already\r\nsitting, or if seat 1 is taken, then leave the show. If there is no one\r\ncurrently sitting, sit in seat m. Sit in the seat next to the right of\r\nthe rightmost person who is already sitting, or if seat m is taken, then\r\nleave the show. If there is no one currently sitting, sit in seat 1. Sit\r\nin the seat numbered x_i. If this seat is taken, then leave the show.\r\nNow you want to know what is the maximum number of people that can take\r\na seat, if you can let people into the show in any order?\r\n",
    "solutions": [
        "#pragma GCC optimize(\"Ofast,unroll-loops\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\n#define int long long\nconst int N=2e5+5,M=305;\nusing namespace std;\nint m,n;\nint l,r,len;\nint a[N],sum;\nvoid solve()\n{\n\tcin>>n>>m;\n\tl=0;r=0;len=0;sum=0;\n\tfor(int i=1,x;i<=n;i++)\n\t{\n\t\tcin>>x;\n\t\tif(x==-1)l++;\n\telse if(x==-2)r++;\n\telse a[++len]=x;\n\t}\n\tsort(a+1,a+len+1);\n\tlen=unique(a+1,a+len+1)-a-1;\n//\tcout<<\"debug:\"<<l<<' '<<r<<' '<<len<<' '<<n<<' '<<m<<'\\n';\n\tfor(int i=1;i<=len;i++)\n\tsum=max(sum,min(a[i]-i,l)+min(m-a[i]-len+i,r));\n\tsum=max({sum,min(m-len,r),min(m-len,l)});\n\tcout<<sum+len<<'\\n';\n}\nint tt;\nsigned main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\ttt=1;\n\tcin>>tt;\n\twhile(tt--)solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. LuoTianyi and the Show.json",
    "editorial_link": "https://codeforces.com//blog/entry/116328",
    "editorial": "This means that we can split the array into a left and right segment\r\nwhere the left segment contains people and no and the right segment\r\ncontains people and no .\r\n",
    "hint": []
}