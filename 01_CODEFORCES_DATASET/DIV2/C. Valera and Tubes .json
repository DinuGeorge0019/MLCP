{
    "link": "https://codeforces.com//contest/441/problem/C",
    "problemId": "10178",
    "problem_idx": "C",
    "shortId": "441C",
    "contest_number": "441",
    "problem_submissions": {
        "D": [
            6846993,
            6848184,
            6846636,
            6846799,
            6846427,
            6846976,
            6846637,
            6847967,
            6844170,
            6847911,
            6848088,
            6847662,
            6847887,
            6842471,
            6843010
        ],
        "C": [
            6842791,
            6840708,
            6842295,
            6841947,
            6842979,
            6843258,
            6842150,
            6845333,
            6842762,
            6847076,
            6842331,
            6843795,
            6844814,
            6843899,
            6843750,
            6845351,
            6843645,
            6850933,
            6849893
        ],
        "B": [
            6840560,
            6839393,
            6840429,
            6840462,
            6840569,
            6841161,
            6840630,
            6842225,
            6840707,
            6845954,
            6840866,
            6842539,
            6843417,
            6847639,
            6842752,
            6841004,
            6841839
        ],
        "A": [
            6839071,
            6838557,
            6838730,
            6838755,
            6839171,
            6839289,
            6839675,
            6840019,
            6839272,
            6839363,
            6838491,
            6838790,
            6838791,
            6839587,
            6842218,
            6839738,
            6839077,
            6839417
        ],
        "E": [
            6847038,
            6850560
        ]
    },
    "name": "C. Valera and Tubes ",
    "statement": "Valera has got a rectangle table consisting of rows and columns. Valera\r\nnumbered the table rows starting from one, from top to bottom and the\r\ncolumns starting from one, from left to right. We will represent cell\r\nthat is on the intersection of row and column by a pair of integers\r\n.Valera wants to place exactly tubes on his rectangle table. A tube is\r\nsuch sequence of table cells , , , , that: ; for any integer the\r\nfollowing equation holds; each table cell, which belongs to the tube,\r\nmust occur exactly once in the sequence. Valera thinks that the tubes\r\nare arranged in a fancy manner if the following conditions are\r\nfulfilled: no pair of tubes has common cells; each cell of the table\r\nbelongs to some tube. Help Valera to arrange tubes on his rectangle\r\ntable in a fancy manner.\r\n",
    "solutions": [
        "/* ***********************************************\nAuthor        :kuangbin\nCreated Time  :2014/6/8 23:51:56\nFile Name     :E:\\2014ACM\\Codeforces\\CF252\\C.cpp\n************************************************ */\n\n#include <stdio.h>\n#include <string.h>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <set>\n#include <map>\n#include <string>\n#include <math.h>\n#include <stdlib.h>\n#include <time.h>\nusing namespace std;\n\nint Move[][2] = {{0,1},{1,0},{0,-1},{-1,0}};\nint n,m;\nbool inside(int x,int y)\n{\n\tif(x >= 1 && x <= n && y >= 1 && y <= m)return true;\n\telse return false;\n}\nint num[310*310];\nbool vis[310][310];\n\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    //freopen(\"out.txt\",\"w\",stdout);\n    int k;\n\twhile(scanf(\"%d%d%d\",&n,&m,&k) == 3)\n\t{\n\t\tfor(int i = 0;i < k-1;i++)num[i] = 2;\n\t\tnum[k-1] = n*m - 2*(k-1);\n\t\tint x = 1, y = 1;\n\t\tint now = 0;\n\t\tmemset(vis,false,sizeof(vis));\n\t\tfor(int i = 0;i < k;i++)\n\t\t{\n\t\t\tprintf(\"%d\",num[i]);\n\t\t\tfor(int j = 0;j < num[i];j++)\n\t\t\t{\n\t\t\t\tprintf(\" %d %d\",x,y);\n\t\t\t\tvis[x][y] = true;\n\t\t\t\tif(i == k-1 && j == num[i]-1)break;\n\t\t\t\twhile((!inside(x+Move[now][0],y+Move[now][1])) || vis[x+Move[now][0]][y+Move[now][1]])now = (now+1)%4;\n\t\t\t\tx += Move[now][0];\n\t\t\t\ty += Move[now][1];\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "implementation"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Valera and Tubes .json",
    "editorial_link": "https://codeforces.com//blog/entry/12615",
    "editorial": "The solution is pretty simple. First we need\nto make such route that visits every cell exactly one time. It is not\ndifficult: After that, we can easily find the solution: you can make\nfirst tubes length be , and the last tube will consist from cells left.\nJuryâs solution: 6850508\n",
    "hint": []
}