{
    "link": "https://codeforces.com//contest/734/problem/B",
    "problemId": "80474",
    "problem_idx": "B",
    "shortId": "734B",
    "contest_number": "734",
    "problem_submissions": {
        "F": [
            22242677,
            22263963
        ],
        "D": [
            22237702,
            22238671,
            22238436,
            22238926,
            22238773,
            22237833,
            22241230,
            22239041,
            22239616,
            22240014,
            22239208,
            22240034,
            22240178,
            22236173,
            22238427,
            22246118,
            22238956,
            22239478,
            22239903,
            22238000
        ],
        "C": [
            22234888,
            22234918,
            22235409,
            22236073,
            22235114,
            22235451,
            22235615,
            22235516,
            22234702,
            22235336,
            22234636,
            22235118,
            22237525,
            22238970,
            22235561,
            22239159,
            22235440,
            22236588,
            22236772,
            22235639
        ],
        "B": [
            22228951,
            22228069,
            22228596,
            22229294,
            22228497,
            22229303,
            22229501,
            22229322,
            22228369,
            22229545,
            22228175,
            22229688,
            22229766,
            22229538,
            22230326,
            22233850,
            22229247,
            22231472,
            22229353,
            22228678
        ],
        "A": [
            22226500,
            22226334,
            22226410,
            22226760,
            22226352,
            22226714,
            22226436,
            22226603,
            22226585,
            22226921,
            22226580,
            22226632,
            22227401,
            22227664,
            22229822,
            22226975,
            22228813,
            22226738,
            22226445
        ],
        "E": [
            22241795,
            22241633,
            22241388,
            22240916,
            22242495,
            22246165,
            22242439,
            22243868,
            22243102,
            22245799,
            22245135,
            22244767,
            22245998,
            22247226,
            22236319,
            22244870,
            22244604,
            22244885,
            22244356
        ]
    },
    "name": "B. Anton and Digits",
    "statement": "Recently Anton found a box with digits in his room. There are digits ,\r\ndigits , digits and digits .Anton’s favorite integers are and . He\r\ndecided to compose this integers from digits he has. He wants to make\r\nthe sum of these integers as large as possible. Help him solve this\r\ntask!Each digit can be used no more than once, i.e. the composed\r\nintegers should contain no more than digits , digits and so on. Of\r\ncourse, unused digits are not counted in the sum.\r\n",
    "solutions": [
        "#include <iostream>\n#include <fstream>\n#include <list>\n#include <stack>\n#include <deque>\n#include <utility>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <vector>\n#include <cmath>\n#include <string>\n#include <algorithm>\n#include <iomanip>\n#include <ctime>\n#include <iterator>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\n#define f first\n#define s second\n#define pb push_back\n#define mp make_pair\n\nconst int maxn = 100500;\nconst int inf = 2e9;\nconst double eps = 1e-8;\nconst int base = 1073676287;\n\nint main()\n{\n    srand( time( 0 ) );\n    // freopen( \"input.txt\", \"r\", stdin );\n    // freopen( \"output.txt\", \"w\", stdout );\n    // ios_base::sync_with_stdio(false);\n    int k2, k3, k5, k6;\n    scanf ( \"%d%d%d%d\", &k2, &k3, &k5, &k6 );\n    ll ans = 256LL * min( k2, min( k5, k6 ) );\n    k2 -= min( k2, min( k5, k6 ) );\n    ans += 32LL * min( k2, k3 );\n    cout << ans << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Anton and Digits.json",
    "editorial_link": "https://codeforces.com//blog/entry/48397",
    "editorial": "We will act greedily. At first weâll make maximal possible amount of\r\nnumbers. It will be equal to . From the rest of the digits weâll make\r\nmaximal possible amount of numbers. It will be equal to (we use instead\r\nof , because twos weâve already used to make numbers. Now itâs not hard\r\nto observe that the answer will be equal to .Time complexity is .\r\n",
    "hint": []
}