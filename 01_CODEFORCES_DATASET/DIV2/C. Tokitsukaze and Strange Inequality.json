{
    "link": "https://codeforces.com//contest/1678/problem/C",
    "problemId": "1392740",
    "problem_idx": "C",
    "shortId": "1678C",
    "contest_number": "1678",
    "problem_submissions": {
        "B2": [
            156337748,
            156324342,
            156302784,
            156304109,
            156308344,
            156307313,
            156322367,
            156310760,
            156325161,
            156311476,
            156308386,
            156305915,
            156340054,
            156311110,
            156304777,
            156312168
        ],
        "D": [
            156335715,
            156326293,
            156332692,
            156322049,
            156327370,
            156325356,
            156338242,
            156329859,
            156336753,
            156331010,
            156328442,
            156331166,
            156332465,
            156321050,
            156331447,
            156333951,
            156332334,
            156338244,
            156323122
        ],
        "F": [
            156333879,
            156344881,
            156345082,
            156391888,
            156343019
        ],
        "E": [
            156321182,
            156330122,
            156338989,
            156332813,
            156332878,
            156337640,
            156329496,
            156338879,
            156328971,
            156336106,
            156338855,
            156339814,
            156337874,
            156332857,
            156334930,
            156345535,
            156346378,
            156344343,
            156329062
        ],
        "C": [
            156315033,
            156309829,
            156314171,
            156314151,
            156314962,
            156316870,
            156314506,
            156305197,
            156319288,
            156306512,
            156317819,
            156317128,
            156326850,
            156298687,
            156320662,
            156317477,
            156325519,
            156326778,
            156317125
        ],
        "B1": [
            156307022,
            156305581,
            156302876,
            156303596,
            156298834,
            156302625,
            156302689,
            156299382,
            156308181,
            156300224,
            156311800,
            156302389,
            156299357,
            156299955,
            156301798,
            156299880,
            156307813,
            156302122
        ],
        "A": [
            156300619,
            156297387,
            156296004,
            156298038,
            156295989,
            156296408,
            156296603,
            156296410,
            156307151,
            156296016,
            156301081,
            156298593,
            156296628,
            156296518,
            156297310,
            156305728,
            156296218,
            156299051
        ]
    },
    "name": "C. Tokitsukaze and Strange Inequality",
    "statement": "Tokitsukaze has a permutation p of length n. Recall that a permutation p\r\nof length n is a sequence p_1, p_2,\r\nldots, p_n consisting of n distinct integers, each of which from 1 to n\r\n(1\r\nleq p_i\r\nleq n).She wants to know how many different indices tuples [a,b,c,d] (1\r\nleq a < b < c < d\r\nleq n) in this permutation satisfy the following two inequalities: p_a <\r\np_c and p_b > p_d. Note that two tuples [a_1,b_1,c_1,d_1] and\r\n[a_2,b_2,c_2,d_2] are considered to be different if a_1\r\nne a_2 or b_1\r\nne b_2 or c_1\r\nne c_2 or d_1\r\nne d_2.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define pa pair<int,int>\nconst int N=5010;\nLL read()\n{\n\tLL x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=x*10ll+ch-'0',ch=getchar();\n\treturn x*f;\n}\nint n,p[N],s[N];\nLL ans;\nvoid solve()\n{\n\tans=0;\n\tn=read();\n\tfor(int i=1;i<=n;i++)p[i]=read();\n\tfor(int c=1;c<=n;c++)\n\t{\n\t\tfor(int i=0;i<=n;i++)s[i]=0;\n\t\tfor(int i=c+1;i<=n;i++)s[p[i]]++;\n\t\tfor(int i=1;i<=n;i++)s[i]+=s[i-1];\n\t\tint cnta=0;\n\t\tfor(int b=2;b<c;b++)\n\t\t{\n\t\t\tif(p[b-1]<p[c])cnta++;\n\t\t\tans+=(LL)cnta*s[p[b]];\n//\t\t\tprintf(\"b = %d c = %d cnta = %d s[p[b]] = %d\\n\",b,c,cnta,s[p[b]]);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\nint main()\n{\n\tint T=read();\n\twhile(T--)solve();\n \treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Tokitsukaze and Strange Inequality.json",
    "editorial_link": "https://codeforces.com//blog/entry/102631",
    "editorial": "We can calculate the answer in two steps.\n\nThe first step, for each b\n, let fb\n represents the number of pd\n where pb>pd\n in the interval [b+1,n]\n. We can calculate f\n in O(n2)\n.\n\nThe second step, calculate the answer. First we enumerate c\n from 1\n to n\n, and then enumerate a\n from 1\n to c?1\n. When pa<pc\n, add fb\n in the interval [a+1,c?1]\n to the answer. Before enumerating a\n, we can calculate the prefix sum of f\n first, so we can add the fb\n in the interval to the answer in O(1)\n. The time complexity of this step is O(n2)\n. However, this will add the result of d\n in the interval [a+1,c?1]\n to the answer, which is illegal because c<d\n is required. So we need to maintain f\n while enumerating c\n: enumerate b\n from 1\n to c?1\n, if pb>pc\n, fb\n minus 1\n. pc\n is actually regarded as pd\n, that is, subtract the case where c\n is equal to d\n, so as to subtract the illegal case. The time complexity of this step is also O(n2)\n.\n\nTime complexity:O(n2)\n.\n\nBy the way, use Fenwick Tree or Segment Tree can also pass, the time complexity is O(n2log n)"
}