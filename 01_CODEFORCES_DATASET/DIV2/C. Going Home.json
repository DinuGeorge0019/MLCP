{
    "link": "https://codeforces.com//contest/1501/problem/C",
    "problemId": "922988",
    "problem_idx": "C",
    "shortId": "1501C",
    "contest_number": "1501",
    "problem_submissions": {
        "E": [
            109941376,
            109875512,
            109883789,
            110105518,
            110105287
        ],
        "F": [
            109904857
        ],
        "A": [
            109878442,
            109847988,
            109846729,
            109846494,
            109846135,
            109845267,
            109845587,
            109847199,
            109845456,
            109847603,
            109846645,
            109853330,
            109847527,
            109845680,
            109862040,
            109861437,
            109857820,
            109847064,
            109879578,
            109846519
        ],
        "B": [
            109859119,
            109845806,
            109857469,
            109847916,
            109848937,
            109845741,
            109938795,
            109847183,
            109850677,
            109848222,
            109850447,
            109858630,
            109845453,
            109850407,
            109847950,
            109859017,
            109850474,
            109855074,
            109848387,
            109851675,
            109849198
        ],
        "D": [
            109857126,
            109874773,
            109867593,
            109877645,
            109872691,
            109883837,
            109870581,
            109889646,
            109873833,
            109880027,
            109879853,
            109876481,
            109884289,
            109877446,
            109871324,
            109884869,
            109884357,
            109879548,
            109886127,
            109876946,
            109883128
        ],
        "C": [
            109846358,
            109849688,
            109852611,
            109851798,
            109861330,
            109852150,
            109856203,
            109859435,
            109862259,
            109860307,
            109858003,
            109857809,
            109860809,
            109860157,
            109856014,
            109855070,
            109852660,
            109851031,
            109863843,
            109867505
        ]
    },
    "name": "C. Going Home",
    "statement": "It was the third month of remote learning, Nastya got sick of staying at\r\ndormitory, so she decided to return to her hometown. In order to make\r\nher trip more entertaining, one of Nastya\u2019s friend presented her an\r\ninteger array a. Several hours after starting her journey home Nastya\r\nremembered about the present. To entertain herself she decided to check,\r\nare there four indices x, y, z, w such that a_x + a_y = a_z + a_w.Her\r\ntrain has already arrived the destination, but she still hasn\u2019t found\r\nthe answer. Can you help her unravel the mystery?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nconst int M=998244353;\nconst int N=5000005,E=524288;\nint n,a[N],i,j;\nstruct str{\n\tint x,y;\n};\nvector<str> vis[N];\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"a.in\",\"r\",stdin);\n\tfreopen(\"a.out\",\"w\",stdout);\n#endif\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<=n;++i)\n\t\tfor(j=1;j<=n-i;++j)\n\t\t{\n\t\t\tfor(auto it:vis[a[j]+a[i+j]])\n\t\t\t\tif(it.x!=j&&it.y!=i+j&&it.y!=j&&it.x!=i+j)\n\t\t\t\t{\n\t\t\t\t\tputs(\"YES\");\n\t\t\t\t\tprintf(\"%d %d %d %d\",it.x,it.y,j,i+j);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\tvis[a[j]+a[i+j]].push_back({j,i+j});\n\t\t}\n\tputs(\"NO\");\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Going Home.json",
    "editorial_link": "https://codeforces.com//blog/entry/88591",
    "editorial": "Let's prove that if there're at least four different pairs indices with the common sum (ax1+ay1=ax2+ay2=\u0085=ax4+ay4\n), then there necessarily will be two pairs such that all four indices in them are unique.\n\nLet's analyze some cases:\n\nThere're four pairs of the form (x,y1),(x,y2),(x,y3),(x,y4)\n with sum S\n. Then ax+ay1=ax+ay2=ax+ay3=ax+ay4=S\n from which we can conclude that ay1=ay2=ay3=ay4\n, and it means that pairs (y1,y2)\n and (y3,y4)\n are suitable as answer.\nThere're three pairs of the form (x,y1),(x,y2),(x,y3)\n and the fourth pair doesn't contain index x\n. Then whatever the fourth pair (z,w)\n is, it necessarily doesn't contain index x\n and at least one of indices y1,y2,y3\n which means we can take as answer pairs (z,w)\n and one of three that contain x\n.\nOther cases are analyzed in the same way. To make sure that answer always exists among such four pairs, we can imagine graph, where vertices are indices, and there is an edge between two vertices if the corresponding pair of indices has sum S\n. If such a graph has at least four edges and the degree of all vertices is at most two (we excluded the larger degrees by examining the previous cases), then there will always be two edges with disjoint ends.\nHow to find answer using this? Let's launch simple O(n2)\n bruteforce which for every sum will save all found pairs with such sum, and for each pair check if there's another already found pair with the same sum and such indices that all four indices in these two pairs are unique.\n\nLet's notice it works in O(min(n2,n+C)\n, because once for some sum we find the fourth pair, we can immediately print the answer. And if the answer is \"NO\", then we've done no more than O(C)\n iterations of bruteforce."
}