{"link": "https://codeforces.com//contest/801/problem/C", "problemId": "103102", "problem_idx": "C", "shortId": "801C", "contest_number": "801", "problem_submissions": {"E": [26431268, 26432380, 26476783, 26433724, 26434229, 26480642, 26480548, 26480348, 26494890, 26761813, 26448700, 26891853], "D": [26425044, 26425418, 26424442, 26425844, 26427999, 26423648, 26424386, 26426466, 26425527, 26426325, 26426061, 26426569, 26423135, 26426063, 26426145, 26426707, 26427444, 26427659, 26427813, 26428417], "C": [26421077, 26426753, 26422126, 26422964, 26424591, 26421294, 26422383, 26423910, 26421299, 26422965, 26423300, 26464547, 26464488, 26464472, 26462113, 26461839, 26423489, 26427796, 26421258, 26423212, 26423423, 26423078, 26423800, 26424484, 26424083], "B": [26417032, 26418855, 26417051, 26418098, 26418064, 26417323, 26417757, 26418046, 26417670, 26419595, 26417736, 26418294, 26418039, 26417940, 26419935, 26419134, 26418085, 26419132, 26418680, 26417887], "A": [26416465, 26416667, 26416492, 26416663, 26416642, 26416740, 26416470, 26416681, 26416514, 26418065, 26416666, 26417060, 26416564, 26416805, 26418618, 26417312, 26416869, 26417305, 26416921, 26416811]}, "name": "C. Voltage Keepsake", "statement": "You have devices that you want to use simultaneously.The -th device uses\r\nunits of power per second. This usage is continuous. That is, in\r\nseconds, the device will use units of power. The -th device currently\r\nhas units of power stored. All devices can store an arbitrary amount of\r\npower.You have a single charger that can plug to any single device. The\r\ncharger will add units of power per second to a device. This charging is\r\ncontinuous. That is, if you plug in a device for seconds, it will gain\r\nunits of power. You can switch which device is charging at any arbitrary\r\nunit of time (including real numbers), and the time it takes to switch\r\nis negligible.You are wondering, what is the maximum amount of time you\r\ncan use the devices until one of them hits units of power.If you can use\r\nthe devices indefinitely, print . Otherwise, print the maximum amount of\r\ntime before any one device hits power.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll n,p,a[100005],b[100005];\ndouble eps = 1e-6;\nint main(){\n   iostream::sync_with_stdio(0);\n   cin >> n >> p;\n   ll tmp = 0;\n   for(int i=1;i<=n;i++)\n      cin >> a[i] >> b[i], tmp += a[i];\n   if (p >= tmp) {cout << -1; return 0;}\n   double L = 0, R = 1e10;\n   for(int t=1;t<=300;t++){\n      double mid = (L + R)/2;\n      double power = 0;\n      for(int i=1;i<=n;i++)\n         power += max(0.0, 1.0 * a[i] - 1.0 * b[i] / mid);\n      if (power < 1.0 * p + eps) L = mid;\n      else R = mid;\n   }\n   cout << setprecision(10) << L;\n}\n"], "input": "", "output": "", "tags": ["binary search", "math"], "dificulty": "1800", "interactive": false}