{"link": "https://codeforces.com//contest/489/problem/F", "problemId": "17501", "problem_idx": "F", "shortId": "489F", "contest_number": "489", "problem_submissions": {"D": [13589038, 8724316, 8726296, 8731189, 8726766, 8726894, 8728465, 8728477, 8727759, 8725875, 8727494, 8730275, 8733738, 8729954, 8730137, 8724674, 8731839, 8731752, 8732051], "C": [13588891, 8721795, 8727951, 8723822, 8724371, 8723499, 8726577, 8723991, 8722965, 8723091, 8724636, 8726610, 8730038, 8726232, 8725795, 8724261, 8722941, 8722633, 8723063], "B": [13588813, 8720541, 8728807, 8721401, 8766675, 8722756, 8720717, 8724885, 8720855, 8720680, 8720515, 8720936, 8722566, 8728071, 8723662, 8722124, 8737370, 8720146, 8720599, 8721787], "A": [13588752, 8742614, 8729605, 8720536, 8720304, 8719407, 8720112, 8719631, 8724692, 8719911, 8719459, 8720699, 8726238, 8722578, 8720190, 8721547, 8726214, 8726620, 8726619], "E": [8736947, 11503343, 8742532, 8742434, 8742318, 8742303, 8742271, 8737226], "F": [8731272, 8723125, 8728205, 8732102, 8733456, 8733048, 8733546, 8733373, 8736588, 8734709, 8733680, 8724458, 8733867, 8734049, 8727708, 8736377, 8736466, 8736428]}, "name": "F. Special Matrices", "statement": "An square matrix is , if: it is binary, that is, each cell contains\r\neither a 0, or a 1; the number of ones in each row and column equals 2.\r\nYou are given and the first rows of the matrix. Print the number of\r\nspecial matrices, such that the first rows coincide with the given\r\nones.As the required value can be rather large, print the remainder\r\nafter dividing the value by the given number .\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MAX = 500 + 10;\nint n, m;\nlong long MOD;\nlong long dp[2][MAX][MAX];\nint rec[MAX][MAX];\nint cnt[MAX] = {0};\nint main(){\n\tmemset(dp, 0, sizeof(dp));\n\tscanf(\"%d %d %I64d\", &n, &m, &MOD);\n\tif(n==m) puts(\"1\");\n\telse{\n\t\tfor(int i = 0 ; i < m ; i++){\n\t\t\tgetchar();\n\t\t\tfor(int j = 0 ; j < n ; j++){\n\t\t\t\trec[i][j] = getchar() == '1';\n\t\t\t\tif(rec[i][j] == 1) cnt[j]++;\n\t\t\t}\n\t\t}\n\t\tint p = 0, q = 0;\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tif(cnt[i] == 0) p++;\n\t\t\telse if(cnt[i] == 1) q++;\n\t\t}\n\t\tint now = 0, next = 1;\n\t\tdp[now][n-m][0] = 1LL;\n\t\twhile(p--){\n\t\t\tmemset(dp[next], 0, sizeof(dp[next]));\n\t\t\tfor(int i = 0 ; i <= n ; i++){\n\t\t\t\tfor(int j = 0 ; j <= n ; j++){\n\t\t\t\t\tif(dp[now][i][j]){\n\t\t\t\t\t\tif(j-2>=0){\n\t\t\t\t\t\t\tdp[next][i][j-2] += j*(j-1)/2%MOD*dp[now][i][j]%MOD;\n\t\t\t\t\t\t\tdp[next][i][j-2] %= MOD;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(i-1>=0&&j-1>=0){\n\t\t\t\t\t\t\tdp[next][i-1][j] += i*j%MOD*dp[now][i][j]%MOD;\n\t\t\t\t\t\t\tdp[next][i-1][j] %= MOD;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(i-2>=0){\n\t\t\t\t\t\t\tdp[next][i-2][j+2] += i*(i-1)/2%MOD*dp[now][i][j]%MOD;\n\t\t\t\t\t\t\tdp[next][i-2][j+2] %= MOD;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tswap(now, next);\n\t\t}\n\t\twhile(q--){\n\t\t\tmemset(dp[next], 0, sizeof(dp[next]));\n\t\t\tfor(int i = 0 ; i <= n ; i++){\n\t\t\t\tfor(int j = 0 ; j <= n ; j++){\n\t\t\t\t\tif(dp[now][i][j]){\n\t\t\t\t\t\tif(i-1>=0){\n\t\t\t\t\t\t\tdp[next][i-1][j+1] += i*dp[now][i][j]%MOD;\n\t\t\t\t\t\t\tdp[next][i-1][j+1] %= MOD;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(j-1>=0){\n\t\t\t\t\t\t\tdp[next][i][j-1] += j*dp[now][i][j]%MOD;\n\t\t\t\t\t\t\tdp[next][i][j-1] %= MOD;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tswap(now, next);\n\t\t}\n\t\tprintf(\"%I64d\\n\", dp[now][0][0]);\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp"], "dificulty": "2100", "interactive": false}