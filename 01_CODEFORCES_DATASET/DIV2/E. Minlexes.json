{"link": "https://codeforces.com//contest/1422/problem/E", "problemId": "748727", "problem_idx": "E", "shortId": "1422E", "contest_number": "1422", "problem_submissions": {"F": [94701883, 94826866, 94826835, 94745688, 94705379, 94693551, 94953245, 94915043, 94711007, 94710952], "D": [94689176, 94687852, 94699245, 94700756, 94730858, 94685919, 94687412, 94684031, 94691326, 94692798, 209847951, 94692199, 94693976, 94690624, 94695759, 95022837, 94688084, 94690199], "C": [94679953, 94679288, 94678596, 94684155, 94679523, 94703846, 94668997, 94676012, 94678225, 94681262, 94689674, 94678418, 94678427, 94678143, 94682123, 94677251, 94684478, 94676757, 94679761], "B": [94670303, 94669460, 94669121, 94671181, 94667987, 94697716, 94673035, 94667020, 94667631, 94669211, 94678649, 94671772, 94672654, 94668738, 94675426, 94669613, 94671963, 94668373, 94672738], "A": [94662989, 94664962, 97569670, 94661799, 94662880, 94662335, 94664103, 94661944, 94661473, 94662039, 94663061, 94665832, 94661500, 94664606, 94661429, 94662035, 94661746, 94661457, 94662741, 94673552], "E": [94701493, 94708058, 94709364, 94747586, 95060609, 95041928, 94699655, 94723718, 94704623]}, "name": "E. Minlexes", "statement": "Some time ago Lesha found an entertaining string s consisting of\r\nlowercase English letters. Lesha immediately developed an unique\r\nalgorithm for this string and shared it with you. The algorithm is as\r\nfollows.Lesha chooses an arbitrary (possibly zero) number of pairs on\r\npositions (i, i + 1) in such a way that the following conditions are\r\nsatisfied: for each pair (i, i + 1) the inequality 0\r\nle i < |s| - 1 holds; for each pair (i, i + 1) the equality s_i = s_{i +\r\n1} holds; there is no index that is contained in more than one pair.\r\nAfter that Lesha removes all characters on indexes contained in these\r\npairs and the algorithm is over. Lesha is interested in the\r\nlexicographically smallest strings he can obtain by applying the\r\nalgorithm to the suffixes of the given string.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define rep(i,a,...) for(int i = (a)*(strlen(#__VA_ARGS__)!=0);i<(int)(strlen(#__VA_ARGS__)?__VA_ARGS__:(a));++i)\n#define per(i,a,...) for(int i = (strlen(#__VA_ARGS__)?__VA_ARGS__:(a))-1;i>=(int)(strlen(#__VA_ARGS__)?(a):0);--i)\n#define foreach(i, n) for(auto &i:(n))\n#define all(x) (x).begin(), (x).end()\n#define bit(x) (1ll << (x))\n#define lambda(RES_TYPE, ...) (function<RES_TYPE(__VA_ARGS__)>)[&](__VA_ARGS__) -> RES_TYPE\n#define method(FUNC_NAME, RES_TYPE, ...) function<RES_TYPE(__VA_ARGS__)> FUNC_NAME = lambda(RES_TYPE, __VA_ARGS__)\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int,int>;\nusing pll = pair<ll,ll>;\n//const ll MOD = (ll)1e9+7;\nconst ll MOD = 998244353;\nconst int INF = (ll)1e9+7;\nconst ll INFLL = (ll)1e18;\ntemplate<class t>\nusing vvector = vector<vector<t>>;\ntemplate<class t>\nusing vvvector = vector<vector<vector<t>>>;\ntemplate<class t>\nusing priority_queuer = priority_queue<t, vector<t>, greater<t>>;\ntemplate<class t, class u> bool chmax(t &a, u b){if(a<b){a=b;return true;}return false;}\ntemplate<class t, class u> bool chmin(t &a, u b){if(a>b){a=b;return true;}return false;}\n#ifdef DEBUG\n#define debug(x) cout<<\"LINE \"<<__LINE__<<\": \"<<#x<<\" = \"<<x<<endl;\n#else\n#define debug(x) (void)0\n#endif\n\nnamespace templates{\n  ll modpow(ll x, ll b){\n    ll res = 1;\n    while(b){\n      if(b&1)res = res * x % MOD;\n      x = x * x % MOD;\n      b>>=1;\n    }\n    return res;\n  }\n\n  ll modinv(ll x){\n    return modpow(x, MOD-2);\n  }\n\n  bool was_output = false;\n  template<class t>\n  void output(t a){\n    if(was_output)cout << \" \";\n    cout << a;\n    was_output = true;\n  }\n  void outendl(){\n    was_output = false;\n    cout << endl;\n  }\n  ll in(){\n    ll res;\n    scanf(\"%lld\", &res);\n    return res;\n  }\n\n  template<class t>\n  istream& operator>>(istream&is, vector<t>&x){\n    for(auto &i:x)is >> i;\n    return is;\n  }\n\n  template<class t, class u>\n  istream& operator>>(istream&is, pair<t, u>&x){\n    is >> x.first >> x.second;\n    return is;\n  }\n\n  template<class t>\n  t in(){\n    t res; cin >> res; return res;\n  }\n\n  template<class t>\n  void out(t x){\n    cout << x;\n  }\n\n  template<class t>\n  vector<t> sorted(vector<t> line,function<bool(t,t)> comp=[](t a,t b){return a<b;}){\n    sort(line.begin(),line.end(),comp);\n    return line;\n  }\n\n  template<class t>\n  vector<t> reversed(vector<t> line){\n    reverse(line.begin(),line.end());\n    return line;\n  }\n}\n\nusing namespace templates;\n\nusing P = pair<int,string>;\n\nstring reversed(string str){\n    reverse(all(str));\n    return str;\n}\n\nvector<P> func(){\n    string str = in<string>();\n    reverse(all(str));\n    int n = str.size();\n    vector<pair<char,int>> logger;\n    string sum = \"\";\n    bool flag = false;\n    vector<P> res(n);\n    method(search,char,char x){\n        per(i,logger.size()){\n            if(logger[i].first==x)continue;\n            return logger[i].first;\n        }\n        return 'a'-1;\n    };\n    rep(i,n){\n        method(func,void){\n            if(sum.empty()){\n                sum += str[i];\n                logger.clear();\n                logger.emplace_back(str[i],1);\n                flag = false;\n                return;\n            }\n            if(!flag and sum.back()==str[i] and search(str[i]) < str[i]){\n                logger.back().second -= 1;\n                if(logger.back().second==0)logger.pop_back();\n                sum.erase(sum.end()-1);\n                flag = true;\n            }else{\n                sum += str[i];\n                if(logger.back().first!=str[i]){\n                    logger.emplace_back(str[i],1);\n                }else{\n                    ++logger.back().second;\n                }\n                flag = false;\n            }\n        };\n        func();\n        if(sum.size()>10){\n            res[i].first = sum.size();\n            res[i].second = reversed(sum.substr(sum.size()-5)) + \"...\" + reversed(sum.substr(0,2));\n        }else{\n            res[i].first = sum.size();\n            res[i].second = reversed(sum);\n        }\n    }\n    reverse(all(res));\n    return res;\n}\n\nint main(){\n    vector<P> ans = func();\n    foreach(i,ans){\n        cout << i.first;\n        if(i.first){\n            cout << \" \" << i.second;\n        }\n        cout << endl;\n    }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "greedy", "implementation", "strings"], "dificulty": "2700", "interactive": false}