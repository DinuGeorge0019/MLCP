{
    "link": "https://codeforces.com//contest/984/problem/C",
    "problemId": "183246",
    "problem_idx": "C",
    "shortId": "984C",
    "contest_number": "984",
    "problem_submissions": {
        "E": [
            38295174,
            38292597,
            38295542,
            38294481,
            38296992,
            38308491,
            38286876,
            38291550,
            38301305,
            38295842,
            38311834
        ],
        "D": [
            38281653,
            38286328,
            38283274,
            38285186,
            38284520,
            38278363,
            38278548,
            38283233,
            38283814,
            38283258,
            38285731,
            38282701,
            38285537,
            38283857,
            38282865,
            38284924,
            38285935,
            38282839,
            38284166,
            38284994
        ],
        "C": [
            38277813,
            38279909,
            38280385,
            38282567,
            38284026,
            38308575,
            38279256,
            38278014,
            38280019,
            38281587,
            38278990,
            38279032,
            38276778,
            38279263,
            38279837,
            38280121,
            38280838,
            38281513,
            38280422
        ],
        "B": [
            38277482,
            38274043,
            38276214,
            38275539,
            38274804,
            38273916,
            38280569,
            38275485,
            38274790,
            38277380,
            38303710,
            38274483,
            38273269,
            38279129,
            38273211,
            38274320,
            38274282,
            38275265,
            38276184,
            38276792
        ],
        "A": [
            38274250,
            38270894,
            38271892,
            38271406,
            38271964,
            38270942,
            38279477,
            38271611,
            38271008,
            38273380,
            38271243,
            38272415,
            38270860,
            38271217,
            38270890,
            38271184,
            38271009,
            38271766,
            38274300,
            38271231
        ]
    },
    "name": "C. Finite or not ",
    "statement": "You are given several queries. Each query consists of three integers p,\r\nq and b. You need to answer whether the result of p/q in notation with\r\nbase b is a finite fraction.A fraction in notation with base b is finite\r\nif it contains finite number of numerals after the decimal point. It is\r\nalso possible that a fraction has zero numerals after the decimal point.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n/*    .___.\n     /     \\\n    | O _ O |\n    /  \\_/  \\\n  .' /     \\ `.\n / _|       |_ \\\n(_/ |       | \\_)\n    \\       /\n   __\\_>-<_/__\n   ~;/     \\;~     */\n\n#define debug(x) (cerr << #x << \": \" << (x) << endl)\n\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"expensive-optimizations\")\n\n#define int long long\n\ntypedef long long ll;\n\nusing namespace std;\n\nll gcd(ll a, ll b)\n{\n    if(!b) return a;\n    return gcd(b, a % b);\n}\n\nbool finite(ll q, ll base)\n{\n    while (q != 1) {\n        ll x = gcd(q, base);\n        if (x == 1) return false;\n        while (x < numeric_limits<int32_t>::max() / 2) x *= x;\n        x = gcd(q, x);\n        q /= x;\n    }\n    return true;\n}\n\nint32_t main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    ll n;\n    cin >> n;\n    while (n--) {\n        ll p, q, b;\n        cin >> p >> q >> b;\n        ll x = gcd(p, q);\n        cout << (finite(q / x, b) ? \"Finite\" : \"Infinite\") << \"\\n\";\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Finite or not .json",
    "editorial_link": "https://codeforces.com//blog/entry/59484",
    "editorial": "First, if p\n and q\n are not coprime, divide them on gcd(p,q)\n. Fraction is finite if and only if there is integer k\n such that q?p?bk\n. Since p\n and q\n are being coprime now, q?bk?\n all prime factors of q\n are prime factors of b\n. Now we can do iterations q=q\u00f7gcd(b,q)\n while gcd(q,b)?1\n. If q?1\n after iterations, there are prime factors of q\n which are not prime factors of b?\n fraction is Infinite, else fraction is Finite. But this solution works in O(nlog21018)\n. Let's add b=gcd(b,q)\n in iterations and name iterations when gcd(b,q)\n changes iterations of the first type and when it doesn't change \u0097 iterations of the second type. Iterations of second type works summary in O(log1018)\n. Number of iterations of the first type is O(log1018)\n too but on each iteration b\n decreases twice. Note that number of iterations in Euclid's algorithm is equal to number of this decreases. So iterations of first type works in O(log1018)\n summary. Total time complexity is O(nlog1018)"
}