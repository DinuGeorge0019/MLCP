{
    "link": "https://codeforces.com//contest/417/problem/D",
    "problemId": "8548",
    "problem_idx": "D",
    "shortId": "417D",
    "contest_number": "417",
    "problem_submissions": {
        "C": [
            6398702,
            6388645,
            6386983,
            6388235,
            6388172,
            6388065,
            6390311,
            6388936,
            6388414,
            6388018,
            6388881,
            6390243,
            6386639,
            7197952,
            7197941,
            6390870,
            6387760,
            6389469
        ],
        "E": [
            6392802,
            6390375,
            6395565,
            6393646
        ],
        "D": [
            6391828,
            6391234,
            6393565,
            6391187,
            6396253,
            6392305,
            6391849,
            6393303,
            6391006,
            6392955,
            14306967
        ],
        "B": [
            6387304,
            6386532,
            6391356,
            6387301,
            6387066,
            6388262,
            6387600,
            6387683,
            6388782,
            6385736,
            6387148,
            6388492,
            6397900,
            6388119,
            6386069,
            6387510
        ],
        "A": [
            6386106,
            6395271,
            6385866,
            6394732,
            6393467,
            6394476,
            6394633,
            6385961,
            6387340,
            6385886,
            6386091,
            6395406,
            6386306,
            6386019
        ]
    },
    "name": "D. Cunning Gena",
    "statement": "A boy named Gena really wants to get to the \"Russian Code Cup\" finals,\r\nor at least get a t-shirt. But the offered problems are too complex, so\r\nhe made an arrangement with his friends that they will solve the\r\nproblems for him.The participants are offered problems on the contest.\r\nFor each friend, Gena knows what problems he can solve. But Gena\u2019s\r\nfriends won\u2019t agree to help Gena for nothing: the -th friend asks Gena\r\nrubles for his help he can. Also, the friend agreed to write a code for\r\nGena only if Gena\u2019s computer is connected to at least monitors, each\r\nmonitor costs rubles.Gena is careful with money, so he wants to spend as\r\nlittle money as possible to solve all the problems. Help Gena, tell him\r\nhow to spend the smallest possible amount of money. Initially, there\u2019s\r\nno monitors connected to Gena\u2019s computer.\r\n",
    "solutions": [
        "#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <set>\n\nusing namespace std;\n\nlong long cost[200];\nlong long need[200];\nlong long k[200];\nint a[200];\nlong long f[2][1100000];\n\nint main() {\n    ios::sync_with_stdio(false);\n\n    int n, m;\n    long long b;\n    cin >> n >> m >> b;\n    for (int i = 1; i <= n; i++) {\n        cin >> cost[i] >> need[i] >> k[i];\n        int t = 0;\n        for (int j = 0; j < k[i]; j++) {\n            int c;\n            cin >> c;\n            c--;\n            t |= 1 << c;\n        }\n        a[i] = t;\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = i + 1; j <= n; j++)\n            if (need[i] > need[j]) {\n                swap(need[i], need[j]);\n                swap(cost[i], cost[j]);\n                swap(a[i], a[j]);\n                swap(k[i], k[j]);\n            }\n\n    for (int j = 0; j < 1 << m; j++)\n        f[0][j] = 1LL << 62;\n    f[0][0] = 0;\n    \n    long long ans = 1LL << 62;\n\n    for (int ii = 1; ii <= n; ii++) {\n        int i = ii % 2;\n        \n        for (int j = 0; j < 1 << m; j++)\n            f[i][j] = f[1 - i][j] + (need[ii] - need[ii - 1]) * b;\n        for (int j = 0; j < 1 << m; j++) {\n            f[i][j | a[ii]] = min(f[i][j | a[ii]], f[1 - i][j] + (need[ii] - need[ii - 1]) * b + cost[ii]);\n        }\n        ans = min(ans, f[i][(1 << m) - 1]);\n    }\n\n    if (ans == 1LL << 62)\n        cout << -1 << endl;\n    else\n        cout << ans << endl;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "sortings"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Cunning Gena.json",
    "editorial_link": "https://codeforces.com//blog/entry/11730",
    "editorial": "Let us sort the friends by the number of the monitors in the increasing order. Afterwards we will calculate the dp on the masks: the minimal amount of money Gena should spend to solve some subset of problems, if we take first n friends. Then the answer we should compare with the answer for first i friends plus the number of the monitors, which the i-th friend needs. Is is not hard to see, that if we consider the friends in this order consequently, then we can recalc dp like in the knapsack problem. The running time of this algorithm is O(nlog(n)?+?n2m)."
}