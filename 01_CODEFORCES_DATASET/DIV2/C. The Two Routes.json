{"link": "https://codeforces.com//contest/602/problem/C", "problemId": "41466", "problem_idx": "C", "shortId": "602C", "contest_number": "602", "problem_submissions": {"E": [14454223, 14454299, 14456209, 14454133, 14461507, 14454782, 14462716, 14558697], "D": [14451210, 14452436, 14450199, 14451643, 14452168, 14452516, 14457831, 14457388, 14453117, 14453359, 14453097, 14453665, 14453691, 14453322, 14456227, 14455000, 14454509, 14455343, 14455630], "C": [14448038, 14449533, 14448113, 14448523, 14448134, 14447896, 14448656, 14449600, 14448895, 14449603, 14449182, 14448402, 14448301, 14447808, 14450369, 14450695, 14450052, 14450000], "B": [14446256, 14444626, 14444299, 14445958, 14445416, 14445768, 14446515, 14445706, 14447944, 14446601, 14447890, 14447097, 14446293, 14446165, 14445203, 14446223, 14448026, 14446486, 14446647], "A": [14443980, 14443071, 14443212, 14443069, 14443890, 14443977, 14443958, 14444049, 14443188, 14443469, 14443711, 14447134, 14443794, 14443478, 14443179, 14443500, 14444026, 14444059]}, "name": "C. The Two Routes", "statement": "In Absurdistan, there are towns (numbered through ) and bidirectional\r\nrailways. There is also an absurdly simple road network for each pair of\r\ndifferent towns and , there is a bidirectional road between towns and\r\nthere is no railway between them. Travelling to a different town using\r\none railway or one road always takes exactly one hour.A train and a bus\r\nleave town at the same time. They both have the same destination, town ,\r\nand don\u2019t make any stops on the way (but they can wait in town ). The\r\ntrain can move only along railways and the bus can move only along\r\nroads.You\u2019ve been asked to plan out routes for the vehicles; each route\r\ncan use any road/railway multiple times. One of the most important\r\naspects to consider is safety in order to avoid accidents at railway\r\ncrossings, the train and the bus must not arrive at the same town\r\n(except town ) simultaneously.Under these constraints, what is the\r\nminimum number of hours needed for both vehicles to reach town (the\r\nmaximum of arrival times of the bus and the train)? Note, that bus and\r\ntrain are not required to arrive to the town at the same moment of time,\r\nbut are allowed to do so.\r\n", "solutions": ["#include <iostream>\n\nusing namespace std;\n\nint n;\nint f[500][500];\nint g[500][500];\n\nint main() {\n    int m;\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = g[i][j] = 10000;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        f[i][i] = g[i][i] = 0;\n    }\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        f[u][v] = f[v][u] = 1;\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            if (i != j && f[i][j] == 10000) {\n                g[i][j] = 1;\n            }\n        }\n    }\n    for (int k = 1; k <= n; k++) {\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                f[i][j] = min(f[i][j], f[i][k] + f[k][j]);\n                g[i][j] = min(g[i][j], g[i][k] + g[k][j]);\n            }\n        }\n    }\n    int ans = max(f[1][n], g[1][n]);\n    if (ans == 10000) {\n        cout << -1 << endl;\n    } else {\n        cout << ans << endl;\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["graphs"], "dificulty": "1600", "interactive": false}