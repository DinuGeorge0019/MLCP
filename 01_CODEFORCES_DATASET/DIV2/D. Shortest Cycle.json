{
    "link": "https://codeforces.com//contest/1206/problem/D",
    "problemId": "390606",
    "problem_idx": "D",
    "shortId": "1206D",
    "contest_number": "1206",
    "problem_submissions": {
        "E": [
            59039805,
            59036400,
            59045379,
            59047524,
            59061157,
            59038336,
            59098032
        ],
        "D": [
            59025954,
            59041661,
            59045740,
            59034406,
            59022167,
            59028235,
            59026731,
            59020676,
            59024989,
            59028222,
            59026919,
            59119609,
            59027379,
            59028274,
            59026956,
            59027397,
            59024272,
            59026921,
            59027483,
            59030980
        ],
        "C": [
            59011466,
            59030604,
            59014696,
            59020664,
            59011212,
            59015302,
            59007726,
            59013014,
            59014421,
            59011545,
            59013350,
            59012812,
            59015649,
            59015519,
            59018230,
            59019306,
            59015315,
            59013410,
            59013599,
            59015972
        ],
        "B": [
            59004708,
            59042916,
            59007475,
            59009856,
            59005675,
            59005365,
            59003891,
            59005761,
            59008869,
            59005044,
            59005517,
            59007045,
            59004938,
            59005819,
            59066728,
            59009485,
            59006550,
            59008990,
            59005654,
            59005940,
            59006088
        ],
        "A": [
            59001296,
            59043245,
            59001405,
            59010625,
            59001679,
            59001121,
            59001149,
            59003026,
            59003048,
            59001270,
            59001447,
            59001759,
            59001966,
            59002120,
            59066711,
            59002946,
            59001221,
            59005963,
            59002062,
            59004823,
            59001151
        ],
        "F": [
            59027482,
            59114990,
            59100319
        ]
    },
    "name": "D. Shortest Cycle",
    "statement": "You are given n integer numbers a_1, a_2,\r\ndots, a_n. Consider graph on n nodes, in which nodes i, j (i\r\nneq j) are connected if and only if, a_i AND a_j\r\nneq 0, where AND denotes the bitwise AND operation.Find the length of\r\nthe shortest cycle in this graph or determine that it doesnâ€™t have\r\ncycles at all.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100011;\nint n; long long a[maxn];\nvoid init(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;++i) scanf(\"%I64d\",a+i);\n}\nlong long A[200];\nint dis[200],N;\nint Dis(int x,int y){\n\tmemset(dis,255,sizeof(dis));\n\tstatic int q[maxn]; int w=1; q[w]=x; dis[x]=0;\n\tfor (int i=1;i<=w;++i) for (int j=1;j<=N;++j)\n\t\tif ((A[q[i]]&A[j]) && dis[j]==-1 && (q[i]!=x || j!=y))\n\t\t\tq[++w]=j,dis[j]=dis[q[i]]+1;\n\tif (dis[y]!=-1) return dis[y];\n\treturn 10000000;\n}\nvoid work(){\n\t\n\tfor (int i=1;i<=n;++i) for (int j=60;j>=0;--j)\n\t\tif ((a[i]>>j)&1) ++A[j];\n\tfor (int j=0;j<=60;++j) if (A[j]>=3){\n\t\tprintf(\"3\\n\"); return;\n\t}\n\tN=0;\n\tfor (int i=1;i<=n;++i) if (a[i]) A[++N]=a[i];\n\tint ans=10000;\n\tfor (int i=1;i<=N;++i) for (int j=i+1;j<=N;++j) if (A[i]&A[j])\n\t\tans=min(ans,Dis(i,j)+1);\n\tif (ans>1000) puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n}\nint main(){\n\tinit();\n\twork();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "graphs"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Shortest Cycle.json",
    "editorial_link": "https://codeforces.com//blog/entry/69158",
    "editorial": "The most important thing in this task is to notice that if any bit is contained at least 3\n numbers, then they will form a cycle of length 3\n, and the answer is 3\n.\n\nSuppose now that each bit is in no more than two numbers. It follows that each bit can be shared by at most one pair of numbers. From here we get that in the graph there are no more than 60\n edges. Then in it you can find the shortest cycle in O(m2)\n: for each edge between the vertices u\n and v\n we will try to remove it and find the shortest distance between the vertices u\n, v\n in the resulting graph. If each time u\n and v\n turned out to be in different components, then there is no cycle in the graph, otherwise its length is 1\n + the minimal of the distances found.",
    "hint": []
}