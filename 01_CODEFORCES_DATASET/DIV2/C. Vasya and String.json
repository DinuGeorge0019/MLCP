{
    "link": "https://codeforces.com//contest/676/problem/C",
    "problemId": "60898",
    "problem_idx": "C",
    "shortId": "676C",
    "contest_number": "676",
    "problem_submissions": {
        "D": [
            18086124,
            18088139,
            18084280,
            18085571,
            18084868,
            18078718,
            18082907,
            18080588,
            18080137,
            18081145,
            18081985,
            18081026,
            18081695,
            18082035,
            18081128,
            18082512,
            18082190,
            18083067,
            18081575,
            18082166
        ],
        "E": [
            18083014,
            18097261,
            18097237,
            18085521,
            18088459,
            18088804,
            18088832,
            18103936,
            18095906,
            18094839,
            18090516,
            18100676,
            18103495,
            18227086
        ],
        "C": [
            18079114,
            18076155,
            18074138,
            18080914,
            18078417,
            18075987,
            18076242,
            18077017,
            18077328,
            18077130,
            18076218,
            18077107,
            18077040,
            18076098,
            18076862,
            18077489,
            18078049,
            18076245,
            18076673,
            18078488
        ],
        "B": [
            18076441,
            18077200,
            18076573,
            18077509,
            18075916,
            18074860,
            18074368,
            18074928,
            18076475,
            18075886,
            18077173,
            18074968,
            18075981,
            18075167,
            18077678,
            18075867,
            18076662,
            18079173,
            18077589,
            18077066
        ],
        "A": [
            18073771,
            18073531,
            18073371,
            18075006,
            18073412,
            18073493,
            18073358,
            18073487,
            18073563,
            18073458,
            18073435,
            18073444,
            18073768,
            18073556,
            18073505,
            18073796,
            18074124,
            18073590,
            18073448,
            18074969
        ]
    },
    "name": "C. Vasya and String",
    "statement": "High school student Vasya got a string of length as a birthday present.\r\nThis string consists of letters ” and ” only. Vasya denotes of the\r\nstring as the maximum length of a (consecutive subsequence) consisting\r\nof equal letters.Vasya can change no more than characters of the\r\noriginal string. What is the maximum beauty of the string he can\r\nachieve?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k;\n\nint Solve(string str) {\n\tint j = -1, countB = 0, ans = 0;\n\tfor(int i = 0; i < str.size(); ++i) {\n\t\tcountB += (str[i] == 'b');\n\n\t\twhile(j <= i && countB > k) {\n\t\t\t++j;\n\t\t\tcountB -= (str[j] == 'b');\n\t\t}\n\n\t\tans = max(ans, i - j);\n\t}\n\n\treturn ans;\n}\n\nint main() {\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"data.in\",\"r\",stdin);\n\t#endif // ONLINE_JUDGE\n\tcin.sync_with_stdio(false);\n\tcin.tie(0);\n\n\tcin >> n >> k;\n\n\tstring str;\n\tcin >> str;\n\n\tint r = Solve(str);\n\tfor(auto &c : str)\n\t\tc = c ^ 'a' ^ 'b';\n\tcout << max(r, Solve(str))<<\"\\n\";\n\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "dp",
        "strings",
        "two pointers"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Vasya and String.json",
    "editorial_link": "https://codeforces.com/blog/entry/45018",
    "editorial": "This problem can be solved with help of two pointers. Let the first\r\npointer is and the second pointer is . Then for every position we will\r\nmove right end until on the substring it is possible to make no more\r\nthan swaps to make this substring beautiful. Then we need to update the\r\nanswer with length of this substring and move to the right. Asymptotic\r\nbehavior .\r\n",
    "hint": []
}