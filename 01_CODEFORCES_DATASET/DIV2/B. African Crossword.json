{
    "link": "https://codeforces.com//contest/90/problem/B",
    "problemId": "473",
    "problem_idx": "B",
    "shortId": "90B",
    "contest_number": "90",
    "problem_submissions": {
        "D": [
            493304,
            492173,
            495112
        ],
        "E": [
            491947,
            491395,
            492859,
            493324,
            492706,
            491386,
            492076,
            492909
        ],
        "C": [
            490592,
            490305,
            490472,
            490789,
            491674,
            491498,
            490958,
            490747,
            493104,
            491269,
            491109,
            491086,
            492585
        ],
        "A": [
            489446,
            490943,
            489486,
            489158,
            489519,
            489735,
            489052,
            489077,
            489315,
            495095,
            489065,
            489180,
            489120,
            489179,
            489552
        ],
        "B": [
            489045,
            490681,
            489097,
            490102,
            490088,
            490248,
            489492,
            489514,
            490023,
            489439,
            489372,
            489797,
            489627,
            489746,
            4597999,
            490550
        ]
    },
    "name": "B. African Crossword",
    "statement": "An African crossword is a rectangular table in size. Each cell of the\r\ntable contains exactly one letter. This table (it is also referred to as\r\ngrid) contains some encrypted word that needs to be decoded.To solve the\r\ncrossword you should cross out all repeated letters in rows and columns.\r\nIn other words, a letter should only be crossed out if and only if the\r\ncorresponding column or row contains at least one more letter that is\r\nexactly the same. Besides, all such letters are crossed out\r\nsimultaneously.When all repeated letters have been crossed out, we\r\nshould write the remaining letters in a string. The letters that occupy\r\na higher position follow before the letters that occupy a lower\r\nposition. If the letters are located in one row, then the letter to the\r\nleft goes first. The resulting word is the answer to the problem.You are\r\nsuggested to solve an African crossword and print the word encrypted\r\nthere.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define size(x) int((x).size())\n#define foreach(i,c) for(typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef long long I64; typedef unsigned long long U64;\nconst double EPS=1e-12;\nconst int INF=999999999;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\n\nint m,n;\nchar g[101][101];\nint col[100][26],row[100][26];\n\nint main() {\n  scanf(\"%d%d\",&m,&n);\n  for(int i=0;i<m;++i) scanf(\"%s\",g[i]);\n\n  memset(col,0,sizeof(col));\n  memset(row,0,sizeof(row));\n\n  for(int i=0;i<m;++i) {\n    for(int j=0;j<n;++j) {\n      ++row[i][g[i][j]-'a'];\n      ++col[j][g[i][j]-'a'];\n    }\n  }\n\n  string s;\n  for(int i=0;i<m;++i)\n    for(int j=0;j<n;++j) {\n      int d=g[i][j]-'a';\n      if(row[i][d]>1 || col[j][d]>1) g[i][j]=' ';\n      else s+=g[i][j];\n    }\n  printf(\"%s\\n\",s.c_str());\n\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. African Crossword.json",
    "editorial_link": "https://codeforces.com//blog/entry/2162",
    "editorial": "It this problem you should write exactly that is written in statement. For every letter you should see a row and a column of the letter. If equal letter was found, current letter sould not be output. You can combine scanning rows and columns and output an answer, for example, this way:\n\nFOR(a,1,n) FOR(b,1,m)\n{\n    bool should_out=true;\n    FOR(c,1,n) if (c!=a) if (T[a][b]==T[c][b]) should_out=false;\n    FOR(c,1,m) if (c!=b) if (T[a][b]==T[a][c]) should_out=false;\n    if (should_out) printf(\"%c\", T[a][b]);\n}\n\nThis solution works in O(mn(n?+?m)).\n\nAlso here an O(nm)-solution exitsts. In every row and column you can calculate a number of every letter of an alphabet. After that check for output can be done in O(1). You just should check that numbers of entries of considered letter into corresponding row and column equal exactly 1.",
    "hint": []
}