{
    "link": "https://codeforces.com//contest/557/problem/A",
    "problemId": "30553",
    "problem_idx": "A",
    "shortId": "557A",
    "contest_number": "557",
    "problem_submissions": {
        "E": [
            11869387,
            11865728,
            11877714,
            11864888,
            11889151,
            11866470
        ],
        "D": [
            11859147,
            11860748,
            11861182,
            11862277,
            11863181,
            11865161,
            11863844,
            11864866,
            11861291,
            11865190,
            11866413,
            11860722,
            11865833,
            11866312,
            11923092,
            11859036,
            11864665,
            11862418,
            11864374
        ],
        "C": [
            11856407,
            11858913,
            11855729,
            11859389,
            11860110,
            11858947,
            11859067,
            11857533,
            11865562,
            11859501,
            11860468,
            11865942,
            11862380,
            11854539,
            11861657,
            11909827,
            11857135,
            11858056,
            11856524
        ],
        "B": [
            11852804,
            11852275,
            11853400,
            11856628,
            11854078,
            11854825,
            11852839,
            11853621,
            11854966,
            11854901,
            11855996,
            11862048,
            11854417,
            11862769,
            11867200,
            11867503
        ],
        "A": [
            11852067,
            11853135,
            11852127,
            11855787,
            11852575,
            11852315,
            11854321,
            11852415,
            11852433,
            11853058,
            11852340,
            11861439,
            11852247,
            11857225,
            11853713,
            11864195,
            11852181,
            11852458,
            11852065
        ]
    },
    "name": "A. Ilya and Diplomas",
    "statement": "Soon a school Olympiad in Informatics will be held in Berland,\r\nschoolchildren will participate there.At a meeting of the jury of the\r\nOlympiad it was decided that of the participants, depending on the\r\nresults, will get a diploma of the first, second or third degree. Thus,\r\neach student will receive exactly one diploma.They also decided that\r\nthere must be given at least and at most diplomas of the first degree,\r\nat least and at most diplomas of the second degree, and at least and at\r\nmost diplomas of the third degree.After some discussion it was decided\r\nto choose from all the options of distributing diplomas satisfying these\r\nlimitations the one that maximizes the number of participants who\r\nreceive diplomas of the first degree. Of all these options they select\r\nthe one which maximizes the number of the participants who receive\r\ndiplomas of the second degree. If there are multiple of these options,\r\nthey select the option that maximizes the number of diplomas of the\r\nthird degree.Choosing the best option of distributing certificates was\r\nentrusted to Ilya, one of the best programmers of Berland. However, he\r\nfound more important things to do, so it is your task now to choose the\r\nbest option of distributing of diplomas, based on the described\r\nlimitations.It is guaranteed that the described limitations are such\r\nthat there is a way to choose such an option of distributing diplomas\r\nthat all participants of the Olympiad will receive a diploma of some\r\ndegree.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n; cin >> n; \n    int min1, max1, min2, max2, min3, max3; \n    cin >> min1 >> max1 >> min2 >> max2 >> min3 >> max3;\n    int first = min(max1, n-min2-min3); \n    n-=first; \n    int second = min (max2, n-min3); \n    n-=second;\n    cout << first << ' ' << second << ' '<< n;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Ilya and Diplomas.json",
    "editorial_link": "https://codeforces.com//blog/entry/18943",
    "editorial": "This problem can be solved in the different ways. We consider one of them Â— parsing cases.\n\nIf max1?+?min2?+?min3???n then the optimal solution is (n?-?min2?-?min3, min2, min3).\n\nElse if max1?+?max2?+?min3???n then the optimal solution is (max1, n?-?max1?-?min3, min3).\n\nElse the optimal solution is (max1, max2, n?-?max1?-?max2).\n\nThis solution is correct because of statement. It is guaranteed that min1?+?min2?+?min3???n???max1?+?max2?+?max3.",
    "hint": []
}