{
    "link": "https://codeforces.com//contest/811/problem/B",
    "problemId": "107530",
    "problem_idx": "B",
    "shortId": "811B",
    "contest_number": "811",
    "problem_submissions": {
        "E": [
            27384705,
            106269730,
            27384523,
            27384734,
            27377479,
            27382245,
            27387921,
            27385994,
            27378312,
            27417485,
            27383230,
            27385468,
            27379502,
            27382190,
            27381400,
            27383006
        ],
        "D": [
            27379365,
            27381500,
            27381222,
            27386537,
            27382445,
            27381225,
            27382121,
            27382035,
            27384111,
            27380209,
            27384960,
            27386244,
            27384575,
            27385712,
            27381029,
            27382189,
            27383952
        ],
        "C": [
            27375763,
            27376427,
            27377289,
            27382636,
            27375842,
            27378042,
            27373086,
            27379255,
            27377375,
            27374603,
            27380152,
            27380818,
            27378127,
            27376964,
            27376298,
            27380327,
            27375518,
            27379100,
            27378177,
            27379352
        ],
        "B": [
            27372900,
            27372650,
            27375003,
            27380196,
            27375149,
            27373634,
            27384935,
            27374432,
            27374563,
            27374805,
            27389142,
            27372946,
            27375127,
            27378423,
            27372846,
            27373956,
            27374358
        ],
        "A": [
            27371146,
            27371406,
            27372004,
            27371481,
            27372708,
            27371377,
            27372619,
            27371210,
            27371813,
            27371396,
            27371888,
            27371519,
            27371189,
            27371592,
            27371623,
            27372374,
            27385878,
            27371337,
            27371714,
            27372067
        ]
    },
    "name": "B. Vladik and Complicated Book",
    "statement": "Vladik had started reading a complicated book about algorithms\r\ncontaining pages. To improve understanding of what is written, his\r\nfriends advised him to read pages in some order given by permutation ,\r\nwhere denotes the number of page that should be read -th in\r\nturn.Sometimes Vladik s mom sorted some subsegment of permutation from\r\nposition to position inclusive, because she loves the order. For every\r\nof such sorting Vladik knows number what index of page in permutation he\r\nshould read. He is wondered if the page, which he will read after\r\nsorting, has changed. In other words, has changed? After every sorting\r\nVladik return permutation to initial state, so you can assume that each\r\nsorting is independent from each other.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define rep(i,j,k) for((i)=(j);(i)<=(k);++i)\n#define per(i,j,k) for((i)=(j);(i)>=(k);--i)\nusing namespace std;\ntypedef long long ll;\ninline void cmin(int &x,int y){if(y<x)x=y;}\ninline void cmax(int &x,int y){if(y>x)x=y;}\nint a[100006];\nint inline read(){\n\tchar ch=getchar();int z=0,f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){z=z*10+ch-'0';ch=getchar();}\n\treturn z*f;\n}\nint main(){\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tint n,m,i,l,r,x;\n\tn=read();m=read();\n\trep(i,1,n) a[i]=read();\n\twhile(m--){\n\t\tl=read();r=read();x=read();\n\t\tint tot = 0;\n\t\trep(i,l,r){if(a[i] < a[x]) ++tot;}\n\t\tif(tot == x - l) puts(\"Yes\"); else puts(\"No\");\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Vladik and Complicated Book.json",
    "editorial_link": "https://codeforces.com//blog/entry/52228",
    "editorial": "Obviously, that all the elements in range, which are less than will go\r\nto the left of after sort. So the new position will be . Letâs find with\r\nsimple iterating through all the elements in the segment.\r\n",
    "hint": [
        "Hint Solution with complexity is too slow? Probably we should sort faster?"
    ]
}