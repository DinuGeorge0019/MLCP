{
    "link": "https://codeforces.com//contest/189/problem/A",
    "problemId": "1316",
    "problem_idx": "A",
    "shortId": "189A",
    "contest_number": "189",
    "problem_submissions": {
        "E": [
            1678506,
            1678460,
            1678211,
            1678693,
            1677477,
            1677700,
            1680381,
            1677887,
            1678428,
            1681566
        ],
        "D": [
            1676682,
            1676035,
            1677096,
            1677898,
            1674240,
            1680791,
            1676256,
            1676755,
            1676792,
            1677405,
            1676745,
            1676612,
            1677482,
            1677225,
            1676566
        ],
        "C": [
            1674208,
            1675081,
            1675273,
            1676086,
            1673529,
            1673748,
            1674530,
            1675036,
            1674970,
            1674691,
            1674910,
            1675504,
            1675160,
            1673957,
            1675084,
            1674909
        ],
        "B": [
            1673360,
            1673410,
            1674214,
            1674813,
            1672769,
            1673156,
            1673373,
            1673917,
            1674026,
            1673370,
            1673358,
            1672790,
            1673649,
            1674219,
            1672936,
            1673608,
            1675358
        ],
        "A": [
            1672718,
            1672777,
            1673274,
            1672957,
            1672602,
            1672581,
            1672722,
            1673173,
            1673083,
            1672709,
            1672650,
            1672579,
            1672834,
            1672816,
            1674499,
            1672796,
            1672817
        ]
    },
    "name": "A. Cut Ribbon",
    "statement": "Polycarpus has a ribbon, its length is . He wants to cut the ribbon in a\r\nway that fulfils the following two conditions: After the cutting each\r\nribbon piece should have length , or . After the cutting the number of\r\nribbon pieces should be maximum. Help Polycarpus and find the number of\r\nribbon pieces after the required cutting.\r\n",
    "solutions": [
        "/*\n * Author: code6\n * Created Time:  2012/5/10 23:32:12\n * File Name: A.cpp\n */\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <ctime>\n#include <string>\n\nusing namespace std;\n#define out(v) cerr << #v << \": \" << (v) << endl\n#define SZ(v) ((int)(v).size())\nconst int maxint = -1u>>1;\ntemplate <class T> bool get_max(T& a, const T &b) {return b > a? a = b, 1: 0;}\ntemplate <class T> bool get_min(T& a, const T &b) {return b < a? a = b, 1: 0;}\ntypedef long long ll;\nconst double PI=acos(-1.0);\nconst double eps=1e-11;\n\nint dp[10000];\n\nvoid update(int &a, int b)\n{\n    a = max(a, b);\n}\n\nint main() {\n    int n, a, b, c;\n    int i;\n    cin>>n>>a>>b>>c;\n    memset(dp, -1, sizeof(dp));\n    dp[0] = 0;\n    for (i = 0; i <= n; i++) {\n        if (dp[i] != -1) {\n            update(dp[i + a],  dp[i] + 1);\n            update(dp[i + b],  dp[i] + 1);\n            update(dp[i + c],  dp[i] + 1);\n        }\n    }\n    cout<<dp[n]<<endl;\n    return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Cut Ribbon.json",
    "editorial_link": "https://codeforces.com//blog/entry/4540",
    "editorial": "The problem is to maximize x+y+z subject to ax+by+cz=n. Constraints are low, so simply iterate over two variables (say x and y) and find the third variable (if any) from the second equation. Find the maximum over all feasible solutions.\n\nOther approaches: Use dynamic programming with each state being the remainder of ribbon. Select the next piece to be a, b or c."
}