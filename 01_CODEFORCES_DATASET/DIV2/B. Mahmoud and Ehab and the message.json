{
    "link": "https://codeforces.com//contest/959/problem/B",
    "problemId": "170879",
    "problem_idx": "B",
    "shortId": "959B",
    "contest_number": "959",
    "problem_submissions": {
        "F": [
            36922958,
            36921545,
            36916491,
            36923329,
            36927067,
            36929072,
            36922529,
            36949027,
            36923867
        ],
        "D": [
            36916641,
            36918902,
            36913950,
            36921936,
            36920649,
            36922086,
            36938795,
            36921202,
            36919547,
            36921230,
            36920592,
            36944605,
            36921671,
            36921791,
            36916069,
            36920555,
            36925905,
            36924207,
            36923247
        ],
        "E": [
            36914501,
            36913015,
            36925858,
            36917118,
            36923111,
            36917652,
            36920424,
            36917502,
            36915031,
            36915660,
            36915376,
            36919671,
            36917632,
            36917697,
            36920779,
            36924711,
            36918716,
            36918302,
            36918515
        ],
        "C": [
            36911904,
            36911030,
            36920972,
            36913089,
            36913595,
            36913140,
            36914345,
            36913057,
            36911886,
            36913682,
            36913398,
            36917432,
            36913393,
            36914727,
            36913492,
            36914481,
            36914594,
            36913357,
            36914333
        ],
        "B": [
            36910571,
            36909536,
            36910083,
            36911621,
            36910450,
            36910777,
            36911891,
            36911461,
            36909624,
            36911118,
            36910588,
            36915553,
            36910516,
            36911975,
            36910706,
            36910209,
            36911346,
            36910873,
            36911805
        ],
        "A": [
            36909207,
            36907273,
            36907351,
            36907609,
            36907481,
            36907506,
            36907642,
            36908528,
            36907595,
            36907279,
            36907604,
            36911260,
            36907582,
            36908413,
            36907465,
            36907398,
            36907769,
            36907688,
            36907674
        ]
    },
    "name": "B. Mahmoud and Ehab and the message",
    "statement": "Mahmoud wants to send a message to his friend Ehab. Their language\r\nconsists of words numbered from to . Some words have the same meaning so\r\nthere are groups of words such that all the words in some group have the\r\nsame meaning.Mahmoud knows that the -th word can be sent with cost . For\r\neach word in his message, Mahmoud can either replace it with another\r\nword of the same meaning or leave it as it is. Can you help Mahmoud\r\ndetermine the minimum cost of sending the message?The cost of sending\r\nthe message is the sum of the costs of sending every word in it.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\n#define F first\n#define S second\n\nconst int MAXN = 1e5 + 10;\n\nint n, k, m;\nstring s[MAXN];\nint a[MAXN], cost[MAXN];\nmap<string, int> mp;\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin >> n >> k >> m;\n\tfor (int i = 0; i < n; i++) cin >> s[i];\n\tfor (int i = 0; i < n; i ++) cin >> a[i];\n\tmemset(cost, 63, sizeof(cost));\n\tfor (int i = 0; i < k; i++){\n\t\tint t; cin >> t;\n\t\twhile (t--){\n\t\t\tint ind; cin >> ind, ind--;\n\t\t\tcost[i] = min(cost[i], a[ind]);\n\t\t\tmp[s[ind]] = i;\n\t\t}\n\t}\n\tll ans = 0;\n\twhile (m--){\n\t\tstring t; cin >> t;\n\t\tans += cost[mp[t]];\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dsu",
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Mahmoud and Ehab and the message.json",
    "editorial_link": "https://codeforces.com//blog/entry/58712",
    "editorial": "It\u00e2\u0080\u0099s easy to see that for every word, the minimum cost of sending it is\r\nthe minimum cost of sending any word in its group. For each group, we\u00e2\u0080\u0099ll\r\nmaintain the minimum cost for sending a word in it (let it be ) and for\r\neach word, we\u00e2\u0080\u0099ll maintain its group (let it be ). For every word in the\r\nmessage, we\u00e2\u0080\u0099ll add to the answer. Code link (me) :\r\nhttps://pastebin.com/3RFeEkgD Code link (mahmoudbadawy) :\r\nhttps://pastebin.com/sR5eZy7d Time complexity : . Bonus task : Try to\r\nsolve the problem if the input was given as pairs of words that are\r\nsynonyms (assuming synonymy is transitive). SolutionUse dsu to transform\r\nthe bonus task to the original problem.\r\n"
}