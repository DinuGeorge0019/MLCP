{"link": "https://codeforces.com//contest/1287/problem/C", "problemId": "509648", "problem_idx": "C", "shortId": "1287C", "contest_number": "1287", "problem_submissions": {"E2": [68292966], "E1": [68275567, 69857829, 68268888, 68267730, 68276517, 68275345, 68277506], "D": [68254686, 69267989, 68263399, 68273154, 68268233, 68260202, 68261652, 68267427, 68261050, 68269506, 68253370, 68261828, 68262781, 68259993, 68263653, 68262032, 68264765, 68263857, 68263835, 68268683], "C": [68251057, 69267378, 68258032, 68258705, 68258307, 68255841, 68251184, 68254777, 68254064, 68259914, 68257391, 68256601, 68256839, 68253229, 68254316, 68258260, 68255773, 68259159, 68259073, 68255080], "B": [68248587, 69266960, 68254034, 68252413, 68256461, 68250437, 68247733, 68281202, 68281106, 68280696, 68280618, 68264095, 68250685, 68253499, 68259982, 68248645, 68435109, 68253464, 68263831, 68250832, 68248995, 68250500, 68255530, 68255702, 68249590], "A": [68244872, 69266641, 68245653, 68244897, 68247583, 68245583, 68244694, 68245113, 68244700, 68244809, 68261293, 68244924, 68435072, 68246461, 68245783, 68245033, 68244706, 68244729, 68245472, 68245512, 68245361], "F": [68641340]}, "name": "C. Garland", "statement": "Vadim loves decorating the Christmas tree, so he got a beautiful garland\r\nas a present. It consists of n light bulbs in a single row. Each bulb\r\nhas a number from 1 to n (in arbitrary order), such that all the numbers\r\nare distinct. While Vadim was solving problems, his home Carp removed\r\nsome light bulbs from the garland. Now Vadim wants to put them back\r\non.Vadim wants to put all bulb back on the garland. Vadim defines of a\r\ngarland to be the number of pairs of adjacent bulbs with numbers with\r\ndifferent parity (remainder of the division by 2). For example, the\r\ncomplexity of is 2 and the complexity of is 1.No one likes complexity,\r\nso Vadim wants to minimize the number of such pairs. Find the way to put\r\nall bulbs back on the garland, such that the complexity is as small as\r\npossible.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 105;\n\nint n;\nint arr[N];\n\nint dp[N][N][N][2];\n\nint solve(int pos, int zero, int one, int lst) {\n  if (one < 0 || zero < 0) return 1e9;\n\n  if (pos == n) {\n    return 0;\n  }\n\n  int &ret = dp[pos][zero][one][lst];\n  if (ret != -1) {\n    return ret;\n  }\n\n  ret = 1e9;\n  if (arr[pos] == 0) {\n    ret = solve(pos+1, zero-1, one, 0) + (lst == 1);\n    ret = min(ret, solve(pos+1, zero, one-1, 1) + (lst == 0));\n  } else {\n    ret = solve(pos+1, zero, one, arr[pos] % 2) + (arr[pos] % 2 != lst);\n  }\n\n  return ret;\n}\n\nvoid read() {\n  cin >> n;\n  for (int i = 0 ; i < n ; i++) {\n    cin >> arr[i];\n  }\n}\n\nint work() {\n  memset(dp, -1, sizeof dp);\n\n  int zero = n / 2;\n  int one = n - zero;\n\n  for (int i = 0 ; i < n ; i++) {\n    if (arr[i] > 0) {\n      if (arr[i] % 2 == 0) zero--;\n      else one--;\n    }\n  }\n\n  int ret = solve(0, zero, one, 0);\n  ret = min(ret, solve(0, zero, one, 1));\n  return ret;\n}\n\nint main() {\n  read();\n  cout << work() << endl;\n  return 0;\n}"], "input": "", "output": "", "tags": ["dp", "greedy", "sortings"], "dificulty": "1800", "interactive": false}