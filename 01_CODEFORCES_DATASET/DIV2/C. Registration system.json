{"link": "https://codeforces.com//contest/4/problem/C", "problemId": "15", "problem_idx": "C", "shortId": "4C", "contest_number": "4", "problem_submissions": {"D": [16890, 16860, 16849, 17129, 16971, 17073, 17153, 17175, 17097, 17267, 17067, 17412, 17271, 17255], "C": [16625, 16725, 16822, 16792, 16812, 16858, 17049, 16872, 16645, 16659, 16689, 16489, 16697], "B": [16507, 16612, 16517, 16648, 16691, 16693, 16557, 16549, 16506, 16484, 16577, 16739, 16582], "A": [16265, 16268, 16274, 16389, 16519, 16367, 16272, 16229, 16259, 16251, 16333, 16311, 16286]}, "name": "C. Registration system", "statement": "A new e-mail service \"Berlandesk\" is going to be opened in Berland in\r\nthe near future. The site administration wants to launch their project\r\nas soon as possible, that\u2019s why they ask you to help. You\u2019re suggested\r\nto implement the prototype of site registration system. The system\r\nshould work on the following principle. Each time a new user wants to\r\nregister, he sends to the system a request with his . If such a does not\r\nexist in the system database, it is inserted into the database, and the\r\nuser gets the response , confirming the successful registration. If the\r\nalready exists in the system database, the system makes up a new user\r\nname, sends it to the user as a prompt and . The new name is formed by\r\nthe following rule. Numbers, starting with 1, are appended one after\r\nanother to (, , ...), among these numbers the least is found so that\r\ndoes not yet exist in the database.\r\n", "solutions": ["#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <math.h>\n#include <stdio.h>\n#include <cstring>\n#include <vector>\n#include <map>\n#include <string>\n#include <set>\n#include <sstream>\n#define FOR(i,a,b) for(int i = a; i <= b; i++) \n/* CONSTANT  */\n#define oo 1000000002\n/* DEBUGGING */\nbool debug = false;\n/* MAIN PROGRAM */\n\nusing namespace std;\nmap<string,int> Map;\nint n;\nstring x;\nint main()\n{ \n    scanf(\"%d\",&n);\n    FOR(i,1,n)\n    {\n        cin >> x;\n        if (Map.find(x) == Map.end())\n        {\n            cout << \"OK\" << endl;\n            Map[x] = 0;\n        } else\n        {\n            Map[x]++;\n            cout << x << Map[x] << endl;\n        }\n    }\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["data structures", "hashing", "implementation"], "dificulty": "1300", "interactive": false}