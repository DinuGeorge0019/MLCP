{"link": "https://codeforces.com//contest/1064/problem/D", "problemId": "236970", "problem_idx": "D", "shortId": "1064D", "contest_number": "1064", "problem_submissions": {"B": [44655610, 44296972, 44293144, 44292773, 44293812, 44293718, 44293000, 44344754, 44293975, 44295190, 44293365, 44295370, 44302868, 44293963, 44294620, 44294475, 44296374, 44298406, 44294385, 44297171, 44295746], "A": [44655603, 44292257, 44291327, 44291231, 44292052, 44291980, 44291181, 44344735, 44291813, 44291934, 44291290, 44294068, 44291371, 44291185, 44291129, 44291644, 44291587, 44296995, 44291676, 44291601, 44292439], "D": [44310987, 44300224, 44301769, 44303356, 44301800, 44301521, 44299632, 44306110, 44302195, 44302177, 44301311, 44302882, 44301868, 44302023, 44303439, 44302526, 44302660, 44306757, 44303670], "E": [44303702, 44306444, 44305605, 44306133, 44308351, 44308131, 44310963, 44309275, 44308545, 44310866, 44307847, 44308332, 44308689, 44308749, 44307609, 44306211, 44309665, 44312766, 44308919], "C": [44293719, 44294513, 44294217, 44296068, 44295654, 44294557, 44296176, 44300122, 44295991, 44293129, 44296152, 44295799, 44321133, 44296946, 44298909, 44297762, 44299676, 44296772, 44300478, 44298201], "F": [44354268]}, "name": "D. Labyrinth", "statement": "You are playing some computer game. One of its levels puts you in a maze\r\nconsisting of lines, each of which contains cells. Each cell either is\r\nfree or is occupied by an obstacle. The starting cell is in the row and\r\ncolumn . In one step you can move one square up, left, down or right, if\r\nthe target cell is not occupied by an obstacle. You can\u2019t move beyond\r\nthe boundaries of the labyrinth.Unfortunately, your keyboard is about to\r\nbreak, so you can move left no more than times and move right no more\r\nthan times. There are no restrictions on the number of moves up and down\r\nsince the keys used to move up and down are in perfect condition.Now you\r\nwould like to determine for each cell whether there exists a sequence of\r\nmoves that will put you from the starting cell to this particular one.\r\nHow many cells of the board have this property?\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=2010;\nint n,m,r,c,x,y;\nchar mp[N][N];\nbool vis[N][N];\nstruct node{int x,y,rx,ry;};\ndeque<node> q;\n\nint main()\n{\n    int ans=0;\n    cin>>n>>m>>r>>c>>x>>y;\n    for(int i=1;i<=n;i++)\n        scanf(\"%s\",mp[i]+1);\n    q.push_back({r,c,x,y});\n    while(!q.empty())\n    {\n        node tmp=q.front();q.pop_front();\n        int x=tmp.x,y=tmp.y;\n        if(vis[x][y]) continue;\n        vis[x][y]=1;ans++;\n        if(x>1&&mp[x-1][y]=='.') q.push_front({x-1,y,tmp.rx,tmp.ry});\n        if(x<n&&mp[x+1][y]=='.') q.push_front({x+1,y,tmp.rx,tmp.ry});\n        if(y>1&&mp[x][y-1]=='.'&&tmp.rx) q.push_back({x,y-1,tmp.rx-1,tmp.ry});\n        if(y<m&&mp[x][y+1]=='.'&&tmp.ry) q.push_back({x,y+1,tmp.rx,tmp.ry-1});\n    }\n    cout<<ans<<endl;\n    return 0;\n}"], "input": "", "output": "", "tags": ["graphs", "shortest paths"], "dificulty": "1800", "interactive": false}