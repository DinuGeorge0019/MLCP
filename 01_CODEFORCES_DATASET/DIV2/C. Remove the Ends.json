{
    "link": "https://codeforces.com//contest/2064/problem/C",
    "problemId": "3209695",
    "problem_idx": "C",
    "shortId": "2064C",
    "contest_number": "2064",
    "problem_submissions": {
        "F": [
            306407892,
            306425196,
            306377965,
            306528822,
            306420583,
            306436938,
            306464619,
            306464611,
            306464596,
            306421840,
            306436020,
            306431617
        ],
        "E": [
            306390714,
            306398471,
            306384310,
            306394422,
            306398127,
            306399878,
            306406503,
            306383184,
            306400855,
            306401726,
            306402720,
            306406500,
            306407308,
            306407643
        ],
        "D": [
            306371870,
            306386641,
            306395969,
            306366170,
            306368905,
            306376156,
            306376541,
            306371606,
            306373885,
            306397500,
            306381946,
            306383232,
            306376685,
            306374721,
            306378738,
            306378728,
            306379129
        ],
        "C": [
            306354396,
            306362052,
            306353937,
            306355169,
            306355714,
            306353717,
            306358223,
            306359445,
            306355168,
            306369168,
            306356490,
            306351942,
            306356412,
            306355663,
            306365036,
            306361215,
            306362138
        ],
        "B": [
            306350175,
            306351645,
            306349804,
            306350391,
            306352487,
            306349346,
            306350952,
            306351840,
            306351364,
            306350764,
            306349120,
            306348178,
            306353114,
            306350171,
            306353103,
            306355161,
            306356448
        ],
        "A": [
            306345365,
            306345586,
            306346094,
            306345382,
            306344838,
            306344890,
            306345366,
            306345254,
            306346099,
            306344812,
            306345138,
            306344813,
            306347979,
            306345325,
            306346230,
            306349362
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/138912",
    "editorial": "SolutionFirst see that at any point we should either remove the leftmost\r\npositive element or the rightmost negative element, as if we were to\r\ntake a positive element that is not the leftmost one we could have just\r\ntaken the leftmost one first and had a higher score, a similar argument\r\ncan be made for taking the rightmost negative element. Now if you do\r\neither of these moves some number of times you will always take some\r\nprefix of positive numbers and then the remaining suffix of negative\r\nnumbers, and so to calculate the answer we only need to check all ways\r\nto split the array into a prefix and suffix and take the maximum across\r\nthem all which is easy to do in .\r\n",
    "name": "C. Remove the Ends",
    "statement": "You have an array a of length n consisting of integers. Initially, you\r\nhave 0 coins, and you will do the following until a is empty: Let m be\r\nthe current size of a. Select an integer i where 1\r\nle i\r\nle m, gain |a_i|^{\r\ntext{ }} coins, and then: if a_i < 0, then replace a with [a_1,a_2,\r\nldots,a_{i - 1}] (that is, delete the suffix beginning with a_i);\r\notherwise, replace a with [a_{i + 1},a_{i + 2},\r\nldots,a_m] (that is, delete the prefix ending with a_i). Find the\r\nmaximum number of coins you can have at the end of the process.^{\r\ntext{ }}Here |a_i| represents the absolute value of a_i: it equals a_i\r\nwhen a_i > 0 and -a_i when a_i < 0.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Remove the Ends.json",
    "hint": []
}