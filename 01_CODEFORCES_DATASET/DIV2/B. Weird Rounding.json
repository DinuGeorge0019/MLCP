{
    "link": "https://codeforces.com//contest/779/problem/B",
    "problemId": "95636",
    "problem_idx": "B",
    "shortId": "779B",
    "contest_number": "779",
    "problem_submissions": {
        "E": [
            25041597,
            25042966,
            25042647,
            25042184,
            25041738,
            25044527,
            25046776,
            25043037,
            25043576,
            25044558,
            25045642,
            25044076,
            25043684,
            25042226,
            25043678,
            25045366,
            25044333
        ],
        "C": [
            25035763,
            25034520,
            25036373,
            25034120,
            25034894,
            25035381,
            25035813,
            25032607,
            25034344,
            25034774,
            25035579,
            25035162,
            25033556,
            25036921,
            25034938,
            25034865,
            25034643
        ],
        "B": [
            25034403,
            25033009,
            25035076,
            25032745,
            25033238,
            25033475,
            25034138,
            25036437,
            25032923,
            25032280,
            25033532,
            25033250,
            25032318,
            25036213,
            25033673,
            25033347,
            25032551
        ],
        "A": [
            25033465,
            25031856,
            25033923,
            25031374,
            25031707,
            25031479,
            25032790,
            25034086,
            25031239,
            25031289,
            25031285,
            25031689,
            25031337,
            25035671,
            25032432,
            25031702,
            25031272
        ],
        "D": [
            25032517,
            25037114,
            25032438,
            25036092,
            25036499,
            25037466,
            25043534,
            25038470,
            25037495,
            25037533,
            25041359,
            25039849,
            25037140,
            25038656,
            25037700,
            25037570,
            25037825
        ]
    },
    "name": "B. Weird Rounding",
    "statement": "Polycarp is crazy about round numbers. He especially likes the numbers\r\ndivisible by .In the given number of Polycarp wants to remove the least\r\nnumber of digits to get a number that is divisible by . For example, if\r\n, in the number it is enough to delete a single digit (). In this case,\r\nthe result is that is divisible by .Write a program that prints the\r\nminimum number of digits to be deleted from the given integer number ,\r\nso that the result is divisible by . The result should not start with\r\nthe unnecessary leading zero (i.e., zero can start only the number ,\r\nwhich is required to be written as exactly one digit).It is guaranteed\r\nthat the answer exists.\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#include <set>\n#include <stdlib.h>\n#include <math.h>\n#include <string>\n#include <time.h>\n#include <string.h>\n#include <queue>\n#include <stack>\n#define sz size()\n#define pb push_back\nusing namespace std;\ntypedef long long int ll;\nll mod=1e9+7;\nll exp(ll t,ll x){if(x==0) return 1;if(x==1) return t;if(x%2==1) return (t*exp((t*t)%mod,x/2))%mod;if(x%2==0) return exp((t*t)%mod,x/2);} \nll gcd(ll x,ll y){return x%y==0?y:gcd(y,x%y);}\nll lcm(ll x,ll y){return x*(y/gcd(x,y));}\nll bsum(ll u,ll b){return u<b?u:bsum(u/b,b)+u%b;}\nll prival(ll u,ll p){int cn=0;while(u%p==0){cn++;u=u/p;}return cn;}\nbool isprime(ll x){for(ll i=2;i*i<=x;i++){if(x%i==0){return false;}}return true;}\nvoid YAY(void){cout<<\"YES\"<<endl;}\nvoid NAY(void){cout<<\"NO\"<<endl;}\nstring s;\nint cz, n, k;\nint main(void)\n{\n\tint i, j;\n\tcin>>s>>k;\n\tn=s.size();\n\tfor(i=0 ; i<n ; i++)\n\t{\n\t\tif(s[i]=='0')\n\t\t{\n\t\t\tcz++;\n\t\t}\n\t}\n\tif(cz>=k)\n\t{\n\t\tint cc=0;\n\t\tint ans=0;\n\t\tfor(i=n-1 ; i>=0 ; i--)\n\t\t{\n\t\t\tif(s[i]=='0')\n\t\t\t{\n\t\t\t\tcc++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t\tif(cc>=k)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout<<ans;\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tcout<<n-1;\n\t}\n\t\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Weird Rounding.json",
    "editorial_link": "https://codeforces.com//blog/entry/50724",
    "editorial": "To  solve this problem we need to make\nzeroes in the end of number . Letâs look on the given number as on the\nstring and iterate through it beginning from the end (i.e. from the low\norder digit). Let equals to the number of digits which we reviewed. If\nthe current digit does not equal to zero we need to increase the answer\non one. If became equal to and we reviewed not all digits we need to\nprint the answer. In the other case we need to remove from the string\nall digits except one, which equals to zero (if there are more than one\nsuch digit we left only one of them). Such digit always exists because\nthe problem statement guaranteed that the answer exists.\n",
    "hint": []
}