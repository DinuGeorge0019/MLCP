{
    "link": "https://codeforces.com//contest/1775/problem/B",
    "problemId": "1730874",
    "problem_idx": "B",
    "shortId": "1775B",
    "contest_number": "1775",
    "problem_submissions": {
        "F": [
            188713433,
            188725196,
            188731396,
            188734657,
            188732056,
            188733441,
            188727879,
            188728779,
            188732238,
            188744590,
            188740643,
            188819082,
            188726758,
            188730587,
            188740657,
            188744867,
            188749677,
            188736230,
            188750878,
            188747224,
            188750488
        ],
        "E": [
            188705052,
            188711810,
            188702314,
            188703997,
            188719714,
            188707610,
            188716487,
            188718865,
            188714441,
            188704775,
            188725287,
            188819074,
            188708013,
            188721335,
            188719084,
            188719253,
            188714969,
            188726615,
            188723431,
            188727896,
            188725883
        ],
        "D": [
            188702613,
            188703020,
            188697830,
            188697522,
            188707471,
            188696985,
            188707674,
            188710332,
            188711385,
            188724357,
            188713699,
            188819118,
            188819061,
            188695392,
            188715707,
            188723783,
            188712755,
            188710335,
            188700501,
            188714975,
            188711803,
            188710270
        ],
        "C": [
            188694431,
            188698020,
            188689331,
            188692115,
            188699073,
            188721317,
            188698207,
            188703599,
            188700577,
            188691524,
            188697369,
            188818955,
            188729950,
            188704268,
            188712641,
            188705362,
            188703234,
            188716581,
            188706582,
            188705592,
            188701989
        ],
        "B": [
            188689294,
            188694420,
            188688425,
            188705924,
            188692481,
            188693569,
            188693704,
            188692884,
            188692641,
            188690496,
            188689877,
            188818945,
            188737766,
            188698596,
            188704549,
            188701478,
            188699101,
            188697811,
            188699643,
            188700904,
            188695734
        ],
        "A2": [
            188688478,
            188690842,
            188692472,
            188689269,
            188688789,
            188704546,
            188691442,
            188689540,
            188689829,
            188692114,
            188699776,
            188818970,
            188727805,
            188692265,
            188700238,
            188696195,
            188689432,
            188688599,
            188695159,
            188698301,
            188690756
        ],
        "A1": [
            188688462,
            188690964,
            188692352,
            188689360,
            188688853,
            188699704,
            188691533,
            188689633,
            188689929,
            188688691,
            188699645,
            188818981,
            188689698,
            188692382,
            188700463,
            188696403,
            188689492,
            188688657,
            188694924,
            188695874,
            188690864
        ]
    },
    "name": "B. Gardener and the Array",
    "statement": "The gardener Kazimir Kazimirovich has an array of n integers c_1, c_2,\r\ndots, c_n.He wants to check if there are two different subsequences a\r\nand b of the original array, for which f(a) = f(b), where f(x) is the\r\nbitwise OR of all of the numbers in the sequence x.A sequence q is a\r\nsubsequence of p if q can be obtained from p by deleting several\r\n(possibly none or all) elements.Two subsequences are considered\r\ndifferent if the sets of indexes of their elements in the original\r\nsequence are different, that is, the values of the elements are not\r\nconsidered when comparing the subsequences.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define ll long long\n#define ii pair<int,int>\n#define iii tuple<int,int,int>\n#define fi first\n#define se second\n#define endl '\\n'\n#define debug(x) cout << #x << \": \" << x << endl\n\n#define pub push_back\n#define pob pop_back\n#define puf push_front\n#define pof pop_front\n#define lb lower_bound\n#define ub upper_bound\n\n#define rep(x,start,end) for(int x=(start)-((start)>(end));x!=(end)-((start)>(end));((start)<(end)?x++:x--))\n#define all(x) (x).begin(),(x).end()\n#define sz(x) (int)(x).size()\n\nmt19937 rng(chrono::system_clock::now().time_since_epoch().count());\n\nint n;\nint cnt[200005];\nvector<int> pos[100005];\n\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin.exceptions(ios::badbit | ios::failbit);\n\t\n\tint TC;\n\tcin>>TC;\n\twhile (TC--){\n\t\tcin>>n;\n\t\t\n\t\trep(x,0,n){\n\t\t\tint a; cin>>a;\n\t\t\tpos[x]=vector<int>(a);\n\t\t\tfor (auto &it:pos[x]) cin>>it;\n\t\t}\n\t\t\n\t\trep(x,0,n) for (auto it:pos[x]) cnt[it]++;\n\t\t\n\t\tbool ok=false;\n\t\trep(x,0,n){\n\t\t\tbool bad=false;\n\t\t\tfor (auto it:pos[x]) if (cnt[it]==1) bad=true;\n\t\t\tif (!bad) ok=true;\n\t\t}\n\t\t\n\t\trep(x,0,n) for (auto it:pos[x]) cnt[it]--;\n\t\t\n\t\tif (ok) cout<<\"Yes\"<<endl;\n\t\telse cout<<\"No\"<<endl;\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Gardener and the Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/111286",
    "editorial": "The problem can be solved as follows: for each bit count the number of\r\nits occurrences in all numbers in the test. If each number has a bit\r\nwhich occurs in all numbers exactly once, then the answer is \"NO\",\r\notherwise the answer is \"YES\".Letâs try to prove this solution. Let\r\nthere be a number in which all bits occurs in all numbers at least\r\ntimes. But then it is possible to construct a sequence using all\r\nnumbers, and a sequence using all numbers except the given one.If each\r\nnumber has \"unique\" bits, then all will be different.\r\n",
    "hint": []
}