{
    "link": "https://codeforces.com//contest/381/problem/B",
    "problemId": "5525",
    "problem_idx": "B",
    "shortId": "381B",
    "contest_number": "381",
    "problem_submissions": {
        "E": [
            5672312,
            5673890,
            5672640,
            5674012,
            5673942,
            5674064,
            5674158,
            5672887,
            5675816,
            6481132,
            5673153,
            5673647,
            5675440,
            5675508,
            5675052,
            5675464,
            5674370,
            5675251,
            5675100
        ],
        "C": [
            5670620,
            5670357,
            5670156,
            5670230,
            5670852,
            5670514,
            5671644,
            5674896,
            5670687,
            5671510,
            5675154,
            5675589,
            5672130,
            5672003,
            5672276,
            5673101,
            5671653,
            5677587,
            5672482,
            5672754
        ],
        "B": [
            5667383,
            5667530,
            5668160,
            5667526,
            5667221,
            5667323,
            5682800,
            5668514,
            5668603,
            5667280,
            5667809,
            5667640,
            5668168,
            5667958,
            5667727,
            5669465,
            5669171,
            5672704,
            5667775,
            5671101
        ],
        "A": [
            5666172,
            5666328,
            5667263,
            5666342,
            5666147,
            5666449,
            5680004,
            5666226,
            5667506,
            5666221,
            5666521,
            5666215,
            5667030,
            5667212,
            5666641,
            5666780,
            5667112,
            5671987,
            5666602,
            5667129
        ],
        "D": [
            5677146,
            5673435,
            6765447
        ]
    },
    "name": "B. Sereja and Stairs",
    "statement": "Sereja loves integer sequences very much. He especially likes\r\nstairs.Sequence ( is the length of the sequence) is stairs if there is\r\nsuch index , that the following condition is met: For example, sequences\r\n[1, 2, 3, 2] and [4, 2] are stairs and sequence [3, 1, 2] isn\u2019t.Sereja\r\nhas cards with numbers. He wants to put some cards on the table in a row\r\nto get a stair sequence. What maximum number of cards can he put on the\r\ntable?\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector> \n#include<cstring>\n#include<string>\n#define mp make_pair\n#define scn second\n#define frs first\n#define pb push_back\n#define NAME \"a\"\n#define fop freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout); \nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef pair<int, int> pi;\nvoid dout() { cerr << endl; }\ntemplate <typename Head, typename... Tail>\nvoid dout(Head H, Tail... T) {\n  cerr << H << ' ';\n  dout(T...);\n}\nint was[100010], n, a[100100];\nint ans[500000];\n\nint main(){\n\t#ifdef LocalHost\n\t\tfop;\n\t#endif\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++i) \n\t\tscanf(\"%d\", &a[i]);\n\tsort(a, a + n);\n\tint l = 100001, r = 100001;\n\tans[l] = a[n - 1];\n\t--l, ++r;\n\tfor (int i = n - 2; i >= 0; --i) {\n\t\tif (ans[l + 1] != a[i])\n\t\t\tans[l] = a[i], --l;\n\t\telse {\n\t\t\tif (ans[r - 1] != a[i])\n\t\t\t\tans[r] = a[i], ++r;\n\t\t}\t\n\t}\n\t\n\tprintf(\"%d\\n\", r - l - 1);\n\tfor (int i = l + 1; i < r; ++i)\n\t\tprintf(\"%d \", ans[i]);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sereja and Stairs.json",
    "editorial_link": "https://codeforces.com//blog/entry/10363",
    "editorial": "Calculate the amount of each number. For all the different numbers\r\nmaximum possible times of use isn\u00e2\u0080\u0099t more than 2 times. For the maximum\r\nis is only 1.\r\n"
}