{
    "link": "https://codeforces.com//contest/2020/problem/C",
    "problemId": "2912454",
    "problem_idx": "C",
    "shortId": "2020C",
    "contest_number": "2020",
    "problem_submissions": {
        "F": [
            283654781,
            283655384,
            283653019,
            284812010,
            284342422
        ],
        "E": [
            283601053,
            283622277,
            283581328,
            283585589,
            283577511,
            283592572,
            283593005,
            283598500,
            283604766,
            283607067,
            283586822,
            283606206,
            283606082,
            283604966,
            283606881,
            283605803,
            284236238,
            284236223,
            283607016,
            283606859,
            283610252,
            283604942
        ],
        "D": [
            283587438,
            283588481,
            283592593,
            283573905,
            283573809,
            283577852,
            283585317,
            283583897,
            283586760,
            283584637,
            283572139,
            283590684,
            283585043,
            283588345,
            283571960,
            283592544,
            283591323,
            283585990,
            283588589,
            283589632
        ],
        "C": [
            283581157,
            283572675,
            283596795,
            283564752,
            283564525,
            283566373,
            283563157,
            283567449,
            283568512,
            283569775,
            283602587,
            283572456,
            283574521,
            283572581,
            283587896,
            283569964,
            283580076,
            283578040,
            283575463,
            283575417
        ],
        "B": [
            283571512,
            283580920,
            283593819,
            283558272,
            283566033,
            283559192,
            283560269,
            283566846,
            283561344,
            283561669,
            283575968,
            283566810,
            283563128,
            283562164,
            283561716,
            283562347,
            283565083,
            283563622,
            283567830,
            283566097
        ],
        "A": [
            283557781,
            283582998,
            283556780,
            283558386,
            283561649,
            283556987,
            283567215,
            283556859,
            283557220,
            283558113,
            283559136,
            283557475,
            283556847,
            283558472,
            283559470,
            283556985,
            283557885,
            283556894,
            283558118
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/134516",
    "editorial": "By P.V.Sekhar SolutionThe first observation is that the expression | - &\r\nis bitwise independent. That is, the combination of a tuple of bits of\r\ncorresponding to the same power of 2 will only affect the bit value of\r\nat that power of 2 only.This is because: We are performing subtraction,\r\nso extra carry won\u00e2\u0080\u0099t be generated to the next power of 2. Any tuple of\r\nbits of , , and corresponding to the same power of 2 won\u00e2\u0080\u0099t result in -1\r\nfor that power of 2. As that would require to be zero and & to be one.\r\nThe former condition requires the bit of to be zero, while the latter\r\nrequires it to be one, which is contradicting. Now, let us consider all\r\n8 cases of bits of a, b, c and the corresponding bit value of d in the\r\nfollowing table:So, clearly, for different bits of and , we can find the\r\nvalue of the corresponding bit in , provided it is not the case when bit\r\nvalues of and are 1,0,0 or 0,1,1, which are not possible; so, in that\r\ncase, the answer is -1.\r\n",
    "name": "C. Bitwise Balancing",
    "statement": "You are given three non-negative integers b, c, and d.Please find a\r\nnon-negative integer a\r\nin [0, 2^{61}] such that (a\r\n, |\r\n, b)-(a\r\n,\r\n&\r\n, c)=d, where | and\r\n& denote the bitwise OR operation and the bitwise AND operation,\r\nrespectively.If such an a exists, print its value. If there is no\r\nsolution, print a single integer -1. If there are multiple solutions,\r\nprint any of them.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;void solve(long long b, long long c, long long d){\tlong long a = 0;\tfor (int i = 0; i < 60; i++)\t{\t\tint bi = (b >> i & 1);\t\tint ci = (c >> i & 1);\t\tif (bi == 0 && ci == 0)\t\t{\t\t\tif (d >> i & 1)\t\t\t{\t\t\t\td -= 1LL << i;\t\t\t\ta += 1LL << i;\t\t\t}\t\t}\t\telse if (bi == 0 && ci == 1)\t\t{\t\t\tif (d >> i & 1)\t\t\t{\t\t\t\tcout << -1 << endl;\t\t\t\treturn;\t\t\t}\t\t}\t\telse if (bi == 1 && ci == 0)\t\t{\t\t\tif (~d >> i & 1)\t\t\t{\t\t\t\tcout << -1 << endl;\t\t\t\treturn;\t\t\t}\t\t}\t\telse if (bi == 1 && ci == 1)\t\t{\t\t\tif (d >> i & 1)\t\t\t{\t\t\t\td -= 1LL << i;\t\t\t}\t\t\telse\t\t\t{\t\t\t\ta += 1LL << i;\t\t\t}\t\t}\t}\tcout << a << endl;\treturn;}int main(){\tint t;\tlong long b, c, d;\tcin >> t;\tfor (int tt = 0; tt < t; tt++)\t{\t\tcin >> b >> c >> d;\t\tsolve(b, c, d);\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "hashing",
        "implementation",
        "math",
        "schedules",
        "ternary search"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Bitwise Balancing.json"
}