{"link": "https://codeforces.com//contest/1806/problem/E", "problemId": "1836410", "problem_idx": "E", "shortId": "1806E", "contest_number": "1806", "problem_submissions": {"F2": [197973089, 198042031, 198041907], "F1": [197947040, 197980157, 198042001, 198041678], "C": [197937230, 197916115, 197928489, 197944944, 197938210, 197926089, 197926689, 197929494, 197933106, 197948564, 197926881, 197937572, 197932222, 197941848, 199801603, 197957943, 197942490, 197930745, 197946610, 197928372, 197924952], "E": [197933006, 197929125, 197915365, 197935988, 197962774, 197948774, 197963264, 197949722, 197943372, 197943303, 197949562, 197950582, 197950806, 240170072, 197967439, 199801822, 199801762, 197952145, 197987791, 197987740, 197972228, 201450127, 197970212, 197959737, 197938806, 197943810], "B": [197912589, 197908884, 197909602, 197911369, 197910208, 197914190, 197910559, 197911156, 197917129, 197921982, 197914483, 197917557, 197912987, 197915302, 197915210, 197914864, 197912863, 197911859, 197911664, 197911113], "A": [197912419, 197906490, 197911639, 197906984, 197907218, 197908571, 197907286, 197906740, 197907744, 197907020, 197928349, 197908011, 197912765, 197906883, 197908367, 197906657, 197906703, 197906672, 197907002, 197906587], "D": [197942295, 197971270, 197966565, 197946069, 197958331, 197952013, 197968711, 197966060, 197967070, 197965611, 197969051, 197967288, 197953250, 199801511, 197971493, 197965795, 197972473, 197971611, 198035510, 198035241]}, "name": "E. Tree Master", "statement": "You are given a tree with n weighted vertices labeled from 1 to n rooted\r\nat vertex 1. The parent of vertex i is p_i and the weight of vertex i is\r\na_i. For convenience, define p_1=0.For two vertices x and y , define\r\nf(x,y) as follows: Initialize\r\nmathrm{ans}=0. While both x and y are not 0:\r\nmathrm{ans}\r\nleftarrow\r\nmathrm{ans}+a_x\r\ncdot a_y; x\r\nleftarrow p_x; y\r\nleftarrow p_y. f(x,y) is the value of\r\nmathrm{ans}. You will process q queries. In the i-th query, you are\r\ngiven two integers x_i and y_i and you need to calculate f(x_i,y_i).^\r\ndagger The depth of vertex v is the number of edges on the unique simple\r\npath from the root of the tree to vertex v.\r\n", "solutions": ["// Problem: E. Tree Master\n// Contest: Codeforces - Codeforces Round 858 (Div. 2)\n// URL: https://codeforces.com/contest/1806/problem/E\n// Memory Limit: 1024 MB\n// Time Limit: 3000 ms\n\n#include<bits/stdc++.h>\n#define poly vector<int>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define mt make_tuple\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e18\n#define mod 998244353\n#define int ll\n#define N 500005\nusing namespace std;\nstruct node\n{\n\tint l,r,id;\n}Q[N];\nint dfn[N],idfn[N],From[N];\nint DFN;\nint ans,val[N][2];\nint lim[2];\nint a[N];\npoly G[N];\nint Ans[N];\nint B=500;\nint n,q;\nvoid dfs(int k,int fa)\n{\n\tdfn[k]=++DFN;\n\tidfn[DFN]=k;\n\tfor (auto u:G[k]) dfs(u,k);\n\tidfn[++DFN]=-k;\n}\nvoid Del(int x,int y)\n{\n\t// cout<<\"Del \"<<x<<\" \"<<y<<'\\n';\u3001\n\tif (lim[y^1]>=lim[y])\n\t{\n\t\tans-=val[lim[y]][y]*val[lim[y]][y^1];\n\t}\n\tlim[y]--;\n}\nvoid Ins(int x,int y)\n{\n\tlim[y]++;\n\tval[lim[y]][y]=a[x];\n\t// cout<<\"Ins \"<<x<<\" \"<<y<<'\\n';\n\tif (lim[y^1]>=lim[y])\n\t{\n\t\tans+=val[lim[y]][y]*val[lim[y]][y^1];\n\t}\n}\nvoid ins(int x,int y)\n{\n\tif (idfn[x]<0) Del(-idfn[x],y);\n\telse Ins(idfn[x],y);\n}\nvoid del(int x,int y)\n{\n\tif (idfn[x]>0) Del(idfn[x],y);\n\telse Ins(-idfn[x],y);\n}\nvoid BellaKira()\n{\n\tcin>>n>>q;\n\tfor (int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor (int i=2;i<=n;i++)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\tG[x].push_back(i);\n\t}\n\tdfs(1,0);\n\tfor (int i=1;i<=2*n;i++)\n\t\tFrom[i]=(i-1)/B+1;\n\tfor (int i=1;i<=q;i++)\n\t{\n\t\tcin>>Q[i].l>>Q[i].r;\n\t\tQ[i].id=i;\n\t\tif (dfn[Q[i].l]>dfn[Q[i].r])\n\t\t{\n\t\t\tswap(Q[i].r,Q[i].r);\n\t\t}\n\t\tQ[i].l=dfn[Q[i].l],Q[i].r=dfn[Q[i].r];\n\t}\n\tsort(Q+1,Q+q+1,[&](node x,node y)\n\t{\n\t\treturn (From[x.l]^From[y.l])\n\t\t?From[x.l]<From[y.l]:((From[x.l]&1)?x.r<y.r:x.r>y.r);\n\t});\n\tint l=0,r=0;\n\tfor (int i=1;i<=q;i++)\n\t{\n\t\twhile (r<Q[i].r)\n\t\t{\n\t\t\tins(++r,1);\n\t\t}\n\t\twhile (l<Q[i].l)\n\t\t{\n\t\t\tins(++l,0);\n\t\t}\n\t\twhile (r>Q[i].r)\n\t\t{\n\t\t\tdel(r--,1);\n\t\t}\n\t\twhile(l>Q[i].l)\n\t\t{\n\t\t\tdel(l--,0);\n\t\t}\n\t\tAns[Q[i].id]=ans;\n\t}\n\tfor (int i=1;i<=q;i++) cout<<Ans[i]<<'\\n';\n\t\n\t\t\t\n\t\t\n\t\t\n\t\n}\nsigned main()\n{\n\tIOS;cin.tie(0); \n\tint T=1;\n\twhile (T--)\n\t{\n\t\tBellaKira();\n\t}\n}\n"], "input": "", "output": "", "tags": ["brute force", "data structures", "dfs and similar", "trees"], "dificulty": "2200", "interactive": false}