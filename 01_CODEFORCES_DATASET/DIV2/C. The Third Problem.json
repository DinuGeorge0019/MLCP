{
    "link": "https://codeforces.com//contest/1699/problem/C",
    "problemId": "1450609",
    "problem_idx": "C",
    "shortId": "1699C",
    "contest_number": "1699",
    "problem_submissions": {
        "E": [
            162793364,
            162775692,
            162793126,
            162793513,
            162776568,
            162806794,
            163072479,
            162904221,
            162802356,
            163208563
        ],
        "D": [
            162777822,
            162787041,
            162785884,
            162779113,
            162783159,
            162788510,
            162781676,
            162786062,
            162780446,
            162782104,
            162783172,
            162786827,
            162785330,
            162784706,
            162851711,
            162787598,
            162793458,
            162789076
        ],
        "C": [
            162770178,
            162790195,
            162774066,
            162764166,
            162787790,
            162799603,
            162771580,
            162766383,
            162773288,
            162773209,
            162772203,
            162768894,
            162771772,
            162772012,
            162769394,
            162775382,
            162765676,
            162769675
        ],
        "A": [
            162765690,
            162760464,
            162756544,
            162756228,
            162790360,
            162759372,
            162757442,
            162756339,
            162756415,
            162759006,
            162765012,
            162756289,
            162759551,
            162756446,
            162756312,
            162762960,
            162756449,
            162756887
        ],
        "B": [
            162765501,
            162770833,
            162765076,
            162770497,
            162789467,
            162781290,
            162762444,
            162760246,
            162769636,
            162765813,
            162765204,
            162760315,
            162764383,
            162763818,
            162761397,
            162778301,
            162759501,
            162763396
        ]
    },
    "name": "C. The Third Problem",
    "statement": "You are given a permutation a_1,a_2,\r\nldots,a_n of integers from 0 to n - 1. Your task is to find how many\r\npermutations b_1,b_2,\r\nldots,b_n are to permutation a. Two permutations a and b of size n are\r\nconsidered if for all intervals [l,r] (1\r\nle l\r\nle r\r\nle n), the following condition is satisfied:\r\noperatorname{MEX}([a_l,a_{l+1},\r\nldots,a_r])=\r\noperatorname{MEX}([b_l,b_{l+1},\r\nldots,b_r]), where the\r\noperatorname{MEX} of a collection of integers c_1,c_2,\r\nldots,c_k is defined as the smallest non-negative integer x which does\r\nnot occur in collection c. For example,\r\noperatorname{MEX}([1,2,3,4,5])=0, and\r\noperatorname{MEX}([0,1,2,4,5])=3.Since the total number of such\r\npermutations can be very large, you will have to print its remainder\r\nmodulo 10^9+7.In this problem, a permutation of size n is an array\r\nconsisting of n distinct integers from 0 to n-1 in arbitrary order. For\r\nexample, [1,0,2,4,3] is a permutation, while [0,1,1] is not, since 1\r\nappears twice in the array. [0,1,3] is also not a permutation, since n=3\r\nand there is a 3 in the array.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define mod 1000000007\n#define int long long\nusing namespace std;\nint pos[100005];\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0); \n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tcin >> n;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tpos[x]=i;\n\t\t}\n\t\tint ans=1,L=n+1,R=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(pos[i]<L||pos[i]>R)\n\t\t\t{\n\t\t\t\tR=max(R,pos[i]);\n\t\t\t\tL=min(L,pos[i]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans=ans*(R-L+1-i)%mod;\n\t\t\t}\n\t\t}\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. The Third Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/108560",
    "editorial": "SolutionLet be the position of in permutation .Since , the only possible\r\nposition of in permutation is exactly . Without loss of generality, we\r\nwill assume that . For every interval (), must be at least . For every\r\nother interval, cannot exceed . The only position for which satisfies\r\nboth of these constraints is exactly .Let\u00e2\u0080\u0099s consider the current\r\ninterval as being .If , we can say that, for every interval (), must be\r\nat least . Similarly, for every other interval, cannot exceed . Both of\r\nthese constraints are only met if occurs in permutation on some position\r\n. Since only positions are currently occupied in , the total number of\r\nsimilar permutations will be multiplied by .Otherwise, can be placed in\r\npermutation only on . Additionally, the current interval will be\r\n\"extended\" to include , resuting in either or .After processing and ,\r\nthe algorithm for processing is very similar to the one presented\r\nearlier. If , the answer gets multiplied by . Otherwise, the current\r\ninterval is extended to include .Time complexity per testcase:\r\n"
}