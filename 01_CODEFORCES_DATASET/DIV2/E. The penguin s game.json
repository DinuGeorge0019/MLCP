{
    "link": "https://codeforces.com//contest/835/problem/E",
    "problemId": "116350",
    "problem_idx": "E",
    "shortId": "835E",
    "contest_number": "835",
    "problem_submissions": {
        "D": [
            29372323,
            29063139,
            29065486,
            29070406,
            29071972,
            29065004,
            29066901,
            29072296,
            29065942,
            29065319,
            29066211,
            29066423,
            29075382,
            29067277,
            29065713,
            29073319,
            29071645,
            29059686
        ],
        "F": [
            29082635,
            29069949,
            29070481,
            29064958,
            29071364,
            29065236,
            29070446,
            29064892,
            29066866,
            29074301,
            29064205,
            29065410
        ],
        "E": [
            29073719,
            29074800,
            29065648,
            29071559,
            29118023,
            29074000,
            29070288,
            29074317,
            29074268,
            29072935,
            29075101,
            29066717
        ],
        "C": [
            29058240,
            29062830,
            29058737,
            29063335,
            29056792,
            29060472,
            29066295,
            29062534,
            29061132,
            29058860,
            29063690,
            29065693,
            29064050,
            29057954,
            29069770,
            29060762,
            29065225,
            29063124,
            29064200,
            29068485
        ],
        "B": [
            29056834,
            29060334,
            29054848,
            29057576,
            29053644,
            29056903,
            29057508,
            29057673,
            29056074,
            29075847,
            29059991,
            29061445,
            29056492,
            29073726,
            29059387,
            29100665,
            29056240,
            29055742,
            29057065,
            29080041,
            29054530
        ],
        "A": [
            29052216,
            29052753,
            29051567,
            29054419,
            29051774,
            29054501,
            29055498,
            29051558,
            29052865,
            29055926,
            29056006,
            29052148,
            29051882,
            29054461,
            29085374,
            29052881,
            29053437,
            29053701,
            29066515,
            29051895
        ]
    },
    "name": "E. The penguin s game",
    "statement": "Penguin Xoriy came up with a new game recently. He has icicles numbered\r\nfrom to . Each icicle has a temperature an integer from to . of these\r\nicicles are special: their temperature is , while a temperature of all\r\nthe others is . You have to find those special icicles. You can choose a\r\nsubset of icicles and ask the penguin what is the bitwise exclusive OR\r\n() of the temperatures of the icicles in this subset. Note that you\r\ncan’t ask more than questions.You are to find the special icicles.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\n#include<utility>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nint a[1010];\nint cnt;\nint n,x,y;\nint ask()\n{\n\tint i;\n\tprintf(\"? %d \",cnt);\n\tfor(i=1;i<=cnt;i++)\n\t\tprintf(\"%d \",a[i]);\n\tprintf(\"\\n\");\n\tfflush(stdout);\n\tint s;\n\tscanf(\"%d\",&s);\n\treturn s;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&x,&y);\n\tint m=0;\n\tint s,p;\n\tint i,j;\n\tint num;\n\tint ans1=0,ans2=0;\n\tfor(i=1;i<=15;i++)\n\t\tif(n&(1<<(i-1)))\n\t\t\tm=i;\n\tfor(i=m;i>=1;i--)\n\t{\n\t\tcnt=0;\n\t\tnum=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tif(j&(1<<(i-1)))\n\t\t\t{\n\t\t\t\ta[++cnt]=j;\n\t\t\t\tnum^=x;\n\t\t\t}\n\t\tif(cnt)\n\t\t{\n\t\t\ts=ask();\n\t\t\tif(s!=num)\n\t\t\t{\n\t\t\t\tp=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tans2|=1<<(p-1);\n\tfor(i=p-1;i>=1;i--)\n\t{\n\t\tcnt=0;\n\t\tnum=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tif(j&(1<<(i-1))&&j&(1<<(p-1)))\n\t\t\t{\n\t\t\t\ta[++cnt]=j;\n\t\t\t\tnum^=x;\n\t\t\t}\n\t\tif(cnt)\n\t\t{\n\t\t\ts=ask();\n\t\t\tif(s!=num)\n\t\t\t\tans2|=1<<(i-1);\n\t\t}\n\t}\n\tfor(i=p-1;i>=1;i--)\n\t{\n\t\tcnt=0;\n\t\tnum=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tif(j&(1<<(i-1))&&!(j&(1<<(p-1))))\n\t\t\t{\n\t\t\t\ta[++cnt]=j;\n\t\t\t\tnum^=x;\n\t\t\t}\n\t\tif(cnt)\n\t\t{\n\t\t\ts=ask();\n\t\t\tif(s!=num)\n\t\t\t\tans1|=1<<(i-1);\n\t\t}\n\t}\n\tfor(i=p+1;i<=m;i++)\n\t{\n\t\tcnt=0;\n\t\tnum=0;\n\t\tfor(j=1;j<=n;j++)\n\t\t\tif(j&(1<<(p-1))&&j&(1<<(i-1)))\n\t\t\t{\n\t\t\t\ta[++cnt]=j;\n\t\t\t\tnum^=x;\n\t\t\t}\n\t\tif(cnt)\n\t\t{\n\t\t\ts=ask();\n\t\t\tif(s!=num)\n\t\t\t{\n\t\t\t\tans1|=1<<(i-1);\n\t\t\t\tans2|=1<<(i-1);\n\t\t\t}\n\t\t}\n\t}\n\tif(ans1>ans2)\n\t\tswap(ans1,ans2);\n\tprintf(\"! %d %d\\n\",ans1,ans2); \n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. The penguin s game.json",
    "editorial_link": "https://codeforces.com//blog/entry/53588",
    "editorial": "The solution can be separated into several parts.Consider the following\r\ncases: Subsetâs size is even, the number of special icicles in it is\r\neven. Then the answer to such question is . Subsetâs size is even, the\r\nnumber of special icicles in it is odd. Then the answer to such question\r\nis . Subsetâs size is odd, the number of special icicles in it is even.\r\nThen the answer to such question is . Subsetâs size is odd, the number\r\nof special icicles in it is odd. Then the answer to such question is .\r\nand , so the numbers , , , are pairwise distinct. Therefore, we can find\r\nthe parity of the number of special icicles on the given subset using 1\r\nquestion.Suppose we have icicles, and one of them is special. Then you\r\ncan find it using questions.The algorithm is to use binary search over\r\nthe minimum prefix that contains the special icicle.Each integer can be\r\nwritten using no more than bits. Iterate over the bits from to . Ask a\r\nquestion about the icicles that have in their numbers in the fixed bit.\r\nAfter that, we can determine if the numbers of the special icicles\r\ndiffer in this bit. Really, the bits differ if this subsetâs size is\r\nodd, and donât differ otherwise.Obviously, we will find at least one\r\nbit, where their numbers differ. Let is the subset of the icicles that\r\nhave in this bit, and is the complement set. Let is the size of the\r\nsmallest from these subsets. Then . Letâs solve the problem for the only\r\none special icicle for the smallest of these subsets.Then itâs easy to\r\nget the number of the other icicle: we know the number of the first\r\nicicle and we know in which bits the numbers differ and in which\r\ndonât.This solution uses 19 question. It can be proven that in the given\r\nconstraints you canât solve this problem in less than 19 questions.\r\n",
    "hint": []
}