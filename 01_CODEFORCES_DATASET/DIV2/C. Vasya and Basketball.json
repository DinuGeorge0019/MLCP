{"link": "https://codeforces.com//contest/493/problem/C", "problemId": "18744", "problem_idx": "C", "shortId": "493C", "contest_number": "493", "problem_submissions": {"D": [8962830, 8955808, 8962303, 8964364, 8960751, 8962225, 8960844, 8962975, 8967369, 8959886, 8960455, 8962054, 8964729, 8965627, 8960251, 8964827, 8965332], "C": [8959569, 8958613, 8959499, 8962173, 8964601, 8955815, 8960873, 8959250, 8961260, 8963716, 8955238, 8958453, 8960180, 8956138, 8963664, 8959424, 8955895, 8957865], "B": [8956674, 8960162, 8957216, 8957307, 8961901, 8964843, 8957724, 8955497, 8959210, 8958869, 8958459, 8960046, 8957270, 8962744, 8958746, 8956007, 8956632, 8962594], "A": [8954713, 8961765, 8955431, 8957905, 8957496, 8961409, 8956078, 8954483, 8954560, 8956624, 8982686, 8954617, 8955736, 8959987, 8955670, 8968662, 8954641, 8955068], "E": [8978921, 8981489, 8968299, 8997367]}, "name": "C. Vasya and Basketball", "statement": "Vasya follows a basketball game and marks the distances from which each\r\nteam makes a throw. He knows that each successful throw has value of\r\neither 2 or 3 points. A throw is worth 2 points if the distance it was\r\nmade from doesn\u2019t exceed some value of meters, and a throw is worth 3\r\npoints if the distance is larger than meters, where is some\r\ninteger.Vasya would like the advantage of the points scored by the first\r\nteam (the points of the first team minus the points of the second team)\r\nto be maximum. For that he can mentally choose the value of . Help him\r\nto do that.\r\n", "solutions": ["#include<iostream>\n#include<string.h>\n#include<vector>\n#include<algorithm>\n#include<iomanip>\n#include<map>\nusing namespace std;\n\nstruct Node\n{\n    int team;\n    int dist;\n};\n\nbool cmp(const Node &a, const Node &b)\n{\n    return a.dist < b.dist;\n}\n\nNode node[1000006];\n\nint scorea, scoreb;\nint cura, curb;\n\nint main()\n{\n    int n, m;\n    cin>>n;\n    for(int i = 0; i < n; ++i)\n    {\n        node[i].team = 1;\n        cin>>node[i].dist;\n    }\n    \n    cin>>m;\n    for(int i = 0; i < m; ++i)\n    {\n        node[i+n].team = 2;\n        cin>>node[i+n].dist;\n    }\n    \n    cura = scorea = n*2;\n    curb = scoreb = m*2;\n    n+=m;\n    \n    sort(node, node+n, cmp);\n    \n    for(int i = n-1; i >= 0;)\n    {       \n        do\n        {\n            if(node[i].team == 1)\n                cura++;\n            else\n                curb++;\n            i--;\n        }\n        while(i >= 0 && node[i].dist == node[i+1].dist);\n        \n        if((cura - curb > scorea - scoreb) || (cura - curb == scorea - scoreb && cura > scorea))\n        {\n            scorea = cura;\n            scoreb = curb;\n        }\n        \n    }\n    \n    cout<<scorea<<\":\"<<scoreb<<endl;\n}"], "input": "", "output": "", "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "dificulty": "1600", "interactive": false}