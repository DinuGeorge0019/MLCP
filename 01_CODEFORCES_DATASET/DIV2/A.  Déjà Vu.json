{"link": "https://codeforces.com//contest/1504/problem/A", "problemId": "945463", "problem_idx": "A", "shortId": "1504A", "contest_number": "1504", "problem_submissions": {"F": [111935045], "E": [111919537, 111908818, 111915476, 111922174, 111919354, 111912277, 111926667, 111933626, 111923368, 111927972, 111922895, 111929837, 111918921, 111930705, 111931199, 111927831, 111933167, 111936231, 111927723], "D": [111903831, 111898035, 111906622, 111906753, 111900341, 111920726, 111905882, 111889202, 111908288, 111906401, 111899954, 111909419, 111914558, 111906091, 111907496, 111910516, 111906791, 111899242, 111913796], "C": [111894612, 111888998, 111897074, 111891045, 111894960, 111894678, 111893967, 111898677, 111898779, 111894676, 111891710, 111887088, 111899272, 111894062, 111898183, 111901135, 111896065, 111907589, 111899883], "B": [111886123, 111877937, 111882311, 111876691, 111883851, 111877415, 111875995, 111877870, 111879515, 111885430, 111904265, 111879266, 111878112, 111883768, 111877486, 111882773, 111887115, 111878394, 111891154], "A": [111877837, 111872895, 111873662, 111872585, 111875452, 111883020, 111872169, 111872988, 111873021, 111873751, 111907400, 111872188, 111872713, 111872621, 111882814, 111875730, 111872954, 111872953, 111883462]}, "name": "A.  D\u00e9j\u00e0 Vu", "statement": "A palindrome is a string that reads the same backward as forward. For\r\nexample, the strings \"\", \"\", \"\", and \"\" are palindromes, but \"\" and \"\"\r\nare not. You hate palindromes because they give you d j vu.There is a\r\nstring s. You insert character \u201d somewhere in s. If it is possible to\r\ncreate a string that is a palindrome, you should find one example.\r\nOtherwise, you should report that it is impossible.For example, suppose\r\ns= \"\". By inserting an \u201d, you can create \"\", \"\", \"\", \"\", or \"\". However\r\n\"\" is a palindrome, so you must output one of the other options.\r\n", "solutions": ["#include<bits/stdc++.h>\n\n#define fo(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef double db;\n\nint get(){\n    char ch;\n    while(ch=getchar(),(ch<'0'||ch>'9')&&ch!='-');\n    if (ch=='-'){\n        int s=0;\n        while(ch=getchar(),ch>='0'&&ch<='9')s=s*10+ch-'0';\n        return -s;\n    }\n    int s=ch-'0';\n    while(ch=getchar(),ch>='0'&&ch<='9')s=s*10+ch-'0';\n    return s;\n}\n\nconst int N = 3e5+5;\n\nchar s[N];\nint n,T;\n\nint main(){\n    for(T=get();T;T--){\n        scanf(\"%s\",s+1);\n        n=strlen(s+1);\n        int pos=-1;\n        fo(i,1,n)\n        if (s[i]!='a'){\n            pos=i;\n            break;\n        }\n        if (pos==-1){\n            printf(\"NO\\n\");\n        }\n        else{\n            printf(\"YES\\n\");\n            if (pos*2<=n){\n                int p=n-(pos-1)+1;\n                fo(i,1,p-1)putchar(s[i]);\n                putchar('a');\n                fo(i,p,n)putchar(s[i]);\n                putchar('\\n');\n            }\n            else{\n                int p=n-pos;\n                fo(i,1,p)putchar(s[i]);\n                putchar('a');\n                fo(i,p+1,n)putchar(s[i]);\n                putchar('\\n');\n            }\n        }\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "strings"], "dificulty": "800", "interactive": false}