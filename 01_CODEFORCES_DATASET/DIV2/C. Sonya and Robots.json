{
    "link": "https://codeforces.com//contest/1004/problem/C",
    "problemId": "195379",
    "problem_idx": "C",
    "shortId": "1004C",
    "contest_number": "1004",
    "problem_submissions": {
        "D": [
            40003970,
            40002114,
            40006190,
            40065552,
            40018246,
            40318920,
            39996575,
            39998916,
            39999974,
            40000249,
            40000299
        ],
        "E": [
            40002484,
            40005119,
            40002116,
            39999883,
            39999448,
            40001703,
            40001918,
            40001172,
            40000650,
            40002637,
            40008283,
            40003263,
            40002856,
            40003509,
            40018331,
            40018260,
            40018197,
            40017976,
            40019825
        ],
        "F": [
            40001175,
            40176983,
            40353564,
            40007502,
            40003848
        ],
        "C": [
            39997306,
            39993584,
            39996423,
            39991994,
            39992348,
            39992627,
            39992610,
            39994247,
            39996536,
            39995648,
            39993270,
            39993344,
            39994504,
            39995916,
            39993496,
            39993165,
            39993772,
            39993747,
            39997604
        ],
        "B": [
            39994165,
            39991785,
            39998844,
            39994058,
            39994368,
            39991334,
            39991006,
            39993012,
            39992174,
            39992714,
            39991428,
            39991267,
            39992520,
            39993434,
            39991814,
            39991327,
            39991886,
            39991449,
            39996736
        ],
        "A": [
            39992007,
            39990327,
            39997320,
            39990328,
            39990314,
            39990627,
            39990358,
            39990498,
            39990516,
            39991224,
            39990460,
            39990569,
            39990938,
            39991677,
            39990538,
            39990378,
            39990592,
            39990535,
            39995891
        ]
    },
    "name": "C. Sonya and Robots",
    "statement": "Since Sonya is interested in robotics too, she decided to construct\r\nrobots that will read and recognize numbers.Sonya has drawn n numbers in\r\na row, a_i is located in the i-th position. She also has put a robot at\r\neach end of the row (to the left of the first number and to the right of\r\nthe last number). Sonya will give a number to each robot (they can be\r\neither same or different) and run them. When a robot is running, it is\r\nmoving toward to another robot, reading numbers in the row. When a robot\r\nis reading a number that is equal to the number that was given to that\r\nrobot, it will turn off and stay in the same position.Sonya does not\r\nwant robots to break, so she will give such numbers that robots will\r\nstop before they meet. That is, the girl wants them to stop at different\r\npositions so that the first robot is to the left of the second one.For\r\nexample, if the numbers [1, 5, 4, 1, 3] are written, and Sonya gives the\r\nnumber 1 to the first robot and the number 4 to the second one, the\r\nfirst robot will stop in the 1-st position while the second one in the\r\n3-rd position. In that case, robots will not meet each other. As a\r\nresult, robots will not be broken. But if Sonya gives the number 4 to\r\nthe first robot and the number 5 to the second one, they will meet since\r\nthe first robot will stop in the 3-rd position while the second one is\r\nin the 2-nd position.Sonya understands that it does not make sense to\r\ngive a number that is not written in the row because a robot will not\r\nfind this number and will meet the other robot.Sonya is now interested\r\nin finding the number of different pairs that she can give to robots so\r\nthat they will not meet. In other words, she wants to know the number of\r\npairs (p, q), where she will give p to the first robot and q to the\r\nsecond one. Pairs (p_i, q_i) and (p_j, q_j) are different if p_i\r\nneq p_j or q_i\r\nneq q_j.Unfortunately, Sonya is busy fixing robots that broke after a\r\nfailed launch. That is why she is asking you to find the number of pairs\r\nthat she can give to robots so that they will not meet.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int, int> PA;\ntypedef long long LL;\n\n#define MAXN 200003\n#define MODP 1000000007\n#define FST first\n#define SCD second\n\n\nLL qpow(LL x, int y) {\n\tLL res = 1;\n\tfor (;y>0;y>>=1, x = x*x%MODP) {\n\t\tif (y&1) res = (res*x)%MODP;\n\t}\n\treturn res;\n}\n\nint q[MAXN], f[MAXN];\nbool v[MAXN];\n\nint main() {\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\", \"r\", stdin);\n\t#endif\n\tint Tn = 1;\n\t// scanf(\"%d\", &Tn);\n\tfor (int ci=1;ci<=Tn;++ci) {\n\t\tint n;\n\t\tcin>>n;\n\t\tfor (int i=1;i<=n;++i) {\n\t\t\tscanf(\"%d\", q+i);\n\t\t}\n\t\tmemset(v,0,sizeof(v));\n\t\tf[n+1] = 0;\n\t\tfor (int i=n;i>1;--i) {\n\t\t\tf[i] = f[i+1];\n\t\t\tif (v[q[i]]) continue;\n\t\t\tv[q[i]] = true;\n\t\t\t++f[i];\n\t\t}\n\t\tmemset(v,0,sizeof(v));\n\t\tLL ans = 0;\n\t\tfor (int i=1;i<n;++i) {\n\t\t\tif (v[q[i]]) continue;\n\t\t\tv[q[i]] = true;\n\t\t\tans+=f[i+1];\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Sonya and Robots.json",
    "editorial_link": "https://codeforces.com/blog/entry/60443",
    "editorial": "Letâs assume that our left robot is located in the position. The robot\r\ncould be there only if the value that is written there did not occur\r\nearlier. The number of possible locations of the second robot is equal\r\nto the number of distinct numbers on the segment . Let be the number of\r\ndifferent numbers on . Letâs find these number from right to left. If\r\noccurs the first time , otherwise, .\r\n",
    "hint": []
}