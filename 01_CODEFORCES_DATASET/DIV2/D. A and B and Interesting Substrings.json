{
    "link": "https://codeforces.com//contest/519/problem/D",
    "problemId": "23226",
    "problem_idx": "D",
    "shortId": "519D",
    "contest_number": "519",
    "problem_submissions": {
        "E": [
            10073402,
            10073826,
            10071435,
            10075682,
            10073508,
            10076499,
            10076691,
            10077686,
            10078395,
            10078558,
            10077889,
            10071597,
            10078230,
            10079725,
            10079205,
            10080058,
            10080571,
            10081897,
            10077792,
            10077601
        ],
        "B": [
            10068822,
            10066495,
            10066094,
            10071522,
            10065688,
            10067197,
            10068098,
            10065513,
            10067032,
            10066771,
            10065927,
            10073256,
            10064342,
            10066337,
            10068191,
            10068245,
            10065978,
            10064399,
            10070061,
            10067255
        ],
        "A": [
            10067760,
            10065092,
            10070229,
            10067607,
            10065441,
            10066194,
            10064523,
            10065142,
            10067859,
            10064294,
            10074313,
            10075152,
            10065080,
            10075511,
            10064659,
            10064877,
            10064769,
            10067836,
            10065055
        ],
        "D": [
            10065946,
            10069869,
            10068018,
            10068104,
            10075209,
            10071298,
            10070153,
            10071171,
            10068423,
            10070885,
            10071374,
            10076292,
            10070706,
            10072961,
            10071572,
            10075243,
            10072547,
            10071425,
            10078247,
            10079828
        ],
        "C": [
            10064224,
            10067438,
            10064240,
            10065614,
            10064567,
            10068407,
            10064386,
            10066890,
            10064235,
            10064221,
            10067480,
            10072542,
            10066908,
            10064218,
            10069397,
            10066796,
            10066694,
            10065658,
            10065115,
            10068337
        ]
    },
    "name": "D. A and B and Interesting Substrings",
    "statement": "After several years of doing sports programming and solving many\r\nproblems that require calculating all sorts of abstract objects, A and B\r\nalso developed rather peculiar tastes.A likes lowercase letters of the\r\nLatin alphabet. He has assigned to each letter a number that shows how\r\nmuch he likes that letter (he has assigned negative numbers to the\r\nletters he dislikes). B likes substrings. He especially likes the ones\r\nthat start and end with the same letter (their length must exceed\r\none).Also, A and B have a string . Now they are trying to find out how\r\nmany substrings of a string are interesting to B (that is, starts and\r\nends with the same letter and its length is larger than one), and also\r\nthe sum of values of all letters (assigned by A), is equal to\r\nzero.Naturally, A and B have quickly found the number of substrings that\r\nare interesting to them. Can you do it?\r\n",
    "solutions": [
        "#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<set>\n#include<algorithm>\n#include<iomanip>\n#include<bitset>\nusing namespace std;\n\nconst int N = 100100;\n\nint val[27];\nchar a[N];\nint n;\nmap<long long, int> h[26];\n\nint main() {\n    int i;\n   // freopen(\"ttt\", \"r\", stdin);\n\n    for(i = 0; i < 26; ++i) {\n        cin >> val[i];\n    }\n    cin >> (a + 1);\n        n = strlen(a + 1);\n\n    long long sc = 0, rez = 0;\n\n    for(i = 1; i <= n; ++i) {\n        a[i] -= 'a';\n        sc += val[a[i]];\n\n        rez += h[a[i]][sc - val[a[i]]];\n        h[a[i]][sc]++;\n    }\n\n    cout << rez;\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "dp",
        "two pointers"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. A and B and Interesting Substrings.json",
    "editorial_link": "https://codeforces.com/blog/entry/16687",
    "editorial": "In this problem you were asked to find number of substrings of given string, such that each substring starts and finishes with one and the same letter and sum of weight of letters of that substring without first and last letter is zero.\n\nSolution: Let's denote sum[i] as sum of weights of first i letters. Create 26 map?<?longlong,?int?>?'s, 1 for each letter. Suppose we are on position number i and current character's map is m. Then add m[sum[i?-?1]] to the answer and add sum[i] to the m."
}