{"link": "https://codeforces.com//contest/711/problem/C", "problemId": "69434", "problem_idx": "C", "shortId": "711C", "contest_number": "711", "problem_submissions": {"E": [20243389, 20243503, 20251107, 20247122, 20236128, 20244311, 20247031, 20249581, 20251290, 20251110, 20236252, 20252814, 20251720, 20253127, 20249558, 20253691, 20251603, 20254289, 20255257, 20254984], "D": [20236748, 20238445, 20241120, 20241449, 20243957, 20248074, 20235096, 20241386, 20243419, 20245769, 20252016, 20241009, 20246037, 20248033, 20253018, 20249456, 20247107, 20247154, 20250386, 20243861], "C": [20233774, 20236081, 20235214, 20238143, 20247473, 20235216, 20238803, 20236811, 20238264, 20238615, 20243230, 20238055, 20240001, 20236172, 20233634, 20240235, 20250548, 20242121, 20238810, 20252383], "B": [20231663, 20231286, 20231641, 20233400, 20241564, 20239107, 20249116, 20232416, 20233691, 20233328, 20237744, 20233188, 20232782, 20232671, 20234921, 20232432, 20236746, 20235044, 20234855, 20236166], "A": [20229146, 20229063, 20229191, 20229690, 20306899, 20229217, 20232219, 20240668, 20229251, 20229508, 20229028, 20230826, 20229961, 20229487, 20229092, 20231432, 20229019, 20229332, 20231409, 20230327, 20229746]}, "name": "C. Coloring Trees", "statement": "ZS the Coder and Chris the Baboon has arrived at Udayland! They walked\r\nin the park where trees grow. They decided to be naughty and color the\r\ntrees in the park. The trees are numbered with integers from to from\r\nleft to right.Initially, tree has color . ZS the Coder and Chris the\r\nBaboon recognizes only different colors, so , where means that tree is\r\n.ZS the Coder and Chris the Baboon decides to color only the uncolored\r\ntrees, i.e. the trees with . They can color each of them them in any of\r\nthe colors from to . Coloring the -th tree with color requires exactly\r\nlitres of paint.The two friends define the of a coloring of the trees as\r\nthe number of contiguous groups (each group contains some subsegment of\r\ntrees) you can split all the trees into so that each group contains\r\ntrees of the same color. For example, if the colors of the trees from\r\nleft to right are , the beauty of the coloring is , since we can\r\npartition the trees into contiguous groups of the same color : . ZS the\r\nCoder and Chris the Baboon wants to color all uncolored trees so that\r\nthe beauty of the coloring is . They need your help to determine the\r\nminimum amount of paint (in litres) needed to finish the job.Please note\r\nthat the friends can\u2019t color the trees that are already colored.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <set>\n#include <map>\n#include <ctime>\n#include <cassert>\n#include <cmath>\n#include <algorithm>\n#include <utility>\n\n#define f first\n#define s second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\n\nconst int maxn = (int)1e6;\nconst int inf = (int)1e9;\nconst int mod = (int)1e9 + 7;\nconst ll INF = (ll)1e18;\nconst double eps = 1e-9;\n\nint n, m, k;\nint c[1010];\nint p[111][111];\nll dp[111][111][111];\n\nll calc(int last, int ind, int rest) {\n\tif (rest < 0) return INF;\n\tif (ind == n) {\n\t\tif (rest == 0) return 0;\n\t\treturn INF;\n\t}\n\tll &res = dp[last][ind][rest];\n\tif (res != -1) return res;\n\tres = INF;\n\tif (c[ind] > 0) {\n\t\tif (c[ind] != last) return res = calc(c[ind], ind + 1, rest - 1);\n\t\telse return res = calc(last, ind + 1, rest);\n\t} else {\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tif (i == last) res = min(res, p[ind][i - 1] + calc(i, ind + 1, rest));\n\t\t\telse res = min(res, p[ind][i - 1] + calc(i, ind + 1, rest - 1));\n\t\t}\n\t\treturn res;\n\t}\n}\n\nint main()\n{\n\n\tcin >> n >> m >> k;\n\tfor (int i = 0; i < n; i++) cin >> c[i];\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < m; j++) cin >> p[i][j];\n\t}\n\t\n\tmemset(dp, -1, sizeof dp);\n\t\n\tll ans = calc(0, 0, k);\n\t\n\tif (ans == INF) ans = -1;\n\tcout << ans << endl;\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "1700", "interactive": false}