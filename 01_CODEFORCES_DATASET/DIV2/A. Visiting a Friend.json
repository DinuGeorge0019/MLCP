{
    "link": "https://codeforces.com//contest/902/problem/A",
    "problemId": "139717",
    "problem_idx": "A",
    "shortId": "902A",
    "contest_number": "902",
    "problem_submissions": {
        "E": [
            33432769,
            33432692,
            33431724,
            33432880,
            33433143,
            33425800,
            33479713,
            33434507
        ],
        "C": [
            33418857,
            33421216,
            33418092,
            33421721,
            33425094,
            33420634,
            33423702,
            33423018,
            33420334,
            33420303,
            33419836,
            33430662,
            33420269,
            33422420,
            33422328,
            33423548,
            33420458,
            33425360
        ],
        "B": [
            33414393,
            33416891,
            33413564,
            33416982,
            33418778,
            33415144,
            33420150,
            33416950,
            33420947,
            33415271,
            33415194,
            33431642,
            33414521,
            33417866,
            33416627,
            33417427,
            33416186,
            33419760
        ],
        "A": [
            33412979,
            33413298,
            33412683,
            33414789,
            33412988,
            33412835,
            33415972,
            33412736,
            33422119,
            33413143,
            33413263,
            33432089,
            33412738,
            33412994,
            33413252,
            33413078,
            33413621,
            33413563
        ],
        "D": [
            33425081,
            33422286,
            33426122,
            33429053,
            33429776,
            33430153,
            33430663,
            33428168,
            33429601,
            33428402,
            33429733
        ]
    },
    "name": "A. Visiting a Friend",
    "statement": "Pig is visiting a friend.Pig’s house is located at point , and his\r\nfriend’s house is located at point on an axis.Pig can use teleports to\r\nmove along the axis.To use a teleport, Pig should come to a certain\r\npoint (where the teleport is located) and choose where to move: for each\r\nteleport there is the rightmost point it can move Pig to, this point is\r\nknown as the limit of the teleport.Formally, a teleport located at point\r\nwith limit can move Pig from point to any point within the segment ,\r\nincluding the bounds. Determine if Pig can visit the friend using\r\nteleports only, or he should use his car.\r\n",
    "solutions": [
        "#include \"bits/stdc++.h\"\n//#include \"ext/pb_ds/tree_policy.hpp\"\n//#include \"ext/pb_ds/assoc_container.hpp\"\n#define PB push_back\n#define PF push_front\n#define LB lower_bound\n#define UB upper_bound\n#define fr(x) freopen(x,\"r\",stdin)\n#define fw(x) freopen(x,\"w\",stdout)\n#define iout(x) printf(\"%d\\n\",x)\n#define lout(x) printf(\"%lld\\n\",x)\n#define REP(x,l,u) for(ll x = l;x<u;x++)\n#define RREP(x,l,u) for(ll x = l;x>=u;x--)\n#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())\n#define mst(x,a) memset(x,a,sizeof(x))\n#define all(a) a.begin(),a.end()\n#define PII pair<int,int>\n#define PLL pair<ll,ll>\n#define MP make_pair\n#define sqr(x) ((x)*(x))\n#define lowbit(x) (x&(-x))\n#define lson (ind<<1)\n#define rson (ind<<1|1)\n#define se second\n#define fi first\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl;\n#define sz(x) ((int)x.size())\n#define EX0 exit(0);\n\ntypedef  long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ld;\nusing namespace std;\nconst int block_size = 320;\ntypedef complex<ll> point;\nconst ll mod = 1e9+7;\nconst ll inf = 1e9+7;\nconst ld eps = 1e-9;\nconst db PI = atan(1)*4;\ntemplate<typename T>\ninline int sign(const T&a) {\n    if(a<0)return -1;\n    if(a>0)return 1;\n    return 0;\n}\n\n\ntemplate<typename T> inline void in(T &x) {\n    x = 0;\n    T f = 1;\n    char ch = getchar();\n    while (!isdigit(ch)) {\n        if (ch == '-') f = -1;\n        ch = getchar();\n    }\n    while (isdigit(ch))  {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    x *= f;\n}\n\nll twop(int x) {\n    return 1LL<<x;\n}\n\ntemplate<typename A,typename B > inline void in(A&x,B&y) {\n    in(x);\n    in(y);\n}\ntemplate<typename A,typename B,typename C>inline void in(A&x,B&y,C&z) {\n    in(x);\n    in(y);\n    in(z);\n}\ntemplate<typename A,typename B,typename C,typename D> inline void in(A&x,B&y,C&z,D&d) {\n    in(x);\n    in(y);\n    in(z);\n    in(d);\n}\n\n\n\n\ntemplate <class T>\nvoid upd(T&a,T b) {\n    a = max(a,b);\n}\n\nint n,m;\nint dp[1001];\nint main() {\n    cin>>n>>m;\n    vector<PII>v;\n    REP(i,0,n){\n        int a,b;\n        cin>>a>>b;\n        v.PB(MP(a,b));\n    }\n    dp[0] = 1;\n    REP(i,0,n){\n        REP(j,0,n){\n            if(dp[v[j].fi]){\n                REP(k,v[j].fi,v[j].se+1){\n                    dp[k] = 1;\n                }\n            }\n        }\n    }\n    if(dp[m])cout<<\"YES\";else cout<<\"NO\";\n    return 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Visiting a Friend.json",
    "editorial_link": "https://codeforces.com//blog/entry/56478",
    "editorial": "Note that if we can get to some point x, then we can get to all points\r\n<= x. So we can support the rightmost point where we can get to. Then if\r\nthis point can use the teleport (if this point is to the right of the\r\nteleport), weâll try to move it (If the limit of the teleport is to the\r\nright of the current point, then move it there). Then in the end we need\r\nto check that the rightmost point where we can get is equal to M.\r\n",
    "hint": []
}