{
    "link": "https://codeforces.com//contest/519/problem/C",
    "problemId": "23225",
    "problem_idx": "C",
    "shortId": "519C",
    "contest_number": "519",
    "problem_submissions": {
        "E": [
            10073402,
            10073826,
            10071435,
            10075682,
            10073508,
            10076499,
            10076691,
            10077686,
            10078395,
            10078558,
            10077889,
            10071597,
            10078230,
            10079725,
            10079205,
            10080058,
            10080571,
            10081897,
            10077792,
            10077601
        ],
        "B": [
            10068822,
            10066495,
            10066094,
            10071522,
            10065688,
            10067197,
            10068098,
            10065513,
            10067032,
            10066771,
            10065927,
            10073256,
            10064342,
            10066337,
            10068191,
            10068245,
            10065978,
            10064399,
            10070061,
            10067255
        ],
        "A": [
            10067760,
            10065092,
            10070229,
            10067607,
            10065441,
            10066194,
            10064523,
            10065142,
            10067859,
            10064294,
            10074313,
            10075152,
            10065080,
            10075511,
            10064659,
            10064877,
            10064769,
            10067836,
            10065055
        ],
        "D": [
            10065946,
            10069869,
            10068018,
            10068104,
            10075209,
            10071298,
            10070153,
            10071171,
            10068423,
            10070885,
            10071374,
            10076292,
            10070706,
            10072961,
            10071572,
            10075243,
            10072547,
            10071425,
            10078247,
            10079828
        ],
        "C": [
            10064224,
            10067438,
            10064240,
            10065614,
            10064567,
            10068407,
            10064386,
            10066890,
            10064235,
            10064221,
            10067480,
            10072542,
            10066908,
            10064218,
            10069397,
            10066796,
            10066694,
            10065658,
            10065115,
            10068337
        ]
    },
    "name": "C. A and B and Team Training",
    "statement": "An important part of preparing for a competition is sharing programming\r\nknowledge from the experienced members to those who are just beginning\r\nto deal with the contests. Therefore, during the next team training A\r\ndecided to make teams so that newbies are solving problems together with\r\nexperienced participants.A believes that the optimal team of three\r\npeople should consist of one experienced participant and two newbies.\r\nThus, each experienced participant can share the experience with a large\r\nnumber of people.However, B believes that the optimal team should have\r\ntwo experienced members plus one newbie. Thus, each newbie can gain more\r\nknowledge and experience.As a result, A and B have decided that all the\r\nteams during the training session should belong to one of the two types\r\ndescribed above. Furthermore, they agree that the total number of teams\r\nshould be as much as possible.There are experienced members and newbies\r\non the training session. Can you calculate what maximum number of teams\r\ncan be formed?\r\n",
    "solutions": [
        "#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<set>\n#include<algorithm>\n#include<iomanip>\n#include<bitset>\nusing namespace std;\nint n, m;\n\nint main() {\n    //freopen(\"ttt\", \"r\", stdin);\n\n    cin >> n >> m;\n\n    int rez = 0;\n\n    while(n > 0 && m > 0 && n + m >= 3) {\n        ++rez;\n        if(n < m) {\n              --n;\n            m -= 2;\n        }\n        else {\n            --m;\n        n-= 2;\n        }\n    }\n\n    cout << rez;\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. A and B and Team Training.json",
    "editorial_link": "https://codeforces.com/blog/entry/16687",
    "editorial": "In this problem we should split n experienced participants and m newbies into teams.\n\nSolution: Let's denote number teams with 2 experienced partisipants and 1 new participant as type1 and teams with 1 experienced participant and 2 new participants as type2. Let's fix number of teams of type1 and denote it as i. Their amount is not grater than m. Then number of teams of type2 is min(m?-?2?*?i,?n?-?i). Check all possible i' and update answer.",
    "hint": []
}