{
    "link": "https://codeforces.com//contest/1978/problem/C",
    "problemId": "2700157",
    "problem_idx": "C",
    "shortId": "1978C",
    "contest_number": "1978",
    "problem_submissions": {
        "F": [
            266015924,
            266018575,
            266024125,
            266033740,
            266028083,
            266027710,
            266028585,
            266024095,
            266036440,
            266033576,
            266029665,
            266036412,
            266041436,
            266041844,
            266041967,
            266882750,
            266351108,
            266110975,
            266088026,
            266087920,
            266023524,
            266033401,
            266035217,
            266036624
        ],
        "E": [
            266000524,
            266001801,
            266009793,
            266004105,
            266012414,
            266016063,
            266008012,
            266015249,
            266006615,
            266014173,
            266017400,
            266020084,
            266012817,
            266011255,
            266015571,
            266032339,
            266012543,
            266023085,
            266019516
        ],
        "D": [
            265990967,
            265994660,
            265992821,
            265990827,
            266000702,
            266003653,
            265990714,
            266008157,
            265992101,
            265998993,
            266001887,
            266000172,
            266003373,
            265994305,
            266006281,
            266003246,
            266004799,
            266008989
        ],
        "C": [
            265985379,
            265985354,
            265985444,
            265986444,
            265986598,
            265993956,
            265998241,
            265999992,
            265986085,
            265988153,
            265994441,
            265990408,
            265984296,
            265987378,
            265999490,
            265992981,
            265996795,
            266000530
        ],
        "B": [
            265978142,
            265979065,
            265980009,
            265978941,
            265978322,
            265980965,
            265981356,
            265979492,
            265980232,
            265978357,
            265984882,
            265979643,
            265979302,
            265980231,
            265980858,
            265979553,
            265982486,
            265984445
        ],
        "A": [
            265974530,
            265975393,
            265974727,
            265975783,
            265974454,
            265975693,
            265975843,
            265974877,
            265974450,
            265974422,
            265984603,
            265974317,
            265974305,
            265975484,
            265974419,
            265975133,
            265977387,
            265984150
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130527",
    "editorial": "Notice that if is odd, then there is no solution. Also notice that the\r\nmaximum is achieved with the permutation , so if , then there is also no\r\nsolution. It is claimed that for any other , a solution exists.Let\u00e2\u0080\u0099s\r\nconsider what happens if we swap and in the identity permutation. The\r\nManhattan value for such a permutation will be equal to . Then any even\r\nfrom to can be achieved. If , let\u00e2\u0080\u0099s swap and elements. Notice that we\r\nhave reduced the problem to a smaller size of , just now the indices\r\nstart from instead of . Now we can do exactly the same as with the\r\nidentity permutation, i.e., swap with some ( and ). The value of the\r\npermutation will change by , so any even from to can be achieved. Notice\r\nthat if we continue to do this further, in the end we will get the\r\npermutation , and we have proved that any even from to is achievable.\r\nHence, it is clear how to reconstruct the permutation itself in time.\r\n",
    "name": "C. Manhattan Permutations",
    "statement": "Let\u2019s call the of a permutation^{\r\ndagger} p the value of the expression |p_1 - 1| + |p_2 - 2| +\r\nldots + |p_n - n|.For example, for the permutation [1, 2, 3], the\r\nManhattan value is |1 - 1| + |2 - 2| + |3 - 3| = 0, and for the\r\npermutation [3, 1, 2], the Manhattan value is |3 - 1| + |1 - 2| + |2 -\r\n3| = 2 + 1 + 1 = 4.You are given integers n and k. Find a permutation p\r\nof length n such that its Manhattan value is equal to k, or determine\r\nthat no such permutation exists.^{\r\ndagger}A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;#define ll long long#define MP make_pairmt19937 rnd(time(0));const int MAXN=2e5+5;ll n,k,a[MAXN];void solve(){\tcin>>n>>k;\tfor(int i=1;i<=n;i++) a[i]=i;\tif(k&1){cout<<\"No\\n\";return;}\tint l=1,r=n;\twhile(l<=r){\t\tif(k>=2*(r-l)) swap(a[l],a[r]),k-=2*(r-l),l++,r--;\t\telse r--;\t}\tif(k){\t\tcout<<\"No\\n\";\t}else{\t\tcout<<\"Yes\\n\";\t\tfor(int i=1;i<=n;i++) cout<<a[i]<<\" \\n\"[i==n];\t}}int main(){\tios::sync_with_stdio(false);\t// freopen(\"Otomachi_Una.in\",\"r\",stdin);\t// freopen(\"Otomachi_Una.out\",\"w\",stdout);\tint _;cin>>_;\twhile(_--) solve();\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Manhattan Permutations.json"
}