{"link": "https://codeforces.com//contest/215/problem/C", "problemId": "1594", "problem_idx": "C", "shortId": "215C", "contest_number": "215", "problem_submissions": {"E": [1988426, 1988413, 1989426, 1987138, 1988487, 1984276], "D": [1986997, 1985615, 1985958, 1986118, 1984659, 1984383, 1985972, 1986126, 1986307, 1984613, 1988881, 1988871, 1989546, 1987659, 1983883], "C": [1986856, 1984272, 1983953, 1984682, 1985985, 1986019, 1984687, 1984757, 1985135, 1984027, 1984854, 1984906, 1984541, 1984950, 1985064, 1985527], "B": [1982023, 1982547, 1982033, 1981911, 1982756, 1983055, 1982575, 1982679, 1982354, 1982420, 1982182, 1982502, 1981865, 1982128, 1983569, 1982637, 1982851, 1982669], "A": [1980998, 1981260, 1981033, 1981084, 1981265, 1981202, 1981211, 1981385, 1981158, 1981203, 1981153, 1981321, 1980992, 1981069, 1982692, 1981261, 1980948, 1981122, 1981152]}, "name": "C. Crosses", "statement": "There is a board with a grid consisting of rows and columns, the rows\r\nare numbered from from top to bottom and the columns are numbered from\r\nfrom left to right. In this grid we will denote the cell that lies on\r\nrow number and column number as .A group of six numbers , where , is a ,\r\nand there is a set of cells that are assigned to it. Cell belongs to\r\nthis set if of two conditions are fulfilled: and and Your task is to\r\nfind the number of different groups of six numbers, that determine the\r\ncrosses of an area equal to , which are placed entirely on the grid. The\r\ncross is placed entirely on the grid, if any of its cells is in the\r\nrange of the grid (that is for each cell of the cross holds). The area\r\nof the cross is the number of cells it has.\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,s;\nint main()\n{\n    while(~scanf(\"%d %d %d\",&n,&m,&s))\n    {\n        long long ans=0;\n        for(int a=0;a<n;a++)\n        for(int b=0;b<m;b++)\n        for(int c=0;c<n;c++)\n        {\n            int cao=(2*a+1)*(2*b+1)-(2*min(a,c)+1)*(2*b+1);\n            cao=s-cao;\n            if(cao>0&&cao%(2*c+1)==0)\n            {\n                int d=cao/(2*c+1);\n                d--;\n                if(d>=0&&d%2==0)\n                {\n                    d/=2;\n                    if(b<=d)\n                    {\n                        int xr=n-max(a,c);\n                        int xl=1+max(a,c);\n                        int yr=m-max(b,d);\n                        int yl=1+max(b,d);\n                        if(xr>=xl&&yr>=yl)\n                        ans+=(xr-xl+1)*(yr-yl+1);\n                    }\n                }\n            }\n            cao=(2*a+1)*(2*b+1);\n            if(c==min(a,c))\n            {\n                if(cao==s)\n                {\n                        int xr=n-max(a,c);\n                        int xl=1+max(a,c);\n                        int yr=m-b;\n                        int yl=1+b;\n                        if(xr>=xl&&yr>=yl)\n                        ans+=(long long)(xr-xl+1)*(yr-yl+1)*b;\n                }\n            }\n            else\n            {\n                cao=s-cao;\n                if(cao>=0&&cao%(2*c-2*a)==0)\n                {\n                    cao/=2*(c-a);\n                    cao--;\n                    if(cao>=0&&cao%2==0)\n                    {\n                        int d=cao/2;\n                        if(d<b)\n                        {\n                            int xr=n-max(a,c);\n                            int xl=1+max(a,c);\n                            int yr=m-max(b,d);\n                            int yl=1+max(b,d);\n                            if(xr>=xl&&yr>=yl)\n                            ans+=(xr-xl+1)*(yr-yl+1);\n                        }\n                    }\n                }\n            }\n        }\n        printf(\"%I64d\\n\",ans);\n    }\n}\n"], "input": "", "output": "", "tags": ["brute force", "implementation"], "dificulty": "2100", "interactive": false}