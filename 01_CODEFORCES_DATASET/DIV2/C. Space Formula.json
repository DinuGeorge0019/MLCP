{"link": "https://codeforces.com//contest/1046/problem/C", "problemId": "223475", "problem_idx": "C", "shortId": "1046C", "contest_number": "1046", "problem_submissions": {"B": [43252358, 43255928], "A": [43250309, 43254410, 43250987], "H": [43247639, 43245779, 43247215, 43247770], "F": [43246486, 43244046, 43246380, 43248077], "C": [43245566, 43247893, 43247771, 43244424, 43243585], "I": [43253744, 43258105, 43258173], "G": [43269050]}, "name": "C. Space Formula", "statement": "Formula 1 officials decided to introduce new competition. Cars are\r\nreplaced by space ships and number of points awarded can differ per\r\nrace.Given the current ranking in the competition and points\r\ndistribution for the next race, your task is to calculate the best\r\npossible ranking for a given astronaut after the next race. It\u2019s\r\nguaranteed that given astronaut will have unique number of points before\r\nthe race.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 2e5 + 100;\n\npair <int, int> a[N];\nint points[N];\nint n, k;\n\ninline bool ok (int x) {\n\tpair <int, int> b[N];\n\tmemcpy(b, a, sizeof(a));\n\t\n\tb[k].first += points[1];\n\n\tfor (int i = 1, j = 2; j <= x; ++j, ++i) {\n\t\tif(i == k)\n\t\t\t++i;\n\t\tb[i].first += points[j];\n\t}\n\t\n\tfor (int j = x + 1, i = n; j <= n; ++j, --i) {\n\t\tif (i == k)\n\t\t\t--i;\n\t\tb[i].first += points[j];\n\t}\n\t\n\tsort(b + 1, b + n + 1);\n\treverse(b + 1, b + n + 1);\n/*\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcerr << b[i].first << \" \";\n\t}\n\tcerr << \"\\n\";\n*/\n\tint val;\n\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (b[i].second == k)\n\t\t\tval = b[i].first;\n\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (b[i].first == val)\n\t\t\treturn i <= x;\t\n}\n\nint main() {\n    #ifdef LOCAL\n    freopen(\"in\", \"r\", stdin);\n    #endif\n\n    ios_base :: sync_with_stdio(0);\n    cin.tie(0);\n    \n    cin >> n >> k;\n    \n\tfor (int i = 1; i <= n; ++i) {\n\t\tint x;\n\t\tcin >> x;\n\t\ta[i] = make_pair(x, i);\n\t}\t\n\n\tfor (int i = 1, j = n; i <= n; ++i) {\n\t\tcin >> points[i];\n\t}\n\n\tint l = 0, r = n;\n\n\twhile (r - l > 1) {\n\t\tint mid = (r + l) / 2;\n\t\tif (ok(mid))\n\t\t\tr = mid;\n\t\telse\n\t\t\tl = mid;\n\t}\n\t\n\tcout << r;\n\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1400", "interactive": false}