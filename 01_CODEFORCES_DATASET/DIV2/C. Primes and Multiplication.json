{"link": "https://codeforces.com//contest/1228/problem/C", "problemId": "424244", "problem_idx": "C", "shortId": "1228C", "contest_number": "1228", "problem_submissions": {"F": [61496806, 61502870, 61502190, 61505436, 61526774, 61501386, 61506794, 61506003, 61507242, 61528062, 61506930, 61504933, 61527679, 61758392, 61506804, 61501659], "E": [61487066, 61484839, 61491424, 61489793, 61526757, 61494082, 61491501, 61493504, 61494383, 61528054, 61491524, 61495860, 61488344, 61491222, 61486950, 61487675, 61498567, 61492377, 61492698, 61509475, 61488264], "D": [61485310, 61482745, 61489582, 61486586, 61526744, 61490366, 61487311, 61489384, 61491690, 61528041, 61498727, 61505643, 61485067, 61484265, 61490334, 61491347, 61491538, 61486214, 61487124, 61487752, 61482893], "C": [61480399, 61479345, 61481687, 61481376, 61526733, 61486187, 61481654, 61482779, 61486226, 61528029, 61481914, 61486289, 61481778, 61480281, 61475855, 61480938, 61484833, 61479319, 61482763, 61482555, 61495805], "B": [61476242, 61476828, 61478048, 61477189, 61526720, 61483135, 61479399, 61477633, 61477664, 61528022, 61483663, 61478266, 61477452, 61477008, 61479768, 61476788, 61509875, 61476696, 61478410, 61478919, 61476259], "A": [61473188, 61476420, 61473176, 61473720, 61526708, 61477230, 61473216, 61473745, 61473523, 61528006, 61479593, 61475038, 61472935, 61473261, 61477228, 61473405, 61476821, 61473215, 61474472, 61475483, 61474687]}, "name": "C. Primes and Multiplication", "statement": "Let\u2019s introduce some definitions that will be needed later.Let prime(x)\r\nbe the set of prime divisors of x. For example, prime(140) =\r\n{ 2, 5, 7\r\n}, prime(169) =\r\n{ 13\r\n}.Let g(x, p) be the maximum possible integer p^k where k is an integer\r\nsuch that x is divisible by p^k. For example: g(45, 3) = 9 (45 is\r\ndivisible by 3^2=9 but not divisible by 3^3=27), g(63, 7) = 7 (63 is\r\ndivisible by 7^1=7 but not divisible by 7^2=49). Let f(x, y) be the\r\nproduct of g(y, p) for all p in prime(x). For example: f(30, 70) = g(70,\r\n2)\r\ncdot g(70, 3)\r\ncdot g(70, 5) = 2^1\r\ncdot 3^0\r\ncdot 5^1 = 10, f(525, 63) = g(63, 3)\r\ncdot g(63, 5)\r\ncdot g(63, 7) = 3^2\r\ncdot 5^0\r\ncdot 7^1 = 63. You have integers x and n. Calculate f(x, 1)\r\ncdot f(x, 2)\r\ncdot\r\nldots\r\ncdot f(x, n)\r\nbmod{(10^{9} + 7)}.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cctype>\n\n#include <algorithm>\n#include <random>\n#include <bitset>\n#include <queue>\n#include <functional>\n#include <set>\n#include <map>\n#include <vector>\n#include <chrono>\n#include <iostream>\n#include <limits>\n#include <numeric>\n\n#define LOG(FMT...) fprintf(stderr, FMT)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int P = 1000000007;\n\nint mpow(int x, ll k, int p = P) {\n  int ret = 1;\n  while (k) {\n    if (k & 1)\n      ret = ret * (ll)x % p;\n    x = x * (ll)x % p;\n    k >>= 1;\n  }\n  return ret;\n}\n\nint main() {\n#ifdef LBT\n  freopen(\"test.in\", \"r\", stdin);\n  int nol_cl = clock();\n#endif\n\n  int x;\n  ll n;\n\n  scanf(\"%d%lld\", &x, &n);\n  int y = x;\n  int ans = 1;\n  function<void(int, int)> gao = [&](int p, int pk) {\n    ll v = 0, nn = n;\n    while (nn) {\n      v += (nn /= p);\n    }\n    ans = ans * (ll)mpow(p, v) % P;\n  };\n  for (int v = 2; v * v <= y; ++v)\n    if (y % v == 0) {\n      int pk = 1;\n      while (y % v == 0) {\n        y /= v;\n        pk *= v;\n      }\n      gao(v, pk);\n    }\n  if (y != 1)\n    gao(y, y);\n  printf(\"%d\\n\", ans);\n\n#ifdef LBT\n  LOG(\"Time: %dms\\n\", int ((clock()\n          -nol_cl) / (double)CLOCKS_PER_SEC * 1000));\n#endif\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["math", "number theory"], "dificulty": "1700", "interactive": false}