{"link": "https://codeforces.com//contest/339/problem/E", "problemId": "3416", "problem_idx": "E", "shortId": "339E", "contest_number": "339", "problem_submissions": {"E": [4350288, 4350692, 4352701], "D": [4347551, 4348122, 4348269, 4346682, 4347753, 4347777, 4346418, 4348110, 4345524, 4347567, 4346466, 4344100, 4349422, 4345943, 4341414, 4344586, 4346272, 4344696, 4346389, 4346350], "C": [4346199, 4345560, 4345573, 4349756, 4349561, 4350535, 4346192, 4343883, 4344992, 4344549, 4345429, 4347032, 4344235, 4347272, 4346342, 4344286, 4343699, 4344636, 4349580], "B": [4342829, 4340936, 4341294, 4343582, 4343548, 4342304, 4341644, 4342625, 4341093, 4341762, 4341301, 4342171, 4342988, 4342700, 4343276, 4342478, 4342137, 4345190, 4341771, 4347102], "A": [4340544, 4340115, 4340169, 4342061, 4342695, 4341025, 4340145, 4341252, 4340204, 4340351, 4340621, 4342784, 4340896, 4340831, 4341165, 4340658, 4345500, 4340568, 4346745]}, "name": "E. Three Swaps", "statement": "Xenia the horse breeder has horses that stand in a row. Each horse has\r\nits own unique number. Initially, the -th left horse has number . That\r\nis, the sequence of numbers of horses in a row looks as follows (from\r\nleft to right): 1, 2, 3, , .Xenia trains horses before the performance.\r\nDuring the practice sessions, she consistently gives them commands. Each\r\ncommand is a pair of numbers . The command means that the horses that\r\nare on the -th, -th, -th, , -th places from the left must be rearranged.\r\nThe horses that initially stand on the -th and -th places will swap. The\r\nhorses on the -th and -th places will swap. The horses on the -th and\r\n-th places will swap and so on. In other words, the horses that were on\r\nthe segment change their order to the reverse one.For example, if Xenia\r\ncommanded , and the sequence of numbers of horses before the command\r\nlooked as (2, 1, 3, 4, 5, 6), then after the command the sequence will\r\nbe (2, 5, 4, 3, 1, 6).We know that during the practice Xenia gave at\r\nmost three commands of the described form. You have got the final\r\nsequence of numbers of horses by the end of the practice. Find what\r\ncommands Xenia gave during the practice. Note that you do not need to\r\nminimize the number of commands in the solution, find any valid sequence\r\nof at most three commands.\r\n", "solutions": ["#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N=10005;\n\nstruct node {\n\tint s, t;\n\tvoid init(int a, int b) {\n\t\ts=a, t=b;\n\t}\n} ans[10];\nint A[10][N], n;\n\nint checkL(int dep) {\n\tif(A[dep][1]!=1) return 1;\n\tfor(int i=2; i<=n; i++) if(A[dep][i]!=A[dep][i-1]+1) return i;\n\treturn -1;\n}\n\nint checkR(int dep) {\n\tif(A[dep][n]!=n) return n;\n\tfor(int i=n-1; i>=1; i--) if(A[dep][i]!=A[dep][i+1]-1) return i;\n\treturn -1;\n}\n\nint findpos(int dep, int val) {\n\tfor(int i=1; i<=n; i++) if(A[dep][i]==val) return i;\n}\n\nbool DFS(int dep) {\n\tif(dep==3) if(checkL(dep)!=-1) return false;\n\telse {\n\t\tprintf(\"%d\\n\", dep);\n\t\tfor(int i=dep-1; i>=0; i--) printf(\"%d %d\\n\", ans[i].s, ans[i].t);\n\t\treturn true;\n\t}\n\n\tint L=checkL(dep), R=checkR(dep);\n\tif(L==-1 || R==-1) {\n\t\tprintf(\"%d\\n\", dep);\n\t\tfor(int i=dep-1; i>=0; i--) printf(\"%d %d\\n\", ans[i].s, ans[i].t);\n\t\treturn true;\n\t}\n\tfor(int i=1; i<=n; i++) A[dep+1][i]=A[dep][i];\n\tint Lpos=findpos(dep+1, L), Rpos=findpos(dep+1, R);\n\n\treverse(A[dep+1]+L, A[dep+1]+Lpos+1);\n\tans[dep].init(L, Lpos);\n\tif(DFS(dep+1)) return true;\n\treverse(A[dep+1]+L, A[dep+1]+Lpos+1);\n\n\tans[dep].init(Rpos, R);\n\treverse(A[dep+1]+Rpos, A[dep+1]+R+1);\n\tif(DFS(dep+1)) return true;\n\treverse(A[dep+1]+Rpos, A[dep+1]+R+1);\n\n\treturn false;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i=1; i<=n; i++) scanf(\"%d\", &A[0][i]);\n\tDFS(0);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "dfs and similar", "greedy"], "dificulty": "2700", "interactive": false}