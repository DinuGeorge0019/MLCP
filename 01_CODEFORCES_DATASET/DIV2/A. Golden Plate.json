{"link": "https://codeforces.com//contest/1072/problem/A", "problemId": "240869", "problem_idx": "A", "shortId": "1072A", "contest_number": "1072", "problem_submissions": {"E": [44644399, 44650543, 44734034], "D": [44632605, 44632447, 44632175, 44637652, 44635628, 44637006, 44633885, 151267020, 44638964, 44635045, 44638115, 44637529, 44637972, 44638624, 44636915, 44640412, 44642212, 44637605, 44638663, 44639668, 44680075, 44642131], "C": [44629439, 44628133, 44629672, 44628147, 44630750, 44631571, 44630332, 44631317, 44630520, 44628174, 44630246, 44632020, 44630576, 44632772, 44630621, 44630463, 44631591, 44634217, 44633521, 44631795], "B": [44628286, 44626280, 44627642, 44625837, 44627706, 44628961, 44626684, 44627105, 44628089, 44633570, 44627458, 44628288, 44627756, 44630738, 44627790, 44627828, 44631462, 44628114, 44627946, 44628620], "A": [44624145, 44624123, 44661469, 44624742, 44624134, 44625024, 44624914, 44624126, 44624358, 44624143, 44630174, 44624249, 44625453, 44624220, 44625169, 44624173, 44624200, 44631557, 44625268, 44624520, 44624259], "F": [44725275]}, "name": "A. Golden Plate", "statement": "You have a plate and you want to add some gilding to it. The plate is a\r\nrectangle that we split into w\r\ntimes h cells. There should be k gilded rings, the first one should go\r\nalong the edge of the plate, the second one 2 cells away from the edge\r\nand so on. Each ring has a width of 1 cell. Formally, the i-th of these\r\nrings should consist of all bordering cells on the inner rectangle of\r\nsize (w - 4(i - 1))\r\ntimes(h - 4(i - 1)). Your task is to compute the number of cells to be\r\ngilded.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 5;\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntemplate <typename T> void chkmax(T &x, T y) {x = max(x, y); }\ntemplate <typename T> void chkmin(T &x, T y) {x = min(x, y); } \ntemplate <typename T> void read(T &x) {\n\tx = 0; int f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -f;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + c - '0';\n\tx *= f;\n}\ntemplate <typename T> void write(T x) {\n\tif (x < 0) x = -x, putchar('-');\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\ntemplate <typename T> void writeln(T x) {\n\twrite(x);\n\tputs(\"\");\n}\nint main() {\n\tint n, m, k;\n\tread(n), read(m), read(k);\n\tint ans = 0;\n\tfor (int i = 1; i <= k; i++) {\n\t\tint x = n - 4 * (i - 1);\n\t\tint y = m - 4 * (i - 1);\n\t\tans += x * 2 + y * 2 - 4;\n\t}\n\twriteln(ans);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["implementation", "math"], "dificulty": "800", "interactive": false}