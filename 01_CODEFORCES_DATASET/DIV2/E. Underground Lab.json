{"link": "https://codeforces.com//contest/782/problem/E", "problemId": "96959", "problem_idx": "E", "shortId": "782E", "contest_number": "782", "problem_submissions": {"B": [25267905, 25250113, 25247221, 25250057, 25249960, 25260592, 25250810, 25250250, 25247987, 25248996, 25252120, 25252630, 25250336, 25258914, 25255792, 25254407, 25252511, 25252408, 25251554, 25264621, 25253624], "E": [25257921, 25262484, 25258744, 25260005, 25259671, 25259859, 25263675, 25263558, 25261219, 25263312, 25264852, 25262648, 25263111, 25263112, 25265502, 25264818, 25264138, 25263813, 25263236, 25499887, 25266724, 25260260, 25256767], "D": [25255317, 25254040, 25254587, 25256934, 25261275, 25263628, 25259016, 25257085, 25258676, 25258895, 25257929, 25259738, 25253164, 25260236, 25257532, 25259424, 25260675, 25259499, 25261948, 25267588], "C": [25252879, 25249891, 25251779, 25251734, 25260562, 25253017, 25252465, 25250777, 25252022, 25254042, 25255189, 25253477, 25255602, 25254511, 25256655, 25255363, 25254268, 25254004, 25250050, 25250430], "A": [25247630, 25246175, 25246521, 25247338, 25259975, 25247530, 25246345, 25246130, 25246627, 25246669, 25247634, 25246833, 25257300, 25246231, 25249989, 25247211, 25250337, 25247505, 25500110, 25251276, 25246111], "F": [25264803, 25787036, 25277978]}, "name": "E. Underground Lab", "statement": "The evil Bumbershoot corporation produces clones for gruesome\r\nexperiments in a vast underground lab. On one occasion, the corp cloned\r\na boy Andryusha who was smarter than his comrades. Immediately Andryusha\r\nunderstood that something fishy was going on there. He rallied fellow\r\nclones to go on a feud against the evil corp, and they set out to find\r\nan exit from the lab. The corp had to reduce to destroy the lab\r\ncomplex.The lab can be pictured as a connected graph with vertices and\r\nedges. clones of Andryusha start looking for an exit in some of the\r\nvertices. Each clone can traverse any edge once per second. Any number\r\nof clones are allowed to be at any vertex simultaneously. Each clone is\r\nallowed to stop looking at any time moment, but he must look at his\r\nstarting vertex at least. The exit can be located at any vertex of the\r\nlab, hence each vertex must be visited by at least one clone.Each clone\r\ncan visit at most vertices before the lab explodes.Your task is to\r\nchoose starting vertices and searching routes for the clones. Each route\r\ncan have at most vertices.\r\n", "solutions": ["#include<cstdio>\n#include<vector>\n\nint n, m, k, f[200005], mc, l;\nstd::vector<int> v[200005], ans[200005];\n\nint find(int x) {\n\tif (f[x] == x) return x;\n\treturn f[x] = find(f[x]);\n}\n\nvoid check(int x) {\n\tif (ans[l].size() < mc) ans[l].push_back(x);\n\telse ans[++l].push_back(x);\n}\n\nvoid dfs(int x, int y) {\n\tcheck(x);\n\tfor (int i = 0; i < v[x].size(); i++) if (v[x][i] != y) dfs(v[x][i], x);\n\tif (y) check(y);\n}\n\nint main() {\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tmc = (2 * n - 1) / k + 1;\n\tfor (int i = 1; i <= n; i++) f[i] = i;\n\tfor (int i = 0; i < m ; i++) {\n\t\tint x, y;\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tif (find(x) == find(y)) continue;\n\t\tf[find(x)] = y;\n\t\tv[x].push_back(y);\n\t\tv[y].push_back(x);\n\t}\n\tdfs(1, 0);\n\tfor (int i = 0; i < k; i++) {\n\t\tif (ans[i].size() == 0) printf(\"1 1\\n\");\n\t\telse {\n\t\t\tprintf(\"%d\", ans[i].size());\n\t\t\tfor (int j = 0; j < ans[i].size(); j++) printf(\" %d\", ans[i][j]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "dificulty": "2100", "interactive": false}