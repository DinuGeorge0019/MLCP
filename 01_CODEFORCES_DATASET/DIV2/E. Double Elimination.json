{
    "link": "https://codeforces.com//contest/1315/problem/E",
    "problemId": "547046",
    "problem_idx": "E",
    "shortId": "1315E",
    "contest_number": "1315",
    "problem_submissions": {
        "E": [
            71717972,
            71722121,
            71723928,
            71729230,
            71974152,
            72008868,
            72008805
        ],
        "B": [
            71712835,
            71705609,
            71705328,
            71705471,
            71703387,
            71704005,
            71704127,
            71704155,
            71704023,
            71705610,
            71706151,
            71706053,
            71706193,
            71704779,
            71704406,
            71705432,
            71705176,
            71707656,
            71704939
        ],
        "A": [
            71711680,
            71703327,
            71702875,
            71702517,
            71702293,
            71702355,
            71702415,
            71702704,
            71703705,
            71703020,
            71702906,
            71703383,
            71703894,
            71702683,
            71702739,
            71702868,
            71702438,
            71703823,
            71702490
        ],
        "D": [
            71705281,
            71711782,
            71710689,
            71709097,
            71706684,
            71712045,
            71709367,
            71709685,
            71709559,
            71709699,
            71712591,
            71718977,
            71710420,
            71711447,
            71712487,
            71711123,
            71711486,
            71711635,
            71712415
        ],
        "C": [
            71703583,
            71708130,
            71708191,
            71706924,
            71704462,
            71705381,
            71706364,
            71706633,
            71705353,
            71706839,
            71709056,
            71708876,
            71707615,
            71706977,
            71706123,
            71708378,
            71708224,
            71705852,
            71707083
        ],
        "F": [
            71735158,
            71754645,
            71744524,
            71744441
        ]
    },
    "name": "E. Double Elimination",
    "statement": "The biggest event of the year Cota 2 world championship \"The\r\nInnernational\" is right around the corner. 2^n teams will compete in a\r\ndouble-elimination format (please, carefully read problem statement even\r\nif you know what is it) to identify the champion. Teams are numbered\r\nfrom 1 to 2^n and will play games one-on-one. All teams start in the\r\nupper bracket.All upper bracket matches will be held played between\r\nteams that haven’t lost any games yet. Teams are split into games by\r\nteam numbers. Game winner advances in the next round of upper bracket,\r\nlosers drop into the lower bracket.Lower bracket starts with 2^{n-1}\r\nteams that lost the first upper bracket game. Each lower bracket round\r\nconsists of two games. In the first game of a round 2^k teams play a\r\ngame with each other (teams are split into games by team numbers).\r\n2^{k-1} loosing teams are eliminated from the championship, 2^{k-1}\r\nwinning teams are playing 2^{k-1} teams that got eliminated in this\r\nround of upper bracket (again, teams are split into games by team\r\nnumbers). As a result of each round both upper and lower bracket have\r\n2^{k-1} teams remaining. See example notes for better\r\nunderstanding.Single remaining team of upper bracket plays with single\r\nremaining team of lower bracket in grand-finals to identify championship\r\nwinner.You are a fan of teams with numbers a_1, a_2, ..., a_k. You want\r\nthe championship to have as many games with your favourite teams as\r\npossible. Luckily, you can affect results of every championship game the\r\nway you want. What’s maximal possible number of championship games that\r\ninclude teams you’re fan of?\r\n",
    "solutions": [
        "/*#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")*/\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 1000000000005\n#define mod 1000000007\n#define put putchar('\\n')\n#define F(i,a,b) for (int i=(a);i<=(b);i++)\n#define D(i,a,b) for (int i=(a);i>=(b);i--)\n#define R(i,a,b) for (int i=(a);i<(b);i++)\n#define go(i,t) for (int i=head[t];i;i=Next[i])\n#define sqr(x) ((x)*(x))\n#define re register\n#define mp make_pair\n#define fi first\n#define se second\n#define pa pair<int,int>\n#define pb push_back\n#define be begin()\n#define en end()\n#define ret return puts(\"-1\"),0;\n#define N 700055\n#define int ll\nusing namespace std;\ninline char gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define gc getchar\ninline int read(){char c=getchar();int tot=1;while ((c<'0'|| c>'9')&&c!='-') c=getchar();if (c=='-'){tot=-1;c=getchar();}\nint sum=0;while (c>='0'&&c<='9'){sum=sum*10+c-'0';c=getchar();}return sum*tot;}\ninline void wr(int x){if (x<0) {putchar('-');wr(-x);return;}if(x>=10)wr(x/10);putchar(x%10+'0');}\ninline void wrn(int x){wr(x);put;}inline void wri(int x){wr(x);putchar(' ');}\ninline void wrn(int x,int y){wri(x);wrn(y);}inline void wrn(int a,int b,int c){wri(a);wrn(b,c);}\nint n,k,su[N],f[N][4],vis[N],ans;\nvoid solve(int x,int l,int r){\n\tif (su[r]-su[l-1]==0){\n\t\tf[x][0]=0;f[x][1]=f[x][2]=f[x][3]=-inf;\n\t\treturn;\n\t}\n\tif (r-l==0){\n\t\tf[x][0]=f[x][1]=f[x][2]=0;f[x][3]=-inf;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tsolve(x*2,l,mid);solve(x*2+1,mid+1,r);\n\tF(i,0,3) f[x][i]=-inf;\n\tint lx=x*2,rx=x*2+1,ss=r-l+1;\n\tF(i,0,3){\n\t\tF(j,0,3){\n\t\t\tint t=0;\n\t\t\tif ((i|j)&1&&ss>2) t++;\n\t\t\tif (((i|j)&2)&&ss>2) t+=2;\n\t\t\tf[x][i|j]=max(f[x][i|j],f[lx][i]+f[rx][j]+t);\n\t\t}\n\t}\n}\nsigned main(){\n\tn=read();k=read();\n\tn=(1<<n);\n\tF(i,1,k) vis[read()]=1;\n\tF(i,1,n) su[i]=su[i-1]+vis[i];\n\tsolve(1,1,n);\n\tF(i,0,3) ans=max(ans,f[1][i]);\n\tF(i,1,n/2){\n\t\tif (vis[i*2]|vis[i*2-1]) ans++;\n\t}\n\tif (k==0) wrn(0);\n\telse wrn(ans+1);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Double Elimination.json",
    "editorial_link": "https://codeforces.com//blog/entry/74214",
    "editorial": null
}