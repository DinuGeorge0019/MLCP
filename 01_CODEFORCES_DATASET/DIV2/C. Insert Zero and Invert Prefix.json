{"link": "https://codeforces.com//contest/1839/problem/C", "problemId": "1950160", "problem_idx": "C", "shortId": "1839C", "contest_number": "1839", "problem_submissions": {"D": [208378999, 208378969, 208378832, 208349629, 208349595, 208328924, 208318842, 208320348, 208320009, 208322670, 208334872, 252078530, 208941980, 208322481, 208320363, 208321362, 208327211, 208323287, 208323939, 208326005, 208322044, 238787448, 208326918, 208338715, 208324800, 208326544, 208326069, 208328427], "E": [208319512, 208328631, 208328272, 208332229, 208329987, 208322483, 208941985, 208331621, 208337019, 208333546, 208333532, 208337451, 208338255, 208336016, 208341143, 238787342, 208337777, 208329186, 208341540, 208340328, 208345193, 208341230], "C": [208312529, 208312433, 208313019, 208312784, 208314192, 208314831, 208941969, 208315364, 208314601, 208315655, 208313303, 208314023, 208311295, 208317114, 208312761, 208316692, 208311943, 208319701, 208315483, 208313786, 208316277], "B": [208308892, 208309149, 208309789, 208308399, 208310012, 208310211, 208941953, 208312078, 208308633, 208312628, 208307832, 208309526, 208306915, 208309002, 208309419, 208310463, 208308132, 208308049, 208311860, 208308608, 208311306], "A": [208307199, 208306621, 208306837, 208306359, 208306401, 208306556, 208941945, 208307764, 208306608, 208308716, 208306828, 208306416, 208307882, 208306972, 208306698, 208306776, 208306761, 208306697, 208307597, 208306680, 208308663]}, "name": "C. Insert Zero and Invert Prefix", "statement": "You have a sequence a_1, a_2,\r\nldots, a_n of length n, each element of which is either 0 or 1, and a\r\nsequence b, which is initially empty.You are going to perform n\r\noperations. On each of them you will increase the length of b by 1. On\r\nthe i-th operation you choose an integer p between 0 and i-1. You insert\r\n0 in the sequence b on position p+1 (after the first p elements), and\r\nthen you invert the first p elements of b. More formally: let\u2019s denote\r\nthe sequence b before the i-th (1\r\nle i\r\nle n) operation as b_1, b_2,\r\nldots, b_{i-1}. On the i-th operation you choose an integer p between 0\r\nand i-1 and replace b with\r\noverline{b_1},\r\noverline{b_2},\r\nldots,\r\noverline{b_{p}}, 0, b_{p+1}, b_{p+2},\r\nldots, b_{i-1}. Here,\r\noverline{x} denotes the binary inversion. Hence,\r\noverline{0} = 1 and\r\noverline{1} = 0. You can find examples of operations in the Notes\r\nsection.Determine if there exists a sequence of operations that makes b\r\nequal to a. If such sequence of operations exists, find it.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define int long long\n#define pii pair<int, int>\n#define ff first\n#define ss second\n#define pb push_back\nusing namespace std;\nvoid init() {\n\t\n}\nvoid solve() {\n\tint n;\n\tcin >> n;\n\tint a[n + 1];\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tif (a[n] == 1) {\n\t\tcout << \"NO\\n\";\n\t\treturn;\n\t}\n\tvector<int> ans;\n\tint zerocnt = 1, onecnt = 0;\n\tfor (int i = n - 1; i >= 1; i--) {\n\t\tif (a[i] == 0) {\n\t\t\tif (a[i + 1] == 1) {\n\t\t\t\tcerr << zerocnt << ' ' << onecnt << endl;\n\t\t\t\tfor (int j = 1; j < zerocnt + onecnt; j++) ans.pb(0);\n\t\t\t\tans.pb(onecnt);\n\t\t\t\tzerocnt = 1; onecnt = 0;\n\t\t\t} else zerocnt++;\n\t\t} else onecnt++;\n\t}\n\tfor (int j = 1; j < zerocnt + onecnt; j++) ans.pb(0);\n\tans.pb(onecnt);\n\tcout << \"YES\\n\";\n\tfor (int &x : ans) cout << x << ' ';\n\tcout << endl;\n}\nint32_t main(){\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tinit();\n\tint t = 1;\n\tcin >> t;\n\twhile (t--) solve();\n}"], "input": "", "output": "", "tags": ["constructive algorithms"], "dificulty": "1300", "interactive": false}