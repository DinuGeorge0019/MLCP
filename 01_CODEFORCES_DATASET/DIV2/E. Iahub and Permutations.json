{"link": "https://codeforces.com//contest/340/problem/E", "problemId": "3421", "problem_idx": "E", "shortId": "340E", "contest_number": "340", "problem_submissions": {"E": [4380220, 4380834, 4380126, 4391968, 4382367, 4376164, 4380005, 4381859, 4379851, 4381825, 4380671, 4377641, 4381576, 4383755], "D": [4377289, 4376595, 4378029, 4372963, 4376785, 4377666, 4373992, 4376684, 4376514, 4377010, 4380983, 4375663, 4376643, 4377274, 4373081, 4406324, 4378181, 4380917, 4377354, 4383338], "C": [4375809, 4375002, 4377603, 4374632, 4375617, 4376250, 4378682, 4380136, 4373891, 4375990, 4378082, 4377910, 4377314, 4378457, 4375078, 4376703, 4378516, 4378506, 4374797], "B": [4372293, 4378644, 4376876, 4375385, 4378732, 4374049, 4386232, 4373253, 4380096, 4376212, 4383111, 4383087, 4379013, 4399484, 4382621, 4372666], "A": [4371264, 4371296, 4372303, 4375873, 4371313, 4371976, 4371443, 4371936, 4378560, 4371824, 4374190, 4371558, 4371435, 4371343, 4371370, 4371365, 4371526, 4371376, 4371280]}, "name": "E. Iahub and Permutations", "statement": "Iahub is so happy about inventing bubble sort graphs that he\u2019s staying\r\nall day long at the office and writing permutations. Iahubina is angry\r\nthat she is no more important for Iahub. When Iahub goes away, Iahubina\r\ncomes to his office and sabotage his research work.The girl finds an\r\nimportant permutation for the research. The permutation contains\r\ndistinct integers , , ..., . She replaces some of permutation elements\r\nwith -1 value as a revenge. When Iahub finds out his important\r\npermutation is broken, he tries to recover it. The only thing he\r\nremembers about the permutation is it didn\u2019t have any fixed point. A\r\nfixed point for a permutation is an element which has value equal to .\r\nYour job is to proof to Iahub that trying to recover it is not a good\r\nidea. Output the number of permutations which could be originally\r\nIahub\u2019s important permutation, modulo ().\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <sstream>\n#include <vector>\n#define FOR(i,a,b) for(int i = (a); i <= (b); i++)\n#define DOWN(i,a,b) for(int i = (a); i>=(b);i--)\n#define FR(i,a) for(int i = 0; i < (a); i++)\nusing namespace std;\nlong long Base = 1000000007;\n#define maxn 100010\nint n,a[maxn];\nbool dd[maxn];\nlong long c[2003][2003];\nlong long P[maxn];\nint main() {\n    //freopen(\"test.in\",\"r\",stdin);\n    ios::sync_with_stdio(false);\n    cin >> n;\n    FOR(i,1,n) cin >> a[i];\n    FOR(i,1,n) dd[i] = true;\n    FOR(i,1,n)\n    if (a[i] != -1) dd[a[i]] = false;\n    int cnt1 = 0, cnt2 = 0;\n    FOR(i,1,n)\n    if (a[i] == -1) {\n        if (dd[i]) cnt1++;\n        else cnt2++;\n    }\n    FOR(i,0,2000) c[0][i] = 1;\n    FOR(i,1,2000) FOR(j,i,2000) {\n        c[i][j] = (c[i][j-1] + c[i-1][j-1]);\n        if (c[i][j] >= Base) c[i][j] -= Base;\n    }\n    P[0] = 1;\n    FOR(i,1,n) P[i] = (P[i-1] * i) % Base;\n    long long res = 0, sign;\n    FOR(i,0,cnt1) {\n        if (i % 2 == 0) sign = 1;\n        else sign = -1;\n\n        long long total = (c[i][cnt1] * P[cnt2+cnt1-i]) % Base;\n\n        res = (res + sign * total) % Base;\n        if (res < 0) res += Base;\n    }\n    cout << res << endl;\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "math"], "dificulty": "2000", "interactive": false}