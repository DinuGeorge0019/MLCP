{
    "link": "https://codeforces.com//contest/895/problem/A",
    "problemId": "136054",
    "problem_idx": "A",
    "shortId": "895A",
    "contest_number": "895",
    "problem_submissions": {
        "B": [
            32688468,
            32699862,
            32678233,
            32693050,
            32686509,
            32685665,
            32686167,
            32677480,
            32679593,
            32679598,
            32678660,
            32679991,
            32682934,
            32679855,
            32677931,
            32686786,
            32693881,
            32679230,
            32679053
        ],
        "A": [
            32686687,
            32676253,
            32692247,
            32687355,
            32675778,
            32681798,
            32679509,
            32675934,
            32676147,
            32676898,
            32676014,
            32676714,
            32676536,
            32676059,
            32675756,
            32675820,
            32681275,
            32675999,
            32675924,
            32676186
        ],
        "E": [
            32685470,
            32693933,
            32688720,
            32686566,
            32794358,
            32794273,
            32732458,
            32681330,
            34740059,
            32691274,
            32699769,
            32720207,
            32720179,
            32720088,
            32698361,
            32698258,
            32698305
        ],
        "D": [
            32681888,
            32681308,
            32690694,
            32686236,
            32685937,
            32689479,
            32691053,
            32781770,
            32686848,
            32691934,
            32691134,
            32690110,
            32688741,
            32690589,
            32685060,
            32692013
        ],
        "C": [
            32678196,
            32689081,
            32683426,
            32681542,
            32680606,
            32690938,
            32678815,
            32682493,
            32687456,
            32690603,
            32685722,
            32686946,
            32686892,
            32689317,
            32680568,
            32678934,
            32808410,
            32685463,
            32687263,
            32681038
        ]
    },
    "name": "A. Pizza Separation",
    "statement": "Students Vasya and Petya are studying at the BSU (Byteland State\r\nUniversity). At one of the breaks they decided to order a pizza. In this\r\nproblem pizza is a circle of some radius. The pizza was delivered\r\nalready cut into pieces. The -th piece is a sector of angle equal to .\r\nVasya and Petya want to divide all pieces of pizza into two sectors in\r\nsuch way that the difference between angles of these sectors is minimal.\r\nSector angle is sum of angles of all pieces in it. Pay attention, that\r\none of sectors can be empty.\r\n",
    "solutions": [
        "#include\"bits/stdc++.h\"\n\n\n#define PB push_back\n#define PF push_front\n#define LB lower_bound\n#define UB upper_bound\n#define fr(x) freopen(x,\"r\",stdin)\n#define fw(x) freopen(x,\"w\",stdout)\n#define iout(x) printf(\"%d\\n\",x)\n#define lout(x) printf(\"%lld\\n\",x)\n#define REP(x,l,u) for(int x = (l);x<=(u);x++)\n#define RREP(x,l,u) for(int x = (l);x>=(u);x--)\n#define mst(x,a) memset(x,a,sizeof(x))\n#define PII pair<int,int>\n#define PLL pair<ll,ll>\n#define MP make_pair\n#define se second\n#define fi first\n#define dbg(x) cout<<#x<<\" = \"<<(x)<<endl;\n#define sz(x) ((int)x.size())\n#define cl(x) x.clear()\n\ntypedef  long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ld;\nusing namespace std;\n\nconst int maxn = 100010;\nconst int mod = 1e9+7;\nconst int MAX = 1000000010;\nconst double eps = 1e-6;\nconst double PI = acos(-1);\n\ntemplate<typename T> inline void read(T &x){\nx=0;T f=1;char ch;do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');do x=x*10+ch-'0',ch=getchar();while(ch<='9'&&ch>='0');x*=f;\n}\n\ntemplate<typename A,typename B> inline void read(A&x,B&y){read(x);read(y);}\ntemplate<typename A,typename B,typename C> inline void read(A&x,B&y,C&z){read(x);read(y);read(z);}\ntemplate<typename A,typename B,typename C,typename D> inline void read(A&x,B&y,C&z,D&w){read(x);read(y);read(z);read(w);}\ntemplate<typename A,typename B> inline A fexp(A x,B p){A ans=1;for(;p;p>>=1,x=1LL*x*x%mod)if(p&1)ans=1LL*ans*x%mod;return ans;}\ntemplate<typename A,typename B> inline A fexp(A x,B p,A mo){A ans=1;for(;p;p>>=1,x=1LL*x*x%mo)if(p&1)ans=1LL*ans*x%mo;return ans;}\n\nint n,A[400];\n\nint main(){\n\tread(n);\n\tREP(i,1,n){read(A[i]);\n\t}\n\tint ans=360;\n\tREP(i,1,n)REP(j,i,n){\n\t\tint t=0;\n\t\tREP(k,i,j)t+=A[k];\n\t\tans=min(ans,abs(t-(360-t)));\n\t}\n\tiout(ans);\n\treturn 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Pizza Separation.json",
    "editorial_link": "https://codeforces.com//blog/entry/56028",
    "editorial": "We can notice that if one of the sectors is continuous then all the\r\nremaining pieces also form a continuous sector.If angle of the first\r\nsector is equal to then difference between angles of first and second\r\nsectors is . So for each possible continuous sector we can count itâs\r\nangle and update answer. Time complexity or . Solution\r\n",
    "hint": []
}