{
    "link": "https://codeforces.com//contest/760/problem/A",
    "problemId": "89816",
    "problem_idx": "A",
    "shortId": "760A",
    "contest_number": "760",
    "problem_submissions": {
        "F": [
            24048996,
            24334592,
            24109967
        ],
        "D": [
            24042480,
            24043732,
            24050024,
            24046176,
            24044696,
            24045116,
            24042014,
            24043570,
            24047853,
            24043885,
            24739234,
            24045094,
            24044167,
            24044943,
            24049808,
            24041812,
            24045235
        ],
        "C": [
            24040885,
            24041111,
            24041193,
            24043138,
            24047007,
            24043013,
            24038951,
            24041237,
            24046096,
            24041744,
            24041798,
            24042387,
            24042705,
            24049213,
            24042229,
            24044994,
            24042730
        ],
        "B": [
            24039488,
            24039342,
            24037031,
            24040294,
            24041983,
            24041211,
            24039467,
            24039465,
            24039319,
            24038489,
            24040344,
            24039097,
            24039942,
            24040090,
            24041062
        ],
        "A": [
            24036025,
            24035890,
            24035872,
            24036889,
            24036131,
            24037811,
            24035954,
            24036348,
            24036507,
            24036069,
            24036108,
            24036146,
            24036211,
            24041066,
            24035881,
            24035886,
            24036867
        ],
        "E": [
            24050782,
            24048436,
            24049579,
            24049178,
            24050210,
            24052439,
            24072140,
            24052585,
            24324528,
            24324402,
            24048812,
            24049062,
            24108774
        ]
    },
    "name": "A. Petr and a calendar",
    "statement": "Petr wants to make a calendar for current month. For this purpose he\r\ndraws a table in which columns correspond to weeks (a week is seven\r\nconsequent days from Monday to Sunday), rows correspond to weekdays, and\r\ncells contain dates. For example, a calendar for January 2017 should\r\nlook like on the picture: Petr wants to know how many columns his table\r\nshould have given the month and the weekday of the first date of that\r\nmonth? Assume that the year is non-leap.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\nconst int c[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcout.tie(0); cin.tie(0);\n\n\tint n, d; cin >> n >> d;\n\tcout << (c[n - 1] + d - 1 + 6) / 7 << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Petr and a calendar.json",
    "editorial_link": "https://codeforces.com//blog/entry/49946",
    "editorial": "Just implement writing dates one by one and keeping current column and\r\nrow, or use the formula , where is the number of days in the month.\r\n",
    "hint": []
}