{
    "link": "https://codeforces.com//contest/667/problem/B",
    "problemId": "57419",
    "problem_idx": "B",
    "shortId": "667B",
    "contest_number": "667",
    "problem_submissions": {
        "D": [
            17578505,
            17578570,
            17579983,
            17579852,
            17581346,
            17579873,
            17581494,
            17581266,
            17580319,
            17581259,
            17581685,
            17583097,
            17581442,
            17581402,
            17579446,
            17581355,
            17583002,
            17580142
        ],
        "C": [
            17573875,
            17572689,
            17574596,
            17575127,
            17573397,
            17573218,
            17573452,
            17575098,
            17575527,
            17575043,
            17576597,
            17575985,
            17576939,
            17575629,
            17580783,
            17576852,
            17576973,
            17576127
        ],
        "B": [
            17571142,
            17570505,
            17570987,
            17571612,
            17570711,
            17570822,
            17569944,
            17569925,
            17572245,
            17570880,
            17571749,
            17571220,
            17573489,
            17572815,
            17571948,
            17572494,
            17582197
        ],
        "A": [
            17569800,
            17569752,
            17569862,
            17572567,
            17569957,
            17570123,
            17569662,
            17569643,
            17571389,
            17569984,
            17569766,
            17570035,
            17570122,
            17570638,
            17571301,
            17570534,
            17583219
        ]
    },
    "name": "B. Coat of Anticubism",
    "statement": "As some of you know, cubism is a trend in art, where the problem of\r\nconstructing volumetrical shape on a plane with a combination of\r\nthree-dimensional geometric shapes comes to the fore. A famous sculptor\r\nCicasso, whose self-portrait you can contemplate, hates cubism. He is\r\nmore impressed by the idea to transmit two-dimensional objects through\r\nthree-dimensional objects by using his magnificent sculptures. And his\r\nnew project is connected with this. Cicasso wants to make a coat for the\r\nhaters of anticubism. To do this, he wants to create a sculpture\r\ndepicting a well-known geometric primitive .Cicasso prepared for this a\r\nfew blanks, which are rods with integer lengths, and now he wants to\r\nbring them together. The -th rod is a segment of length .The sculptor\r\nplans to make a convex polygon with a nonzero area, using rods he has as\r\nits sides. Each rod should be used as a side to its full length. It is\r\nforbidden to cut, break or bend rods. However, two sides may form a\r\nstraight angle .Cicasso knows that it is impossible to make a convex\r\npolygon with a nonzero area out of the rods with the lengths which he\r\nhad chosen. Cicasso does not want to leave the unused rods, so the\r\nsculptor decides to make another rod-blank with an integer length so\r\nthat his problem is solvable. Of course, he wants to make it as short as\r\npossible, because the materials are expensive, and it is improper deed\r\nto spend money for nothing. Help sculptor!\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n#pragma comment(linker, \"/STACK:256000000\")\n#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <deque>\n#include <bitset>\n#include <unordered_map>\n#include <unordered_set>\n#include <cassert>\n\nusing namespace std;\n\ntemplate<class T> bool uin(T &a, T b) { return a > b ? (a = b, true) : false; }\ntemplate<class T> bool uax(T &a, T b) { return a < b ? (a = b, true) : false; }\n\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\n\n#define TASK \"\"\n#define forn(i, n) for (int i = 0; i < (int)n; i++)\n#define for1(i, n) for (int i = 1; i <= (int)n; i++)\n#define forq(i, s, t) for (int i = s; i <= (int)t; i++)\n#define ford(i, s, t) for (int i = s; i >= (int)t; i--)\n#define mk make_pair\n#define pk\tpush_back\n#define all(v) v.begin(), v.end()\n#define TIME clock() * 1.0 / CLOCKS_PER_SEC\n\nconst double EPS = 1e-15;\nconst double PI = acos(-1.0);\nconst int MAXN = (int)1e5 + 7;\nconst int INF = (int)1e9 + 7;\nconst ll LINF = (ll)2e18 + 7;\nconst int MOD = (int)1e9 + 7;\nconst ull P = 239017;\nconst ull MM = (ull)2147482661;\n\t\nint solve();\n\nint main()\n{\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tfreopen(\"test.txt\", \"w\", stderr);\n\tdouble tstart = TIME;\n#else\n\t//freopen(TASK\".in\", \"r\", stdin), freopen(TASK\".out\", \"w\", stdout);\n#endif\n\treturn solve();\n}\n\nint a[MAXN];\n\nint solve()\n{\n\tint n;\n\tcin >> n;\n\tforn(i, n) {\n\t\tscanf(\"%d\", a + i);\n\t}\n\tsort(a, a + n);\n\tll sum = 0;\n\tforn(i, n - 1) {\n\t\tsum += a[i];\n\t}\n\tll last = a[n - 1];\n\tcout << last - sum + 1;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "geometry"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Coat of Anticubism.json",
    "editorial_link": "https://codeforces.com//blog/entry/44622",
    "editorial": "It is possible to make a convex polygon with given side lengths if and\r\nonly if a generalized triangle inequality holds: the length of the\r\nlongest side is less than the sum of lengths of other sides. It is\r\nimpossible to make a convex polygon from a given set, so there is a side\r\nwhich is longest than (or equals to) than sum of others. Assume it is\r\ngreater by ; then it is sufficient to add a rod of length . More, it is\r\nclear that adding any shorter length wouldnât satisfy the inequality.\r\nThus the answer for the problem is .\r\n",
    "hint": []
}