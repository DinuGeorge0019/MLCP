{"link": "https://codeforces.com//contest/1061/problem/C", "problemId": "259559", "problem_idx": "C", "shortId": "1061C", "contest_number": "1061", "problem_submissions": {"F": [46080533, 46078741, 46083363, 46090966, 46090449, 46083565, 46085799, 46083880, 46078551, 46109412, 46086044, 46084393, 46085497, 46085674, 46086595, 46085522, 46079186, 46086667, 46084268, 46086192, 46099697, 46099461, 46088106], "D": [46072013, 46076677, 46075957, 46074341, 46074354, 46074232, 46074411, 46085044, 46076314, 46078869, 46075590, 46078204, 46076173, 46079731, 46078000, 46081859, 46079963, 46085405, 46080982, 46080058], "C": [46069182, 46071750, 46070967, 46071622, 46071185, 46071619, 46071683, 46072269, 46072643, 46074534, 46072699, 46073691, 46071278, 46072896, 46072959, 46081505, 46074501, 46073620, 46077745, 46075063], "B": [46068385, 46070705, 46068805, 46070395, 46069936, 46070540, 46069425, 46071160, 46070196, 46071645, 46073407, 46071478, 46069267, 46070628, 46070940, 46073987, 46071263, 46069667, 46073266, 46069912], "A": [46065105, 46064815, 46065437, 46065157, 46065204, 46064909, 46064831, 46065487, 46067926, 46065498, 46065297, 46066800, 46065131, 46066394, 46065152, 46064816, 46065082, 46065378, 46071171, 46064958], "E": [46080824, 46089783, 46087601, 142313241, 46115374]}, "name": "C. Multiplicity", "statement": "You are given an integer array a_1, a_2,\r\nldots, a_n.The array b is called to be a of a if it is possible to\r\nremove some elements from a to get b.Array b_1, b_2,\r\nldots, b_k is called to be if it is not empty and for every i (1\r\nle i\r\nle k) b_i is divisible by i.Find the number of good subsequences in a\r\nmodulo 10^9 + 7. Two subsequences are considered different if index sets\r\nof numbers included in them are different. That is, the values of the\r\nelements do not matter in the comparison of subsequences. In particular,\r\nthe array a has exactly 2^n - 1 different subsequences (excluding an\r\nempty subsequence).\r\n", "solutions": ["#include <bits/stdc++.h>\n#define eb emplace_back\n#define INF (0x3f3f3f3f)\n#define INFLL (0x3f3f3f3f3f3f3f3fll)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, ll> pil;\ntypedef pair<ll, int> pli;\n\nconst ll MOD = 1e9 + 7;\n\nll D[1000005];\nll N, Ans;\n\nint main()\n{\n\tll i, j, a;\n\t\n\tscanf(\"%lld\", &N);\n\t\n\tD[0] = 1;\n\t\n\tfor(ll i = 1; i <= N; i ++){\n\t\tscanf(\"%lld\", &a);\n\t\t\n\t\tll j;\n\t\t\n\t\tfor(j = 1; j * j <= a; j ++){\n\t\t\tif(a % j == 0){\n\t\t\t\tD[a / j] = (D[a / j] + D[a / j - 1]) % MOD;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(j --; j >= 1; j --){\n\t\t\tif(j * j == a) continue;\n\t\t\tif(a % j == 0){\n\t\t\t\tD[j] = (D[j] + D[j - 1]) % MOD;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(ll i = 1; i <= (ll) 1e6; i ++){\n\t\tAns = (Ans + D[i]) % MOD;\n\t}\n\t\n\tcout << Ans << endl;\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dp", "implementation", "math", "number theory"], "dificulty": "1700", "interactive": false}