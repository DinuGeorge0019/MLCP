{"link": "https://codeforces.com//contest/287/problem/D", "problemId": "2763", "problem_idx": "D", "shortId": "287D", "contest_number": "287", "problem_submissions": {"B": [3389740, 3385851, 3390594, 3393152, 3386756, 3385467, 3386512, 3387058, 3386629, 3386855, 3386267, 3394348, 3386542, 3386317, 3386774, 3385430, 3386303, 3386690, 3386374], "E": [3388987, 3391965, 3389122, 3391520, 3389487, 3391136, 3390533, 3391898, 3391078, 3389973], "D": [3386764, 3390723, 3391406, 3390184, 3391781, 3540938, 3390136], "C": [3385718, 3386355, 3387824, 3386709, 3387896, 3386437, 3388881, 3388689, 3388362, 3389262, 3387586, 3387592, 3387606, 3387372, 3387548, 3388515, 3387560, 3388169, 3388584, 3387782], "A": [3384457, 3384792, 3384549, 3384653, 3387027, 3384478, 3385172, 3384678, 3384599, 3384586, 3384505, 3384624, 3384741, 3384474, 3384523, 3384546, 3384479, 3385128]}, "name": "D. Shifting", "statement": "John Doe has found the beautiful permutation formula.Let\u2019s take\r\npermutation . Let\u2019s define transformation of this permutation: where is\r\nan integer, the transformation parameter, is such maximum integer that .\r\nIf , then elements and so on are omitted. In other words, the described\r\ntransformation of permutation cyclically shifts to the left each\r\nconsecutive block of length and the last block with the length equal to\r\nthe remainder after dividing by . John Doe thinks that permutation is\r\nbeautiful. Unfortunately, he cannot quickly find the beautiful\r\npermutation he\u2019s interested in. That\u2019s why he asked you to help him.Your\r\ntask is to find a beautiful permutation for the given . For\r\nclarifications, see the notes to the third sample.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define clr(a) memset(a,0,sizeof(a))\nint p[3010000],n;\nint main() {\n    scanf(\"%d\",&n);\n    rep(i,1,n+1) p[i]=i;\n    rep(i,2,n+1) {\n        int s=p[i-1],ns;\n        for (int j=i-1;j<=n+i-2;j+=i) {\n            ns=p[j+i];\n            if (j+i<=n+i-2) p[j+i]=s;\n                else p[n+i-1]=s;\n            s=ns;\n        }\n    }\n    rep(i,1,n+1) printf(\"%d \",p[n-1+i]);\n}"], "input": "", "output": "", "tags": [], "dificulty": "2200", "interactive": false}