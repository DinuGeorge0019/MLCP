{
    "link": "https://codeforces.com//contest/535/problem/C",
    "problemId": "26039",
    "problem_idx": "C",
    "shortId": "535C",
    "contest_number": "535",
    "problem_submissions": {
        "D": [
            10715113,
            10714538,
            10713033,
            10717870,
            10717623,
            10718212,
            10719145,
            10719368,
            10718417,
            10717655,
            10712848,
            10714795,
            10715426,
            20417071,
            10716514,
            10715240
        ],
        "C": [
            10712561,
            10708236,
            10715493,
            10714489,
            10714358,
            10714749,
            10715771,
            10713528,
            10714886,
            10713502,
            10714572,
            10719561
        ],
        "B": [
            10707835,
            10715165,
            10706437,
            10708415,
            10709369,
            10710794,
            10710470,
            10709993,
            10707334,
            10711642,
            10714171,
            10710232,
            10711093,
            10713617,
            10708489,
            10710722
        ],
        "A": [
            10706255,
            10715866,
            10709239,
            10706497,
            10707836,
            10706378,
            10706480,
            10723848,
            10713315,
            10706570,
            10707243,
            10707771,
            10706513,
            10707324
        ]
    },
    "name": "C. Tavas and Karafs",
    "statement": "Each Karafs has a positive integer height. Tavas has an infinite\r\nsequence of Karafses. The height of the -th Karafs is .For a given ,\r\nlet’s define an -bite operation as decreasing the height of at most\r\ndistinct not eaten Karafses by 1. Karafs is considered as eaten when its\r\nheight becomes zero.Now SaDDas asks you queries. In each query he gives\r\nyou numbers , and and you should find the largest number such that and\r\nsequence can be eaten or print -1 if there is no such number .\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <unordered_map>\n#include <unordered_set>\n#include <memory.h>\nusing namespace std;\n\nint main() {\n  int a, b, q;\n  scanf(\"%d %d %d\", &a, &b, &q);\n  while (q--) {\n    int l0, t, m;\n    scanf(\"%d %d %d\", &l0, &t, &m);\n\n    const long long c = 1ll * t * m;\n    const long long sl0 = a + 1ll * (l0 - 1) * b;\n\n    int ans = -1;\n    long long l = l0, r = 1000000000;\n    while (l <= r) {\n      const long long m = (l + r) >> 1;\n      const long long sm = a + (m - 1) * b;\n      const long long w = m - l0 + 1;\n      const long long z =\n          (w & 1) ? ((sl0 + sm) >> 1) * w : (w >> 1) * (sl0 + sm);\n\n      if (sm <= t && z <= c) {\n        l = m + 1;\n        ans = m;\n      } else {\n        r = m - 1;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Tavas and Karafs.json",
    "editorial_link": "https://codeforces.com//blog/entry/17401",
    "editorial": "Lemma: Sequence h1,?h2,?,?hn is (m,?t)?-?Tavas-Eatable if and only if max(h1,?h2,?,?hn)???t and h1?+?h2?+??+?hn???m?×?t.\n\nProof: only if is obvious (if the sequence is Tavas-Eatable, then it fulfills the condition).\n\nSo we should prove that if the conditions are fulfilled, then the sequence is Tavas-Eatable.\n\nUse induction on h1?+?h2?+?...?+?hn. Induction definition: the lemma above is true for every sequence h with sum of elements at most k. So now we should prove it for h1?+?h2?+?...?+?hn?=?k?+?1. There are two cases:\n\n1- There are at least m non-zero elements in the sequence. So, the number of elements equal to t is at most m (otherwise sum will exceed m?×?t). So, we decrease m maximum elements by 1. Maximum element will be at most t?-?1 and sum will be at least m?×?t?-?m?=?m(t?-?1). So according to the induction definition, the new sequence is (m,?t?-?1)?-? Tavas-Eatable, so h is (m,?t)?-? Tavas-Eatable.\n\n2- There are less than m non-zero elements in the sequence. We decrease them all by 1. Obviously, the new sequence has maximum element at most equal to t?-?1 so its sum will be at most m(t?-?1). So according to the induction definition, the new sequence is (m,?t?-?1)?-? Tavas-Eatable, so h is (m,?t)?-? Tavas-Eatable.\n\n \n\nFor this problem, use binary search on r and use the fact that the sequence is non-decreasing and  .",
    "hint": []
}