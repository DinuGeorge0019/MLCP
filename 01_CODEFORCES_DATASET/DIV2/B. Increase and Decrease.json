{"link": "https://codeforces.com//contest/246/problem/B", "problemId": "2236", "problem_idx": "B", "shortId": "246B", "contest_number": "246", "problem_submissions": {"E": [2618309, 2625699, 2625672, 2625616], "D": [2614880, 2615580, 2616212, 2614968, 2614320, 2614660, 2616653, 2616273, 2613212, 2614960, 2617901, 2614696, 2616035, 2614578, 2615857, 2616416, 2616305, 2614469, 2615989, 2614634], "C": [2614006, 2613802, 2615098, 2617187, 2615874, 2612559, 2614266, 2614575, 2614275, 2616756, 2615418, 2616320, 2614220, 2615862, 2614590, 2615086, 2614032, 2615573, 2614720, 2616902], "B": [2612557, 2612051, 2612469, 2612350, 2611530, 2613518, 2611821, 2612876, 2615385, 2612183, 2613369, 2612732, 2612231, 2612645, 2611735, 2612717, 2612424, 2613466, 2613427, 2613236], "A": [2611340, 2611588, 2611575, 2611688, 2611152, 2611180, 2612517, 2612042, 2615112, 2611515, 2611961, 2611233, 2611703, 2611227, 2611218, 2611222, 2611497, 2611116, 2612114, 2612186]}, "name": "B. Increase and Decrease", "statement": "Polycarpus has an array, consisting of integers . Polycarpus likes it\r\nwhen numbers in an array match. That\u2019s why he wants the array to have as\r\nmany equal numbers as possible. For that Polycarpus performs the\r\nfollowing operation multiple times: he chooses two elements of the array\r\n, ; he simultaneously increases number by and decreases number by , that\r\nis, executes and . The given operation changes exactly two distinct\r\narray elements. Polycarpus can apply the described operation an infinite\r\nnumber of times. Now he wants to know what maximum number of equal array\r\nelements he can get if he performs an arbitrary number of such\r\noperation. Help Polycarpus.\r\n", "solutions": ["#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <string.h>\nusing namespace std;\n\nint a[1000*1000], n;\nint main()\n{\n    scanf(\"%d\", &n);\n    int s=0;\n    for (int i=0; i<n; i++) scanf(\"%d\", &a[i]), s+=a[i];\n    printf(\"%d\\n\", n-(s%n ? 1 : 0));\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "math"], "dificulty": "1300", "interactive": false}