{
    "link": "https://codeforces.com//contest/233/problem/D",
    "problemId": "1942",
    "problem_idx": "D",
    "shortId": "233D",
    "contest_number": "233",
    "problem_submissions": {
        "C": [
            2346859,
            2344265,
            2342707,
            2344177,
            2343973,
            2342173,
            2344328,
            2344647,
            2342871,
            2344423,
            2344277,
            2344895,
            2344437,
            2344831
        ],
        "D": [
            2344169,
            2347773,
            2353161,
            2345620,
            2345453,
            2350406,
            2348259
        ],
        "B": [
            2341415,
            2341779,
            2341195,
            2341568,
            2342153,
            2341110,
            2340678,
            2344879,
            2341721,
            2341416,
            2343525,
            2342567,
            2341910,
            2341340,
            2342312,
            2341746
        ],
        "A": [
            2340511,
            2340225,
            2340024,
            2340020,
            2339946,
            2339887,
            2339899,
            2339797,
            2339994,
            2339889,
            2339746,
            2339913,
            2340577,
            2339981,
            2340518,
            2339939
        ],
        "E": [
            2388521
        ]
    },
    "name": "D. Table",
    "statement": "John Doe has an table. John Doe can paint points in some table cells,\r\nnot more than one point in one table cell. John Doe wants to use such\r\noperations to make each square subtable of size have exactly points.John\r\nDoe wondered, how many distinct ways to fill the table with points are\r\nthere, provided that the condition must hold. As this number can be\r\nrather large, John Doe asks to find its remainder after dividing by .You\r\nshould assume that John always paints a point exactly in the center of\r\nsome cell. Two ways to fill a table are considered distinct, if there\r\nexists a table cell, that has a point in one way and doesn’t have it in\r\nthe other.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define mod 1000000007\n\nint n,k;\nlong long m;\nint c[110],cc[110][2];\nlong long tim[110];\nlong long f[110][10100];\n\nint sqr(long long x){return (x*x)%mod;}\n\nint qming(long long a,long long b)\n{\n\tif (!b)\treturn 1;\n\tif (b&1)\treturn (sqr(qming(a,b/2))*a)%mod;\n\treturn sqr(qming(a,b/2));\n}\n\nvoid init()\n{\n\tc[0]=1;\n\tfor (int i=1;i<=n;i++)\t\n\t{\n\t\tlong long temp=c[i-1];\n\t\ttemp*=(n-i+1);\n\t\ttemp%=mod;\n\t\ttemp*=qming(i,mod-2);\n\t\ttemp%=mod;\n\t\tc[i]=temp;\n\t}\t\n}\n\nint main()\n{\n\tcin>>n>>m>>k;\n\tinit();\n\tfor (int i=0;i<n;i++)\tif (m%n>i)\ttim[i]=1;else tim[i]=0;\n\tfor (int i=0;i<=n;i++)\tcc[i][0]=qming(c[i],m/n),cc[i][1]=qming(c[i],m/n+1);\n\tf[0][0]=1;\n\tint a,b;\n\tfor (int i=0;i<n;i++)\n\t{\n\t\ta=max(0,k-(n-i)*n);\n\t\tb=min(k,n*i);\n\t\tfor (int j=a;j<=b;j++)\n\t\t\tfor (int t=0;t<=n;t++)\n\t\t\t{\n\t\t\t\tif (j+t>k)\tbreak;\n\t\t\t\tf[i+1][j+t]+=f[i][j]*cc[t][tim[i]];\n\t\t\t\tf[i+1][j+t]%=mod;\n\t\t\t}\n\t}\n\tcout<<f[n][k]<<endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Table.json",
    "editorial_link": "https://codeforces.com//blog/entry/5514",
    "editorial": "Let si number of points in the column i.\n \n\nTwo neighboring squares are drawn at this picture, A is the number of point it the left area (it is one column), B is the number of points in the middle area and C is the number of points in the right area (it is one column too). That's why by definition we have:\n\nTherefore A?=?C.\nThat's why \nDivide all columns by equivalence classes on the basis of . For all a and b from one class sa?=?sb.\ncnta is number of columns in class with .\nThere are (Cnk)cnta ways to draw k points in the each of columns in the class a independendently of the other classes.\ndp[i][j] is number of ways to fill all columns in classes 1,?... i in such way that . \ncnti take only two values  and . Let's calc (Cna)cnti for all a and cnti and use it to calc our dp. We have O(n2·k) complexity.",
    "hint": []
}