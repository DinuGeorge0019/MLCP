{"link": "https://codeforces.com//contest/1181/problem/B", "problemId": "359261", "problem_idx": "B", "shortId": "1181B", "contest_number": "1181", "problem_submissions": {"E2": [55650122, 55830557, 55704213], "E1": [55633819, 55638516, 55638501, 55637414, 55641214, 55640980, 55643225, 55640108, 55640609, 55642576, 55643544, 55642412, 55643807, 55641985, 55642964, 240099989], "D": [55631090, 55633784, 55633448, 55631287, 55633631, 55633273, 55636890, 55634366, 55634832, 55638016, 55638738, 55634315, 55639336, 55636804, 55635357, 55637569, 55636303, 55635471, 55634737, 55630910], "B": [55627797, 55620636, 55623454, 55633957, 55622559, 55626217, 109938468, 109937680, 55629226, 55627039, 55625976, 55641971, 55622249, 55622014, 55624276, 55623137], "C": [55625127, 55629408, 55627484, 55625656, 55629031, 55630033, 55628446, 55636714, 55636852, 55632570, 55634750, 55628993, 55633600, 55628788, 55626023, 55632494, 55631294, 55629796, 55629116, 55636617], "A": [55616968, 55616973, 55617720, 55617671, 55617776, 55617314, 55618111, 109966538, 109938562, 109938324, 55618923, 55617442, 55639586, 55635703, 55628269, 55617672, 55630717, 55619287, 55617106, 55617973, 55617169, 55617325]}, "name": "B. Split a Number", "statement": "Dima worked all day and wrote down on a long paper strip his favorite\r\nnumber n consisting of l digits. Unfortunately, the strip turned out to\r\nbe so long that it didn\u2019t fit in the Dima\u2019s bookshelf.To solve the\r\nissue, Dima decided to split the strip into two non-empty parts so that\r\neach of them contains a integer without leading zeros. After that he\r\nwill compute the sum of the two integers and write it down on a new\r\nstrip.Dima wants the resulting integer to be as small as possible,\r\nbecause it increases the chances that the sum will fit it in the\r\nbookshelf. Help Dima decide what is the minimum sum he can obtain.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define ar array\n\nvector<int> stv(string s) {\n\treverse(s.begin(), s.end());\n\tvector<int> r;\n\tfor(char c : s)\n\t\tr.push_back(c-'0');\n\treturn r;\n}\n\nvector<int> add(vector<int> a, vector<int> b) {\n\tvector<int> c(max(a.size(), b.size()));\n\tfor(int i=0; i<c.size(); ++i) {\n\t\tif(i<a.size())\n\t\t\tc[i]+=a[i];\n\t\tif(i<b.size())\n\t\t\tc[i]+=b[i];\n\t\tif(c[i]<=9)\n\t\t\tcontinue;\n\t\tif(i+1>=c.size())\n\t\t\tc.push_back(0);\n\t\tc[i+1]+=c[i]/10;\n\t\tc[i]%=10;\n\t}\n\treverse(c.begin(), c.end());\n\treturn c;\n}\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\n\tint l;\n\tstring n;\n\tcin >> l >> n;\n\tvector<int> p;\n\tfor(int i=1; i<l; ++i)\n\t\tif(n[i]^'0')\n\t\t\tp.push_back(i);\n\tvector<int> ans;\n\tint nt=0;\n\tfor(int pi : p) {\n\t\tif(nt>9||pi<l/2)\n\t\t\tcontinue;\n\t\tvector<int> va=stv(n.substr(0, pi)), vb=stv(n.substr(pi)), vc=add(va, vb);\n\t\t/*\n\t\tfor(int i : va)\n\t\t\tcout << i << \" \";\n\t\tcout << endl;\n\t\tfor(int i : vb)\n\t\t\tcout << i << \" \";\n\t\tcout << endl;\n\t\tfor(int i : vc)\n\t\t\tcout << i << \" \";\n\t\tcout << endl;\n\t\t*/\n\t\tif(!ans.size()||ans.size()>vc.size()||ans.size()==vc.size()&&ans>vc)\n\t\t\tans=vc;\n\t\t++nt;\n\t}\n\treverse(p.begin(), p.end());\n\tnt=0;\n\tfor(int pi : p) {\n\t\tif(nt>9||pi>l/2)\n\t\t\tcontinue;\n\t\tvector<int> va=stv(n.substr(0, pi)), vb=stv(n.substr(pi)), vc=add(va, vb);\n\t\tif(!ans.size()||ans.size()>vc.size()||ans.size()==vc.size()&&ans>vc)\n\t\t\tans=vc;\n\t\t++nt;\n\t}\n\tfor(int ai : ans)\n\t\tcout << ai;\n}"], "input": "", "output": "", "tags": ["greedy", "implementation", "strings"], "dificulty": "1500", "interactive": false}