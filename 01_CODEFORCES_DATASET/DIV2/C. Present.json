{"link": "https://codeforces.com//contest/460/problem/C", "problemId": "12990", "problem_idx": "C", "shortId": "460C", "contest_number": "460", "problem_submissions": {"D": [7530164, 7529507, 7528611, 7531906, 9930337, 7527593, 7534014], "C": [7526812, 7524766, 7521791, 7520756, 7523061, 7523333, 7519930, 7524625, 7521906, 7524675, 7526387, 7519659, 7530606, 7536442, 7525938, 7537429, 7537409, 7528296, 7527111, 7533847], "B": [7521233, 7521796, 7519529, 7518861, 7531950, 7520294, 7521371, 7521865, 7520350, 7521538, 7521105, 7520402, 7520462, 7520767, 7520287, 7520787, 7523620], "A": [7518028, 7517645, 7517427, 7517408, 7518105, 7517647, 7522206, 7517963, 7518604, 7517479, 7517687, 7521876, 7518378, 7518558, 7517897, 7517534, 7517657, 7521651], "E": [7532772, 7533008, 7530765]}, "name": "C. Present", "statement": "Little beaver is a beginner programmer, so informatics is his favorite\r\nsubject. Soon his informatics teacher is going to have a birthday and\r\nthe beaver has decided to prepare a present for her. He planted flowers\r\nin a row on his windowsill and started waiting for them to grow.\r\nHowever, after some time the beaver noticed that the flowers stopped\r\ngrowing. The beaver thinks it is bad manners to present little flowers.\r\nSo he decided to come up with some solutions. There are days left to the\r\nbirthday. The height of the -th flower (assume that the flowers in the\r\nrow are numbered from to from left to right) is equal to at the moment.\r\nAt each of the remaining days the beaver can take a special watering and\r\nwater contiguous flowers (he can do that only once at a day). At that\r\neach watered flower grows by one height unit on that day. The beaver\r\nwants the height of the smallest flower be as large as possible in the\r\nend. What maximum height of the smallest flower can he get?\r\n", "solutions": ["#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int Maxn=100005;\nint n,m,w,h[Maxn],v[Maxn];\nbool Check(int lowh)\n{\n    int flag=0;\n    for(int i=1;i<=w;i++)\n    {\n        v[i]=max(0,lowh-h[i]-v[i-1])+v[i-1];\n        if(v[i]>m)return false;\n    }\n    for(int i=w+1;i<=n;i++)\n    {\n        v[i]=max(0,lowh-h[i]-(v[i-1]-v[i-w]))+v[i-1];\n        if(v[i]>m)return false;\n    }\n    if(flag)return false;\n    return true;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&w);\n    for(int i=1;i<=n;i++)scanf(\"%d\",h+i);\n    int l=1,r=0x3f3f3f3f;\n    while(l<r)\n    {\n        memset(v,0,sizeof(v));\n        int mid=(l+r)/2;\n        if(Check(mid))l=mid+1;\n        else r=mid;\n    }\n    printf(\"%d\\n\",l-1);\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "greedy"], "dificulty": "1700", "interactive": false}