{
    "link": "https://codeforces.com//contest/421/problem/D",
    "problemId": "8696",
    "problem_idx": "D",
    "shortId": "421D",
    "contest_number": "421",
    "problem_submissions": {
        "D": [
            6443401,
            6444205,
            6444726,
            6446063,
            6446478,
            6446284,
            6446050,
            6444829,
            6454312,
            6446753,
            6445453,
            6450944,
            6450576,
            6450561,
            6443659,
            6449123,
            6444238,
            6451898,
            6452897,
            6444608
        ],
        "E": [
            6445907,
            6454320,
            6451461,
            6451356
        ],
        "B": [
            6441973,
            6441563,
            6441704,
            6441641,
            6441800,
            6442174,
            6441468,
            6441877,
            6442830,
            6440426,
            6441645,
            6441812,
            6441558,
            6441555,
            6441997,
            6441532,
            6442176,
            6442193
        ],
        "A": [
            6440466,
            6440550,
            6440945,
            6440732,
            6440837,
            6440790,
            6440596,
            6440584,
            6445521,
            6440258,
            6440321,
            6440470,
            6440634,
            6440611,
            6440374,
            6440525,
            6440392,
            6440664
        ],
        "C": [
            6445332,
            6444054,
            6443650,
            6444031,
            6444561,
            6446258,
            6444406,
            6445050,
            6443582,
            6444686,
            6444343,
            6444298,
            6443933,
            6444277,
            6449346
        ]
    },
    "name": "D. Bug in Code",
    "statement": "Recently a serious bug has been found in the FOS code. The head of the F\r\ncompany wants to find the culprit and punish him. For that, he set up an\r\norganizational meeting, the issue is: who\u2019s bugged the code? Each of the\r\ncoders on the meeting said: \u2019I know for sure that either or did it!\u2019The\r\nhead of the company decided to choose two suspects and invite them to\r\nhis office. Naturally, he should consider the coders\u2019 opinions. That\u2019s\r\nwhy the head wants to make such a choice that at least of coders agreed\r\nwith it. A coder agrees with the choice of two suspects if at least one\r\nof the two people that he named at the meeting was chosen as a suspect.\r\nIn how many ways can the head of F choose two suspects?Note that even if\r\nsome coder was chosen as a suspect, he can agree with the head\u2019s choice\r\nif he named the other chosen coder at the meeting.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <vector>\n#include <map>\n#include <cstdio>\n\nusing namespace std;\nmap < pair<int, int>, int > mp;\nint a[1234567], b[1234567];\nint main() {\n  int n, p;\nscanf(\"%d %d\", &n, &p);\nvector <int> cnt(n, 0);\nfor (int i = 0; i < n; i++) {\n  int x, y;\nscanf(\"%d %d\", &x, &y);\nx--; y--;\ncnt[x]++; cnt[y]++;\nif (x > y) swap(x, y);\na[i] = x; b[i] = y;\nmp[make_pair(x, y)]++;\n}\nvector <int> cnt2(cnt.begin(), cnt.end());\nsort(cnt.begin(), cnt.end());\nlong long ans = 0;\nint j  = n;\nfor (int i = 0; i < n; i++) {\n  while (j - 1 >= i && cnt[i] + cnt[j - 1] >= p) j--;\nif (j < i + 1) j = i + 1;\nans += n - j;\n}\nfor (int i = 0; i < n; i++) {\nif (cnt2[a[i]] + cnt2[b[i]] < p) continue;\nif (cnt2[a[i]] + cnt2[b[i]] - mp[make_pair(a[i], b[i])] < p) ans--;\nmp[make_pair(a[i], b[i])] = 0;\n}\nprintf(\"%I64d\\n\", ans);\n  return 0;\n\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "data structures",
        "sortings"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Bug in Code.json",
    "editorial_link": "https://codeforces.com//blog/entry/11871",
    "editorial": "Lets construct an undirected graph, the vertices of the graph are the persons, there is an edge between two persons if there are claim of some person about these two persons. Now we can describe the problem on this graph. We need to find the number of such pairs of vertices that at least p edges are adjacent to them.\n\nHow to count such pairs. Just for each vertex v to calculate the number of vertices u such that d[v]?+?d[u]???p, then we should consider all the adjacent vertices correctly. Iterate through all the edges and subtract such the vertices from the answer. Then iterate through adjacent vertices and add only such of them that is needed to be added.\n\nPay attention to multiple edges, they should be considered very carefully."
}