{"link": "https://codeforces.com//contest/58/problem/A", "problemId": "302", "problem_idx": "A", "shortId": "58A", "contest_number": "58", "problem_submissions": {"D": [270336, 270674, 270811, 270851, 270887, 271132, 271142, 271330, 271389, 271766, 271154], "C": [269533, 270101, 270025, 269917, 270200, 269750, 270685, 270162, 270751, 270141, 269530, 269933, 269606, 269716, 271773], "B": [268900, 268864, 269230, 269259, 269499, 268848, 268646, 268854, 269609, 270244, 268607, 269049, 268695, 268750, 269087, 268968], "A": [268535, 268577, 268985, 268522, 268973, 268444, 268395, 268432, 268537, 268387, 268418, 268427, 268476, 268567, 268554]}, "name": "A. Chat room", "statement": "Vasya has recently learned to type and log on to the Internet. He\r\nimmediately entered a chat room and decided to say hello to everybody.\r\nVasya typed the word . It is considered that Vasya managed to say hello\r\nif several letters can be deleted from the typed word so that it\r\nresulted in the word \"\". For example, if Vasya types the word \"\", it\r\nwill be considered that he said hello, and if he types \"\", it will be\r\nconsidered that Vasya got misunderstood and he didn\u2019t manage to say\r\nhello. Determine whether Vasya managed to say hello by the given word .\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n#define MM(a , x) memset(a , x , sizeof(a))\n#define sqr(x) ((x) * (x))\n#define abs(x) ((x > 0) ? (x) : -(x))\n#define REP(i , n) for ((i) = 0; (i) < (n); ++(i))\n#define FOR(i , a , b) for ((i) = (a); (i) <= (b); ++(i))\n#define FORD(i , a , b) for ((i) = (a); (i) >= (b); --(i))\ntypedef long long LL;\n\nstring st , pat;\n\nint main()\n{\n\tcin >> st;\n\tpat += \"hello\";\n\tint i , j , k;\n\tj = 0;\n\tREP (i , st.length())\n\t{\n\t\tif (st[i] == pat[j]) j++;\n\t\tif (j == 5) break;\n\t}\n\tif (j == 5) printf(\"YES\\n\"); else printf(\"NO\\n\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "strings"], "dificulty": "1000", "interactive": false}