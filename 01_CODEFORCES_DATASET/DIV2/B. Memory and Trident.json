{"link": "https://codeforces.com//contest/712/problem/B", "problemId": "71115", "problem_idx": "B", "shortId": "712B", "contest_number": "712", "problem_submissions": {"D": [20507730, 20508895, 20509129, 20505101, 20510051, 20509882, 20510530, 20511320, 20512204, 20511999, 20512122, 20512350, 20512028, 20513044, 20512560], "C": [20505002, 20505522, 20506144, 20510391, 20505597, 20504534, 20504843, 20508941, 20505398, 20506289, 20507889, 20508095, 20508629, 20504557, 20504038], "B": [20502570, 20502790, 20502869, 20506557, 20504008, 20505714, 20503852, 20502736, 20502126, 20503884, 20504083, 20503644, 20503939, 20502344, 20505823], "A": [20501558, 20501769, 20503817, 20505672, 20502269, 20506798, 20505565, 20501411, 20501490, 20502265, 20504252, 20502843, 20503826, 20501859, 20501663]}, "name": "B. Memory and Trident", "statement": "Memory is performing a walk on the two-dimensional plane, starting at\r\nthe origin. He is given a string with his directions for motion: An \u201d\r\nindicates he should move one unit left. An \u201d indicates he should move\r\none unit right. A \u201d indicates he should move one unit up. A \u201d indicates\r\nhe should move one unit down.But now Memory wants to end at the origin.\r\nTo do this, he has a special trident. This trident can replace any\r\ncharacter in with any of \u201d, \u201d, \u201d, or \u201d. However, because he doesn\u2019t want\r\nto wear out the trident, he wants to make the minimum number of edits\r\npossible. Please tell Memory what is the minimum number of changes he\r\nneeds to make to produce a string that, when walked, will end at the\r\norigin, or if there is no such string.\r\n", "solutions": ["#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<vector>\nusing namespace std;\n\n#define maxn 100100\nchar s[maxn];\nint n;\n\nint main()\n{\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tif (n&1)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tint x=0,y=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif (s[i]=='L') x++;\n\t\tif (s[i]=='R') x--;\n\t\tif (s[i]=='U') y++;\n\t\tif (s[i]=='D') y--;\n\t}\n\tint ans=(abs(x)+abs(y))/2;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n\t"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1100", "interactive": false}