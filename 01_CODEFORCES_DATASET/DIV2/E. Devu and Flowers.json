{"link": "https://codeforces.com//contest/451/problem/E", "problemId": "11653", "problem_idx": "E", "shortId": "451E", "contest_number": "451", "problem_submissions": {"E": [7231717, 7231672, 7229188, 7229828, 7229144, 7232326, 7229495, 7238238, 7238167, 7229116, 7226633, 7227263, 7247662], "D": [7225617, 7224925, 7225848, 7230836, 7232036, 7232208, 7233333, 7231670, 7237781, 7230929, 7225387, 7226229, 7225552, 7225891, 7226960, 7225792, 7226635, 7227303], "C": [7223372, 7224029, 7230879, 7223425, 7226587, 7227220, 7237498, 7226365, 7222867, 7234088, 7223197, 7222284, 7224237, 7223958, 7224798, 7224092, 7223679, 7225151], "B": [7221027, 7219770, 7219898, 7220171, 7221061, 7220518, 7220494, 7220841, 7220379, 7220295, 7219145, 7221007, 7221160, 7222507, 7220416, 7221272, 7220758], "A": [7217849, 7218406, 7218033, 7217926, 7218217, 7218264, 7218470, 7218605, 7218503, 7219664, 7217957, 7218042, 7220324, 7218265, 7218702, 7218555]}, "name": "E. Devu and Flowers", "statement": "Devu wants to decorate his garden with flowers. He has purchased boxes,\r\nwhere the -th box contains flowers. All flowers in a single box are of\r\nthe same color (hence they are indistinguishable). Also, no two boxes\r\nhave flowers of the same color.Now Devu wants to select flowers from the\r\nboxes to decorate his garden. Devu would like to know, in how many\r\ndifferent ways can he select the flowers from each box? Since this\r\nnumber may be very large, he asks you to find the number modulo . Devu\r\nconsiders two ways different if there is at least one box from which\r\ndifferent number of flowers are selected in these two ways.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> pii;\n#define fst first\n#define snd second\n#define mp make_pair\n\n#define rep(i, n) for(int i = 0; i < n; ++i)\n\n#define ri(x) scanf(\"%d\", &x)\n#define rii(x,y) scanf(\"%d%d\", &x, &y)\n#define riii(x,y,z) scanf(\"%d%d%d\", &x, &y, &z)\n#define ria(a, n) rep(_, n) scanf(\"%d\", &a[_])\n\n#define pi(x) printf(\"%d\\n\", x)\n#define pia(a, n) rep(_, n) printf(\"%d%c\", a[_], _==n-1?'\\n': ' ')\n\n#define Ttimes int T; scanf(\"%d\", &T); while(T--)\n\ntypedef long long LL;\nvoid gcd(LL a, LL b, LL& d, LL& x, LL& y) {\n    if(!b){ d = a; x = 1; y = 0; }\n    else{ gcd(b, a%b, d, y, x); y -= x*(a/b); }\n}\n\nLL inv(LL a, LL n) {\n    LL d, x, y;\n    gcd(a, n, d, x, y);\n    return d == 1 ? ( x + n ) % n : -1;\n}\n\nconst long long mod = 1000000007;\n\nLL ii[22];\nlong long h(int x, long long n) {\n    long long ret = 1;\n    long long a = x + n - 1, b = x - 1;\n    a %= mod;\n    for(int i = 1; i <= b; ++i) {\n        ret = ret * (a - i + 1);\n        ret %= mod;\n    }\n    for(int i = 1; i <= b; ++i) {\n        ret = ret * ii[i];\n        ret %= mod;\n    }\n    if(ret < 0) ret += mod;\n\n    //cout << \"h \" << x << ' ' << n << \": \" << ret << endl;\n    return ret;\n}\n\nlong long a[22];\nint n; long long s;\n\nlong long f(int b) {\n    long long t = s;\n    for(int i = 0; i < n; ++i) {\n        if(b&(1<<i)) t -= a[i]+1;\n        if(t < 0) return 0;\n    }\n    long long ret = h(n, t);\n\n    return ret;\n}\n\nint main() {\n\n    for(int i = 1; i < 22; ++i) {\n        ii[i] = inv(i, mod);\n    }\n\n    cin >> n >> s;\n    rep(i, n) cin >> a[i];\n    long long ans = 0;\n    for(int i = 0; i < (1<<n); ++i) {\n        int c = __builtin_popcount(i);\n        long long t = f(i);\n        if(c&1) ans = ans - t;\n        else ans = ans + t;\n        ans %= mod;\n        if(ans < 0) ans += mod;\n    }\n    cout << ans << endl;\n    return 0;\n}"], "input": "", "output": "", "tags": ["bitmasks", "combinatorics", "number theory"], "dificulty": "2300", "interactive": false}