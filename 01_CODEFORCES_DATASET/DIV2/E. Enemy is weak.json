{"link": "https://codeforces.com//contest/61/problem/E", "problemId": "330", "problem_idx": "E", "shortId": "61E", "contest_number": "61", "problem_submissions": {"E": [297557, 298354, 299765, 298760, 299302, 300026, 298805, 298830, 833084, 299976, 299390], "C": [299344, 297579, 298009, 298379, 297522, 299902], "D": [298617, 297917, 298753, 297829, 297376, 298013, 298270, 297930, 300268, 300239, 298137, 298462, 301286, 299908, 298694, 298971], "B": [297301, 297249, 297156, 300780, 297065, 300083, 296997, 297227, 297390, 297332, 298348, 297120, 297793, 299907, 297445], "A": [296624, 296901, 296650, 296734, 296546, 296509, 296491, 296685, 296595, 296884, 296502, 296659, 296457, 299906, 296765, 296472]}, "name": "E. Enemy is weak", "statement": "The Romans have attacked again. This time they are much more than the\r\nPersians but Shapur is ready to defeat them. He says: \"A lion is never\r\nafraid of a hundred sheep\". Nevertheless Shapur has to find weaknesses\r\nin the Roman army to defeat them. So he gives the army a weakness\r\nnumber.In Shapur\u2019s opinion the weakness of an army is equal to the\r\nnumber of triplets such that and where is the power of man standing at\r\nposition . The Roman army has one special trait powers of all the people\r\nin it are distinct.Help Shapur find out how weak the Romans are.\r\n", "solutions": ["#include <stdio.h>\n#include <algorithm>\nusing namespace std;\n\n#define maxn 1111111\n\nint a[maxn], b[maxn], c[maxn], n, i, j;\nlong long A[4][maxn];\n\nvoid modify(int i, int j, long long k){\n\twhile (j<=n){\n\t\tA[i][j] += k;\n\t\tj = (j | (j-1))+1;\n\t}\n}\n\nlong long findsum(int ind, int j){\n\tlong long res = 0;\n\twhile(j){\n\t\tres += A[ind][j];\n\t\tj = (j & (j-1));\n\t}\n\treturn res+(!ind);\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(i = 1; i<=n; i++){\n\t\tscanf(\"%d\", &a[i]);\n\t\tb[i] = -a[i];\n\t}\n\tsort(b+1, b+n+1);\n\tfor(i = 1; i<=n; i++){\n\t\ta[i] = lower_bound(b+1, b+n+1, -a[i])-b;\n\t}\n//\tmemset(A, 0, sizeof(A));\n\tfor(i = 1; i<=n; i++){\n\t\tfor(j = 1; j<=3; j++) modify(j, a[i], findsum(j-1, a[i]-1));\n\t}\n\tprintf(\"%I64d\\n\", findsum(3, n));\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "trees"], "dificulty": "1900", "interactive": false}