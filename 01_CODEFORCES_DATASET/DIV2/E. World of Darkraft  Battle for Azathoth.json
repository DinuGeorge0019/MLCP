{
    "link": "https://codeforces.com//contest/1321/problem/E",
    "problemId": "551764",
    "problem_idx": "E",
    "shortId": "1321E",
    "contest_number": "1321",
    "problem_submissions": {
        "F": [
            72202118,
            72198416
        ],
        "C": [
            72190499,
            72170310,
            72171527,
            72174502,
            72175483,
            72175401,
            72175000,
            72176189,
            72171238,
            72175883,
            72177727,
            72183189,
            72179214,
            72177328,
            72279003,
            72174053,
            72178214,
            72178070,
            72179504,
            72179152,
            72178320
        ],
        "D": [
            72183268,
            72175184,
            72177797,
            72179168,
            72180779,
            72181426,
            72180644,
            72182068,
            72185885,
            72181701,
            72186041,
            72179938,
            72186063,
            72181326,
            72178168,
            72183258,
            72185462,
            72184740,
            72187220,
            72184221
        ],
        "E": [
            72180529,
            72186287,
            72184508,
            72188609,
            72188377,
            72190998,
            72191625,
            72192736,
            72180513,
            72191278,
            72214882,
            72192856,
            72193973,
            72192866,
            72196349,
            72194892,
            72194887,
            72194595,
            72195594,
            72195787
        ],
        "A": [
            72173172,
            72167016,
            72167934,
            72167935,
            72169001,
            72167363,
            72167505,
            72167646,
            72189321,
            72167844,
            72168400,
            72167413,
            72168727,
            72167365,
            72278985,
            72168080,
            72169683,
            72169011,
            72168321,
            72167972,
            72167569
        ],
        "B": [
            72168656,
            72168025,
            72169238,
            72170413,
            72171089,
            72169057,
            72169880,
            72170679,
            72187620,
            72171095,
            72171827,
            72169625,
            72172515,
            72169721,
            72170650,
            72172323,
            72173484,
            72170425,
            72174186,
            72171595
        ]
    },
    "name": "E. World of Darkraft  Battle for Azathoth",
    "statement": "Roma is playing a new expansion for his favorite game World of Darkraft.\r\nHe made a new character and is going for his first grind.Roma has a\r\nchoice to buy of n different weapons and of m different armor sets.\r\nWeapon i has attack modifier a_i and is worth ca_i coins, and armor set\r\nj has defense modifier b_j and is worth cb_j coins.After choosing his\r\nequipment Roma can proceed to defeat some monsters. There are p monsters\r\nhe can try to defeat. Monster k has defense x_k, attack y_k and\r\npossesses z_k coins. Roma can defeat a monster if his weapon\u2019s attack\r\nmodifier is larger than the monster\u2019s defense, and his armor set\u2019s\r\ndefense modifier is larger than the monster\u2019s attack. That is, a monster\r\nk can be defeated with a weapon i and an armor set j if a_i > x_k and\r\nb_j > y_k. After defeating the monster, Roma takes all the coins from\r\nthem. During the grind, Roma can defeat as many monsters as he likes.\r\nMonsters do not respawn, thus each monster can be defeated at most\r\none.Thanks to Roma\u2019s excessive donations, we can assume that he has an\r\ninfinite amount of in-game currency and can afford any of the weapons\r\nand armor sets. Still, he wants to maximize the profit of the grind. The\r\nprofit is defined as the total coins obtained from all defeated monsters\r\nminus the cost of his equipment. Note that Roma purchase a weapon and an\r\narmor set even if he can not cover their cost with obtained coins.Help\r\nRoma find the maximum profit of the grind.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define in ({int x=0;int c=getchar(),n=0;for(;!isdigit(c);c=getchar()) n=(c=='-');for(;isdigit(c);c=getchar()) x=x*10+c-'0';n?-x:x;})\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nint rnd(int l,int r){return l+rng()%(r-l+1);}\n#define fasty ios_base::sync_with_stdio(0),cin.tie(0);\n#define forinc(a,b,c) for(int a=b,_c=c;a<=_c;++a)\n#define fordec(a,b,c) for(int a=b,_c=c;a>=_c;--a)\n#define forv(a,b) for(auto&a:b)\n#define fi first\n#define se second\n#define pb push_back\n#define ii pair<int,int>\n#define mt make_tuple\n#define all(a) a.begin(),a.end()\n#define reset(f, x) Bset(f, x, sizeof(f))\n#define bit(x,i) ((x>>(i-1))&1)\n#define on(x,i) (x|(1ll<<(i-1)))\n#define off(x,i) (x&~(1<<(i-1)))\n#define gg exit(0);\n\nconst int N=1000010;\n\nint n,m,p;\nint a[N],b[N];\nint T[N*4],B[N*4];\nstruct pack{\n    int fi,se,c;\n}e[N];\n\nvoid build(int s,int l,int r){\n    if(l==r){\n        T[s]=T[s]-b[l+1];\n        return;\n    }\n    int m=(l+r)/2;\n    build(2*s,l,m); build(2*s+1,m+1,r);\n    T[s]=max(T[2*s],T[2*s+1]);\n}\nvoid push(int s){\n    if(!B[s]) return;\n    T[2*s]+=B[s]; T[2*s+1]+=B[s];\n    B[2*s]+=B[s]; B[2*s+1]+=B[s];\n    B[s]=0;\n}\nvoid upd(int s,int l,int r,int u,int v,int x){\n    if(l>v||u>r) return;\n    if(u<=l&&r<=v){\n        T[s]+=x;\n        B[s]+=x;\n        return;\n    }\n    push(s);\n    int m=(l+r)/2;\n    upd(2*s,l,m,u,v,x); upd(2*s+1,m+1,r,u,v,x);\n    T[s]=max(T[2*s],T[2*s+1]);\n}\n\nvoid solve(){\n    sort(e+1,e+p+1,[](pack i,pack j){\n        return i.fi<j.fi;\n    });\n    fordec(i,1e6,1){\n        if(b[i+1])  b[i]=min(b[i],b[i+1]);\n        if(!b[i])   b[i]=b[i+1];\n    }\n    forinc(i,1,1e6) if(b[i]) n=i-1;\n    build(1,0,n);\n    int j=1,ans=-(1ll<<62);\n    forinc(i,1,1e6) if(a[i]){\n        while(j<=p && e[j].fi<i){\n            if(e[j].se<=n)\n                upd(1,0,n,e[j].se,n,e[j].c);\n            ++j;\n        }\n        ans=max(ans,T[1]-a[i]);\n    }\n    cout<<ans<<\"\\n\";\n}\n\nmain(){\n    #define task \"TASK\"\n    //freopen(task\".inp\",\"r\",stdin);\n    //freopen(task\".out\",\"w\",stdout);\n\n    n=in,m=in,p=in;\n    forinc(i,1,n){\n        int x=in,y=in;\n        a[x]=!a[x] ? y : min(a[x],y);\n    }\n    forinc(i,1,m){\n        int x=in,y=in;\n        b[x]=!b[x] ? y : min(b[x],y);\n    }\n    forinc(i,1,p) e[i]={in,in,in};\n    solve();\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "sortings",
        "two pointers"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. World of Darkraft  Battle for Azathoth.json",
    "editorial_link": "https://codeforces.com//blog/entry/74431",
    "editorial": "Let Sa\n be the set of monsters which may be defeated with a weapon having attack a\n. Then the profit we get, if we use weapon i\n with attack a\n and armor j\n with defense b\n, is ?cai?cbj+(the sum of zk over all monsters k from the set Sa having yk<b)\n.\n\nWe will iterate on weapons in non-descending order of their attack values and maintain Sa\n. For each armor option, maintain the value of Dj=?cbj+(total profit from monsters having attack less than bj)\n. If armor sets are sorted by their defense value, adding a new monster into Sa\n adds some value on the suffix of Dj\n. So we can maintain the values of Dj\n in a segment tree.\n\nSo the solution is:\n\nBuild a segment tree on values of ?cbj\n, where all armors are sorted by bj\n.\nIterate on weapons and monsters in sorted order (sort by ai\n/xk\n in non-descending order). For each new weapon i\n we should add all monsters xk<ai\n which were not added yet (we can maintain a pointer on the last added monster to find them quickly).\nAdding a monster means adding zk\n on suffix of Di\n.\nAfter that, for the current weapon i\n we may try ?cai+maxDj\n as the answer."
}