{
    "link": "https://codeforces.com//contest/353/problem/B",
    "problemId": "3644",
    "problem_idx": "B",
    "shortId": "353B",
    "contest_number": "353",
    "problem_submissions": {
        "E": [
            4734608,
            4735346,
            4733123,
            4737143,
            4736547,
            4742461,
            4742408
        ],
        "D": [
            4732406,
            4731843,
            4732120,
            4730587,
            4734474,
            4733362,
            4732298,
            4733722,
            4732919,
            4733388,
            4737051,
            4734992,
            4735113,
            4734496,
            4731987,
            4733739
        ],
        "B": [
            4730384,
            4730404,
            4729843,
            4733146,
            4728118,
            4733276,
            4731155,
            4728754,
            4730614,
            4729913,
            4731086,
            4732452,
            4732464,
            4729592,
            4732612,
            4730638,
            4733247,
            4732145
        ],
        "C": [
            4727160,
            4729197,
            4728938,
            4728842,
            4730078,
            4728441,
            4729412,
            4730353,
            4729606,
            4731302,
            4728675,
            4728539,
            4728797,
            4730952,
            4729543,
            4729905,
            4733939,
            4730129
        ],
        "A": [
            4726296,
            4726231,
            4726277,
            4727313,
            4726417,
            4726322,
            4726817,
            4726268,
            4726421,
            4726333,
            4726847,
            4726895,
            4726809,
            4726263,
            4728018,
            4726437,
            4734686,
            4726429
        ]
    },
    "name": "B. Two Heaps",
    "statement": "Valera has cubes, each cube contains an integer from to . He arbitrarily\r\nchooses cubes and puts them in the first heap. The remaining cubes form\r\nthe second heap. Valera decided to play with cubes. During the game he\r\ntakes a cube from the first heap and writes down the number it has. Then\r\nhe takes a cube from the second heap and write out its two digits near\r\ntwo digits he had written (to the right of them). In the end he obtained\r\na single fourdigit integer the first two digits of it is written on the\r\ncube from the first heap, and the second two digits of it is written on\r\nthe second cube from the second heap.Valera knows arithmetic very well.\r\nSo, he can easily count the number of distinct fourdigit numbers he can\r\nget in the game. The other question is: how to split cubes into two\r\nheaps so that this number (the number of distinct fourdigit integers\r\nValera can get) will be as large as possible?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n \nint poc[100];\n\nint main() {\n    cin.sync_with_stdio(0);\n    int N,a;\n    cin >> N;\n    vector<int> V(2*N);\n    vector< vector<int> > pos(100);\n    for(int i =0; i < 2*N; i++) {\n        cin >> a;\n        V[i] =a;\n        pos[a].push_back(i);\n        poc[a]++;}\n    \n    int ansA =0, ansB =0;\n    vector<int> S(2*N);\n    for(int i =0; i < 100; i++) if(poc[i] > 1) {\n        ansA++, ansB++;\n        S[pos[i][0]] =0;\n        S[pos[i][1]] =1;}\n    for(int i =0; i < 100; i++) if(poc[i] == 1) {\n        if(ansA < ansB) {ansA++; S[pos[i][0]] =0;}\n        else {ansB++; S[pos[i][0]] =1;}}\n    cout << ansA*ansB << \"\\n\";\n\n    for(int i =0; i < 100; i++) for(int j =2; j < poc[i]; j++) {\n        if(ansA < N) {ansA++; S[pos[i][j]] =0;}\n        else {ansB++; S[pos[i][j]] =1;}}\n    for(int i =0; i < 2*N; i++) cout << S[i]+1 << ((i == 2*N-1)?\"\\n\":\" \");\n    return 0;}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "sortings"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Two Heaps.json",
    "editorial_link": "https://codeforces.com/blog/entry/9145",
    "editorial": "Letâs say for shortness, that we put numbers, that are painted on cubes,\r\nin piles, instead of cubes themselves. Note, that the answer is the\r\nproduct of , where is the number of different numbers in the -th pile.\r\nLetâs consider that all numbers are different. In this case the answer\r\nis . Now, letâs suppose that we have two equal numbers and all the other\r\nare different. Then, if we put them in different piles, the answer will\r\nbe , but if we put them in one . Obviously, the first case give greater\r\nproduct. Thinking in similar manner, you can conclude, that we should do\r\nthe following. Take numbers, that appear more than once, and put one of\r\nthem in the first pile, one of them in the second pile and the other put\r\naside. After that, divide the numbers, that appears once, in two equal\r\npart and put the first part in the first pile and second part in the\r\nsecond pile. Finally, take the numbers, that we put aside, and separate\r\nthem in two pile in any kind.\r\n",
    "hint": []
}