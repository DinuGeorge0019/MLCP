{"link": "https://codeforces.com//contest/1582/problem/E", "problemId": "1156635", "problem_idx": "E", "shortId": "1582E", "contest_number": "1582", "problem_submissions": {"G": [133300654, 132904411, 132903819, 132921500, 132938189, 132915561, 132904925, 132893999, 132930384, 132930246, 132930119, 132929885, 132929830, 132917984, 132923122, 132922486, 132909943, 132922580, 132929375, 132930555, 133312799, 132969396], "F2": [132908314, 132865018, 132905309, 132899324, 132901682, 132900235, 132911727, 132926934, 132906558, 132909549, 132893391, 132884523, 132901241, 132906554, 132898256, 133312622, 132970055, 132969976, 132904321], "F1": [132881252, 132864382, 132880627, 132888291, 132872964, 132880051, 132887180, 132892561, 132900410, 132897751, 132862757, 132872739, 132870584, 132888250, 132889092, 132882038, 132891013, 132872187, 132887941, 133312616, 132891504], "E": [132874913, 132878099, 132874176, 132880923, 132882227, 132876672, 132871740, 132883982, 132905776, 132893914, 132871055, 132859358, 132881562, 132870144, 132885086, 132894857, 132869674, 132887914, 132877059, 133312375, 132888626], "D": [132866716, 132891541, 132886280, 132871648, 132863103, 132871610, 132863993, 132875189, 132911684, 132876113, 132889182, 132879862, 132890109, 132872530, 132875475, 132891337, 132884986, 132886500, 132884112, 133312126, 132970973, 132882901], "C": [132859265, 132871828, 132860284, 132861165, 132856817, 132935747, 132866931, 132863031, 132863018, 132893464, 132893294, 132866549, 132861428, 132858872, 132861957, 132863927, 132861005, 132863860, 132868896, 133312107, 132858386], "B": [132856790, 132867123, 132856747, 132855505, 132854485, 132859085, 132858770, 132858595, 132856173, 132857637, 132856186, 132859468, 132855951, 132855099, 132854810, 132855351, 132856357, 132855765, 132859435, 133312040, 132970544, 132854847], "A": [132855030, 132855528, 132854523, 132892082, 132854129, 132904251, 132854758, 132854419, 132906994, 132854763, 132856077, 132854737, 132984138, 132854196, 132859118, 132854306, 132855186, 132865041, 132857131, 133311808, 132970350, 132854128]}, "name": "E. Pchelyonok and Segments", "statement": "Pchelyonok decided to give Mila a gift. Pchelenok has already bought an\r\narray a of length n, but gifting an array is too common. Instead of\r\nthat, he decided to gift Mila the segments of that array!Pchelyonok\r\nwants his gift to be beautiful, so he decided to choose k\r\nnon-overlapping segments of the array [l_1,r_1], [l_2,r_2],\r\nldots [l_k,r_k] such that: the length of the first segment [l_1,r_1] is\r\nk, the length of the second segment [l_2,r_2] is k-1,\r\nldots, the length of the k-th segment [l_k,r_k] is 1 for each i<j, the\r\ni-th segment occurs in the array earlier than the j-th (i.e. r_i<l_j)\r\nthe sums in these segments are strictly increasing (i.e. let sum(l\r\nldots r) =\r\nsum\r\nlimits_{i=l}^{r} a_i the sum of numbers in the segment [l,r] of the\r\narray, then sum(l_1\r\nldots r_1) < sum(l_2\r\nldots r_2) <\r\nldots < sum(l_k\r\nldots r_k)). Pchelenok also wants his gift to be as beautiful as\r\npossible, so he asks you to find the maximal value of k such that he can\r\ngive Mila a gift!\r\n", "solutions": ["#ifdef _MSC_VER\n#define _CRT_SECURE_NO_WARNINGS\n#endif\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nint main()\n{\n#ifdef _MSC_VER\n\tfreopen(\"e.in\", \"r\", stdin);\n#endif\n\tstd::ios::sync_with_stdio(false);\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> a(n);\n\t\tvector<ll> s0(n + 1);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tcin >> a[i];\n\t\t\ts0[i + 1] = s0[i] + a[i];\n\t\t}\n\t\tauto s = [&](int i, int j) {\n\t\t\treturn s0[j + 1] - s0[i];\n\t\t};\n\t\tint m = 0;\n\t\twhile (m * (m + 1) / 2 <= n) {\n\t\t\t++m;\n\t\t}\n\t\tm += 2;\n\t\tconst ll INF = (1LL << 62);\n\t\tvector<vector<ll>> f(m + 1, vector<ll>(m));\n\t\tvector<vector<ll>*> g(n + 1);\n\t\tfor (int i = 0; i < g.size(); ++i) {\n\t\t\tg[i] = &f[i % (m + 1)];\n\t\t}\n\t\t(*g[n])[0] = INF;\n\t\tfor (int i = n - 1; i >= 0; --i) {\n\t\t\tauto& cur = (*g[i]);\n\t\t\tcur[0] = INF;\n\t\t\tauto& prev = (*g[i + 1]);;\n\t\t\tfor (int k = 1; k < m; ++k) {\n\t\t\t\tcur[k] = prev[k];\n\t\t\t\tif (i + k - 1 < n) {\n\t\t\t\t\tll s2 = s(i, i + k - 1);\n\t\t\t\t\tif (s2 < (*g[i + k])[k - 1]) {\n\t\t\t\t\t\tcur[k] = max(cur[k], s2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ret = 1;\n\t\tfor (int k = 1; k < m; ++k) {\n\t\t\tif (f[0][k] > 0) {\n\t\t\t\tret = k;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ret);\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "dp", "greedy", "math"], "dificulty": "2000", "interactive": false}