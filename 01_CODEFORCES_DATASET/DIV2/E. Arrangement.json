{
    "link": "https://codeforces.com//contest/108/problem/E",
    "problemId": "571",
    "problem_idx": "E",
    "shortId": "108E",
    "contest_number": "108",
    "problem_submissions": {
        "D": [
            631152,
            630566,
            631699,
            633125,
            632252,
            630736,
            631399,
            630814,
            631533,
            630518,
            631851,
            632455,
            631854,
            632380,
            632591,
            632622
        ],
        "C": [
            629180,
            629868,
            629472,
            629971,
            635740,
            630685,
            688399,
            631427,
            630137,
            631303,
            628693,
            629432,
            630403,
            630647,
            631107,
            630964,
            630765,
            630940
        ],
        "B": [
            628051,
            628449,
            68305499,
            628675,
            632122,
            628702,
            627917,
            628889,
            628448,
            630178,
            632188,
            628860,
            628600,
            628771,
            628618,
            629621,
            629072
        ],
        "A": [
            627480,
            627844,
            627421,
            627636,
            631848,
            627468,
            627396,
            627555,
            627512,
            629270,
            627646,
            627419,
            627496,
            627622,
            632729,
            627875,
            627538
        ],
        "E": [
            631664,
            641028
        ]
    },
    "name": "E. Arrangement",
    "statement": "In the year 2500 the annual graduation ceremony in the German University\r\nin Cairo (GUC) has run smoothly for almost 500 years so far.The most\r\nimportant part of the ceremony is related to the arrangement of the\r\nprofessors in the ceremonial hall.Traditionally GUC has professors. Each\r\nprofessor has his seniority level. All seniorities are different. Letâ€™s\r\nenumerate the professors from to , with being the most senior professor\r\nand being the most junior professor.The ceremonial hall has seats, one\r\nseat for each professor. Some places in this hall are meant for more\r\nsenior professors than the others. More specifically, pairs of seats are\r\nin \"senior-junior\" relation, and the tradition requires that for all\r\npairs of seats the professor seated in \"senior\" position should be more\r\nsenior than the professor seated in \"junior\" position .GUC is very\r\nstrict about its traditions, which have been carefully observed starting\r\nfrom year 2001. The tradition requires that: The seating of the\r\nprofessors changes every year. Year 2001 ceremony was using\r\nlexicographically first arrangement of professors in the ceremonial\r\nhall. Each consecutive year lexicographically next arrangement of the\r\nprofessors is used. The arrangement of the professors is the list of\r\nintegers, where the first integer is the seniority of the professor\r\nseated in position number one, the second integer is the seniority of\r\nthe professor seated in position number two, etc.Given , the number of\r\nprofessors, , the current year and pairs of restrictions, output the\r\narrangement of the professors for this year.\r\n",
    "solutions": [
        "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <string>\n#include <sstream>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint N , M , G[ 20 ] , A[ 20 ] , P[ 20 ] ;\nlong long K , F[ 70000 ] ;\n\ninline int Pos( int s , int k )\n{\n\treturn ( s >> k ) & 1 ;\n}\n\ninline long long Calc( int s , int k )\n{\n\tif ( F[ s ] != -1 ) return F[ s ] ;\n\tif ( k == N ) return F[ s ] = 1 ;\n\tF[ s ] = 0 ;\n\tfor ( int i = 0 ; i < N ; i ++ )\n\tif ( Pos( s , i ) == 0 && ( s & G[ i ] ) == 0 && Pos( P[ k ] , i ) == 1 && Pos( A[ i ] , k ) == 1 ) {\n\t\tF[ s ] += Calc( s | ( 1 << i ) , k + 1 ) ;\n\t}\n\treturn F[ s ] ;\n}\n\ninline int Print( int s )\n{\n\tfor ( int i = 0 ; i < N ; i ++ )\n\tif ( Pos( s , i ) == 1 ) return i + 1 ;\n\treturn -1 ;\n}\n\nint main()\n{\n\tcin >> N >> K >> M ;\n\tfor ( int i = 0 , a , b ; i < M ; i ++ ) {\n\t\tcin >> a >> b ;\n\t\tG[ a - 1 ] |= 1 << ( b - 1 ) ;\n\t}\n\tM = ( 1 << N ) - 1 ;\n\tfor ( int i = 0 ; i < N ; i ++ )\n\t\tA[ i ] = P[ i ] = M ;\n\tmemset( F , -1 , sizeof( F ) ) ;\n\tCalc( 0 , 0 ) ;\n\tK -= 2000 ;\n\tif ( F[ 0 ] < K ) {\n\t\tprintf( \"The times have changed\\n\" ) ;\n\t\treturn 0 ;\n\t}\n\tfor ( int i = 0 ; i < N ; i ++ ) {\n\t\tfor ( int j = 0 ; j < N ; j ++ )\n\t\tif ( P[ j ] == M ) {\n\t\t\tA[ i ] = 1 << j ;\n\t\t\tP[ j ] = 1 << i ;\n\t\t\tmemset( F , -1 , sizeof( F ) ) ;\n\t\t\tCalc( 0 , 0 ) ;\n\t\t\tif ( F[ 0 ] < K ) {\n\t\t\t\tK -= F[ 0 ] ;\n\t\t\t\tA[ i ] = M ;\n\t\t\t\tP[ j ] = M ;\n\t\t\t} else {\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\t}\n\tprintf( \"%d\" , Print( A[ 0 ] ) ) ;\n\tfor ( int i = 1 ; i < N ; i ++ )\n\t\tprintf( \" %d\" , Print( A[ i ] ) ) ;\n\tprintf( \"\\n\" ) ;\n\treturn 0 ;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Arrangement.json",
    "editorial_link": "https://codeforces.com//blog/entry/2514",
    "editorial": null
}