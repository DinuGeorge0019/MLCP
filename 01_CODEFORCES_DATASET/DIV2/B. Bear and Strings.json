{
    "link": "https://codeforces.com//contest/385/problem/B",
    "problemId": "5932",
    "problem_idx": "B",
    "shortId": "385B",
    "contest_number": "385",
    "problem_submissions": {
        "E": [
            5794434,
            5800310,
            5798100,
            12839340,
            5793580,
            5807353,
            5798624,
            5795785
        ],
        "D": [
            5791982,
            5791338,
            5792966,
            5793920,
            5795427,
            5791662,
            5796473,
            5796329,
            5793942
        ],
        "C": [
            5788908,
            5788383,
            5788712,
            5790434,
            5789032,
            5794132,
            5791478,
            5792236,
            5791660,
            5800872,
            5791637,
            5790324,
            5790844,
            5792509,
            5789960,
            5787897,
            5791710,
            5799045
        ],
        "B": [
            5786803,
            5786394,
            5787527,
            5788072,
            5786967,
            5787817,
            5788240,
            5790217,
            5789128,
            5788273,
            5787714,
            5788006,
            5786982,
            5787829,
            5787905,
            5791193,
            5786254,
            5787251,
            5788615
        ],
        "A": [
            5786226,
            5789111,
            5786358,
            5786644,
            5786233,
            5788977,
            5786318,
            5787575,
            5786766,
            5786887,
            5786239,
            5786463,
            5786289,
            5786726,
            5786980,
            5790591,
            5788602,
            5792556,
            5787159
        ]
    },
    "name": "B. Bear and Strings",
    "statement": "The bear has a string (record is the stringâ€™s length), consisting of\r\nlowercase English letters. The bear wants to count the number of such\r\npairs of indices , that string contains at least one string \"\" as a\r\nsubstring.String contains string \"\", if there is such index , that , , ,\r\n.Help the bear cope with the given problem.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nchar str[5555];\nint n;\n\nint main() {\n    scanf(\"%s\", str);\n    n = strlen(str);\n    int ans = 0, max_i = -1;\n    for (int i = 0; i < n; ++ i) {\n        if (i >= 3 && str[i - 3] == 'b' && str[i - 2] == 'e' && str[i - 1] == 'a' && str[i] == 'r') max_i = i - 3;\n        ans += max_i + 1;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math",
        "strings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Bear and Strings.json",
    "editorial_link": "https://codeforces.com//blog/entry/10514",
    "editorial": "In this problem you could write a better solution than the naive. To do\r\nthis, you can iterate through the first cycle of the left index\r\nconsidered substring and the second cycle of the right index considered\r\nsubstring . If any position has been substring \"bear\", means all the\r\nstrings , also contain \"bear\" as a substring. So we can add to the\r\nanswer and exit from the second cycle. Also needed to understand, that\r\nif the string was not a substring \"bear\", then in row substring \"bear\"\r\ncould appear only in the last four characters.\r\n",
    "hint": []
}