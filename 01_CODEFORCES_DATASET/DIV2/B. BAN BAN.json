{
    "link": "https://codeforces.com//contest/1747/problem/B",
    "problemId": "1620659",
    "problem_idx": "B",
    "shortId": "1747B",
    "contest_number": "1747",
    "problem_submissions": {
        "E": [
            179486870,
            179253920,
            179273440,
            179260537,
            179225386,
            179271971,
            179283076,
            179281826,
            179282297,
            186348217,
            179284673,
            179245931
        ],
        "D": [
            179486860,
            179233757,
            179222054,
            179228487,
            179238738,
            179241063,
            179241183,
            179224057,
            179264449,
            179259728,
            179260831,
            179237890,
            179236308,
            180743238,
            179237732,
            179232676,
            179243502,
            179244572,
            179246464,
            179243020,
            179246798,
            179249877
        ],
        "C": [
            179486839,
            179213479,
            179208855,
            179232874,
            179261125,
            179235210,
            179222140,
            179238001,
            179214781,
            179211570,
            179268241,
            179214460,
            179214791,
            179205118,
            179213034,
            179214071,
            179222975,
            179219181,
            179217125,
            179223792,
            179216359
        ],
        "B": [
            179486831,
            179205385,
            179204232,
            179234016,
            179257195,
            179206841,
            179210631,
            179225692,
            179213313,
            179206192,
            179275964,
            179205986,
            179209442,
            179215191,
            179207056,
            179208301,
            179209222,
            179210943,
            179209630,
            179208432,
            179211946
        ],
        "A": [
            179486823,
            179200411,
            179199751,
            179235050,
            179240090,
            179202014,
            179204980,
            179199923,
            179202535,
            179200360,
            179277442,
            179199925,
            179203286,
            179208363,
            179199780,
            179200477,
            179203571,
            179204793,
            179201814,
            179200654,
            179202827
        ]
    },
    "name": "B. BAN BAN",
    "statement": "You are given an integer n.Let’s define s(n) as the string \"\"\r\nconcatenated n times. For example, s(1) = \"\", s(3) = \"\". Note that the\r\nlength of the string s(n) is equal to 3n.Consider s(n). You can perform\r\nthe following operation on s(n) any number of times (possibly zero):\r\nSelect any two distinct indices i and j (1\r\nleq i, j\r\nleq 3n, i\r\nne j). Then, swap s(n)_i and s(n)_j. You want the string \"\" to in s(n)\r\nas a . What’s the smallest number of operations you have to do to\r\nachieve this? Also, find one such shortest sequence of operations.A\r\nstring a is a subsequence of a string b if a can be obtained from b by\r\ndeletion of several (possibly, zero or all) characters.\r\n",
    "solutions": [
        "// LUOGU_RID: 93002967\n/*\nわんわん……わんだほーいっ☆\nWonderhoy!\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef double DB;\nchar buf[1<<21],*p1=buf,*p2=buf;\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<18,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\tc=getchar();\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x;\n}\nvoid write(int x)\n{\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nconst int MOD=998244353;\ninline int Add(int u,int v){return u+v>=MOD?u+v-MOD:u+v;}\ninline int Sub(int u,int v){return u-v>=0?u-v:u-v+MOD;}\ninline int Mul(int u,int v){return LL(u)*LL(v)%MOD;}\ninline int add(int &u,int v){return u=Add(u,v);}\ninline int sub(int &u,int v){return u=Sub(u,v);}\ninline int mul(int &u,int v){return u=Mul(u,v);}\nint QuickPow(int x,int p=MOD-2)\n{\n\tint ans=1,base=x;\n\twhile(p)\n\t{\n\t\tif(p&1)\tmul(ans,base);\n\t\tmul(base,base);\n\t\tp>>=1;\n\t}\n\treturn ans;\n}\nvoid Solve();\nint main(){\n\tint T=read();\n\twhile(T-->0)\tSolve();\n\treturn 0;\n}\nint n;\nvoid Solve()\n{\n\tn=read();\n\twrite((n+1)/2),puts(\"\");\n\tfor(int i=1,j=3*n;i<=j;i+=3,j-=3)\twrite(i),putchar(' '),write(j),puts(\"\");\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. BAN BAN.json",
    "editorial_link": "https://codeforces.com//blog/entry/108782",
    "editorial": "No subsequences of string BAN\n would also mean no substrings of BAN\n in original string. Let minimum number of operations to have no substrings of BAN\n be x\n, it would be also be the lower bound for having no subsequences of string BAN\n.\n\nClaim: x=?n2?\n.\n\nProof: Swap i\n-th B\n from start with i\n-th N\n from end for 1?i??n2?\n. We can see that, no substrings of BAN\n exists after performing ?n2?\n operations. Since we can only destroy atmost 2\n substrings in one operations, ?n2?\n is minimum possible.\n\nNow if you see clearly, after performing above operations, there does not exist any subsequence of string BAN\n in original string. Hence ?n2?\n is also the answer for the original problem.",
    "hint": [
        "Hint 1 Instead of subsequences solve for substrings. That is there should not be any substring after performing operations.",
        "Hint 2 In one operation you can destroy atmost substrings. Find minimum operations to destroy substrings. Answer",
        "Hint 3 Congrats, you have solved for subsequences also!"
    ]
}