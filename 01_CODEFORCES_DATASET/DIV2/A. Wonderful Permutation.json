{
    "link": "https://codeforces.com//contest/1712/problem/A",
    "problemId": "1501803",
    "problem_idx": "A",
    "shortId": "1712A",
    "contest_number": "1712",
    "problem_submissions": {
        "F": [
            168185997,
            168251887,
            168219993
        ],
        "D": [
            168145291,
            168129998,
            168130818,
            168126018,
            168130208,
            168150361,
            168134585,
            168133390,
            168138455,
            168134081,
            168125783,
            168137077,
            168136879,
            168129408,
            168136930,
            168129243,
            168125119,
            168132698,
            168160697
        ],
        "E2": [
            168140188,
            168158270,
            168148121,
            168161916,
            168160378,
            168143972,
            168164627,
            168154079,
            168159111,
            168162533,
            168162132,
            168162930,
            168162457,
            168165260,
            168162375,
            168157107,
            168171929,
            168162727,
            168146310
        ],
        "E1": [
            168139990,
            168143565,
            168142598,
            168152240,
            168154486,
            168136125,
            168153299,
            168148039,
            168146574,
            168156854,
            168162049,
            168149859,
            168153717,
            168157309,
            168155734,
            168157279,
            168163352,
            168162849,
            168111592
        ],
        "C": [
            168099696,
            168121142,
            168097588,
            168110349,
            168111432,
            168115384,
            168111269,
            168107817,
            168332689,
            168116564,
            168111708,
            168108690,
            168109977,
            168116188,
            168105860,
            168124053,
            168136319,
            168107454,
            168118827,
            168132254
        ],
        "B": [
            168092536,
            168105158,
            168090795,
            168101197,
            168098906,
            168103766,
            168096786,
            168097289,
            168095985,
            168094917,
            168094914,
            168099431,
            168102987,
            168092377,
            168105879,
            168092526,
            168097397,
            168101154,
            168148773
        ],
        "A": [
            168089016,
            168089238,
            168089117,
            168090448,
            168090182,
            168095836,
            168091066,
            168089267,
            168092084,
            168090133,
            168090067,
            168092244,
            168092571,
            168089003,
            168099380,
            168089001,
            168089147,
            168093453,
            168116561
        ]
    },
    "name": "A. Wonderful Permutation",
    "statement": "A Random PebbleYou are given a permutation p_1,p_2,\r\nldots,p_n of length n and a positive integer k\r\nle n. In one operation you can choose two indices i and j (1\r\nle i < j\r\nle n) and swap p_i with p_j.Find the minimum number of operations needed\r\nto make the sum p_1 + p_2 +\r\nldots + p_k as small as possible.A permutation is an array consisting of\r\nn distinct integers from 1 to n in arbitrary order. For example,\r\n[2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2\r\nappears twice in the array) and [1,3,4] is also not a permutation (n=3\r\nbut there is 4 in the array).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define mod 998244353\n#define int long long\n#define IOS ios::sync_with_stdio(0)\n#define N 1000005\n#define ls k<<1\n#define rs k<<1|1\n#define mid (L+R>>1)\n\nint T,n,ans,i,j,k,a[N]; \nsigned main(){\n\tIOS;\n\tcin>>T;\n\twhile(T--){\n\t\tcin>>n>>k;\n\t\tfor(i=1;i<=n;++i){\n\t\t\tcin>>a[i];\n\t\t\tif(i<=k&&a[i]>k)++ans;\n\t\t}\n\t\tcout<<ans<<\"\\n\";ans=0;\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Wonderful Permutation.json",
    "editorial_link": "https://codeforces.com//blog/entry/105919",
    "editorial": "For any permutation of length , the final sum after some number of\r\noperations can\u00e2\u0080\u0099t be less than . This means that we need to apply the\r\noperation at least once for every such that and . Every time we apply\r\nit, we have to choose some index such that and . This is always possible\r\nsince initially the number of suitable is equal to the number of\r\nsuitable , and one operation decreases both the number of suitable and\r\nthe number of suitable by one. It is easy to see that in the end, the\r\nset only contains the values , which means that the sum is equal to ,\r\nwhich is the smallest sum we can get.So the answer is the the number of\r\nsuch that and .Complexity:\r\n"
}