{
    "link": "https://codeforces.com//contest/1105/problem/B",
    "problemId": "284895",
    "problem_idx": "B",
    "shortId": "1105B",
    "contest_number": "1105",
    "problem_submissions": {
        "E": [
            48620322,
            48620801,
            48627331,
            48625937,
            48626240,
            48621486,
            48622249,
            48628056,
            48633102,
            48628188,
            48631669,
            48628460,
            48634987,
            48628398,
            48633326,
            48655121,
            48633590,
            48617721,
            48626954,
            48628874,
            48630576
        ],
        "D": [
            48616818,
            48615146,
            48617750,
            48616118,
            48617724,
            48622970,
            48619041,
            48619086,
            48622750,
            48620456,
            48624388,
            48621628,
            48623556,
            48621076,
            48620990,
            48622287,
            48622764,
            48624162,
            48623494,
            48618308
        ],
        "C": [
            48610690,
            48610244,
            48611290,
            48612291,
            48612786,
            48613707,
            48615573,
            48612747,
            48614232,
            48613816,
            48615442,
            48612205,
            48616806,
            48617252,
            48615059,
            48613686,
            48623666,
            48614080,
            48615466,
            48612894
        ],
        "B": [
            48609141,
            48608646,
            48609160,
            48610767,
            48610712,
            48609901,
            48611122,
            48609473,
            48610473,
            48609258,
            48611792,
            48609717,
            48612036,
            48610022,
            48609557,
            48611005,
            48624281,
            48610791,
            48613028,
            48610193
        ],
        "A": [
            48608469,
            48608122,
            48608173,
            48608145,
            48608339,
            48608495,
            48609263,
            48608223,
            48608574,
            48608192,
            48608757,
            48608186,
            48608633,
            48608202,
            48608401,
            48608383,
            48625139,
            48608354,
            48609689,
            48608198
        ]
    },
    "name": "B. Zuhair and Strings",
    "statement": "Given a string s of length n and integer k (1\r\nle k\r\nle n). The string s has a level x, if x is largest non-negative integer,\r\nsuch that it\u2019s possible to find in s: x (non-overlapping) substrings of\r\nlength k, all characters of these x substrings are the same (i.e. each\r\nsubstring contains only one distinct character and this character is the\r\nsame for all the substrings). A substring is a sequence of consecutive\r\n(adjacent) characters, it is defined by two integers i and j (1\r\nle i\r\nle j\r\nle n), denoted as s[i\r\ndots j] = \"s_{i}s_{i+1}\r\ndots s_{j}\".For example, if k = 2, then: the string \"\" has level 1 (you\r\ncan select substring \"\"), the strings \"\" and \"\" has level 2 (you can\r\nselect two non-intersecting substrings \"\" in each of them), the strings\r\n\"\" and \"\" have level 0 (you can\u2019t find at least one substring of the\r\nlength k=2 containing the only distinct character). Zuhair gave you the\r\ninteger k and the string s of length n. You need to find x, the level of\r\nthe string s.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nint n,k,len,nw,ans;\nchar s[201001];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tscanf(\"%s\",s+1); ans=0;\n\tfor (int j=0; j<26; j++)\n\t{\n\t\tlen=nw=0;\n\t\tfor (int i=1; i<=n; i++)\n\t\t\tif (s[i]!=j+'a') nw+=len/k,len=0;\n\t\t\telse len++;\n\t\tnw+=len/k;\n\t\tans=max(ans,nw);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "strings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Zuhair and Strings.json",
    "editorial_link": "https://codeforces.com//blog/entry/64664",
    "editorial": "Since all the substrings of length must be of the same latter, we can\r\niterate over all letters from \u00e2\u0080\u009d to \u00e2\u0080\u009d and for each letter count the\r\nnumber of disjoint substrings of length and take the maximum one.\r\n"
}