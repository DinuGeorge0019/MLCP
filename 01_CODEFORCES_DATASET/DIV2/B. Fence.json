{"link": "https://codeforces.com//contest/363/problem/B", "problemId": "3953", "problem_idx": "B", "shortId": "363B", "contest_number": "363", "problem_submissions": {"A": [5091717, 5059128, 5058405, 5060702, 5058501, 5058437, 5058523, 5058870, 5058824, 5058569, 5058849, 5058835, 5058475, 5058869, 5058397, 5059373, 5059116, 5059730, 5058538], "D": [5062003, 5062111, 5062048, 5062488, 5062551, 5062600, 5061744, 5062900, 5063480, 5063361, 5063540, 5061475, 5063510, 5063001, 5063238, 5064967, 5063752, 5063544], "C": [5060575, 5060628, 5059863, 5060397, 5060617, 5061312, 5059999, 5062594, 5061103, 5061402, 5061178, 5064048, 5061146, 5061399, 5061242, 5061422, 5061398, 5061876], "B": [5059750, 5059183, 5058598, 5059033, 5058933, 5059248, 5059323, 5059565, 5059297, 5059605, 5059146, 5058928, 5059719, 5058972, 5059858, 5058459, 5059102, 5059528], "E": [5072598]}, "name": "B. Fence", "statement": "There is a fence in front of Polycarpus\u2019s home. The fence consists of\r\nplanks of the same width which go one after another from left to right.\r\nThe height of the -th plank is meters, distinct planks can have distinct\r\nheights. Polycarpus has bought a posh piano and is thinking about how to\r\nget it into the house. In order to carry out his plan, he needs to take\r\nexactly consecutive planks from the fence. Higher planks are harder to\r\ntear off the fence, so Polycarpus wants to find such consecutive planks\r\nthat the sum of their heights is minimal possible.Write the program that\r\nfinds the indexes of consecutive planks with minimal total height. Pay\r\nattention, the fence is not around Polycarpus\u2019s home, it is in front of\r\nhome (in other words, the fence isn\u2019t cyclic).\r\n", "solutions": ["#include <set>\n#include <map>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <sstream>\n#include <iomanip>\n#include <iostream>\n#include <algorithm>\n#include <fstream>\n#include <ctime>\n#include <deque>\n#include <bitset>\n#include <cctype>\n#include <utility>\n#include <cassert>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned int ui;\ntypedef unsigned long long ull;\n\n#define Rep(i,n) for(int i = 0; i < (n); ++i)\n#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)\n#define For(i,a,b) for(int i = (a); i <= (b); ++i)\n#define Ford(i,a,b) for(int i = (a); i >= (b); --i)\n#define Fit(i,v) For(__typeof((v).begin()) i = (v).begin(); i != (v).end(); ++i)\n#define Fitd(i,v) For(__typeof((v).rbegin()) i = (v).rbegin(); i != (v).rend(); ++i)\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define sz(a) ((int)(a).size())\n#define all(a) (a).begin(), (a).end()\n#define ms(a,x) memset(a, x, sizeof(a))\n\ntemplate<class F, class T> T convert(F a, int p = -1) { stringstream ss; if (p >= 0) ss << fixed << setprecision(p); ss << a; T r; ss >> r; return r; }\ntemplate<class T> T gcd(T a, T b) { T r; while (b != 0) { r = a % b; a = b; b = r; } return a; }\ntemplate<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }\ntemplate<class T> T sqr(T x) { return x * x; }\ntemplate<class T> T cube(T x) { return x * x * x; }\ntemplate<class T> int getbit(T s, int i) { return (s >> i) & 1; }\ntemplate<class T> T onbit(T s, int i) { return s | (T(1) << i); }\ntemplate<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }\ntemplate<class T> int cntbit(T s) { return __builtin_popcount(s); }\nconst int bfsz = 1 << 16; char bf[bfsz + 5]; int rsz = 0;int ptr = 0;\nchar gc() { if (rsz <= 0) { ptr = 0; rsz = (int) fread(bf, 1, bfsz, stdin); if (rsz <= 0) return EOF; } --rsz; return bf[ptr++]; }\nvoid ga(char &c) { c = EOF; while (!isalpha(c)) c = gc(); }\nint gs(char s[]) { int l = 0; char c = gc(); while (isspace(c)) c = gc(); while (c != EOF && !isspace(c)) { s[l++] = c; c = gc(); } s[l] = '\\0'; return l; }\ntemplate<class T> bool gi(T &v) {\n    v = 0; char c = gc(); while (c != EOF && c != '-' && !isdigit(c)) c = gc(); if (c == EOF) return false; bool neg = c == '-'; if (neg) c = gc();\n    while (isdigit(c)) { v = v * 10 + c - '0'; c = gc(); } if (neg) v = -v; return true;\n}\n\ntypedef pair<int, int> II;\n\nconst ld PI = acos(ld(-1.0));\nconst ld eps = 1e-9;\n\nconst int inf = (int)1e9 + 5;\nconst ll linf = (ll)1e17 + 5;\nint dr[4] = {-1, 0, +1, 0};\nint dc[4] = {0, -1, 0, +1};\nconst ll mod = 1000000007;\n\n#define maxn 1000015\n\nint n, k;\nll sum[maxn];\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n//    freopen(\"in.txt\", \"r\", stdin);\n\n    cin >> n >> k;\n    int x;\n    sum[0] = 0;\n    For(i, 1, n){\n        cin >> x;\n        sum[i] = sum[i - 1] + x;\n    }\n\n    int best = -1;\n    ll MAX = linf;\n    For(i, 0, n - k) if(sum[i + k] - sum[i] < MAX){\n        MAX = sum[i + k] - sum[i];\n        best = i;\n    }\n    cout << best + 1;\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp"], "dificulty": "1100", "interactive": false}