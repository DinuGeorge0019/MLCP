{
    "link": "https://codeforces.com//contest/221/problem/A",
    "problemId": "1622",
    "problem_idx": "A",
    "shortId": "221A",
    "contest_number": "221",
    "problem_submissions": {
        "E": [
            3205051,
            2092800,
            2086150,
            2086057,
            2087298,
            2087155,
            2087149,
            2087018,
            2086854,
            2086766,
            2084177,
            85197769
        ],
        "D": [
            2077623,
            2076297,
            2081220,
            2080200,
            2077733,
            2077945,
            2078661,
            2078764,
            2079390,
            2078475,
            2078957,
            2078857,
            2079767,
            2079126,
            2080238,
            2080763,
            2080984
        ],
        "C": [
            2075002,
            2086554,
            2073629,
            2075934,
            2074814,
            2076079,
            2073608,
            2075600,
            2075194,
            2075398,
            2074548,
            2075699,
            2076113,
            2076291,
            2077149,
            2075454,
            2074363,
            2076715
        ],
        "B": [
            2074170,
            2074163,
            2072750,
            2073391,
            2074703,
            2076060,
            2073836,
            2074637,
            2073703,
            2073926,
            2074911,
            2074503,
            2075040,
            2074940,
            2073942,
            2073661,
            2075809
        ],
        "A": [
            2072835,
            2074357,
            2073486,
            2074025,
            2073249,
            2073912,
            2072457,
            2073442,
            2072552,
            2072801,
            2072681,
            2073490,
            2073385,
            2074053,
            2072948,
            2072853,
            2073301
        ]
    },
    "name": "A. Little Elephant and Function",
    "statement": "The Little Elephant enjoys recursive functions.This time he enjoys the\r\nsorting function. Let is a permutation of an integers from 1 to ,\r\ninclusive, and denotes the -th element of the permutation. The Little\r\nElephant\u2019s recursive function , that sorts the first permutation\u2019s\r\nelements, works as follows: If , exit the function. Otherwise, call ,\r\nand then make (swap the -th and -th elements of ). The Little Elephant\u2019s\r\nteacher believes that this function does not work correctly. But that-be\r\ndo not get an F, the Little Elephant wants to show the performance of\r\nits function. Help him, find a permutation of numbers from 1 to , such\r\nthat after performing the Little Elephant\u2019s function (that is call ),\r\nthe permutation will be sorted in ascending order.\r\n",
    "solutions": [
        "#include <vector>\n#include <queue>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\n#define fi first\n#define se second\n#define mp make_pair\n#define sz size\n#define re return\n#define pb(x) push_back(x)\n#define pf(x) push_front(x)\n#define abs(x) ((x) < 0 ? -(x) : (x))\n#define INF 2000000000\n#define sqr(x) ((x) * (x))\n#define all(x) x.begin(), x.end()\n\nint n;\n\nint main() {\n\n#ifndef ONLINE_JUDGE\t          \n\tfreopen(\"a.in\", \"r\", stdin);\n\tfreopen(\"a.out\", \"w\", stdout);\n#endif\n\n\tcin >> n;\n\tif(n == 1) cout << 1;\n\telse\n\tif(n == 2) cout << \"2 1\";\n\telse {\n\t\tcout << n << \" \"; \n\t\tfor(int i = 1; i < n; i++)\n\t\t\tcout << i << \" \";\n\t}\n\treturn 0;\n}\n\n\t\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Little Elephant and Function.json",
    "editorial_link": "https://codeforces.com//blog/entry/5177",
    "editorial": "In this problems you should notice that the answer for the problem is\r\nalways of the following form: , 1, 2, 3, ..., -1. In such case array\r\nwill be always sorted after the end of the algorithm.\r\n"
}