{
    "link": "https://codeforces.com//contest/1514/problem/C",
    "problemId": "962260",
    "problem_idx": "C",
    "shortId": "1514C",
    "contest_number": "1514",
    "problem_submissions": {
        "E": [
            113528522,
            113530195,
            113565998,
            113829004,
            113597935,
            113646044,
            113584968,
            113566286,
            113569074
        ],
        "D": [
            113508768,
            113510778,
            113502539,
            113509039,
            113502444,
            116142094,
            113508651,
            113514400,
            113508947,
            113510664,
            113510706,
            113513958,
            113537785,
            113515183,
            113514322,
            113510627,
            113510608,
            113515221,
            113512482,
            113511797,
            113512424,
            113510335
        ],
        "C": [
            113497839,
            113503895,
            113492438,
            113500977,
            113496051,
            125221398,
            113496633,
            113501835,
            113497325,
            113497426,
            113503146,
            113504263,
            113499255,
            113504094,
            113504124,
            113506035,
            113503284,
            113501631,
            113505697,
            113499549,
            113501744
        ],
        "B": [
            113492786,
            113495281,
            113492225,
            113493324,
            113492091,
            125221427,
            113503162,
            113493531,
            113492227,
            113493586,
            113492727,
            113494979,
            113494843,
            113496894,
            113495291,
            113492924,
            113490836,
            113494606,
            113493594,
            113494186,
            113493708
        ],
        "A": [
            113490269,
            113491100,
            113495047,
            113490072,
            113489948,
            125221450,
            113504457,
            113489912,
            113489857,
            113490379,
            113490423,
            113490999,
            113495292,
            113490189,
            113492252,
            113490413,
            113493815,
            113492689,
            113490314,
            113489923,
            113490126
        ]
    },
    "name": "C. Product 1 Modulo N",
    "statement": "Now you get Baby Ehab’s first words: \"Given an integer n, find the\r\nlongest subsequence of [1,2,\r\nldots, n-1] whose product is 1 modulo n.\" Please solve the problem.A\r\nsequence b is a subsequence of an array a if b can be obtained from a by\r\ndeleting some (possibly all) elements. The product of an empty\r\nsubsequence is equal to 1.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n;\n    cin >> n;\n    int z = 1;\n    vector<int> ans;\n    for (int i = 1; i < n; i++)\n    if (gcd(i, n) == 1) {\n        int p = (z * (long long)i) % n;\n        ans.push_back(i);\n        z = p;\n    }\n    if (z != 1) {\n        for (int i = 0; i < ans.size(); i++)\n            if (ans[i] == z) {\n                ans.erase(ans.begin() + i);\n                break;\n            }\n    }\n    cout << ans.size() << '\\n';\n    for (int i : ans)\n        cout << i <<  ' ';\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Product 1 Modulo N.json",
    "editorial_link": "https://codeforces.com//blog/entry/89810",
    "editorial": "So first observe that the subsequence canât contain any element that\r\nisnât coprime with . Why? Because then its product wonât be coprime with\r\n, so when you take it modulo , it canât be . In mathier words, Unable to\r\nparse markup [type=CF_MATHJAX] Unable to parse markup [type=CF_MATHJAX]\r\nCode link: https://pastebin.com/JnjZ3SQm Bonus task: solve it for Unable\r\nto parse markup [type=CF_MATHJAX]\r\n",
    "hint": []
}