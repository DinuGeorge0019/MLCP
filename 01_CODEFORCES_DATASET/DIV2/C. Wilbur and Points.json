{"link": "https://codeforces.com//contest/596/problem/C", "problemId": "40907", "problem_idx": "C", "shortId": "596C", "contest_number": "596", "problem_submissions": {"E": [14284902, 14410276, 14285890, 14836358], "A": [14282529, 14272331, 14272408, 14272249, 14272247, 14272132, 14272036, 14272062, 14273974, 14272466, 14272094, 14272742, 14272840, 14272048, 14272087, 14272349, 14272225, 14272447, 14273354, 14273114], "D": [14280833, 14284455, 14282588, 14285386, 14285067, 14284298, 14286251, 14285939, 14284050, 14285941, 14286108, 14293470, 14284179], "C": [14276112, 14278736, 14278325, 14279291, 14278970, 14277576, 14282655, 14280088, 14281778, 14280140, 14281205, 14281281, 14279114, 14277665, 14278438, 14279354, 14285136, 14283954, 14281786], "B": [14272947, 14272778, 14273548, 14272930, 14272933, 14273058, 14272243, 14272568, 14274807, 14272965, 14272538, 14274186, 14273926, 14272409, 14272384, 14272994, 14273180, 14273634, 14274094, 14274290]}, "name": "C. Wilbur and Points", "statement": "Wilbur is playing with a set of points on the coordinate plane. All\r\npoints have non-negative integer coordinates. Moreover, if some point (,\r\n) belongs to the set, then all points (, ), such that and also belong to\r\nthis set.Now Wilbur wants to number the points in the set he has, that\r\nis assign them distinct integer numbers from to . In order to make the\r\nnumbering , Wilbur imposes the condition that if some point (, ) gets\r\nnumber , then all (,) from the set, such that and must be assigned a\r\nnumber not less than . For example, for a set of four points (, ), (, ),\r\n(, ) and (, ), there are two aesthetically pleasing numberings. One is ,\r\n, , and another one is , , , .Wilbur\u2019s friend comes along and challenges\r\nWilbur. For any point he defines it\u2019s as . Now he gives Wilbur some ,\r\n,..., , and asks him to find an aesthetically pleasing numbering of the\r\npoints in the set, such that the point that gets number has it\u2019s special\r\nvalue equal to , that is .Now Wilbur asks you to help him with this\r\nchallenge.\r\n", "solutions": ["//In the name of God\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define x first\n#define y second\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\ntemplate<class P, class Q> inline P smax (P &a, Q b) { if (a < b) a = b; return a; }\ntemplate<class P, class Q> inline P smin (P &a, Q b) { if (b < a) a = b; return a; }\n\n\nconst int maxN = 1e5 + 49;\nconst int oo = 1e9 + 4 + 9;\nconst int mod = 0;\nconst int base = 727;\n\nint sz, w[maxN], m, sx[maxN], sy[maxN];\nint ans[maxN];\nset<pii> st;\nmap<pii, int> ind;\n\nint32_t main () {\n\tios_base :: sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\tint n; cin >> n;\n\tint ii = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> sx[i] >> sy[i];\n\t\tind[pii(sx[i], sy[i])] = i;\t\n\t\tif (!sx[i] && !sy[i]) ii = i;\t\n\t}\n\tst.insert({0, ii});\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> w[i];\n\t\tauto it = st.lower_bound(make_pair(w[i], -1));\n\t\tif (it != st.end() && (*it).x == w[i]) {\n\t\t\tans[m++] = (*it).second;\n\t\t\tint id = (*it).second;\n\t\t\tfor (int xadd = 0; xadd < 2; xadd++) {\n\t\t\t\tint nx = sx[id] + xadd, ny = sy[id] + (xadd ^ 1);\n\t\t\t\tif (ind.find(make_pair(nx, ny)) != ind.end()) {\n\t\t\t\t\tst.insert({ny - nx, ind[make_pair(nx, ny)]});\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tst.erase(it);\n\t\t} else {\n\t\t\tcout << \"NO\\n\";\n\t\t\treturn 0;\t\n\t\t}\n\t}\n\tcout << \"YES\\n\";\n\tfor (int i = 0; i < n; i++)\n\t\tcout << sx[ans[i]] << ' ' << sy[ans[i]] << '\\n';\n\t\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "input": "", "output": "", "tags": ["combinatorics", "greedy", "sortings"], "dificulty": "1700", "interactive": false}