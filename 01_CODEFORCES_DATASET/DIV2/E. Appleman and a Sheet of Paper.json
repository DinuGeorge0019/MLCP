{
    "link": "https://codeforces.com//contest/462/problem/E",
    "problemId": "13279",
    "problem_idx": "E",
    "shortId": "462E",
    "contest_number": "462",
    "problem_submissions": {
        "E": [
            7594261,
            7594537,
            7595329,
            7596263,
            7601568,
            7614755,
            7600139
        ],
        "D": [
            7587651,
            7592446,
            7593867,
            9735296,
            7591253,
            7591277,
            7590693,
            7593546,
            7595882,
            7588189,
            7590576,
            7594402
        ],
        "C": [
            7584650,
            7583622,
            7585970,
            7584580,
            7589189,
            7588238,
            7586119,
            7587122,
            7584030,
            7587692,
            7584278,
            7582519,
            7583178,
            7592841,
            7585619,
            7586022,
            7585539,
            7584913
        ],
        "B": [
            7582226,
            7582283,
            7585916,
            7581332,
            7597800,
            7584599,
            7589421,
            7583929,
            7584799,
            7581360,
            7581775,
            7584268,
            7581390,
            7583901,
            7581652,
            7589229,
            7583119,
            7583099
        ],
        "A": [
            7580498,
            7581131,
            7581040,
            7580428,
            7581889,
            7585911,
            7581699,
            7582020,
            7580434,
            7580645,
            7580474,
            7580598,
            7580445,
            7581189,
            7580430,
            7582430,
            7580924,
            7581116
        ]
    },
    "name": "E. Appleman and a Sheet of Paper",
    "statement": "Appleman has a very big sheet of paper. This sheet has a form of\r\nrectangle with dimensions . Your task is help Appleman with folding of\r\nsuch a sheet. Actually, you need to perform queries. Each query will\r\nhave one of the following types: Fold the sheet of paper at position .\r\nAfter this query the leftmost part of the paper with dimensions must be\r\nabove the rightmost part of the paper with dimensions . Count what is\r\nthe total width of the paper pieces, if we will make two described later\r\ncuts and consider only the pieces between the cuts. We will make one cut\r\nat distance from the left border of the current sheet of paper and the\r\nother at distance from the left border of the current sheet of paper.\r\nPlease look at the explanation of the first test example for better\r\nunderstanding of the problem.\r\n",
    "solutions": [
        "#include <cstdio>\n#ifdef _WIN32\n#define LLFORMAT \"%I64\"\n#else\n#define LLFORMAT \"%ll\"\n#endif\nconst int MAXN=100005;\nint n,l,r,q;\nint a[MAXN];\nint sum[MAXN];\nvoid insert(int x,int c)\n{\n\t++x;\n\twhile (x<=n)\n\t{\n\t\tsum[x]+=c;\n\t\tx+=x&-x;\n\t}\n}\nint query(int x)\n{\n\tint s=0;\n\twhile (x)\n\t{\n\t\ts+=sum[x];\n\t\tx-=x&-x;\n\t}\n\treturn s;\n}\nvoid init()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tl=0;r=n;\n\tfor (int i=0;i<n;++i)\n\t\ta[i]=1,insert(i,1);\n}\nvoid solve()\n{\n\tint rev=0;\n\twhile (q--)\n\t{\n\t\tint type;\n\t\tscanf(\"%d\",&type);\n\t\tif (type==1)\n\t\t{\n\t\t\tint p;\n\t\t\tscanf(\"%d\",&p);\n\t\t\tif (rev) rev=0,p=r-l-p;\n\t\t\tif (l+2*p<=r)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<p;++i)\n\t\t\t\t{\n\t\t\t\t\tint u=a[l+p-i-1];\n\t\t\t\t\ta[l+p-i-1]=0;\n\t\t\t\t\tinsert(l+p-i-1,-u);\n\t\t\t\t\ta[l+p+i]+=u;\n\t\t\t\t\tinsert(l+p+i,u);\n\t\t\t\t}\n\t\t\t\tl=l+p;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (int i=0;i<r-l-p;++i)\n\t\t\t\t{\n\t\t\t\t\tint u=a[l+p+i];\n\t\t\t\t\ta[l+p+i]=0;\n\t\t\t\t\tinsert(l+p+i,-u);\n\t\t\t\t\ta[l+p-i-1]+=u;\n\t\t\t\t\tinsert(l+p-i-1,u);\n\t\t\t\t}\n\t\t\t\tr=l+p;\n\t\t\t\trev^=1;\n\t\t\t}\n\t\t}\n\t\telse if (type==2)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif (rev)\n\t\t\t{\n\t\t\t\tint tmp=x;\n\t\t\t\tx=r-l-y;\n\t\t\t\ty=r-l-tmp;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",query(y+l)-query(x+l));\n\t\t}\n\t}\n}\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"E.in\",\"r\",stdin);\n\tfreopen(\"E.out\",\"w\",stdout);\n#endif\n\tinit();\n\tsolve();\n#ifndef ONLINE_JUDGE\n\tfclose(stdin);fclose(stdout);\n#endif\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Appleman and a Sheet of Paper.json",
    "editorial_link": "https://codeforces.com/blog/entry/13568",
    "editorial": null
}