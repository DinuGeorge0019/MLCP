{
    "link": "https://codeforces.com//contest/832/problem/E",
    "problemId": "115521",
    "problem_idx": "E",
    "shortId": "832E",
    "contest_number": "832",
    "problem_submissions": {
        "C": [
            28850414,
            28839556,
            28849218,
            28970707,
            28860425,
            28882532
        ],
        "B": [
            28842559,
            28832195,
            28832637,
            28833745,
            28835678,
            28833935,
            28833416,
            28838017,
            28839620,
            28834185,
            28834397,
            28835866,
            28831820,
            28836424,
            28834235,
            28834452,
            28834561,
            28834258
        ],
        "E": [
            28840011,
            28847209,
            28846202,
            28846322,
            28851079,
            28847674,
            28848843,
            28861574,
            29694590
        ],
        "D": [
            28833290,
            28844072,
            28839533,
            28841064,
            28839461,
            28842570,
            28835402,
            28843358,
            28835918,
            28834140,
            28836636,
            28838484,
            28838783,
            28839031,
            28841097,
            28844392,
            28841838,
            28840397,
            28840613,
            28840691
        ],
        "A": [
            28827596,
            28827231,
            28829917,
            28828126,
            28828610,
            28830168,
            28827850,
            28827000,
            28836168,
            28827377,
            28826850,
            28827715,
            28827016,
            28827260,
            28826966,
            28827167,
            28828034,
            28826934,
            28827600
        ]
    },
    "name": "E. Vasya and Shifts",
    "statement": "Vasya has a set of strings of equal length, consisting of lowercase\r\nEnglish letters \"\", \"\", \"\", \"\" and \"\". Moreover, the set is split into\r\ngroups of equal strings each. Vasya also has one special string of the\r\nsame length, consisting of letters \"\" only.Vasya wants to obtain from\r\nstring some fixed string , in order to do this, he can use the strings\r\nfrom his set in any order. When he uses some string , each of the\r\nletters in string replaces with the next letter in alphabet as many\r\ntimes as the alphabet position, counting from zero, of the corresponding\r\nletter in string . Within this process the next letter in alphabet after\r\n\"\" is \"\".For example, if some letter in equals \"\", and the letter on the\r\nsame position in equals \"\", then the letter in becomes equal \"\", because\r\n\"\" is the second alphabet letter, counting from zero. If some letter in\r\nequals \"\", and on the same position in is \"\", then the letter in becomes\r\n\"\". For example, if the string equals \"\", and string equals \"\", then\r\nbecomes \"\".A used string disappears, but Vasya can use equal strings\r\nseveral times.Vasya wants to know for given strings , how many ways\r\nthere are to obtain from the string string using the given set of\r\nstrings? Two ways are different if the number of strings used from some\r\ngroup of strings is different. Help Vasya compute the answers for these\r\nquestions modulo .\r\n",
    "solutions": [
        "#include<stdio.h>\n\ntypedef long long lld;\nconst lld mod = 1000000007;\n\nint N, M, Q, hang[555][555], qry[555][333], imi[555], dap[333]; char st[555];\nlld gop=1; int rev[5]={0,1,3,2,4};\n\nint main(){\n\tscanf(\"%d%d\", &N, &M);\n\tfor(int i=0; i<N; i++){\n\t\tscanf(\"\\n%s\", st);\n\t\tfor(int j=0; j<M; j++) hang[j][i] = st[j]-'a';\n\t}\n\tscanf(\"%d\", &Q);\n\tfor(int i=0; i<Q; i++){\n\t\tscanf(\"\\n%s\", st);\n\t\tfor(int j=0; j<M; j++) qry[j][i] = st[j]-'a';\n\t\tdap[i] = 1;\n\t}\n\tfor(int i=0; i<N; i++){\n\t\tint chk=-1;\n\t\tfor(int j=0; j<M; j++){\n\t\t\tif(imi[j]) continue;\n\t\t\tif(hang[j][i]){ chk=j; break; }\n\t\t}\n\t\tif(chk<0){ gop=gop*5%mod; continue; }\n\n\t\timi[chk] = 1;\n\t\tint mu = rev[hang[chk][i]];\n\t\tfor(int i2=0; i2<N; i2++) hang[chk][i2] = hang[chk][i2]*mu % 5;\n\t\tfor(int i2=0; i2<Q; i2++) qry[chk][i2] = qry[chk][i2]*mu % 5;\n\t\tfor(int t=0; t<M; t++){\n\t\t\tif(t == chk) continue;\n\t\t\tint mi = hang[t][i];\n\t\t\tfor(int i2=0; i2<N; i2++){\n\t\t\t\thang[t][i2] -= mi*hang[chk][i2];\n\t\t\t\thang[t][i2] = (hang[t][i2]+25)%5;\n\t\t\t}\n\t\t\tfor(int i2=0; i2<Q; i2++){\n\t\t\t\tqry[t][i2] -= mi*qry[chk][i2];\n\t\t\t\tqry[t][i2] = (qry[t][i2]+25)%5;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0; i<M; i++){\n\t\tint chk=0;\n\t\tfor(int j=0; j<N; j++){\n\t\t\tif(hang[i][j]) chk=1;\n\t\t}\n\t\tif(chk) continue;\n\t\tfor(int j=0; j<Q; j++){\n\t\t\tif(qry[i][j]) dap[j]=0;\n\t\t}\n\t}\n\tfor(int i=0; i<Q; i++) printf(\"%lld\\n\", dap[i] * gop);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "matrices"
    ],
    "dificulty": "2600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Vasya and Shifts.json",
    "editorial_link": "https://codeforces.com//blog/entry/53461",
    "editorial": "The first thing to notice is that the problem can be reduced to a matrix\r\nform. To do this quite easily, we note that if we denote as the number\r\nof times we apply the -th row, then we will get the matrix, we will have\r\nexactly columns () and rows. That is, will match the -th symbol in the\r\n-th row. Now we get the usual system of linear equations. Note that we\r\nhave a restriction on , , that is, we are interested in the number of\r\nSLE solutions, modulo . Then for each query it would be possible to find\r\nthe number of solutions using the Gauss algorithm (0 or ), but this\r\nsolution will take time, which does not fit under restrictions. One of\r\nthe optimizations for improving the algorithm is to bring the matrix to\r\na triangular matrix form (find the rank) and memorize the\r\ntransformations. Then for each query string we could apply these\r\ntransformations, then the algorithm will work , which is already past\r\nTime Limit.\r\n"
}