{"link": "https://codeforces.com//contest/1582/problem/D", "problemId": "1156634", "problem_idx": "D", "shortId": "1582D", "contest_number": "1582", "problem_submissions": {"G": [133300654, 132904411, 132903819, 132921500, 132938189, 132915561, 132904925, 132893999, 132930384, 132930246, 132930119, 132929885, 132929830, 132917984, 132923122, 132922486, 132909943, 132922580, 132929375, 132930555, 133312799, 132969396], "F2": [132908314, 132865018, 132905309, 132899324, 132901682, 132900235, 132911727, 132926934, 132906558, 132909549, 132893391, 132884523, 132901241, 132906554, 132898256, 133312622, 132970055, 132969976, 132904321], "F1": [132881252, 132864382, 132880627, 132888291, 132872964, 132880051, 132887180, 132892561, 132900410, 132897751, 132862757, 132872739, 132870584, 132888250, 132889092, 132882038, 132891013, 132872187, 132887941, 133312616, 132891504], "E": [132874913, 132878099, 132874176, 132880923, 132882227, 132876672, 132871740, 132883982, 132905776, 132893914, 132871055, 132859358, 132881562, 132870144, 132885086, 132894857, 132869674, 132887914, 132877059, 133312375, 132888626], "D": [132866716, 132891541, 132886280, 132871648, 132863103, 132871610, 132863993, 132875189, 132911684, 132876113, 132889182, 132879862, 132890109, 132872530, 132875475, 132891337, 132884986, 132886500, 132884112, 133312126, 132970973, 132882901], "C": [132859265, 132871828, 132860284, 132861165, 132856817, 132935747, 132866931, 132863031, 132863018, 132893464, 132893294, 132866549, 132861428, 132858872, 132861957, 132863927, 132861005, 132863860, 132868896, 133312107, 132858386], "B": [132856790, 132867123, 132856747, 132855505, 132854485, 132859085, 132858770, 132858595, 132856173, 132857637, 132856186, 132859468, 132855951, 132855099, 132854810, 132855351, 132856357, 132855765, 132859435, 133312040, 132970544, 132854847], "A": [132855030, 132855528, 132854523, 132892082, 132854129, 132904251, 132854758, 132854419, 132906994, 132854763, 132856077, 132854737, 132984138, 132854196, 132859118, 132854306, 132855186, 132865041, 132857131, 133311808, 132970350, 132854128]}, "name": "D. Vupsen, Pupsen and 0", "statement": "Vupsen and Pupsen were gifted an integer array. Since Vupsen doesn\u2019t\r\nlike the number 0, he threw away all numbers equal to 0 from the array.\r\nAs a result, he got an array a of length n.Pupsen, on the contrary,\r\nlikes the number 0 and he got upset when he saw the array without\r\nzeroes. To cheer Pupsen up, Vupsen decided to come up with another array\r\nb of length n such that\r\nsum_{i=1}^{n}a_i\r\ncdot b_i=0. Since Vupsen doesn\u2019t like number 0, . Also, the numbers in\r\nthat array must not be huge, so . Please help Vupsen to find any such\r\narray b!\r\n", "solutions": ["#ifdef _MSC_VER\n#define _CRT_SECURE_NO_WARNINGS\n#endif\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid solve(int a, int b, int c, int& x, int &y, int &z) {\n\tif (a == b) {\n\t\tx = c; y = -2 * c;\n\t\tz = a;\n\t\treturn;\n\t}\n\tif (a + b == 0) {\n\t\tx = c; y = 2 * c;\n\t\tz = a;\n\t\treturn;\n\t}\n\tif (b + c == 0 || b == c || c + a == 0 || c == a) {\n\t\tsolve(b, c, a, y, z, x);\n\t\treturn;\n\t}\n\tx = b + c;\n\ty = -(a + c);\n\tz = b - a;\n}\n\nint main()\n{\n#ifdef _MSC_VER\n\tfreopen(\"d.in\", \"r\", stdin);\n#endif\n\tstd::ios::sync_with_stdio(false);\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> a(n);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tcin >> a[i];\n\t\t}\n\t\tvector<int> r(n);\n\t\tif (n % 2 == 0) {\n\t\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\t\tr[i + 1] = -a[i];\n\t\t\t\tr[i] = a[i + 1];\n\t\t\t}\n\t\t} else {\n\t\t\tsolve(a[0], a[1], a[2], r[0], r[1], r[2]);\n\t\t\tfor (int i = 3; i < n; i += 2) {\n\t\t\t\tr[i + 1] = -a[i];\n\t\t\t\tr[i] = a[i + 1];\n\t\t\t}\n\t\t}\n\t\tlong long s = 0;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tassert(r[i]);\n\t\t\ts += (long long)a[i] * r[i];\n\t\t}\n\t\tassert(s == 0);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tprintf(\"%d \", r[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "math"], "dificulty": "1600", "interactive": false}