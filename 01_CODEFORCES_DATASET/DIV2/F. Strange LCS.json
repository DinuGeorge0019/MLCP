{"link": "https://codeforces.com//contest/1589/problem/F", "problemId": "1186201", "problem_idx": "F", "shortId": "1589F", "contest_number": "1589", "problem_submissions": {"F": [135392401, 135383659, 135613163, 136073664, 136061292], "A": [135375124, 135343090, 135343827, 135343075, 135344151, 135347290, 135347165, 135342903, 135346750, 135343453, 135344492, 135344059, 135383305, 135346270, 135343510, 135389951, 135347174, 135344135, 135344697, 135345131], "B": [135373165, 135350018, 135350022, 135361256, 135347559, 135355629, 135351622, 135348865, 135351792, 135350073, 135347389, 135345202, 135388137, 135356455, 135347142, 135353182, 135350595, 135348956, 135346782], "E": [135366850, 135380426, 135378894, 135377065, 135387081, 135379118, 135387473, 135388354, 135387609, 135390750, 135374822, 135380067, 135366481, 135412322, 135387828, 135373661, 135373029, 135375843], "D": [135353894, 135387455, 135356345, 135358960, 135370454, 135364511, 135368677, 135363277, 135359493, 135367483, 135392033, 135389301, 135377180, 135364477, 135360697, 135371907, 135375411, 135482600], "C": [135344934, 135351797, 135347327, 135352110, 135350833, 135347466, 135354024, 135346228, 135353727, 135346489, 135352889, 135347193, 135347207, 135347187, 135349483, 135346265, 135355770, 135353671, 135357934, 135349393]}, "name": "F. Strange LCS", "statement": "You are given n strings s_1, s_2,\r\nldots, s_n, each consisting of lowercase and uppercase English letters.\r\nIn addition, it\u2019s guaranteed that each character occurs in each string .\r\nFind the longest common subsequence of these strings.A string t is a\r\nsubsequence of a string s if t can be obtained from s by deletion of\r\nseveral (possibly, zero or all) symbols.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint x=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0') {if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nint f[120][600],nxt[15][120][60],lst[60],n,rev[2000],fr[14][60];\nint lst1[120][600],lst2[120][600],len[15],pos[15],to[15];\nchar S[13][120];\nvoid Max(int &x,int y) {x=x>y?x:y;}\nvoid print(int nw,int T) {\n\tif(!nw)return;\n\tprint(lst1[nw][T],lst2[nw][T]);\n\tprintf(\"%c\",S[1][nw]);\n}\nvoid work() {\n\tn=read();\n\tmemset(nxt,-1,sizeof(nxt));\n\tmemset(fr,-1,sizeof(fr));\n\tmemset(lst1,0,sizeof(lst1));\n\tmemset(lst2,0,sizeof(lst2));\n\tfor(int i=1;i<=n;++i) {\n\t\tscanf(\"%s\",S[i]+1);\n\t\tlen[i]=strlen(S[i]+1);\n\t\tmemset(lst,-1,sizeof(lst));\n\t\tfor(int j=len[i];j>=0;--j) {\n\t\t\tfor(int c=0;c<52;++c)\n\t\t\t\tnxt[i][j][c]=lst[c];\n\t\t\tif(j>0)lst[rev[S[i][j]]]=j;\n\t\t}\n\t\tfor(int j=1;j<=len[i];++j)\n\t\t\tif(fr[i][rev[S[i][j]]]==-1)fr[i][rev[S[i][j]]]=j;\n\t}\n\tmemset(f,-0x3f,sizeof(f));\n\tint ans=0;\n\tfor(int c=0;c<52;++c) {\n\t\tint flag=1;\n\t\tfor(int i=1;i<=n;++i)if(nxt[i][0][c]==-1)flag=0;\n\t\tif(flag)f[nxt[1][0][c]][0]=1;\n\t}\n\tfor(int i=1;i<=len[1];++i)\n\t\tfor(int T=0;T<(1<<(n-1));++T)\n\t\t\tif(f[i][T]>0) {\n\t\t\t\tint nw=rev[S[1][i]];\n\t\t\t\tMax(ans,f[i][T]);\n\t\t\t\tpos[1]=i;\n\t\t\t\tfor(int j=2;j<=n;++j)\n\t\t\t\t\tif(T>>(j-2)&1)pos[j]=nxt[j][fr[j][nw]][nw];\n\t\t\t\t\telse pos[j]=fr[j][nw];\n\t\t\t\tfor(int c=0;c<52;++c) {\n\t\t\t\t\tint flag=1;\n\t\t\t\t\tfor(int j=1;j<=n;++j) {\n\t\t\t\t\t\tto[j]=nxt[j][pos[j]][c];\n\t\t\t\t\t\tif(to[j]==-1)flag=0;\n\t\t\t\t\t}\n\t\t\t\t\tif(!flag)continue;\n\t\t\t\t\tint H=0;\n\t\t\t\t\tfor(int j=2;j<=n;++j)if(to[j]!=fr[j][c])H|=(1<<(j-2));\n\t\t\t\t\tfor(int j=1;j<=n;++j)assert(to[j]!=pos[j]);\n\t\t\t\t\tif(f[to[1]][H]<f[i][T]+1) {\n\t\t\t\t\t\tf[to[1]][H]=f[i][T]+1;\n\t\t\t\t\t\tlst1[to[1]][H]=i;\n\t\t\t\t\t\tlst2[to[1]][H]=T;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\tprintf(\"%d\\n\",ans);\n\tif(ans) {\n\t\tfor(int i=1;i<=len[1];++i)\n\t\t\tfor(int S=0;S<(1<<(n-1));++S)\n\t\t\t\tif(f[i][S]==ans) {\n\t\t\t\t\tprint(i,S);\n\t\t\t\t\tputs(\"\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t}\n\tputs(\"\");\n}\nint main() {\n\tfor(char c='a';c<='z';++c)rev[c]=c-'a';\n\tfor(char c='A';c<='Z';++c)rev[c]=c-'A'+26;\n\tint T=read();\n\twhile(T--)work();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["bitmasks", "dp", "graphs", "strings"], "dificulty": "2600", "interactive": false}