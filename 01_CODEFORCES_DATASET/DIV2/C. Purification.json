{
    "link": "https://codeforces.com//contest/330/problem/C",
    "problemId": "3351",
    "problem_idx": "C",
    "shortId": "330C",
    "contest_number": "330",
    "problem_submissions": {
        "E": [
            4121855,
            4129603,
            4139778,
            4139451,
            4213008
        ],
        "D": [
            4117664,
            4117609,
            4117505,
            4117842,
            4117606,
            4117463,
            4115484,
            4117887,
            4117520,
            4117977,
            4117817,
            4117617,
            4117937,
            4117768,
            4118484,
            4119072,
            4118154,
            4117838,
            4118899
        ],
        "C": [
            4115956,
            4115187,
            4115372,
            4115604,
            4115813,
            4117683,
            4115859,
            4115396,
            4115931,
            4115861,
            4115789,
            4115557,
            4115689,
            4114734,
            4115836,
            4117100,
            4115924
        ],
        "B": [
            4114293,
            4113546,
            4113615,
            4113315,
            4113231,
            4116357,
            4113644,
            4113499,
            4114262,
            4113658,
            4113108,
            4114038,
            4113172,
            4113061,
            4113986,
            4114337,
            4113965
        ],
        "A": [
            4113132,
            4112577,
            4112734,
            4112448,
            4112410,
            4112458,
            4112430,
            4114037,
            4112918,
            4112498,
            4112396,
            4112828,
            4112414,
            4112412,
            4112843,
            4112551,
            4112821
        ]
    },
    "name": "C. Purification",
    "statement": "You are an adventurer currently journeying inside an evil temple. After\r\ndefeating a couple of weak zombies, you arrived at a square room\r\nconsisting of tiles forming an grid. The rows are numbered through from\r\ntop to bottom, and the columns are numbered through from left to right.\r\nAt the far side of the room lies a door locked with evil magical forces.\r\nThe following inscriptions are written on the door: Being a very senior\r\nadventurer, you immediately realize what this means. You notice that\r\nevery single cell in the grid are initially evil. You should purify all\r\nof these cells.The only method of tile purification known to you is by\r\ncasting the \"Purification\" spell. You cast this spell on a single tile\r\nthen, all cells that are located in the same row and all cells that are\r\nlocated in the same column as the selected tile become purified\r\n(including the selected tile)! It is allowed to purify a cell more than\r\nonce.You would like to purify all cells while minimizing the number of\r\ntimes you cast the \"Purification\" spell. This sounds very easy, but you\r\njust noticed that some tiles are particularly more evil than the other\r\ntiles. You cannot cast the \"Purification\" spell on those particularly\r\nmore evil tiles, not even after they have been purified. They can still\r\nbe purified if a cell sharing the same row or the same column gets\r\nselected by the \"Purification\" spell.Please find some way to purify all\r\nthe cells with the minimum number of spells cast. Print -1 if there is\r\nno such way.\r\n",
    "solutions": [
        "#include <stdio.h>\n#define N 110\n\nchar s[N][N];\nbool fl[N];\nint y[N], x[N];\n\nint main() {\n\tint n, i, j;\n//\tfreopen (\"in.txt\", \"r\", stdin);\n\tscanf(\"%d\", &n);\n\tfor (i=0; i<n; i++) scanf(\"%s\", s[i]);\n\tfor (i=0; i<n; i++) {\n\t\tfor (j=0; j<n; j++) if (s[i][j]=='.') break;\n\t\tif (j==n) break;\n\t\ty[i]=j;\n\t}\n\tif (i<n) {\n\t\tfor (i=0; i<n; i++) {\n\t\t\tfor (j=0; j<n; j++) if (s[j][i]=='.') break;\n\t\t\tif (j==n) break;\n\t\t\tx[i]=j;\n\t\t}\n\t\tif (i<n) puts(\"-1\");\n\t\telse for (i=0; i<n; i++) printf(\"%d %d\\n\", x[i]+1, i+1);\n\t} else for (i=0; i<n; i++) printf(\"%d %d\\n\", i+1, y[i]+1);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "matrices"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Purification.json",
    "editorial_link": "https://codeforces.com//blog/entry/8417",
    "editorial": "Obviously the minimum possible answer is n (why?). But is it always possible to purify all the cells with n spells?\nIf there exist a row consisting of entirely \"E\" cells and a column consisting of entirely \"E\" cells, then the answer is -1. This is since the cell with that row and that column cannot be purifed.\nOtherwise, without loss of generality let's suppose there is no row consisting entirely of \"E\". Then, for each row, find any \".\" cell. Purify it. The case with no column consisting entirely of \"E\" is similar."
}