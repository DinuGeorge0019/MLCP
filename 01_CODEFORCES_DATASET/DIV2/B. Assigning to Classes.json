{"link": "https://codeforces.com//contest/1300/problem/B", "problemId": "536069", "problem_idx": "B", "shortId": "1300B", "contest_number": "1300", "problem_submissions": {"E": [70656422, 70660342, 70659594, 70663407, 70663445, 70663695, 70662627, 70664459, 70667573, 70667578, 70667153, 70667998, 70667370, 70665044, 70668944, 70668742, 70668939, 70666794, 70654169], "D": [70649967, 70648316, 70653519, 70647449, 70651136, 70653985, 70656894, 70651482, 70650140, 70652905, 70654553, 70654763, 70657422, 70654653, 70647217, 70652554, 70651738, 70666577], "C": [70637820, 70637616, 70643543, 70640283, 70645889, 70644943, 70645600, 70643218, 70643243, 70643430, 70644879, 70643858, 70645790, 70643117, 70639743, 70644978, 70645908, 70643196], "B": [70633510, 70632581, 70637741, 70648477, 70642916, 70637878, 70636707, 70634786, 70633496, 70632050, 70637586, 70633740, 70639225, 70635607, 70634472, 70636324, 70635597, 70636449], "A": [70629102, 70628944, 70632868, 70644279, 70639039, 70634945, 70632554, 70630514, 70629803, 70629176, 70629854, 70629908, 70633145, 70629847, 70629744, 70641116, 70631231, 70631279]}, "name": "B. Assigning to Classes", "statement": "of the array [a_1, a_2,\r\ndots, a_{2k+1}] of odd number of elements is defined as follows: let\r\n[b_1, b_2,\r\ndots, b_{2k+1}] be the elements of the array in the sorted order. Then\r\nmedian of this array is equal to b_{k+1}.There are 2n students, the i-th\r\nstudent has skill level a_i. It\u2019s that all skill levels are\r\ndistinct.Let\u2019s define as the median of skill levels of students of the\r\nclass.As a principal of the school, you would like to assign each\r\nstudent to one of the 2 classes such that each class has (not divisible\r\nby 2). The number of students in the classes may be equal or different,\r\nby your choice. Every student has to be assigned to exactly one class.\r\nAmong such partitions, you want to choose one in which the absolute\r\ndifference between skill levels of the classes is minimized.What is the\r\nminimum possible absolute difference you can achieve?\r\n", "solutions": ["#include<bits/stdc++.h>\n#define Rint register int\n#define MP make_pair\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> pii;\ntemplate<typename T>\ninline void read(T &x){\n\tint ch = getchar(); x = 0;\n\tbool f = false;\n\twhile((ch < '0' || ch > '9') && ch != '-') ch = getchar();\n\tif(ch == '-'){f = true; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0'; ch = getchar();}\n\tif(f) x = -x;\t\n}\nconst int N = 200003;\nint n, a[N], t, ans;\nint main(){\n\tread(t);\n\twhile(t --){\n\t\tread(n);\n\t\tfor(Rint i = 1;i <= 2 * n;++ i) read(a[i]);\n\t\tsort(a + 1, a + 2 * n + 1);\n\t\tprintf(\"%d\\n\", a[n + 1] - a[n]);\n\t}\n}"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1000", "interactive": false}