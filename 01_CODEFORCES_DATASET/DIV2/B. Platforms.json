{
    "link": "https://codeforces.com//contest/18/problem/B",
    "problemId": "83",
    "problem_idx": "B",
    "shortId": "18B",
    "contest_number": "18",
    "problem_submissions": {
        "E": [
            81065,
            81306,
            80765,
            81264,
            81531,
            81749,
            81052,
            81910,
            82769,
            83595,
            82917,
            82903,
            83429,
            82503,
            82497,
            82370,
            470419
        ],
        "D": [
            80763,
            80489,
            81776,
            80347,
            81284,
            81376,
            81320,
            81622,
            81610
        ],
        "B": [
            80357,
            80881,
            79919,
            80575,
            80236,
            80254,
            80116,
            80063,
            80223,
            83594,
            80352,
            80834,
            80541,
            80588,
            81110,
            80898,
            82232,
            81439
        ],
        "C": [
            79922,
            80066,
            79784,
            80695,
            79953,
            79859,
            80277,
            80229,
            79880,
            79798,
            79989,
            80024,
            79954,
            80323,
            79676,
            79918
        ],
        "A": [
            79794,
            79576,
            79652,
            79640,
            79646,
            79718,
            79820,
            79725,
            79739,
            79651,
            79729,
            79883,
            79745,
            80732,
            80006,
            79782
        ]
    },
    "name": "B. Platforms",
    "statement": "In one one-dimensional world there are platforms. Platform with index\r\n(platforms are numbered from 1) is a segment with coordinates , and .\r\nGrasshopper Bob starts to jump along the platforms from point , with\r\neach jump he moves exactly units right. Find out the coordinate of the\r\npoint, where Bob will fall down. The grasshopper falls down, if he finds\r\nhimself not on the platform, but if he finds himself on the edge of the\r\nplatform, he doesn\u2019t fall down.\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <functional>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <ctime>\n#include <cassert>\n#include <queue>\n#include <stack>\n#include <cstdarg>\n\nusing namespace std;\n\n#define TASKNAME \"h\"\n#define pb push_back\n#define mp make_pair\n#define first fi\n#define second se\n#define forn(i, n) for (int i=0; i<(int)n; i++)\n#define all(a) a.begin(), a.end()\n\ntypedef long double ldb;\ntypedef long long lld;\ntypedef unsigned long long uld;\ntypedef vector<int> vi;\ntypedef complex<double> cd;\n\ndouble const eps=1e-9;\nldb const epsl=1e-9;\nint const inf=0x3fffffff;\nint const infu=0x7fffffff;\nlld const infl=0x3fffffffffffffffLL;\nuld const inful=0x7fffffffffffffffLL;\ntemplate <class T>\ninline T sqr(const T &a) {\n    return a*a;\n}\n\n\nint main () {\n//  freopen (TASKNAME\".in\", \"r\", stdin);\n//  freopen (TASKNAME\".out\", \"w\", stdout);\n    lld n, d, m, l;\n    cin >> n >> d >> m >> l;\n    lld k=0, x=0;\n    for (lld i=0; ;) {\n        lld t=(l-x)/d;\n        i+=t;\n        x+=t*d;\n        k+=x/m;\n        x%=m;\n        if (k>=n || x>l) {\n            cout << i*d << endl;\n            return 0;\n        }\n        t=1;\n        i+=t;\n        x+=t*d;\n        k+=x/m;\n        x%=m;\n        if (k>=n || x>l) {\n            cout << i*d << endl;\n            return 0;\n        }\n    }\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Platforms.json",
    "editorial_link": "https://codeforces.com//blog/entry/463",
    "editorial": "In this problem you were to determine a coordinate where the grasshoper would fall down. To do so, let's keep the position of grasshoper at a certain moment of time.\nTo avoid TLE one should \"move\" the grasshoper along a platform in O(1) time (not in the cycle). The grasshoper will do j = (righti-x)/d jumps along platform \"i\", where x is the grasshoper's coordinate (he's standing at the platform), and righti is a right coordinate of the platform. So we can move the grasshoper on j*d to the right at once."
}