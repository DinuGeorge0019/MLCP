{
    "link": "https://codeforces.com//contest/1543/problem/A",
    "problemId": "1038885",
    "problem_idx": "A",
    "shortId": "1543A",
    "contest_number": "1543",
    "problem_submissions": {
        "E": [
            121638293,
            121640122,
            121646039,
            121646816,
            121811012,
            121760431,
            121760422,
            121760385,
            121760374,
            121760355,
            121760336,
            121760282,
            121760064,
            121760038,
            121759905,
            121653632,
            121644982,
            121669265,
            121699461,
            121677102,
            121676768,
            121663043,
            121682193,
            121682008,
            121681968,
            121681825
        ],
        "C": [
            121607103,
            121580363,
            121606682,
            121627500,
            121653560,
            121590146,
            121589009,
            121582693,
            121614005,
            121615009,
            121616095,
            121613756,
            121596961,
            121599154,
            121597926,
            121608185,
            121597933,
            121606103,
            121606203
        ],
        "D2": [
            121596158,
            121601464,
            121617704,
            121620392,
            121626490,
            121619638,
            121618444,
            121618704,
            121605621,
            121605043,
            121602716,
            121616842,
            121615764,
            121615962,
            121615812,
            121620480,
            121619304,
            121615169,
            121624602
        ],
        "D1": [
            121576532,
            121593477,
            121613266,
            121597889,
            121614339,
            121601755,
            121604364,
            121608739,
            121598195,
            121595487,
            121589696,
            121586209,
            121618059,
            121609771,
            121609361,
            121593980,
            121614987,
            121614945,
            121599352
        ],
        "B": [
            121572816,
            121573125,
            121599866,
            121581407,
            121575511,
            121573418,
            121573029,
            121584593,
            121575414,
            121574254,
            121573423,
            121577407,
            121575483,
            121573867,
            121576997,
            121576837,
            121577599,
            121574767,
            121583481
        ],
        "A": [
            121572516,
            121572434,
            121598213,
            121578311,
            121573469,
            121572491,
            121577467,
            121587968,
            121572718,
            121572541,
            121572464,
            121574176,
            121573349,
            121572610,
            121574728,
            121572920,
            121574400,
            121572846,
            121578119
        ]
    },
    "name": "A. Exciting Bets",
    "statement": "Welcome to Rockport City!It is time for your first ever race in the game\r\nagainst Ronnie. To make the race interesting, you have bet a dollars and\r\nRonnie has bet b dollars. But the fans seem to be disappointed. The\r\nexcitement of the fans is given by gcd(a,b), where gcd(x, y) denotes the\r\ngreatest common divisor (GCD) of integers x and y. To make the race more\r\nexciting, you can perform two types of operations: Increase both a and b\r\nby 1. Decrease both a and b by 1. This operation can only be performed\r\nif both a and b are greater than 0. In one move, you can perform any one\r\nof these operations. You can perform arbitrary (possibly zero) number of\r\nmoves. Determine the maximum excitement the fans can get and the minimum\r\nnumber of moves required to achieve it.Note that gcd(x,0)=x for any x\r\nge 0.\r\n",
    "solutions": [
        "// Problem: A. Exciting Bets\n// Contest: Codeforces - Codeforces Round #730 (Div. 2)\n// URL: https://codeforces.com/contest/1543/problem/A\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//And in that light,I find deliverance.\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nconst int p=998244353;\nint qp(int x,int y)\n{\n\tint res=1;\n\tfor(int t=x; y; y>>=1,t=t*t%p) if(y&1) res=res*t%p;\n\treturn res;\n}\nsigned main()\n{\n\tfor(int T=read();T--;)\n\t{\n\t\tint n=read(),m=read();\n\t\tif(n==m) puts(\"0 0\");\n\t\telse\n\t\t{\n\t\t\tint x=abs(n-m);\n\t\t\tprintf(\"%lld \",abs(n-m));\n\t\t\tprintf(\"%lld\\n\",min(n%x,(x-(n%x))%x));\n\t\t}\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Exciting Bets.json",
    "editorial_link": "https://codeforces.com//blog/entry/92582",
    "editorial": "TutorialIf Unable to parse markup [type=CF_MATHJAX], the fans can get an\r\ninfinite amount of excitement, and we can achieve this by applying the\r\nfirst operation infinite times.Otherwise, the maximum excitement the\r\nfans can get is Unable to parse markup [type=CF_MATHJAX] and the minimum\r\nnumber of moves required to achieve it is Unable to parse markup\r\n[type=CF_MATHJAX]. ProofWithout loss of generality, assume otherwise we\r\ncan swap and . We know that . Notice that no matter how many times we\r\napply any operation, the value of does not change. We can arbitrarily\r\nchange the value of to a multiple of by applying the operations. In this\r\nway, we can achieve a equal to . Now, since for any positive and , can\r\nnever exceed . So, we cannot achieve a higher GCD by any means.To\r\nachieve the required , we need to make a multiple of Unable to parse\r\nmarkup [type=CF_MATHJAX] using as few operations as possible. There are\r\ntwo ways to do so decrease to the largest multiple of less than or equal\r\nto or increase to the smallest multiple of greater than . The number of\r\noperations required to do so are Unable to parse markup\r\n[type=CF_MATHJAX] and Unable to parse markup [type=CF_MATHJAX]\r\nrespectively. We will obviously choose the minimum of the two. Also\r\nnotice that Unable to parse markup [type=CF_MATHJAX] since Unable to\r\nparse markup [type=CF_MATHJAX]. So, it doesnât matter if we use either\r\nor to determine the minimum number of operations. Time Complexity per\r\ntest case.\r\n",
    "hint": []
}