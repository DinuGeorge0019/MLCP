{"link": "https://codeforces.com//contest/1715/problem/E", "problemId": "1513953", "problem_idx": "E", "shortId": "1715E", "contest_number": "1715", "problem_submissions": {"F": [169148274, 169155365, 169130889, 169155985, 169108945, 169574810, 169163231, 169141940, 169196708], "E": [169127780, 169131038, 169118368, 169119601, 169121517, 169134266, 169131152, 169132329, 169132606, 169133682, 169162968, 169135131, 169132730, 169135556, 169141593, 169136787, 169114950, 169142196, 169141933, 169141598], "D": [169113859, 169112143, 169123073, 169198160, 169109801, 169126906, 169218994, 169116160, 169193819, 169119863, 169123507, 169122322, 169117695, 169108158, 169121681, 169123192, 169123408, 169275333, 169121118, 169125621, 169118823, 169120372, 169123621, 169124629], "C": [169107451, 169103179, 169137078, 169101370, 169129288, 169102686, 169112899, 169107306, 169108346, 169113649, 169121461, 169112477, 169108680, 169197238, 169116719, 169112431, 169195068, 169118011, 169144372, 169114599, 169111934, 169113718], "B": [169102135, 169098162, 169135707, 169097670, 169093858, 169101514, 169098876, 169101987, 169101035, 169096282, 169099222, 169103628, 169099009, 169100124, 169100205, 169104726, 169103909, 169104946, 169099294], "A": [169092934, 169092062, 169134952, 169093933, 169091995, 169093151, 169092986, 169094481, 169092501, 169092283, 169092715, 169094922, 169093338, 169093831, 169094306, 169125908, 169096348, 169096156, 169094226]}, "name": "E. Long Way Home", "statement": "Stanley lives in a country that consists of n cities (he lives in city\r\n1). There are bidirectional roads between some of the cities, and you\r\nknow how long it takes to ride through each of them. Additionally, there\r\nis a flight between each pair of cities, the flight between cities u and\r\nv takes (u - v)^2 time.Stanley is quite afraid of flying because of\r\nwatching \"Sully: Miracle on the Hudson\" recently, so he can take at most\r\nk flights. Stanley wants to know the minimum time of a journey to each\r\nof the n cities from the city 1.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline int in(){\n\tint x;\n\tscanf(\"%d\",&x);\n\treturn x;\n}\nconst int N=1e5+5;\ntypedef long long ll;\nconst ll inf=1e13;\nint n,m,k;\nint lst[N],to[N<<1],len[N<<1],nxt[N<<1],ec;\ninline void ae(int x,int y,int z){\n\tto[++ec]=y,nxt[ec]=lst[x],len[ec]=z,lst[x]=ec;\t\n}\nll dis[N];\nvoid dijkstra(){\n\tpriority_queue<pair<ll,int> > pq;\n\tfor(int i=1;i<=n;i++)pq.push(make_pair(-dis[i],i));\n\twhile(pq.size()){\n\t\tint x=pq.top().second;\n\t\tll d=-pq.top().first;\n\t\tpq.pop();\n\t\tif(d!=dis[x])continue;\n\t\tfor(int i=lst[x];i;i=nxt[i]){\n\t\t\tint y=to[i];\n\t\t\tif(dis[y]>d+len[i]){\n\t\t\t\tdis[y]=d+len[i];\n\t\t\t\tpq.push(make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nll px[N],py[N];\nint q[N],ql,qr;\nbool check(int a,int b,int c){\n\tll v1=(ll)(py[b]-py[a])*(px[c]-px[a]);\n\tll v2=(ll)(py[c]-py[a])*(px[b]-px[a]);\n\treturn v1>=v2;\n}\nll get(int p,int k){\n\treturn py[p]-2*px[p]*k;\n}\nvoid dp(){\t\n\tql=1,qr=0;\n\tfor(int i=1;i<=n;i++){\n\t\tpx[i]=i,py[i]=dis[i]+(ll)i*i;\n\t\twhile(ql<qr&&check(q[qr-1],q[qr],i))qr--;\n\t\tq[++qr]=i;\n\t\twhile(ql<qr&&get(q[ql],i)>=get(q[ql+1],i))ql++;\n\t\tdis[i]=get(q[ql],i)+(ll)i*i;\n\t}\n}\nint main(){\n\tn=in(),m=in(),k=in();\n\twhile(m--){\n\t\tint x=in(),y=in(),z=in();\n\t\tae(x,y,z),ae(y,x,z);\t\n\t}\n\tfor(int i=2;i<=n;i++)dis[i]=inf;\n\tdijkstra();\n\twhile(k--){\n\t\tdp();\n\t\treverse(dis+1,dis+n+1);\n\t\tdp();\n\t\treverse(dis+1,dis+n+1);\n\t\tdijkstra();\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%lld \",dis[i]);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"], "dificulty": "2400", "interactive": false}