{
    "link": "https://codeforces.com//contest/1635/problem/C",
    "problemId": "1304249",
    "problem_idx": "C",
    "shortId": "1635C",
    "contest_number": "1635",
    "problem_submissions": {
        "F": [
            147074799,
            147095752,
            147102178,
            147104275
        ],
        "E": [
            147062187,
            147069534,
            147070601,
            147071820,
            147072661,
            147071018,
            147073981,
            147068936,
            147074142,
            147080760,
            147076462,
            147075385,
            147083209,
            147071491,
            147078900,
            147071624,
            147081688,
            147079690,
            147084319
        ],
        "D": [
            147053217,
            147052386,
            147056630,
            147057231,
            147060557,
            147060631,
            147061935,
            147063792,
            147060134,
            147103502,
            147102937,
            147062678,
            147065535,
            147062609,
            147060941,
            147064885,
            147067705,
            147078835,
            147068792,
            147065392,
            147061320
        ],
        "C": [
            147045170,
            147044912,
            147046365,
            147045126,
            147049650,
            147049621,
            147048160,
            147047404,
            147047609,
            147047366,
            147047254,
            147054268,
            147048212,
            147053384,
            147048532,
            147046997,
            147047963,
            147049441,
            147044930
        ],
        "B": [
            147039520,
            147040113,
            147040251,
            147041870,
            147044628,
            147040558,
            147042641,
            147039735,
            147042175,
            147042000,
            147041459,
            147043659,
            147041936,
            147043726,
            147040154,
            147042155,
            147041291,
            147040938,
            147041038
        ],
        "A": [
            147036699,
            147037179,
            147036802,
            147037015,
            147036879,
            147036847,
            147037144,
            147036925,
            147036758,
            147037118,
            147036774,
            147037869,
            147036975,
            147036790,
            147036876,
            147036819,
            147036907,
            147037053,
            147036783
        ]
    },
    "name": "C. Differential Sorting",
    "statement": "You are given an array a of n elements. Your can perform the following\r\noperation no more than n times: Select three indices x,y,z (1\r\nleq x < y < z\r\nleq n) and replace a_x with a_y - a_z. After the operation, |a_x| need\r\nto be less than 10^{18}.Your goal is to make the resulting array . If\r\nthere are multiple solutions, you can output any. If it is impossible to\r\nachieve, you should report it as well.\r\n",
    "solutions": [
        "// Problem: C. Differential Sorting\n// Contest: Codeforces Round #772 (Div. 2)\n// URL: https://codeforces.com/contest/1635/problem/C\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//And in that light,I find deliverance.\n#include<bits/stdc++.h>\n// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\nusing namespace std;\n#define int long long\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nconst int p=998244353;\nint qp(int x,int y)\n{\n\tint res=1;\n\tfor(int t=x; y; y>>=1,t=t*t%p) if(y&1) res=res*t%p;\n\treturn res;\n}\nint a[1000003];\nint x[1000003],y[1000003],z[1000003];\nsigned main()\n{\n\tfor(int T=read();T--;)\n\t{\n\t\tint n=read();\n\t\tfor(int i=1; i<=n; ++i) a[i]=read();\n\t\tint v=-999,pos=n,ans=0;\n\t\tfor(int i=n-1; i>=1; --i)\n\t\t{\n\t\t\tif(v>=0)\n\t\t\t{\n\t\t\t\t++ans;\n\t\t\t\tx[ans]=i,y[ans]=i+1,z[ans]=pos;\n\t\t\t\ta[i]=a[i+1]-v;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(a[i]>a[i+1])\n\t\t\t{\n\t\t\t\tans=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i+1]>v)\n\t\t\t{\n\t\t\t\tpos=i+1,v=a[i+1];\n\t\t\t} \n\t\t}\n\t\tif(ans==-1)\n\t\t{\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t\tfor(int i=1; i<=ans; ++i) printf(\"%lld %lld %lld\\n\",x[i],y[i],z[i]);\n\t\t\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Differential Sorting.json",
    "editorial_link": "https://codeforces.com//blog/entry/100153",
    "editorial": "First of all, if , then the answer is since we canât change the last two\r\nelements.If , there exists a simple solution: perform the operation for\r\neach .Otherwise, the answer exists if and only if the initial array is\r\nsorted. Proof: Assume that and we can sort the array after operations.\r\nConsider the last operation we performed (). Since all elements should\r\nbe negative after the last operation, so should hold before the last\r\noperation. But after this, so the array isnât sorted in the end. By\r\ncontradiction, we have proved that we canât perform any operations as\r\nlong as .\r\n",
    "hint": []
}