{"link": "https://codeforces.com//contest/1364/problem/C", "problemId": "647244", "problem_idx": "C", "shortId": "1364C", "contest_number": "1364", "problem_submissions": {"E": [83685190, 83684728, 83670044, 83708391, 86874545, 83727888, 94916861, 83733626, 83892588], "D": [83674039, 83643909, 83643324, 83650173, 83654530, 83655343, 83656667, 83658116, 83652702, 83655398, 83657128, 83655879, 83656798, 83659303, 83654673, 83652945, 83654032, 83654691, 83660980, 84168459, 83653853], "C": [83641956, 83631075, 83632825, 83637025, 83635932, 83634309, 83632050, 83634741, 83637967, 83633786, 83640244, 83634458, 83638454, 83638371, 83638980, 83647774, 83644474, 83643505, 83634306, 83639352], "B": [83634593, 83624903, 83627972, 83631302, 83628554, 83625631, 83625293, 83627339, 83628623, 83628644, 83625351, 83628184, 83628428, 83624769, 83633106, 83628572, 83637716, 83626469, 83630293], "A": [83629697, 83628427, 83623168, 83625873, 83624275, 83623298, 83623685, 83623482, 83625309, 83624536, 83623274, 83624381, 83624214, 83623297, 83623701, 83625943, 83623507, 83625742]}, "name": "C. Ehab and Prefix MEXs", "statement": "Given an array a of length n, find another array, b, of length n such\r\nthat: for each i (1\r\nle i\r\nle n) MEX(\r\n{b_1, b_2,\r\nldots, b_i\r\n})=a_i. The MEX of a set of integers is the smallest non-negative\r\ninteger that doesn\u2019t belong to this set.If such array doesn\u2019t exist,\r\ndetermine this.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  vector<int> used(2 * n, false);\n  for (auto &i : a) {\n    cin >> i;\n    used[i] = true;\n  }\n  vector<int> b(n);\n  for (int i = 0, j = 0; i < n && j < 2 * n; ++i) {\n    if (i > 0 && a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n    } else {\n      while (j < 2 * n && used[j]) {\n        j++;\n      }\n      used[j] = true;\n      b[i] = j;\n    }\n  }\n  set<int> ans;\n  for (int i = 0; i < 2 * n; ++i) {\n    ans.insert(i);\n  }\n  for (int i = 0; i < n; ++i) {\n    ans.erase(b[i]);\n    if (*begin(ans) != a[i]) {\n      cout << -1;\n      return 0;\n    }\n  }\n  for (const auto &i : b) {\n    cout << i << ' ';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "greedy"], "dificulty": "1600", "interactive": false}