{"link": "https://codeforces.com//contest/1623/problem/A", "problemId": "1243265", "problem_idx": "A", "shortId": "1623A", "contest_number": "1623", "problem_submissions": {"E": [140927316, 140928588, 140930913, 140931529, 140930666, 140933308, 140932491, 140927816, 140937929, 140940400, 140934079, 140940202, 140928211, 140936652, 140911137, 140938749, 140941503, 140941228, 140938408, 140940310], "D": [140917013, 140919394, 140925084, 140922860, 140922841, 140918471, 140924963, 140923599, 140924181, 140925202, 140925220, 140928107, 140933937, 140922988, 140926612, 140931586, 140929916, 140930490, 140925401, 140923945], "A": [140906789, 140901830, 140902316, 140901965, 140901890, 140902105, 140901764, 140909860, 140901988, 140902630, 140901845, 140901878, 140902576, 140902335, 140902196, 140902015, 140902189, 140902188, 140903240], "C": [140904718, 140907986, 140909100, 140911556, 140909513, 140908941, 140916100, 140929063, 140914447, 140912787, 140914401, 140913485, 140929704, 140924697, 140932081, 140917741, 140907191, 140910390, 140913379, 140914345], "B": [140902082, 140904432, 140906305, 140905274, 140903910, 140903807, 140906896, 140906851, 140906344, 140908551, 140906181, 140906829, 140906183, 140905516, 140935513, 140912560, 140903639, 140905940, 140907051, 140906596]}, "name": "A. Robot Cleaner", "statement": "A robot cleaner is placed on the floor of a rectangle room, surrounded\r\nby walls. The floor consists of n rows and m columns. The rows of the\r\nfloor are numbered from 1 to n from top to bottom, and columns of the\r\nfloor are numbered from 1 to m from left to right. The cell on the\r\nintersection of the r-th row and the c-th column is denoted as (r,c).\r\nThe initial position of the robot is (r_b, c_b).In one second, the robot\r\nmoves by dr rows and dc columns, that is, after one second, the robot\r\nmoves from the cell (r, c) to (r + dr, c + dc). Initially dr = 1, dc\r\n= 1. If there is a vertical wall (the left or the right walls) in the\r\nmovement direction, dc is before the movement, so the new value of dc is\r\n-dc. And if there is a horizontal wall (the upper or lower walls), dr is\r\nbefore the movement, so the new value of dr is -dr.Each second\r\n(including the moment before the robot starts moving), the robot cleans\r\nevery cell lying in the same row the same column as its position. There\r\nis only one dirty cell at (r_d, c_d). The job of the robot is to clean\r\nthat dirty cell. Given the floor size n and m, the robot\u2019s initial\r\nposition (r_b, c_b) and the dirty cell\u2019s position (r_d, c_d), find the\r\ntime for the robot to do its job.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tios::sync_with_stdio(false); cin.tie(0);\n\tint T; cin >> T;\n\twhile (T--) {\n\t\tint n, m, x, y, a, b;\n\t\tcin >> n >> m >> x >> y >> a >> b;\n\t\tint dx = 1, dy = 1, cnt = 0;\n\t\twhile (1) {\n\t\t\tif (x == a || y == b) break;\n\t\t\t++cnt;\n\t\t\tif (x + dx < 1 || x + dx > n) dx = -dx;\n\t\t\tif (y + dy < 1 || y + dy > m) dy = -dy;\n\t\t\tx += dx; y += dy;\n\t\t}\n\t\tcout << cnt << endl;\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["brute force", "implementation", "math"], "dificulty": "800", "interactive": false}