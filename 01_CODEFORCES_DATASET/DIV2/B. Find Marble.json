{
    "link": "https://codeforces.com//contest/285/problem/B",
    "problemId": "2756",
    "problem_idx": "B",
    "shortId": "285B",
    "contest_number": "285",
    "problem_submissions": {
        "D": [
            3371037,
            3370625,
            3370823,
            3372478,
            3371850,
            3371021,
            3371148,
            3371736,
            3371740,
            3371775,
            3371705,
            3372534,
            3374253,
            3372500,
            3373167,
            3372249,
            3372418,
            3372090,
            3372165
        ],
        "B": [
            3367282,
            3367078,
            3367096,
            3368120,
            3368239,
            3368103,
            3368574,
            3367927,
            3366943,
            3368403,
            3368966,
            3366597,
            3368435,
            3368190,
            3370454,
            3368505,
            3368759,
            3368536,
            3367749
        ],
        "C": [
            3366599,
            3367784,
            3367644,
            3367061,
            3368999,
            3366839,
            3367511,
            3367173,
            3368036,
            3367341,
            3367574,
            3367042,
            3367218,
            3366730,
            3369795,
            3367285,
            3366926,
            3366924,
            3368674
        ],
        "A": [
            3366089,
            3366128,
            3366162,
            3369207,
            3366707,
            3366322,
            3366804,
            3366259,
            3366105,
            3366337,
            3366390,
            3366085,
            3366579,
            3366287,
            3370052,
            3366946,
            3366410,
            3366150,
            3366484
        ]
    },
    "name": "B. Find Marble",
    "statement": "Petya and Vasya are playing a game. Petya\u2019s got non-transparent glasses,\r\nstanding in a row. The glasses\u2019 positions are indexed with integers from\r\nto from left to right. Note that the positions are indexed but the\r\nglasses are not.First Petya puts a marble under the glass in position .\r\nThen he performs some (possibly zero) shuffling operations. One\r\nshuffling operation means moving the glass from the first position to\r\nposition , the glass from the second position to position and so on.\r\nThat is, a glass goes from position to position . Consider all glasses\r\nare moving simultaneously during one shuffling operation. When the\r\nglasses are shuffled, the marble doesn\u2019t travel from one glass to\r\nanother: it moves together with the glass it was initially been put\r\nin.After all shuffling operations Petya shows Vasya that the ball has\r\nmoved to position . Vasya\u2019s task is to say what minimum number of\r\nshuffling operations Petya has performed or determine that Petya has\r\nmade a mistake and the marble could not have got from position to\r\nposition .\r\n",
    "solutions": [
        "#include<vector>\n#include<list>\n#include<map>\n#include<set>\n#include<deque>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<algorithm>\n#include<functional>\n#include<numeric>\n#include<utility>\n#include<iostream>\n#include<sstream>\n#include<iomanip>\n#include<cmath>\n#include<cstdlib>\n#include<cctype>\n#include<string>\n#include<cstring>\n#include<cstdio>\n#include<ctime>\n#include<climits>\n#include<complex>\n#include<cassert>\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define sz(x) (int)((x).size())\n#define all(x) x.begin(),x.end()\n#define clr(x) memset((x),0,sizeof(x))\n#define cdp(x) memset((x),-1,sizeof(x))\n#define rep(i,n) for (i=0;i<n;i++)\n#define Rep(i,a,b) for (i=a;i<=b;i++)\n#define ff(i,x) for (i=start[x];i!=-1;i=a[i].next)\n#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)\nusing namespace std;\nconst double eps=1e-8;\nconst double pi=acos(-1.0);\nint dblcmp(double d){if (fabs(d)<eps)return 0;return d>eps?1:-1;}\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\ntypedef vector<pii> vpi;\nint n,p[311111];\nbool v[311111];\nint main()\n{\n    int i,j,k,s,t;\n    cin>>n>>s>>t;\n    for (i=1;i<=n;i++)cin>>p[i];\n    int x=0;\n    while (1)\n    {\n        if (s==t)\n        {\n            printf(\"%d\\n\",x);\n            return 0;\n        }\n        if (v[s])\n        {\n            puts(\"-1\");\n            return 0;\n        }\n        v[s]=1;\n        s=p[s];\n        x++;\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Find Marble.json",
    "editorial_link": "https://codeforces.com//blog/entry/7093",
    "editorial": "It is known that a permutation can be considered as set of cycles. The\r\ninteger moves to for all . You can start moving from integer along the\r\ncycle. If you find integer , then print the length of the path. If you\r\nreturn to , then print .\r\n"
}