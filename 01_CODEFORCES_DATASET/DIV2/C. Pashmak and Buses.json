{
    "link": "https://codeforces.com//contest/459/problem/C",
    "problemId": "12586",
    "problem_idx": "C",
    "shortId": "459C",
    "contest_number": "459",
    "problem_submissions": {
        "A": [
            7465089,
            7456885,
            7454644,
            7456768,
            7455722,
            7465524,
            7454591,
            7455615,
            7455512,
            7464131,
            7465581,
            7455579,
            7454905,
            7474523,
            7454933,
            7455010,
            7455598,
            7466267
        ],
        "B": [
            7463181,
            7454658,
            7455082,
            7459475,
            7456945,
            7463304,
            7457262,
            7454941,
            7454662,
            7457373,
            7462108,
            7454808,
            7458807,
            7456880,
            7457346,
            7458825,
            7457232,
            7457461,
            7459089
        ],
        "E": [
            7461438,
            7462457,
            7460022,
            7462820,
            7462880,
            7468200,
            7468253,
            7466520,
            7474444,
            7467721,
            7467381,
            7470585,
            7456554,
            7470102,
            7470346,
            7467608,
            7469521,
            7472589,
            7472680,
            7473561,
            7469671
        ],
        "D": [
            7459251,
            7457162,
            7464074,
            7461213,
            7461612,
            7464875,
            7461670,
            7461881,
            7458376,
            7461351,
            7465461,
            7458321,
            7465138,
            7462417,
            7462812,
            7468054,
            7465094,
            7468318,
            7462068,
            7467891
        ],
        "C": [
            7456047,
            7467837,
            7462164,
            7465696,
            7466788,
            7462918,
            7459196,
            7464484,
            7473320,
            7471339,
            7461840,
            7460617,
            7467558,
            7470365,
            7465522,
            7462231,
            7464950,
            7467163,
            7471141
        ]
    },
    "name": "C. Pashmak and Buses",
    "statement": "Recently Pashmak has been employed in a transportation company. The\r\ncompany has buses and has a contract with a school which has students.\r\nThe school planned to take the students to different places for days\r\n(each day in one place). Each day the company provides all the buses for\r\nthe trip. Pashmak has to arrange the students in the buses. He wants to\r\narrange the students in a way that no two students become close friends.\r\nIn his ridiculous idea, two students will become close friends if and\r\nonly if they are in the same buses for all days.Please help Pashmak with\r\nhis weird idea. Assume that each bus has an unlimited capacity.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define MAX   1111\n#define FOR(i,a,b) for (int i=(a);i<=(b);i=i+1)\n#define REP(i,n) for (int i=0;i<(n);i=i+1)\nint d,n,k;\nint res[MAX][MAX];\nint cur[MAX];\nvoid process(void) {\n    scanf(\"%d%d%d\",&n,&k,&d);\n    FOR(i,1,d) cur[i]=1;\n    FOR(j,1,n) {\n        FOR(i,1,d) res[i][j]=cur[i];\n        if (j==n) break;\n        int t=d;\n        while (t>=1 && cur[t]==k) t--;\n        if (t<1) {\n            printf(\"-1\");\n            return;\n        }\n        cur[t]++;\n        FOR(l,t+1,d) cur[l]=1;\n    }\n    FOR(i,1,d) FOR(j,1,n) {\n        printf(\"%d\",res[i][j]);\n        if (j<n) printf(\" \"); else printf(\"\\n\");\n    }\n}\nint main(void) {\n    process();\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Pashmak and Buses.json",
    "editorial_link": "https://codeforces.com//blog/entry/13430",
    "editorial": "For each student consider a sequence of elements from to that shows the\r\nbus number which is taken by this student on each day. Obviously, there\r\nare different sequence at all, so if , pigeonhole principle indicates\r\nthat at least two of this sequences will be equal, so that two students\r\nwill become close friends and no solutions exist. But if , then we can\r\nassign a unique sequence to each student and compute the answer. For\r\ncomputing that, we can find the first -digits numbers in -based numbers.\r\nTotal complexity : Sample solutions: 7495236\r\n"
}