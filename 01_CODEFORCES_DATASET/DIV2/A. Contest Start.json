{
    "link": "https://codeforces.com//contest/1539/problem/A",
    "problemId": "1021670",
    "problem_idx": "A",
    "shortId": "1539A",
    "contest_number": "1539",
    "problem_submissions": {
        "F": [
            120107348,
            120107649,
            120097977,
            120099320,
            120098312,
            120109635,
            120105864,
            120629204,
            120113433,
            120106419,
            120104986,
            120113014,
            120101930,
            120110658,
            120109502,
            120113744,
            120116844,
            120114654,
            120115147
        ],
        "E": [
            120093781,
            120079364,
            120114726,
            120122564,
            120207189,
            120197883,
            120200475,
            120100072,
            120098623,
            120171381
        ],
        "B": [
            120070630,
            120060349,
            120061059,
            120060386,
            120060622,
            120062253,
            120060692,
            120629156,
            120061053,
            120062981,
            120062418,
            120061602,
            120061888,
            120061204,
            120064416,
            120067261,
            120060854,
            120063414,
            120061859,
            120065691,
            120065164
        ],
        "A": [
            120069368,
            120076735,
            120060240,
            120061153,
            120060245,
            120060841,
            120071571,
            120629142,
            120063706,
            120061645,
            120060943,
            120060282,
            120060860,
            120060194,
            120061081,
            120066922,
            120060268,
            120061240,
            120060385,
            120063176,
            120063285
        ],
        "D": [
            120067082,
            120090685,
            120072966,
            120078507,
            120084869,
            120076433,
            120086821,
            120629190,
            120078363,
            120083343,
            120083998,
            120082921,
            120077950,
            120072171,
            120081856,
            120078775,
            120086440,
            120082002,
            120072832,
            120082004,
            120079880
        ],
        "C": [
            120060552,
            120063745,
            120065169,
            120065204,
            120062357,
            120065301,
            120066339,
            120629175,
            120060313,
            120068918,
            120065740,
            120065066,
            120069921,
            120064011,
            120071005,
            120066689,
            120063119,
            120073312,
            120065303,
            120071920,
            120069029
        ]
    },
    "name": "A. Contest Start",
    "statement": "There are n people participating in some contest, they start\r\nparticipating in x minutes intervals. That means the first participant\r\nstarts at time 0, the second participant starts at time x, the third at\r\ntime 2\r\ncdot x, and so on.Duration of contest is t minutes for each participant,\r\nso the first participant finishes the contest at time t, the second at\r\ntime t + x, and so on. When a participant finishes the contest, their\r\ndissatisfaction equals to the number of participants that started the\r\ncontest (or starting it now), but haven\u2019t yet finished it.Determine the\r\nsum of dissatisfaction of all participants.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define pb push_back\n#define x first\n#define y second\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate <typename T> void chkmax(T &x,T y){x<y?x=y:T();}\ntemplate <typename T> void chkmin(T &x,T y){y<x?x=y:T();}\ntemplate <typename T> void readint(T &x)\n{\n\tx=0;int f=1;char c;\n\tfor(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+(c-'0');\n\tx*=f;\n}\n/*const int MOD=;\ninline int dmy(int x){return x>=MOD?x-MOD:x;}\ninline void inc(int &x,int y){x=dmy(x+y);}\nint qmi(int x,int y)\n{\n\tint ans=1;\n\tfor(;y;y>>=1,x=1ll*x*x%MOD)\n\t\tif(y&1)ans=1ll*ans*x%MOD;\n\treturn ans;\n}*/\n\nvoid solve()\n{\n\tll n,x,t;cin>>n>>t>>x;\n\tx/=t;\n\tif(x>n)cout<<n*(n-1)/2<<endl;\n\telse cout<<x*(n-x)+x*(x-1)/2<<endl;\n}\n\nint main()\n{\n\t#ifdef LOCAL\n\tfreopen(\"code.in\",\"r\",stdin);\n//\tfreopen(\"code.out\",\"w\",stdout);\n\t#endif\n\tint T;\n\treadint(T);\n\twhile(T--)solve();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "geometry",
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Contest Start.json",
    "editorial_link": "https://codeforces.com//blog/entry/91906",
    "editorial": "Let\u00e2\u0080\u0099s find which participants will disturb participant . Those are\r\nparticipants with number between and . So each of first participants\r\nwill get dissatisfaction, and each next participant will get 1\r\ndissatisfaction less, than previous. So the total answer is .\r\n"
}