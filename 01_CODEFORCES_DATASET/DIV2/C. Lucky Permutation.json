{"link": "https://codeforces.com//contest/287/problem/C", "problemId": "2762", "problem_idx": "C", "shortId": "287C", "contest_number": "287", "problem_submissions": {"B": [3389740, 3385851, 3390594, 3393152, 3386756, 3385467, 3386512, 3387058, 3386629, 3386855, 3386267, 3394348, 3386542, 3386317, 3386774, 3385430, 3386303, 3386690, 3386374], "E": [3388987, 3391965, 3389122, 3391520, 3389487, 3391136, 3390533, 3391898, 3391078, 3389973], "D": [3386764, 3390723, 3391406, 3390184, 3391781, 3540938, 3390136], "C": [3385718, 3386355, 3387824, 3386709, 3387896, 3386437, 3388881, 3388689, 3388362, 3389262, 3387586, 3387592, 3387606, 3387372, 3387548, 3388515, 3387560, 3388169, 3388584, 3387782], "A": [3384457, 3384792, 3384549, 3384653, 3387027, 3384478, 3385172, 3384678, 3384599, 3384586, 3384505, 3384624, 3384741, 3384474, 3384523, 3384546, 3384479, 3385128]}, "name": "C. Lucky Permutation", "statement": "A permutation of size is the sequence , consisting of distinct integers,\r\neach of them is from to .A lucky permutation is such permutation , that\r\nany integer meets this condition .You have integer . Find some lucky\r\npermutation of size .\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define clr(a) memset(a,0,sizeof(a))\nint n,p[1010000];\nint main() {\n\tscanf(\"%d\",&n);\n\tif (n%4==2||n%4==3) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tif (n%4==0) {\n\t\tfor (int i=1;i<=n/2;i++) {\n\t\t\tif (i%2==1) p[i]=i+1,p[n+1-i]=n-i;\n\t\t\telse p[i]=n+2-i,p[n+1-i]=i-1;\n\t\t}\n\t\tfor (int i=1;i<=n;i++) printf(\"%d \",p[i]);\t\t\n\t} else {\n\t\tfor (int i=1;i<=n/2;i++) {\n\t\t\tif (i%2==1) p[i]=i+1,p[n+1-i]=n-i;\n\t\t\telse p[i]=n+2-i,p[n+1-i]=i-1;\n\t\t}\n\t\tp[n/2+1]=n/2+1;\n\t\tfor (int i=1;i<=n;i++) printf(\"%d \",p[i]);\n\t}\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "dificulty": "1400", "interactive": false}