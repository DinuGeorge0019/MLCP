{
    "link": "https://codeforces.com//contest/1894/problem/A",
    "problemId": "2312798",
    "problem_idx": "A",
    "shortId": "1894A",
    "contest_number": "1894",
    "problem_submissions": {
        "E": [
            231780542,
            231780764,
            231783721,
            231789834,
            231788705,
            231788269,
            231784914,
            231788986,
            231801971,
            231786358,
            231788036,
            231815440,
            231786637,
            231808858,
            231789692,
            231801877,
            231817632,
            231801951
        ],
        "D": [
            231763745,
            231766056,
            231762523,
            231754895,
            231759834,
            231769389,
            231770188,
            231758327,
            231760530,
            231775160,
            231770452,
            231759047,
            231773241,
            231762950,
            231774799,
            231763275,
            231763670,
            231771730
        ],
        "C": [
            231756298,
            231755831,
            231757004,
            231877074,
            231770559,
            231763470,
            231760236,
            231765769,
            231774024,
            231754920,
            231758557,
            231758057,
            231762243,
            231765459,
            231756919,
            231760340,
            231755946,
            231756421,
            231763397
        ],
        "A": [
            231751883,
            231747419,
            231747509,
            231747329,
            231751165,
            231747346,
            231747376,
            231747139,
            231747693,
            231747813,
            231746849,
            231749093,
            231749182,
            231746695,
            231748186,
            231747273,
            231747195,
            231746971
        ],
        "B": [
            231748751,
            231750138,
            231749611,
            231749322,
            231755477,
            231750451,
            231753159,
            231749369,
            231750440,
            231749706,
            231748963,
            231754750,
            231753097,
            231749553,
            231754197,
            231749717,
            231750764,
            231754291
        ]
    },
    "name": "A. Secret Sport",
    "statement": "Let’s consider a game in which two players, A and B, participate. This\r\ngame is characterized by two positive integers, X and Y.The game\r\nconsists of , and each consists of . In each , of the players, either A\r\nor B, wins. A ends when one of the players reaches X wins in the of that\r\n. This player is declared the winner of the . The players play until one\r\nof them reaches Y wins in the . After that, the game ends, and this\r\nplayer is declared the winner of the entire game.You have just watched a\r\ngame but didn’t notice who was declared the winner. You remember that\r\nduring the game, n were played, and you know which player won each .\r\nHowever, you the values of X and Y. Based on the available information,\r\ndetermine who won the entire game A or B. If there is not enough\r\ninformation to determine the winner, you should also report it.\r\n",
    "solutions": [
        "#include <iostream>\nusing namespace std;\n\nint n;\nchar p[30];\n\nvoid solve() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        cin >> p[i];\n    }\n\n    cout << p[n] << '\\n';\n}\n\nint main() {\n#ifdef ONLINE_JUDGE\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n#endif\n\n    int t;\n    cin >> t;\n    for (int i = 1; i <= t; i++) {\n        solve();\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Secret Sport.json",
    "editorial_link": "https://codeforces.com//blog/entry/122074",
    "editorial": "The winner will be the player who wins the last play. This is true\r\nbecause the winner will be the player who wins the last set, because, if\r\nthis were not the case, the last set would not be played. And in a set,\r\nthe player who wins the last play wins, because if this were not the\r\ncase, the last play would not be played.\r\n",
    "hint": [
        "Hint 1 You can always bruteforce and , and check every pair of separately, but there is a tRiCkY solution that involves zero implementation.",
        "Hint 2 Have you ever watched a game of tennis, a game of volleyball, e.t.c?"
    ]
}