{
    "link": "https://codeforces.com//contest/2040/problem/A",
    "problemId": "3075495",
    "problem_idx": "A",
    "shortId": "2040A",
    "contest_number": "2040",
    "problem_submissions": {
        "E": [
            295634858,
            295598220,
            295603659,
            295602852,
            295609062,
            295608956,
            295609438,
            295613265,
            295617536,
            295622256,
            295615426,
            295623087,
            295613034,
            295632243,
            295615757,
            295623729,
            295822197,
            295614576,
            295629623,
            295677087,
            295677053,
            295616459,
            295615739
        ],
        "F": [
            295625297,
            295602948,
            295765575,
            295764437,
            295628810,
            295613638,
            295772184
        ],
        "C": [
            295613817,
            295578002,
            295582361,
            295582510,
            295585319,
            295585121,
            295589541,
            295584238,
            295583765,
            295584198,
            295582424,
            295585127,
            295590138,
            295581996,
            295587456,
            295580712,
            295586116,
            295581622,
            295590178,
            295583863
        ],
        "D": [
            295602955,
            295588244,
            295593423,
            295591690,
            295596226,
            295661257,
            295596632,
            295595711,
            295594858,
            295602270,
            295597697,
            295602059,
            295598368,
            295600419,
            295605426,
            295590011,
            295601199,
            295607620
        ],
        "B": [
            295586789,
            295590381,
            295574073,
            295576257,
            295574329,
            295574189,
            295580781,
            295572257,
            295573109,
            295573299,
            295575453,
            295572099,
            295577165,
            295593436,
            295571846,
            295572279,
            295571755,
            295574449,
            295577717,
            295572094
        ],
        "A": [
            295581636,
            295569030,
            295573127,
            295568276,
            295571294,
            295574905,
            295568027,
            295568114,
            295567840,
            295567999,
            295568293,
            295568412,
            295569901,
            295568913,
            295567935,
            295568054,
            295568783,
            295570941,
            295568578
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/137074",
    "editorial": "is divisible by if and only if . Letâs split all numbers into groups\r\naccording to the value . The second player wins if he chooses a number\r\nfrom the same group. This means that the first player must choose the\r\nnumber that is the only one in its group.\r\n",
    "name": "A. Game of Division",
    "statement": "You are given an array of integers a_1, a_2,\r\nldots, a_n of length n and an integer k.Two players are playing a game.\r\nThe first player chooses an index 1\r\nle i\r\nle n. Then the second player chooses a different index 1\r\nle j\r\nle n, i\r\nneq j. The first player wins if |a_i - a_j| is not divisible by k.\r\nOtherwise, the second player wins.We play as the first player. Determine\r\nwhether it is possible to win, and if so, which index i should be\r\nchosen.The absolute value of a number x is denoted by |x| and is equal\r\nto x if x\r\nge 0, and -x otherwise.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std; using ll = long long;using ld = long double;using pii = pair<int, int>;using pll = pair<ll, ll>;using vi = vector<int>;using vll = vector<ll>; constexpr int MOD = 1e9 + 7;constexpr int INF = 1e9;constexpr ll LINF = 1e18;constexpr ld EPS = 1e-9; #define fast_io() ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr)#define all(x) (x).begin(), (x).end()#define rall(x) (x).rbegin(), (x).rend()#define pb push_back#define eb emplace_back#define fi first#define se second#define sz(x) ((int)(x).size())#define dbg(x) cerr << #x << \" = \" << (x) << '\\n' void solve() {    int n, k;    cin >> n >> k;    vi a(n);    for(auto &x: a) cin >> x;    vi cnt(k, 0);    for(auto x: a) cnt[x % k]++;    int res = -1;    for(int i=0; i<n; ++i){        if(cnt[a[i] % k] == 1){            res = i+1;            break;        }    }    if(res != -1){        cout << \"YES\\n\" << res << \"\\n\";    }    else{        cout << \"NO\\n\";    }} int main() {    fast_io();    int t = 1;    cin >> t;    while (t--) solve();    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Game of Division.json",
    "hint": []
}