{
    "link": "https://codeforces.com//contest/1647/problem/A",
    "problemId": "1325135",
    "problem_idx": "A",
    "shortId": "1647A",
    "contest_number": "1647",
    "problem_submissions": {
        "E": [
            149328614,
            149306053,
            149316265,
            149308258,
            149317785,
            149313427,
            149312064,
            149315761,
            149304431,
            149320349,
            150085301,
            150042558,
            149322061,
            149314157,
            149320038,
            149317712,
            149323749,
            150451628,
            149317915,
            149318394,
            149323507,
            149319981
        ],
        "F": [
            149303385,
            150083877
        ],
        "D": [
            149287936,
            149297042,
            149288719,
            149296838,
            149289639,
            149297770,
            149297559,
            149297568,
            149315595,
            149296805,
            149293753,
            149297523,
            149298563,
            149301837,
            149303949,
            149304702,
            149307649,
            149304812,
            149312121
        ],
        "C": [
            149278105,
            149282014,
            149279931,
            149284899,
            149279456,
            149277016,
            149284452,
            149277474,
            149269562,
            149281799,
            149285826,
            149288910,
            149285483,
            149289384,
            149282591,
            149290109,
            149289945,
            149281141,
            149290895
        ],
        "B": [
            149272671,
            149276622,
            149275457,
            149274250,
            149274540,
            149272438,
            149278573,
            149272028,
            149276101,
            149277049,
            149276729,
            149282060,
            149280768,
            149280254,
            149275958,
            149282515,
            149283800,
            149273253,
            149287993
        ],
        "A": [
            149265543,
            149268740,
            149264746,
            149268469,
            149267568,
            149268599,
            149267275,
            149265283,
            149267772,
            149268479,
            149269295,
            149265276,
            149269381,
            149271464,
            149267445,
            149276391,
            149271015,
            149268133,
            149268825
        ]
    },
    "name": "A. Madoka and Math Dad",
    "statement": "Madoka finally found the administrator password for her computer. Her\r\nfather is a well-known popularizer of mathematics, so the password is\r\nthe answer to the following problem.Find the maximum decimal number\r\nwithout zeroes and with no equal digits in a row, such that the sum of\r\nits digits is n.Madoka is too tired of math to solve it herself, so help\r\nher to solve this problem!\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define f first\n#define s second\n//#define x first\n//#define y second\n//#define int li\n#define err if(debug_out)cout\n\nusing namespace std;\nusing li = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing pld = pair<ld, ld>;\n\nconst int INF = 1e9 + 13;\nconst li INF64 = 1e18 + 13;\nconst int N = 3e5 + 13;\nconst int LOGN = 20;\nconst int K = 22;\nconst int M = 998244353;//1e9 + 7;\nconst int A = 26;\nconst ld eps = 1e-8;\n\nmt19937 rnd(45768);\n\n/*\n*/\n\nint sum(int a, int b) {\n    a += b;\n    return (a >= M ? a - M : a);\n}\n\nint mul(int a, int b) {\n    return a * 1ll * b % M;\n}\n\nint dif(int a, int b) {\n    return sum(a, M - b);\n}\n\nint pow2(int n, int k) {\n    if(k == 0)\n        return 1;\n\n    int pw = pow2(n, k / 2);\n    pw = mul(pw, pw);\n\n    return (k % 2 == 0 ? pw : mul(pw, n));\n}\n\n/*\n*/\n\nvoid solve() {\n    int n;\n    cin >> n;\n\n    if(n == 1) {\n        cout << 1 << endl;\n        return;\n    }\n\n    string s = \"\";\n    while(n > 0) {\n        if(s.empty()) {\n            s += '2';\n            n -= 2;\n        } else if(s.back() == '1') {\n            if(n == 1) {\n                cout << 1 << s << endl;\n                return;\n            } else {\n                s += '2';\n                n -= 2;\n            }\n        } else {\n            s += '1';\n            n--;\n        }\n    }\n\n    cout << s << endl;\n}\n\nsigned main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    int t = 1;\n    cin >> t;\n\n    while(t--)\n        solve();\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Madoka and Math Dad.json",
    "editorial_link": "https://codeforces.com//blog/entry/100780",
    "editorial": "Since we want to maximize the number we need, we will first find the longest suitable number. Obviously, it is better to use only the numbers 1\n and 2\n for this. Therefore, the answer always looks like 2121\n or 1212\n. The first option is optimal when n\n has a remainder of 2\n or 0\n modulo 3\n, otherwise the second option is optimal.",
    "hint": []
}