{
    "link": "https://codeforces.com//contest/1808/problem/A",
    "problemId": "1854690",
    "problem_idx": "A",
    "shortId": "1808A",
    "contest_number": "1808",
    "problem_submissions": {
        "D": [
            199663586,
            199652295,
            199649543,
            199658153,
            199660313,
            199664555,
            199663522,
            199658681,
            199662131,
            199663211,
            199665809,
            199666904,
            199686788,
            200680943,
            199672659,
            199667818,
            199670491,
            199654888,
            199672673
        ],
        "E3": [
            199660988,
            199675708,
            199684437,
            199678631,
            199683096,
            201130452,
            199666847,
            199711014
        ],
        "E2": [
            199660914,
            199675587,
            199684591,
            199669150,
            199671171,
            199672422,
            199667417,
            199667886,
            199667544,
            199677124,
            199673172,
            199673912,
            199667116,
            200681161,
            200681118,
            199662837,
            199681512,
            199697948,
            199682318
        ],
        "E1": [
            199660827,
            199647476,
            199655105,
            199665173,
            199671231,
            199655192,
            199650032,
            199667518,
            199667485,
            199670735,
            199673329,
            199674123,
            199667097,
            200681014,
            199659398,
            199681451,
            199697918,
            199676180,
            199669612,
            199661602
        ],
        "C": [
            199660389,
            199669471,
            199646653,
            199653605,
            199654568,
            199648568,
            199646672,
            199649651,
            199653794,
            199654418,
            199657068,
            199657978,
            199676868,
            200680878,
            200680798,
            199678734,
            199656497,
            199658569,
            199658535,
            199649977
        ],
        "A": [
            199643949,
            199642214,
            199639989,
            199639150,
            199640540,
            199639256,
            199639177,
            199639048,
            199640380,
            199639173,
            199640678,
            199639746,
            199643343,
            200680660,
            199641247,
            199641300,
            199640545,
            199639604,
            199639018
        ],
        "B": [
            199639404,
            199640164,
            199644601,
            199640956,
            199642784,
            199641076,
            199640175,
            199641302,
            199643530,
            199641294,
            199644684,
            199643246,
            199643095,
            200680723,
            199647537,
            199644556,
            199644782,
            199642649,
            199640242
        ]
    },
    "name": "A. Lucky Numbers",
    "statement": "Olympus City recently launched the production of personal starships. Now\r\neveryone on Mars can buy one and fly to other planets inexpensively.Each\r\nstarship has a number some positive integer x. Let\u2019s define the of a\r\nnumber x as the difference between the largest and smallest digits of\r\nthat number. For example, 142857 has 8 as its largest digit and 1 as its\r\nsmallest digit, so its luckiness is 8-1=7. And the number 111 has all\r\ndigits equal to 1, so its luckiness is zero.Hateehc is a famous Martian\r\nblogger who often flies to different corners of the solar system. To\r\nrelease interesting videos even faster, he decided to buy himself a\r\nstarship. When he came to the store, he saw starships with numbers from\r\nl to r inclusively. While in the store, Hateehc wanted to find a\r\nstarship with the luckiest number.Since there are a lot of starships in\r\nthe store, and Hateehc can\u2019t program, you have to help the blogger and\r\nwrite a program that answers his question.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <chrono>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstddef>\n#include <cstdint>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <forward_list>\n#include <fstream>\n#include <functional>\n#include <initializer_list>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\ninline int read() {\n  char ch = getchar();\n  int x = 0, f = 1;\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\n\nint L, R;\nint ans = 0;\nint check(int x) {\n  vector<int> e;\n  while (x) {\n    e.push_back(x % 10);\n    x /= 10;\n  }\n  int minn = 10, maxx = 0;\n  for (int i = 0; i < e.size(); i++) minn = min(minn, e[i]), maxx = max(maxx, e[i]);\n  return maxx - minn;\n}\n\nvoid work() {\n  ans = 0;\n  L = read();\n  R = read();\n  int pos = L;\n  for (int i = L; i <= R; i++) {\n    int v = check(i);\n    if (v > ans) ans = v, pos = i;\n    if (ans == 9) break;\n  }\n  cout << pos << endl;\n}\n\nsigned main() {\n  int Tt = read();\n  while (Tt--) work();\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Lucky Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/114523",
    "editorial": "Let . Then it is easy to see that there exists a number such that , and\r\n. Then the number is the answer.If , you can find the answer by trying\r\nall the numbers.Despite the impressive constant, from the theoretical\r\npoint of view we obtain a solution with asymptotics for the answer to\r\nthe query.\r\n"
}