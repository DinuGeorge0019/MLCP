{
    "link": "https://codeforces.com//contest/975/problem/B",
    "problemId": "179940",
    "problem_idx": "B",
    "shortId": "975B",
    "contest_number": "975",
    "problem_submissions": {
        "E": [
            37816370,
            37813409,
            37822383,
            37823053,
            37822980,
            37827685
        ],
        "D": [
            37811765,
            37818256,
            37809031,
            37810818,
            37810958,
            37809945,
            37821284,
            37811538,
            37811831,
            37813423,
            37811960,
            37812411,
            37812713,
            37812337,
            37812042,
            37812735,
            37814476,
            37812168,
            37813847
        ],
        "C": [
            37806281,
            37806363,
            37804979,
            37805578,
            37804360,
            37804440,
            37821200,
            37821166,
            37821144,
            37821019,
            37820867,
            37820774,
            37806683,
            37806043,
            37805497,
            37803505,
            37807380,
            37806289,
            37807089,
            37807897,
            37808134,
            37806223,
            37805766,
            37803795
        ],
        "B": [
            37803296,
            37802840,
            37803779,
            37802570,
            37805983,
            37805016,
            37803559,
            37805291,
            37804701,
            37803620,
            37805350,
            37804764,
            37804751,
            37803055,
            37803333,
            37807375
        ],
        "A": [
            37801128,
            37800869,
            37800960,
            37801705,
            37801031,
            37801042,
            37802652,
            37801616,
            37801102,
            37801914,
            37802731,
            37801888,
            37801010,
            37801985,
            37803138,
            37801035,
            37801033,
            37805139
        ]
    },
    "name": "B. Mancala",
    "statement": "Mancala is a game famous in the Middle East. It is played on a board\r\nthat consists of 14 holes. Initially, each hole has a_i stones. When a\r\nplayer makes a move, he chooses a hole which contains a number of\r\nstones. He takes all the stones inside it and then redistributes these\r\nstones one by one in the next holes in a counter-clockwise\r\ndirection.Note that the counter-clockwise order means if the player\r\ntakes the stones from hole i, he will put one stone in the (i+1)-th\r\nhole, then in the (i+2)-th, etc. If he puts a stone in the 14-th hole,\r\nthe next one will be put in the first hole.After the move, the player\r\ncollects all the stones from holes that contain even number of stones.\r\nThe number of stones collected by player is the score, according to\r\nResli.Resli is a famous Mancala player. He wants to know the maximum\r\nscore he can obtain after one move.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define fr(x, y, z) for(int x=y;x<z;x++)\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef pair<pll,ll> ppl;\n\nll arr[14],arr2[14]; \nint main(){\n    fr(i,0,14){\n        cin>>arr[i];\n    }\n    ll ans=0;\n    fr(i,0,14){\n        fr(i2,0,14)arr2[i2]=arr[i2]+arr[i]/14;\n        arr2[i]-=arr[i];\n        fr(i2,1,(arr[i]%14)+1)arr2[(i2+i)%14]++;\n        ll tans=0;\n        fr(i2,0,14)if(arr2[i2]%2==0)tans+=arr2[i2];\n        ans=max(tans,ans);\n    }\n    cout<<ans<<endl;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Mancala.json",
    "editorial_link": "https://codeforces.com//blog/entry/59202",
    "editorial": "in this problem, we brute-force on the optimal hole to choose since\r\nthere are only 14 holes, but how to calculate how many stones there will\r\nbe after we start from the ith hole? the process of putting stones is\r\nrepeating every 14 holes, suppose k is the number of stones in hand now\r\nso k/14 will be added to all holes and we simulate adding k mod 14 then\r\nwe take the maximum answer from all the holes.\r\n",
    "hint": []
}