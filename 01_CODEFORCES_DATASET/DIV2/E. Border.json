{
    "link": "https://codeforces.com//contest/1011/problem/E",
    "problemId": "201800",
    "problem_idx": "E",
    "shortId": "1011E",
    "contest_number": "1011",
    "problem_submissions": {
        "F": [
            40800201,
            40801277,
            40801569,
            40804449,
            40805451,
            40806381,
            40806507,
            40806310,
            40805970,
            40801054,
            40808416,
            40809060,
            40810276,
            40808095,
            40807771,
            40805521,
            40807827,
            40807284,
            40807855,
            40804155
        ],
        "D": [
            40796440,
            40794546,
            40792902,
            40795417,
            40799478,
            40795262,
            40794405,
            40796227,
            40796647,
            40805819,
            40795341,
            40796956,
            40801974,
            40796562,
            40798015,
            40809194,
            40797770,
            40797730,
            40793882,
            40809940
        ],
        "E": [
            40792792,
            40796201,
            40795409,
            40798197,
            40794994,
            40796957,
            40798403,
            40799143,
            40799952,
            40795325,
            40797016,
            40792367,
            40793560,
            40799595,
            40800280,
            40796773,
            40803072,
            40801776,
            40801515,
            40795493
        ],
        "C": [
            40790603,
            40791320,
            40791211,
            40789571,
            40790418,
            40791673,
            40790329,
            40790847,
            40793263,
            40794440,
            40790415,
            40800020,
            40790652,
            40792667,
            40793177,
            40791559,
            40792533,
            40792592,
            40791239,
            40793128
        ],
        "B": [
            40785822,
            40786932,
            40787686,
            40786118,
            40785902,
            40788647,
            40785329,
            40786729,
            40785415,
            40788241,
            40792014,
            40785807,
            40787536,
            40787785,
            40787832,
            40786142,
            40787154,
            40790376,
            40787972,
            40786283
        ],
        "A": [
            40783703,
            40785050,
            40784061,
            40783967,
            40783664,
            40784798,
            40783422,
            40784073,
            40783746,
            40785817,
            40785710,
            40783675,
            40784732,
            40784635,
            40786064,
            40783474,
            40783765,
            40785159,
            40784090,
            40783568
        ]
    },
    "name": "E. Border",
    "statement": "Astronaut Natasha arrived on Mars. She knows that the Martians are very\r\npoor aliens. To ensure a better life for the Mars citizens, their\r\nemperor decided to take tax from every tourist who visited the planet.\r\nNatasha is the inhabitant of Earth, therefore she had to pay the tax to\r\nenter the territory of Mars.There are n banknote denominations on Mars:\r\nthe value of i-th banknote is a_i. Natasha has an infinite number of\r\nbanknotes of each denomination.Martians have k fingers on their hands,\r\nso they use a number system with base k. In addition, the Martians\r\nconsider the digit d (in the number system with base k) divine. Thus, if\r\nthe last digit in Natasha’s tax amount written in the number system with\r\nthe base k is d, the Martians will be happy. Unfortunately, Natasha does\r\nnot know the Martians’ divine digit yet.Determine for which values d\r\nNatasha can make the Martians happy.Natasha can use only her banknotes.\r\nMartians don’t give her change.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define eps 1e-8\n\nusing namespace std;\n\nint gcd(int x,int y) {\n  return (x%y==0)?y:gcd(y,x%y);\n}\n\nint main() {\n  int n,k;\n  scanf(\"%d%d\",&n,&k);\n  int t=k;\n  for(int i=1;i<=n;i++) {\n  \tint x;\n  \tscanf(\"%d\",&x);\n  \tx%=k;\n  \tif (x) t=gcd(t,x);\n  }\n  printf(\"%d\\n\",k/t);\n  for(int i=0;i<k/t;i++) printf(\"%d \",i*t);\n  printf(\"\\n\");\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "number theory"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Border.json",
    "editorial_link": "https://codeforces.com/blog/entry/60851",
    "editorial": "Note that the condition \"the last digit in the record of Natashaâs tax\r\namount in the number system with the base will be \" is equivalent to the\r\ncondition \"the remainder of dividing the tax on will be \".Let . It is\r\nstated that the original problem is equivalent to the problem where and\r\nthe only banknote is .Evidence. We prove this with the help of the B\r\nzoutâs identity. It follows that an equation of the form , where at\r\nleast one of the parameters is not zero, has a solution in integers if\r\nand only if . Then in this task Natasha can pay banknotes of the -th\r\nnominal value for each , where , and the amount of tax () can be any\r\nnumber , multiple . (Here some , But Natasha can add for each par a\r\nsufficiently large number, multiple , that became greater than zero, the\r\nbalance from dividing the amount of tax on from this will not change.)\r\nTherefore, you can replace all pars with one par and the answer from\r\nthis will not change.Now we can sort out all the numbers of the form ,\r\nwhere (further the remainder of the sum, divided by will cycle\r\nrepeatedly) and output them in ascending order.Complexity: , where is\r\nthe greatest .Bonus. Try to improve the complexity to .\r\n",
    "hint": []
}