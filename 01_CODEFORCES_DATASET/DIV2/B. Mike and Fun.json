{
    "link": "https://codeforces.com//contest/548/problem/B",
    "problemId": "28335",
    "problem_idx": "B",
    "shortId": "548B",
    "contest_number": "548",
    "problem_submissions": {
        "E": [
            11306177,
            11300638,
            11307838,
            11312023,
            12063940
        ],
        "D": [
            11287347,
            11284454,
            11307050,
            11295837,
            11293058,
            11292109,
            11291768,
            11293958,
            11295314,
            11296359,
            11296862,
            11312125,
            11312114,
            11295294,
            11299561,
            11298190,
            11299140
        ],
        "B": [
            11283910,
            11292107,
            11285437,
            11284167,
            11285339,
            11282855,
            11284031,
            11284968,
            11283769,
            11283694,
            11284532,
            11281775,
            11284852,
            11283998,
            11287449,
            11285797
        ],
        "A": [
            11281793,
            11288525,
            11281865,
            11282109,
            11282041,
            11281571,
            11281901,
            11282199,
            11281600,
            11281849,
            11281629,
            11283057,
            11282079,
            11281644,
            11282404,
            11282517
        ],
        "C": [
            11331087,
            11335466,
            11312098,
            11299604
        ]
    },
    "name": "B. Mike and Fun",
    "statement": "Mike and some bears are playing a game just for fun. Mike is the judge.\r\nAll bears except Mike are standing in an grid, there’s exactly one bear\r\nin each cell. We denote the bear standing in column number of row number\r\nby . Mike’s hands are on his ears (since he’s the judge) and each bear\r\nstanding in the grid has hands either on his mouth or his eyes. They\r\nplay for rounds. In each round, Mike chooses a bear and tells him to\r\nchange his state i. e. if his hands are on his mouth, then he’ll put his\r\nhands on his eyes or he’ll put his hands on his mouth otherwise. After\r\nthat, Mike wants to know the score of the bears.Score of the bears is\r\nthe maximum over all rows of number of consecutive bears with hands on\r\ntheir eyes in that row.Since bears are lazy, Mike asked you for help.\r\nFor each round, tell him the score of these bears after changing the\r\nstate of a bear selected in that round.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#include <ext/algorithm>\n#include <ext/numeric>\n\nusing namespace std;\nusing namespace __gnu_cxx;\n\n#define ALL(c) c.begin(), c.end()\n#define SZ(x) ((int)(x).size())\n#define PB push_back\n#define MP make_pair\n#define DB(a) cerr << #a << \" = \" << (a) << endl;\n#define OUT( a , n ) for( int J = 0; J < (n); J++ )cout<< (a)[J] << \" \\n\"[J == (n) - 1 ]\n#define WAIT cout << flush , system(\"PAUSE\");\n#define lowbit(x) ((x) & (-x))\n#define CONTAINS(a, x) ((a).find(x) != (a).end())\n#define endl '\\n'\n\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 600;\n\nint n , m , q;\nint s[MAXN][MAXN];\n\nint row[MAXN];\n\n\nint find( int r )\n{\n    int maxi = 0;\n    for(int i = 1; i <= m; i++ )\n    {\n        if(s[r][i] == 1)\n        {\n            int j = i;\n            while(j <= m && s[r][j] == 1)\n                j++;            \n            \n            maxi = max(maxi , j - i);\n            j = j - 1;\n        }\n    }\n    \n    return maxi;\n}\n\nint main()\n{\n    ios::sync_with_stdio( 0 );\n    cin.tie( 0 );   \n\n    cin >> n>> m >> q;\n    for( int i = 1; i <= n; i++ )\n    {\n        for( int j = 1; j <= m; j++ )\n            cin >> s[i][j];\n        int val = find(i);\n        row[i] = val;\n    }\n    \n    int x ,y;\n    for(; q; q-- )\n    {\n        cin >> x >> y;\n        s[x][y] = 1 - s[x][y];\n        \n        row[x] = find(x);\n        \n        int sol = 0;\n        for( int i = 1; i <= n; i++ )\n            sol = max(row[i] , sol);\n        cout << sol << endl;\n    }\n    \n\n    return 0;\n}\n\n//g++ -g -O2 -std=c++11 -static a.cpp -o\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Mike and Fun.json",
    "editorial_link": "https://codeforces.com//blog/entry/18126",
    "editorial": "Consider this problem: We have a binary sequence and want to find the\r\nmaximum number of consecutive 1s in it. How to solve this? Easily:\r\nFinally, answer to this problem is ans. For each row of the table, let\r\nbe the maximum number of consecutive 1s in it (we know how to calculate\r\nit in right ?). So after each query, update in and then find in . Time\r\ncomplexity: C++ Code by PrinceOfPersia C++ Code by Haghani Python Code\r\nby Zlobober\r\n",
    "hint": []
}