{
    "link": "https://codeforces.com//contest/996/problem/B",
    "problemId": "193040",
    "problem_idx": "B",
    "shortId": "996B",
    "contest_number": "996",
    "problem_submissions": {
        "C": [
            39627866,
            39619892,
            39663122,
            39635644,
            39635514,
            39621729,
            39625213,
            39617610,
            39627654,
            39639597,
            39620065,
            39624419,
            39628361,
            39621383
        ],
        "E": [
            39622528,
            39625892,
            39626142,
            39626461,
            39630340,
            39627947,
            39621279,
            39648976,
            39621379,
            39617847,
            39617247,
            39629372,
            39626830,
            39626277,
            39620519,
            39625082,
            39630792,
            39630657,
            39627444
        ],
        "F": [
            39618149,
            39627463,
            39624083,
            39623440,
            39625991,
            39622590,
            39645060,
            39644923,
            39643152,
            39624393,
            39628645,
            39620875,
            39622547
        ],
        "D": [
            39614039,
            39615645,
            39614752,
            39612465,
            39614292,
            39615532,
            39615370,
            39619789,
            39614020,
            39613398,
            39619029,
            39613995,
            39617466,
            39615083,
            39617177,
            39614282,
            39614211,
            39623029,
            39613607
        ],
        "B": [
            39612182,
            39610834,
            39613274,
            39611405,
            39611472,
            39612956,
            39611898,
            39611921,
            39611837,
            39637946,
            39611976,
            39611899,
            39613467,
            39613241,
            39615456,
            39611398,
            39611815,
            39611277,
            39611220
        ],
        "A": [
            39608251,
            39608322,
            39612243,
            39608277,
            39608558,
            39609369,
            39608857,
            39608654,
            39608250,
            39608366,
            39610360,
            39608845,
            39611018,
            39608238,
            39608982,
            39608778,
            39608497,
            39608486,
            39608249
        ]
    },
    "name": "B. World Cup",
    "statement": "Allen wants to enter a fan zone that occupies a round square and has n\r\nentrances.There already is a queue of a_i people in front of the i-th\r\nentrance. Each entrance allows one person from its queue to enter the\r\nfan zone in one minute.Allen uses the following strategy to enter the\r\nfan zone: Initially he stands in the end of the queue in front of the\r\nfirst entrance. Each minute, if he is not allowed into the fan zone\r\nduring the minute (meaning he is not the first in the queue), he leaves\r\nthe current queue and stands in the end of the queue of the next\r\nentrance (or the first entrance if he leaves the last entrance).\r\nDetermine the entrance through which Allen will finally enter the fan\r\nzone.\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n#include <cstdio>\n#include <string>\n#include <stdlib.h>\n#include <set>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <regex>\n#include <math.h>\n#include <map>\n#include <iterator>\n#include <limits>\n#include <numeric>\n#include <bitset>\n#include <unordered_map>\n#include <unordered_set>\n#include <iomanip>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <array>\n#include <valarray>\n#include <complex>\n#include <random>\n\nusing namespace std;\n\ntypedef int integer;\ntypedef array<int, 2> hv;\n#define double long double\n#define int long long\n#define make(type, x) type x; cin>>x\n#define make2(type, x, y) type x, y; cin>>x>>y\n#define make3(type, x, y, z) type x, y, z; cin>>x>>y>>z\n#define make4(type, x, y, z, q) type x, y, z, q; cin>>x>>y>>z>>q\n#define ALL(x) (x).begin(), (x).end()\n#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)\n#define FOR(b) for(int i = 0; i <(b); ++i)\n#define VI vector<int>\n#define VVI vector<vector<int>>\n#define PII pair<int, int>\n#define PPII pair<PII, int>\n#define M7 1000000007\n#define M9 1000000009\n\n\n\n\nvoid Solve() {\n\tmake(int, n);\n\tVI a(n);\n\tFOR(n) cin >> a[i];\n\tint mn = a[0];\n\tfor (int i = 1; i < n; ++i) mn = min(a[i], mn);\n\tint cnt_kr = mn / n;\n\tFOR(n) a[i] -= cnt_kr*n;\n\tfor (int d = 0; d < 20; d++) {\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] -= i;\n\t\t\tif (a[i] <= 0) {\n\t\t\t\tcout << i + 1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\ta[i] -= n - i;\n\t\t}\n\t}\n\n\n}\n\n\n\n\nsigned main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie();\n#if  _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n\tSolve();\n\twhile (!cin.eof()) {\n\t\tstring s = \"_\";\n\t\tdo getline(cin, s);\n\t\twhile (!cin.eof() && !s.empty());\n\t\tif (cin.eof()) return 0;\n\t\tFOR(3) cout << endl;\n\t\tSolve();\n\t}\n#else\n\tSolve();\n#endif\n\treturn 0;\n\t}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. World Cup.json",
    "editorial_link": "https://codeforces.com//blog/entry/60217",
    "editorial": "For gate (where ) we visit the gate at times Therefore, the earliest\r\nAllen could enter from gate is the time such that Now, for each ,\r\ncompute the minimal integer such that . Now, find the integer with\r\nminimum and output .\r\n"
}