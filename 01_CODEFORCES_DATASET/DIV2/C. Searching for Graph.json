{"link": "https://codeforces.com//contest/402/problem/C", "problemId": "7180", "problem_idx": "C", "shortId": "402C", "contest_number": "402", "problem_submissions": {"D": [6050292, 6050270, 6036208, 6037449, 6037811, 6039018, 6037509, 6040120, 6039818, 6037103, 6036738, 6052225, 6039860, 6039785, 6039774, 6040232], "E": [6038241, 6039548, 6034213, 6036604, 6037264, 6040176, 6052113, 6052116, 6052103, 6052109, 6058832, 6040173], "C": [6035300, 6033009, 6036584, 6037830, 6033803, 6032415, 6034126, 6031244, 6034759, 6038445, 6040085, 6032494, 6038144, 6039496, 6032240, 6032451, 6036956, 6037470, 6036329], "B": [6031930, 6031993, 6031901, 6040691, 6032027, 6037381, 6032782, 6035428, 6032969, 6032924, 6042413, 6034839, 6033326, 6031868, 6052288, 6052274, 6052263, 6035033, 6034789, 6032424, 6034406, 6032490], "A": [6030878, 6030962, 6031937, 6034701, 6030965, 6033265, 6031812, 6031632, 6036793, 6034363, 6031101, 6031359, 6030877, 6031259, 6031075, 6033654, 6031474, 6031051]}, "name": "C. Searching for Graph", "statement": "Let\u2019s call an undirected graph of vertices , if the following conditions\r\nfulfill: the graph contains exactly edges; the graph doesn\u2019t contain\r\nself-loops and multiple edges; for any integer (), any subgraph\r\nconsisting of vertices contains at most edges. A of a graph is some set\r\nof the graph vertices and some set of the graph edges. At that, the set\r\nof edges must meet the condition: both ends of each edge from the set\r\nmust belong to the chosen set of vertices. Your task is to find a graph\r\nconsisting of vertices.\r\n", "solutions": ["//Codeforces 236\n#include <cmath>\n\n#include <algorithm>\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nconst int INF = 1 << 30;\n\nint main() {\n  int T;\n  cin >> T;\n\n  for (int t = 1; t <= T; t += 1) {\n    int n, p;\n    cin >> n >> p;\n    p += 2 * n;\n    int e = 0;\n    for (int i = 1; i <= n and e < p; i += 1) {\n      for (int j = i + 1; j <= n and e < p; j += 1) {\n        cout << i << ' ' << j << '\\n';\n        e += 1;\n      }\n    }\n  }\n  return 0;\n}\n\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "graphs"], "dificulty": "1500", "interactive": false}