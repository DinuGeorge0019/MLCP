{
    "link": "https://codeforces.com//contest/1255/problem/A",
    "problemId": "475553",
    "problem_idx": "A",
    "shortId": "1255A",
    "contest_number": "1255",
    "problem_submissions": {
        "E1": [
            65376345,
            65362349,
            65379019,
            65379231,
            65381365,
            65366418,
            65380019,
            65372166,
            65377390,
            65381751,
            65383634,
            65381490,
            65380093,
            65389225,
            65369401,
            65379688,
            65378584,
            65380932,
            65379653,
            65385144
        ],
        "E2": [
            65376264,
            65385821,
            65381572,
            65386523,
            65384540,
            65381279,
            65389375,
            65384984,
            65389091,
            65691059,
            65704614,
            65451948
        ],
        "F": [
            65375779,
            65385211,
            65388490,
            65389131,
            65387550,
            65391223,
            65696815,
            65727810,
            65496537
        ],
        "D": [
            65370945,
            65376492,
            65370356,
            65373732,
            65376315,
            65359238,
            65370229,
            65377454,
            65373608,
            65377110,
            65372789,
            65372691,
            65369056,
            65377955,
            65368879,
            65372201,
            65375025,
            65360545,
            65373196
        ],
        "C": [
            65364209,
            65367561,
            65365185,
            65370379,
            65369180,
            65375282,
            65364624,
            65368566,
            65367696,
            65368791,
            65366250,
            65385810,
            65363445,
            65364504,
            65364341,
            65366891,
            65364298,
            65372266,
            65367337
        ],
        "B": [
            65357074,
            65365610,
            65356532,
            65359436,
            65360660,
            65362219,
            65358616,
            65357121,
            65358490,
            65360944,
            65360793,
            65359110,
            65357689,
            65359084,
            65357670,
            65361106,
            65357886,
            65367149,
            65358881
        ],
        "A": [
            65352414,
            65792669,
            65360046,
            65351993,
            65354820,
            65353062,
            65354583,
            65352997,
            65351826,
            65353043,
            65356292,
            65352153,
            65352035,
            65353191,
            65353105,
            65351942,
            65353378,
            65352978,
            65362432,
            65354867
        ]
    },
    "name": "A. Changing Volume",
    "statement": "Bob watches TV every day. He always sets the volume of his TV to b.\r\nHowever, today he is angry to find out someone has changed the volume to\r\na. Of course, Bob has a remote control that can change the volume.There\r\nare six buttons (-5, -2, -1, +1, +2, +5) on the control, which in one\r\npress can either increase or decrease the current volume by 1, 2, or 5.\r\nThe volume can be arbitrarily large, but can never be negative. In other\r\nwords, Bob cannot press the button if it causes the volume to be lower\r\nthan 0.As Bob is so angry, he wants to change the volume to b using as\r\nfew button presses as possible. However, he forgets how to do such\r\nsimple calculations, so he asks you for help. Write a program that given\r\na and b, finds the minimum number of presses to change the TV volume\r\nfrom a to b.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define ii pair<int, int>\n#define lli long long int\n#define ll pair<lli, lli>\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n\nusing namespace std;\n\nint main() {\n\tint tc, a, b, c, ans;\n\tscanf(\"%d\", &tc);\n\twhile (tc--) {\n\t\tscanf(\"%d %d\", &a, &b);\n\t\tc = abs(a - b);\n\t\tans = c / 5;\n\t\tc %= 5;\n\t\tans += (c / 2);\n\t\tc %= 2;\n\t\tans += c;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Changing Volume.json",
    "editorial_link": "https://codeforces.com//blog/entry/71594",
    "editorial": "Notice that if at some moment we increase the volume and at some moment\r\nwe decrease the volume, we can remove those two actions and replace them\r\nwith at most two new actions that are both increasing or decreasing (for\r\ninstance, can be replaced with ; and can be replaced with nothing and\r\nand can be replaced with ). We can see that replacing like this will not\r\nmake the volume goes below zero at any moment. So, we will increase the\r\nvolume all the time, or decrease all the time.Assume that we only\r\nincrease the volume. It can be proved that for any set consists of only\r\ns and s and the sum of its elements is greater than or equal to , it has\r\na subset which its elements sums to . This means that if we use and to\r\nincrease the volume by at least , we can replace some of those actions\r\nwith a . Hence, it is optimal to increase the volume by until the gap\r\nbetween and is less than , then the remaining job is trivial.\r\n"
}