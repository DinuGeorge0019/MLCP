{"link": "https://codeforces.com//contest/1459/problem/E", "problemId": "837952", "problem_idx": "E", "shortId": "1459E", "contest_number": "1459", "problem_submissions": {"C": [101746653, 101722886, 101730123, 101721760, 101730712, 101728008, 101731166, 101730952, 101740001, 101726009, 101726762, 101728277, 101727158, 101729187, 101723361, 101723810, 101728376, 101726644, 101732897, 101727240], "E": [101738323, 101839753, 102232354, 101778763], "D": [101727682, 101736410, 101735995, 101740518, 101738063, 101735219, 101739686, 101738152, 101733975, 101740963, 101743516, 101745649, 101741362, 101744865, 101740597, 101748885, 101751093, 101741581, 101747404, 101748856], "B": [101727154, 101727768, 101730156, 101728078, 101737211, 101728162, 101729594, 101812219, 101721826, 101733013, 101722434, 101734872, 101735665, 101845089, 101726205, 101744534, 101734571, 101725649, 101745878, 101729907, 101738583], "A": [101719213, 101723947, 101718569, 101719365, 101718481, 101720960, 101718492, 101812211, 101718737, 101720191, 101718915, 101722560, 101731743, 101845090, 101719378, 101727785, 101719966, 101719274, 101731147, 101726149, 101719284], "F": [101844942]}, "name": "E. Latin Square", "statement": "You are given a square matrix of size n. Every row and every column of\r\nthis matrix is a permutation of 1, 2,\r\nldots, n. Let a_{i, j} be the element at the intersection of i-th row\r\nand j-th column for every 1\r\nleq i, j\r\nleq n. Rows are numbered 1,\r\nldots, n top to bottom, and columns are numbered 1,\r\nldots, n left to right.There are six types of operations: : cyclically\r\nshift all columns to the right, formally, set the value of each a_{i, j}\r\nto a_{i, ((j - 2)\r\nbmod n) + 1}; : cyclically shift all columns to the left, formally, set\r\nthe value of each a_{i, j} to a_{i, (j\r\nbmod n) + 1}; : cyclically shift all rows down, formally, set the value\r\nof each a_{i, j} to a_{((i - 2)\r\nbmod n) + 1, j}; : cyclically shift all rows up, formally, set the value\r\nof each a_{i, j} to a_{(i\r\nbmod n) + 1, j}; : replace the permutation read left to right in each\r\nrow with its inverse. : replace the permutation read top to bottom in\r\neach column with its inverse. Inverse of a permutation p_1, p_2,\r\nldots, p_n is a permutation q_1, q_2,\r\nldots, q_n, such that p_{q_i} = i for every 1\r\nleq i\r\nleq n.One can see that after any sequence of operations every row and\r\nevery column of the matrix will still be a permutation of 1, 2,\r\nldots, n.Given the initial matrix description, you should process m\r\noperations and output the final matrix.\r\n", "solutions": ["#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/trie_policy.hpp>\n#include <ext/rope>\n\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimization(\"unroll-loops, no-stack-protector\")\n#pragma GCC target(\"avx,avx2,fma\")\n\nusing namespace std;\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\n#define mp make_pair\n#define gcd __gcd\n#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\n#define rep(i, n) for (int i=0; i<(n); i++)\n#define rep1(i, n) for (int i=1; i<=(n); i++)\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define endl \"\\n\"\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned uint;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vector<ll>> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vector<bool>> vvb;\ntemplate<typename T, typename cmp = less<T>>\nusing ordered_set=tree<T, null_type, cmp, rb_tree_tag, tree_order_statistics_node_update>;\ntypedef trie<string, null_type, trie_string_access_traits<>, pat_trie_tag, trie_prefix_search_node_update> pref_trie;\n\nint32_t main() {\n    fastio;\n    int T; cin>>T;\n    while(T--) {\n        int n, _; cin>>n>>_;\n        vector<array<int, 3>> a;\n        rep(i, n) rep(j, n) {\n            int x; cin>>x;\n            a.pb({i, j, --x});\n        }\n        auto inc = [&n](int& x) mutable {x++; if(x==n) x=0;};\n        auto dec = [&n](int& x) mutable {if(x==0) x=n; x--;};\n        pii x={0, 0}, y={1, 0}, z={2, 0};\n        string q; cin>>q;\n        for(char t: q) {\n            switch(t) {\n                case 'D':\n                    inc(x.se);\n                    break;\n                case 'U':\n                    dec(x.se);\n                    break;\n                case 'L':\n                    dec(y.se);\n                    break;\n                case 'R':\n                    inc(y.se);\n                    break;\n                case 'C':\n                    swap(x, z);\n                    break;\n                case 'I':\n                    swap(y, z);\n                    break;\n                default:\n                    assert(0);\n                    break;\n                }\n        }\n        vvi ans(n, vi(n));\n        for(auto& v: a) {\n            ans[(v[x.fi]+x.se)%n][(v[y.fi]+y.se)%n]=(v[z.fi]+z.se)%n;\n        }\n        rep(i, n) rep(j, n) cout<<ans[i][j]+1<<\" \\n\"[j+1==n];\n        cout<<endl;\n    }\n}\n"], "input": "", "output": "", "tags": ["math", "matrices"], "dificulty": "2700", "interactive": false}