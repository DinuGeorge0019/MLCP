{"link": "https://codeforces.com//contest/1138/problem/D", "problemId": "309126", "problem_idx": "D", "shortId": "1138D", "contest_number": "1138", "problem_submissions": {"F": [51023634, 51022679, 51020619, 51116992, 51021353, 51023578, 51058557, 51025400, 51024171, 51210412], "D": [51010497, 51010075, 51011127, 51013543, 51016946, 51013080, 51010984, 51018905, 51015654, 51021599, 51016846, 51011106, 51012210, 51010079, 51014682, 51012504, 51012027, 51012863, 51011280, 51013123], "C": [51009558, 51007967, 51009995, 51010952, 51015174, 51011344, 51014468, 51017187, 51013830, 51019773, 51013378, 51012781, 51010541, 51011719, 51010213, 51010247, 51010268, 51010649, 51012791, 51010664], "B": [51008088, 51018029, 51007957, 51203745, 51017235, 51013207, 51009939, 51015227, 51016412, 51016667, 51019928, 51008726, 51015366, 51011120, 51014342, 51015668, 51014019, 51015624, 51013885], "A": [51005649, 51019409, 51005726, 51203724, 51006686, 51010568, 51006260, 51011468, 51005966, 51005745, 51006723, 51007288, 51005675, 51005671, 51006328, 51008250, 51006899, 51005800, 51005715, 51005850, 51006402], "E": [51015293, 51019023, 51203589, 51203519, 51023924, 51025422, 51204108]}, "name": "D. Camp Schedule", "statement": "The new camp by widely-known over the country Spring Programming Camp is\r\ngoing to start soon. Hence, all the team of friendly curators and\r\nteachers started composing the camp\u2019s schedule. After some continuous\r\ndiscussion, they came up with a schedule s, which can be represented as\r\na binary string, in which the i-th symbol is \u201d if students will write\r\nthe contest in the i-th day and \u201d if they will have a day off.At the\r\nlast moment Gleb said that the camp will be the most productive if it\r\nruns with the schedule t (which can be described in the same format as\r\nschedule s). Since the number of days in the current may be different\r\nfrom number of days in schedule t, Gleb required that the camp\u2019s\r\nschedule must be altered so that the number of occurrences of t in it as\r\na substring is maximum possible. At the same time, , only their order\r\nmay change.Could you rearrange the schedule in the best possible way?\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn = 500000;\nchar s[maxn + 10], t[maxn + 10];\nint n, m, nxt[maxn + 10];\nint cnt0, cnt1;\n\nvoid fff() {\n\tfor (int i = 1; i <= cnt0; ++i)\n\t\tprintf(\"0\");\n\tfor (int i = 1; i <= cnt1; ++i)\n\t\tprintf(\"1\");\n\texit(0);\n}\n\nvoid fill(int x) {\n\tif (x == 0) {\n\t\tif (cnt0) {\n\t\t\t--cnt0; printf(\"0\");\n\t\t} else fff();\n\t} else {\n\t\tif (cnt1) {\n\t\t\t--cnt1; printf(\"1\");\n\t\t} else fff();\n\t}\n}\n\nint main() {\n\tscanf(\"%s%s\", s + 1, t + 1);\n\tn = strlen(s + 1); m = strlen(t + 1);\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (s[i] == '0') ++cnt0;\n\t\telse ++cnt1;\n\tfor (int i = 2; i <= m; ++i) {\n\t\tint p = nxt[i - 1];\n\t\tfor (; p && t[i] != t[p + 1];) p = nxt[p];\n\t\tp += t[i] == t[p + 1];\n\t\tnxt[i] = p;\n\t}\n\tfor (int i = 1; i <= m; ++i) {\n\t\tfill(t[i] - '0');\n\t}\n\twhile (1) {\n\t\tfor (int i = nxt[m] + 1; i <= m; ++i)\n\t\t\tfill(t[i] - '0');\n\t}\n}"], "input": "", "output": "", "tags": ["greedy", "hashing", "string suffix structures", "strings"], "dificulty": "1600", "interactive": false}