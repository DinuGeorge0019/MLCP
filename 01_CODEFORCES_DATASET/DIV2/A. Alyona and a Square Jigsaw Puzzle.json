{
    "link": "https://codeforces.com//contest/2047/problem/A",
    "problemId": "3064633",
    "problem_idx": "A",
    "shortId": "2047A",
    "contest_number": "2047",
    "problem_submissions": {
        "F": [
            294576018
        ],
        "D": [
            294556181,
            294550999,
            294551362,
            294549113,
            294552457,
            294549132,
            294545443,
            294545413,
            294553157,
            294554253,
            294547704,
            294545194,
            294551491,
            294546981,
            294545215,
            294554235,
            294551596,
            294555080,
            294553722
        ],
        "E": [
            294553658,
            294561058,
            294564356,
            294560884,
            294607752,
            294607657,
            294607423,
            294566840,
            294564602,
            294566710,
            294567902,
            294566502,
            294566942,
            294570129,
            294573472,
            294575252,
            294574930,
            294577351,
            294571682,
            294573929,
            294572766,
            294572872
        ],
        "C": [
            294537935,
            294544794,
            294543033,
            294543024,
            294539849,
            294544621,
            294540793,
            294540644,
            294546521,
            294548997,
            294552751,
            294541180,
            294538453,
            294540477,
            294539426,
            294541750,
            294543785,
            294533886,
            294545247
        ],
        "B": [
            294536414,
            294542160,
            294535717,
            294539853,
            294536380,
            294540106,
            294537951,
            294533781,
            294538848,
            294537306,
            294538421,
            294536540,
            294535134,
            294536248,
            294536341,
            294535891,
            294535533,
            294543631,
            294541462
        ],
        "A": [
            294533410,
            294535816,
            294532913,
            294532916,
            294533402,
            294535536,
            294533238,
            294535567,
            294533545,
            294533451,
            294534370,
            294533884,
            294532708,
            294533038,
            294533136,
            294533187,
            294540270,
            294536728,
            294532860
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/136908",
    "editorial": "Alyona is happy when there are no unfinished layers  that is, in front of her is a perfect square with odd side length. Since the order of pieces is fixed, it is enough to keep track of the total current size s\n of the puzzle, and after each day check, if the s\n is a perfect square of an odd number. The easiest way to do that is to create an additional array containing 12,32,53,...,992\n, and check after each day, whether s\n is in this array.",
    "name": "A. Alyona and a Square Jigsaw Puzzle",
    "statement": "Alyona assembles an unusual square Jigsaw Puzzle. She does so in n days\r\nin the following manner: On the first day, she starts by placing the\r\ncentral piece in the center of the table. On each day after the first\r\none, she places a certain number of pieces around the central piece in\r\nclockwise order, always finishing each square layer completely before\r\nstarting a new one. For example, she places the first 14 pieces in the\r\nfollowing order: Alyona is happy if at the end of the day the assembled\r\npart of the puzzle does not have any started but unfinished layers.\r\nGiven the number of pieces she assembles on each day, find the number of\r\ndays Alyona is happy on.\r\n",
    "solutions": [
        "#pragma GCC optimize(\"-Ofast\",\"-funroll-all-loops\",\"-ffast-math\")#pragma GCC optimize(\"inline\",\"fast-math\",\"unroll-loops\",\"no-stack-protector\")//#pragma GCC target(\"avx,avx2,sse,sse2,sse3,ssse3,sse4,abm,popcnt,mmx\")#include <bits/stdc++.h>using namespace std;#define endl '\\n' mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());mt19937_64 rng64(chrono::steady_clock::now().time_since_epoch().count()); int rnd(int a, int b) {\treturn rng() % (b - a + 1) + a;} string to_string(string s) { return s; }template <typename T> string to_string(T v) {  bool first = true;  string res = \"[\";  for (const auto &x : v) {    if (!first)      res += \", \";    first = false;    res += to_string(x);  }  res += \"]\";  return res;} void dbg_out() { cerr << endl; }template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) {  cerr << ' ' << to_string(H);  dbg_out(T...);} #define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__) template<class T> inline void chkmin(T& x, T y) { if (y < x) x = y; }template<class T> inline void chkmax(T& x, T y) { if (y > x) x = y; } using i64 = long long;using u64 = unsigned long long;using u32 = unsigned; const i64 INF = 1e18;const int oo = 1e9;const int mod = 1e9 + 7;const int MX = 100005; void solve() {\tint n; cin >> n;\tint cu = 0, ans = 0;\tfor (int i = 0; i < n; i++) {\t\tint a; cin >> a;\t\tcu += a;\t\tint tp = sqrt(cu + 0.5);\t\tif (tp * tp == cu && (tp & 1)) {\t\t\tans ++;\t\t}\t}\tcout << ans << \"\\n\";} int main() {#ifndef ONLINE_JUDGE\tfreopen(\"in.txt\", \"r\", stdin);//\tfreopen(\"out.txt\", \"w\", stdout);#endif \tios::sync_with_stdio(0);\tcin.tie(0); cout.tie(0); \tint Tc = 1;\tcin >> Tc;\twhile (Tc --) {\t\tsolve();\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Alyona and a Square Jigsaw Puzzle.json",
    "hint": []
}