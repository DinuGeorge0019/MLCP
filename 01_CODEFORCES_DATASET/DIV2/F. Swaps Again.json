{"link": "https://codeforces.com//contest/1365/problem/F", "problemId": "643141", "problem_idx": "F", "shortId": "1365F", "contest_number": "1365", "problem_submissions": {"G": [82837838, 82865836, 82846144, 82865744, 83288423, 83288390, 83115367, 83113068, 82891046, 83317408], "F": [82823576, 82831163, 82869715, 82841291, 82797913, 82821383, 82823224, 82820878, 82825962, 82827764, 82819318, 82822994, 82828397, 82835003, 82834772, 82828790, 83116114, 82838680, 82843357, 82850042], "E": [82816827, 82806889, 82828546, 82852781, 82820451, 82809338, 82811048, 82815094, 82813767, 82818099, 82819025, 82806699, 82809270, 82814661, 82803838, 82820792, 82820031, 82816700, 82817857, 82816698], "D": [82812948, 82823500, 82822183, 82824676, 82812570, 82806668, 82804333, 82805751, 82808225, 82811038, 82801401, 82805193, 82808495, 82818445, 82814370, 83282843, 82816083, 82808400, 82807406, 82806087], "C": [82796097, 82796764, 82804011, 82805788, 82786984, 82796314, 82793579, 82793092, 82796581, 82800342, 82827239, 82793084, 82792671, 82807140, 82802231, 82801070, 82793918, 82793032, 82794670], "B": [82789379, 82791264, 82799267, 82793610, 82787860, 82790701, 82790486, 82792963, 82793820, 82794046, 82787508, 82790351, 82789454, 82795420, 82796086, 83567414, 83567289, 83567233, 83566819, 83566572, 83566088, 83137777, 83136749, 83136555, 82797438, 82788975, 82789229, 82789419], "A": [82787406, 82788164, 82795856, 82788300, 82789945, 82787354, 82787533, 82792868, 82790605, 82788592, 83313475, 82823189, 82788613, 82787440, 82788379, 82788620, 82787269, 82787662, 82787203, 82787209]}, "name": "F. Swaps Again", "statement": "Ayush, Ashish and Vivek are busy preparing a new problem for the next\r\nCodeforces round and need help checking if their test cases are\r\nvalid.Each test case consists of an integer n and two arrays a and b, of\r\nsize n. If after some (possibly zero) operations described below, array\r\na can be transformed into array b, the input is said to be . Otherwise,\r\nit is .An operation on array a is: select an integer k (1\r\nle k\r\nle\r\nlfloor\r\nfrac{n}{2}\r\nrfloor) swap the prefix of length k with the suffix of length k For\r\nexample, if array a initially is\r\n{1, 2, 3, 4, 5, 6\r\n}, after performing an operation with k = 2, it is transformed into\r\n{5, 6, 3, 4, 1, 2\r\n}.Given the set of test cases, help them determine if each one is or .\r\n", "solutions": ["#include <cstdio>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tint t=1;\n\tscanf(\"%d\" ,&t);\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tvector <int> a(n), b(n);\n\t\tfor(int&i:a){\n\t\t\tscanf(\"%d\", &i);\n\t\t}\n\t\tfor(int&i:b){\n\t\t\tscanf(\"%d\", &i);\n\t\t}\n\t\tvector <pair <int, int> > pairsa, pairsb;\n\t\tfor(int i = 0;i < n/2;i ++){\n\t\t\tpair <int, int> inp;\n\t\t\tinp=make_pair(a[i], a[n-1-i]);\n\t\t\tif(inp.first>inp.second)\n\t\t\t\tswap(inp.first, inp.second);\n\t\t\tpairsa.push_back(inp);\n\t\t\tinp=make_pair(b[i], b[n-1-i]);\n\t\t\tif(inp.first>inp.second)\n\t\t\t\tswap(inp.first, inp.second);\n\t\t\tpairsb.push_back(inp);\n\t\t}\n\t\tsort(pairsa.begin(), pairsa.end());\n\t\tsort(pairsb.begin(), pairsb.end());\n\t\tbool can=true;\n\t\tfor(int i = 0;i < n/2;i ++){\n\t\t\tif(pairsa[i]!=pairsb[i])\n\t\t\t\tcan=false;\n\t\t}\n\t\tif(n&1){\n\t\t\tif(a[n/2]!=b[n/2])\n\t\t\t\tcan=false;\n\t\t}\n\t\tprintf(can?\"Yes\\n\":\"No\\n\");\n\t}\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "implementation", "sortings"], "dificulty": "2100", "interactive": false}