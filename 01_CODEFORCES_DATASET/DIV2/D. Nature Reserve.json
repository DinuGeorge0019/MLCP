{"link": "https://codeforces.com//contest/1059/problem/D", "problemId": "231523", "problem_idx": "D", "shortId": "1059D", "contest_number": "1059", "problem_submissions": {"E": [43850610, 43851338, 43852878, 43848837, 43853144, 43855920, 43856643, 43856517, 43856676, 43844566, 43875705, 43858710, 43857544, 43858408, 43857949, 43853507, 43841184, 43946408, 43878430, 43860192, 43860410], "D": [43845001, 43847172, 43843271, 43852595, 43840300, 43843480, 43849616, 43848573, 43850624, 43860600, 43864131, 43850779, 43852200, 43852176, 43848226, 43859577, 43859230, 43853350, 43847642], "C": [43838609, 43839900, 43837168, 43838921, 43842651, 43838187, 43838191, 43838874, 43844737, 43839410, 43839682, 43840549, 43840977, 43843893, 43840186, 43848301, 43845385, 43844454], "B": [43834668, 43836105, 43835391, 43835023, 43836495, 43834373, 43835428, 43835653, 43837072, 43836994, 43835151, 43835423, 43837125, 43836780, 43836839, 43846140, 43840557, 43840737], "A": [43832663, 43832671, 43832804, 43832508, 43832734, 43832337, 43832703, 43832409, 43833757, 43832301, 43841198, 43833068, 43832428, 43832441, 43832459, 43842369, 43835008, 43840123]}, "name": "D. Nature Reserve", "statement": "There is a forest that we model as a plane and live n rare animals.\r\nAnimal number i has its lair in the point (x_{i}, y_{i}). In order to\r\nprotect them, a decision to build a nature reserve has been made.The\r\nreserve must have a form of a circle containing all lairs. There is also\r\na straight river flowing through the forest. All animals drink from this\r\nriver, therefore it must have at least one common point with the\r\nreserve. On the other hand, ships constantly sail along the river, so\r\nthe reserve must not have more than one common point with the river.For\r\nconvenience, scientists have made a transformation of coordinates so\r\nthat the river is defined by y = 0. Check whether it is possible to\r\nbuild a reserve, and if possible, find the minimum possible radius of\r\nsuch a reserve.\r\n", "solutions": ["#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(3)\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC target(\"sse3\",\"sse2\",\"sse\")\n#pragma GCC target(\"avx\",\"sse4\",\"sse4.1\",\"sse4.2\",\"ssse3\")\n#pragma GCC target(\"f16c\")\n#pragma GCC optimize(\"inline\",\"fast-math\",\"unroll-loops\",\"no-stack-protector\")\n#pragma GCC diagnostic error \"-fwhole-program\"\n#pragma GCC diagnostic error \"-fcse-skip-blocks\"\n#pragma GCC diagnostic error \"-funsafe-loop-optimizations\"\n#pragma GCC diagnostic error \"-std=c++14\"\n#include \"bits/stdc++.h\"\n//#include \"ext/pb_ds/tree_policy.hpp\"\n//#include \"ext/pb_ds/assoc_container.hpp\"\n#define PB push_back\n#define PF push_front\n#define LB lower_bound\n#define UB upper_bound\n#define fr(x) freopen(x,\"r\",stdin)\n#define fw(x) freopen(x,\"w\",stdout)\n#define iout(x) printf(\"%d\\n\",x)\n#define lout(x) printf(\"%lld\\n\",x)\n#define REP(x,l,u) for(ll x = l;x<u;x++)\n#define RREP(x,l,u) for(ll x = l;x>=u;x--)\n#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())\n#define mst(x,a) memset(x,a,sizeof(x))\n#define all(a) a.begin(),a.end()\n#define PII pair<int,int>\n#define PLL pair<ll,ll>\n#define MP make_pair\n#define sqr(x) ((x)*(x))\n#define lowbit(x) (x&(-x))\n#define lson (ind<<1)\n#define rson (ind<<1|1)\n#define se second\n#define fi first\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl;\n#define sz(x) ((int)x.size())\n#define EX0 exit(0);\n\ntypedef  long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ld;\nusing namespace std;\ntypedef vector<ll> VLL;\ntypedef vector<int> VI;\nconst int block_size = 320;\ntypedef complex<ll> point;\nconst ll mod = 1e9+7;\nconst ll inf = 1e9+7;\nconst ld eps = 1e-9;\nconst db PI = atan(1)*4;\ntemplate<typename T>\ninline int sign(const T&a) {\n    if(a<0)return -1;\n    if(a>0)return 1;\n    return 0;\n}\n\ntemplate<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}\ntemplate<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}\n\ntemplate<typename T> inline void in(T &x) {\n    x = 0;\n    T f = 1;\n    char ch = getchar();\n    while (!isdigit(ch)) {\n        if (ch == '-') f = -1;\n        ch = getchar();\n    }\n    while (isdigit(ch))  {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    x *= f;\n}\n\nll twop(int x) {\n    return 1LL<<x;\n}\n\ntemplate<typename A,typename B > inline void in(A&x,B&y) {\n    in(x);\n    in(y);\n}\ntemplate<typename A,typename B,typename C>inline void in(A&x,B&y,C&z) {\n    in(x);\n    in(y);\n    in(z);\n}\ntemplate<typename A,typename B,typename C,typename D> inline void in(A&x,B&y,C&z,D&d) {\n    in(x);\n    in(y);\n    in(z);\n    in(d);\n}\nll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\nnamespace SOLVE {\n    void main(){\n    }\n}\n\nvector<PLL>v;\nbool check(ld radius){\n    ld mxX = 1e20,miX = -1e20;\n//    dbg(radius);\n    for(auto p:v){\n        if(p.se > 2*radius)return false;\n        ld dy = abs(radius-p.se);\n        ld dx = sqrt(radius*radius-dy*dy);\n//        dbg(dx);\n//        dbg(dy);\n        upmin(mxX, p.fi+dx);\n        upmax(miX, p.fi-dx);\n    }\n    if(mxX >= miX)return true;\n    else return false;\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    return true;\n}\nint main() {\n#ifndef ONLINE_JUDGE\n    fr(\"/Users/zhangqingchuan/Desktop/cp/cp/input.txt\");\n    fw(\"/Users/zhangqingchuan/Desktop/cp/cp/output.txt\");\n#endif\n    \n    \n    \n    \n    ll n;\n    \n    \n    in(n);\n    REP(i,0,n){\n        ll a,b;in(a,b);v.PB(MP(a,b));\n    }\n    int neg = 0,pos = 0;\n    REP(i,0,n){\n        if(v[i].se<0)neg = 1;\n        else pos = 1;\n    }\n    if(pos && neg){\n        cout<<-1;return 0;\n    }\n    if(neg)\n    REP(i,0,n)v[i].se *= -1;\n    \n    \n    \n    ld l = 0.2,r = 1e15;\n    REP(i,0,100){\n        ld mid = (l+r)/2;\n        if(check(mid))r = mid;\n        else l = mid;\n    }\n    printf(\"%.15f\",(db)l);\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "geometry", "ternary search"], "dificulty": "2200", "interactive": false}