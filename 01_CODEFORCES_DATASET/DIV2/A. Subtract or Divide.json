{
    "link": "https://codeforces.com//contest/1451/problem/A",
    "problemId": "804297",
    "problem_idx": "A",
    "shortId": "1451A",
    "contest_number": "1451",
    "problem_submissions": {
        "E2": [
            99164666,
            99162733,
            99165925,
            99161646,
            99162275,
            99166708,
            99177844,
            99187045,
            99171193,
            99180740,
            99166779,
            99593065,
            99167139,
            99212094,
            99180750,
            99167382,
            99164289,
            99170306,
            99166489,
            99174952,
            99170046
        ],
        "F": [
            99157323,
            99174334,
            99172211,
            99171897,
            99169968,
            99159796,
            99185696,
            99185913,
            99161260,
            99186126,
            101852088,
            99331616,
            99277099,
            99194656
        ],
        "E1": [
            99152747,
            99148819,
            99166585,
            99161270,
            99161762,
            99166831,
            99177296,
            99186671,
            99171561,
            99180543,
            99167295,
            99166954,
            99212099,
            99162460,
            99166940,
            99164739,
            99169616,
            99166777,
            99174556,
            99160048
        ],
        "B": [
            99139927,
            99129712,
            99127148,
            99131588,
            99133196,
            99173277,
            99136243,
            99144900,
            99179324,
            99132526,
            99124656,
            99134309,
            99211443,
            99138683,
            99129420,
            99135350,
            99127140,
            99142430,
            99125493,
            99136003
        ],
        "C": [
            99137455,
            99134588,
            99132257,
            99139076,
            99140138,
            99171814,
            99145789,
            99142052,
            99183664,
            99140696,
            99133474,
            99140223,
            99211399,
            99130542,
            99135361,
            99140699,
            99137433,
            99148880,
            99132285,
            99139620
        ],
        "D": [
            99133620,
            99140832,
            99142901,
            99155332,
            99185292,
            99169795,
            99166634,
            99139104,
            99176250,
            99168173,
            99147779,
            99144152,
            99212069,
            99141953,
            99149299,
            99150791,
            99154805,
            99153259,
            99147140,
            99162814
        ],
        "A": [
            99120654,
            99120423,
            99121791,
            99121810,
            99124507,
            99174166,
            99122054,
            99147895,
            99180245,
            99124534,
            99120454,
            99123326,
            99211324,
            99120847,
            99120693,
            99131959,
            99121501,
            99120866,
            99121109,
            99120621
        ]
    },
    "name": "A. Subtract or Divide",
    "statement": "Ridbit starts with an integer n.In one move, he can perform one of the\r\nfollowing operations: divide n by one of its divisors, or subtract 1\r\nfrom n if n is greater than 1. A proper divisor is a divisor of a\r\nnumber, excluding itself. For example, 1, 2, 4, 5, and 10 are proper\r\ndivisors of 20, but 20 itself is not.What is the minimum number of moves\r\nRidbit is required to make to reduce n to 1?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> ii;\ntypedef vector<int> vi;\n\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n\n#define unrequited_love ios_base::sync_with_stdio(0);cin.tie(0);\n\nint main()\n{\n\tunrequited_love\n\tint t; cin>>t;\n\twhile(t--)\n\t{\n\t\tll x; cin>>x;\n\t\tif(x==1)\n\t\t{\n\t\t\tcout<<0<<'\\n';\n\t\t}\n\t\telse if(x==2)\n\t\t{\n\t\t\tcout<<1<<'\\n';\n\t\t}\n\t\telse if(x%2==0||x==3)\n\t\t{\n\t\t\tcout<<2<<'\\n';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout<<3<<'\\n';\n\t\t}\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Subtract or Divide.json",
    "editorial_link": "https://codeforces.com//blog/entry/84885",
    "editorial": "For , the answer is when is even and when is odd. Cases when can be\r\nhandled separately.Case 1: For , it can be shown that the minimum number\r\nof operations required are , , respectively.Case 2: and is evenIf is\r\neven and greater than , then is a proper divisor. So we can divide by to\r\nmake it and then subtract . This requires operations.Case 3: and is\r\noddIn this case, can be made even by subtracting . From case 2, it can\r\nbe seen that it will take more operations. Thus a total of operations\r\nare required.Time complexity: per case\r\n"
}