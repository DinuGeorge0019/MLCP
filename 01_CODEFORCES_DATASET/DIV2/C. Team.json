{"link": "https://codeforces.com//contest/401/problem/C", "problemId": "6958", "problem_idx": "C", "shortId": "401C", "contest_number": "401", "problem_submissions": {"D": [5984020, 5984141, 5983864, 5981435, 5984587, 5985602, 5984819, 5989770, 5989652, 5985683, 5985592, 5986146, 5986479, 5986019, 5987077, 5985527, 5986927, 5987397, 5987110, 5982946], "C": [5982567, 5981674, 5981703, 5983252, 5981659, 5981584, 5982579, 5983834, 5982834, 5982433, 5981231, 5982713, 5981380, 5989529, 5980186, 5983524, 5981695, 5982769, 5984546], "B": [5981497, 5980354, 5980450, 5984055, 5980168, 5980824, 5980688, 5980343, 5980890, 5980668, 5982737, 5981001, 5980082, 5983516, 5981360, 5979897, 5980852, 5985462], "A": [5979782, 5978771, 5978488, 5978820, 5978676, 5979741, 5978935, 5978831, 5978982, 5978516, 5979643, 5978615, 5985991, 5978937, 5978457, 5979014, 5986063], "E": [5991956, 5996869]}, "name": "C. Team", "statement": "Now it\u2019s time of Olympiads. Vanya and Egor decided to make his own team\r\nto take part in a programming Olympiad. They\u2019ve been best friends ever\r\nsince primary school and hopefully, that can somehow help them in\r\nteamwork.For each team Olympiad, Vanya takes his play cards with\r\nnumbers. He takes only the cards containing numbers 1 and 0. The boys\r\nare very superstitious. They think that they can do well at the Olympiad\r\nif they begin with laying the cards in a row so that: there wouldn\u2019t be\r\na pair of any side-adjacent cards with zeroes in a row; there wouldn\u2019t\r\nbe a group of three consecutive cards containing numbers one. Today\r\nVanya brought cards with zeroes and cards with numbers one. The number\r\nof cards was so much that the friends do not know how to put all those\r\ncards in the described way. Help them find the required arrangement of\r\nthe cards or else tell the guys that it is impossible to arrange cards\r\nin such a way.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\nint n,m,a,b;\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    if(m<n-1||(n+1)*2<m)puts(\"-1\");\n    else if(m==n-1)\n    {\n        putchar('0');\n        for(int i=0;i<m;i++)\n        {\n            putchar('1');\n            putchar('0');\n        }\n    }\n    else if(n==m)\n    {\n        for(int i=0;i<m;i++)\n        {\n            putchar('1');\n            putchar('0');\n        }\n    }\n    else\n    {\n        a=n+1;\n        b=m-a;\n        if(a&&b)printf(\"11\"),a--,b--;\n        else printf(\"1\"),a--;\n        for(int i=0;i<n;i++)\n        {\n            putchar('0');\n            if(a&&b)printf(\"11\"),a--,b--;\n            else printf(\"1\"),a--;\n        }\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "implementation"], "dificulty": "1400", "interactive": false}