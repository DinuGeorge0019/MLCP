{
    "link": "https://codeforces.com//contest/879/problem/B",
    "problemId": "130663",
    "problem_idx": "B",
    "shortId": "879B",
    "contest_number": "879",
    "problem_submissions": {
        "B": [
            31786634,
            31744953,
            31748945,
            31742935,
            31751951,
            31745920,
            31746158,
            31746124,
            31745152,
            31764273,
            31744717,
            31744550,
            31745384,
            31763271,
            31741598,
            31746257,
            31743148
        ],
        "A": [
            31786593,
            31741274,
            31744372,
            31740794,
            31748255,
            31750502,
            31742905,
            31741390,
            31742237,
            31742563,
            31740788,
            31746610,
            31740545,
            31741102,
            31761806,
            31740453,
            31741697,
            31740818
        ],
        "D": [
            31759010,
            31759775,
            31758676,
            31760218,
            31759988,
            31764440,
            31763303,
            31762884,
            31765337,
            31764418,
            31762268,
            31761524,
            31759749
        ],
        "C": [
            31750102,
            31754233,
            31749363,
            31750196,
            31754099,
            31751776,
            31751991,
            31753220,
            31750527,
            31755686,
            31753418,
            31760006,
            31750929,
            31761404,
            31749686,
            31756675,
            31751331
        ],
        "E": [
            31870640,
            31870635,
            31869262,
            31868808
        ]
    },
    "name": "B. Table Tennis",
    "statement": "people are standing in a line to play table tennis. At first, the first\r\ntwo players in the line play a game. Then the loser goes to the end of\r\nthe line, and the winner plays with the next person from the line, and\r\nso on. They play until someone wins games in a row. This player becomes\r\nthe winner.For each of the participants, you know the power to play\r\ntable tennis, and for all players these values are different. In a game\r\nthe player with greater power always wins. Determine who will be the\r\nwinner.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <cstdio>\nusing namespace std;\n#define REP(i,n) for(int i=0;i<(n);++i)\n#define FORE(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\nconst int N = 1000;\nint n;\nlong long k;\nint a[N],win[N];\n\nint main() {\n  scanf(\"%d%I64d\",&n,&k);\n  REP(i,n) {\n    scanf(\"%d\", &a[i]); --a[i];\n  }\n  while (true) {\n    if (a[1] > a[0]) { swap(a[1], a[0]); }\n    if (++win[a[0]] >= k || a[0] == n-1) { printf(\"%d\\n\", a[0]+1); return 0; }\n    rotate(a+1,a+2,a+n);\n  }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Table Tennis.json",
    "editorial_link": "https://codeforces.com//blog/entry/55435",
    "editorial": "Itâs not very difficult to solve this problem in . The statement hints\r\nus that we can use the data structure . We need to maintain the queue of\r\nplayers, the current winner and the number of wins he has. Each game is\r\nprocessed in . It can be shown that number of games is less than .Of\r\ncourse, this solution is too slow. Letâs think what happens if is large.\r\nMore precisely, assume that . The winner need to win at least games in a\r\nrow, that is, he need to win against all the other players. Hence, the\r\nwinner is just the strongest player.So, if , we can solve the problem in\r\n. Otherwise simulation works in .\r\n",
    "hint": []
}