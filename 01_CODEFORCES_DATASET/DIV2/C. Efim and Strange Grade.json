{"link": "https://codeforces.com//contest/719/problem/C", "problemId": "72547", "problem_idx": "C", "shortId": "719C", "contest_number": "719", "problem_submissions": {"E": [20857732, 20855529, 20857648, 20855213, 20863812, 20863755, 20863994, 20863152, 20865084, 24756348, 20863823], "C": [20849024, 20848386, 20862586, 20849914, 20851187, 20849594, 20854381, 20851294, 20851826, 20854890, 20857785, 20864901, 20852146, 20863089, 20850894, 20856089, 20855488, 20853880, 20871997, 20860028, 20857169], "B": [20843137, 20842011, 20842324, 20842639, 20842442, 20842617, 20844099, 20845184, 20845449, 20842596, 20840279, 20843610, 20841821, 20857950, 20841093, 20846281, 20843045, 20844261, 20853010, 20851104], "A": [20838260, 20837974, 20839081, 20840845, 20849048, 20838199, 20843109, 20840343, 20837834, 20838967, 20838053, 20841248, 20838212, 20838080, 20838256, 20839341, 20838731, 20839029, 20849067]}, "name": "C. Efim and Strange Grade", "statement": "Efim just received his grade for the last test. He studies in a special\r\nschool and his grade can be equal to any positive decimal fraction.\r\nFirst he got disappointed, as he expected a way more pleasant result.\r\nThen, he developed a tricky plan. Each second, he can ask his teacher to\r\nround the grade at any place after the decimal point (also, he can ask\r\nto round to the nearest integer). There are seconds left till the end of\r\nthe break, so Efim has to act fast. Help him find what is the maximum\r\ngrade he can get in no more than seconds. Note, that he can choose to\r\nnot use all seconds. Moreover, he can even choose to not round the grade\r\nat all.In this problem, classic rounding rules are used: while rounding\r\nnumber to the -th digit one has to take a look at the digit . If it is\r\nless than than the -th digit remain unchanged while all subsequent\r\ndigits are replaced with . Otherwise, if the digit is greater or equal\r\nto , the digit at the position is increased by (this might also change\r\nsome other digits, if this one was equal to ) and all subsequent digits\r\nare replaced with . At the end, all trailing zeroes are thrown away.For\r\nexample, if the number is rounded to the first decimal place, the result\r\nis , while if we round to the nearest integer, the result is . Rounding\r\nnumber in the fifth decimal place will result in number .\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nchar s[200010];\n\nvoid add_from(int pos) {\n    int add = 1;\n    for (int i = pos; i >= 0; i--) {\n        if (s[i] == '.') {\n            continue;\n        }\n        int val = s[i] - '0';\n        val += add;\n        s[i] = val % 10 + '0';\n        add = val / 10;\n    }\n}\n\nint main() {\n    int n, K;\n    scanf(\"%d%d\", &n, &K);\n    scanf(\"%s\", s + 1);\n    s[0] = '0';\n    int pos = 1;\n    while (s[pos] != '.') pos++;\n    pos++;\n    for (int i = pos; i <= n; i++) {\n        if (s[i] >= '5') {\n            s[i] = 0;\n            add_from(i - 1);\n            break;\n        } else if (s[i] == '4') {\n            int tot = 1;\n            while (i <= n && s[i] == '4') {\n                i++;\n                tot++;\n            }\n            if (s[i] >= '5') {\n                tot = min(tot, K);\n                s[i - tot + 1] = 0;\n                add_from(i - tot);\n                break;\n            }\n        }\n    }\n    n = strlen(s);\n    if (s[n - 1] == '.') {\n        n--;\n    }\n    int f = 0;\n    if (s[0] == '0') {\n        f++;\n    }\n    for (int i = f; i < n; i++) {\n        printf(\"%c\", s[i]);\n    }\n    puts(\"\");\n    return 0;\n}"], "input": "", "output": "", "tags": ["dp", "implementation", "math"], "dificulty": "1700", "interactive": false}