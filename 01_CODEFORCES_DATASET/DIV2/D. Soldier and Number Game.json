{
    "link": "https://codeforces.com//contest/546/problem/D",
    "problemId": "28218",
    "problem_idx": "D",
    "shortId": "546D",
    "contest_number": "546",
    "problem_submissions": {
        "B": [
            11232801,
            11217801,
            11208207,
            15820713,
            11208988,
            11208163,
            11214179,
            11208024,
            11209235,
            11209062,
            11213108,
            11222587,
            11239965,
            11217308,
            11219421,
            11209692,
            11207894,
            11206528,
            11223244,
            11207437
        ],
        "E": [
            11215556,
            11217224,
            11218687,
            15820839,
            11219998,
            11219690,
            11217920,
            11221959,
            11219074,
            11220044,
            11233270,
            11220684,
            11220215,
            11213115,
            11219305,
            11221891,
            11216762
        ],
        "D": [
            11212652,
            11212575,
            11214113,
            15820823,
            11215486,
            11214182,
            11210539,
            11224701,
            11215757,
            11216672,
            11219688,
            11216346,
            11219045,
            11223515,
            11214913,
            11225307,
            11215385,
            11211036,
            11216929,
            11224645
        ],
        "C": [
            11210837,
            11219636,
            11212924,
            15820760,
            11214060,
            11211479,
            11223248,
            11214103,
            11217677,
            11214503,
            11218679,
            11212971,
            11216434,
            11218455,
            11225176,
            11213620,
            11212347,
            11214814,
            11211103
        ],
        "A": [
            11204918,
            11205173,
            11205306,
            15820687,
            11205477,
            11205623,
            11214865,
            11205868,
            11206683,
            11224290,
            11206459,
            11205182,
            11205880,
            11207069,
            11206553,
            11204997,
            11204938,
            11207566,
            11205034
        ]
    },
    "name": "D. Soldier and Number Game",
    "statement": "Two soldiers are playing a game. At the beginning first of them chooses\r\na positive integer and gives it to the second soldier. Then the second\r\none tries to make maximum possible number of rounds. Each round consists\r\nof choosing a positive integer , such that is divisible by and replacing\r\nwith . When becomes equal to and there is no more possible valid moves\r\nthe game is over and the score of the second soldier is equal to the\r\nnumber of rounds he performed.To make the game more interesting, first\r\nsoldier chooses of form for some positive integer and (). Here by we\r\ndenote the of that is defined as a product of all positive integers not\r\nlarge than .What is the maximum possible score of the second soldier?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define rep2(i,n) for(int i=1;i<=n;i++)\nint n;\nint a[1000005],b[1000005];\nvector<int> x[5000005];\nint c[5000005];\nlong long r[5000005];\nint main(){\n    cin >> n; rep2(i,n) scanf(\"%d%d\",&a[i],&b[i]);\n    for(int i=2;i<=5000000;i++){\n    \tif(c[i]) continue; c[i] = 1;\n    \tfor(int j=2;i*j<=5000000;j++){\n    \t\tint x = j*i;\n    \t\twhile(x%i==0){\n    \t\t\tx/=i;\n    \t\t\tc[i*j]++;\n    \t\t}\n    \t}\n    }\n    for(int i=2;i<=5000000;i++) r[i] = r[i-1]+c[i];\n    rep2(i,n) printf(\"%lld\\n\",r[a[i]]-r[b[i]]);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "dp",
        "math",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Soldier and Number Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/18034",
    "editorial": "Firstly we have to note, that second soldier should choose only prime numbers. If he choose a composite number x that is equal to p?*?q, he can choose first p, then q and get better score. So our task is to find a number of prime factors in factorization of n.\n\nNow we have to note that factorization of number a!?/?b! is this same as factorization of numbers (b?+?1)*(b?+?2)*...*(a?-?1)*a.\n\nLet's count number of prime factor in factorization of every number from 2 to 5000000.\n\nFirst, we use Sieve of Eratosthenes to find a prime diviser of each of these numbers. Then we can calculate a number of prime factors in factorization of a using the formula:\n\nprimefactors[a]?=?primefactors[a?/?primediviser[a]]?+?1\n\nWhen we know all these numbers, we can use a prefix sums, and then answer for sum on interval."
}