{"link": "https://codeforces.com//contest/1816/problem/B", "problemId": "1871423", "problem_idx": "B", "shortId": "1816B", "contest_number": "1816", "problem_submissions": {"F": [201571165, 201575603], "E": [201540535, 201521580, 201552172, 201540274, 201551497, 201560232, 201559664, 201557564, 201560804, 201563162, 201561880, 201537774, 201526707, 201515322, 201535371, 201540257, 201545215], "D": [201526272, 201555297, 201531457, 201549839, 201530007, 201538289, 201538409, 201545276, 201541091, 201540016, 201546751, 201561431], "C": [201502393, 201505622, 201493541, 201488761, 201501981, 201485106, 201492364, 201508062, 201504590, 201507370, 201512800, 201550313, 201501935, 201545685, 201512228, 201507426, 201505339], "B": [201495797, 201498113, 201488843, 201489011, 201486184, 201503986, 201518658, 201489822, 201495126, 201490303, 201498690, 201494781, 201494291, 201504455, 201496973, 201494497, 201495296], "A": [201482599, 201481556, 201482965, 201480957, 201481143, 201486345, 201502905, 201481407, 201481488, 201481674, 201480959, 201483748, 201481910, 201493735, 201483634, 201482175, 201488121]}, "name": "B. Grid Reconstruction", "statement": "Consider a 2\r\ntimes n grid, where n is an integer. You may place the integers 1, 2,\r\nldots, 2n on the grid, using each integer .A is a sequence of cells\r\nachieved by starting at (1, 1), then repeatedly walking either downwards\r\nor to the right, and stopping when (2, n) is reached. The path should\r\nnot extend beyond the grid.The of a path is the alternating sum of the\r\nnumbers written on the cells in a path. That is, let the numbers written\r\non the cells be a_1, a_2,\r\nldots, a_k (in the order that it is visited), the cost of the path is\r\na_1 - a_2 + a_3 - a_4 +\r\nldots =\r\nsum_{i=1}^k a_i\r\ncdot (-1)^{i+1}.Construct a way to place the integers 1, 2,\r\nldots, 2n on the grid, such that the minimum cost over all paths from\r\n(1, 1) to (2, n) is maximized. If there are multiple such grids that\r\nresult in the maximum value, output any of them.\r\n", "solutions": ["//\n//  main.cpp\n//  B\n//\n//  Created by Thomas Guo on 2023-04-09.\n//\n\n#include <iostream>\n#define maxn 100002\nusing namespace std;\nint grid[maxn][2];\nint main(){\n    int t;cin>>t;\n    while(t--){\n        int n;cin>>n;\n        grid[0][0] = 2*n;\n        grid[n-1][1] = 2*n-1;\n        int lo = 1, hi = 2*n-2;\n        for(int i=0; i<n-1; i++){\n            if(i%2 == 0){\n                grid[i][1] = lo;\n                grid[i+1][0] = lo+1;\n                lo += 2;\n            }\n            else{\n                grid[i][1] = hi-1;\n                grid[i+1][0] = hi;\n                hi -= 2;\n            }\n        }\n        for(int i=0; i<2; i++){\n            for(int j=0; j<n; j++){\n                cout<<grid[j][i]<<\" \";\n            }\n            cout<<\"\\n\";\n        }\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1000", "interactive": false}