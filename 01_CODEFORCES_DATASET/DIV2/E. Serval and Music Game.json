{
    "link": "https://codeforces.com//contest/1789/problem/E",
    "problemId": "1798641",
    "problem_idx": "E",
    "shortId": "1789E",
    "contest_number": "1789",
    "problem_submissions": {
        "F": [
            194969357,
            195749340,
            195084999,
            195084860,
            195102578,
            194979229,
            194979047,
            194978962,
            194975838,
            194975550,
            194975302,
            194975124,
            194974900,
            194974650,
            194974382
        ],
        "D": [
            194964382,
            194946537,
            194952763,
            194935429,
            194953178,
            194957319,
            194960327,
            194955667,
            194955471,
            194960858,
            194960296,
            194949046,
            194949101,
            194950239,
            194953216,
            194952742,
            194952699,
            194953612
        ],
        "E": [
            194946702,
            194955457,
            194962685,
            194950894,
            194964730,
            194965836,
            229633905,
            194969144,
            194969007,
            194970553,
            194969010,
            194970681,
            194953500,
            194973828,
            198576217,
            194953882
        ],
        "C": [
            194930840,
            194935056,
            194937930,
            194962744,
            194937423,
            194944977,
            194941284,
            194940844,
            194947791,
            194945071,
            194938899,
            194933727,
            194937235,
            194936393,
            194947382,
            194937385,
            194938714,
            194934789,
            194942194,
            194939314
        ],
        "B": [
            194927201,
            194928996,
            194933855,
            194950809,
            194928726,
            194933032,
            194930991,
            194927953,
            194937472,
            194934025,
            194928695,
            194928070,
            194927782,
            194930745,
            194932397,
            194929156,
            194930083,
            194929116,
            194929527,
            194930695
        ],
        "A": [
            194926083,
            194926207,
            194930860,
            194952002,
            194926224,
            194926968,
            194926650,
            194926242,
            194934078,
            194927544,
            194926614,
            194926667,
            194926050,
            194926065,
            194927300,
            194926584,
            194927455,
            194927037,
            194926659,
            194927083
        ]
    },
    "name": "E. Serval and Music Game",
    "statement": "Serval loves playing music games. He meets a problem when playing music\r\ngames, and he leaves it for you to solve.You are given n positive\r\nintegers s_1 < s_2 <\r\nldots < s_n. f(x) is defined as the number of i (1\r\nleq i\r\nleq n) that exist non-negative integers p_i, q_i such that: s_i=p_i\r\nleft\r\nlfloor{s_n\r\nover x}\r\nright\r\nrfloor + q_i\r\nleft\r\nlceil{s_n\r\nover x}\r\nright\r\nrceilFind out\r\nsum_{x=1}^{s_n} x\r\ncdot f(x) modulo 998\r\n,244\r\n,353.As a reminder,\r\nlfloor x\r\nrfloor denotes the maximal integer that is no greater than x, and\r\nlceil x\r\nrceil denotes the minimal integer that is no less than x.\r\n",
    "solutions": [
        "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nusing ll = long long;\n\nconst int md = 998244353;\n\nvoid solve() {\n    int n;\n    cin >> n;\n    vector<int> s(n);\n    for (auto &x: s) cin >> x;\n    vector<int> pref(s[n - 1] + 1);\n    for (auto &x: s) pref[x]++;\n    for (int i = 1; i <= s[n - 1]; ++i) pref[i] += pref[i - 1];\n    ll ans = 0;\n    array<int, 3> current = {-1, -1, 0};\n    for (int x = 1; x <= s[n - 1]; ++x) {\n        int y = s[n - 1] / x;\n        int c = min(1, s[n - 1] % x);\n        if (current[0] != y || current[1] != c) {\n            int result = 0;\n            for (int l = y, r = y + c; l <= s[n - 1]; l += y, r += y + c) {\n                r = min(r, min(s[n - 1], l + y - 1));\n                result += pref[r] - pref[l - 1];\n            }\n            current = {y, c, result};\n        }\n        ans += 1ll * current[2] * x;\n        ans %= md;\n    }\n    cout << ans << '\\n';\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n\n    int t = 1;\n    cin >> t;\n\n    while (t--) {\n        solve();\n    }\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Serval and Music Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/113246",
    "editorial": "Consider the following two cases:Case\n1: is not a factor of .In this case we have . Let . It can be shown that\nthere are at most different values of . The constraint of can be written\nin the following form: For a certain , such and do not exist if and only\nif . To prove it, we show the contradiction that , and we can give a\nconstruction of and when that and .By observation, these are in one of\nthe following intervals: We can count the number of these by\npre-calculating the prefix sums to calculate .This case can be solved in\ntime, and we will show this fact: When , there are intervals that need\nto be considered for a certain . Since , this part can be solved in\ntime. When , notice that there are at most intervals that need to be\nconsidered for a certain . Recall that there are at most different\nvalues of in this part, so it can be solved in time. Case 2: is a factor\nof .In this case we have . Let . The constraint of becomes: To calculate\n, we only need to count the number of multiples of . To do this, we can\nfirst calculate for all in time. It is obvious that is a factor of . For\na certain , we can enumerate all the factors of , find out the multiples\nof among them, and sum up the times that they occurred in . Recall that\nhas at most factors, so this takes time.This case can be solved in time\nin total.Time complexity: . solutions can pass all the tests, where\ndenotes the sum of all the factors of . A well-implemented solutions may\npass the tests, too.Bonus: Solve this problem in time.\n"
}