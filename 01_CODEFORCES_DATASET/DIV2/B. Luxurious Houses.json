{
    "link": "https://codeforces.com//contest/581/problem/B",
    "problemId": "36591",
    "problem_idx": "B",
    "shortId": "581B",
    "contest_number": "581",
    "problem_submissions": {
        "F": [
            13269721,
            13273884,
            13274265,
            13275076,
            13273744,
            28883204,
            28746729,
            47707720
        ],
        "D": [
            13265543,
            13266561,
            13267830,
            13267677,
            13269943,
            13268843,
            13267395,
            13266212,
            13271770,
            13271940,
            13275900,
            13267190,
            13291663,
            13273782,
            13269289,
            13268754,
            13272747,
            13271148,
            13266871
        ],
        "C": [
            13263338,
            13262839,
            13263933,
            13262818,
            13262223,
            13263848,
            13264045,
            13262035,
            13264956,
            13270049,
            13269879,
            13263828,
            13264992,
            13264829,
            13264204,
            13266233,
            13265980,
            13264067,
            13263215
        ],
        "B": [
            13262072,
            13261090,
            13262462,
            13261193,
            13266387,
            13261281,
            13260860,
            13260910,
            13262535,
            13261711,
            13263433,
            13261203,
            13261560,
            13261063,
            13261266,
            13262720,
            13262876,
            13261537,
            13260790
        ],
        "A": [
            13260348,
            13259765,
            13260479,
            13259829,
            13262614,
            13259668,
            13259435,
            13259565,
            13260421,
            13259502,
            13259898,
            13259464,
            13259945,
            13259651,
            13259594,
            13259520,
            13260392,
            13260013,
            13259545
        ]
    },
    "name": "B. Luxurious Houses",
    "statement": "The capital of Berland has multifloor buildings. The architect who built\r\nup the capital was very creative, so all the houses were built in one\r\nrow.Letâ€™s enumerate all the houses from left to right, starting with\r\none. A house is considered to be if the number of floors in it is\r\nstrictly greater than in all the houses with larger numbers. In other\r\nwords, a house is luxurious if the number of floors in it is strictly\r\ngreater than in all the houses, which are located to the right from it.\r\nIn this task it is assumed that the heights of floors in the houses are\r\nthe same.The new architect is interested in questions, -th of them is\r\nabout the following: \"how many floors should be added to the -th house\r\nto make it luxurious?\" (for all from to , inclusive). You need to help\r\nhim cope with this task.Note that all these questions are independent\r\nfrom each other the answer to the question for house does not affect\r\nother answers (i.e., the floors to the houses are not actually added).\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<map>\n#include<set>\n#include<stack>\n#include<string>\n#include<cmath>\n#include<cctype>\n#include<ctime>\n#include<bitset>\nusing namespace std;\nconst int maxlongint=2147483647;\nconst int inf=1000000000;\nint num[100010],pr[100010];\nint main()\n{\n    int n,n1;\n    cin>>n;\n    for(n1=1;n1<=n;n1++)\n        scanf(\"%d\",&num[n1]);\n    int mx=-inf;\n    for(n1=n;n1>=1;n1--)\n    {\n        pr[n1]=max(0,mx-num[n1]+1);\n        mx=max(num[n1],mx);\n    }\n    for(n1=1;n1<=n;n1++)\n        cout<<pr[n1]<<' ';  \n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Luxurious Houses.json",
    "editorial_link": "https://codeforces.com//blog/entry/20508",
    "editorial": "This problem can be solved in the following way. Let's iterate on given array from the right to the left and will store in variable maxH the maximal height if house which we have already considered.Then the answer to house number i is number max(0,?maxH?+?1?-?hi), where hi number of floors in house number i.\n",
    "hint": []
}