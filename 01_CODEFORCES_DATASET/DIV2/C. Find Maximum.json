{"link": "https://codeforces.com//contest/353/problem/C", "problemId": "3645", "problem_idx": "C", "shortId": "353C", "contest_number": "353", "problem_submissions": {"E": [4734608, 4735346, 4733123, 4737143, 4736547, 4742461, 4742408], "D": [4732406, 4731843, 4732120, 4730587, 4734474, 4733362, 4732298, 4733722, 4732919, 4733388, 4737051, 4734992, 4735113, 4734496, 4731987, 4733739], "B": [4730384, 4730404, 4729843, 4733146, 4728118, 4733276, 4731155, 4728754, 4730614, 4729913, 4731086, 4732452, 4732464, 4729592, 4732612, 4730638, 4733247, 4732145], "C": [4727160, 4729197, 4728938, 4728842, 4730078, 4728441, 4729412, 4730353, 4729606, 4731302, 4728675, 4728539, 4728797, 4730952, 4729543, 4729905, 4733939, 4730129], "A": [4726296, 4726231, 4726277, 4727313, 4726417, 4726322, 4726817, 4726268, 4726421, 4726333, 4726847, 4726895, 4726809, 4726263, 4728018, 4726437, 4734686, 4726429]}, "name": "C. Find Maximum", "statement": "Valera has array , consisting of integers , and function , taking an\r\ninteger from to as its single argument. Value is calculated by formula ,\r\nwhere value equals one if the binary representation of number contains a\r\non the -th position, and zero otherwise.For example, if and , then .Help\r\nValera find the maximum of function among all , for which an inequality\r\nholds: .\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n \nint main() {\n    cin.sync_with_stdio(0);\n    int N;\n    cin >> N;\n    vector<int> V(N);\n    for(int i =0; i < N; i++) cin >> V[i];\n    string M;\n    cin >> M;\n    vector<int> S(N+1,0);\n    for(int i =0; i < N; i++) S[i+1] =S[i]+V[i];\n    \n    int ans =0, a =0;\n    for(int i =N-1; i >= 0; i--) if(M[i] == '1') {\n        ans =max(ans,a+S[i]);\n        a +=V[i];}\n    ans =max(ans,a);\n    cout << ans << \"\\n\";\n    return 0;}\n"], "input": "", "output": "", "tags": ["implementation", "math", "number theory"], "dificulty": "1600", "interactive": false}