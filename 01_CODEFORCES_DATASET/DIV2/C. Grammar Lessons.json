{"link": "https://codeforces.com//contest/114/problem/C", "problemId": "599", "problem_idx": "C", "shortId": "114C", "contest_number": "114", "problem_submissions": {"D": [680614, 677278, 687034, 703847, 688239, 686718], "C": [679537, 677329, 677420, 678206, 678894, 677340, 678896, 678198, 677942, 678443, 677408, 678308, 677570, 677264], "B": [675892, 675509, 675942, 675643, 676134, 676935, 675118, 676157, 675384, 675637, 675937, 676230, 680438, 675305, 675437, 675487], "A": [674586, 674367, 674130, 674388, 674341, 674633, 674152, 674272, 675893, 674247, 674536, 674866, 674450, 674150, 674236, 674109], "E": [703890, 692770]}, "name": "C. Grammar Lessons", "statement": "Petya got interested in grammar on his third year in school. He invented\r\nhis own language called Petya\u2019s. Petya wanted to create a maximally\r\nsimple language that would be enough to chat with friends, that\u2019s why\r\nall the language\u2019s grammar can be described with the following set of\r\nrules: There are three parts of speech: the adjective, the noun, the\r\nverb. Each word in his language is an adjective, noun or verb. There are\r\ntwo genders: masculine and feminine. Each word in his language has\r\ngender either masculine or feminine. Masculine adjectives end with , and\r\nfeminine adjectives end with . Masculine nouns end with , and feminime\r\nnouns end with . Masculine verbs end with , and feminime verbs end with\r\n. Thus, each word in the Petya\u2019s language has one of the six endings,\r\ngiven above. There are no other endings in Petya\u2019s language. It is\r\naccepted that the whole word consists of an ending. That is, words \"\",\r\n\"\", \"\" and so on belong to the Petya\u2019s language. There aren\u2019t any\r\npunctuation marks, grammatical tenses, singular/plural forms or other\r\nlanguage complications. A sentence is either exactly one valid language\r\nword or exactly one . is any sequence of the Petya\u2019s language, that\r\nsatisfy both conditions: Words in statement follow in the following\r\norder (from the left to the right): zero or more adjectives followed by\r\nexactly one noun followed by zero or more verbs. All words in the\r\nstatement should have the same gender.After Petya\u2019s friend Vasya wrote\r\ninstant messenger (an instant messaging program) that supported the\r\nPetya\u2019s language, Petya wanted to add spelling and grammar checking to\r\nthe program. As Vasya was in the country and Petya didn\u2019t feel like\r\nwaiting, he asked you to help him with this problem. Your task is to\r\ndefine by a given sequence of words, whether it is true that the given\r\ntext represents exactly one sentence in Petya\u2019s language.\r\n", "solutions": ["#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\n\nenum type_t {\n  ADJ, NOUN, VERB, ERR\n};\n\nenum gender_t {\n  MALE, FEMALE\n};\n\nstruct word_t {\n  type_t type;\n  gender_t gender;\n};\n\nconst int L = 100000 + 10;\n\nchar buf[L];\n\nint ends_with(const char *s, const char *t) {\n  int n = strlen(s);\n  int m = strlen(t);\n  if (n < m) return 0;\n  return !strcmp(s + n - m, t);\n}\n\nint input(word_t *w) {\n  if (scanf(\"%s\", buf) == EOF) return 0;\n  w->type = ERR;\n  if (ends_with(buf, \"lios\"))   w->type = ADJ,  w->gender = MALE;\n  if (ends_with(buf, \"liala\"))  w->type = ADJ,  w->gender = FEMALE;\n  if (ends_with(buf, \"etr\"))    w->type = NOUN, w->gender = MALE;\n  if (ends_with(buf, \"etra\"))   w->type = NOUN, w->gender = FEMALE;\n  if (ends_with(buf, \"initis\")) w->type = VERB, w->gender = MALE;\n  if (ends_with(buf, \"inites\")) w->type = VERB, w->gender = FEMALE;\n  return 1;\n}\n\nint n;\nword_t word[L];\n\nint check(word_t *word, int n) {\n  for (int i = 0; i < n; i++)\n    if (word[i].type == ERR) return 0;\n  if (n == 1) return 1;\n\n  for (int i = 1; i < n; i++)\n    if (word[i].gender != word[i - 1].gender) return 0;\n\n  int i;\n  for (i = 0; i < n; i++)\n    if (word[i].type != ADJ) break;\n  if (i >= n || word[i].type != NOUN) return 0;\n  for (i++; i < n; i++)\n    if (word[i].type != VERB) return 0;\n  return 1;\n}\n\nint main() {\n  n = 0;\n  while (input(&word[n])) n++;\n\n//for (int i = 0; i < n; i++)\n//  printf(\"%d %d\\n\", word[i].type, word[i].gender);\n\n  puts(check(word, n) ? \"YES\" : \"NO\");\n\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1600", "interactive": false}