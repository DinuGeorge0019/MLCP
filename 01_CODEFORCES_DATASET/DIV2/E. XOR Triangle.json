{
    "link": "https://codeforces.com//contest/1711/problem/E",
    "problemId": "1478276",
    "problem_idx": "E",
    "shortId": "1711E",
    "contest_number": "1711",
    "problem_submissions": {
        "A": [
            165578923,
            165559453,
            189417090,
            165538098,
            165533305,
            165534362,
            165537479,
            165540277,
            165537659,
            165536265,
            165836113,
            165533773,
            165533960,
            165535608,
            166312661,
            165550998,
            165533673,
            165557415,
            165534735,
            165558698,
            165533282,
            165534923,
            166886724,
            166094209,
            165540754
        ],
        "B": [
            165578407,
            165564940,
            189417152,
            165552897,
            165551316,
            165542921,
            165547165,
            165551326,
            165556741,
            165566342,
            165836125,
            165547476,
            165543019,
            165548074,
            166312715,
            165551199,
            165548183,
            165547633,
            165572268,
            165546211,
            165546096,
            165547729,
            166886716,
            166094234,
            165583963
        ],
        "C": [
            165574388,
            165570372,
            165562482,
            165559339,
            165555577,
            165557987,
            165569309,
            165559444,
            165586755,
            165556853,
            165559252,
            165559547,
            165555893,
            165556660,
            165579924,
            165578564,
            165557522,
            165560139,
            165563965,
            165563704
        ],
        "D": [
            165569736,
            165586345,
            165572492,
            165576010,
            165565749,
            165631845
        ],
        "E": [
            165553824,
            165558329,
            165584924,
            165583460,
            165566248,
            165570285,
            165566040,
            166224520,
            165570875,
            165556525,
            165582622,
            165581079,
            165578137,
            165583681,
            165573538,
            165567313,
            165584843,
            165585949,
            165584028,
            165576145
        ]
    },
    "name": "E. XOR Triangle",
    "statement": "You are given a positive integer n. Since n may be very large, you are\r\ngiven its binary representation.You should compute the number of triples\r\n(a,b,c) with 0\r\nleq a,b,c\r\nleq n such that a\r\noplus b, b\r\noplus c, and a\r\noplus c are the sides of a non-degenerate triangle. Here,\r\noplus denotes the bitwise XOR operation.You should output the answer\r\nmodulo 998\r\n,244\r\n,353.Three positive values x, y, and z are the sides of a non-degenerate\r\ntriangle if and only if x+y>z, x+z>y, and y+z>x.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\n#define ll long long int\n#define mod 998244353\nint inc(int a,int b)\n{\n\treturn (a+b<mod)?a+b:a+b-mod;\n}\nint dec(int a,int b)\n{\n\treturn (a<b)?a-b+mod:a-b;\n}\nint mul(int a,int b)\n{\n\treturn (int)((ll)a*b%mod);\n}\nint pow(int a,int b)\n{\n\tint res=1;\n\twhile(b>0){\n\t\tif(b&1) res=mul(res,a);\n\t\ta=mul(a,a); b>>=1;\n\t}\n\treturn res;\n}\nint inv(int x)\n{\n\treturn pow(x,mod-2);\n}\n\n#include<cstring>\nint n; char arr[200002];\nint dp[8][8],lst[8][8];\nint tr1[2][8][8],tr2[8][8];\n\nint main(void)\n{\n\tscanf(\"%s\",arr);\n\tn=strlen(arr);\n\tdp[7][7]=1;\n\tfor(int i=0;i<8;i++){\n\t\ttr2[i][0]=tr2[i][7]=(i);\n\t\ttr2[i][1]=tr2[i][6]=(i&6);\n\t\ttr2[i][2]=tr2[i][5]=(i&5);\n\t\ttr2[i][3]=tr2[i][4]=(i&3);\n\t\tfor(int j=0;j<8;j++){\n\t\t\ttr1[0][i][j]=i;\n\t\t\tif((i&j)!=0) tr1[0][i][j]=-1;\n\t\t\ttr1[1][i][j]=(i&j);\n\t\t}\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<8;j++)\n\t\t\tfor(int k=0;k<8;k++){\n\t\t\t\tlst[j][k]=dp[j][k];\n\t\t\t\tdp[j][k]=0;\n\t\t\t}\n\t\tint t1,t2;\n\t\tfor(int j=0;j<8;j++)\n\t\t\tfor(int k=0;k<8;k++)\n\t\t\t\tfor(int l=0;l<8;l++){\n\t\t\t\t\tt1=tr1[arr[i]-'0'][j][l]; t2=tr2[k][l];\n\t\t\t\t\tif(t1!=-1) dp[t1][t2]=inc(dp[t1][t2],lst[j][k]);\n\t\t\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<8;i++)\n\t\tans=inc(ans,dp[i][0]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "dp"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. XOR Triangle.json",
    "editorial_link": "https://codeforces.com//blog/entry/105232",
    "editorial": "Define cnti1i2i3\n as:\n\nj\nth bit of cnti1i2i3\n is 1\n iif i1=aj,i2=bj,i3=cj\n\ne.g. a=(10)2,b=(11)2,c=(01)2\n then cnt110=(10)2,cnt011=(01)2\n, other cnt\n is 0.\n\na=cnt100+cnt101+cnt110+cnt111\n\nb=cnt010+cnt011+cnt110+cnt111\n\nc=cnt001+cnt011+cnt101+cnt111\n\na?b=cnt010+cnt011+cnt100+cnt101\n\na?c=cnt001+cnt011+cnt100+cnt110\n\nb?c=cnt001+cnt010+cnt101+cnt110\n\na?b+a?c>b?c?cnt011+cnt100>0\n\nsimilar:\n\ncnt101+cnt010>0\n\ncnt110+cnt001>0\n\nthen we use digit dp: dp[n][i][j]\n means when we consider first n\n bits, state of reaching the upper bound is i\n, state of conditions is j\n.\n\nEnumerate ajbjcj\n for j\n from |n|?1\n to 0\n and make transition.\n\nTime complexity is O(29|n|)\n where |n|\n is the length of input."
}