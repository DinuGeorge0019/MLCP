{
    "link": "https://codeforces.com//contest/789/problem/C",
    "problemId": "100714",
    "problem_idx": "C",
    "shortId": "789C",
    "contest_number": "789",
    "problem_submissions": {
        "E": [
            25921417,
            25928664,
            25938608,
            26079210,
            25947954,
            26156847,
            25952720,
            25948873,
            25927282,
            25920863
        ],
        "C": [
            25907485,
            25920845,
            25908240,
            25909409,
            25909007,
            25905160,
            25908451,
            25908709,
            25907436,
            25913347,
            25910091,
            25912715,
            25905998,
            25914226,
            25910850,
            25914881,
            25912811,
            25910391
        ],
        "B": [
            25905735,
            25936346,
            25905545,
            25905376,
            25905148,
            25909677,
            25906183,
            25904190,
            25902630,
            25909186,
            25906079,
            25908841,
            25906659,
            25906692,
            25949245,
            25917385,
            25906432,
            25939487
        ],
        "A": [
            25903396,
            25902876,
            25900899,
            25900290,
            25900204,
            25900048,
            25900683,
            25900192,
            25900117,
            25900433,
            25900607,
            25901029,
            25900382,
            25900017,
            25900928,
            25900038,
            25900011,
            25900777
        ],
        "D": [
            25920092,
            25917739,
            25919852,
            25922157,
            25919194,
            25919753,
            25920835,
            25927363,
            25921216,
            25924692,
            25924134,
            25910294,
            25927095,
            25925921,
            25927864
        ]
    },
    "name": "C. Functions again",
    "statement": "Something happened in Uzhlyandia again... There are riots on the\r\nstreets... Famous Uzhlyandian superheroes Shean the Sheep and Stas the\r\nGiraffe were called in order to save the situation. Upon the arriving,\r\nthey found that citizens are worried about maximum values of the Main\r\nUzhlyandian Function , which is defined as follows:In the above formula,\r\nmust hold, where is the size of the Main Uzhlyandian Array , and means\r\nabsolute value of . But the heroes skipped their math lessons in school,\r\nso they asked you for help. Help them calculate the maximum value of\r\namong all possible values of and for the given array .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 100010;\nint a[MAXN];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int prv;\n    scanf(\"%d\",&prv);\n    n--;\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        a[i]=abs(x-prv);\n        prv=x;\n    }\n    ll sumev = 0, sumod = 0;\n    ll best = 0;\n    for(int i=1;i<=n;i++)\n    {\n        if(i&1)\n        {\n            sumev+=a[i];\n            sumod-=a[i];\n        }\n        else\n        {\n            sumev-=a[i];\n            sumod+=a[i];\n        }\n        //printf(\"%lld %lld\\n\",sumev,sumod);\n        sumev=max(sumev,0ll);\n        sumod=max(sumod,0ll);\n        best=max(best,sumev);\n        best=max(best,sumod);\n    }\n    printf(\"%lld\\n\",best);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "dp",
        "two pointers"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Functions again.json",
    "editorial_link": "https://codeforces.com//blog/entry/51312",
    "editorial": "We can solve the problem for segments with odd and even l separately. Let's build arrays b (bi?=?|ai?+?1?-?ai|·(?-?1)i) and c (ci?=?|ai?+?1?-?ai|·(?-?1)i?+?1). Obviously, that segment with the greatest sum in array b starts in some even index. In every segment starting in odd index we can move l one position right and make answer not-worse, because every element of odd index in b is non-positive. Also, sum of segment starting in even index of b equals to value of f on the same segment. Analogically for array c and odd starting indexes. So the answer equals to maximal of maximal sums of arrays b and c.\n\nThe segment with the greatest sum can be found with the two pointers method or using prefix sums. Such solution works with O(N) complexity.",
    "hint": []
}