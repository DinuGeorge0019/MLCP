{
    "link": "https://codeforces.com//contest/984/problem/A",
    "problemId": "183244",
    "problem_idx": "A",
    "shortId": "984A",
    "contest_number": "984",
    "problem_submissions": {
        "E": [
            38295174,
            38292597,
            38295542,
            38294481,
            38296992,
            38308491,
            38286876,
            38291550,
            38301305,
            38295842,
            38311834
        ],
        "D": [
            38281653,
            38286328,
            38283274,
            38285186,
            38284520,
            38278363,
            38278548,
            38283233,
            38283814,
            38283258,
            38285731,
            38282701,
            38285537,
            38283857,
            38282865,
            38284924,
            38285935,
            38282839,
            38284166,
            38284994
        ],
        "C": [
            38277813,
            38279909,
            38280385,
            38282567,
            38284026,
            38308575,
            38279256,
            38278014,
            38280019,
            38281587,
            38278990,
            38279032,
            38276778,
            38279263,
            38279837,
            38280121,
            38280838,
            38281513,
            38280422
        ],
        "B": [
            38277482,
            38274043,
            38276214,
            38275539,
            38274804,
            38273916,
            38280569,
            38275485,
            38274790,
            38277380,
            38303710,
            38274483,
            38273269,
            38279129,
            38273211,
            38274320,
            38274282,
            38275265,
            38276184,
            38276792
        ],
        "A": [
            38274250,
            38270894,
            38271892,
            38271406,
            38271964,
            38270942,
            38279477,
            38271611,
            38271008,
            38273380,
            38271243,
            38272415,
            38270860,
            38271217,
            38270890,
            38271184,
            38271009,
            38271766,
            38274300,
            38271231
        ]
    },
    "name": "A. Game",
    "statement": "Two players play a game.Initially there are n integers a_1, a_2,\r\nldots, a_n written on the board. Each turn a player selects one number\r\nand erases it from the board. This continues until there is only one\r\nnumber left on the board, i. e. n - 1 turns are made. The first player\r\nmakes the first move, then players alternate turns.The first player\r\nwants to minimize the last number that would be left on the board, while\r\nthe second player wants to maximize it.You want to know what number will\r\nbe left on the board after n - 1 turns if both players make optimal\r\nmoves.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n/*    .___.\n     /     \\\n    | O _ O |\n    /  \\_/  \\\n  .' /     \\ `.\n / _|       |_ \\\n(_/ |       | \\_)\n    \\       /\n   __\\_>-<_/__\n   ~;/     \\;~     */\n\n\n#define float double\n#define debug(x) (cerr << #x << \": \" << (x) << endl)\n\n#define int long long\n\ntypedef long long ll;\n\nusing namespace std;\n\nint32_t main() {\n  int n;\n  cin >> n;\n\n  vector<int> input;\n\n  for(int i = 0; i < n; i++){\n    int x;\n    cin >> x;\n    input.push_back(x);\n  }\n\n  sort(input.begin(), input.end());\n\n  int s = input.size();\n\n  int val = input[((s + 1)/2) - 1];\n  cout << val << endl;\n\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Game12714.json",
    "editorial_link": "https://codeforces.com//blog/entry/59484",
    "editorial": "First let\u00e2\u0080\u0099s notice that the first player makes turns and the second one\r\nmakes . So, if numbers are -indexed and sorted, first player can make\r\nthe answer not more than -th by deleting maximal number every time. The\r\nsecond can make it not less than -th. But , because .So the answer has\r\nminimal and maximal values, which are the same. So the answer is -th\r\nnumber ascending.Asymptotics is or Solution\r\n"
}