{
    "link": "https://codeforces.com//contest/1998/problem/B",
    "problemId": "2808660",
    "problem_idx": "B",
    "shortId": "1998B",
    "contest_number": "1998",
    "problem_submissions": {
        "E2": [
            275597415,
            275585523,
            275585603,
            275624432,
            275607882,
            275614357,
            275595887,
            275619832,
            275623737,
            275625136,
            275600639,
            275623825,
            275627451,
            275623692,
            275628307,
            275623705,
            275626791,
            275625619,
            275628722,
            275612227
        ],
        "E1": [
            275597010,
            275587241,
            275585991,
            275593723,
            275608426,
            275614274,
            275560961,
            275612542,
            275602427,
            275605651,
            275567685,
            275618625,
            275609795,
            275605031,
            275592538,
            275623999,
            275627361,
            275625758,
            275620522,
            275607421
        ],
        "D": [
            275586064,
            275606706,
            275611517,
            275606418,
            275612571,
            275598942,
            275628023,
            275600312,
            275614869,
            275612903,
            275613506,
            275603714,
            275617537,
            275620550,
            275622209,
            275606375,
            275604352,
            275608175,
            275610636,
            275618730
        ],
        "C": [
            275572305,
            275570533,
            275637129,
            275635205,
            275624349,
            275572002,
            275579268,
            275577783,
            275618992,
            275588428,
            275579740,
            275597585,
            275619380,
            275587772,
            275578283,
            275590393,
            275603888,
            275598655,
            275576819,
            275599430,
            275594072,
            275589195
        ],
        "B": [
            275543162,
            275540617,
            275553706,
            275541326,
            275549095,
            275544297,
            275571979,
            275551098,
            275551147,
            275547296,
            275620850,
            275549937,
            275541075,
            275551747,
            275543184,
            275550406,
            275547364,
            275572048,
            275560766,
            275545023
        ],
        "A": [
            275538909,
            275538891,
            275539594,
            275538822,
            275542591,
            275539447,
            275539471,
            275541785,
            275545969,
            275543154,
            275621852,
            275552627,
            275538828,
            275539052,
            275540124,
            275543325,
            275540250,
            275542995,
            275540086
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/132512",
    "editorial": "We can always construct a solution such that the number of pairs (i,j)\n is 1\n where the only pair is (1,n)\n. There exists several constructions, such as rotating p\n once or increment all pi\n (and pi=n\n turns into pi=1\n).\n\nConsider the former construction, where q=[p2,p3,...,pn,p1]\n. For an arbitrarily interval [i,j]\n, p[i..j]\n and q[i..j]\n will have exactly 1\n element that's different, disregarding ordering. Since we have a permutation and all elements are distinct, the sum in the range will never be the same. The only exception is the entire array, of course.",
    "name": "B. Minimize Equal Sum Subarrays",
    "statement": "Sun Tzu, You are given a permutation^{\r\ntext{ }} p of length n.Find a permutation q of length n that minimizes\r\nthe number of pairs (i, j) (1\r\nleq i\r\nleq j\r\nleq n) such that p_i + p_{i+1} +\r\nldots + p_j = q_i + q_{i+1} +\r\nldots + q_j.^{\r\ntext{ }}A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;\u00a0int a[200005];\u00a0void work(){\tint n;\tcin >> n;\tfor(int i=1;i<=n;i++)\t\tscanf(\"%d\",&a[i]);\u00a0\tfor(int i=2;i<=n;i++)\t\tprintf(\"%d \",a[i]);\tprintf(\"%d\\n\",a[1]);}\u00a0int main(){\tint T;\tcin >> T;\twhile(T--)\t\twork();\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Minimize Equal Sum Subarrays.json"
}