{
    "link": "https://codeforces.com//contest/1241/problem/C",
    "problemId": "432402",
    "problem_idx": "C",
    "shortId": "1241C",
    "contest_number": "1241",
    "problem_submissions": {
        "E": [
            62017723,
            62019409,
            62018200,
            62020890,
            62022198,
            62018184,
            62021033,
            62020810,
            62022366,
            62022018,
            62022186,
            62021471,
            62021371,
            62020672,
            62022999,
            62022406,
            62016955,
            62022463,
            62022706,
            62018405,
            62014119,
            62012786,
            62036219,
            62036172
        ],
        "D": [
            62010080,
            62011089,
            62012710,
            62015665,
            62013685,
            62015042,
            62017074,
            62014653,
            62016089,
            62016067,
            62016695,
            62018252,
            62004607,
            62017834,
            62022945,
            62013525,
            62016654,
            62010850
        ],
        "C": [
            62004603,
            62005338,
            62005296,
            62004772,
            62006686,
            62010899,
            62008239,
            62007637,
            62010590,
            62007408,
            62005219,
            62010085,
            62022342,
            62013089,
            62017420,
            62007106,
            62020505,
            62005890
        ],
        "B": [
            61994170,
            61994162,
            61996183,
            61997011,
            61995689,
            61998479,
            61995514,
            62010312,
            62000592,
            62001007,
            61994716,
            62003432,
            62019757,
            61994257,
            62008550,
            61993346,
            61995543
        ],
        "A": [
            61990704,
            61991494,
            61990694,
            61992108,
            61991136,
            61994902,
            61991699,
            62016279,
            61993098,
            61990610,
            61990976,
            61990737,
            62017926,
            61990827,
            62001039,
            61991341,
            61991174
        ],
        "F": [
            62114157,
            62033465,
            62031915
        ]
    },
    "name": "C. Save the Nature",
    "statement": "You are an environmental activist at heart but the reality is harsh and\r\nyou are just a cashier in a cinema. But you can still do something!You\r\nhave n tickets to sell. The price of the i-th ticket is p_i. As a\r\nteller, you have a possibility to select the order in which the tickets\r\nwill be sold (i.e. a permutation of the tickets). You know that the\r\ncinema participates in two ecological restoration programs applying them\r\n: The x\r\n",
    "solutions": [
        "// Code by H~$~C\n//#pragma comment(linker, \"/STACK:1024000000,1024000000\")\n//#pragma GCC optimize(\"Ofast\", \"unroll-loops\")\n//#pragma target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <bits/stdc++.h>\n#define rint register int\n#define rep(i, n) for (rint i = 0; i < (n); ++i)\n#define rep1(i, n) for (rint i = (1); i <= (n); ++i)\n#define Rep(i, a, b) for (rint i = (a); i <= (b); ++i)\n#define per(i, n) for (rint i = ((n) - 1); ~i; --i)\n#define per1(i, n) for (rint i = (n); i; --i)\n#define Per(i, a, b) for (rint i = (a); i >= (b); --i)\n#define repit(it, a) for (__typeof(a.begin()) it = a.begin(); it != a.end(); ++it)\n#define eprintf(...) (fprintf(stderr, __VA_ARGS__) & fflush(stderr))\n#define fillset(a, val) memset(a, val, sizeof(a))\n#define All(a) a.begin(), a.end()\n#define SZ(a) ((int)a.size())\n#define fi first\n#define se second\n#define pb push_back\n#define y0 y19260817\n#define y1 y19268107\n#define j0 j19260817\n#define j1 j19268107\n#define x0 x19260817\n#define x1 x19268107\nusing namespace std;\n#ifndef LOCAL_JUDGE\n#define Debug(...)\n#else\ntemplate <typename T> inline void _debug(const char *names, T &&t) {\n(cerr << names << \" = \" << t << endl).flush();}\ntemplate <typename T1, typename ...T>\ninline void _debug(const char *names, T1 &&t1, T &&... t) {\nconst char *comma = strchr(names, ',');\n(cerr.write(names, comma - names) << \" = \" << t1 << \", \").flush();\n_debug(comma + 1, t ...);}\n#define Debug(...) _debug(#__VA_ARGS__, __VA_ARGS__)\n#endif\nstruct __STARTER_OF_PROGRAM__ { __STARTER_OF_PROGRAM__() {\n#ifndef ONLINE_JUDGE\n  cerr << \"Code by H~$~C: \\n\" << flush;\n#endif\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr), cout.tie(nullptr);\n  cout << fixed << setprecision(12);\n} } __starter_of_program__;\n#ifdef LOCAL_JUDGE\nstruct __ENDDER_OF_PROGRAM__ { ~__ENDDER_OF_PROGRAM__() {\n  cerr << \"\\n\\nTime elasped: \" << clock() * 1000.0 / CLOCKS_PER_SEC << \" ms\\n\" << flush;\n} } __endder_of_program__;\n#endif\nusing ll = long long; using ull = unsigned long long; using uint = unsigned int;\nusing ld = long double; using pii = pair<int, int>; using pll = pair<ll, ll>;\nusing pli = pair<ll, int>; using pil = pair<int, ll>;\ntemplate <typename T> using min_queue = priority_queue<T, vector <T>, greater <T> >;\ntemplate <typename T> using max_queue = priority_queue<T>;\nmt19937 gen(chrono::steady_clock::now().time_since_epoch().count());\nstatic uniform_int_distribution<int> __disint__;\ninline int randint(void) { return __disint__(gen); }\ninline int randint(int l, int r) { return __disint__(gen) % (r - l + 1) + l; }\ntemplate <typename T> inline void reinit(T &t) { t.~T(); new (&t) T(); }\ntemplate <typename T> inline T chmax(T &x, T y) { return x = max(x, y); }\ntemplate <typename T> inline T chmin(T &x, T y) { return x = min(x, y); }\ntemplate <typename T> inline T chmax(T &x, initializer_list <T> i) { return x = max(x, max(i)); }\ntemplate <typename T> inline T chmin(T &x, initializer_list <T> i) { return x = min(x, min(i)); }\ninline void read() { } inline void write() { }\ntemplate <typename T> inline void read(T &x) { cin >> x; }\ntemplate <typename T> inline void write(const T &x) { cout << x; }\ntemplate <typename T, typename U>\ninline void write(const pair<T, U> &x) { write(x.first), cout.put(' '), write(x.second);}\ntemplate <typename T, typename U>\ninline void read(pair<T, U> &x) { read(x.first), read(x.second);}\ntemplate <typename T, typename ...Ts> inline void read(T &x, Ts &...y) { read(x), read(y...); }\ntemplate <typename T, typename ...Ts> inline void write(const T &x, const Ts &...y) {\nwrite(x), (sizeof...(y) && (cout.put(' '), 0)), write(y...); }\n#define writeln(...) (write(__VA_ARGS__), cout.put('\\n'), 0)\ntemplate <typename It> inline void _write(It a, It b) {\nregister char flag = 0; while (a != b) { flag && (cout.put(' '), 0); write(*a ++), flag = 1; } }\n#define _writeln(...) (_write(__VA_ARGS__), cout.put('\\n'), 0)\nconst int mod1 = 1000000007, mod2 = 998244353, mod3 = 1000000009;\nconst double EPS = 1e-9, PI = acos(-1.0), _E_ = exp(1.0);\nconst int inf = 0x3f3f3f3f;\nconst ll lnf = 0x3f3f3f3f3f3f3f3f;\n\nint n, x, a, y, b;\nll arr[200005], k, brr[200005];\nll rt[200005], p[200005];\ninline bool check(int mid) {\n  rep1(i, n) p[i] = rt[i], brr[i] = arr[i];\n  sort(p + 1, p + mid + 1, greater<ll>());\n  sort(brr + 1, brr + n + 1, greater<ll>());\n  ll ans = 0;\n  rep1(i, mid) ans += brr[i] * p[i] / 100;\n  return ans >= k;\n}\nsigned main(int argc, const char *argv[]) {\n  int tests;\n  read(tests);\n  while (tests--) {\n    read(n);\n    rep1(i, n) read(arr[i]);\n    read(x, a, y, b, k);\n    rep1(i, n) {\n      rt[i] = 0;\n      if (i % a == 0) rt[i] += x;\n      if (i % b == 0) rt[i] += y;\n    }\n    int l = 0, r = n;\n    int ans = n + 1;\n    while (l <= r) {\n      int mid = l + r >> 1;\n      if (check(mid)) ans = mid, r = mid - 1;\n      else l = mid + 1;\n    }\n    if (ans > n) writeln(-1);\n    else writeln(ans);\n  }\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "data structures",
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Save the Nature.json",
    "editorial_link": "https://codeforces.com/blog/entry/70358",
    "editorial": "At first, let's assume that x?y\n (otherwise, we can swap parameters of programs). Let's define cont(len)\n as the maximum contribution we can get selling exactly len\n tickets.\n\nNote, in general case sold ticket can be one of 4\n types:\n\ntickets with (x+y)%\n of the price are contributed; the number of such tickets is cXY\n;\ntickets with x%\n of the price are contributed; the number of such tickets is cX\n;\ntickets with y%\n of the price are contributed; the number of such tickets is cY\n;\ntickets which are not in both programs.\nAll values cXY\n, cX\n, cY\n can be easily counted by iterating over indices i\n from 1\n to len\n and checking whenever i\n is divisible by a\n or by b\n or both.\n\nNow we can understand that it's always optimal to choose in the first group cXY\n maximums from p\n, in the second group next cX\n maximums and in the third Â— next cY\n maximums.\n\nUsing the algorithm above we can calculate cont(len)\n in linear time (just sort p\n beforehand).\n\nThe final step is to understand that function cont(len)\n is non decreasing, so we can just binary search the minimal len\n with cont(len)?k\n.\n\nThe time complexity is O(nlogn)\n, but O(nlog2n)\n can pass too.",
    "hint": []
}