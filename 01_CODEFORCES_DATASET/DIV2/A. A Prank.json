{"link": "https://codeforces.com//contest/1062/problem/A", "problemId": "254593", "problem_idx": "A", "shortId": "1062A", "contest_number": "1062", "problem_submissions": {"E": [45734560, 45726248, 45732249, 45733619, 45730195, 45731475, 45731239, 45726325, 45734429, 45732687, 45728510, 45736860, 45736172, 45733982, 45737130, 45738771, 45733014, 45736808, 45722467, 45738588], "D": [45726634, 45730736, 45724741, 45725065, 45723696, 45724136, 45725257, 45730810, 45727060, 45726669, 45731523, 45727302, 45728487, 45722718, 45726364, 45726645, 45723445, 45727784, 45736639, 45727419], "C": [45721626, 45717978, 45722013, 45722920, 45725107, 45723347, 45723217, 45731817, 45722296, 45725538, 45721997, 45722995, 45721715, 45726048, 45722887, 45716980, 45725662, 45723495, 45730894, 45720161], "B": [45719368, 45728287, 45719414, 45719514, 45718037, 45718991, 45720410, 45716157, 45718932, 45720927, 45719221, 45719468, 45718546, 45719917, 45718393, 45721972, 45719490, 45718006, 45726769, 45717530], "A": [45714856, 45714050, 45715684, 45718665, 45717504, 45716696, 45714768, 45714213, 45714103, 45715993, 45714126, 45714813, 45714920, 45732371, 45714819, 45723775, 45732706, 45719793, 45724251, 45714073], "F": [45751027, 45989276, 46585917]}, "name": "A. A Prank", "statement": "JATC and his friend Giraffe are currently in their room, solving some\r\nproblems. Giraffe has written on the board an array a_1, a_2, ..., a_n\r\nof integers, such that 1\r\nle a_1 < a_2 <\r\nldots < a_n\r\nle 10^3, and then went to the bathroom.JATC decided to prank his friend\r\nby erasing some in the array. Since he doesn\u2019t want for the prank to go\r\ntoo far, he will only erase in a way, such that Giraffe can still\r\nrestore the array using the information from the remaining elements.\r\nBecause Giraffe has created the array, he\u2019s that it\u2019s an increasing\r\narray and all the elements are integers in the range [1, 10^3].JATC\r\nwonders what is the greatest number of elements he can erase?\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint a[1006];\n\nint main () {\n\tint n;\n\tcin >> n;\n\tfor (int i=1;i<=n;++i) {\n\t\tint x;\n\t\tcin >> x;\n\t\ta[x] = 1;\n\t\t//cin >> a[i];\n\t}\n\tint ans = 0;\n\t//from 1 ~ ?\n\tint L,R;\n\tfor (int i=1;i<=1000;++i) {\n\t\tif (!a[i]) {\n\t\t\tans = max(ans, max(0,i-2));\n\t\t\tL = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t//from 1000 ~ ?\n\tfor (int i=1000;i>=1;--i) {\n\t\tif (!a[i]) {\n\t\t\tans =max(ans ,max(0,999-i));\n\t\t\tR = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t//else\n\tint pre=0;\n\tfor (int i=L+1;i<=R-1;++i) {\n\t\tif (a[i-1] && a[i] && a[i+1]) ++pre;\n\t\telse pre=0;\n\t\tans = max(ans,pre);\n\t}\n\tcout << ans << endl;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "1300", "interactive": false}