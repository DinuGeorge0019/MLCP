{
    "link": "https://codeforces.com//contest/1688/problem/A",
    "problemId": "1419359",
    "problem_idx": "A",
    "shortId": "1688A",
    "contest_number": "1688",
    "problem_submissions": {
        "F": [
            159410825,
            159527472,
            159472113
        ],
        "C": [
            159404501,
            159365159,
            159366341,
            159373586,
            159362776,
            159370629,
            159370154,
            159369677,
            159381261,
            159374462,
            159381251,
            159381152,
            159372318,
            159366961,
            159376004,
            159380988,
            159381329,
            159386074
        ],
        "E": [
            159391189,
            159380776,
            159384621,
            159398500,
            159397765,
            159404212,
            159394358,
            159393997,
            159399468,
            159392431,
            159395743,
            159400327,
            159402238,
            159399827,
            159395270,
            159393471,
            159393150,
            159396147
        ],
        "B": [
            159388484,
            159355530,
            159354509,
            159357638,
            159355802,
            159358715,
            159358570,
            159355775,
            159357680,
            159365471,
            159355946,
            159360943,
            159358134,
            159356079,
            159356249,
            159358267,
            159364146,
            159357603
        ],
        "D": [
            159372838,
            159371621,
            159377503,
            159382209,
            159381068,
            159378580,
            159379984,
            159378382,
            159374943,
            159383837,
            159371975,
            159370185,
            159380593,
            159384944,
            159388687,
            159386205,
            159385205,
            159378922
        ],
        "A": [
            159357586,
            159352248,
            159352639,
            159352936,
            159353828,
            159354431,
            159354424,
            159352341,
            159352633,
            159353673,
            159352511,
            159354887,
            159354866,
            159352629,
            159352715,
            159358063,
            159357871,
            159353570
        ]
    },
    "name": "A. Cirno s Perfect Bitmasks Classroom",
    "statement": "Even if it’s a really easy question, she won’t be able to answer it\r\nCirno’s perfect bitmasks classroom has just started!Cirno gave her\r\nstudents a positive integer x. As an assignment, her students need to\r\nfind the integer y, which satisfies the following two conditions:x\r\ntexttt{and}\r\ny > 0 x\r\ntexttt{xor}\r\ny > 0Where\r\ntexttt{and} is the bitwise AND operation, and\r\ntexttt{xor} is the bitwise XOR operation.Among the students was Mystia,\r\nwho was truly baffled by all these new operators. Please help her!\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconstexpr int inf = 1e18;\nconstexpr int maxn = 2e5 + 5;\nconstexpr int mod = 998244353;\n\ninline void solve()\n{\n  int x; cin >> x;\n  if (__builtin_popcount(x) > 1)\n    cout << (x & -x) << '\\n';\n  else if (x == 1)\n    cout << \"3\\n\";\n  else\n    cout << (x ^ 1) << '\\n';\n}\n\nsigned main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int T; cin >> T;\n  while (T --)\n  solve();\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "brute force"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Cirno s Perfect Bitmasks Classroom.json",
    "editorial_link": "https://codeforces.com//blog/entry/103493",
    "editorial": "SolutionLet be the -th bit of , be the -th bit of (both indexed from\r\n)...To satisfy the first condition, find the minimum integer satisfying\r\n, and assign to .If , the second condition is satisfied now. Otherwise,\r\nfind the minimum integer satisfying , and assign to .The time complexity\r\nis .\r\n",
    "hint": [
        "Hint Consider Unable to parse markup [type=CF_MATHJAX] and Unable to parse markup [type=CF_MATHJAX] separately."
    ]
}