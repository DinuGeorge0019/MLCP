{
    "link": "https://codeforces.com//contest/525/problem/B",
    "problemId": "25276",
    "problem_idx": "B",
    "shortId": "525B",
    "contest_number": "525",
    "problem_submissions": {
        "E": [
            10469529,
            10465773,
            10462320,
            10473852,
            10470314,
            10468913,
            10471407,
            10472352,
            10471463,
            10468119,
            10482016
        ],
        "A": [
            10466492,
            10459383,
            10459851,
            10468884,
            10459356,
            10464661,
            10460865,
            10459447,
            10463645,
            10460601,
            10459420,
            10459625,
            10468470,
            10464011,
            10460662,
            10460403,
            10460186,
            10460076,
            10465668,
            10459793
        ],
        "D": [
            10466031,
            10468890,
            10468989,
            10474860,
            10468593,
            10472101,
            10470926,
            10472770,
            10473464,
            10480430,
            10472569,
            10473468,
            10468745,
            10475146
        ],
        "C": [
            10463905,
            10462286,
            10467821,
            10468051,
            10468445,
            10463570,
            10464786,
            10471337,
            10464431,
            10462510,
            10465576,
            10466372,
            10462777,
            10467129,
            10480410,
            10469681,
            10469099,
            10467204
        ],
        "B": [
            10459849,
            10460170,
            10461961,
            10469584,
            10459611,
            10459522,
            10463289,
            10460886,
            10459674,
            10459690,
            10460416,
            10461920,
            10462421,
            10467148,
            10463544,
            10464761,
            10465220,
            10462234,
            10464721,
            10464494
        ]
    },
    "name": "B. Pasha and String",
    "statement": "Pasha got a very beautiful string for his birthday, the string consists\r\nof lowercase Latin letters. The letters in the string are numbered from\r\n1 to from left to right, where is the length of the given string.Pasha\r\ndidn\u2019t like his present very much so he decided to change it. After his\r\nbirthday Pasha spent days performing the following transformations on\r\nhis string each day he chose integer and a piece of string (a segment)\r\nfrom position to position . It is guaranteed that .You face the\r\nfollowing task: determine what Pasha\u2019s string will look like after days.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define\tst first\n#define\tnd second\n#define\tmp make_pair\n#define\tpb push_back\n#define\tlli long long int\n#define\tall( gg )\tgg.begin(),gg.end()\n#define\tforeach( gg,itit )\tfor( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )\n#define\tFP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )\n#define\tFM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )\n#define\tdebug(ccc)\tcout << #ccc << \" = \" << ccc << endl;\n\n#define\tmod\t1000000007LL\n\nusing namespace std;\n\nint\tn;\nstring\ts;\n\nint\tm;\nint\ta[300000];\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin >> s;\n\tn = s.size();\n\ts = \" \"+s;\n\tcin >> m;\n\twhile( m-- ){\n\t\tint\tx;\n\t\tcin >> x;\n\t\ta[x]++;\n\t}\n\tFP( i,1,n/2 )\ta[i] += a[i-1];\n\tFP( i,1,n/2 )\tif( a[i]&1 )\tswap( s[i],s[n-i+1] );\n\ts.erase( s.begin() );\n\tcout << s << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "strings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Pasha and String.json",
    "editorial_link": "https://codeforces.com//blog/entry/17119",
    "editorial": "At first we need to understand next fact \u0097 it doesn't matter in wich order make reverses, answer will be the same for all orders.\n\nLet's numerate elements of string from one. To solve given problem we need to count how many reverses will begin in every position of string. Then we need to count array sum[]. In sum[i] we need to store count of reverses of substrings, which begin in positions which not exceeding i.\n\nNow iterate for i from 1 to n?/?2 and if sum[i] is odd swap si and sn?-?i?+?1. After that it remains only to print string s.\n\nAsymptotic behavior of this solution \u0097 O(n + m), where n \u0097 length of string s, m \u0097 count of reverses."
}