{"link": "https://codeforces.com//contest/168/problem/E", "problemId": "1059", "problem_idx": "E", "shortId": "168E", "contest_number": "168", "problem_submissions": {"B": [1428836, 1427139, 1426253, 1427986, 1430335, 1427853, 1424590, 1424980, 1424310], "D": [1426871, 1430554, 1429305, 1431245, 1429653, 1430817, 1430384, 1431850, 30408057], "C": [1425388, 1426092, 1431178, 1426649, 1431983, 1430173, 1426526, 1428307, 1425447, 1426498, 1426931], "A": [1423734, 1423629, 1423811, 1423781, 1424797, 1423644, 1423482, 1423449, 1423414, 1423417, 1423345], "E": [1436307]}, "name": "E. Wizards and Numbers", "statement": "In some country live wizards. They love playing with numbers. The\r\nblackboard has two numbers written on it and . The order of the numbers\r\nis not important. Let\u2019s consider for the sake of definiteness. The\r\nplayers can cast one of the two spells in turns: Replace with . Number\r\ncan be chosen by the player, considering the limitations that and .\r\nNumber is chosen independently each time an active player casts a spell.\r\nReplace with . If , similar moves are possible.If at least one of the\r\nnumbers equals zero, a player can\u2019t make a move, because taking a\r\nremainder modulo zero is considered somewhat uncivilized, and it is far\r\ntoo boring to subtract a zero. The player who cannot make a move,\r\nloses.To perform well in the magic totalizator, you need to learn to\r\nquickly determine which player wins, if both wizards play optimally: the\r\none that moves first or the one that moves second.\r\n", "solutions": ["/**\n *       Compiler:  gcc\n *         Author:  bdep__  \n *        Created:  03/27/2012 10:38:06 PM\n ***/\n\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <string>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#define N 1010\n#define M 1000010\n#define S 1000100\n#define MOD 1000000007\n\ntypedef long long LL;\nusing namespace std;\n\ninline int L(int i){ return i<<1; }\ninline int R(int i){ return (i<<1)|1; }\ninline int B(int i){ return 1<<i; }\ninline int low_bit(int x){ return x&(-x); }\nLL cnt[N],top;\nLL tmp,mul;\n\nbool must_win(LL a,LL b)\n{\n\tif(a==0||b==0)\n\t\treturn 0;\n\tif(a>b)\n\t\ttmp=a,a=b,b=tmp;\n\tif(must_win(b%a,a)==0)\n\t\treturn 1;\n\ttmp=b;\n\ttmp/=a;\n\ttmp%=a+1;\n\tif(tmp&1)\n\t\treturn 0;\n\treturn 1;\n}\n\nint main()\n{\n\tint t;\n\tLL a,b; \n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tcin>>a>>b;\n\t\tif(must_win(a,b))\n\t\t\tputs(\"First\");\n\t\telse\n\t\t\tputs(\"Second\");\n\t}\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["games", "math"], "dificulty": "2300", "interactive": false}