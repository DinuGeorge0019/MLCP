{"link": "https://codeforces.com//contest/1282/problem/C", "problemId": "502549", "problem_idx": "C", "shortId": "1282C", "contest_number": "1282", "problem_submissions": {"E": [67546320, 67540524, 67541446, 67546303, 67546008, 67555357, 67546940, 67554692, 67554152, 67544350, 67536466, 67548692, 67540027, 67545669, 67549313, 67547161, 67559435, 67546463], "D": [67539652, 67544407, 67549747, 67552213, 67545569, 67553744, 67546954, 67547692, 67559514, 67555818, 67556694, 67549779, 67598315, 67547666, 67544808, 67560465, 67548234, 67564097, 67563835, 67550417, 67558326], "C": [67534787, 67533541, 67536568, 67540389, 67537852, 67536983, 67539275, 67539714, 67541087, 67545744, 67547743, 67539703, 67555448, 67535851, 67539752, 67537500, 67540009, 67540608, 67537965, 67542806], "B1": [67530651, 67528820, 67529188, 67532639, 67529290, 67531855, 67532183, 67532128, 67536143, 67531195, 67544224, 67536607, 67547534, 67532778, 67535678, 67530911, 67533223, 67529828, 67532257, 67532690], "B2": [67530568, 67528747, 67529121, 67532572, 67529220, 67531772, 67532043, 67532055, 67536010, 67535218, 67544175, 67536559, 67747743, 67553996, 67532837, 67535576, 67530786, 67533144, 67529811, 67532146, 67532632], "A": [67527639, 67527588, 67527631, 67528416, 67527601, 67528381, 67527986, 67528304, 67530259, 67527611, 67537517, 67551469, 67529352, 67527672, 67527752, 67527928, 67529147, 67527871, 67528083]}, "name": "C. Petya and Exam", "statement": "Petya has come to the math exam and wants to solve as many problems as\r\npossible. He prepared and carefully studied the rules by which the exam\r\npasses.The exam consists of n problems that can be solved in T minutes.\r\nThus, the exam begins at time 0 and ends at time T. Petya can leave the\r\nexam at any integer time from 0 to T, inclusive.All problems are divided\r\ninto two types: easy problems Petya takes exactly a minutes to solve any\r\neasy problem; hard problems Petya takes exactly b minutes (b > a) to\r\nsolve any hard problem. Thus, if Petya starts solving an easy problem at\r\ntime x, then it will be solved at time x+a. Similarly, if at a time x\r\nPetya starts to solve a hard problem, then it will be solved at time\r\nx+b.For every problem, Petya knows if it is easy or hard. Also, for each\r\nproblem is determined time t_i (0\r\nle t_i\r\nle T) at which it will become (required). If Petya leaves the exam at\r\ntime s and there is such a problem i that t_i\r\nle s and he didn\u2019t solve it, then he will receive 0 points for the whole\r\nexam. Otherwise (i.e if he has solved all such problems for which t_i\r\nle s) he will receive a number of points equal to the number of solved\r\nproblems. Note that leaving at time s Petya can have both \"mandatory\"\r\nand \"non-mandatory\" problems solved.For example, if n=2, T=5, a=2, b=3,\r\nthe first problem is hard and t_1=3 and the second problem is easy and\r\nt_2=2. Then: if he leaves at time s=0, then he will receive 0 points\r\nsince he will not have time to solve any problems; if he leaves at time\r\ns=1, he will receive 0 points since he will not have time to solve any\r\nproblems; if he leaves at time s=2, then he can get a 1 point by solving\r\nthe problem with the number 2 (it must be solved in the range from 0 to\r\n2); if he leaves at time s=3, then he will receive 0 points since at\r\nthis moment both problems will be mandatory, but he will not be able to\r\nsolve both of them; if he leaves at time s=4, then he will receive 0\r\npoints since at this moment both problems will be mandatory, but he will\r\nnot be able to solve both of them; if he leaves at time s=5, then he can\r\nget 2 points by solving all problems. Thus, the answer to this test is\r\n2.Help Petya to determine the maximal number of points that he can\r\nreceive, before leaving the exam.\r\n", "solutions": ["#include <utility>\n#include <iostream>\n#include <cmath>\n#include <deque>\n#include <string>\n#include <time.h>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <sstream>\n#include <algorithm>\n#include <bitset>\n#include <stdint.h>\n\n#define pii pair<ll,ll>\n#define X first\n#define Y second\n#define mp make_pair\n\ntypedef long long ll;\nusing namespace std;\n#define MAXN 200500\n#define MOD 998244353\n#define OFF 2001\nll n, x, k, z, m, pos, q, ans_v, y;\nll x1, p1, x2;\nll b[MAXN], c[MAXN];\npii a[MAXN];\nvector<ll> f;\nvector<ll> g[MAXN];\nvoid solve() {\n    ll n, T, x, y;\n    cin >> n >> T >> x >> y;\n    ll sum1 = 0, sum2 = 0;\n    for (int i = 0; i < n; i++) {\n        cin >> a[i].Y;\n        if (a[i].Y) {\n            sum2++;\n        } else {\n            sum1++;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        cin >> a[i].X;\n    }\n    if (sum1 * x + sum2 * y <= T) {\n        cout << n << \"\\n\";\n        return;\n    }\n    sort(a, a+n);\n    ll totsum1 = sum1;\n    ll totsum2 = sum2;\n    sum1 = 0;\n    sum2 = 0;\n    ll ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (i > 0) {\n            if (a[i - 1].Y) {\n                sum2++;\n            } else {\n                sum1++;\n            }\n        }\n        if (a[i].X - 1 >= sum1 * x + sum2 * y) {\n            ll lft = a[i].X - 1 - (sum1 * x + sum2 * y);\n            ll lft1 = totsum1 - sum1;\n            ll lft2 = totsum2 - sum2;\n            ll sum = sum1 + sum2;\n            if (lft1 * x >= lft) {\n                sum += lft / x;\n            } else {\n                sum += lft1 + min(lft2, (lft - lft1 * x) / y);\n            }\n            ans = max(ans, sum);\n        }\n    }\n    cout << ans << \"\\n\";\n\n}\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    ll t;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n\n\n\n    return 0;\n}"], "input": "", "output": "", "tags": ["greedy", "sortings", "two pointers"], "dificulty": "1800", "interactive": false}