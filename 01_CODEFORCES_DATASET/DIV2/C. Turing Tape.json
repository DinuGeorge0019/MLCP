{"link": "https://codeforces.com//contest/133/problem/C", "problemId": "703", "problem_idx": "C", "shortId": "133C", "contest_number": "133", "problem_submissions": {"E": [924813, 923201, 925122, 924740, 923151, 925910, 928212, 925928, 924995, 923703, 924128, 929077, 924213, 924289], "D": [923670, 925451, 923404, 923731, 926478, 924800, 924588, 926856, 923474, 924032, 924197, 924879], "C": [921698, 921926, 921368, 921398, 921083, 921917, 922348, 919949, 921656, 922402, 921490, 922221, 929129, 921781, 920761, 921370, 922130], "B": [920321, 920624, 920117, 919992, 919882, 920500, 921070, 921364, 920093, 921113, 920430, 920262, 929115, 919964, 919777, 919852, 920879], "A": [919203, 919548, 919250, 919042, 919124, 919191, 920089, 921756, 919222, 920426, 919339, 918987, 918923, 918953, 918882, 918982]}, "name": "C. Turing Tape", "statement": "INTERCAL is the oldest of esoteric programming languages. One of its\r\nmany weird features is the method of character-based output, known as\r\nTuring Tape method. It converts an array of unsigned 8-bit integers into\r\na sequence of characters to print, using the following method.The\r\nintegers of the array are processed one by one, starting from the first.\r\nProcessing -th element of the array is done in three steps:1. The 8-bit\r\nbinary notation of the ASCII-code of the previous printed character is\r\nreversed. When the first element of the array is processed, the result\r\nof this step is considered to be 0.2. The -th element of the array is\r\nsubtracted from the result of the previous step modulo 256.3. The binary\r\nnotation of the result of the previous step is reversed again to produce\r\nASCII-code of the -th character to be printed.You are given the text\r\nprinted using this method. Restore the array used to produce this text.\r\n", "solutions": ["#include <cstdio>\n#include <string>\n#include <map>\n#include <cstring>\n#include <bitset>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <memory.h>\n#include <list>\n#include <vector>\n#include <set>\n#include <stack>\n#include <deque>\n#include <queue>\n#include <complex>\n\nusing namespace std;\n\n#define sqr(n)  (n)*(n)\n#define mem0(a) memset(a,0,sizeof(a))\n#define mem1(a) memset(a,-1,sizeof(a))\n#define INF 2000000000\n\ntypedef long long ll;\n\nint reverse(int N){\n    vector<int> S;\n    for(int i = 0; i < 8; i++){\n        S.push_back(N%2);\n        N/=2;\n    }\n    N = 0;\n    for(int i = 0; i < 8; i++)\n    {\n        N *= 2;\n        N += S[i];\n    }\n    return N;\n}\n\nint main()\n{\n    char s[200];\n    gets(s);\n    int last_printed = 0;\n    for(int i = 0; i < strlen(s); i++){\n        int step3 = reverse(s[i]);\n        int step1 = reverse(last_printed);\n        last_printed = s[i];\n        int step2 = (step1 - step3 + 256)%256;\n        printf(\"%d\\n\",step2);\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "math"], "dificulty": "1300", "interactive": false}