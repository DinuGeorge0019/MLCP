{
    "link": "https://codeforces.com//contest/336/problem/C",
    "problemId": "3388",
    "problem_idx": "C",
    "shortId": "336C",
    "contest_number": "336",
    "problem_submissions": {
        "B": [
            4252446,
            4252041,
            4252175,
            4255383,
            4250433,
            4250826,
            4251128,
            4257354,
            4249500,
            4257697,
            4249279,
            4251826,
            4253179,
            4253015,
            4250519,
            4253007,
            4257525,
            4251753,
            4250638,
            4250520
        ],
        "D": [
            4251068,
            4253042,
            4254798,
            4253278,
            4254794,
            4256123,
            4256029,
            4253747,
            4256423,
            4258039,
            4253197,
            4257068,
            4261819,
            4257260,
            4262308
        ],
        "C": [
            4249560,
            4248916,
            4250118,
            4250374,
            4251654,
            4252453,
            4253538,
            4250581,
            4251537,
            4250614,
            4255076,
            4251620,
            4249815,
            4250761,
            4250492,
            4252198,
            4251350,
            4249415,
            4252572,
            4253045
        ],
        "A": [
            4247902,
            4248269,
            4249017,
            4250360,
            4247866,
            4277601,
            4277596,
            4277589,
            4248086,
            4247723,
            4248114,
            4248490,
            4249405,
            4257844,
            4256193,
            4247759,
            4247857,
            4248505,
            4247955,
            4248126,
            4249141,
            4250100,
            4248707,
            4248271
        ],
        "E": [
            4275638
        ]
    },
    "name": "C. Vasily the Bear and Sequence",
    "statement": "Vasily the bear has got a sequence of positive integers . Vasily the\r\nBear wants to write out several numbers on a piece of paper so that the\r\nbeauty of the numbers he wrote out was maximum. The of the written out\r\nnumbers is such maximum non-negative integer , that number is divisible\r\nby number without a remainder. If such number doesn\u2019t exist (that is,\r\nfor any non-negative integer , number is divisible by without a\r\nremainder), the beauty of the written out numbers equals -1. Tell the\r\nbear which numbers he should write out so that the beauty of the written\r\nout numbers is maximum. If there are multiple ways to write out the\r\nnumbers, you need to choose the one where the bear writes out as many\r\nnumbers as possible.Here expression means applying the bitwise AND\r\noperation to numbers and . In programming languages C++ and Java this\r\noperation is represented by \"&\", in Pascal by \"and\".\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint n, a[100005], Max, i, j, Now, full;\nint list[100005], tot;\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]), Max = max(Max, a[i]);\n\tfor (i = 1; i <= Max; (i <<= 1));\n\tfull = i - 1;\n\ti >>= 1;\n\tfor (; i >= 1; (i >>= 1))\n\t{\n\t\tNow = full;\n\t\tfor (j = 1; j <= n; j++)\n\t\t\tif ((a[j] & i) > 0)\n\t\t\t\tNow &= a[j];\n\t\tif (Now % i == 0)\n\t\t\tbreak;\n\t}\n\t\n\tif (i == 0)\n\t{\n\t\tprintf(\"%d\\n\", n);\n\t\tfor (i = 1; i <= n; i++)\n\t\t\tif (i == n)\n\t\t\t\tprintf(\"%d\\n\", a[i]);\n\t\t\telse\n\t\t\t\tprintf(\"%d \", a[i]);\n\t}\n\t\n\telse\n\t{\n\t\tfor (j = 1; j <= n; j++)\n\t\t\tif ((a[j] & i) > 0)\n\t\t\t\tlist[++tot] = a[j];\n\t\tprintf(\"%d\\n\", tot);\n\t\tfor (j = 1; j <= tot; j++)\n\t\t\tif (j == tot)\n\t\t\t\tprintf(\"%d\\n\", list[j]);\n\t\t\telse\n\t\t\t\tprintf(\"%d \", list[j]);\n\t}\n\t\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "number theory"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Vasily the Bear and Sequence.json",
    "editorial_link": "https://codeforces.com//blog/entry/8574",
    "editorial": "Let\u00e2\u0080\u0099s check max beauty from 29 to 0. For every possible beauty our aim\r\nis to find largest subset with such beauty. We will include in this\r\nsubset all numbers, that have at -th bit. After that we do bitwise as in\r\nstatement, and if the resulting value is divisible by , then there is\r\nthe answer. Solution works in . Author\u00e2\u0080\u0099s solution\r\n"
}