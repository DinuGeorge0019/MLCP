{
    "link": "https://codeforces.com//contest/677/problem/C",
    "problemId": "61383",
    "problem_idx": "C",
    "shortId": "677C",
    "contest_number": "677",
    "problem_submissions": {
        "E": [
            18198164,
            18204085,
            18197306,
            18200993,
            18200953,
            18195589,
            18203905,
            18215946
        ],
        "D": [
            18193483,
            18198632,
            18200137,
            18203205,
            18194465,
            18198804,
            18199943,
            18195070,
            18202030,
            18197600,
            18197818,
            18198979,
            18200991,
            18199872,
            18199844
        ],
        "B": [
            18190137,
            18189283,
            18188934,
            18189082,
            18188438,
            18189342,
            18189575,
            18188793,
            18188689,
            18189354,
            18191729,
            18192124,
            18189662,
            18190381,
            18192321,
            18189806,
            18199099,
            18189915,
            18189024,
            18192633
        ],
        "C": [
            18189147,
            18192130,
            18193382,
            18190274,
            18190560,
            18190716,
            18189368,
            18190951,
            18190001,
            18192729,
            18189241,
            18189853,
            18190879,
            18188748,
            18189105,
            18191741,
            18199413,
            18194523,
            18189867,
            18194964
        ],
        "A": [
            18185361,
            18186546,
            18186018,
            18185448,
            18185774,
            18186287,
            18186201,
            18185979,
            18185500,
            18187073,
            18192540,
            18186205,
            18189142,
            18189736,
            18185692,
            18198474,
            18185676,
            18185395,
            18188182
        ]
    },
    "name": "C. Vanya and Label",
    "statement": "While walking down the street Vanya saw a label \"Hide&Seek\". Because he\r\nis a programmer, he used as a bitwise AND for these two words\r\nrepresented as a integers in base and got new word. Now Vanya thinks of\r\nsome string and wants to know the number of pairs of words of length\r\n(length of ), such that their bitwise AND is equal to . As this number\r\ncan be large, output it modulo .To represent the string as a number in\r\nnumeral system with base Vanya uses the following rules: digits from \u201d\r\nto \u201d correspond to integers from to ; letters from \u201d to \u201d correspond to\r\nintegers from to ; letters from \u201d to \u201d correspond to integers from to ;\r\nletter \u201d correspond to integer ; letter \u201d correspond to integer .\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nint n,h,k;\nint a[1000000];\nlong long ans;\nlong long cnt[1000];\nstring s;\n\nint make(char q)\n{\n    if(q=='-')\n        return 62;\n    if(q=='_')\n        return 63;\n    if(q>='0' && q<='9')\n        return q-'0';\n    else\n    if(q>='A' && q<='Z')\n        return 10+q-'A';\n    else\n    if(q>='a' && q<='z')\n    {\n        return 10+'z'-'a'+1+q-'a';\n    }\n}\n\nint main()\n{\n    for(int i=0;i<64;i++)\n        for(int j=0;j<64;j++)\n            cnt[i&j]++;\n    cin>>s;\n    long long ans=1;\n    const int md=1e9+7;\n    for(int i=0;i<s.size();i++)\n    {\n        int cur=make(s[i]);\n        ans=(ans*cnt[cur])%md;\n    }\n    cout<<ans<<\"\\n\";\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "combinatorics",
        "implementation",
        "strings"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Vanya and Label.json",
    "editorial_link": "https://codeforces.com//blog/entry/45181",
    "editorial": "We can transform our word in binary notation, we can do it easily,\r\nbecause . Move through the bits of this number: if bit is equal to ,\r\nthen we can have 3 different optinos of this bit in our pair of words:\r\n0&1, 1&0, 0&0, else we can have only one option: 1&1. So the result will\r\nbe , where is amount of zero bits. Complexity . Code\r\n"
}