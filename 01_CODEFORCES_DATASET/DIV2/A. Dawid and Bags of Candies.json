{
    "link": "https://codeforces.com//contest/1230/problem/A",
    "problemId": "419095",
    "problem_idx": "A",
    "shortId": "1230A",
    "contest_number": "1230",
    "problem_submissions": {
        "F": [
            61160420,
            61168761,
            61169473,
            61163448,
            61168484,
            61211410,
            61166190,
            61161224
        ],
        "E": [
            61148718,
            61161040,
            61146705,
            61151905,
            61156612,
            61143760,
            61134387,
            61160007,
            61147362,
            61152540,
            61143988,
            61157501,
            61156272,
            61146445,
            61139279,
            61157405,
            61162378
        ],
        "D": [
            61141780,
            61141760,
            61139292,
            61144818,
            61153245,
            61138124,
            61148103,
            61186591,
            61153749,
            61148878,
            61139116,
            61159398,
            61147761,
            61146515,
            61163213,
            61156688,
            61153790,
            61144523
        ],
        "C": [
            61128802,
            61146533,
            61172060,
            61167384,
            61149264,
            61133355,
            61139896,
            61137699,
            61129905,
            61146775,
            61146749,
            61137639,
            61130666,
            61128891,
            61133021,
            61163475,
            61147427,
            61133523
        ],
        "B": [
            61122260,
            61138928,
            61125100,
            61135886,
            61136151,
            61126292,
            61136826,
            61131007,
            61122773,
            61127439,
            61129919,
            61122576,
            61124319,
            61122348,
            62114936,
            61124404,
            61125885,
            61125887,
            61124264
        ],
        "A": [
            61120076,
            61128524,
            61121738,
            61130255,
            61122144,
            61123763,
            61140465,
            61128200,
            61120371,
            61124618,
            61133127,
            61121262,
            61120693,
            61119937,
            62114885,
            61126319,
            61122327,
            61122607,
            61120311
        ]
    },
    "name": "A. Dawid and Bags of Candies",
    "statement": "Dawid has four bags of candies. The i-th of them contains a_i candies.\r\nAlso, Dawid has two friends. He wants to give each bag to one of his two\r\nfriends. Is it possible to distribute the bags in such a way that each\r\nfriend receives the same amount of candies in total?Note, that you can\u2019t\r\nkeep bags for yourself or throw them away, each bag should be given to\r\none of the friends.\r\n",
    "solutions": [
        "// Words are flowing out like endless rain into a paper cup\n// They slither while they pass they slip away across the universe\n// Pools of sorrow, waves of joy are drifting through my open mind\n// Possessing and caressing me\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing LL = long long;\n\nnamespace _buff {\n\nconst size_t BUFF = 1 << 19;\nchar ibuf[BUFF], *ib = ibuf, *ie = ibuf;\nchar getc() {\n    if (ib == ie) {\n        ib = ibuf;\n        ie = ibuf + fread(ibuf, 1, BUFF, stdin);\n    }\n    return ib == ie ? -1 : *ib++;\n}\n\n}\n\nLL read() {\n    using namespace _buff;\n    LL ret = 0;\n    bool pos = true;\n    char c = getc();\n    for (; (c < '0' || c > '9') && c != '-'; c = getc()) {\n        assert(~c);\n    }\n    if (c == '-') {\n        pos = false;\n        c = getc();\n    }\n    for (; c >= '0' && c <= '9'; c = getc()) {\n        ret = (ret << 3) + (ret << 1) + (c ^ 48);\n    }\n    return pos ? ret : -ret;\n}\n\nint main() {\n    int a[4];\n    generate_n(a, 4, read);\n    for (int i = 0; i < 16; ++i) {\n        int sum1 = 0, sum2 = 0;\n        for (int j = 0; j < 4; ++j) {\n            ((i >> j & 1) ? sum1 : sum2) += a[j];\n        }\n        if (sum1 == sum2) {\n            puts(\"YES\");\n            return 0;\n        }\n    }\n    puts(\"NO\");\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Dawid and Bags of Candies.json",
    "editorial_link": "https://codeforces.com//blog/entry/70008",
    "editorial": "Let\u00e2\u0080\u0099s firstly sort all the bags in non-decreasing order of capacities.\r\nAs the order of friends doesn\u00e2\u0080\u0099t matter, it turns out that one of them\r\nshould take only the biggest bag or the biggest and the smallest bag.\r\nIt\u00e2\u0080\u0099s easy to check if any of these possibilities works.\r\n"
}