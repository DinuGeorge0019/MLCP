{
    "link": "https://codeforces.com//contest/867/problem/D",
    "problemId": "125350",
    "problem_idx": "D",
    "shortId": "867D",
    "contest_number": "867",
    "problem_submissions": {
        "D": [
            30884718,
            30969715,
            30908906
        ],
        "E": [
            30880295,
            30879986,
            30881111,
            30877764,
            30881335,
            30882295,
            30883343,
            30879932,
            30880853,
            30885039,
            30883442,
            30879026,
            30879346,
            30878760,
            30879361,
            30879208,
            30881707,
            30881486,
            30883064
        ],
        "C": [
            30879669,
            30878960,
            30878088,
            30883610,
            30879422,
            30877573,
            30877883,
            30885041,
            30885195,
            30880421,
            30881172
        ],
        "B": [
            30876237,
            30876507,
            30875069,
            30876283,
            30877011,
            30875260,
            30875540,
            30874844,
            30874882,
            30876892,
            30881931,
            30874579,
            30875739,
            30876833,
            30876524,
            30876752,
            30874913,
            30878747,
            30875046
        ],
        "A": [
            30873015,
            30872603,
            30873110,
            30873218,
            30872680,
            30873140,
            30873066,
            30873137,
            30873548,
            30875168,
            30873452,
            30872738,
            30874021,
            30872548,
            30873686,
            30873869,
            30872699,
            30874649,
            30873108
        ]
    },
    "name": "D. Gotta Go Fast",
    "statement": "You’re trying to set the record on your favorite video game. The game\r\nconsists of levels, which must be completed sequentially in order to\r\nbeat the game. You usually complete each level as fast as possible, but\r\nsometimes finish a level slower. Specifically, you will complete the -th\r\nlevel in either seconds or seconds, where , and there’s a percent chance\r\nof completing it in seconds. After completing a level, you may decide to\r\neither continue the game and play the next level, or reset the game and\r\nstart again from the first level. Both the decision and the action are\r\ninstant.Your goal is to complete all the levels sequentially in at most\r\ntotal seconds. You want to minimize the expected amount of time playing\r\nbefore achieving that goal. If you continue and reset optimally, how\r\nmuch total time can you expect to spend playing?\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <cstdio>\n#include <cmath>\n#include <map>\n#include <set>\n#include <utility>\n#include <stack>\n#include <cstring>\n#include <bitset>\n#include <deque>\n#include <string>\n#include <list>\n#include <cstdlib>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int maxn = 50 + 5;\nconst int maxr = 5000 + 5;\ntypedef long long ll;\ntypedef long double ld;\n//E of complete\nld dp1[maxn][maxr];\n//假设期望p s可以从0走完，那么当sigma E()\n//dp2[n][<=r] = 0\n//dp2[n][>r] = p\n// dp2[i][j] = possible[i+1][j] * min(dp2[i+1][j] + f[i], p) + possible[i+1][j+diff[i]] * min(dp2[i+1][j+diff[i]] + s[i], p)\n\n//E of time\nld dp[maxn][maxr];\nint n, r;\nint s[maxn], f[maxn];\nint postsum[maxn];\nint top = 0;\nld p[maxn];\nconst ld eps = 1e-9;\nbool check(ld q)\n{\n\tfor (int i = 0; i <= r; i++)\n\t{\n\t\tdp[n][i] = 0;\n\t}\n\tfor (int i = r + 1; i <= top; i++)\n\t{\n\t\tdp[n][i] = q;\n\t}\n\tfor (int i = n-1; i >= 0; i--)\n\t{\n\t\tfor (int j = 0; j <= top; j++)\n\t\t{\n\t\t\tdp[i][j] = p[i] * min(q + f[i], dp[i + 1][j + f[i]] + f[i]) + (1 - p[i]) * min(q + s[i], dp[i + 1][j + s[i]] + s[i]);\n\t\t}\n\t}\n\tif (dp[0][0] >= q)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nint main()\n{\n\twhile (~scanf(\"%d%d\", &n, &r))\n\t{\n\t\ttop = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d%d%Lf\", f + i, s + i, p + i);\n\t\t\ttop += s[i];\n\t\t\tp[i] /= 100.0L;\n\t\t}\n\t\tld L = 0, R = 1e9 + 7;\n\t\twhile (L + eps < R)\n\t\t{\n\t\t\tconst ld mid = L + (R - L) / 2;\n\t\t\tif (check(mid))\n\t\t\t{\n\t\t\t\tL = mid;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tR = mid;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%.10Lf\\n\", L);\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Gotta Go Fast.json",
    "editorial_link": "https://codeforces.com//blog/entry/54888",
    "editorial": null,
    "hint": []
}