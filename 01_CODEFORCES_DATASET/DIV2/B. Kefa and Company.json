{
    "link": "https://codeforces.com//contest/580/problem/B",
    "problemId": "35996",
    "problem_idx": "B",
    "shortId": "580B",
    "contest_number": "580",
    "problem_submissions": {
        "E": [
            13169027,
            13165630,
            13172362,
            13172239,
            13276228,
            13276220,
            13181451,
            13180453
        ],
        "D": [
            13158152,
            13153446,
            13153124,
            13152837,
            13153644,
            13153078,
            13152233,
            13150734,
            13158863,
            13154097,
            13154459,
            13155410,
            13154153,
            13153936,
            13153904,
            13151772,
            13154328,
            13155366
        ],
        "C": [
            13152496,
            13147124,
            13149562,
            13149833,
            13149612,
            13149260,
            13148537,
            13148215,
            13150353,
            13147522,
            13151581,
            13150500,
            13149659,
            13151388,
            13150099,
            13149113,
            13149776,
            13150107
        ],
        "B": [
            13148061,
            13167252,
            13146021,
            13147235,
            13171070,
            13146699,
            13146714,
            13146413,
            13145854,
            13146150,
            13150066,
            13148456,
            13146468,
            13147058,
            13148187,
            13147219,
            13146687,
            13147097,
            13148044
        ],
        "A": [
            13145130,
            13166155,
            13143931,
            13143879,
            13144120,
            13143774,
            13143862,
            13143852,
            13143834,
            13144014,
            13143978,
            13143875,
            13144293,
            13145295,
            13145825,
            13143916,
            13144739,
            13143807
        ]
    },
    "name": "B. Kefa and Company",
    "statement": "Kefa wants to celebrate his first big salary by going to restaurant.\r\nHowever, he needs company. Kefa has friends, each friend will agree to\r\ngo to the restaurant if Kefa asks. Each friend is characterized by the\r\namount of money he has and the friendship factor in respect to Kefa. The\r\nparrot doesn’t want any friend to feel poor compared to somebody else in\r\nthe company (Kefa doesn’t count). A friend feels poor if in the company\r\nthere is someone who has at least units of money more than he does.\r\nAlso, Kefa wants the total friendship factor of the members of the\r\ncompany to be maximum. Help him invite an optimal company!\r\n",
    "solutions": [
        "#include<iostream>\n#include<sstream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cstdlib>\n#include<cmath>\n#include<cctype>\n#include<ctime>\n#include<algorithm>\n#include<iomanip>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<cassert>\n#include<bitset>\n\nusing namespace std;\ntypedef long long LL;\nconst int N=2e5;\nstruct ones\n{\n    int a,b;\n} f[N];\nint cmp(const ones &a,const ones &b)\n{\n    return a.a<b.a;\n}\nint main() {\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&f[i].a,&f[i].b);\n    sort(f+1,f+n+1,cmp);\n    int zz=1;\n    long long ans=0,now=0;\n    for(int i=1;i<=n;i++)\n    {\n        while(f[i].a-f[zz].a >= m)\n        {\n            now=now-(long long)f[zz].b;\n            zz++;\n        }\n        now+=(long long)f[i].b;\n        if (now>ans) ans=now;\n    }\n    cout<<ans<<endl;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Kefa and Company.json",
    "editorial_link": "https://codeforces.com//blog/entry/20468",
    "editorial": "At first we sort all friends in money ascending order. Now the answer is\r\nsome array subsegment. Next, we use the method of two pointers for\r\nfinding the required subsegment. Asymptotics . Solution\r\n",
    "hint": []
}