{
    "link": "https://codeforces.com//contest/812/problem/B",
    "problemId": "108003",
    "problem_idx": "B",
    "shortId": "812B",
    "contest_number": "812",
    "problem_submissions": {
        "E": [
            27494142,
            27491477,
            27493766,
            27515655,
            27496725,
            27495067,
            27497471,
            27496279,
            27497446,
            27497581,
            27499309,
            27499707,
            27489928,
            27498644,
            27502197,
            27500634,
            27499517,
            27499414,
            27502641,
            27500094,
            27500259
        ],
        "B": [
            27491993,
            27495156,
            27497709,
            27512953,
            27489354,
            27496857,
            27494139,
            27493311,
            27490608,
            27494150,
            27488730,
            27492610,
            27500920,
            27493253,
            27490411,
            27496233,
            27491317,
            27491574,
            27492471,
            27492075,
            27490349
        ],
        "C": [
            27490421,
            27492136,
            27488817,
            27489120,
            27487355,
            27489159,
            27489035,
            27492785,
            27488367,
            27489931,
            27490104,
            27498191,
            27489300,
            27492185,
            27489814,
            27490763,
            27493690,
            27489337,
            27493758,
            27491206
        ],
        "A": [
            27487305,
            27493249,
            27495525,
            27491891,
            27490175,
            27487261,
            27487056,
            27487516,
            27499547,
            27493817,
            27487154,
            27503033,
            27487455,
            27486987,
            27488643,
            27487109,
            27486628,
            27487274,
            27487808,
            27486790
        ],
        "D": [
            27503386,
            27512794,
            27534240,
            27564141,
            27521512
        ]
    },
    "name": "B. Sagheer, the Hausmeister",
    "statement": "Some people leave the lights at their workplaces on when they leave that\r\nis a waste of resources. As a hausmeister of DHBW, Sagheer waits till\r\nall students and professors leave the university building, then goes and\r\nturns all the lights off.The building consists of floors with stairs at\r\nthe left and the right sides. Each floor has rooms on the same line with\r\na corridor that connects the left and right stairs passing by all the\r\nrooms. In other words, the building can be represented as a rectangle\r\nwith rows and columns, where the first and the last columns represent\r\nthe stairs, and the columns in the middle represent rooms.Sagheer is\r\nstanding at the ground floor at the left stairs. He wants to turn all\r\nthe lights off in such a way that he will not go upstairs until all\r\nlights in the floor he is standing at are off. Of course, Sagheer must\r\nvisit a room to turn the light there off. It takes one minute for\r\nSagheer to go to the next floor using stairs or to move from the current\r\nroom/stairs to a neighboring room/stairs on the same floor. It takes no\r\ntime for him to switch the light off in the room he is currently\r\nstanding in. Help Sagheer find the minimum total time to turn off all\r\nthe lights.Note that Sagheer does not have to go back to his starting\r\nposition, and he does not have to visit rooms where the light is already\r\nswitched off.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <complex>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#if __cplusplus >= 201103L\n#include <unordered_map>\n#include <unordered_set>\n#endif\n#include <vector>\n#define pb push_back\n#define mp make_pair\n#define fst first\n#define snd second\n#define FOR(i,a,b) for(int i=a;i<(b);i++)\n#define FORN(i,b) for(int i=0;i<(b);i++)\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<pair<int,int> > vii;\n\nint n,m,k;\nchar b[16][128];\nint x[16],y[16];\nint dp[16][2];\n\nint f(int i, int j){\n\tif(dp[i][j]>=0)return dp[i][j];\n\tint r;\n\tif(i==k){\n\t\tassert(y[i]>=0&&x[i]<m);\n\t\tif(j==0)r=y[i];\n\t\telse r=m-1-x[i];\n\t}\n\telse {\n\t\tif(y[i]<0)r=1+f(i-1,j);\n\t\telse {\n\t\t\tr=m+f(i-1,j^1);\n\t\t\tif(j==0)r=min(r,2*y[i]+1+f(i-1,j));\n\t\t\telse r=min(r,2*(m-1-x[i])+1+f(i-1,j));\n\t\t}\n\t}\n\treturn dp[i][j]=r;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);m+=2;\n\tFORN(i,n)scanf(\"%s\",b[i]);\n\tFORN(i,n)FORN(j,m)b[i][j]-='0';\n\tFORN(i,n){\n\t\tx[i]=m;\n\t\ty[i]=-1;\n\t\tFORN(j,m)if(b[i][j])x[i]=min(x[i],j),y[i]=max(y[i],j);\n\t}\n\tk=0;\n\twhile(k<n&&y[k]<0)k++;\n\tif(k==n){puts(\"0\");return 0;}\n\t//puts(\"holis\");\n\tmemset(dp,-1,sizeof(dp));\n\tprintf(\"%d\\n\",f(n-1,0));\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sagheer, the Hausmeister.json",
    "editorial_link": "https://codeforces.com//blog/entry/52318",
    "editorial": "When Sagheer reaches a floor for the first time, he will be standing at\r\neither left or right stairs. If he is standing at the left stairs, then\r\nhe will go to the rightmost room with lights on. If he is standing at\r\nthe right stairs, then he will go to the leftmost room with lights on.\r\nNext, he will either take the left stairs or the right stairs to go to\r\nthe next floor. We will brute force on the choice of the stairs at each\r\nfloor. Note that Sagheer doesn t have to go to the last floor, so he\r\nwill go to the highest floor that has a room with lights on. Complexity:\r\nImplementation\r\n",
    "hint": []
}