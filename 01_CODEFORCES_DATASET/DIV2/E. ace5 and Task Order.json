{"link": "https://codeforces.com//contest/1918/problem/E", "problemId": "2452575", "problem_idx": "E", "shortId": "1918E", "contest_number": "1918", "problem_submissions": {"G": [244132893, 245985475, 244948797, 244948670], "F": [244120772, 244125092, 244126848, 244126771, 244130168, 244131697, 244138260, 244138344, 244139263, 244138435, 244141669, 244144124, 244142227, 244122678, 244157073, 244156595, 244332251, 244124771, 244360495, 244129898], "D": [244109167, 244099156, 244092966, 244101787, 244100881, 244108481, 244101721, 244106486, 244109529, 244104916, 244106995, 244113590, 244113865, 244099423, 244110295, 244096244, 244108027, 244103663, 244360463, 244108155], "E": [244103507, 244108050, 244110113, 244110472, 244112287, 244124161, 244125655, 244123391, 244119446, 244125406, 244135128, 244134725, 244128795, 244112679, 244118320, 244116217, 244928601, 244928561], "C": [244091247, 244087599, 244079342, 244087694, 244092782, 244089213, 244094187, 244089808, 244094684, 244096501, 244097023, 244099017, 244107490, 244085730, 244089866, 244086764, 244094953, 244095107, 244360406, 244091142], "B": [244083801, 244076050, 244075794, 244073267, 244075602, 244075619, 244082026, 244079074, 244080512, 244082819, 244079063, 244082004, 244078089, 244075054, 244078156, 244075906, 244081851, 244083244, 244360342, 244080338], "A": [244083099, 244071431, 244072186, 244071210, 244070855, 244071315, 244075506, 244071630, 244072257, 244074358, 244071939, 244071253, 244071114, 244071560, 244071154, 244071990, 244074495, 244089579, 244360312, 244073174]}, "name": "E. ace5 and Task Order", "statement": "In the new round, there were n tasks with difficulties from 1 to n. The\r\ncoordinator, who decided to have the first round with tasks in unsorted\r\norder of difficulty, rearranged the tasks, resulting in a permutation of\r\ndifficulties from 1 to n. After that, the coordinator challenged ace5 to\r\nguess the permutation in the following way.Initially, the coordinator\r\nchooses a number x from 1 to n.ace5 can make queries of the form: ?\r\ni. The answer will be: >, if a_i > x, after which x increases by 1. <,\r\nif a_i < x, after which x decreases by 1. =, if a_i = x, after which x\r\nremains unchanged. The task for ace5 is to guess the permutation in no\r\nmore than 40n queries. Since ace5 is too busy writing the announcement,\r\nhe has entrusted this task to you.\r\n", "solutions": ["#include <bits/stdc++.h>\n//#define endl '\\n'\nusing namespace std;\nconst int N = 2005;\nint T, n;\nint mnp, mxp, x;\nint a[N];\nchar in(int i){\n\tcout << \"? \"  << i << endl;\n\tchar c;\n\tcin >> c;\n\tif (c == '>') x++;\n\telse if (c == '<') x--;\n\treturn c;\n}\nvoid dfs(int l, int r, vector<int> pos){\n\tif (l == r){\n\t\ta[pos[0]] = l;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\twhile (x < mid) in(mxp);\n\twhile (x > mid) in(mnp);\n\tvector<int> posl, posr;\n\tfor (int x : pos){\n\t\tchar c = in(x);\n\t\tif (c == '<'){\n\t\t\tposl.push_back(x);\n\t\t\tin(mxp);\n\t\t}else if (c == '=') posl.push_back(x);\n\t\telse{\n\t\t\tposr.push_back(x);\n\t\t\tin(mnp);\n\t\t}\n\t}\n\tdfs(l, mid, posl);\n\tdfs(mid + 1, r, posr);\n}\nvoid solve(){\n\tcin >> n;\n\tmnp = 0, mxp = 0;\n\tfor (int i = 1; i <= n; i++){\n\t\tchar c = in(i);\n\t\tif (c == '>'){\n\t\t\tif (mnp) in(mnp);\n\t\t}else if (c == '<'){\n\t\t\twhile (in(i) == '<');\n\t\t\tmnp = i;\n\t\t}else if (!mnp) mnp = i;\n\t}\n\tfor (int i = 1; i <= n; i++){\n\t\tchar c = in(i);\n\t\tif (c == '<'){\n\t\t\tif (mxp) in(mxp);\n\t\t}else if (c == '>'){\n\t\t\twhile (in(i) == '>');\n\t\t\tmxp = i;\n\t\t}else if (!mxp) mxp = i;\n\t}\n\tvector<int> pos(n);\n\tfor (int i = 1; i <= n; i++)\n\t\tpos[i - 1] = i;\n\twhile (in(mnp) == '<');\n\tx = 1;\n\tdfs(1, n, pos);\n\tcout << \"! \";\n\tfor (int i = 1; i <= n; i++) cout << a[i] << ' ';\n\tcout << endl;\n}\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n//\tfreopen(\"in.txt\", \"r\", stdin);\n//\tfreopen(\"out2.txt\", \"w\", stdout);\n\tcin >> T;\n\twhile (T--) solve();\n\treturn 0; \n}"], "input": "", "output": "", "tags": ["constructive algorithms", "divide and conquer", "implementation", "interactive", "probabilities", "sortings"], "dificulty": "2200", "interactive": false}