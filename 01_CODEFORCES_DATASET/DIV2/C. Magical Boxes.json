{"link": "https://codeforces.com//contest/270/problem/C", "problemId": "2574", "problem_idx": "C", "shortId": "270C", "contest_number": "270", "problem_submissions": {"E": [3056054, 3058059, 3068984, 3080996], "D": [3050127, 3055561, 3050397, 3049548, 3052822, 3053009, 3054445, 3053861, 3054191, 3055863, 3055631, 3055839, 3055560, 3054894, 3056305, 3055011, 3055694, 3057529], "B": [3048641, 3045871, 3045836, 3047541, 3048502, 3048657, 3047926, 3048630, 3048541, 3047300, 3048508, 3046687, 3050138, 3050574, 3048964, 3050600, 3048557, 3052052], "C": [3047282, 3051469, 3048138, 3054706, 3050612, 3051213, 3050203, 3052136, 3050827, 3049962, 3053006, 3051668, 3051745, 3053806, 3052573, 3052416, 3053557, 3053872, 3049732], "A": [3045411, 3045427, 3045431, 3045729, 3045456, 3045883, 3045584, 3046227, 3045772, 3045573, 3046141, 3045605, 3046597, 3045891, 3046067, 3045859, 3045602, 3045847]}, "name": "C. Magical Boxes", "statement": "Emuskald is a well-known illusionist. One of his trademark tricks\r\ninvolves a set of magical boxes. The essence of the trick is in packing\r\nthe boxes inside other boxes.From the top view each magical box looks\r\nlike a square with side length equal to ( is an integer, ) units. A\r\nmagical box can be put inside a magical box , if side length of is\r\nstrictly less than the side length of . In particular, Emuskald can put\r\n4 boxes of side length into one box of side length , or as in the\r\nfollowing figure: Emuskald is about to go on tour performing around the\r\nworld, and needs to pack his magical boxes for the trip. He has decided\r\nthat the best way to pack them would be inside another magical box, but\r\nmagical boxes are quite expensive to make. Help him find the smallest\r\nmagical box that can fit all his boxes.\r\n", "solutions": ["#include<stdio.h>\n#include<iostream>\n#include<string.h>\n#include<stdlib.h>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define fr(i,n) for(int i=0;i<n;i++)\n#define fo(i,n) for(int i=1;i<=n;i++)\n#define fe(i,n) for(__typeof(n.begin()) i=n.begin();i!=n.end();i++)\nint n,z,a,x;\nint main()\n{\n\tcin>>n;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tcin>>a>>x;\n\t\tif(x==1)\n\t\t\ta++;\n\t\tfor(;x>1;a++)\n\t\t\tx=(x+3)/4;\n\t\tz=max(z,a);\n\t}\n\tprintf(\"%d\",z);\n}"], "input": "", "output": "", "tags": ["binary search", "greedy", "implementation", "math", "sortings"], "dificulty": "1600", "interactive": false}