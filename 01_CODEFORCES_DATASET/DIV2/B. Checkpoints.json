{"link": "https://codeforces.com//contest/709/problem/B", "problemId": "68946", "problem_idx": "B", "shortId": "709B", "contest_number": "709", "problem_submissions": {"E": [20130641, 20124651, 20127494, 20128647, 20134582, 20126856, 20131635], "D": [20124898, 20125348, 20125590, 20127651, 20134541, 20123785, 20123545, 20128259, 20122648, 20123757, 20124877, 20126002, 20125331, 20135343, 20147031, 20127080, 20127410], "A": [20115354, 20109861, 20109752, 20110920, 20109926, 20111099, 20110022, 20111671, 20109642, 20109791, 20110166, 20112527, 20111078, 20111468, 20109878, 20109709, 20111812, 20111626, 20110794], "B": [20113833, 20112032, 20112031, 20115708, 20113141, 20117610, 20114244, 20113474, 20115654, 20113525, 20115877, 20114171, 20127022, 20116909, 20114086, 20127412, 20114624, 20117349, 20114057], "C": [20111159, 20114853, 20115377, 20110581, 20114157, 20114293, 20114683, 20116230, 20114209, 20116228, 20114971, 20116431, 20115960, 20116412, 20115647, 20114195, 20117301, 20114265, 20116593]}, "name": "B. Checkpoints", "statement": "Vasya takes part in the orienteering competition. There are checkpoints\r\nlocated along the line at coordinates . Vasya starts at the point with\r\ncoordinate . His goal is to visit at least checkpoint in order to finish\r\nthe competition. Participant are allowed to visit checkpoints in\r\narbitrary order.Vasya wants to pick such checkpoints and the order of\r\nvisiting them that the total distance travelled is minimized. He asks\r\nyou to calculate this minimum possible value.\r\n", "solutions": ["#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+10;\nconst int INF=1e8;\nint aa[N];\n\nint fun(int x,int y,int z){\n    if(z<=x)return y-z;\n    if(z>=y)return z-x;\n    return min(z-x+y-x,y-z+y-x);\n}\n\nint main(){\n    #ifdef DouBi\n    freopen(\"in.cpp\",\"r\",stdin);\n    #endif // DouBi\n    int n,a;\n    while(scanf(\"%d%d\",&n,&a)!=EOF){\n        for(int i=0;i<n;i++){\n            scanf(\"%d\",&aa[i]);\n        }\n        sort(aa,aa+n);\n        if(n==1){\n            printf(\"0\\n\");continue;\n        }\n        int ans=INF;\n        if(a<=aa[0]){\n            ans=min(ans,aa[n-2]-a);\n        }\n        else if(a>=aa[n-1]){\n            ans=min(ans,a-aa[1]);\n        }\n        else {\n            ans=min(ans,fun(aa[1],aa[n-1],a));\n            ans=min(ans,fun(aa[0],aa[n-2],a));\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1500", "interactive": false}