{"link": "https://codeforces.com//contest/1293/problem/D", "problemId": "519785", "problem_idx": "D", "shortId": "1293D", "contest_number": "1293", "problem_submissions": {"F": [69144490], "E": [69128562, 69139795, 69142024, 69131945, 69142296, 69141087, 69144888, 69145848, 69164707], "D": [69110626, 69117551, 69124060, 69120174, 69127386, 69126155, 69129595, 69130299, 69114746, 69117610, 69118282, 69119817, 69121032, 69120169, 69124854, 69120660, 69119364, 69123969, 69120677], "C": [69102974, 69108977, 69107084, 69104834, 69114459, 69118062, 69106027, 69117297, 69105999, 69106862, 69108959, 69111194, 69109221, 69111162, 69107446, 69109831, 69111539, 69110537, 69100793], "B": [69100602, 69105372, 69103818, 69141041, 69106215, 69103881, 69107978, 69109703, 69102030, 69102659, 69103831, 69103631, 69104162, 69106217, 69102105, 69103438, 69103183, 69102839, 69102420], "A": [69100208, 69103403, 69101074, 69134161, 69102156, 69101452, 69101459, 69101593, 69100449, 69100351, 69100975, 69100577, 69100919, 69101698, 69100184, 69100301, 69100964, 69100796, 69109424]}, "name": "D. Aroma s Search", "statement": "With a new body, our idol Aroma White (or should we call her Kaori\r\nMinamiya?) begins to uncover her lost past through the OS space.The\r\nspace can be considered a 2D plane, with an infinite number of data\r\nnodes, indexed from 0, with their coordinates defined as follows: The\r\ncoordinates of the 0-th node is (x_0, y_0) For i > 0, the coordinates of\r\ni-th node is (a_x\r\ncdot x_{i-1} + b_x, a_y\r\ncdot y_{i-1} + b_y) Initially Aroma stands at the point (x_s, y_s). She\r\ncan stay in OS space for at most t seconds, because after this time she\r\nhas to warp back to the real world. She need to return to the entry\r\npoint (x_s, y_s) to warp home.While within the OS space, Aroma can do\r\nthe following actions: From the point (x, y), Aroma can move to one of\r\nthe following points: (x-1, y), (x+1, y), (x, y-1) or (x, y+1). This\r\naction requires 1 second. If there is a data node at where Aroma is\r\nstaying, she can collect it. We can assume this action costs 0 seconds.\r\nOf course, each data node can be collected at most once. Aroma wants to\r\ncollect as many data as possible before warping back. Can you help her\r\nin calculating the maximum number of data nodes she could collect within\r\nt seconds?\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst long long inf = 1e17;\nlong long x[105], y[105];\nlong long ax, ay, bx, by;\nint n;\nlong long a, b, t;\n\nint main(void) {\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n    cin >> x[0] >> y[0] >> ax >> ay >> bx >> by;\n    while (x[n] < inf && y[n] < inf) {\n        ++n;\n        if (x[n-1] > (inf - bx) / ax + 1 || y[n-1] > (inf - by) / ay + 1) {\n            --n;\n            break;\n        }\n        x[n] = ax * x[n-1] + bx;\n        y[n] = ay * y[n-1] + by;\n    }\n    cin >> a >> b >> t;\n    int ans = 0;\n    for (int i = 0; i <= n; ++i) {\n        long long to = abs(x[i] - a) + abs(y[i] - b);\n        if (to > t) continue;\n        long long rem = t - to;\n        for (int l = 0; l <= i; ++l) {\n            for (int r = i; r <= n; ++r) {\n                to = abs(x[i] - x[l]) + abs(y[i] - y[l]);\n                to = min(to, abs(x[i] - x[r]) + abs(y[i] - y[r]));\n                to += abs(x[l] - x[r]) + abs(y[l] - y[r]);\n                if (to <= rem) ans = max(ans, r - l + 1);\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "implementation"], "dificulty": "1700", "interactive": false}