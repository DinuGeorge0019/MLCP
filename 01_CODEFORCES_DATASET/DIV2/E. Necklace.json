{
    "link": "https://codeforces.com//contest/614/problem/E",
    "problemId": "45530",
    "problem_idx": "E",
    "shortId": "614E",
    "contest_number": "614",
    "problem_submissions": {
        "B": [
            15353969,
            15350260,
            15350615,
            15350680,
            15348454,
            15350100,
            15350974,
            15353463,
            15352422,
            15357694,
            15351731,
            15351010,
            15355162,
            15361196,
            15359446,
            15372090,
            15355813
        ],
        "D": [
            15367152,
            15366645,
            15367844,
            15371803,
            15371151,
            15372297,
            15371070,
            15371375,
            15373375,
            15370561
        ],
        "C": [
            15353832,
            15359347,
            15364158,
            15355108,
            15361144,
            15358460,
            15370476,
            15360373,
            15359826,
            15363428,
            15360933,
            15363074,
            15366533
        ],
        "A": [
            15347068,
            15347426,
            15347654,
            15414018,
            15347337,
            15348138,
            15348507,
            15347653,
            15355380,
            15364322,
            15353145,
            15361803,
            15348451
        ],
        "E": [
            15380705
        ]
    },
    "name": "E. Necklace",
    "statement": "Ivan wants to make a necklace as a present to his beloved girl. A is a\r\ncyclic sequence of beads of different colors. Ivan says that necklace is\r\nrelative to the cut point between two adjacent beads, if the chain of\r\nbeads remaining after this cut is a palindrome (reads the same forward\r\nand backward). Ivan has beads of colors. He wants to make a necklace,\r\nsuch that itâ€™s beautiful relative to as many cuts as possible. He\r\ncertainly wants to use all the beads. Help him to make the most\r\nbeautiful necklace.\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,a[100010],g,len;\nchar ans[100010];\ninline int gcd(int a,int b)\n{\n    return b==0?a:gcd(b,a%b);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i==1)g=a[i];\n        else g=gcd(g,a[i]);\n    }\n    for(int i=1;i<=n;i++)a[i]/=g,len+=a[i];\n    if(g&1)\n    {\n        int cnt=0;\n        for(int i=1;i<=n;i++)if(a[i]&1)cnt++;\n        if(cnt!=1)\n        {\n            puts(\"0\");\n            for(int i=1;i<=n;i++)\n            for(int j=1;j<=g*a[i];j++)putchar('a'+i-1);\n        }\n        else\n        {\n            printf(\"%d\\n\",g);\n            int pos=0,tot=0;\n            for(int i=1;i<=n;i++)\n            {\n                if(a[i]&1)pos=i;\n                for(int j=1;j<=a[i]/2;j++)ans[++tot]='a'+i-1;\n            }\n            ans[++tot]='a'+pos-1;\n            for(int i=tot+1;i<=2*tot-1;i++)ans[i]=ans[2*tot-i];\n            for(int i=1;i<=g;i++)printf(\"%s\",ans+1);\n        }\n    }\n    else\n    {\n        int cnt=0;\n        for(int i=1;i<=n;i++)if(a[i]&1)cnt++;\n        if(cnt!=1)\n        {\n            printf(\"%d\\n\",g);\n            int tot=0;\n            for(int i=1;i<=n;i++)\n            {\n                for(int j=1;j<=a[i];j++)ans[++tot]='a'+i-1;\n            }\n            for(int i=tot+1;i<=2*tot;i++)ans[i]=ans[2*tot-i+1];\n            for(int i=1;i<=g/2;i++)printf(\"%s\",ans+1);\n        }\n        else\n        {\n            printf(\"%d\\n\",g);\n            int pos=0,tot=0;\n            for(int i=1;i<=n;i++)\n            {\n                if(a[i]&1)pos=i;\n                for(int j=1;j<=a[i]/2;j++)ans[++tot]='a'+i-1;\n            }\n            ans[++tot]='a'+pos-1;\n            for(int i=tot+1;i<=2*tot-1;i++)ans[i]=ans[2*tot-i];\n            for(int i=1;i<=g;i++)printf(\"%s\",ans+1);\n        }\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Necklace.json",
    "editorial_link": "https://codeforces.com//blog/entry/22832",
    "editorial": "Surprisingly, the nice cuts can't be put randomly. Let's take a look on the first picture above (red lines represent nice cut points). But since the necklace is symmetrical relative to nice cuts, the cut points are also symmetrical relative to nice cuts, so there is one more cut (see picture two). Repeating this process, we will split the whole necklace into parts of the same size (picture three).\n\n     \n\nIf the number of parts is even, then each part can be taken arbitrarily, but the neighbouring parts must be reverses of each other (e.g. \"abc\" and \"cba\"). This is an implication of the cuts being nice.\n\nIf the number of parts is odd, then each part is equal to each other and is a palindrome, this is an implication of the cuts being nice too.\n\nAnyway, the number of characters in each part is equal, so amount of parts can't be greater than . Actually, it may be zero,  or its divisor.\n\nIf the number of odd-sized colors is zero, then the sum is even and gcd is even, this way we can construct a building block containing exactly  beads of i-th color, (gcd being gcd of all counts), then build beads of gcd parts, where each part equal to building block, with neighbouring parts being reverses. Since gcd is even, everything is ok.\n\nIf the number of odd-sized colors is one, then the sum is odd and gcd is odd. Building block have to be built as a palindrome containing  beads of i-th color, exactly n?-?1 of colors will be even and one odd, put the odd one in center, others on sides (aabcbaa). Everything is ok.\n\nIf num of odd counts is geq2. Gcd is odd, all its divisors too, so our building block has to be palindrome. Let k denote the number of parts. A building block will contain  beads of color i, at least two of these numbers are odd, it is impossible to build such a palindrome. The answer is zero.\n\nComplexity: O(sum), just to output answer.",
    "hint": []
}