{"link": "https://codeforces.com//contest/614/problem/E", "problemId": "45530", "problem_idx": "E", "shortId": "614E", "contest_number": "614", "problem_submissions": {"B": [15353969, 15350260, 15350615, 15350680, 15348454, 15350100, 15350974, 15353463, 15352422, 15357694, 15351731, 15351010, 15355162, 15361196, 15359446, 15372090, 15355813], "D": [15367152, 15366645, 15367844, 15371803, 15371151, 15372297, 15371070, 15371375, 15373375, 15370561], "C": [15353832, 15359347, 15364158, 15355108, 15361144, 15358460, 15370476, 15360373, 15359826, 15363428, 15360933, 15363074, 15366533], "A": [15347068, 15347426, 15347654, 15414018, 15347337, 15348138, 15348507, 15347653, 15355380, 15364322, 15353145, 15361803, 15348451], "E": [15380705]}, "name": "E. Necklace", "statement": "Ivan wants to make a necklace as a present to his beloved girl. A is a\r\ncyclic sequence of beads of different colors. Ivan says that necklace is\r\nrelative to the cut point between two adjacent beads, if the chain of\r\nbeads remaining after this cut is a palindrome (reads the same forward\r\nand backward). Ivan has beads of colors. He wants to make a necklace,\r\nsuch that it\u2019s beautiful relative to as many cuts as possible. He\r\ncertainly wants to use all the beads. Help him to make the most\r\nbeautiful necklace.\r\n", "solutions": ["#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,a[100010],g,len;\nchar ans[100010];\ninline int gcd(int a,int b)\n{\n    return b==0?a:gcd(b,a%b);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i==1)g=a[i];\n        else g=gcd(g,a[i]);\n    }\n    for(int i=1;i<=n;i++)a[i]/=g,len+=a[i];\n    if(g&1)\n    {\n        int cnt=0;\n        for(int i=1;i<=n;i++)if(a[i]&1)cnt++;\n        if(cnt!=1)\n        {\n            puts(\"0\");\n            for(int i=1;i<=n;i++)\n            for(int j=1;j<=g*a[i];j++)putchar('a'+i-1);\n        }\n        else\n        {\n            printf(\"%d\\n\",g);\n            int pos=0,tot=0;\n            for(int i=1;i<=n;i++)\n            {\n                if(a[i]&1)pos=i;\n                for(int j=1;j<=a[i]/2;j++)ans[++tot]='a'+i-1;\n            }\n            ans[++tot]='a'+pos-1;\n            for(int i=tot+1;i<=2*tot-1;i++)ans[i]=ans[2*tot-i];\n            for(int i=1;i<=g;i++)printf(\"%s\",ans+1);\n        }\n    }\n    else\n    {\n        int cnt=0;\n        for(int i=1;i<=n;i++)if(a[i]&1)cnt++;\n        if(cnt!=1)\n        {\n            printf(\"%d\\n\",g);\n            int tot=0;\n            for(int i=1;i<=n;i++)\n            {\n                for(int j=1;j<=a[i];j++)ans[++tot]='a'+i-1;\n            }\n            for(int i=tot+1;i<=2*tot;i++)ans[i]=ans[2*tot-i+1];\n            for(int i=1;i<=g/2;i++)printf(\"%s\",ans+1);\n        }\n        else\n        {\n            printf(\"%d\\n\",g);\n            int pos=0,tot=0;\n            for(int i=1;i<=n;i++)\n            {\n                if(a[i]&1)pos=i;\n                for(int j=1;j<=a[i]/2;j++)ans[++tot]='a'+i-1;\n            }\n            ans[++tot]='a'+pos-1;\n            for(int i=tot+1;i<=2*tot-1;i++)ans[i]=ans[2*tot-i];\n            for(int i=1;i<=g;i++)printf(\"%s\",ans+1);\n        }\n    }\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "math"], "dificulty": "2500", "interactive": false}