{
    "link": "https://codeforces.com//contest/975/problem/A",
    "problemId": "179939",
    "problem_idx": "A",
    "shortId": "975A",
    "contest_number": "975",
    "problem_submissions": {
        "E": [
            37816370,
            37813409,
            37822383,
            37823053,
            37822980,
            37827685
        ],
        "D": [
            37811765,
            37818256,
            37809031,
            37810818,
            37810958,
            37809945,
            37821284,
            37811538,
            37811831,
            37813423,
            37811960,
            37812411,
            37812713,
            37812337,
            37812042,
            37812735,
            37814476,
            37812168,
            37813847
        ],
        "C": [
            37806281,
            37806363,
            37804979,
            37805578,
            37804360,
            37804440,
            37821200,
            37821166,
            37821144,
            37821019,
            37820867,
            37820774,
            37806683,
            37806043,
            37805497,
            37803505,
            37807380,
            37806289,
            37807089,
            37807897,
            37808134,
            37806223,
            37805766,
            37803795
        ],
        "B": [
            37803296,
            37802840,
            37803779,
            37802570,
            37805983,
            37805016,
            37803559,
            37805291,
            37804701,
            37803620,
            37805350,
            37804764,
            37804751,
            37803055,
            37803333,
            37807375
        ],
        "A": [
            37801128,
            37800869,
            37800960,
            37801705,
            37801031,
            37801042,
            37802652,
            37801616,
            37801102,
            37801914,
            37802731,
            37801888,
            37801010,
            37801985,
            37803138,
            37801035,
            37801033,
            37805139
        ]
    },
    "name": "A. Aramic script",
    "statement": "In Aramic language words can only represent objects.Words in Aramic have\r\nspecial properties: A word is a if it does not contain the same letter\r\nmore than once. A and all its permutations represent the same object.\r\nThe x of a word y is the word that contains all letters that appear in y\r\nin a way that each letter appears once. For example, the of \"\", \"\", \"\"\r\nis \"\", the of \"\", \"\", \"\", \"\" is \"\". Any word in Aramic represents the\r\nsame object as its . You have an ancient script in Aramic. What is the\r\nnumber of mentioned in the script?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define fr(x, y, z) for(int x=y;x<z;x++)\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef pair<pll,ll> ppl;\n\nset<int> s;\n\nint main(){\n    int n ;\n    cin>>n;\n    fr(i,0,n){\n        string ss;\n        cin>>ss;\n        int aa=0;\n        for(auto c:ss){\n            aa|=(1<<(c-'a'));\n        }\n        s.insert(aa);\n    }\n    cout<<s.size()<<endl;\n    \n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Aramic script.json",
    "editorial_link": "https://codeforces.com//blog/entry/59202",
    "editorial": "One can easily notice that we only differentiate between words when\r\ndifferent letters exit, so one easy way to consider all the different\r\nwords that belong to the same root as one, is to map every word to a\r\nmask of 26 bits; that is, for example, if letter âbâ exits in the ith\r\nword then we set the second bit in the ith mask to one, eventually, we\r\ninsert all the masks in a set and the set size is the required answer.\r\n",
    "hint": []
}