{
    "link": "https://codeforces.com//contest/1478/problem/B",
    "problemId": "879390",
    "problem_idx": "B",
    "shortId": "1478B",
    "contest_number": "1478",
    "problem_submissions": {
        "F": [
            105745770,
            105755730,
            105740257,
            105759758,
            105734600,
            105755284,
            105756717,
            105766844,
            105793777,
            105757168,
            105755750,
            105751368,
            105774495,
            105749168,
            105760060
        ],
        "E": [
            105741982,
            105745927,
            105765147,
            105765706,
            105765965,
            105763865,
            105754042,
            105761626,
            105739939,
            105721165,
            105766403,
            105749463,
            105750984,
            105763896,
            105756596,
            105752745
        ],
        "D": [
            105701384,
            105722470,
            105753195,
            105738392,
            105746684,
            105720945,
            105734191,
            105749589,
            105715391,
            105733991,
            105751898,
            105743147,
            105712944,
            105730170,
            105705577,
            106043703,
            105747710,
            105704995,
            105736139
        ],
        "C": [
            105694901,
            105704831,
            105695273,
            105720027,
            105742447,
            105744248,
            105740268,
            105734450,
            105693735,
            105690240,
            105751278,
            105716768,
            105739420,
            105702365,
            105732790,
            105719496,
            105717686,
            105735493,
            105713455
        ],
        "B": [
            105686332,
            105685165,
            105684581,
            105689777,
            105689090,
            105695004,
            105684674,
            105704956,
            105686767,
            105697452,
            105714810,
            105690830,
            105686870,
            105681347,
            105686702,
            105690335,
            105688451,
            105684176,
            105689461
        ],
        "A": [
            105679437,
            105677748,
            105676437,
            105679439,
            105676338,
            105678358,
            105795468,
            105681333,
            105678297,
            105686569,
            105679854,
            105679642,
            105677865,
            105676184,
            105678986,
            105680204,
            105677192,
            105687845,
            105679361
        ]
    },
    "name": "B. Nezzar and Lucky Number",
    "statement": "Nezzarâ€™s favorite digit among 1,\r\nldots,9 is d. He calls a integer lucky if d occurs at least once in its\r\ndecimal representation. Given q integers a_1,a_2,\r\nldots,a_q, for each 1\r\nle i\r\nle q Nezzar would like to know if a_i can be equal to a sum of several\r\n(one or more) lucky numbers.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 10010\n\nint n, d;\n\nint main() {\n    int T;\n    scanf(\"%d\", &T);\n    while (T --) {\n\t\tscanf(\"%d %d\", &n, &d);\n\t\twhile (n --) {\n\t\t\tint a;\n\t\t\tscanf(\"%d\", &a);\n\t\t\tif (a % d == 0) puts(\"YES\");\n\t\t\telse {\n\t\t\t\tint r = a % d + d * 10;\n\t\t\t\tif (a >= r) puts(\"YES\");\n\t\t\t\telse {\n\t\t\t\t\tbool fg = false;\n\t\t\t\t\tfor (int i = 1; i <= 100; i ++) {\n\t\t\t\t\t\tint r = a - d * i;\n\t\t\t\t\t\tif (r >= 0 && r % 10 == 0) fg = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (fg) puts(\"YES\");\n\t\t\t\t\telse puts(\"NO\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Nezzar and Lucky Number.json",
    "editorial_link": "https://codeforces.com//blog/entry/87294",
    "editorial": "For any given d, We can observe the following: 10d to 10d + 9 contains d\r\nas one of its digit Let k = 10d + 9 be the upper bound of such range For\r\nevery number x > k, we can keep reducing x by d, x will eventually fall\r\ninto the range mentioned above, which contains d as digit. Therefore,\r\nfor numbers x > k, they are always achievable. For x\r\nleq k - 10, as k <= 109, we can run a standard knapsack\r\ndynamicprogramming solution, where dp[x] indicates if x is achievable.\r\ndp[x] is achievable, if and only if one of the following is true: x = 0\r\nFor some y < x, dp[y] is true and x - y contains d as digit Iterating\r\nfor every x, all dp[x] for x < k can be computed with O(k) per state (as\r\nwe only need to consider y < k.Besides dynamic programming solution,\r\nbrute force solutions with enough optimization should also pass the test\r\ncases easily.Time complexity: O((10d)^2) per test case.\r\n",
    "hint": []
}