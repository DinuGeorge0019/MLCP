{
    "link": "https://codeforces.com//contest/1582/problem/B",
    "problemId": "1156632",
    "problem_idx": "B",
    "shortId": "1582B",
    "contest_number": "1582",
    "problem_submissions": {
        "G": [
            133300654,
            132904411,
            132903819,
            132921500,
            132938189,
            132915561,
            132904925,
            132893999,
            132930384,
            132930246,
            132930119,
            132929885,
            132929830,
            132917984,
            132923122,
            132922486,
            132909943,
            132922580,
            132929375,
            132930555,
            133312799,
            132969396
        ],
        "F2": [
            132908314,
            132865018,
            132905309,
            132899324,
            132901682,
            132900235,
            132911727,
            132926934,
            132906558,
            132909549,
            132893391,
            132884523,
            132901241,
            132906554,
            132898256,
            133312622,
            132970055,
            132969976,
            132904321
        ],
        "F1": [
            132881252,
            132864382,
            132880627,
            132888291,
            132872964,
            132880051,
            132887180,
            132892561,
            132900410,
            132897751,
            132862757,
            132872739,
            132870584,
            132888250,
            132889092,
            132882038,
            132891013,
            132872187,
            132887941,
            133312616,
            132891504
        ],
        "E": [
            132874913,
            132878099,
            132874176,
            132880923,
            132882227,
            132876672,
            132871740,
            132883982,
            132905776,
            132893914,
            132871055,
            132859358,
            132881562,
            132870144,
            132885086,
            132894857,
            132869674,
            132887914,
            132877059,
            133312375,
            132888626
        ],
        "D": [
            132866716,
            132891541,
            132886280,
            132871648,
            132863103,
            132871610,
            132863993,
            132875189,
            132911684,
            132876113,
            132889182,
            132879862,
            132890109,
            132872530,
            132875475,
            132891337,
            132884986,
            132886500,
            132884112,
            133312126,
            132970973,
            132882901
        ],
        "C": [
            132859265,
            132871828,
            132860284,
            132861165,
            132856817,
            132935747,
            132866931,
            132863031,
            132863018,
            132893464,
            132893294,
            132866549,
            132861428,
            132858872,
            132861957,
            132863927,
            132861005,
            132863860,
            132868896,
            133312107,
            132858386
        ],
        "B": [
            132856790,
            132867123,
            132856747,
            132855505,
            132854485,
            132859085,
            132858770,
            132858595,
            132856173,
            132857637,
            132856186,
            132859468,
            132855951,
            132855099,
            132854810,
            132855351,
            132856357,
            132855765,
            132859435,
            133312040,
            132970544,
            132854847
        ],
        "A": [
            132855030,
            132855528,
            132854523,
            132892082,
            132854129,
            132904251,
            132854758,
            132854419,
            132906994,
            132854763,
            132856077,
            132854737,
            132984138,
            132854196,
            132859118,
            132854306,
            132855186,
            132865041,
            132857131,
            133311808,
            132970350,
            132854128
        ]
    },
    "name": "B. Luntik and Subsequences",
    "statement": "Luntik came out for a morning stroll and found an array a of length n.\r\nHe calculated the sum s of the elements of the array (s=\r\nsum_{i=1}^{n} a_i). Luntik calls a subsequence of the array a if the sum\r\nof the numbers in that subsequence is equal to s-1.Luntik really wants\r\nto know the number of subsequences of the array a. But he needs to come\r\nhome so he asks you to solve that problem!A sequence x is a subsequence\r\nof a sequence y if x can be obtained from y by deletion of several\r\n(possibly, zero or all) elements.\r\n",
    "solutions": [
        "#ifdef _MSC_VER\n#define _CRT_SECURE_NO_WARNINGS\n#endif\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nint main()\n{\n#ifdef _MSC_VER\n\tfreopen(\"b.in\", \"r\", stdin);\n#endif\n\tstd::ios::sync_with_stdio(false);\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tll c0 = 0;\n\t\tll c1 = 0;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tint val;\n\t\t\tcin >> val;\n\t\t\tif (val == 0) {\n\t\t\t\t++c0;\n\t\t\t} else if (val == 1) {\n\t\t\t\t++c1;\n\t\t\t}\n\t\t}\n\t\tll r = (c1 << c0);\n\t\tcout << r << endl;\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Luntik and Subsequences.json",
    "editorial_link": "https://codeforces.com//blog/entry/96267",
    "editorial": "It can be noticed that all subsequences with sum appear if we erase some\r\n-es from the array and also erase exactly one . We can independently\r\ncalculate the number of ways to erase some -es from the array (that way\r\nthe sum will remain the same), then calculate the number of ways to\r\nerase exactly one from the array (that way the sum will become equal to\r\n), and then multiply these two numbers. Therefore, the answer is equal\r\nto , where is the number of -es in the array, and is the number of -s.\r\n"
}