{
    "link": "https://codeforces.com//contest/779/problem/D",
    "problemId": "95638",
    "problem_idx": "D",
    "shortId": "779D",
    "contest_number": "779",
    "problem_submissions": {
        "E": [
            25041597,
            25042966,
            25042647,
            25042184,
            25041738,
            25044527,
            25046776,
            25043037,
            25043576,
            25044558,
            25045642,
            25044076,
            25043684,
            25042226,
            25043678,
            25045366,
            25044333
        ],
        "C": [
            25035763,
            25034520,
            25036373,
            25034120,
            25034894,
            25035381,
            25035813,
            25032607,
            25034344,
            25034774,
            25035579,
            25035162,
            25033556,
            25036921,
            25034938,
            25034865,
            25034643
        ],
        "B": [
            25034403,
            25033009,
            25035076,
            25032745,
            25033238,
            25033475,
            25034138,
            25036437,
            25032923,
            25032280,
            25033532,
            25033250,
            25032318,
            25036213,
            25033673,
            25033347,
            25032551
        ],
        "A": [
            25033465,
            25031856,
            25033923,
            25031374,
            25031707,
            25031479,
            25032790,
            25034086,
            25031239,
            25031289,
            25031285,
            25031689,
            25031337,
            25035671,
            25032432,
            25031702,
            25031272
        ],
        "D": [
            25032517,
            25037114,
            25032438,
            25036092,
            25036499,
            25037466,
            25043534,
            25038470,
            25037495,
            25037533,
            25041359,
            25039849,
            25037140,
            25038656,
            25037700,
            25037570,
            25037825
        ]
    },
    "name": "D. String Game",
    "statement": "Little Nastya has a hobby, she likes to remove some letters from word,\r\nto obtain another word. But it turns out to be pretty hard for her,\r\nbecause she is too young. Therefore, her brother Sergey always helps\r\nher.Sergey gives Nastya the word and wants to get the word out of it.\r\nNastya removes letters in a certain order (one after another, in this\r\norder strictly), which is specified by permutation of letters’ indices\r\nof the word : . We denote the length of word as . Note that after\r\nremoving one letter, the indices of other letters don’t change. For\r\nexample, if \"\" and then removals make the following sequence of words \"\"\r\n\"\" \"\" \"\" \"\" \"\" \"\".Sergey knows this permutation. His goal is to stop his\r\nsister at some point and continue removing by himself to get the word .\r\nSince Nastya likes this activity, Sergey wants to stop her as late as\r\npossible. Your task is to determine, how many letters Nastya can remove\r\nbefore she will be stopped by Sergey.It is guaranteed that the word can\r\nbe obtained by removing the letters from word .\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#include <set>\n#include <stdlib.h>\n#include <math.h>\n#include <string>\n#include <time.h>\n#include <string.h>\n#include <queue>\n#include <stack>\n#define sz size()\n#define pb push_back\nusing namespace std;\ntypedef long long int ll;\nll mod=1e9+7;\nll exp(ll t,ll x){if(x==0) return 1;if(x==1) return t;if(x%2==1) return (t*exp((t*t)%mod,x/2))%mod;if(x%2==0) return exp((t*t)%mod,x/2);} \nll gcd(ll x,ll y){return x%y==0?y:gcd(y,x%y);}\nll lcm(ll x,ll y){return x*(y/gcd(x,y));}\nll bsum(ll u,ll b){return u<b?u:bsum(u/b,b)+u%b;}\nll prival(ll u,ll p){int cn=0;while(u%p==0){cn++;u=u/p;}return cn;}\nbool isprime(ll x){for(ll i=2;i*i<=x;i++){if(x%i==0){return false;}}return true;}\nvoid YAY(void){cout<<\"YES\"<<endl;}\nvoid NAY(void){cout<<\"NO\"<<endl;}\nstring u, v;\nint p[222222];\nint mark[222222];\nint cntu[26];\nint cntv[26];\nint lef, rig, mid, best, n;\n\nbool isok(int x)\n{\n\tint i;\n\tfor(i=1 ; i<=x ; i++)\n\t{\n\t\tmark[p[i]-1]=1;\n\t}\n\tint cur=0;\n\tint whi=0;\n\twhile(cur<=u.size() && whi<=v.size())\n\t{\n\t\tif(mark[cur]==0 && u[cur]==v[whi])\n\t\t{\n\t\t\twhi++;\n\t\t}\n\t\tcur++;\n\t}\n\tfor(i=0 ; i<n ; i++)\n\t{\n\t\tmark[i]=0;\n\t}\n\tif(whi>v.size())\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nint main(void)\n{\n\tint i, j;\n\tcin>>u>>v;\n\tn=u.size();\n\tfor(i=1 ; i<=n ; i++)\n\t{\n\t\tscanf(\"%d\",&p[i]);\n\t}\n\tlef=0; rig=n;\n\twhile(lef<=rig)\n\t{\n\t\tmid=(lef+rig)/2;\n\t\tif(isok(mid))\n\t\t{\n\t\t\tbest=mid;\n\t\t\tlef=mid+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\trig=mid-1;\n\t\t}\n\t}\n\tcout<<best;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "strings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. String Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/50724",
    "editorial": "In this problem we have to find the last moment of time, when t has p as a subsequence.\n\nIf at some moment of time p is a subsequence of t then at any moment before, p is also its subsequence. That's why the solution is binary search for the number of moves, Nastya makes. For binary search for a moment of time m we need to check, if p is a subsequence of t. We remove a1,?a2,?... am and check if p is a subsequence greedily.",
    "hint": []
}