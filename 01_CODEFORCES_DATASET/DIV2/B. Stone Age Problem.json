{
    "link": "https://codeforces.com//contest/1679/problem/B",
    "problemId": "1399037",
    "problem_idx": "B",
    "shortId": "1679B",
    "contest_number": "1679",
    "problem_submissions": {
        "E": [
            157180775,
            157191404,
            157182377,
            157177036,
            157184415,
            157176870,
            157175927,
            157179358,
            157179949,
            157181138,
            157181082,
            157188651,
            158765685,
            157182719,
            157183341,
            157204752,
            157188040,
            157183760,
            157190456,
            157188869
        ],
        "F": [
            157169392,
            157164382,
            157193064,
            157199663,
            157199138,
            157186552,
            157273261,
            157180874,
            158765715,
            157250679,
            157197475,
            157509965
        ],
        "A": [
            157160334,
            157139962,
            157137818,
            157155828,
            157137804,
            157138382,
            157140445,
            157138960,
            157138642,
            157138794,
            157144480,
            157142439,
            162719211,
            158765634,
            157138332,
            157138320,
            157139854,
            157140729,
            157138982,
            157137953,
            157138211
        ],
        "B": [
            157157060,
            157145020,
            157140369,
            157158458,
            157140367,
            157140216,
            157144197,
            157146569,
            157143365,
            157142315,
            157148129,
            157146141,
            157198440,
            158765655,
            157143823,
            157143623,
            157144426,
            157145542,
            157143138,
            157142676,
            157142878
        ],
        "C": [
            157154751,
            157170214,
            157147368,
            157161435,
            157149801,
            157145630,
            157152376,
            157151562,
            157149876,
            157147868,
            157153893,
            157150787,
            157196725,
            158765679,
            157151559,
            157154130,
            157157802,
            157152042,
            157149676,
            157150426,
            157148575
        ],
        "D": [
            157148745,
            157180439,
            157159044,
            157144096,
            157159383,
            157154423,
            157160087,
            157161413,
            157158556,
            157158664,
            157164328,
            157159039,
            157192557,
            158765668,
            157159304,
            157162810,
            157169333,
            157162480,
            157162127,
            157163382,
            157167439
        ]
    },
    "name": "B. Stone Age Problem",
    "statement": "Once upon a time Mike and Mike decided to come up with an outstanding\r\nproblem for some stage of ROI (rare olympiad in informatics). One of\r\nthem came up with a problem prototype but another stole the idea and\r\nproposed that problem for another stage of the same olympiad. Since then\r\nthe first Mike has been waiting for an opportunity to propose the\r\noriginal idea for some other contest... Mike waited until this\r\nmoment!You are given an array a of n integers. You are also given q\r\nqueries of two types: Replace i-th element in the array with integer x.\r\nReplace each element in the array with integer x. After performing each\r\nquery you have to calculate the sum of all elements in the array.\r\n",
    "solutions": [
        "#include<algorithm>\n#include<iostream>\n#include<stdio.h>\n#include<vector>\n#include<queue>\n#include<map>\nusing namespace std;\nconst int maxn=500005;\nint n,m,T,stp;\nint a[maxn],vis[maxn];\nlong long ans;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]),ans+=a[i];\n\tint lst=0;\n\twhile(m--){\n\t\tint t,x,y;\n\t\tscanf(\"%d%d\",&t,&x);\n\t\tif(t==1){\n\t\t\tscanf(\"%d\",&y);\n\t\t\tif(vis[x]!=stp)\n\t\t\t\tans+=y-lst;\n\t\t\telse ans+=y-a[x];\n\t\t\tvis[x]=stp,a[x]=y;\n\t\t}\n\t\tif(t==2)\n\t\t\tstp++,ans=1ll*x*n,lst=x;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Stone Age Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/102859",
    "editorial": "As we want to perform queries fast, we will store some variables:\r\ncurrent sum of all elements in the array , index of the last query of\r\nthe second type and its value . For each element of the array we will\r\nalso store index of the last query of the first type that changed this\r\nelement and its value .Now letâs answer the queries. If we are going to\r\nperform a query of the first type, we have to know, what the number\r\nequals now. If , then now, and otherwise. Now letâs subtract from the\r\nsum, change and , and add the new value to the sum.If we are going to\r\nperform a query of the second type, we have to update values and . The\r\nnew sum of all elements of the array is .Time complexity: .\r\n",
    "hint": []
}