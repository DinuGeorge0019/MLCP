{"link": "https://codeforces.com//contest/844/problem/C", "problemId": "119858", "problem_idx": "C", "shortId": "844C", "contest_number": "844", "problem_submissions": {"E": [29756968, 29759454], "D": [29751901, 29749751, 29752230, 29744882, 29754410, 29749697, 29747401, 29753891, 29758770, 29748328, 29748181, 29749142, 29750857, 29750829, 29761893, 29754092, 29743329, 29750981, 29749760], "C": [29741295, 29740844, 29742968, 29741006, 29747704, 29741133, 29741950, 29743007, 29740184, 29743433, 29743333, 29743161, 29739699, 29742503, 29743461, 29743085, 29739885, 29746382, 29743128], "B": [29738891, 29738862, 29738821, 29739393, 29740604, 29739250, 29739828, 29740063, 29740342, 29741491, 29739840, 29740823, 29739918, 29740419, 29741146, 29738493], "A": [29736508, 31176684, 29736048, 29736305, 29736555, 29736534, 29736883, 29737174, 29736466, 29737056, 29736249, 29736083, 29736171, 29736915, 29737290, 29736045]}, "name": "C. Sorting by Subsequences", "statement": "You are given a sequence consisting of integers. It is required to split\r\nthis sequence into the number of subsequences such that after sorting\r\nintegers in each of them in increasing order, the total sequence also\r\nwill be sorted in increasing order.Sorting integers in a subsequence is\r\na process such that the numbers included in a subsequence are ordered in\r\nincreasing order, and the numbers which are not included in a\r\nsubsequence don\u2019t change their places.Every element of the sequence must\r\nappear in exactly one subsequence.\r\n", "solutions": ["#include<cstdio>\n#include<map>\n#include<vector>\nusing namespace std;\nint n, a[100000], sz, ck[100000];\nmap<int,int > idx;\nvector<int> res[100000];\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) scanf(\"%d\", a + i), idx[a[i]] = 0;\n    int c = 0;\n    for (auto &it : idx) it.second = c++;\n    for (int i = 0; i < n; i++) if (!ck[i]) {\n        ck[i] = 1;\n        res[sz].push_back(i);\n        for (int j = idx[a[i]]; j != i; j = idx[a[j]]) res[sz].push_back(j), ck[j] = 1;\n        sz++;\n    }\n    printf(\"%d\\n\", sz);\n    for (int i = 0; i < sz; i++) {\n        printf(\"%d \", res[i].size());\n        for (auto it : res[i]) printf(\"%d \", it+1);\n        puts(\"\");\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["dfs and similar", "math"], "dificulty": "1400", "interactive": false}