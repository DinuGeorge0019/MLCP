{"link": "https://codeforces.com//contest/1087/problem/D", "problemId": "273648", "problem_idx": "D", "shortId": "1087D", "contest_number": "1087", "problem_submissions": {"E": [58252522, 47419404, 47425055, 47427281, 47427199, 47427772, 47427175, 47429424, 47427691, 47428203, 47426678, 47429553, 47424066, 47442342, 47431388], "F": [47420077, 47423866, 47885139, 47468746, 47429059, 47443089], "D": [47418729, 47408054, 47412096, 47414267, 47413772, 47414393, 47411787, 47412026, 47410837, 47416228, 47416942, 47404060, 47424226, 47415168, 47411121, 47421101, 47407066, 47410268, 47411462, 47409719], "C": [47405054, 47411233, 47407822, 47412155, 47406359, 47410875, 47413841, 47406249, 47409638, 47412893, 47414989, 47429784, 47418255, 47431334, 47431242, 47407433, 47430615, 47412255, 47405671, 47407818, 47406818], "B": [47401231, 47412385, 47401723, 47403755, 47401975, 47403962, 47406414, 47402530, 47402488, 47401578, 47406978, 47400393, 47407454, 47402895, 47400789, 47403406, 47402600, 47400687, 47402493, 47402234], "A": [47400159, 47405287, 47400196, 47400342, 47400796, 47401502, 47401673, 47400758, 47400490, 47400180, 47403017, 47409819, 47408382, 47400648, 47400053, 47400839, 47400496, 47400902, 47400447, 47400696]}, "name": "D. Minimum Diameter Tree", "statement": "You are given a tree (an undirected connected graph without cycles) and\r\nan integer s.Vanya wants to put weights on all edges of the tree so that\r\nall weights are non-negative real numbers and their sum is s. At the\r\nsame time, he wants to make the diameter of the tree as small as\r\npossible.Let\u2019s define the diameter of a weighed tree as the maximum sum\r\nof the weights of the edges lying on the path between two some vertices\r\nof the tree. In other words, the diameter of a weighed tree is the\r\nlength of the longest simple path in the tree, where length of a path is\r\nequal to the sum of weights over all edges in the path.Find the minimum\r\npossible diameter that Vanya can get.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define ff first\n#define ss second\n#define all(X) begin(X), end(X)\n\nvector<int>v;\nsigned main(){\n\tint n,s;\n\tcin >> n >> s;\n\tv.resize(n);\n\tfor(int i = 1; i < n; i++){\n\t\tint a,b;\n\t\tcin >> a >> b;\n\t\ta--;b--;\n\t\tv[a]++;\n\t\tv[b]++;\n\t}\n\tint ans = 0;\n\tfor(auto i:v)if(i == 1)ans++;\n\tcout  << setprecision(20) << fixed << (long double)s/ans*2 << endl;\n\t\n} \n"], "input": "", "output": "", "tags": ["implementation", "trees"], "dificulty": "1700", "interactive": false}