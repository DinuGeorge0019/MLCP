{
    "link": "https://codeforces.com//contest/320/problem/C",
    "problemId": "3252",
    "problem_idx": "C",
    "shortId": "320C",
    "contest_number": "320",
    "problem_submissions": {
        "E": [
            3947787,
            3947991,
            3950460,
            3950423,
            3950804,
            3966579,
            3964196,
            3952271
        ],
        "D": [
            3945386,
            3948801,
            3947835,
            3948803,
            3948306,
            3946600,
            3946788,
            3946323,
            3947962,
            3948204,
            3949156,
            3949185,
            3948762,
            3950341,
            3948763,
            3948830,
            3949570,
            3949588,
            3948736
        ],
        "C": [
            3944304,
            3946570,
            3945118,
            3946127,
            3947195,
            3945029,
            3945376,
            3944923,
            3946219,
            3946207,
            3946206,
            3946330,
            3946413,
            3944056,
            3946806,
            3947161,
            3946298,
            3946947
        ],
        "B": [
            3943587,
            3943527,
            3944238,
            3945074,
            3946102,
            3943469,
            3943701,
            3946193,
            3944211,
            3944838,
            3944825,
            3944402,
            3943607,
            3945327,
            3945105,
            3945231,
            3944216,
            3944488,
            3945725
        ],
        "A": [
            3942664,
            3942547,
            3943263,
            3943194,
            3942602,
            3942567,
            3942605,
            3944414,
            3942943,
            3942965,
            3942610,
            3942731,
            3942604,
            3944341,
            3942932,
            3943709,
            3942746,
            3943368
        ]
    },
    "name": "C. Malek Dance Club",
    "statement": "As a tradition, every year before IOI all the members of Natalia Fan\r\nClub are invited to Malek Dance Club to have a fun night together. Malek\r\nDance Club has members and coincidentally Natalia Fan Club also has\r\nmembers. Each member of MDC is assigned a unique id from to . The same\r\nholds for each member of NFC.One of the parts of this tradition is one\r\nby one dance, where each member of MDC dances with a member of NFC. A\r\ndance pair is a pair of numbers such that member from MDC dances with\r\nmember from NFC.The complexity of a pairs\u2019 assignment is the number of\r\npairs of dancing pairs and such that and .You are given a binary number\r\nof length named . We know that member from MDC dances with member from\r\nNFC. Your task is to calculate the complexity of this assignment modulo\r\n.Expression denotes applying XOR to numbers and . This operation exists\r\nin all modern programming languages, for example, in and it denotes as ,\r\nin .\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<fstream>\n#include<map>\n#include<ctime>\n#include<set>\n#include<queue>\n#include<cmath>\n#include<vector>\n#include<bitset>\n#include<functional>\n#define x first\n#define y second\n#define mp make_pair\n#define pb push_back\n#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))\n#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))\nusing namespace std;\n\ntypedef long long LL;\ntypedef double ld;\n\nconst int MAX=1000+10;\nconst int Mod=(int)1e9+7;\n\nint n;\nchar a[MAX];\nint p[MAX];\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n\t//i^x\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0538\ufffd\ufffd\ufffd\n\tscanf(\"%s\",a+1);\n\tn=strlen(a+1);\n\tp[0]=1;\n\tint i;\n\tREP(i,1,n)\n\t\tp[i]=p[i-1]*2%Mod;\n\tint ans=0;\n\tREP(i,1,n)\n\t{\n\t\tint id=a[i]-'0';\n\t\tif(id)\n\t\t\tans=( ans+(LL)p[n-i]*p[n-i]%Mod*p[i-1] )%Mod;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Malek Dance Club.json",
    "editorial_link": "https://codeforces.com//blog/entry/8166",
    "editorial": "Solving this problem was easy when you modeled the assignment with two sets of points numbered from 0 to 2n?-?1 (inclusive) paired with 2n line segments. Each line segment corresponds to a dance pair. And each pair of intersecting lines increase the complexity by one.\n\nImagine you now the solution for binary string x. Now we want to calculate the answer for 1x and 0x easily. Look at the figure below:\n\n \n\nThe figure shows what happens in a simple case. Whenever you append 0 before x the same structure appears twice in the result. But whenever you append 1 before x the same structure appears twice but the first half of points in right column are swapped with the second half. This increases the number of intersections by size of first half times size of the second half.\n\nSo if x has length n and f(x) is the complexity of the assignment then we have:\n\nf(0x)?=?2f(x)\nf(1x)?=?2f(x)?+?22n\nAn interesting fact is that f(x) is equal to x2n?-?1."
}