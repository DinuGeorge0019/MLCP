{"link": "https://codeforces.com//contest/181/problem/D", "problemId": "1239", "problem_idx": "D", "shortId": "181D", "contest_number": "181", "problem_submissions": {"E": [1590113, 1590937, 1590679, 1590013, 1589120, 1589907, 1592216, 1592384, 1590755], "D": [1589155, 1588722, 1590996, 1588173, 1588742, 1591468, 1589039, 1589783, 1589665, 1589895, 1589654, 1589997, 1590444, 1590515], "C": [1587940, 1589199, 1588760, 1587377, 1587624, 1588135, 1587859, 1588331, 1587782, 1587761, 1587961, 1587963, 1588400, 1588067, 1588525, 1588209, 1588624], "B": [1586840, 1586866, 1587707, 1586377, 1586530, 1586858, 1586846, 1587063, 1586738, 1586718, 1586968, 1587093, 1586831, 1587067, 1587085, 1587398, 1587045], "A": [1586352, 1587002, 1586481, 1586332, 1586340, 1586462, 1586515, 1586430, 1586388, 1586402, 1586351, 1586368, 1586685, 1586466, 1586482, 1586638, 1586389]}, "name": "D. Word Cut", "statement": "Let\u2019s consider one interesting word game. In this game you should\r\ntransform one word into another through special operations. Let\u2019s say we\r\nhave word , let\u2019s split this word into two non-empty parts and so, that\r\n. A operation is transforming word into word . For example, a operation\r\ncan transform word \"\" into word \"\".You are given two words and . Count\r\nin how many ways we can transform word into word , if we apply exactly\r\noperations consecutively to word . Two ways are considered different if\r\nthe sequences of applied operations differ. Two operation sequences are\r\ndifferent if exists such number (), that in the -th operation of the\r\nfirst sequence the word splits into parts and , in the -th operation of\r\nthe second sequence the word splits into parts and , and additionally\r\nholds.\r\n", "solutions": ["#include<cstdio>s\n#include<vector>\n#include<cmath>\n#include<algorithm>\n\n#define pb push_back\n\ntypedef unsigned int uint;\ntypedef long long i64;\ntypedef unsigned long long ui64;\n\nconst int intINF=999999999;\nconst i64 i64INF=99999999999999999ll;\nconst double doubleINF=9999999999.;\n\nusing namespace std;\n\nint al,bl;\nchar A[1111],B[1111];\ni64 res=0,md=1000000007;\ni64 F[3][100011];\n\nbool eq(int p){\n\tbool eqq=true;\n\tfor(int i=0;i<al;i++)\n\t\tif(A[(p+i)%al]!=B[i]) eqq=false;\n\treturn eqq;\n}\n\nint main(){\n\tchar c;\n\twhile(scanf(\"%c\",&c),c!='\\n') A[al++]=c;\n\twhile(scanf(\"%c\",&c),c!='\\n') B[bl++]=c;\n\tint k,cc;\n\tscanf(\"%d\",&k);\n\tF[0][0]=1;\n\tF[1][0]=0;\n\tF[2][0]=1;\n\tfor(int i=1;i<=k;i++){\n\t\tF[0][i]=F[2][i-1]-F[0][i-1]; if(F[0][i]<0) F[0][i]+=md;\n\t\tF[1][i]=F[2][i-1]-F[1][i-1]; if(F[1][i]<0) F[1][i]+=md;\n\t\tF[2][i]=(F[0][i]+(al-1)*F[1][i])%md;\n\t}\n\tfor(int i=0;i<al;i++)\n\t\tif(eq(i)){\n\t\t\tif(i==0) cc=0;\n\t\t\telse cc=1;\n\t\t\tres+=F[cc][k];\n\t\t\tres%=md;\n\t\t}\n\tprintf(\"%I64d\\n\",res);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "1700", "interactive": false}