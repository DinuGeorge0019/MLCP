{"link": "https://codeforces.com//contest/1436/problem/D", "problemId": "772599", "problem_idx": "D", "shortId": "1436D", "contest_number": "1436", "problem_submissions": {"D": [244333966, 96574214, 96571456, 96558532, 96571048, 96571994, 96563376, 96571151, 96576643, 96574299, 96567342, 96567085, 96573866, 96576086, 96577575, 96562284, 96570394, 96578043, 96575753], "F": [240918218, 96566504, 96572912, 96753174], "E": [96592979, 96584648, 96574218, 96584890, 96586188, 96585819, 96587447, 96587153, 96585609, 96587917, 96588463, 96591240, 96584846, 96586193, 96587617, 96587454, 96590850, 96588483, 96583371], "C": [96570072, 96563215, 96588737, 96565809, 96564790, 96575488, 96583604, 96564799, 96558226, 96553282, 96572718, 96560930, 96568810, 96563409, 96560716, 96573151, 96560791, 96559882, 96576285], "B": [96563722, 96545744, 96546426, 96547973, 96548924, 96541502, 96573998, 96558603, 96548113, 96541622, 96546010, 96548513, 96563296, 96545652, 96541454, 96544953, 96544692, 96543086, 96559069], "A": [96538154, 96541957, 96536078, 96536651, 96535505, 96535718, 96541514, 96539181, 96535535, 96535532, 96537279, 96538197, 96541879, 96569353, 96561847, 96535411, 96538782, 96535867, 96538910]}, "name": "D. Bandit in a City", "statement": "Bandits appeared in the city! One of them is trying to catch as many\r\ncitizens as he can.The city consists of n squares connected by n-1 roads\r\nin such a way that it is possible to reach any square from any other\r\nsquare. The square number 1 is the main square.After Sunday walk all the\r\nroads were changed to roads in such a way that it is possible to reach\r\nany square from the main square.At the moment when the bandit appeared\r\non the main square there were a_i citizens on the i-th square. Now the\r\nfollowing process will begin. First, each citizen that is currently on a\r\nsquare with some outgoing one-way roads chooses one of such roads and\r\nmoves along it to another square. Then the bandit chooses one of the\r\none-way roads outgoing from the square he is located and moves along it.\r\nThe process is repeated until the bandit is located on a square with no\r\noutgoing roads. The bandit catches all the citizens on that square.The\r\nbandit wants to catch as many citizens as possible; the citizens want to\r\nminimize the number of caught people. The bandit and the citizens know\r\npositions of all citizens at any time, the citizens can cooperate. If\r\nboth sides act optimally, how many citizens will be caught?\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\nconst int INF = 2e18;\n\nsigned main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\n\tint n; cin >> n;\n\tvector<vector<int>> adj(n + 1);\n\tfor (int i = 2; i <= n; i ++) {\n\t\tint x; cin >> x;\n\t\tadj[x].push_back(i);\n\t}\n\tvector<int> a(n + 1);\n\tfor (int i = 1; i <= n; i ++) {\n\t\tcin >> a[i];\n\t}\n\tvector<int> cnt(n + 1), ans(n + 1), sum(n + 1);\n\tfunction<int(int, int)> ceil_calc = [&](int x, int d) {\n\t\tint ans = x / d;\n\t\tif (x % d) ans ++;\n\t\treturn ans;\n\t};\n\tfunction<void(int, int)> dfs = [&](int u, int p) {\n\t\tif (adj[u].size() == 0) {\n\t\t\tcnt[u] = 1; ans[u] = a[u]; sum[u] = a[u];\n\t\t\treturn;\n\t\t}\n\t\tsum[u] = a[u];\n\t\tint mn = -1, mn_val = INF;\n\t\tint mx_ans = -1;\n\t\tfor (int v : adj[u]) if (v != p) {\n\t\t\tdfs(v, u);\n\t\t\tcnt[u] += cnt[v];\n\t\t\tsum[u] += sum[v];\n\t\t\tint tmp = ceil_calc(sum[v] + a[u], cnt[v]);\n\t\t\tif (tmp < mn_val) {\n\t\t\t\tmn = v; mn_val = tmp;\n\t\t\t}\n\t\t\tmx_ans = max(mx_ans, ans[v]);\n\t\t\tif (mx_ans < mn_val) {\n\t\t\t\tans[u] = max(mx_ans, ceil_calc(sum[u], cnt[u]));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans[u] = mx_ans;\n\t\t\t}\n\t\t}\n\t};\n\tdfs(1, 0);\n\tcout << ans[1] << \"\\n\";\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "dfs and similar", "graphs", "greedy", "trees"], "dificulty": "1900", "interactive": false}