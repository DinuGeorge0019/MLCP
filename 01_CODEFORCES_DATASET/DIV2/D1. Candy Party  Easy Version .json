{"link": "https://codeforces.com//contest/1869/problem/D1", "problemId": "2184994", "problem_idx": "D1", "shortId": "1869D1", "contest_number": "1869", "problem_submissions": {"E": [222790733, 222755919, 223014703, 222844888, 222822436, 222820168], "D2": [222751076, 222765748, 222762229, 222767685, 222770713, 222771349, 222774390, 222781618, 222778821, 222788639, 222773236, 222775336, 222775900, 222778257, 222775220, 222773627, 222771492], "D1": [222743411, 222768273, 222754309, 222754872, 222757370, 222757211, 222762465, 222761473, 222755833, 222757091, 222752420, 222764925, 222765023, 222761868, 222761450, 222761828, 222765878, 222760854], "C": [222734213, 222799024, 222739072, 222743933, 222748797, 222742198, 222748357, 222740791, 222743470, 222743624, 222737636, 222744668, 222749662, 222742346, 222741675, 222752222, 222753724, 222751049], "B": [222728831, 222759638, 222728679, 222733793, 222732869, 222730403, 222734827, 222731660, 222733775, 222732224, 222728510, 222735540, 222734578, 222733639, 222729850, 222736886, 222733662, 222738397], "A": [222725390, 222757999, 222725599, 222726282, 222727750, 222725856, 222726824, 222727514, 222730110, 222726868, 222725449, 222728462, 222727639, 222725642, 222725871, 222727421, 222725878, 222731354], "F": [223418170]}, "name": "D1. Candy Party  Easy Version ", "statement": "After Zhongkao examination, Daniel and his friends are going to have a\r\nparty. Everyone will come with some candies.There will be n people at\r\nthe party. Initially, the i-th person has a_i candies. During the party,\r\nthey will swap their candies. To do this, they will line up and everyone\r\nwill do the following : Choose an integer p (1\r\nle p\r\nle n) and a integer x, then give his 2^{x} candies to the p-th person.\r\nNote that one give more candies than currently he has (he might receive\r\ncandies from someone else before) and he give candies to himself. Daniel\r\nlikes fairness, so he will be happy if and only if everyone receives\r\ncandies from . Meanwhile, his friend Tom likes average, so he will be\r\nhappy if and only if all the people have the same number of candies\r\nafter all swaps.Determine whether there exists a way to swap candies, so\r\nthat both Daniel and Tom will be happy after the swaps.\r\n", "solutions": ["// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\n#include <bits/stdc++.h>\n#define int long long\n#define i64 long long\n#define pii pair <int, int> \nusing namespace std;\ninline int read(void) {\n    int x=0,sgn=1; char ch=getchar();\n    while(ch<48||57<ch) {if(ch==45)sgn=0;ch=getchar();}\n    while(47<ch&&ch<58) {x=x*10+ch-48;   ch=getchar();}\n    return sgn? x:-x;\n}\nvoid write(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\n#define lowbit(x) (x&(-x))\nint n,sum,avg;\nint a[200005];\nmap <int,int> cnt;\ninline void work() {\n    n=read(); cnt.clear(); sum=0;\n    for(int i=1; i<=n; ++i) sum+=(a[i]=read());\n    if(sum%n) return puts(\"No\"),void();\n    avg=sum/n;\n    for(int i=1; i<=n; ++i) {\n        int del=abs(a[i]-avg);\n        int cur=del+lowbit(del);\n        if(lowbit(cur)!=cur) return puts(\"No\"),void();\n        if(a[i]<avg) cnt[cur]++,cnt[lowbit(del)]--;\n        else cnt[lowbit(del)]++,cnt[cur]--;\n    }\n    for(auto x : cnt) if(x.second!=0) return puts(\"No\"),void();\n    return puts(\"Yes\"),void();\n}\nsigned main() {\n    int T=read();\n    while(T--) work();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["bitmasks", "constructive algorithms", "graphs", "implementation", "math"], "dificulty": "1700", "interactive": false}