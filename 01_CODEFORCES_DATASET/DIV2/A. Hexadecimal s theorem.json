{"link": "https://codeforces.com//contest/199/problem/A", "problemId": "1440", "problem_idx": "A", "shortId": "199A", "contest_number": "199", "problem_submissions": {"D": [1818954, 1818165, 1818074, 1820230, 1819530, 1820120, 1819613, 1818687, 1816897, 1817833, 1815879, 1819535, 1817832, 1818518], "C": [1816982, 1818889, 1819640, 1816274, 1817922, 1817671, 1818320, 1817018, 1815591, 1815257, 1817732, 1818838, 1816704, 1816395], "B": [1815699, 1817221, 1816916, 1817964, 1817529, 1816670, 1816839, 1819459, 1818170], "A": [1814223, 1813972, 1815118, 1813946, 1814177, 1814028, 1814090, 1814045, 1813986, 1813950, 1816507, 1814316, 1814225, 1813995]}, "name": "A. Hexadecimal s theorem", "statement": "Recently, a chaotic virus Hexadecimal advanced a new theorem which will\r\nshake the Universe. She thinks that each Fibonacci number can be\r\nrepresented as sum of three not necessary different Fibonacci\r\nnumbers.Let\u2019s remember how Fibonacci numbers can be calculated. , , and\r\nall the next numbers are .So, Fibonacci numbers make a sequence of\r\nnumbers: , , , , , , , , ...If you haven\u2019t run away from the PC in fear,\r\nyou have to help the virus. Your task is to divide given Fibonacci\r\nnumber by three not necessary different Fibonacci numbers or say that it\r\nis impossible.\r\n", "solutions": ["#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main(void){\n    long long n;\n    cin >> n;\n    vector<long long> v;\n    v.push_back(0);\n    v.push_back(1);\n    int l = 2;\n    while (v[l-1] + v[l-2] <= n) {\n        v.push_back(v[l-1] + v[l-2]);\n        ++l;\n    }\n    for (int i = 0; i < l; ++i) {\n        for (int j = 0; j <= i; ++j) {\n            for (int k = 0; k <= j; ++k) {\n                if (v[i] + v[j] + v[k] == n) {\n                    cout << v[i] << ' ' << v[j] << ' ' << v[k] << endl;\n                    return 0;\n                }\n            }\n        }\n    }\n\n    cout << \"I'm too stupid to solve this problem\\n\";\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "dificulty": "900", "interactive": false}