{
    "link": "https://codeforces.com//contest/1195/problem/B",
    "problemId": "373877",
    "problem_idx": "B",
    "shortId": "1195B",
    "contest_number": "1195",
    "problem_submissions": {
        "F": [
            57231940,
            57228583,
            57230665,
            57230760,
            57233707,
            57236452,
            57231972,
            57234436,
            57234600,
            57238063,
            57234775,
            57310298,
            57228874,
            57290272,
            57225125
        ],
        "E": [
            57221608,
            57223793,
            57222513,
            57225684,
            57222906,
            57215919,
            57226202,
            57226594,
            57228678,
            57225929,
            57227306,
            57224920,
            57217658,
            57221326,
            57221813,
            57226168,
            57222930,
            57258569,
            57224143
        ],
        "D1": [
            57217173,
            57217670,
            57213566,
            57216495,
            57217668,
            57218460,
            57220879,
            57217890,
            57215569,
            57210215,
            57222516,
            57213030,
            57213769,
            57209778,
            57215844,
            57218863,
            57212403,
            57215924,
            57215516,
            57217529
        ],
        "D2": [
            57216895,
            57217496,
            57213368,
            57216364,
            57217535,
            57229402,
            57220576,
            57217862,
            57215401,
            57216742,
            57222653,
            57217606,
            57213863,
            57214793,
            57215958,
            57218634,
            57215884,
            57216070,
            57229811,
            57216866
        ],
        "C": [
            57208411,
            57206363,
            57208350,
            57208286,
            57212089,
            57204975,
            57209742,
            57209624,
            57207426,
            57206667,
            57209966,
            57209554,
            57208702,
            57205876,
            57208547,
            57209651,
            57208031,
            57210123,
            57210767,
            57209324
        ],
        "B": [
            57206484,
            57204728,
            57206113,
            57205986,
            57206681,
            57203895,
            57206510,
            57205624,
            57205603,
            57204561,
            57207235,
            57206451,
            57206143,
            57204517,
            57206504,
            57207159,
            57205738,
            57206747,
            57207265
        ],
        "A": [
            57203812,
            57203699,
            57205723,
            57203885,
            57204288,
            57203645,
            57204262,
            57204010,
            57204256,
            57203704,
            57203968,
            57204725,
            57203853,
            57203719,
            57204238,
            57204466,
            57203857,
            57203680,
            57204939,
            57203939
        ]
    },
    "name": "B. Sport Mafia",
    "statement": "Each evening after the dinner the SIS\u2019s students gather together to play\r\nthe game of Sport Mafia. For the tournament, Alya puts candies into the\r\nbox, which will serve as a prize for a winner. To do that, she performs\r\nn actions. The first action performed is to put a single candy into the\r\nbox. For each of the remaining moves she can choose from two options:\r\nthe first option, in case the box contains at least one candy, is to\r\ntake . This way the number of candies in the box decreased by 1; the\r\nsecond option is to put candies in the box. In this case, Alya will put\r\n1 more candy, than she put in the previous time. Thus, if the box is\r\nempty, then it can only use the second option.For example, one possible\r\nsequence of Alya\u2019s actions look as follows: put one candy into the box;\r\nput two candies into the box; eat one candy from the box; eat one candy\r\nfrom the box; put three candies into the box; eat one candy from the\r\nbox; put four candies into the box; eat one candy from the box; put five\r\ncandies into the box; This way she will perform 9 actions, the number of\r\ncandies at the end will be 11, while Alya will eat 4 candies in\r\ntotal.You know the total number of actions n and the number of candies\r\nat the end k. You need to find the total number of sweets Alya ate. That\r\nis the number of moves of the first option. It\u2019s guaranteed, that for\r\nthe given n and k the answer always exists.Please note, that during an\r\naction of the first option, Alya takes out and eats exactly one candy.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\nint main() {\n    LL n, k;\n    cin >> n >> k;\n    LL x = (n + k) * 2;\n    LL d = round(sqrt(9 + 4 * x));\n    cout << n-(d-3)/2 << endl;    \n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "brute force",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sport Mafia.json",
    "editorial_link": "https://codeforces.com/blog/entry/68471",
    "editorial": "In fact, we need to solve the following equation: and when we will find\r\nwe need to print as the answer. is the number of candies Alya will put\r\ninto the box with turns (sum of arithmetic progression). This equation\r\ncan be solved mathematically. The only problem is getting the square\r\nroot, it can be avoided with binary search or taking square root in\r\nnon-integer numbers and checking some amount of integers in small range\r\nnearby the obtained root. The other solution is the binary search by .\r\n"
}