{
    "link": "https://codeforces.com//contest/1937/problem/A",
    "problemId": "2503239",
    "problem_idx": "A",
    "shortId": "1937A",
    "contest_number": "1937",
    "problem_submissions": {
        "E": [
            250576191,
            250576177,
            248956893,
            248968788,
            248957297,
            248966672,
            249441680,
            249396118,
            248946403,
            248968676,
            250133778
        ],
        "D": [
            248945664,
            248934669,
            248940205,
            248942769,
            248942389,
            248945370,
            250100307,
            248949877,
            248955428,
            248958358,
            248955920,
            248959000,
            248953793,
            248954441,
            248955304,
            248954744,
            248950479,
            248956622
        ],
        "C": [
            248925723,
            248918003,
            248945269,
            248925093,
            248927475,
            248916202,
            248925097,
            248924482,
            248928585,
            248926397,
            248923906,
            248930862,
            248927119,
            248930899,
            248930534,
            249020336,
            248929752,
            248931403,
            248935918,
            248933256
        ],
        "B": [
            248910702,
            248909576,
            248913624,
            248915352,
            248915231,
            248904510,
            248914972,
            248915980,
            248915024,
            248914144,
            248910066,
            248915252,
            248914074,
            248914693,
            248914679,
            249015802,
            248915248,
            248914394,
            248908476,
            248910261
        ],
        "A": [
            248903051,
            248903069,
            248903106,
            248903549,
            248904708,
            248903046,
            248903582,
            248903569,
            248903261,
            248903372,
            248905387,
            248903521,
            248905435,
            248904180,
            248904557,
            248904753,
            248904311,
            248904712,
            248903327
        ],
        "F": [
            250203263
        ]
    },
    "name": "A. Shuffle Party",
    "statement": "You are given an array a_1, a_2,\r\nldots, a_n. Initially, a_i=i for each 1\r\nle i\r\nle n.The operation\r\ntexttt{swap}(k) for an integer k\r\nge 2 is defined as follows: Let d be the largest divisor^\r\ndagger of k which is not equal to k itself. Then swap the elements a_d\r\nand a_k. Suppose you perform\r\ntexttt{swap}(i) for each i=2,3,\r\nldots, n in this exact order. Find the position of 1 in the resulting\r\narray. In other words, find such j that a_j = 1 after performing these\r\noperations.^\r\ndagger An integer x is a divisor of y if there exists an integer z such\r\nthat y = x\r\ncdot z.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\n#define x first\n#define y second\n#define int long long\n#define mp(x, y) make_pair(x, y)\n#define eb(...) emplace_back(__VA_ARGS__)\n#define fro(i, x, y) for(int i = (x); i <= (y); i++)\n#define pre(i, x, y) for(int i = (x); i >= (y); i--)\ninline void JYFILE19();\n\ntypedef int64_t i64;\ntypedef pair<int, int> PII;\n\nbool ST;\nconst int N = 1e6 + 10;\n\nint n, m;\n\ninline void solve() {\n  cin >> n;\n  cout << (1ll << __lg(n)) << \"\\n\";\n}\n\nsigned main() {\n  JYFILE19();\n  int t; cin >> t;\n  while(t--) {\n    solve();\n  }\n  return 0;\n}\nbool ED;\ninline void JYFILE19() {\n  // freopen(\"\", \"r\", stdin);\n  // freopen(\"\", \"w\", stdout);\n  ios::sync_with_stdio(0), cin.tie(0);\n  double MIB = fabs((&ED-&ST)/1048576.), LIM = 512;\n  cerr << \"MEMORY: \" << MIB << endl, assert(MIB<=LIM);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Shuffle Party.json",
    "editorial_link": "https://codeforces.com//blog/entry/126513",
    "editorial": "TutorialOn , the answer is trivially .On , index and are swapped. The\r\nanswer is therefore .For , let us assume the element is on index and it\r\nwill be swapped with index . Then, must be . We will prove this by\r\ncontradiction. Let us assume that there is no divisor greater than , and\r\nis lesser than . But then, as is a multiple of in the base condition,\r\nmust be a multiple of , and is a divisor of . This contradicts the\r\nassumption. By induction we can see that is always a multiple of , and\r\nthis proof will always hold. The element will move only when .Therefore,\r\nwe can find the largest value of such that . The answer turns out to be\r\n.\r\n",
    "hint": []
}