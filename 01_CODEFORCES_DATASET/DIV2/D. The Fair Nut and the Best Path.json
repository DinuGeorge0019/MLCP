{"link": "https://codeforces.com//contest/1084/problem/D", "problemId": "268418", "problem_idx": "D", "shortId": "1084D", "contest_number": "1084", "problem_submissions": {"E": [46871140, 46872149, 46875669, 46875724, 46874048, 46872086, 46872648, 46877520, 46878278, 46874461, 46878594, 46878417, 46876583, 46878192, 46874895, 46876700, 46877996, 46876441, 46873571, 46873367], "D": [46865692, 46866251, 46867303, 46864932, 46866831, 46870175, 46871027, 46867359, 46864028, 46867931, 46867474, 46868146, 46871839, 46871054, 46866346, 46870635, 46870859, 46868272, 46870701, 46867072], "C": [46862188, 46862548, 46862310, 46864314, 46859780, 46865533, 46863590, 46862823, 46859756, 46864914, 46865680, 46864482, 46863554, 46862055, 46865588, 46867219, 46865294, 46862436, 46861206, 46862144], "B": [46860593, 46860115, 46860565, 46859288, 46868191, 46861225, 46861292, 46860596, 46860732, 46863777, 46862311, 46860318, 46861810, 46860088, 46859027, 46862964, 46862212, 46860437, 46875865, 46882320], "A": [46860045, 46859437, 46859480, 46861802, 46870580, 46859672, 46860117, 46859399, 46861955, 46862963, 46861395, 46859357, 46859117, 46859254, 46859455, 46860467, 46859673, 46859251, 46859051, 46859322]}, "name": "D. The Fair Nut and the Best Path", "statement": "The Fair Nut is going to travel to the Tree Country, in which there are\r\nn cities. Most of the land of this country is covered by forest.\r\nFurthermore, the local road system forms a tree (connected graph without\r\ncycles). Nut wants to rent a car in the city u and go by a simple path\r\nto city v. He hasn\u2019t determined the path, so it\u2019s time to do it. Note\r\nthat chosen path can consist of only one vertex.A filling station is\r\nlocated in every city. Because of strange law, Nut can buy only w_i\r\nliters of gasoline in the i-th city. We can assume, that he has . Each\r\nroad has a length, and as soon as Nut drives through this road, the\r\namount of gasoline decreases by length. Of course, Nut can\u2019t choose a\r\npath, which consists of roads, where he runs out of gasoline. He can buy\r\ngasoline in visited city, even in and .He also wants to find the maximum\r\namount of gasoline that he can have at the end of the path. Help him:\r\ncount it.\r\n", "solutions": ["#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> cd;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\ntypedef pair<ld,ld> pd;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\ntypedef vector<cd> vcd;\n\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nconst int MOD = 1000000007;\nconst ll INF = 1e18;\nconst int MX = 100001;\n\nint N;\nvi data;\nvector<vector<pair<int, ll> > > graph;\n\nll best = 0;\n\nll dp(int vertex, int parent) { //return best single-strand result\n    vector<ll> paths;\n\n    F0R(i, graph.at(vertex).size()) {\n        int curVertex = graph.at(vertex).at(i).first;\n        if (curVertex == parent) {\n            continue;\n        }\n        ll value = dp(curVertex, vertex);\n        if (value >= graph.at(vertex).at(i).s) {\n            value -= graph.at(vertex).at(i).s;\n            paths.pb(value);\n        }\n    }\n    paths.pb(0);\n    paths.pb(0);\n    sort(all(paths));\n    int curCount = paths.size();\n    best = max(best, data[vertex] + paths[curCount - 1] + paths[curCount - 2]);\n    return data[vertex] + paths[curCount - 1];\n}\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n\n    cin >> N;\n    F0R(i, N) {\n        int cur; cin >> cur; data.pb(cur);\n        vector<pair<int, ll> > d; graph.pb(d);\n    }\n\n    F0R(i, N-1) {\n        int a, b, c; cin >> a >> b >> c;\n        graph[a-1].pb(mp(b-1, c));\n        graph[b-1].pb(mp(a-1, c));\n\n    }\n\n\n    dp(0, -1);\n    cout << best << endl;\n\n    return 0;\n}\n\n// read the question correctly (ll vs int)\n// template by bqi343"], "input": "", "output": "", "tags": ["dp", "trees"], "dificulty": "1800", "interactive": false}