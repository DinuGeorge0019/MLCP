{
    "link": "https://codeforces.com//contest/1013/problem/A",
    "problemId": "203185",
    "problem_idx": "A",
    "shortId": "1013A",
    "contest_number": "1013",
    "problem_submissions": {
        "E": [
            40956112,
            40954604,
            40952959,
            40954177,
            40956704,
            40954852,
            40958592,
            40955861,
            40956957,
            40959161,
            40962228,
            40958309,
            40954877,
            40961226,
            40962426,
            40963172,
            40959599,
            40960095,
            40962704,
            40960316
        ],
        "D": [
            40947895,
            40949235,
            40948190,
            40942963,
            40949230,
            40956987,
            40949637,
            40959376,
            40954303,
            40954900,
            40949703,
            40954385,
            40960744,
            40953417,
            40949714,
            40950014,
            40955109,
            40955161,
            40948236,
            40957040
        ],
        "C": [
            40945093,
            40946094,
            40946460,
            40948959,
            40947981,
            40948222,
            40950831,
            40945123,
            40948645,
            40944950,
            40947268,
            40951753,
            40947430,
            40945326,
            40946788,
            40945079,
            40948090,
            40945103,
            40952740,
            40948559
        ],
        "B": [
            40941603,
            40943452,
            40942391,
            40945819,
            40943517,
            40942695,
            40945308,
            40942798,
            40941517,
            40942505,
            40944306,
            40945361,
            40944304,
            40947125,
            40945606,
            40951205,
            40942971,
            40942106,
            40951005,
            40945032
        ],
        "A": [
            40939736,
            40940294,
            40939785,
            40944381,
            40940232,
            40940059,
            40941218,
            40939821,
            40939967,
            40940115,
            40940253,
            40940672,
            40939837,
            40940000,
            40940214,
            40942500,
            40940832,
            40939878,
            40942490,
            40940286
        ],
        "F": [
            82478981,
            40991650
        ]
    },
    "name": "A. Piles With Stones",
    "statement": "There is a beautiful garden of stones in Innopolis.Its most beautiful\r\nplace is the n piles with stones numbered from 1 to n.EJOI participants\r\nhave visited this place twice. When they first visited it, the number of\r\nstones in piles was x_1, x_2,\r\nldots, x_n, correspondingly. One of the participants wrote down this\r\nsequence in a notebook. They visited it again the following day, and the\r\nnumber of stones in piles was equal to y_1, y_2,\r\nldots, y_n. One of the participants also wrote it down in a notebook.It\r\nis well known that every member of the EJOI jury during the night either\r\nsits in the room 108 or comes to the place with stones. Each jury member\r\nwho comes there either takes one stone for himself or moves one stone\r\nfrom one pile to another. We can assume that there is an unlimited\r\nnumber of jury members. No one except the jury goes to the place with\r\nstones at night.Participants want to know whether their notes can be\r\ncorrect or they are sure to have made a mistake.\r\n",
    "solutions": [
        "/// In The Name Of God\n/// I wish, that I could leave it all behind me / Go to my own world where no one can find me\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define F first\n#define S second\n#define mp make_pair\n#define pb push_back\n#define int long long\n#define ll long long\n#define pii pair <int , int>\n#define ld long double\n#define for2(a,b,c) for(int (a) = (b); (a) < (c); (a)++)\n#define for3(a,b,c) for(    (a) = (b); (a) < (c); (a)++)\n#define setp cout << fixed << setprecision(15)\n#define endl \"\\n\"\n#define minit(a,b) a = min(a,b)\n#define maxit(a,b) a = max(a,b)\n#define PII pair<int,int>\n#define Vec vector<int>\n#define error(x) cerr << #x << \" = \" << (x) << endl;\n#define all(x) (x).begin() , (x).end()\n\n\nint32_t main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    int n; cin >> n;\n    int a,b;\n    a = b = 0;\n    for2(i,0,n){\n        int x; cin >> x;\n        a += x;\n    }\n    for2(i,0,n){\n        int x; cin >> x;\n        b += x;\n    }\n    if(a >= b) cout << \"Yes\" << endl;\n    else cout << \"No\" << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Piles With Stones.json",
    "editorial_link": "https://codeforces.com//blog/entry/60920",
    "editorial": "It can be simply showed that the answer is if and only if the sum in the\r\nfirst visit is not less than the sum in the second visit.\r\n"
}