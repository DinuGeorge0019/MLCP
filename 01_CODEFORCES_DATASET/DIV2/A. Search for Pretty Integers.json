{
    "link": "https://codeforces.com//contest/872/problem/A",
    "problemId": "128431",
    "problem_idx": "A",
    "shortId": "872A",
    "contest_number": "872",
    "problem_submissions": {
        "D": [
            31357405,
            31351452,
            31343107,
            31351195,
            31348275,
            31358936,
            31353320,
            31359729,
            31384542,
            31354719,
            31362020,
            31359730,
            31362352,
            31351225,
            31351202,
            31354247,
            31354449,
            31352162,
            31359781
        ],
        "E": [
            31353643,
            31348128,
            31351224,
            31359199,
            31354447,
            31355467,
            31348071,
            31351923,
            31353128,
            31362654,
            31354891,
            31382199
        ],
        "C": [
            31342341,
            31341124,
            31342335,
            31339634,
            31341933,
            31341621,
            31341040,
            31345564,
            31340156,
            31342837,
            31339872,
            31339992,
            31338872,
            31343484,
            31340713,
            31344350,
            31343999,
            31340760,
            31346573,
            31343301
        ],
        "B": [
            31339933,
            31344337,
            31346424,
            31335779,
            31338069,
            31340584,
            31337590,
            31339591,
            31336576,
            31337750,
            31336433,
            31336155,
            31344259,
            31336906,
            31343230,
            31338477,
            31343380,
            31338480,
            31339600,
            31336704
        ],
        "A": [
            31337113,
            31334461,
            31338251,
            31333648,
            31354746,
            31334723,
            31335437,
            31336234,
            31333965,
            31339158,
            31333483,
            31334206,
            31334052,
            31333255,
            31341935,
            31334681,
            31333872,
            31333828,
            31335202,
            31334321
        ]
    },
    "name": "A. Search for Pretty Integers",
    "statement": "You are given two lists of non-zero digits.Let\u2019s call an integer pretty\r\nif its (base ) representation has at least one digit from the first list\r\nand at least one digit from the second list. What is the smallest\r\npositive pretty integer?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[100],b[100];\nint main(){\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++){\n\t\tint A;\n\t\tcin>>A;\n\t\ta[A]=1;\n\t}\n\tfor(int i=0;i<m;i++){\n\t\tint A;\n\t\tcin>>A;\n\t\tb[A]=1;\n\t}\n\tfor(int i=1;i<100;i++){\n\t\tif((a[i%10]||(i>=10&&a[i/10]))&&(b[i%10]||(i>=10&&b[i/10]))){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Search for Pretty Integers.json",
    "editorial_link": "https://codeforces.com//blog/entry/55200",
    "editorial": "Note that the length of the answer does not exceed two because we can take one number from the first list and one number from the second lists and make up of them a pretty number. So we need to check two cases:\n\n1) Iterate through the digits from the first list and check if digit belongs to the second list too. Make up the number of this digit.\n\n2) Iterate through the numbers from the first list and from the second list. Make up the number of this two digits. There are two ways: digit from the first list, then from the second list and vice versa.\n\nThen you should choose the minimal number."
}