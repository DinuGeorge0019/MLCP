{"link": "https://codeforces.com//contest/615/problem/D", "problemId": "45132", "problem_idx": "D", "shortId": "615D", "contest_number": "615", "problem_submissions": {"D": [15246218, 15243648, 15241674, 15242192, 15244574, 15242022, 15243833, 15247327, 15245928, 15245965, 15250600, 15244765, 15244668, 15243379, 15244617, 15245499, 15246279, 15242819], "C": [15243771, 15245552, 15245503, 15246881, 15242164, 15249238, 15422750, 15249506, 15244269, 15243604, 15243504, 15247689, 15243273, 15245397, 15244917, 15256203, 15256783, 15256658, 15262298], "E": [15241790, 15242394, 15249657, 15250007, 15248042, 15246416, 15250940, 15251751, 15248476, 15250193, 15254285, 15249151, 15249613, 15242059, 15248491, 15248349, 15250365], "B": [15240908, 15246431, 15240992, 15240867, 15249484, 15247141, 15245895, 15241449, 15250210, 15247251, 15242653, 15240727, 15240692, 15240772, 15241317, 15251939, 15241564, 15244142, 15246779], "A": [15238675, 15239335, 15238139, 15237976, 15238447, 15239307, 15239985, 15238131, 15248916, 15237777, 15240179, 15237788, 15238124, 15238812, 15238095, 15252529, 15238764, 15239416, 15239104]}, "name": "D. Multipliers", "statement": "Ayrat has number , represented as it\u2019s prime factorization of size ,\r\ni.e. . Ayrat got secret information that that the product of all\r\ndivisors of taken modulo is the password to the secret data base. Now he\r\nwants to calculate this value.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, a, b) for (int i = (a), _end_ = (b); i < _end_; ++i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mp make_pair\n#define x first\n#define y second\n#define pb push_back\n#define SZ(x) (int((x).size()))\n#define ALL(x) (x).begin(), (x).end()\n\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\n\ntypedef long long LL;\n\nconst int oo = 0x3f3f3f3f;\n\nconst int Mod = 1e9 + 7;\n\nconst int maxn = 200000;\n\nmap<int, int> cnt;\n\ninline int fpm(LL b, int e, int m)\n{\n    b %= m;\n    LL t = 1;\n    for ( ; e; e >>= 1, (b *= b) %= m)\n        if (e & 1) (t *= b) %= m;\n    return t;\n}\n\nvector<pair<int, int> > all;\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    int n;\n    scanf(\"%d\", &n);\n    while (n--)\n    {\n        int x;\n        scanf(\"%d\", &x), ++cnt[x];\n    }\n    static int suf[maxn + 5];\n    all.clear();\n    for (auto &x : cnt) all.pb(x);\n    int m = SZ(all);\n    suf[m] = 1;\n    for (int i = m - 1; i >= 0; --i) suf[i] = (LL)suf[i + 1] * (all[i].y + 1) % (Mod - 1);\n    LL ans = 1;\n    LL now = 1;\n    REP(i, 0, m)\n    {\n        LL lyc = now * suf[i + 1] % (Mod - 1);\n        int tmp = 0;\n        REP(j, 0, all[i].y + 1) (tmp += j) %= Mod - 1;\n        (lyc *= tmp) %= Mod - 1;\n        ans = ans * fpm(all[i].x, lyc, Mod) % Mod;\n        (now *= all[i].y + 1) %= Mod - 1;\n    }\n    printf(\"%I64d\\n\", ans);\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["math", "number theory"], "dificulty": "2000", "interactive": false}