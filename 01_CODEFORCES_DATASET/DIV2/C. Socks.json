{
    "link": "https://codeforces.com//contest/731/problem/C",
    "problemId": "75974",
    "problem_idx": "C",
    "shortId": "731C",
    "contest_number": "731",
    "problem_submissions": {
        "D": [
            21507606,
            21485910,
            21487254,
            21484498,
            21488003,
            21486730,
            21490784,
            21494206,
            21481068,
            21511124,
            21485685,
            21489121,
            21487100,
            21568091,
            21513297,
            21513265,
            21483698
        ],
        "E": [
            21487370,
            21488491,
            21489109,
            21490173,
            21490282,
            21488124,
            21478759,
            21486709,
            21482192,
            21497395,
            21489450,
            21493635,
            21484776,
            21490615,
            21489533,
            21487823,
            21492190,
            21499034,
            21490743
        ],
        "F": [
            21481835,
            21483503,
            21486528,
            21484079,
            21487817,
            21483187,
            21479838,
            21481840,
            21482733,
            21486882,
            21483028,
            21483988,
            21482409,
            21480968,
            21488944,
            21485189,
            21488476,
            21484669,
            21488070,
            21486545
        ],
        "C": [
            21479362,
            21481971,
            21480987,
            21481503,
            21479989,
            21477543,
            21482718,
            21479909,
            21477810,
            21485166,
            21479533,
            21479880,
            21478958,
            21488181,
            21481556,
            21481473,
            21477970,
            21479493,
            21480708,
            21481119
        ],
        "B": [
            21476870,
            21479930,
            21477574,
            21478962,
            21478647,
            21492414,
            21481417,
            21477633,
            21476489,
            21481747,
            21477815,
            21481505,
            21485057,
            21489403,
            67074526,
            21478744,
            21480726,
            21477230,
            21478732,
            21478885
        ],
        "A": [
            21476108,
            21478310,
            21476242,
            21476318,
            21476790,
            21479331,
            21480393,
            21476522,
            21475966,
            21478021,
            21476661,
            21476151,
            21475986,
            21490293,
            21476656,
            21477731,
            21478515,
            21476049,
            21476561,
            21476353
        ]
    },
    "name": "C. Socks",
    "statement": "Arseniy is already grown-up and independent. His mother decided to leave\r\nhim alone for days and left on a vacation. She have prepared a lot of\r\nfood, left some money and washed all Arseniy’s clothes. Ten minutes\r\nbefore her leave she realized that it would be also useful to prepare\r\ninstruction of which particular clothes to wear on each of the days she\r\nwill be absent. Arseniy’s family is a bit weird so all the clothes is\r\nenumerated. For example, each of Arseniy’s socks is assigned a unique\r\ninteger from to . Thus, the only thing his mother had to do was to write\r\ndown two integers and for each of the days the indices of socks to wear\r\non the day (obviously, stands for the left foot and for the right). Each\r\nsock is painted in one of colors.When mother already left Arseniy\r\nnoticed that according to instruction he would wear the socks of\r\ndifferent colors on some days. Of course, that is a terrible mistake\r\ncause by a rush. Arseniy is a smart boy, and, by some magical\r\ncoincidence, he posses jars with the paint one for each of\r\ncolors.Arseniy wants to repaint some of the socks in such a way, that\r\nfor each of days he can follow the mother’s instructions and wear the\r\nsocks of the same color. As he is going to be very busy these days he\r\nwill have no time to change the colors of any socks so he has to\r\nfinalize the colors now.The new computer game Bota-3 was just realised\r\nand Arseniy can’t wait to play it. What is the minimum number of socks\r\nthat need their color to be changed in order to make it possible to\r\nfollow mother’s instructions and wear the socks of the same color during\r\neach of days.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\nconst double pi=acos(-1.0);\nconst double eps=1e-9;\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define re return\n#define vi vector <int> \n#define pii pair <int,int>\n#define pll pair <long long , long long>\ntypedef long long ll;\n\nconst int N=(int)2e5+5;\n\nint sz[N],p[N],n,m,k,c[N],a,b,ans,gr,maxi;\nmap <int,int> s[N];\n\nint get(int x)\n{\n\tif(p[x]==x) return x;\n\tp[x]=get(p[x]);\n\treturn p[x];\n}\n\nvoid unite(int a,int b)\n{\n\ta=get(a);\n\tb=get(b);\n\tif(a==b) return;\n\tif(sz[p[a]]<sz[p[b]])\n\t{\n\t\tsz[p[b]]+=sz[p[a]];\n\t\tp[p[a]]=p[b];\n\t} else\n\t{\n\t\tsz[p[a]]+=sz[p[b]];\n\t\tp[p[b]]=p[a];\n\t}\n}\n\nint main()\n{\n\tios:: sync_with_stdio(false);\n\tcin >> n >> m >> k;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tcin >> c[i];\n\t\tc[i]--;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tp[i]=i;\n\t\tsz[i]=1;\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tcin >> a >> b;\n\t\ta--;b--;\n\t\tunite(a,b);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tget(i);\n\t\tgr=p[i];\n\t\ts[gr][c[i]]++;\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(p[i]!=i)continue;\n\t\tmaxi=0;\n\t\tfor(auto it=s[i].begin();it!=s[i].end();it++)\n\t\t\tmaxi=max(maxi,it->second);\n\t\tans+=sz[i]-maxi;\n\t}\n\tcout << ans;\n\t\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Socks.json",
    "editorial_link": "https://codeforces.com//blog/entry/47840",
    "editorial": "When solving this\nproblem, it is convenient to use graph interpretation of the problem.\nConsider the graph, whose vertices correspond to the socks and edges\nconnect those socks that Arseniy wears on some day. By the statement, we\nhave to make that any two vertices connected by an edge have the same\ncolor. It actually means that any connected component should share the\nsame color. For each connected component letâs find out which color\nshould we choose for it. In order to recolor the minimum possible number\nof vertices, we should leave the maximum number of vertices with their\noriginal color. It means that the optimum color is the color shared by\nthe most number of vertices in this connected component. So, we have the\nfollowing solution: consider all connected components, in each component\nchoose the most popular color and add the difference between the\ncomponent size and the number of vertices of this color. In order to\nfind the most popular color you may, for example, write all colors in an\narray, sort it and find the longest contiguous segment of colors. Such a\nsolution works in . Question: How to implement this solution so that it\nworks in ?\n",
    "hint": []
}