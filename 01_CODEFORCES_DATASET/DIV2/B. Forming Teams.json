{
    "link": "https://codeforces.com//contest/216/problem/B",
    "problemId": "1598",
    "problem_idx": "B",
    "shortId": "216B",
    "contest_number": "216",
    "problem_submissions": {
        "E": [
            2009676,
            2007456,
            2010925,
            2011846,
            2010767,
            2013186,
            2012062,
            2014949,
            2013666,
            2046735,
            2013517
        ],
        "D": [
            2008985,
            2008016,
            2009087,
            2009267,
            2009116,
            2010292,
            2010461,
            2009515,
            2010965,
            2010788,
            2008354,
            2011910,
            2011812,
            2010997,
            2011635,
            2010429,
            2010591
        ],
        "C": [
            2008196,
            2010650,
            2010398,
            2010245,
            2009928,
            2008042,
            2009220,
            2212789,
            2010921,
            2010250,
            2009530,
            2011922,
            2009776,
            2011084,
            2009565,
            2010436,
            2011686,
            2009858
        ],
        "B": [
            2007383,
            2008222,
            2006806,
            2008461,
            2008911,
            2011583,
            2007848,
            2008640,
            2008312,
            2007798,
            2007852,
            2009984,
            2009151,
            2011696,
            2009696,
            2009222,
            2012291
        ],
        "A": [
            2006576,
            2008320,
            2007244,
            2007015,
            2006474,
            2492889,
            2492882,
            2006494,
            2006484,
            2006601,
            2007349,
            2006728,
            2006555,
            2006564,
            2007269,
            2006768,
            2007828,
            2006557,
            2007513
        ]
    },
    "name": "B. Forming Teams",
    "statement": "One day students come to the stadium. They want to play football, and\r\nfor that they need to split into teams, the teams must have an equal\r\nnumber of people.We know that this group of people has archenemies. Each\r\nstudent has at most two archenemies. Besides, if student is an archenemy\r\nto student , then student is an archenemy to student .The students want\r\nto split so as no two archenemies were in one team. If splitting in the\r\nrequired manner is impossible, some students will have to sit on the\r\nbench.Determine the minimum number of students you will have to send to\r\nthe bench in order to form the two teams in the described manner and\r\nbegin the game at last.\r\n",
    "solutions": [
        "#include <vector> \n#include <list> \n#include <map> \n#include <set> \n#include <deque> \n#include <vector> \n#include <list> \n#include <map> \n#include <set> \n#include <deque> \n#include <queue> \n#include <stack> \n#include <bitset> \n#include <algorithm> \n#include <functional> \n#include <numeric> \n#include <utility> \n#include <sstream> \n#include <iostream> \n#include <iomanip> \n#include <cstdio> \n#include <cmath> \n#include <cstdlib> \n#include <cctype> \n#include <string> \n#include <cstring> \n#include <ctime> \n\nusing namespace std;\n\nint a[200][200];\nint used[200];\n\nint main()\n{\n  int i,j,k,m,n,x,y,t,tt,ans;\n  vector<int> q;\n  scanf(\"%d%d\",&n,&m);\n  memset(a,0,sizeof(a));\n  for (i=0;i<m;i++)\n  {\n    scanf(\"%d%d\",&x,&y);\n    x--;y--;\n    a[x][y]=1;\n    a[y][x]=1;\n  }\n  memset(used,0,sizeof(used));\n  ans=0;\n  for (i=0;i<n;i++)\n    if (used[i]==0)\n    {\n      t=1;\n      tt=0;\n      used[i]=1;\n      q.clear();\n      q.push_back(i);\n      for (j=0;j<q.size();j++)\n        for (k=0;k<n;k++)\n          if (a[q[j]][k]==1)\n          {\n            tt++;\n            if (used[k]==0)\n            {\n              used[k]=1;\n              t++;\n              q.push_back(k);\n            }\n          }\n      tt/=2;\n      if ((t==tt)&&(t%2!=0)) ans++;\n    }\n  if ((n-ans)%2!=0) ans++;\n  printf(\"%d\\n\",ans);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "implementation"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Forming Teams.json",
    "editorial_link": "https://codeforces.com//blog/entry/5066",
    "editorial": "You can build some graph where vertices are students and edges are enmities. You should drop some vertices and then paint them in two colors. Any edge should connect vertices of distinct colors and numbers of vertices of every color should be same.\n\nYou can see that graph consists chians, cycles and sepatated vertices. Every of that component can be painted in 2 colors except one case: cycles of odd length. So, you should drop one vertex from every odd cycle. After that you can get odd number of vertices. Then you should drop one more vertex (you can chose any of them). The obtained graph can be easily painted in 2 colors in the required manner."
}