{
    "link": "https://codeforces.com//contest/2102/problem/B",
    "problemId": "3379880",
    "problem_idx": "B",
    "shortId": "2102B",
    "contest_number": "2102",
    "problem_submissions": {
        "F": [
            319286602,
            319289386,
            319448729
        ],
        "D": [
            319242440,
            319239148,
            319249290,
            319249952,
            319245490,
            319255095,
            319248048,
            319256182,
            319263500,
            319273386,
            319263411,
            319271144,
            319273350,
            319262239,
            319263821,
            319278652,
            319260289,
            319268007,
            319268385
        ],
        "C": [
            319230451,
            319228419,
            319230937,
            319235602,
            319234478,
            319240126,
            319231996,
            319231075,
            319238712,
            319241029,
            319246278,
            319244708,
            319240604,
            319237747,
            319235788,
            319225890,
            319227523,
            319249855,
            319241267
        ],
        "B": [
            319222969,
            319221630,
            319222016,
            319220113,
            319224317,
            319223605,
            319219094,
            319220695,
            319225176,
            319216814,
            319224576,
            319226183,
            319226409,
            319226003,
            319229218,
            319217580,
            319217355,
            319241924,
            319230817
        ],
        "A": [
            319221576,
            319216356,
            319216503,
            319216061,
            319218195,
            319215418,
            319215493,
            319217119,
            319227024,
            319217420,
            319215189,
            319219232,
            319240055,
            319215536,
            319215440,
            319215191,
            319222683,
            319219607
        ],
        "E": [
            319275764,
            319278845,
            319263831,
            319282197,
            319278866,
            319280500,
            319280125,
            319284264,
            319289922,
            319285799,
            319289028,
            319290886,
            319289136,
            319288355,
            319290086,
            319295166,
            319289250,
            319290453
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/142788",
    "editorial": "SolutionBefore starting, we take the absolute value of all elements\r\nsince their signs do not matter. Then, if the first element of the array\r\nis equal to or smaller than the smallest element of the array, the\r\nanswer is possible. Else, it is impossible. The proof is as follows: If\r\nthe first element is equal to or smaller than the smallest element of\r\nthe array, we can negate the big values until the first element becomes\r\nthe smallest element of the array, hence becoming the median. If the\r\nfirst element is equal to the smallest element of the array, we can\r\nnegate the entire array, which results in the first element becoming the\r\nsmallest element of the array. Otherwise, if the first element of the\r\narray is larger than the smallest element of the array, negating values\r\nsmaller than it has no effect, while negating values larger than it just\r\nmakes the first element further away from the median position. You can\r\nverify that negating the first element itself does not help either by\r\nusing similar cases.\r\n",
    "name": "B. The Picky Cat",
    "statement": "You are given an array of integers a_1, a_2,\r\nldots, a_n. You are allowed to do the following operation any number of\r\ntimes (possibly zero): Choose an index i (1\r\nle i\r\nle n). Multiply a_i by -1 (i.e., update a_i := -a_i). Your task is to\r\ndetermine whether it is possible to make the element at index 1 become\r\nthe median of the array after doing the above operation any number of\r\ntimes. Note that operations can be applied to index 1 as well, meaning\r\nthe median can be either the original value of a_1 or its negation.The\r\nmedian of an array b_1, b_2,\r\nldots, b_m is defined as the\r\nleft\r\nlceil\r\nfrac{m}{2}\r\nright\r\nrceil-th^{\r\ntext{ }} smallest element of array b. For example, the median of the\r\narray [3, 1, 2] is 2, while the median of the array [10, 1, 8, 3] is\r\n3.It is guaranteed that the absolute value of the elements of a are\r\ndistinct. Formally, there are no pairs of indices 1\r\nle i < j\r\nle n where |a_i| = |a_j|.^{\r\ntext{ }}\r\nlceil x\r\nrceil is the ceiling function which returns the least integer greater\r\nthan or equal to x.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. The Picky Cat.json",
    "hint": [
        "Hint 1 Does the initial sign and order of elements matter?",
        "Hint 2 If an element is before the median in the sorted array, can you shift it forward?",
        "Hint 3 What if it is initially after the median?",
        "Hint 1 What is the MEX, if is not there?",
        "Hint 2 When is the MEX equal to ?",
        "Hint 3 If we want a subgrid to be included in as many other subgrids as possible, what shape should it have? What about its place?",
        "Hint 1 Is it possible for an element to change its index parity after some operations?",
        "Hint 2 What else is not effected by the operation?",
        "Hint 3 How to combine the above two properties under the time limit?",
        "Hint 1 Does it matter if there are occurance of a number or ?",
        "Hint 2 What greedy approaches can you think of?",
        "Hint 3 Are they fast enough?",
        "Hint 1 What are some characteristics of a cute subarray?",
        "Hint 2 Is cuteness a monotone property?",
        "Hint 3 How to find the maximal cute subarray for a fixed index ?",
        "Hint 1 Can we see any node twice in our walk?",
        "Hint 2 What is the upper bound on the length of the path?",
        "Hint 3 How do we approach this using dynamic programming?",
        "Hint 4 How to optimize the DP?",
        "Hint 1 What are some properties of such colored trees?",
        "Hint 2 Is the farthest blue and red node unique?",
        "Hint 3 Should we look for an solution or optimizes a slower one?"
    ]
}