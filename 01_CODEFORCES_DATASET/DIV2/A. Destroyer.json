{"link": "https://codeforces.com//contest/1836/problem/A", "problemId": "1971173", "problem_idx": "A", "shortId": "1836A", "contest_number": "1836", "problem_submissions": {"E": [210147681, 210156192, 210163487, 210136429, 210157213, 210315010, 210158073, 210164123, 210155192, 210164163, 210159525], "C": [210130232, 210131057, 210124529, 210133873, 210151231, 210126284, 210133931, 210138158, 210136673, 210132463, 210128133, 210140056, 210148028, 210143853, 210137711, 210137608, 210128551, 210120166, 210126121], "B": [210123440, 210126296, 210116405, 210125585, 210144712, 210122722, 210125845, 210141461, 210122883, 210123468, 210120670, 210126915, 210118094, 210134923, 210163701, 210137111, 210115730, 210115790], "A": [210111620, 210110060, 210110623, 210116661, 210139143, 210111484, 210110034, 210110353, 210111957, 210118244, 210112250, 210110488, 210111107, 210115218, 210110094, 210110963, 210112266, 210116067, 210110124], "D": [210158558, 210154147, 210162752, 210191544, 210162490, 210160449, 210160513, 210163603]}, "name": "A. Destroyer", "statement": "John is a lead programmer on a destroyer belonging to the space navy of\r\nthe Confederacy of Independent Operating Systems. One of his tasks is\r\nchecking if the electronic brains of robots were damaged during\r\nbattles.A standard test is to order the robots to form one or several\r\nlines, in each line the robots should stand one after another. After\r\nthat, each robot reports the number of robots standing in front of it .\r\nThe i-th robot reported number l_i. Unfortunately, John does not know\r\nwhich line each robot stands in, and can\u2019t check the reported numbers.\r\nPlease determine if it is possible to form the lines in such a way that\r\nall reported numbers are correct, or not.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile(t--){\n\t\tint n; \n\t\tcin >> n;\n\t\tmap<int, int> l;\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tl[x]++;\n\t\t}\n\t\t\n\t\tbool possible = true;\n\t\tfor(int i = 1; i < 100; ++i){\n\t\t\tpossible &= l[i] <= l[i - 1];\n\t\t}\n\t\t\n\t\tcout << (possible ? \"YES\" : \"NO\") << endl;\n\t}\n\t\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "sortings"], "dificulty": "800", "interactive": false}