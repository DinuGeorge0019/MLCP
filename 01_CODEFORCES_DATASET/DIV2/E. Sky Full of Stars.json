{"link": "https://codeforces.com//contest/998/problem/E", "problemId": "194449", "problem_idx": "E", "shortId": "998E", "contest_number": "998", "problem_submissions": {"E": [39844279, 39844719, 39842563, 39860454, 39860368], "D": [39839915, 39841332, 39842999, 39838622, 39833588, 39834360, 39835519, 39835358, 39836436, 39839136, 39835483, 39834881, 39832459, 39838234, 39834518, 39836090, 39838820, 39836619], "B": [39829464, 39826160, 39828535, 39827534, 39825326, 39826819, 39826965, 39827064, 39824985, 39826413, 39828466, 39828134, 39827004, 39829078, 39829375, 39828106, 39826996, 39829712], "C": [39826150, 39829299, 39830565, 39832057, 39827518, 39829277, 39828734, 39829936, 39831699, 39829124, 39832064, 39831642, 39829279, 39831274, 39831057, 39831568, 39830502, 39831907], "A": [39824455, 39823644, 39825721, 39823552, 39823494, 39823346, 39825072, 39824102, 39823293, 39823771, 39825353, 39823995, 39824239, 39823343, 39835371, 39823495, 39823392, 39823469]}, "name": "E. Sky Full of Stars", "statement": "On one of the planets of Solar system, in Atmosphere University, many\r\nstudents are fans of bingo game.It is well known that one month on this\r\nplanet consists of n^2 days, so calendars, represented as square matrix\r\nn by n are extremely popular.Weather conditions are even more unusual.\r\nDue to the unique composition of the atmosphere, when interacting with\r\nsunlight, every day sky takes one of three colors: blue, green or red.To\r\nplay the bingo, you need to observe the sky for one month after each\r\nday, its cell is painted with the color of the sky in that day, that is,\r\nblue, green or red.At the end of the month, students examine the\r\ncalendar. If at least one row or column contains only cells of one\r\ncolor, that month is called lucky.Let\u2019s call two colorings of calendar\r\ndifferent, if at least one cell has different colors in them. It is easy\r\nto see that there are 3^{n\r\ncdot n} different colorings. How much of them are lucky? Since this\r\nnumber can be quite large, print it modulo 998244353.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename A, typename B> inline ostream& operator<<(ostream&os, const pair<A, B> &v) {return os << v.first << ' ' << v.second;}\ntemplate <typename A> inline ostream& operator<<(ostream&os, const vector<A> &v){\n    auto it = v.begin(); os << *it;for (++it; it != v.end(); os << ' ' << *it++); return os;\n}\n#ifdef Wavator\n#define de(...) cout << #__VA_ARGS__ << \" = \", W(__VA_ARGS__)\n#else\n#define de(...) 42\n#define cerr if (false) cout\n#endif\nvoid W(){cout<<endl;}\ntemplate <typename H, typename...T> inline void W(H head, T... tail){\n    cout << head << ' ';\n    W(tail...);\n}\n#define rep(i, a, b) for (int i = (a), i##_end_ = (b); i < i##_end_; ++i)\n#define per(i, a, b) for (int i = (b) - 1, i##_end_ = (a); i >= i##_end_; --i)\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define SZ(x) ((int)(x).size())\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef double db;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nconst db eps = 1e-9, PI = acos(-1);\nconst ll mod = 998244353ll;\nconst int oo = 0x3f3f3f3f;\nmt19937 rnd((ull)time(0));\nll pow_mod(ll a, ll b) {\n    assert(b >= 0); ll res = 1;\n    for (a %= mod; b; b >>= 1, a = a * a % mod) if (b & 1)res = res * a % mod;\n    return res;\n}\n/////////////////////////////////////////////////////////////////////////\nvoid solve();\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr), cout.tie(nullptr);\n    solve();\n    return 0;\n}\nconst int N = 1000000 + 5000;\nll fact[N], inv[N];\ninline ll C(ll n, ll m) {\n    return ((fact[n] * inv[m] ) % mod) * inv[n - m] % mod;\n}\nll n;\nll po(ll a) {\n    return pow_mod(3, a);\n}\nvoid solve() {\n    fact[0] = fact[1] = 1;\n    for (ll i = 1; i < N; ++i)\n        fact[i] = fact[i - 1] * i % mod;\n    for (ll i = 0; i < N; ++i)\n        inv[i] = pow_mod(fact[i], mod - 2);\n    cin >> n;\n    ll ans = 0;\n    ll p = 1;\n    rep(i, 1, n + 1) {\n        ll x = p*C(n, i)*po(i) % mod * po(n*(n-i)) % mod;\n        ans += x;\n        ans %= mod;\n        ans += x;\n        ans %= mod;\n        ans = (ans - p * C(n, i) * 3ll % mod * po(n*(n-i)))%mod;\n        p *= -1;\n    }\n    p=1;\n    rep(i, 1, n + 1) {\n        ans = (ans + p * C(n, i) * 3ll * pow_mod(po(n - i) - 1, n)) % mod;\n        p *= -1;\n    }\n    ans += mod;\n    ans %= mod;\n    cout << ans << endl;\n    return;\n}"], "input": "", "output": "", "tags": ["combinatorics", "math"], "dificulty": "2500", "interactive": false}