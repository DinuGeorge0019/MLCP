{"link": "https://codeforces.com//contest/489/problem/E", "problemId": "17500", "problem_idx": "E", "shortId": "489E", "contest_number": "489", "problem_submissions": {"D": [13589038, 8724316, 8726296, 8731189, 8726766, 8726894, 8728465, 8728477, 8727759, 8725875, 8727494, 8730275, 8733738, 8729954, 8730137, 8724674, 8731839, 8731752, 8732051], "C": [13588891, 8721795, 8727951, 8723822, 8724371, 8723499, 8726577, 8723991, 8722965, 8723091, 8724636, 8726610, 8730038, 8726232, 8725795, 8724261, 8722941, 8722633, 8723063], "B": [13588813, 8720541, 8728807, 8721401, 8766675, 8722756, 8720717, 8724885, 8720855, 8720680, 8720515, 8720936, 8722566, 8728071, 8723662, 8722124, 8737370, 8720146, 8720599, 8721787], "A": [13588752, 8742614, 8729605, 8720536, 8720304, 8719407, 8720112, 8719631, 8724692, 8719911, 8719459, 8720699, 8726238, 8722578, 8720190, 8721547, 8726214, 8726620, 8726619], "E": [8736947, 11503343, 8742532, 8742434, 8742318, 8742303, 8742271, 8737226], "F": [8731272, 8723125, 8728205, 8732102, 8733456, 8733048, 8733546, 8733373, 8736588, 8734709, 8733680, 8724458, 8733867, 8734049, 8727708, 8736377, 8736466, 8736428]}, "name": "E. Hiking", "statement": "A traveler is planning a water hike along the river. He noted the\r\nsuitable rest points for the night and wrote out their distances from\r\nthe starting point. Each of these locations is further characterized by\r\nits , so for the -th rest point the distance from the start equals , and\r\nits equals . The traveler will move down the river in one direction, we\r\ncan assume that he will start from point on the coordinate axis and rest\r\npoints are points with coordinates .Every day the traveler wants to\r\ncover the distance . In practice, it turns out that this is not always\r\npossible, because he needs to end each day at one of the resting points.\r\nIn addition, the traveler is choosing between two desires: cover\r\ndistance every day and visit the most picturesque places.Let\u2019s assume\r\nthat if the traveler covers distance in a day, then he feels frustration\r\n, and his total frustration over the hike is calculated as the total\r\nfrustration on all days.Help him plan the route so as to minimize the :\r\nthe total frustration divided by the total picturesqueness of all the\r\nrest points he used.The traveler\u2019s path must end in the farthest rest\r\npoint.\r\n", "solutions": ["#include<cstdio>\n#include<utility>\n#include<cstring>\n#include<stack>\n#include<cmath>\nusing namespace std;\nconst int MAX = 1000 + 10;\nconst double INF = 200000000.0;\nlong long x[MAX], y[MAX], l;\ndouble dp[MAX];\nint last[MAX];\nint n;\nbool check(double t){\n\tmemset(last, -1, sizeof(last));\n\tdp[0] = 0.0;\n\tfor(int i = 1 ; i <= n ; i++) dp[i] = INF;\n\tfor(int j = 1 ; j <= n ; j++)\n\t\tfor(int i = 0 ; i < j ; i++){\n\t\t\tdouble tmp = dp[i] + sqrt(double(abs(x[j]-x[i]-l)))-y[j]*t;\n\t\t\tif(tmp < dp[j]) dp[j] = tmp, last[j] = i;\n\t\t}\n\treturn dp[n] <= 0.0;\n}\nint main(){\n\tscanf(\"%d %I64d\", &n, &l);\n\tfor(int i = 1 ; i <= n ; i++){\n\t\tscanf(\"%I64d %I64d\", &x[i], &y[i]);\n\t}\n\tdouble l = 0, r = INF;\n\tint cnt = 50;\n\twhile(cnt--){\n\t\tdouble mid = (l+r)/2;\n\t\tif(check(mid)) r = mid;\n\t\telse l = mid;\n\t}\n\tcheck((l+r)/2);\n\tstack<int> s;\n\tint now = n;\n\twhile(now!=-1){\n\t\ts.push(now);\n\t\tnow = last[now];\n\t}\n\tif(s.top() == 0) s.pop();\n\tbool flag = false;\n\twhile(!s.empty()){\n\t\tif(flag) putchar(' ');\n\t\telse flag = true;\n\t\tprintf(\"%d\", s.top());\n\t\ts.pop();\n\t}\n\tputs(\"\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "dp"], "dificulty": "2300", "interactive": false}