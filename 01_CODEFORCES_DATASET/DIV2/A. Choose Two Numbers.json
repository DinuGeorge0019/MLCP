{
    "link": "https://codeforces.com//contest/1206/problem/A",
    "problemId": "390603",
    "problem_idx": "A",
    "shortId": "1206A",
    "contest_number": "1206",
    "problem_submissions": {
        "E": [
            59039805,
            59036400,
            59045379,
            59047524,
            59061157,
            59038336,
            59098032
        ],
        "D": [
            59025954,
            59041661,
            59045740,
            59034406,
            59022167,
            59028235,
            59026731,
            59020676,
            59024989,
            59028222,
            59026919,
            59119609,
            59027379,
            59028274,
            59026956,
            59027397,
            59024272,
            59026921,
            59027483,
            59030980
        ],
        "C": [
            59011466,
            59030604,
            59014696,
            59020664,
            59011212,
            59015302,
            59007726,
            59013014,
            59014421,
            59011545,
            59013350,
            59012812,
            59015649,
            59015519,
            59018230,
            59019306,
            59015315,
            59013410,
            59013599,
            59015972
        ],
        "B": [
            59004708,
            59042916,
            59007475,
            59009856,
            59005675,
            59005365,
            59003891,
            59005761,
            59008869,
            59005044,
            59005517,
            59007045,
            59004938,
            59005819,
            59066728,
            59009485,
            59006550,
            59008990,
            59005654,
            59005940,
            59006088
        ],
        "A": [
            59001296,
            59043245,
            59001405,
            59010625,
            59001679,
            59001121,
            59001149,
            59003026,
            59003048,
            59001270,
            59001447,
            59001759,
            59001966,
            59002120,
            59066711,
            59002946,
            59001221,
            59005963,
            59002062,
            59004823,
            59001151
        ],
        "F": [
            59027482,
            59114990,
            59100319
        ]
    },
    "name": "A. Choose Two Numbers",
    "statement": "You are given an array A, consisting of n positive integers a_1, a_2,\r\ndots, a_n, and an array B, consisting of m positive integers b_1, b_2,\r\ndots, b_m. Choose some element a of A and some element b of B such that\r\na+b doesn’t belong to A and doesn’t belong to B. For example, if A = [2,\r\n1, 7] and B = [1, 3, 4], we can choose 1 from A and 4 from B, as number\r\n5 = 1 + 4 doesn’t belong to A and doesn’t belong to B. However, we can’t\r\nchoose 2 from A and 1 from B, as 3 = 2 + 1 belongs to B.It can be shown\r\nthat such a pair exists. If there are multiple answers, print any.Choose\r\nand print any such two numbers.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tint n; scanf(\"%d\",&n);\n\tint mx1=0,mx2=0;\n\tfor (int i=1,x;i<=n;++i) scanf(\"%d\",&x),mx1=max(mx1,x);\n\tscanf(\"%d\",&n);\n\tfor (int i=1,x;i<=n;++i) scanf(\"%d\",&x),mx2=max(mx2,x);\n\tprintf(\"%d %d\\n\",mx1,mx2);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Choose Two Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/69158",
    "editorial": "Let be the largest number in the array , be the largest number in the\r\narray . Then the number isnât present neither in the array nor in the\r\narray . Indeed, , and is the largest number in the array , so is not\r\nincluded in . Similarly, is not included in . Thus, you can select from\r\n, from .The asymptotics is if you find the largest element by sorting\r\n(which many did), or if you find it linearly.\r\n",
    "hint": []
}