{
    "link": "https://codeforces.com//contest/1869/problem/A",
    "problemId": "2184989",
    "problem_idx": "A",
    "shortId": "1869A",
    "contest_number": "1869",
    "problem_submissions": {
        "E": [
            222790733,
            222755919,
            223014703,
            222844888,
            222822436,
            222820168
        ],
        "D2": [
            222751076,
            222765748,
            222762229,
            222767685,
            222770713,
            222771349,
            222774390,
            222781618,
            222778821,
            222788639,
            222773236,
            222775336,
            222775900,
            222778257,
            222775220,
            222773627,
            222771492
        ],
        "D1": [
            222743411,
            222768273,
            222754309,
            222754872,
            222757370,
            222757211,
            222762465,
            222761473,
            222755833,
            222757091,
            222752420,
            222764925,
            222765023,
            222761868,
            222761450,
            222761828,
            222765878,
            222760854
        ],
        "C": [
            222734213,
            222799024,
            222739072,
            222743933,
            222748797,
            222742198,
            222748357,
            222740791,
            222743470,
            222743624,
            222737636,
            222744668,
            222749662,
            222742346,
            222741675,
            222752222,
            222753724,
            222751049
        ],
        "B": [
            222728831,
            222759638,
            222728679,
            222733793,
            222732869,
            222730403,
            222734827,
            222731660,
            222733775,
            222732224,
            222728510,
            222735540,
            222734578,
            222733639,
            222729850,
            222736886,
            222733662,
            222738397
        ],
        "A": [
            222725390,
            222757999,
            222725599,
            222726282,
            222727750,
            222725856,
            222726824,
            222727514,
            222730110,
            222726868,
            222725449,
            222728462,
            222727639,
            222725642,
            222725871,
            222727421,
            222725878,
            222731354
        ],
        "F": [
            223418170
        ]
    },
    "name": "A. Make It Zero",
    "statement": "During Zhongkao examination, Reycloer met an interesting problem, but he\r\ncannot come up with a solution immediately. Time is running out! Please\r\nhelp him.Initially, you are given an array a consisting of n\r\nge 2 integers, and you want to change all elements in it to 0.In one\r\noperation, you select two indices l and r (1\r\nle l\r\nle r\r\nle n) and do the following: Let s=a_l\r\noplus a_{l+1}\r\noplus\r\nldots\r\noplus a_r, where\r\noplus denotes the bitwise XOR operation; Then, for all l\r\nle i\r\nle r, replace a_i with s. You can use the operation above in any order\r\nat most 8 times in total.Find a sequence of operations, such that after\r\nperforming the operations in order, all elements in a are equal to 0. It\r\ncan be proven that the solution always exists.\r\n",
    "solutions": [
        "// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\n#include <bits/stdc++.h>\n// #define int long long\n#define i64 long long\n#define pii pair <int, int> \nusing namespace std;\ninline int read(void) {\n    int x=0,sgn=1; char ch=getchar();\n    while(ch<48||57<ch) {if(ch==45)sgn=0;ch=getchar();}\n    while(47<ch&&ch<58) {x=x*10+ch-48;   ch=getchar();}\n    return sgn? x:-x;\n}\nvoid write(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint n;\nint a[100005];\ninline void work() {\n    n=read();\n    for(int i=1; i<=n; ++i) a[i]=read();\n    if(n%2==0) cout<<\"2\\n1 \"<<n<<endl<<\"1 \"<<n<<endl;\n    else cout<<\"4\\n1 \"<<n-1<<endl<<\"1 \"<<n-1<<endl<<\"2 \"<<n<<endl<<\"2 \"<<n<<endl;\n}\nsigned main() {\n    int T=read();\n    while(T--) work();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Make It Zero.json",
    "editorial_link": "https://codeforces.com//blog/entry/116642",
    "editorial": "Note thatSo if is even, after performing the operation on twice, the\r\nsubarray will all become .When is even, we can perform the operation on\r\ntwice.When is odd, we can perform the operation on twice. After that the\r\narray becomes . Then perform the operation on twice.Time Complexity: per\r\ntest case.\r\n",
    "hint": [
        "Hint 1 Indeed at most operations will be used.",
        "Hint 2 If is even, and you do the operation on twice, then the subarray will all become ."
    ]
}