{
    "link": "https://codeforces.com//contest/658/problem/E",
    "problemId": "53373",
    "problem_idx": "E",
    "shortId": "658E",
    "contest_number": "658",
    "problem_submissions": {
        "E": [
            17004085,
            49157877,
            17061517,
            17156655
        ],
        "D": [
            16999449,
            17015215,
            16997780,
            17002007,
            17001539,
            17001492,
            17003628,
            17003492,
            17003016,
            17002794,
            17003833,
            17004549,
            17006375,
            17005499,
            17005815,
            17005114,
            17019978,
            17005108,
            17005065,
            17003630,
            17006976
        ],
        "C": [
            16995068,
            16993450,
            16995031,
            16997375,
            16996718,
            16996690,
            16995850,
            16997578,
            17001691,
            16996778,
            16998533,
            16997776,
            16998853,
            16997308,
            16999990,
            16997317,
            16999080,
            17004966,
            16999164
        ],
        "B": [
            16992735,
            16994253,
            16992611,
            16991812,
            16993314,
            16992931,
            16992391,
            16993663,
            16993303,
            16993084,
            16992706,
            16992701,
            16994956,
            16993684,
            16993760,
            16992879,
            16993582,
            16992643,
            16994378
        ],
        "A": [
            16990896,
            16990442,
            16990585,
            16990357,
            16991634,
            16990650,
            16990607,
            16990450,
            16991276,
            16991187,
            16990751,
            16990621,
            16991771,
            16990461,
            16991470,
            16990648,
            16991140,
            16990764,
            16991241
        ]
    },
    "name": "E. Bear and Contribution",
    "statement": "Codeforces is a wonderful platform and one its feature shows how much\r\nsomeone contributes to the community. Every registered user has an\r\ninteger number, not necessarily positive. There are registered users and\r\nthe -th of them has contribution .Limak is a little polar bear and he’s\r\nnew into competitive programming. He doesn’t even have an account in\r\nCodeforces but he is able to upvote existing blogs and comments. We\r\nassume that every registered user has infinitely many blogs and\r\ncomments. Limak can spend minutes to read one blog and upvote it.\r\nAuthor’s contribution will be increased by . Limak can spend minutes to\r\nread one comment and upvote it. Author’s contribution will be increased\r\nby . Note that it’s possible that Limak reads blogs faster than\r\ncomments.Limak likes ties. He thinks it would be awesome to see a tie\r\nbetween at least registered users. To make it happen he is going to\r\nspend some time on reading and upvoting. After that, there should exist\r\nan integer value that at least registered users have contribution\r\nexactly .How much time does Limak need to achieve his goal?\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <climits>\n#include <algorithm>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <cassert>\n#include <vector>\n#define all(x) x.begin() , x.end()\n#define fi first\n#define se second\n#define pb push_back\n#define umax( x , y ) x = max( x , (y) )\n#define umin( x , y ) x = min( x , (y) )\n#define For( i , a ) for(int i=1;i<=a;i++)\n#define ort (((b+s) < 0 )? (b+s)/2-1:(b+s)/2)\n#define y2 asrwjaelkf\n#define y1 asseopirwjaelkf\n\nusing namespace std;\n\ninline int read() {\n\tint res = 0 ;int neg ;\n\twhile(true){char ch = getchar();if(ch>='0' && ch<='9' || ch=='-'){if(ch=='-') neg = -1;else neg = 1 , res = ch-'0';break;} }\n\twhile(true){char ch = getchar();if(ch>='0' && ch<='9') res*=10 , res+=ch-'0';else break;}\n\treturn res*neg;\n}\n\ntypedef long long Lint;\ntypedef double db;\ntypedef pair<int,int> ii;\ntypedef pair<int,ii> iii;\n\nconst int maxn = 1000020;\nconst int MOd = 1e9+7;\n\nint a, k, b, c;\nint ar[maxn];\nmultiset <Lint> st[20];\nmultiset <Lint> :: iterator it;\nLint last[20], mal[20], nor[20];\n\nvoid add( int t, int val ) {\n\tint tp = t % 5;\n\tif( tp < 0 ) tp += 5;\n\tif( !st[tp].size() ) last[tp] = t;\n\tif( t > last[tp] ) {\n\t\tmal[tp] += 1ll * c * ((t-last[tp])/5) * st[tp].size();\n\t\tnor[tp] += 1ll * c * ((t-last[tp])/5);\n\t\tlast[tp] = t;\n\t}\n\t//~ if( tp == 1 ) printf(\"%lld\\n\",mal[tp]);\n\tmal[tp] += val;\n\t//~ if( tp == 1 ) printf(\"%lld\\n\",mal[tp]);\n\tst[tp].insert( val-nor[tp] );\n\tif( st[tp].size() > k ) {\n\t\t//~ printf(\"asd %d %d\\n\",tp,(int)st[tp].size());\n\t\tit = st[tp].end();\n\t\tit--;\n\t\tmal[tp] -= nor[tp] + *it;\n\t\tst[tp].erase( it );\n\t}\n}\n\nint main() {\n\t\n\tscanf(\"%d %d %d %d\",&a,&k,&c,&b);\n\t\n\tumin( c, 5*b );\n\t\n\tvector<int> v;\n\t\n\tfor(int i=1;i<=a;i++) {\n\t\tscanf(\"%d\",&ar[i]);\n\t\tv.pb( ar[i] );\n\t\tv.pb( ar[i]+1 );\n\t\tv.pb( ar[i]+2 );\n\t\tv.pb( ar[i]+3 );\n\t\tv.pb( ar[i]+4 );\n\t}\n\tsort( ar+1, ar+1+a );\n\tsort( all( v ) );\n\tv.erase( unique( all( v ) ), v.end() );\n\tLint ans = 1e18;\n\tfor(int i=0,j=1;i<v.size();i++)\t{\n\t\twhile( j <= a && ar[j] <= v[i] ) {\n\t\t\tadd( ar[j], 0 );\n\t\t\tadd( ar[j]+1, b );\n\t\t\tadd( ar[j]+2, b*2 );\n\t\t\tadd( ar[j]+3, b*3 );\n\t\t\tadd( ar[j]+4, b*4 );\n\t\t\tj++;\n\t\t}\n\t\tint tp = v[i] % 5;\n\t\tif( tp < 0 ) tp += 5;\n\t\t//~ printf(\"asd %d %d %lld\\n\",v[i],st[tp].size(),mal[tp]);\n\t\tif( st[tp].size() == k ) umin( ans, mal[tp] );\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Bear and Contribution.json",
    "editorial_link": "https://codeforces.com//blog/entry/44047",
    "editorial": null
}