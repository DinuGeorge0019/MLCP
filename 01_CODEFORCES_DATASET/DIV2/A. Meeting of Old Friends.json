{
    "link": "https://codeforces.com//contest/714/problem/A",
    "problemId": "71340",
    "problem_idx": "A",
    "shortId": "714A",
    "contest_number": "714",
    "problem_submissions": {
        "D": [
            20590320,
            20583180,
            20585303,
            20591178,
            20598481,
            20603112,
            20603107,
            20591657,
            20607398,
            20594965
        ],
        "E": [
            20583639,
            20591013,
            20594645,
            20595036,
            20594100,
            20588546,
            20589480,
            20591788,
            20590582,
            20590355,
            20591414,
            20592977,
            20591323,
            20595335,
            20593848,
            20593101,
            20594938,
            20593282
        ],
        "C": [
            20581597,
            20576253,
            20580207,
            20579112,
            20581726,
            20579957,
            20581444,
            20580430,
            20584899,
            20580286,
            20587146,
            20580603,
            20583085,
            20584188,
            20580648,
            20582009,
            20574786,
            20581508,
            20603553,
            20603507,
            20587376,
            20575278
        ],
        "B": [
            20575974,
            20573949,
            20572686,
            20574205,
            20575669,
            20574973,
            20577284,
            20574274,
            20576588,
            20584157,
            20576158,
            20574917,
            20576728,
            20573716,
            20575150,
            20576582,
            20572425,
            20574534,
            20578364,
            20572180
        ],
        "A": [
            20572717,
            20571323,
            20571430,
            20572051,
            20572511,
            20571569,
            20573550,
            20571884,
            20571837,
            20577675,
            20571701,
            20571878,
            20578985,
            20571577,
            20572052,
            20571803,
            20571360,
            20572597,
            20575524,
            20571322
        ]
    },
    "name": "A. Meeting of Old Friends",
    "statement": "Today an outstanding event is going to happen in the forest hedgehog\r\nFilya will come to his old fried Sonya!Sonya is an owl and she sleeps\r\nduring the day and stay awake from minute to minute inclusive. Also,\r\nduring the minute she prinks and is unavailable for Filya.Filya works a\r\nlot and he plans to visit Sonya from minute to minute\r\ninclusive.Calculate the number of minutes they will be able to spend\r\ntogether.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <set>\n#include <algorithm>\n\nusing namespace std;\n\nlong long Intersect(long long a, long long b, long long c, long long d) {\n    long long answer = min(b, d) - max(a, c) + 1;\n    if (answer < 0)\n        answer = 0;\n    return answer;\n}\n\nint main() {\n    //freopen(\"tema.in\", \"r\", stdin);\n    //freopen(\"tema.out\", \"w\", stdout);\n    long long l1, r1, l2, r2, k;\n    scanf(\"%I64d%I64d%I64d%I64d%I64d\", &l1, &r1, &l2, &r2, &k);\n    long long answer = Intersect(l1, r1, l2, r2);\n    if (k >= l1 && k <= r1 && k >= l2 && k <= r2)\n        answer--;\n    printf(\"%I64d\\n\", answer);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Meeting of Old Friends.json",
    "editorial_link": "https://codeforces.com//blog/entry/47094",
    "editorial": "Lets find two numbers and lower and upper bound on time which guys can\r\nspend together. (, ), (,). If then answer is definitely . In case we\r\nneed to number belongs to the interval. If is it true answer is ,\r\notherwise it is .\r\n"
}