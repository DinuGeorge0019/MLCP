{"link": "https://codeforces.com//contest/302/problem/E", "problemId": "2968", "problem_idx": "E", "shortId": "302E", "contest_number": "302", "problem_submissions": {"D": [3684089, 3679887, 3680082, 3680246, 3683850, 3680310, 3680376, 3680259, 3680223, 3681635, 3678600, 3678628, 3681176, 3681317, 3681731, 3679612, 3680784, 3678798, 3681879, 3681794], "E": [3680203, 3683958, 3694073], "C": [3676172, 3674057, 3674163, 3676673, 3677024, 3677234, 3678166, 3678713, 3676503, 3681655, 3680011, 3678859, 3678342, 3678493, 3677594, 3677844, 3681633, 3678697, 3679406], "B": [3674671, 3676474, 3676473, 3674959, 3674332, 3673847, 3674834, 3674198, 3673753, 3673969, 3674385, 3677257, 3676011, 3674400, 3677785, 3678529, 3676411, 3676274, 3675110], "A": [3673877, 3675146, 3675527, 3673440, 3673268, 3673155, 3673834, 3673327, 3673136, 3674016, 3673667, 3676333, 3674135, 3673176, 3673506, 3673361, 3675794, 3673661, 3673261]}, "name": "E. Yaroslav and Algorithm", "statement": "Yaroslav likes algorithms. We\u2019ll describe one of his favorite\r\nalgorithms. The algorithm receives a string as the input. We denote this\r\ninput string as . The algorithm consists of some number of command.\r\nommand number looks either as , or as , where and are some possibly\r\nempty strings of length at most , consisting of digits and characters\r\n\"\". At each iteration, the algorithm looks for a command with the\r\nminimum index , such that occurs in as a substring. If this command is\r\nnot found the algorithm terminates. Let\u2019s denote the number of the found\r\ncommand as . In string the first occurrence of the string is replaced by\r\nstring . If the found command at that had form , then the algorithm\r\ncontinues its execution and proceeds to the next iteration. Otherwise,\r\nthe algorithm terminates. The value of string after algorithm\r\ntermination is considered to be the output of the algorithm. Yaroslav\r\nhas a set of positive integers, he needs to come up with his favorite\r\nalgorithm that will increase each of the given numbers by one. More\r\nformally, if we consider each number as a string representing the\r\ndecimal representation of the number, then being run on each of these\r\nstrings separately, the algorithm should receive the output string that\r\nis a recording of the corresponding number increased by one.Help\r\nYaroslav.\r\n", "solutions": ["#include <iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nchar s[1000];\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n ; i++)\n\t{\n\t\tscanf(\"%s\", &s);\n\t}\n\tfor (int i = 0; i < 10; i++)\n\tcout << \"??\" << i  << \">>\" << i << \"??\\n\";\n\tcout << \"??>>?\\n\";\n\tfor (int i = 0; i < 9; i++)\n\t{\n\t\tcout << i << \"?<>\" << i + 1 << \"\\n\";\n\t}\n\tcout << \"9?>>?0\\n\";\n\tcout << \"?<>1\\n\";\n\tcout << \">>??\\n\"; \n}\n"], "input": "", "output": "", "tags": [], "dificulty": "2500", "interactive": false}