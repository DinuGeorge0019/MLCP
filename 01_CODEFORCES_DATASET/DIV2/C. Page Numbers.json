{"link": "https://codeforces.com//contest/34/problem/C", "problemId": "161", "problem_idx": "C", "shortId": "34C", "contest_number": "34", "problem_submissions": {"E": [149443, 149486, 149296, 149692, 149695, 149861, 149815, 149892, 150067, 150121, 150338, 150361, 149747, 150891], "D": [148876, 148578, 148654, 148286, 149242, 149046, 149356, 149232, 149202, 149561, 149681, 149837, 148969, 148779], "C": [148446, 148259, 148380, 147901, 148723, 148716, 149028, 148780, 148867, 148942, 149049, 149444, 1288885, 148173], "B": [147829, 147766, 147991, 148454, 148119, 148124, 148114, 148340, 148112, 148042, 148372, 148576, 148152, 147806, 147813], "A": [147656, 147624, 147815, 147607, 147780, 147787, 147700, 148115, 147723, 147796, 147956, 147948, 147884, 147651]}, "name": "C. Page Numbers", "statement": "Bersoft company is working on a new version of its most popular text\r\neditor Bord 2010. Bord, like many other text editors, should be able to\r\nprint out multipage documents. A user keys a sequence of the document\r\npage numbers that he wants to print out (separates them with a comma,\r\nwithout spaces).Your task is to write a part of the program, responsible\r\nfor standardization of this sequence. Your program gets the sequence,\r\nkeyed by the user, as input. The program should output this sequence in\r\nformat -,-,...,-, where for all from to , and . The new sequence should\r\ncontain all the page numbers, keyed by the user, and nothing else. If\r\nsome page number appears in the input sequence several times, its\r\nappearances, starting from the second one, should be ignored. If for\r\nsome element from the new sequence , this element should be output as ,\r\nand not as .For example, sequence should be output as .\r\n", "solutions": ["#include<cstdio>\n#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<list>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<string>\n#include<ctime>\nusing namespace std;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef pair <int,int> ii;\n#define sz(a) int((a).size())\n#define pb push_back\nconst int INF = 2147483647;\nconst double PI = 3.141592653589793;\n\nset <int> zbior;\nset<int>::iterator it;\nstring s;\nchar t[1000000];\nint last,pocz,i,a;\nbool bylo;\n\nint main () {\nscanf (\"%s\",&t); s=t;\ni=0;\nzbior.clear();\nwhile (i<s.size()) {\n      a=0;\n      while (i<s.size() && s[i]!=',') {\n            a= a*10 + int(s[i])-48;\n            i++;\n      }\n      zbior.insert(a);\n      i++;\n}\nlast = -10; \nbylo=false;\nfor (it=zbior.begin();it!=zbior.end();it++) {\n    if (last < 0) {last = pocz = *it;}\n    else if (*it!=last+1) {\n         if (bylo) printf(\",\"); else bylo=true;\n         if (pocz==last) printf(\"%d\",pocz); else printf(\"%d-%d\",pocz,last);\n         pocz = *it;\n    }\n    last = *it;\n}\nif (bylo) printf(\",\"); else bylo=true;\nif (pocz==last) printf(\"%d\",pocz); else printf(\"%d-%d\",pocz,last);\nprintf(\"\\n\");\n      \n\nreturn 0;\n}\n"], "input": "", "output": "", "tags": ["expression parsing", "implementation", "sortings", "strings"], "dificulty": "1300", "interactive": false}