{
    "link": "https://codeforces.com//contest/1332/problem/B",
    "problemId": "578662",
    "problem_idx": "B",
    "shortId": "1332B",
    "contest_number": "1332",
    "problem_submissions": {
        "G": [
            74991585,
            75037266,
            77351427
        ],
        "F": [
            74972207,
            74968358,
            74971720,
            74973348,
            74978859,
            74982724,
            74982735,
            74986275,
            74983269,
            74987837,
            74986665,
            74991793,
            74983515,
            74979782,
            74972196,
            74981046,
            74990576,
            74985479,
            74988801,
            74990228
        ],
        "E": [
            74961161,
            74955523,
            74954162,
            74962710,
            74964351,
            74963597,
            74954423,
            74965477,
            74965579,
            74964400,
            74967235,
            74963711,
            74965887,
            74966494,
            74989155,
            74967207,
            74974070,
            74976881,
            74974061,
            74976693
        ],
        "D": [
            74952985,
            74945715,
            74946665,
            74947888,
            74950207,
            74948751,
            74939741,
            74946829,
            74947089,
            74946824,
            74948968,
            74945728,
            74948946,
            74959413,
            74956458,
            74959082,
            74952408,
            74962224,
            74953788,
            74952090
        ],
        "C": [
            74942005,
            74937624,
            74936343,
            74941037,
            74943187,
            74945247,
            74948388,
            74939023,
            74936776,
            74940250,
            74942517,
            74933392,
            74937059,
            74947682,
            74933984,
            74947387,
            74935824,
            74944324,
            74945827,
            74930594
        ],
        "B": [
            74937320,
            74934172,
            74933187,
            74935530,
            74936050,
            74936599,
            74943429,
            74933909,
            74931708,
            74932124,
            74935133,
            74939689,
            74933624,
            74939412,
            74938935,
            74936225,
            74945372,
            74938477,
            74936882,
            74941959
        ],
        "A": [
            74930167,
            74929341,
            74931394,
            74930114,
            74930077,
            74932449,
            74934529,
            74928977,
            74928761,
            74928547,
            74928820,
            74928500,
            74928970,
            74929648,
            74959446,
            74929583,
            74931416,
            74933421,
            74928735,
            74938510
        ]
    },
    "name": "B. Composite Coloring",
    "statement": "A positive integer is called if it can be represented as a product of\r\ntwo positive integers, both greater than 1. For example, the following\r\nnumbers are composite: 6, 4, 120, 27. The following numbers aren\u2019t: 1,\r\n2, 3, 17, 97.Alice is given a sequence of n composite numbers a_1,a_2,\r\nldots,a_n.She wants to choose an integer m\r\nle 11 and color each element one of m colors from 1 to m so that: for\r\neach color from 1 to m there is at least one element of this color; each\r\nelement is colored and colored exactly one color; the greatest common\r\ndivisor of any two elements that are colored the same color is greater\r\nthan 1, i.e.\r\ngcd(a_i, a_j)>1 for each pair i, j if these elements are colored the\r\nsame color. Note that equal elements can be colored different colors you\r\njust have to choose one of m colors for each of the indices from 1 to\r\nn.Alice showed already that if all a_i\r\nle 1000 then she can always solve the task by choosing some m\r\nle 11.Help Alice to find the required coloring. Note that you don\u2019t have\r\nto minimize or maximize the number of colors, you just have to find the\r\nsolution with some m from 1 to 11.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\ntemplate <class T>\ninline void read(T &res)\n{\n\tres = 0; bool bo = 0; char c;\n\twhile (((c = getchar()) < '0' || c > '9') && c != '-');\n\tif (c == '-') bo = 1; else res = c - 48;\n\twhile ((c = getchar()) >= '0' && c <= '9')\n\t\tres = (res << 3) + (res << 1) + (c - 48);\n\tif (bo) res = ~res + 1;\n}\n\nconst int N = 1005;\n\nint n, a[N], minp[N], to[N];\n\nint main()\n{\n\tint T; read(T);\n\tfor (int i = 4; i <= 1000; i++)\n\t\tfor (int j = 2; j <= i; j++)\n\t\t\tif (i % j == 0) {minp[i] = j; break;}\n\twhile (T--)\n\t{\n\t\tread(n);\n\t\tfor (int i = 1; i <= n; i++) read(a[i]), to[i] = minp[a[i]];\n\t\tstd::sort(to + 1, to + n + 1);\n\t\tint m = std::unique(to + 1, to + n + 1) - to - 1;\n\t\tprintf(\"%d\\n\", m);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tprintf(\"%d \", std::lower_bound(to + 1, to + m + 1, minp[a[i]]) - to);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Composite Coloring.json",
    "editorial_link": "https://codeforces.com//blog/entry/75432",
    "editorial": "The solution is obvious once one note that for any composite number ,\r\nthere exists a prime such that and is divisible by . Coincidentally,\r\nthere are exactly primes below . Thus, one can color balls according to\r\ntheir smallest divisor. That works because if all numbers of the same\r\ncolor have the same divisor then each pair has at least this divisor in\r\ntheir GCD.\r\n"
}