{
    "link": "https://codeforces.com//contest/490/problem/A",
    "problemId": "17754",
    "problem_idx": "A",
    "shortId": "490A",
    "contest_number": "490",
    "problem_submissions": {
        "F": [
            8817515,
            8819985,
            8842361,
            8817338,
            8817935,
            8817635,
            8855350,
            8819845,
            8823757,
            8823458,
            8821739,
            8820145
        ],
        "E": [
            8815308,
            8814782,
            8815162,
            8819489,
            8815467,
            8822097,
            8817785,
            8817507,
            8817956,
            8818730,
            8821845,
            8820184,
            8819671,
            8820855,
            8817217,
            8822605,
            8820689
        ],
        "D": [
            8813861,
            8818202,
            8817853,
            8814442,
            8820510,
            8816678,
            8814870,
            8815149,
            8814552,
            8815859,
            8816515,
            8814018,
            8816647,
            8817008,
            8816236,
            8820552,
            8814405,
            8814971,
            8817626,
            8817113
        ],
        "C": [
            8812444,
            8815662,
            8813217,
            8812979,
            8814331,
            8811719,
            8813130,
            8812621,
            8821924,
            8813827,
            8814389,
            8812560,
            8812032,
            8814787,
            8814945,
            8814699,
            8813034,
            8813032,
            8813495,
            8815850
        ],
        "B": [
            8811804,
            8812050,
            8811800,
            8811893,
            8812411,
            8813404,
            8812022,
            8811615,
            8813128,
            8812542,
            8812723,
            8811783,
            8814873,
            8813230,
            8813299,
            8812788,
            8811816,
            8811980,
            8812324,
            8813904
        ],
        "A": [
            8810238,
            8810285,
            8810322,
            8810378,
            8810319,
            8812020,
            8810257,
            8810233,
            8811808,
            8810284,
            8810467,
            8810179,
            8810618,
            8811059,
            8810734,
            8811110,
            8810293,
            8810358,
            8810190,
            8811062
        ]
    },
    "name": "A. Team Olympiad",
    "statement": "The School 0 of the capital of Berland has children studying in it. All\r\nthe children in this school are gifted: some of them are good at\r\nprogramming, some are good at maths, others are good at PE (Physical\r\nEducation). Hence, for each child we know value : , if the -th child is\r\ngood at programming, , if the -th child is good at maths, , if the -th\r\nchild is good at PE Each child happens to be good at exactly one of\r\nthese three subjects.The Team Scientific Decathlon Olympias requires\r\nteams of three students. The school teachers decided that the teams will\r\nbe composed of three children that are good at different subjects. That\r\nis, each team must have one mathematician, one programmer and one\r\nsportsman. Of course, each child can be a member of no more than one\r\nteam.What is the maximum number of teams that the school will be able to\r\npresent at the Olympiad? How should the teams be formed for that?\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint n, m;\nvector<int> a[4];\n\nint main(){\n     //freopen(\"a.in\", \"r\", stdin);\n     //freopen(\"a.out\", \"w\", stdout);\n     scanf(\"%d\", &n);\n     for (int i = 0; i < 4; i++) a[i].clear();\n     for (int i = 1; i <= n; i++)\n     {\n          int x;\n          scanf(\"%d\", &x);\n          a[x].push_back(i);\n     }\n     int m = min(min(a[1].size(), a[2].size()), a[3].size());\n     printf(\"%d\\n\", m);\n     for (int i = 0; i < m; i++) printf(\"%d %d %d\\n\", a[1][i], a[2][i], a[3][i]);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Team Olympiad.json",
    "editorial_link": "https://codeforces.com//blog/entry/14849",
    "editorial": "The teams could be formed using greedy algorithm. We can choose any\r\nthree children with different skills who are not participants of any\r\nteam yet and form a new team using them. After some time we could not\r\nform any team, so the answer to the problem is minimum of the number of\r\nones, twos and threes in given array. We can get solution if we add\r\nchildren with different skills into three different arrays. Also the\r\nproblem could be solved in every iteration find new three children for\r\nnew team.\r\n"
}