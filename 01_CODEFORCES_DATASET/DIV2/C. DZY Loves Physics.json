{
    "link": "https://codeforces.com//contest/445/problem/C",
    "problemId": "11257",
    "problem_idx": "C",
    "shortId": "445C",
    "contest_number": "445",
    "problem_submissions": {
        "E": [
            7031344,
            7029564,
            7031729,
            7068922,
            7035909,
            7034442,
            7033387
        ],
        "C": [
            7025323,
            7027971,
            7026637,
            7030980,
            7028071,
            7028481,
            7024658,
            7025212,
            7025034,
            7025214,
            7025763,
            7024802,
            7023869,
            7024049,
            7023827,
            7026131,
            7026431
        ],
        "B": [
            7022932,
            7022406,
            7022331,
            7024786,
            7025216,
            7025923,
            7030833,
            7024955,
            7022701,
            7022564,
            7022789,
            7023593,
            7023467,
            7022262,
            7022269,
            7022887,
            7024673,
            7023418,
            7023287
        ],
        "A": [
            7021792,
            7021809,
            7021708,
            7022060,
            7022326,
            7021941,
            7023928,
            7023130,
            7021718,
            7021716,
            7021763,
            7021740,
            7021975,
            7024184,
            7027019,
            7027895,
            7025904,
            7022028,
            7021858
        ],
        "D": [
            7026779,
            7029902,
            7028957,
            7032143,
            7031896,
            7053884,
            7033436
        ]
    },
    "name": "C. DZY Loves Physics",
    "statement": "Almost everything has density, even a graph. We define the density of a\r\nnon-directed graph (nodes and edges of the graph have some values) as\r\nfollows: where is the sum of the values of the nodes, is the sum of the\r\nvalues of the edges.Once DZY got a graph , now he wants to find a\r\nconnected induced subgraph of the graph, such that the density of is as\r\nlarge as possible.An induced subgraph of a graph is a graph that\r\nsatisfies: ; edge if and only if , and edge ; the value of an edge in is\r\nthe same as the value of the corresponding edge in , so as the value of\r\na node. Help DZY to find the induced subgraph with maximum density. Note\r\nthat the induced subgraph you choose must be connected.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst double pi=acos (-1.0);\nconst double eps=1e-8 ;\n//const ll INF=(_I64_MAX)/2;\n//#pragma comment(linker, \"/STACK:102400000,102400000\")\nconst int inf=0x3f3f3f3f ;\n#define maxx(a) memset(a, 0x3f, sizeof(a))\n#define zero(a) memset(a, 0, sizeof(a))\n#define FILL(a,b) memset(a, b, sizeof(a))\n#define REP(i,a,b) for(i=a;i<b;i++)\n#define rep(i,n) REP(i,0,n)\n#define srep(i,n) for(i = 1;i <= n;i ++)\n#define snuke(c,itr) for( __typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n#define MP make_pair\n#define fi first\n#define se second\ntypedef pair <int, int> PII;\ntypedef pair <ll, ll> PX;\n\n\nvoid work() {\n\n\n}\n\ndouble a[555];\n\nint main ()\n{\n#ifdef LOCAL\n     freopen(\"in.txt\" ,\"r\", stdin);\n     // freopen (\"out.txt\",\"w\",stdout);\n#endif\n     int n,m;\n     cin>>n>>m;\n     int i,j;\n     srep(i,n) scanf(\"%lf\",a+i);\n     double z;\n     int x,y;\n     double ans = 0;\n     rep(i,m) {\n         scanf(\"%d%d%lf\",&x,&y,&z);\n         ans = max(ans, (a[x] + a[y])/z  );\n     }\n     printf(\"%.11lf\\n\",ans);\n\n     return 0 ;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "graphs",
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. DZY Loves Physics.json",
    "editorial_link": "https://codeforces.com//blog/entry/12959",
    "editorial": "If there is a connected induced subgraph containing more than 2 nodes with the maximum density. The density of every connected induced subgraph of it that contains only one edge can be represented as , where u,?v are the values of the two nodes linked by the edge. The density of the bigger connected induced subgraph is at most .\n\nIf , and for every edge, . Then we'll have u?+?v?<?Bc, and , and , it leads to contradiction.\n\nSo just check every single node, and every 2 nodes linked by an edge.\n\nThe time complexity is O(n?+?m)."
}