{
    "link": "https://codeforces.com//contest/1956/problem/E1",
    "problemId": "2588545",
    "problem_idx": "E1",
    "shortId": "1956E1",
    "contest_number": "1956",
    "problem_submissions": {
        "E2": [
            256586454,
            256520068,
            256593913,
            256584316,
            256530034,
            256531943,
            256617463,
            256530865,
            256802937,
            256648508,
            256552517
        ],
        "F": [
            256530495,
            256522758,
            256514971,
            256533550,
            256538415
        ],
        "E1": [
            256505148,
            256506481,
            256593956,
            256525162,
            256511611,
            256531463,
            256583839,
            256517737,
            256520564,
            256527984,
            256521079,
            256525566,
            256521334,
            256530001,
            256521675,
            256525396,
            256535359,
            256525874,
            256529271
        ],
        "D": [
            256490682,
            256484072,
            256499658,
            256496427,
            256507516,
            256497830,
            256509043,
            256518890,
            256503281,
            256502580,
            256513745,
            256510694,
            256502427,
            256508396,
            256502061,
            256511658,
            256506094,
            256504568,
            256506260,
            256504200
        ],
        "C": [
            256481140,
            256475175,
            256487231,
            256481616,
            256488132,
            256485599,
            256493794,
            256476985,
            256483699,
            256486860,
            256497932,
            256487782,
            256477155,
            256486111,
            256486350,
            256491079,
            256480941,
            256486971,
            256480982,
            256485785
        ],
        "B": [
            256472484,
            256473000,
            256480823,
            256472874,
            256473325,
            256479701,
            256477112,
            256472735,
            256473445,
            256477448,
            256476511,
            256477221,
            256472449,
            256475342,
            256477910,
            256471353,
            256472967,
            256472966,
            256473168,
            256475591
        ],
        "A": [
            256471122,
            256471242,
            256472786,
            256473979,
            256471107,
            256479866,
            256471283,
            256471128,
            256471039,
            256472531,
            256472351,
            256472781,
            256471086,
            256471438,
            256477739,
            256470907,
            256471074,
            256471160,
            256471053,
            256472375
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/128426",
    "editorial": "If four consecutive monsters have energy level x,y,z,w (x,y,z,w>0)\n and they did not die after t\n rounds of spells, then y\n will receive at least t\n points of damage, z\n will receive at least (t?1)+(t?2)+?=O(t2)\n of damage, and w\n will receive at least O(t3)\n of damage.\n\nThat is to say, let V=maxni=1ai\n, after O(V???3)\n rounds, at least one of x,y,z,w\n will die.\n\nSo, we can simulate the process by brute force until there are no four consecutive alive monsters, and then the problem is reduced to the one described in Hint 2.\n\nIf four consecutive monster have energy level 0,x,y,z (x,y,z>0)\n, x\n will remain alive, y\n will die at last and sending D=(y?x)+(y?2x)+?+(ymodx)\n damage to z\n before that. Therefore, z\n will remain alive if and only if z>D\n.\n\nThe time complexity is O(nV???3)\n.\n\nBonus: Actually, it can be shown that after O(V???k)\n rounds, there will be no k\n consecutive alive monsters. Making k\n bigger than 3\n can further reduce the time complexity, but it will be harder to implement and optimize little on actual performance.",
    "name": "E1. Nene vs. Monsters  Easy Version ",
    "statement": "Nene is fighting with n monsters, located in a circle. These monsters\r\nare numbered from 1 to n, and the i-th (1\r\nle i\r\nle n) monster’s current energy level is a_i.Since the monsters are too\r\nstrong, Nene decided to fight with them using the spell. When Nene uses\r\nthis spell, the following actions happen in the following order : The\r\n1-st monster attacks the 2-nd monster; The 2-nd monster attacks the 3-rd\r\nmonster;\r\nldots The (n-1)-th monster attacks the n-th monster; The n-th monster\r\nattacks the 1-st monster. When the monster with energy level x attacks\r\nthe monster with the energy level y, the energy level of the defending\r\nmonster becomes\r\nmax(0, y-x) (the energy level of the attacking monster remains equal to\r\nx).Nene is going to use this spell 10^{100} times and deal with the\r\nmonsters that will still have a non-zero energy level herself. She wants\r\nyou to determine which monsters will have a non-zero energy level once\r\nshe will use the described spell 10^{100} times.\r\n",
    "solutions": [
        "// Problem: E1. Nene vs. Monsters (Easy Version)// Contest: Codeforces - Codeforces Round 939 (Div. 2)// URL: https://mirror.codeforces.com/contest/1956/problem/E1// Memory Limit: 256 MB// Time Limit: 2000 ms// // Powered by CP Editor (https://cpeditor.org) // Author: EnucAI#include <bits/stdc++.h> #ifdef LOCAL#include \"debug.h\"#else#define D(...) ((void)0)#endif using ll = long long;using ull = unsigned long long;using ld = long double;using vi = std::vector<int>;using pii = std::pair<int, int>; constexpr int inf = std::numeric_limits<int>::max() / 2;constexpr ll infll = std::numeric_limits<ll>::max() / 2;constexpr ld eps = 1e-8l; #define all(x) (x).begin(), (x).end()#define sz(x) ((int)((x).size()))#define rep(i, j, k) for (int i = (j); i <= (k); i++)#define per(i, j, k) for (int i = (j); i >= (k); i--)#define fi first#define se second#define mp std::make_pair#define pb push_back#define ppb pop_back#define eb emplace_back template <class X, class Y> void chkmax(X &x, const Y &y) { if (x < y) x = y; }template <class X, class Y> void chkmin(X &x, const Y &y) { if (x > y) x = y; } constexpr int maxn = 2e5 + 5; int n, a[maxn]; void solve() {  std::cin >> n;  rep(i, 1, n) std::cin >> a[i];  while (true) {    rep(i, 1, n) {      int j = i == n ? 1 : i + 1;      a[j] = std::max(0, a[j] - a[i]);    }    bool ok = true;    rep(i, 1, n) {      int j = i == n ? 1 : i + 1;      int k = j == n ? 1 : j + 1;      if (a[i] && a[j] && a[k]) {        ok = false;        break;      }    }    if (ok) break;  }  rep(i, 1, n) {    int j = i == n ? 1 : i + 1;    if (a[i] && a[j]) a[j] = 0;  }  vi ans;  rep(i, 1, n) if (a[i]) ans.pb(i);  std::cout << sz(ans) << '\\n';  for (int i : ans) std::cout << i << \" \\n\"[i == ans.back()];} int main() {  std::cin.tie(nullptr)->sync_with_stdio(false);  int t;  std::cin >> t;  while (t--) solve();}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E1. Nene vs. Monsters  Easy Version .json",
    "hint": []
}