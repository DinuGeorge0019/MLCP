{
    "link": "https://codeforces.com//contest/58/problem/B",
    "problemId": "303",
    "problem_idx": "B",
    "shortId": "58B",
    "contest_number": "58",
    "problem_submissions": {
        "D": [
            270336,
            270674,
            270811,
            270851,
            270887,
            271132,
            271142,
            271330,
            271389,
            271766,
            271154
        ],
        "C": [
            269533,
            270101,
            270025,
            269917,
            270200,
            269750,
            270685,
            270162,
            270751,
            270141,
            269530,
            269933,
            269606,
            269716,
            271773
        ],
        "B": [
            268900,
            268864,
            269230,
            269259,
            269499,
            268848,
            268646,
            268854,
            269609,
            270244,
            268607,
            269049,
            268695,
            268750,
            269087,
            268968
        ],
        "A": [
            268535,
            268577,
            268985,
            268522,
            268973,
            268444,
            268395,
            268432,
            268537,
            268387,
            268418,
            268427,
            268476,
            268567,
            268554
        ]
    },
    "name": "B. Coins",
    "statement": "In Berland a money reform is being prepared. New coins are being\r\nintroduced. After long economic calculations was decided that the most\r\nexpensive coin should possess the denomination of exactly Berland\r\ndollars. Also the following restriction has been introduced for comfort:\r\nthe denomination of each coin by the denomination of any cheaper coin.\r\nIt is known that among all the possible variants the variant with the\r\nlargest number of new coins will be chosen. Find this variant. Print in\r\nthe order of decreasing of the coins’ denominations.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n#define MM(a , x) memset(a , x , sizeof(a))\n#define sqr(x) ((x) * (x))\n#define abs(x) ((x > 0) ? (x) : -(x))\n#define REP(i , n) for ((i) = 0; (i) < (n); ++(i))\n#define FOR(i , a , b) for ((i) = (a); (i) <= (b); ++(i))\n#define FORD(i , a , b) for ((i) = (a); (i) >= (b); --(i))\ntypedef long long LL;\n\nint n , m;\n\nint main()\n{\n\tcin >> n;\n\tint i , j , k;\n\twhile (n > 1)\n\t{\n\t\tprintf(\"%d \" , n);\n\t\tFOR (i , 2 , (int)sqrt((double)n)) if (n % i == 0) break;\n\t\tif (n % i == 0) n /= i; else n = 1;\n\t}\n\tprintf(\"1\\n\");\n\treturn 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Coins.json",
    "editorial_link": "https://codeforces.com//blog/entry/1771",
    "editorial": "This problem also have greedy solution: we run down all number from 2 and greater and while denomination of the last added to answer coin is divisible by current number, we divide and increase answer.\nYou can prove correctness, if you take a look at prime factorizations of coins' denominations. In each next denomination each prime have less or equal power than the current one (it's equivalent to 'a divide b'). Obliviously, if summary degree of primes decreases at least two (for example, we had numbera?=?x· y· z (where y,?z?>?1, and the current number is b?=?x), then we can add one more coin with demonitaion a?>?c?=?x· y?>?b. So, in the optimal answer sum of degrees decreasing at exactly one. Our greedy algorithm do exactly what it need.",
    "hint": []
}