{"link": "https://codeforces.com//contest/514/problem/E", "problemId": "22327", "problem_idx": "E", "shortId": "514E", "contest_number": "514", "problem_submissions": {"D": [9843225, 9846055, 9837556, 9859465, 9840591, 9843851, 9839460, 9844414, 9842178, 9845163, 9846841, 9842086, 9846251, 9848651, 9842924, 9846782, 9849156, 9841878, 9846890, 9847267], "C": [9841163, 9837943, 9841032, 9837323, 9841110, 9846267, 9840562, 9847764, 9841056, 9842088, 9846232, 10793637, 9841248, 9846908, 9840170, 9843407, 9848493, 9849033, 9841377], "B": [9835974, 9834205, 9834220, 9843917, 9833123, 9834665, 9840756, 9834379, 9834140, 9837595, 9836572, 9835808, 9834718, 9833573, 9839815, 9834202, 9838863, 9839593, 9833631, 9835941], "E": [9834062, 9844124, 10054737, 19616877, 9857316, 9848834, 9874776, 9849125, 9848927, 9849783, 9853978], "A": [9830385, 9849694, 9830594, 9830658, 9831890, 10621817, 9830350, 9831307, 9831472, 9830971, 9833065, 9834571, 9832664, 9831254, 9834249, 9833669, 9831211, 9830665, 9833485]}, "name": "E. Darth Vader and Tree", "statement": "When Darth Vader gets bored, he sits down on the sofa, closes his eyes\r\nand thinks of an infinite rooted tree where each node has exactly sons,\r\nat that for each node, the distance between it an its -th left child\r\nequals to . The Sith Lord loves counting the number of nodes in the tree\r\nthat are at a distance at most from the root. The distance is the sum of\r\nthe lengths of edges on the path between nodes.But he has got used to\r\nthis activity and even grew bored of it. \u2019Why does he do that, then?\u2019\r\nyou may ask. It\u2019s just that he feels superior knowing that only he can\r\nsolve this problem. Do you want to challenge Darth Vader himself? Count\r\nthe required number of nodes. As the answer can be rather large, find it\r\nmodulo .\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define SZ(x) ((int)(x).size())\n#define fi first\n#define se second\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\ntypedef vector<ll> VL;\ntypedef vector<VL> matrix;\nmatrix mul(const matrix &a,const matrix &b) {\n\tint n=SZ(a);\n\tmatrix c(n,VL(n,0));\n\trep(i,0,n) rep(j,0,n) rep(k,0,n) c[i][j]=(c[i][j]+a[i][k]*b[k][j])%mod;\n\treturn c;\n}\nvoid multo(matrix &a,const matrix &b) {\n\tint n=SZ(a);\n\tmatrix c(n,VL(n,0));\n\trep(i,0,n) rep(j,0,n) rep(k,0,n) c[i][j]=(c[i][j]+a[i][k]*b[k][j])%mod;\n\trep(i,0,n) rep(j,0,n) a[i][j]=c[i][j];\n}\nmatrix add(const matrix &a,const matrix &b) {\n\tint n=SZ(a);\n\tmatrix c(n,VL(n,0));\n\trep(i,0,n) rep(j,0,n) {\n\t\tc[i][j]=a[i][j]+b[i][j];\n\t\tif (c[i][j]>=mod) c[i][j]-=mod;\n\t}\n\treturn c;\n}\nvoid addto(matrix &a,const matrix &b) {\n\tint n=SZ(a);\n\trep(i,0,n) rep(j,0,n) { a[i][j]+=b[i][j]; if (a[i][j]>=mod) a[i][j]-=mod;}\n}\nmatrix unit(int n,int w=1) {\n\tmatrix c(n,VL(n,0));\n\trep(i,0,n) c[i][i]=w;\n\treturn c; \n}\nmatrix powmod(matrix a,ll b) {\n\tint n=SZ(a);\n\tmatrix res=unit(n);\n\tfor (;b;b>>=1) { if(b&1) multo(res,a);multo(a,a);}\n\treturn res;\n}\nmatrix powsmod(matrix a,ll b) {\n\tint n=SZ(a);\n\tmatrix res=unit(n),_a=a;\n\tint k=0;for (;b>>k;k++);--k;\n\twhile(--k>=0) {\n\t\taddto(a,unit(n));multo(res,a);\n\t\taddto(a,unit(n,-1));multo(a,a);\n\t\tif ((b>>k)&1) multo(res,_a),addto(res,unit(n)),multo(a,_a);\n\t}\n\treturn res;\n}\nvoid print(const matrix &a) {\n\tint n=SZ(a);\n\trep(i,0,n) {rep(j,0,n) cout<<a[i][j]<<\" \";puts(\"\");}\n\tputs(\"\");\n}\n\nint n,x,p,cnt[110];\nint main() {\n\tscanf(\"%d%d\",&n,&x);\n\trep(i,0,n) {\n\t\tscanf(\"%d\",&p);\n\t\tcnt[p]++;\n\t}\n\tmatrix base=unit(102,0);\n\tbase[101][101]=1;\n\trep(i,0,100) base[i][i+1]=1;\n\trep(i,1,100+1) base[i-1][0]=cnt[i];\n\tbase[101][0]=1;\n\tbase=powmod(base,x+1);\n\tprintf(\"%I64d\\n\",base[101][0]);\n}\n"], "input": "", "output": "", "tags": ["dp", "matrices"], "dificulty": "2200", "interactive": false}