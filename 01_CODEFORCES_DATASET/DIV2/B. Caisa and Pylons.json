{
    "link": "https://codeforces.com//contest/463/problem/B",
    "problemId": "13410",
    "problem_idx": "B",
    "shortId": "463B",
    "contest_number": "463",
    "problem_submissions": {
        "E": [
            7638960,
            7637193,
            7682816,
            7638248,
            7639853,
            7638211,
            7637973,
            7639823,
            7643707,
            7637460,
            7639583,
            7639708,
            7646111,
            7680392
        ],
        "D": [
            7633516,
            7634297,
            7633801,
            7632252,
            7635569,
            7633746,
            7635006,
            7633676,
            7631296,
            7637376,
            7629043,
            7638633,
            7636946,
            7634549,
            7632611,
            7631941,
            7635806,
            7635047,
            7633827
        ],
        "A": [
            7632250,
            7626691,
            7626688,
            7627018,
            7627107,
            7626706,
            7644040,
            7631576,
            7626744,
            7634237,
            7634275,
            7626965,
            7627191,
            7627423,
            7627095,
            7627639,
            7628035,
            7635333
        ],
        "B": [
            7630537,
            7627110,
            7627719,
            7627619,
            7629633,
            7628175,
            7631202,
            7629983,
            7627256,
            7633605,
            7632837,
            7629106,
            7628563,
            7629250,
            7629192,
            7628955,
            7630266,
            7636050
        ],
        "C": [
            7628696,
            7632900,
            7632098,
            7629603,
            7634187,
            7640208,
            7633142,
            7628662,
            7678669,
            7631060,
            7637636,
            7632929,
            7631029,
            7638701,
            7635241,
            7632886,
            7633425,
            7630271
        ]
    },
    "name": "B. Caisa and Pylons",
    "statement": "Caisa solved the problem with the sugar and now he is on the way back to\r\nhome. Caisa is playing a mobile game during his path. There are pylons\r\nnumbered from to in this game. The pylon with number has zero height,\r\nthe pylon with number has height . The goal of the game is to reach -th\r\npylon, and the only move the player can do is to jump from the current\r\npylon (let’s denote its number as ) to the next one (its number will be\r\n). When the player have made such a move, its energy increases by (if\r\nthis value is negative the player loses energy). The player must have\r\nnon-negative amount of energy at any moment of the time. Initially Caisa\r\nstand at pylon and has energy. The game provides a special opportunity:\r\none can pay a single dollar and increase the height of anyone pylon by\r\none. Caisa may use that opportunity several times, but he doesn’t want\r\nto spend too much money. What is the minimal amount of money he must\r\npaid to reach the goal of the game?\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <set>\n#include <string>\n#include <functional>\n\ntypedef long long lld;\nconst int N = 100000 + 5;\n\nint n;\nlld A[N];\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%I64d\",A+i);\n\t}\n\tlld sum = 0,vmin = 0;\n\tfor (int i = 2; i <= n; ++ i) {\n\t\tsum += A[i-1] - A[i];\n\t\tvmin = std::min(vmin,sum);\n\t}\n\tprintf(\"%I64d\\n\",A[1]-vmin);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Caisa and Pylons.json",
    "editorial_link": "https://codeforces.com/blog/entry/13631",
    "editorial": "We have to use greedy method. Start from the first element and pass all the elements in order(also update by the energy).When energy < 0, add abs(energy) to solution and energy becomes 0 or we can find the answer by binary search.",
    "hint": []
}