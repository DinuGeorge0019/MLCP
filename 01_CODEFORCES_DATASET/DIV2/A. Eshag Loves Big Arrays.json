{
    "link": "https://codeforces.com//contest/1529/problem/A",
    "problemId": "994168",
    "problem_idx": "A",
    "shortId": "1529A",
    "contest_number": "1529",
    "problem_submissions": {
        "E": [
            117241256,
            117224077,
            117234541,
            117233577,
            117569320,
            117237517,
            117242490,
            117246187,
            117240165,
            117245259,
            117241507,
            117250798,
            117245729,
            117250742,
            117250857,
            117218644
        ],
        "D": [
            117230306,
            117212621,
            117202664,
            117207279,
            117225346,
            117220644,
            117216468,
            117216196,
            117213173,
            117222042,
            117220584,
            117225498,
            117227881,
            117216922,
            117220354,
            117229060,
            117222399,
            117222507,
            117238884
        ],
        "C": [
            117214605,
            117199641,
            117194393,
            117203572,
            117194679,
            117202937,
            117207535,
            117193168,
            117200629,
            117205705,
            117207405,
            117200109,
            117211977,
            117207102,
            117207383,
            117205160,
            117202511,
            117210501,
            117233461
        ],
        "B": [
            117211463,
            117191644,
            117208208,
            117195752,
            117203773,
            117196989,
            117200392,
            117204712,
            117192618,
            117194128,
            117187965,
            117194040,
            117204576,
            117200157,
            117198432,
            117201536,
            117194899,
            117196661,
            117225707
        ],
        "A": [
            117204278,
            117182610,
            117191375,
            117182552,
            117181735,
            117183060,
            117186706,
            117181614,
            117182779,
            117184006,
            117181468,
            117181785,
            117189122,
            117193871,
            117183062,
            117182596,
            117181449,
            117183504,
            117220486
        ],
        "F": [
            117202382,
            117258211,
            117241820,
            117455126,
            117572881,
            117239369,
            117247608,
            117266116,
            117251683,
            117256888,
            117254087
        ]
    },
    "name": "A. Eshag Loves Big Arrays",
    "statement": "Eshag has an array a consisting of n integers.Eshag can perform the\r\nfollowing operation any number of times: choose some subsequence of a\r\nand delete every element from it which is larger than AVG, where AVG is\r\nthe average of the numbers in the chosen subsequence.For example, if a =\r\n[1 , 4 , 3 , 2 , 4] and Eshag applies the operation to the subsequence\r\ncontaining a_1, a_2, a_4 and a_5, then he will delete those of these 4\r\nelements which are larger than\r\nfrac{a_1+a_2+a_4+a_5}{4} =\r\nfrac{11}{4}, so after the operation, the array a will become a = [1 , 3\r\n, 2].Your task is to find the number of elements Eshag can delete from\r\nthe array a by applying the operation described above some number\r\n(maybe, zero) times.A sequence b is a subsequence of an array c if b can\r\nbe obtained from c by deletion of several (possibly, zero or all)\r\nelements.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n    int ntest; cin >> ntest;\n    while(ntest--) {\n        int n; cin >> n;\n        vector<int> a(n);\n        for(int i = 0; i < n; ++i) cin >> a[i];\n        sort(a.begin(), a.end());\n\n        int ans = n;\n        for(int i = 0; i < n; ++i) if(a[i] == a[0]) ans--;\n\n        cout << ans << endl;\n    }\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Eshag Loves Big Arrays.json",
    "editorial_link": "https://codeforces.com//blog/entry/91058",
    "editorial": "We state that every element except for the elements with the smallest\r\nvalue can be deleted.Proof: denote as the minimum element (s) of the\r\narray , in each operation pick and some other element, say , which is\r\nbigger than , since , then will be deleted.Doing this for every will\r\nresult in the deletion of every element except for the elements with the\r\nsmallest value. So the answer to the problem is , where is the number of\r\ntimes appeared in .complexity:\r\n"
}