{
    "link": "https://codeforces.com//contest/1151/problem/A",
    "problemId": "332192",
    "problem_idx": "A",
    "shortId": "1151A",
    "contest_number": "1151",
    "problem_submissions": {
        "F": [
            52969000,
            52974140,
            52969772,
            52975022,
            52980263,
            52981542,
            52980056,
            52974325,
            52978664,
            52982169,
            52980243,
            52979375,
            52980809,
            52981384,
            52980660,
            52981146,
            52979191,
            52982382,
            52981761
        ],
        "A": [
            52964993,
            52960645,
            52960514,
            52960890,
            52960841,
            52960632,
            52960463,
            52975864,
            52961198,
            52962194,
            52961267,
            52961719,
            52960783,
            52960868,
            52960424,
            52960539,
            52961494,
            52961722
        ],
        "E": [
            52963816,
            52970148,
            52978614,
            52970380,
            52972910,
            52970321,
            52971212,
            52978379,
            52974086,
            52973219,
            52974283,
            52974208,
            52973176,
            52975431,
            52974891,
            52976518,
            52981339,
            52975757,
            52977016
        ],
        "C": [
            52962801,
            52967207,
            52977404,
            52967321,
            52965669,
            52965751,
            52967555,
            52965997,
            52969606,
            52970311,
            52971192,
            52970462,
            52971754,
            52968773,
            52969400,
            52967031,
            52972316,
            52975151
        ],
        "D": [
            52961052,
            52964041,
            52961092,
            52964482,
            52967362,
            52967568,
            52969636,
            52967779,
            52971526,
            52966600,
            52966264,
            52971704,
            52969026,
            52970628,
            52970281,
            52971940,
            52968559,
            52968478,
            52966194
        ],
        "B": [
            52960445,
            52962771,
            52963029,
            52967763,
            52962536,
            52962803,
            52962295,
            52961661,
            52965340,
            52964038,
            52963820,
            52964825,
            52967747,
            52963985,
            52966098,
            52966081,
            52962870,
            52965786,
            52964689
        ]
    },
    "name": "A. Maxim and Biology",
    "statement": "Today in the scientific lyceum of the Kingdom of Kremland, there was a\r\nbiology lesson. The topic of the lesson was the . Let\u2019s call the the\r\nstring \"\".Maxim was very boring to sit in class, so the teacher came up\r\nwith a task for him: on a given string s consisting of uppercase letters\r\nand length of at least 4, you need to find the minimum number of that\r\nyou need to apply, so that the appears in it as a substring. For one ,\r\nyou can replace any letter in the string s with the next or previous in\r\nthe alphabet. For example, for the letter \"\" the previous one will be\r\n\"\", and the next \"\". In this problem, we assume that for the letter \"\",\r\nthe previous one will be the letter \"\", and the next one will be \"\", and\r\nfor the letter \"\", the previous one is the letter \"\", and the next one\r\nis the letter \"\".Help Maxim solve the problem that the teacher gave\r\nhim.A string a is a substring of a string b if a can be obtained from b\r\nby deletion of several (possibly, zero or all) characters from the\r\nbeginning and several (possibly, zero or all) characters from the end.\r\n",
    "solutions": [
        "#include <string>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint operations(string s) {\n\tstring t = \"ACTG\";\n\tint ans = 0;\n\tfor (int i = 0; i < 4; ++i) {\n\t\tint d = s[i] - t[i];\n\t\tif (d < 0) d *= -1;\n\t\tans += min(d, 26 - d);\n\t}\n\treturn ans;\n}\nint main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tint ans = 1 << 30;\n\tfor (int i = 3; i < n; ++i) {\n\t\tstring t = s.substr(i - 3, 4);\n\t\tans = min(ans, operations(t));\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "strings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Maxim and Biology.json",
    "editorial_link": "https://codeforces.com//blog/entry/66602",
    "editorial": "Check every substring of string of length and find the minimum number of\r\noperations to transform it into \"ACTG\" and update the answer.Complexity\r\nis .\r\n"
}