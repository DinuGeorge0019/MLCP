{
    "link": "https://codeforces.com//contest/1982/problem/B",
    "problemId": "2717387",
    "problem_idx": "B",
    "shortId": "1982B",
    "contest_number": "1982",
    "problem_submissions": {
        "F": [
            267371295,
            267368983,
            267386192,
            267383481,
            267392812,
            267381747,
            267380349,
            267448537,
            267389268,
            267391412,
            267465375,
            267464196,
            267398754,
            267397907,
            267394247,
            267400370,
            267398779,
            267402058,
            267403186,
            267394811,
            267400611,
            267395899,
            267401217
        ],
        "E": [
            267356282,
            267356215,
            267370786,
            267372088,
            267363741,
            267371679,
            267383797,
            267376185,
            267367589,
            267367768,
            267377973,
            267379190,
            267379180,
            267375802,
            267376857,
            267377392,
            267370644,
            267387467,
            267382680,
            267383608
        ],
        "D": [
            267346551,
            267374785,
            267348133,
            267346019,
            267349259,
            267353213,
            267344889,
            267351505,
            267357173,
            267352582,
            267348135,
            267356257,
            267354124,
            267361818,
            267348920,
            267361280,
            267376940,
            267358334,
            267368263,
            267363956
        ],
        "C": [
            267340189,
            267360218,
            267340523,
            267338463,
            267344601,
            267345277,
            267337376,
            267446413,
            267343870,
            267348671,
            267345336,
            267334950,
            267349986,
            267345653,
            267351831,
            267339030,
            267352675,
            267359528,
            267350804,
            267359049,
            267348772
        ],
        "B": [
            267337179,
            267335525,
            267333706,
            267334809,
            267331361,
            267341628,
            267345760,
            267336279,
            267343504,
            267333937,
            267331022,
            267335181,
            267340882,
            267340337,
            267334531,
            267343773,
            267346672,
            267347539,
            267353296,
            267342437
        ],
        "A": [
            267328525,
            267326985,
            267328071,
            267327102,
            267327552,
            267328303,
            267347395,
            267326942,
            267331875,
            267328032,
            267327692,
            267327319,
            267328382,
            267327600,
            267327418,
            267330803,
            267331257,
            267327782,
            267348137,
            267328398
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130839",
    "editorial": "Letâs write down what happens in the problem and try to speed it up. The\r\nfirst observation: we will perform operations until , after which the\r\nanswer can be found using the formula . Indeed, after becomes equal to ,\r\nif we continue applying operations to it, it will change as follows:The\r\nsecond optimization is to group the operations that only add one, so\r\ninstead of we will add the next value to in one action . After this (if\r\nwe added at least ), we should try to divide the number by (if it is\r\ndivisible).If we use these two optimizations, our solution will work in\r\nfor one set of input data, since in one action decreases to , and\r\ntherefore becomes in no more than actions.\r\n",
    "name": "B. Collatz Conjecture",
    "statement": "Recently, the first-year student Maxim learned about the Collatz\r\nconjecture, but he didn’t pay much attention during the lecture, so he\r\nbelieves that the following process is mentioned in the conjecture:There\r\nis a variable x and a constant y. The following operation is performed k\r\ntimes: increase x by 1, then while the number x is divisible by y,\r\ndivide it by y. Note that both of these actions are performed\r\nsequentially within one operation.For example, if the number x = 16, y =\r\n3, and k = 2, then after one operation x becomes 17, and after another\r\noperation x becomes 2, because after adding one, x = 18 is divisible by\r\n3 twice.Given the initial values of x, y, and k, Maxim wants to know\r\nwhat is the final value of x.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std; #define ar array#define sz(v) int(v.size())typedef long long ll; int cdiv(int x, int y) {    return (x+y-1)/y;} void solve() {    int x,y,k; cin>>x>>y>>k;    while (k&&x>=y) {        int c=min(cdiv(x+1,y)*y-x, k);        x+=c;        k-=c;        while (x%y==0) x/=y;    }    if (k) {        int c=min(y-x, k);        x+=c;        k-=c;        while (x%y==0) x/=y;    }    if (k) {        assert(x==1);        x=1+k%(y-1);    }    cout<<x<<'\\n';} int main() {    ios::sync_with_stdio(0); cin.tie(0);    int T=1;    cin>>T;    while (T--) solve();}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Collatz Conjecture.json",
    "hint": []
}