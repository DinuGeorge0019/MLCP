{
    "link": "https://codeforces.com//contest/2056/problem/A",
    "problemId": "3150792",
    "problem_idx": "A",
    "shortId": "2056A",
    "contest_number": "2056",
    "problem_submissions": {
        "F2": [
            301545587,
            301509040,
            301738450,
            302033567
        ],
        "F1": [
            301461815,
            301455964,
            301458356,
            301426872,
            301434246,
            302031432,
            302030623,
            301580078,
            301600084
        ],
        "E": [
            301439440,
            301447920,
            301443059,
            301433627,
            301428331,
            301444669,
            301439558,
            301439957,
            301443503,
            301447455,
            301451147,
            301446991,
            301456228,
            301452444,
            301427254,
            301456788,
            301448385
        ],
        "D": [
            301411463,
            301430952,
            301426584,
            301413553,
            301414046,
            301415062,
            301415941,
            301414692,
            301446695,
            301418999,
            301418932,
            301422889,
            301412134,
            301417642,
            301411530,
            301417000,
            301444048,
            301424366,
            301426240
        ],
        "C": [
            301399544,
            301411500,
            301416896,
            301418700,
            301401301,
            301404995,
            301400708,
            301399472,
            301417939,
            301403985,
            301402887,
            301398665,
            301399127,
            301403882,
            301404504,
            301408969,
            301407435,
            301401039,
            301402939
        ],
        "B": [
            301393848,
            301392518,
            301400501,
            301395217,
            301391544,
            301398396,
            301394970,
            301396057,
            301401319,
            301397018,
            301398125,
            301391015,
            301394435,
            301395913,
            301394898,
            301392345,
            301400120,
            301395871,
            301401973
        ],
        "A": [
            301388610,
            301388749,
            301390918,
            301392589,
            301387805,
            301391122,
            301388287,
            301390050,
            301390421,
            301388003,
            301389658,
            301387952,
            301388733,
            301389417,
            301387733,
            301388087,
            301390776,
            301389692,
            301388580
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/138487",
    "editorial": "SolutionConsider coordinates and separately. Since , after each step\r\nboth coordinates increase and remain connected with the previous\r\nsquare.From the picture we can see that each coordinate spans from the\r\nbottom-left corner of the first square to the top-right corner of the\r\nlast square.To calculate the perimeter we can add the length of that\r\ninterval for both coordinates and multiply it by , as it is counted in\r\nthe perimeter twice, going in both directions:The coordinates of the\r\nbottom-left corner of the first square are and of the top-right corner\r\nof the last square are .The lengths of the intervals are and .Therefore,\r\nthe answer is .\r\n",
    "name": "A. Shape Perimeter",
    "statement": "There is an m by m square stamp on an infinite piece of paper.\r\nInitially, the bottom-left corner of the square stamp is aligned with\r\nthe bottom-left corner of the paper. You are given two integer sequences\r\nx and y, each of length n. For each step i from 1 to n, the following\r\nhappens: Move the stamp x_i units to the right and y_i units upwards.\r\nPress the stamp onto the paper, leaving an m by m colored square at its\r\ncurrent position. Note that you press the stamp at the bottom-left\r\ncorner of the paper. Refer to the notes section for better\r\nunderstanding.It can be proven that after all the operations, the\r\ncolored shape on the paper formed by the stamp is a single connected\r\nregion. Find the perimeter of this colored shape.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>#define N 1000005#define M 505#define LL long long#define inf 21474836477777777ll#define LD long double#define eps 1e-6using namespace std;int n,m,a[N],b[N];const int p=998244353;// inline void add(int x,int y){son[++tot]=y,nxt[tot]=fir[x],fir[x]=tot;} // inline int P(int x,int y){int z=1;while(y){if(y&1) z=1ll*z*x%p;y>>=1,x=1ll*x*x%p;} return z;}// inline void A(int &x,int y){x+=y,(x>=p)&&(x-=p,0),(x<0)&&(x+=p,0);}// inline void mul(int &x,int y){x=1ll*x*y%p;}inline void solve(int tc){    cin>>n>>m;int ans=m*4*n;for(int i=1;i<=n;i++){        cin>>a[i]>>b[i];if(i^1) ans-=2*(m-a[i]+m-b[i]);    }    cout<<ans<<'\\n';}int main(){    // freopen(\"data.in\",\"r\",stdin);    ios::sync_with_stdio(false);    cin.tie(0); cout.tie(0);    int tc=1;    cin>>tc;    while(tc--) solve(tc);    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Shape Perimeter.json"
}