{
    "link": "https://codeforces.com//contest/898/problem/B",
    "problemId": "139115",
    "problem_idx": "B",
    "shortId": "898B",
    "contest_number": "898",
    "problem_submissions": {
        "F": [
            33307844,
            33307069,
            33308143,
            33307333,
            33304725,
            33309674,
            33307617,
            33324444,
            33463766,
            33463739
        ],
        "E": [
            33298700,
            33298827,
            33296850,
            33298062,
            33299543,
            33301231,
            33302052,
            33295023,
            33295557,
            33302644,
            33297022,
            33300051,
            33297188,
            33300909,
            33298325,
            33294157,
            33299352
        ],
        "D": [
            33295484,
            33296274,
            33295804,
            33295438,
            33296979,
            33297889,
            33299897,
            33296885,
            33293153,
            33301610,
            33299195,
            33297291,
            33294317,
            33297559,
            33296082,
            33292010,
            33295516
        ],
        "C": [
            33293049,
            33292838,
            33294192,
            33293208,
            33294387,
            33295591,
            36631893,
            33298752,
            33292900,
            33291380,
            33326974,
            33293057,
            33293412,
            33294345,
            33292038,
            33294840,
            33294194,
            33298225,
            33297034
        ],
        "B": [
            33288797,
            33294236,
            33289524,
            33296573,
            33305320,
            33291082,
            33290611,
            33289720,
            33288149,
            33288790,
            33289877,
            33289821,
            33288702,
            33290526,
            33291731,
            33294974,
            33291014
        ],
        "A": [
            33287337,
            33293381,
            33287422,
            33296068,
            33304988,
            33288124,
            33288589,
            33287509,
            33287292,
            33287275,
            33287989,
            33287858,
            33287278,
            33288680,
            33290739,
            33295465,
            33288106
        ]
    },
    "name": "B. Proper Nutrition",
    "statement": "Vasya has burles. One bottle of Ber-Cola costs burles and one Bars bar\r\ncosts burles. He can buy any non-negative integer number of bottles of\r\nBer-Cola and any non-negative integer number of Bars bars.Find out if\r\nit’s possible to buy some amount of bottles of Ber-Cola and Bars bars\r\nand spend burles.In other words, you should find two non-negative\r\nintegers and such that Vasya can buy bottles of Ber-Cola and Bars bars\r\nand or tell that it’s impossible.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define ll long long\n\nusing namespace std;\n\nconst int N = (3e5), mod = (1e9) + 7;\n\nll n,a,b;\n\nint main(){\n\tcin >> n >> a >> b;\n\tfor(int i = 0; i <= n; i++){\n\t\tif(n >= a * i && (n - a * i) % b == 0){\n\t\t\tcout << \"YES\\n\" << i << \" \" << (n - a * i) / b;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << \"NO\";\n\t\n \treturn 0;\n}             "
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "number theory"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Proper Nutrition.json",
    "editorial_link": "https://codeforces.com//blog/entry/56381",
    "editorial": "To solve this problem we need to brute how many bottles of Ber-Cola\r\nVasya will buy. Let this number equals to . Then, if is non-negative and\r\ndivided by we found the answer Vasya should by bottles of Ber-Cola and\r\nBars bars.In case that became negative there is no answer and we should\r\nprint \"\".\r\n",
    "hint": []
}