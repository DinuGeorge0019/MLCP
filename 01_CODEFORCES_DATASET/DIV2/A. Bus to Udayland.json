{
    "link": "https://codeforces.com//contest/711/problem/A",
    "problemId": "69432",
    "problem_idx": "A",
    "shortId": "711A",
    "contest_number": "711",
    "problem_submissions": {
        "E": [
            20243389,
            20243503,
            20251107,
            20247122,
            20236128,
            20244311,
            20247031,
            20249581,
            20251290,
            20251110,
            20236252,
            20252814,
            20251720,
            20253127,
            20249558,
            20253691,
            20251603,
            20254289,
            20255257,
            20254984
        ],
        "D": [
            20236748,
            20238445,
            20241120,
            20241449,
            20243957,
            20248074,
            20235096,
            20241386,
            20243419,
            20245769,
            20252016,
            20241009,
            20246037,
            20248033,
            20253018,
            20249456,
            20247107,
            20247154,
            20250386,
            20243861
        ],
        "C": [
            20233774,
            20236081,
            20235214,
            20238143,
            20247473,
            20235216,
            20238803,
            20236811,
            20238264,
            20238615,
            20243230,
            20238055,
            20240001,
            20236172,
            20233634,
            20240235,
            20250548,
            20242121,
            20238810,
            20252383
        ],
        "B": [
            20231663,
            20231286,
            20231641,
            20233400,
            20241564,
            20239107,
            20249116,
            20232416,
            20233691,
            20233328,
            20237744,
            20233188,
            20232782,
            20232671,
            20234921,
            20232432,
            20236746,
            20235044,
            20234855,
            20236166
        ],
        "A": [
            20229146,
            20229063,
            20229191,
            20229690,
            20306899,
            20229217,
            20232219,
            20240668,
            20229251,
            20229508,
            20229028,
            20230826,
            20229961,
            20229487,
            20229092,
            20231432,
            20229019,
            20229332,
            20231409,
            20230327,
            20229746
        ]
    },
    "name": "A. Bus to Udayland",
    "statement": "ZS the Coder and Chris the Baboon are travelling to Udayland! To get\r\nthere, they have to get on the special IOI bus. The IOI bus has rows of\r\nseats. There are seats in each row, and the seats are separated into\r\npairs by a walkway. When ZS and Chris came, some places in the bus was\r\nalready occupied.ZS and Chris are good friends. They insist to get . Two\r\nseats are considered neighbouring if they are in the same row and in the\r\nsame pair. Given the configuration of the bus, can you help ZS and Chris\r\ndetermine where they should sit?\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <set>\n#include <map>\n#include <ctime>\n#include <cassert>\n#include <cmath>\n#include <algorithm>\n#include <utility>\n\n#define f first\n#define s second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\n\nconst int maxn = (int)1e6;\nconst int inf = (int)1e9;\nconst int mod = (int)1e9 + 7;\nconst ll INF = (ll)1e18;\nconst double eps = 1e-9;\n\nint n;\nstring a[10000];\n\nint main()\n{\n\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) cin >> a[i];\n\t\n\tbool ok = false;\n\tfor (int i = 0; !ok && i < n; i++) {\n\t\tstring f = \"\";\n\t\tf += a[i][0]; f += a[i][1];\n\t\tstring s = \"\";\n\t\ts += a[i][3]; s += a[i][4];\n\t\tif (f == \"OO\") {\n\t\t\ta[i] = \"++\";\n\t\t\ta[i] += \"|\";\n\t\t\ta[i] += s;\n\t\t\tok = true;\n\t\t} else if (s == \"OO\") {\n\t\t\ta[i] = f + \"|\" + \"++\";\n\t\t\tok = true;\n\t\t}\n\t}\n\t\n\tif (!ok) cout << \"NO\" << endl;\n\telse {\n\t\tcout << \"YES\" << endl;\n\t\tfor (int i = 0; i < n; i++) cout << a[i] << endl;\n\t}\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Bus to Udayland.json",
    "editorial_link": "https://codeforces.com//blog/entry/46830",
    "editorial": "For each row, check whether there exists two consecutive Os. Once you\r\nfind a pair of consecutive Os, you can replace them with +s and output\r\nthe bus. If no such pair exists, output NO.Time Complexity :\r\n"
}