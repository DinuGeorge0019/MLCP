{
    "link": "https://codeforces.com//contest/405/problem/B",
    "problemId": "7383",
    "problem_idx": "B",
    "shortId": "405B",
    "contest_number": "405",
    "problem_submissions": {
        "C": [
            6115915,
            6109660,
            6110133,
            6110046,
            6111196,
            6113157,
            6113191,
            6111181,
            6110354,
            6110520,
            6111719,
            6111599,
            6110290,
            6110453,
            6111762,
            6111100,
            6110857
        ],
        "B": [
            6113263,
            6108172,
            6108709,
            6108763,
            6108097,
            6111258,
            6110081,
            6107735,
            6108477,
            6108386,
            6108872,
            6108648,
            6108353,
            6108714,
            6109837,
            6108107
        ],
        "A": [
            6110002,
            6106628,
            6106664,
            6106595,
            6106410,
            6109734,
            6107964,
            6106587,
            6106988,
            6106985,
            6107053,
            6107108,
            6106487,
            6106761,
            6106362,
            6106567
        ],
        "E": [
            6109575,
            6134220,
            6134212,
            6517207,
            6129138,
            6115449,
            6161534,
            6121533
        ],
        "D": [
            6111866,
            6112127,
            6117518,
            6112341,
            6112656,
            6109019,
            6121539,
            6112769,
            6113306,
            6112893,
            6112946,
            6113537,
            6114230,
            6114563,
            6113633,
            6113898,
            6114989
        ]
    },
    "name": "B. Domino Effect",
    "statement": "Little Chris knows there’s no fun in playing dominoes, he thinks it’s\r\ntoo random and doesn’t require skill. Instead, he decided to play the\r\ndominoes and make a \"domino show\".Chris arranges dominoes in a line,\r\nplacing each piece vertically upright. In the beginning, he\r\nsimultaneously pushes some of the dominoes either to the left or to the\r\nright. However, somewhere between every two dominoes pushed in the same\r\ndirection there is at least one domino pushed in the opposite\r\ndirection.After each second, each domino that is falling to the left\r\npushes the adjacent domino on the left. Similarly, the dominoes falling\r\nto the right push their adjacent dominoes standing on the right. When a\r\nvertical domino has dominoes falling on it from both sides, it stays\r\nstill due to the balance of the forces. The figure shows one possible\r\nexample of the process. Given the initial directions Chris has pushed\r\nthe dominoes, find the number of the dominoes left standing vertically\r\nat the end of the process!\r\n",
    "solutions": [
        "#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std ;\n\n\nint main()\n{\n    std::ios_base::sync_with_stdio(false);\n    #ifndef ONLINE_JUDGE\n        freopen(\"date.in\", \"r\", stdin);\n        freopen(\"date.out\", \"w\", stdout);\n    #endif\n    int i, n,pos = 0;\n    int sol = 0;\n    char s[3004],Last='0';\n    cin >> n >> (s+1);\n    for(i = 1;s[i];++i){\n        if(s[i]=='.')\n            continue ;\n        if(s[i]=='R'){\n            pos = i;\n            Last = 'R';\n        }\n        else{\n            Last = 'L';\n            if(pos){\n                if((i-pos+1)&1)\n                    sol += (i-pos+1)-1;\n                else\n                    sol += (i-pos+1);\n            }\n            else\n                sol += i;\n        }\n    }\n    if(Last=='R'){\n        i--;\n        while(s[i]!='R'){\n            --i;\n            ++sol;\n        }\n        ++sol;\n    }\n    cout<<n-sol<<\"\\n\";\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Domino Effect.json",
    "editorial_link": "https://codeforces.com//blog/entry/11186",
    "editorial": "If the first pushed domino from the left was pushed to the left at\r\nposition , all dominoes at prefix fall down, otherwise let be 0.\r\nSimilarly, if the first pushed domino from the right was pushed to the\r\nright at position , all dominoes at suffix also fall down, otherwise let\r\nbe . Now, in the segment there will remain vertical dominoes and blocks\r\nof dominoes supported by the equal forces from both sides. When does a\r\ndomino at position in segment remains standing vertically? One way is\r\nthat it is not pushed by any other domino. This could be easily checked\r\nby looking at the pushed dominoes closest to (from both sides). It is\r\npushed by dominoes, only if the closest from the left was pushed to the\r\nright, and the closest from the right was pushed to the left. Suppose\r\nthese dominoes are at positions and , . Then, the only way that the\r\ndomino is still standing is if it is positioned at the center of the\r\nblock , which could be checked by . Solution complexity: , depends on\r\nimplementation.\r\n"
}