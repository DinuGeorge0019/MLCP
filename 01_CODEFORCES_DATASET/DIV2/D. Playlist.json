{"link": "https://codeforces.com//contest/1484/problem/D", "problemId": "931267", "problem_idx": "D", "shortId": "1484D", "contest_number": "1484", "problem_submissions": {"F": [110657532, 110661405, 110668413, 110665063, 110667584, 110693226, 110689740, 110699242, 110689519, 110729936], "E": [110652520, 110652573, 110656142, 110659865, 110659655, 110638421, 110657125, 110656123, 110656364, 110659863, 110649695, 110648134, 110661585, 110638998, 110667069, 110662656, 110665042, 110662940, 110667246, 110664847], "D": [110648415, 110645978, 110649799, 110651144, 110649241, 110642542, 110646537, 110651979, 110643535, 110649770, 110657613, 110654803, 110657052, 110642182, 110653908, 110653309, 110651762, 110658162, 110653592, 110654689], "C": [110640873, 110642187, 110633376, 110636572, 110644279, 110636058, 110637281, 110637639, 110639537, 110639114, 110634672, 110661474, 110641726, 110639210, 110640003, 110642952, 110644966, 110648405, 110643573, 110647774], "B": [110632955, 110638515, 110644328, 110642323, 110639199, 110633637, 110635087, 110632899, 110632555, 110636089, 110632943, 110635814, 110637169, 110730778, 110636805, 110637796, 110637626, 110638325, 110638006, 110641086], "A": [110627328, 110628878, 110637469, 110632147, 110630333, 110627835, 110626002, 110626585, 110625791, 110627648, 110626340, 110627768, 110629720, 110626163, 110628247, 110631925, 110627992, 110627111, 110625876, 110626130]}, "name": "D. Playlist", "statement": "Arkady has a playlist that initially consists of n songs, numerated from\r\n1 to n in the order they appear in the playlist. Arkady starts listening\r\nto the songs in the playlist one by one, starting from song 1. The\r\nplaylist is cycled, i. e. after listening to the last song, Arkady will\r\ncontinue listening from the beginning.Each song has a genre a_i, which\r\nis a positive integer. Let Arkady finish listening to a song with genre\r\ny, and the genre of the next-to-last listened song be x. If\r\noperatorname{gcd}(x, y) = 1, he deletes the last listened song (with\r\ngenre y) from the playlist. After that he continues listening normally,\r\nskipping the deleted songs, and about songs he listened to before. In\r\nother words, after he deletes a song, he can\u2019t delete the next song\r\nimmediately.Here\r\noperatorname{gcd}(x, y) denotes the greatest common divisor (GCD) of\r\nintegers x and y.For example, if the initial songs\u2019 genres were [5, 9,\r\n2, 10, 15], then the playlist is converted as follows: [, 9, 2, 10, 15]\r\nto [, , 2, 10, 15]\r\nto [5, 2, 10, 15] (because\r\noperatorname{gcd}(5, 9) = 1)\r\nto [5, , 10, 15]\r\nto [5, , , 15]\r\nto [5, 2, , ]\r\nto [, 2, 10, ]\r\nto [, , 10, 15]\r\nto [5, 10, 15] (because\r\noperatorname{gcd}(5, 2) = 1)\r\nto [5, , 15]\r\nto [5, , ]\r\nto ... The bold numbers represent the two last played songs. Note that\r\nafter a song is deleted, Arkady forgets that he listened to that and the\r\nprevious songs.Given the initial playlist, please determine which songs\r\nare eventually deleted and the order these songs are deleted.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define R register\n#define N 100021\n#define IT std::set<int>::iterator\n\nstd::set<int> st,ps;\nint a[N],n,del[N];\n\ninline int gcd(int a,int b){\n\treturn !b?a:gcd(b,a%b);\n}\n\ninline void solve(){\n\tscanf(\"%d\",&n);\n\tR int tp=0;\n\tps.clear();\n\tst.clear();\n\tfor(R int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\tfor(R int i=1;i<=n;++i){\n\t\tps.insert(i);\n\t\tR int xia=(i==n)?1:i+1;\n\t\tif(gcd(a[i],a[xia])==1) st.insert(i);\n\t}\n\tR int nw=1;\n\twhile\n\t(1){\n\t\tif(!st.size()){\n\t\t\tprintf(\"%d \",tp);\n\t\t\tfor(R int _=1;_<=tp;++_) printf(\"%d \",del[_]);\n\t\t\tputs(\"\");return;\n\t\t}\n\t\tif(ps.size()==1){\n\t\t\tif(a[nw]==1){\n\t\t\t\tps.clear();\n\t\t\t\tst.clear();\n\t\t\t\tdel[++tp]=nw;\n\t\t\t}\n\t\t\telse{\n\t\t\t\t;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tIT qwq=st.lower_bound(nw); //\u627e\u5230\u5f80\u524d\u7b2c\u4e00\u5bf9\u4e0d\u5408\u6cd5\u7684\u4f4d\u7f6e pss\n\t\tif(qwq==st.end()) qwq=st.begin();\n\t\tR int pss=(*qwq);\n//\t\tprintf(\"nw=%d, pss = %d\\n\",nw,pss);\n\t\tIT qaq=ps.lower_bound(pss); //\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5230\u5e95\u662f\u4ec0\u4e48\n\t\t++qaq;\n\t\tif(qaq==ps.end()) qaq=ps.begin();\n\t\tR int nxx=(*qaq); //\u627e\u5230\u4e86\u4e0b\u4e00\u4e2a\u4f4d\u7f6e nxx\n\t\t++qaq;\n\t\tif(qaq==ps.end()) qaq=ps.begin();\n\t\tR int nnx=(*qaq); //\u4e0b\u4e00\u4e2a\u6211\u4eec\u9700\u8981\u8fde\u4e0a\u7684\u4f4d\u7f6e\n//\t\tprintf(\"nxx = %d, nnx = %d\\n\",nxx,nnx);\n\t\t//\u4e5f\u5c31\u662f\u5220\u6389\u4e86 nxx\n\t\tdel[++tp]=nxx;\n\t\tps.erase(nxx);\n\t\tst.erase(pss); //\u5220\u6389\u5f53\u524d\u5339\u914d\n\t\tif(gcd(a[nxx],a[nnx])==1) st.erase(nxx);\n//\t\tprintf(\"sss %d\\n\",st.size());\n\t\tif(gcd(a[pss],a[nnx])==1) st.insert(pss); //\u65b0\u5efa\u7acb\u7684\u8054\u7cfb\u3002\n\t\tnw=nnx;\n\t} //\u6bcf\u6b21\u90fd\u81f3\u5c11\u5220\u4e00\u4e2a\u6570 \n}\n\nint main(){\n\tR int T;\n\tstd::cin>>T;\n\twhile(T--)\n\t\tsolve();\n}"], "input": "", "output": "", "tags": ["data structures", "dsu", "implementation"], "dificulty": "1900", "interactive": false}