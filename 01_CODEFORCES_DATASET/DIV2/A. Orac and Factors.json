{
    "link": "https://codeforces.com//contest/1350/problem/A",
    "problemId": "619071",
    "problem_idx": "A",
    "shortId": "1350A",
    "contest_number": "1350",
    "problem_submissions": {
        "E": [
            79855181,
            79866892,
            79867578,
            79860431,
            79865664,
            79871653,
            79862377,
            79873286,
            79855797,
            79870095,
            79877566,
            79875250,
            79879082,
            79877229,
            79874099,
            79876185,
            79865098,
            79874891,
            79878375
        ],
        "D": [
            79841799,
            79863715,
            79838223,
            79843636,
            79845619,
            79851762,
            79859376,
            79851422,
            79856645,
            79867069,
            79852959,
            79854133,
            79862270,
            79854555,
            79857955,
            79860745,
            79863550,
            79877253,
            79858065,
            79853653
        ],
        "C": [
            79826908,
            79832989,
            79819179,
            79836044,
            79829980,
            79835199,
            79827905,
            79823236,
            79839284,
            79843003,
            79842971,
            79842595,
            79842398,
            79842899,
            79841428,
            79836029,
            79843846,
            79828517,
            79847123,
            79843527
        ],
        "B": [
            79820647,
            79822816,
            79842662,
            79823960,
            79824033,
            79823709,
            79822810,
            79820992,
            244797086,
            79824014,
            79827065,
            79834456,
            79825730,
            79829712,
            79832808,
            79831732,
            79824775,
            79833342,
            79819486,
            79827690,
            79827705
        ],
        "A": [
            79816852,
            79817819,
            79835688,
            79816825,
            79817311,
            79817807,
            79817556,
            79817787,
            79817609,
            79823750,
            79829915,
            79816664,
            79822342,
            79821478,
            79817922,
            79818871,
            79819448,
            79816826,
            79818898,
            79816798
        ],
        "F": [
            79877945
        ]
    },
    "name": "A. Orac and Factors",
    "statement": "Orac is studying number theory, and he is interested in the properties\r\nof divisors.For two positive integers a and b, a is a divisor of b if\r\nand only if there exists an integer c, such that a\r\ncdot c=b.For n\r\nge 2, we will denote as f(n) the smallest positive divisor of n, except\r\n1.For example, f(7)=7,f(10)=2,f(35)=5.For the fixed integer n, Orac\r\ndecided to add f(n) to n. For example, if he had an integer n=5, the new\r\nvalue of n will be equal to 10. And if he had an integer n=6, n will be\r\nchanged to 8.Orac loved it so much, so he decided to repeat this\r\noperation several times.Now, for two positive integers n and k, Orac\r\nasked you to add f(n) to n exactly k times (note that n will change\r\nafter each operation, so f(n) may change too) and tell him the final\r\nvalue of n.For example, if Orac gives you n=5 and k=2, at first you\r\nshould add f(5)=5 to n=5, so your new value of n will be equal to n=10,\r\nafter that, you should add f(10)=2 to 10, so your new (and the final!)\r\nvalue of n will be equal to 12.Orac may ask you these queries many\r\ntimes.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll n,t,k;\nll mi(ll x){for (int i=2;i<=x;i++)if (x%i==0)return i;}\nint main(){\n\tcin>>t;\n\twhile (t--){cin>>n>>k;cout<<n+mi(n)+k*2-2<<endl;}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Orac and Factors.json",
    "editorial_link": "https://codeforces.com//blog/entry/77284",
    "editorial": "If we simulate the whole process we will get TLE because k is too large.\r\nSo we need some trivial observations: If n is even, then for each\r\noperation n will be added by 2 and keep being even. If n is odd, then\r\nfor the first time n will be added by an odd number and then become\r\neven. So itâs easy to see that the answer is\r\nleft\r\n{\r\nbegin{array}{lcl} n+2k & n\r\ntextrm{ is even}\r\nn+2(k-1)+d(n) & n\r\ntextrm{ is odd}\r\nend{array}\r\nright. where d(n) is the smallest positive factor of x except 1, which\r\ncan be calculated in O(n) time.The overall complexity is O(n) .\r\n",
    "hint": []
}