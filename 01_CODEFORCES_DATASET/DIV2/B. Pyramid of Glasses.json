{
    "link": "https://codeforces.com//contest/676/problem/B",
    "problemId": "60897",
    "problem_idx": "B",
    "shortId": "676B",
    "contest_number": "676",
    "problem_submissions": {
        "D": [
            18086124,
            18088139,
            18084280,
            18085571,
            18084868,
            18078718,
            18082907,
            18080588,
            18080137,
            18081145,
            18081985,
            18081026,
            18081695,
            18082035,
            18081128,
            18082512,
            18082190,
            18083067,
            18081575,
            18082166
        ],
        "E": [
            18083014,
            18097261,
            18097237,
            18085521,
            18088459,
            18088804,
            18088832,
            18103936,
            18095906,
            18094839,
            18090516,
            18100676,
            18103495,
            18227086
        ],
        "C": [
            18079114,
            18076155,
            18074138,
            18080914,
            18078417,
            18075987,
            18076242,
            18077017,
            18077328,
            18077130,
            18076218,
            18077107,
            18077040,
            18076098,
            18076862,
            18077489,
            18078049,
            18076245,
            18076673,
            18078488
        ],
        "B": [
            18076441,
            18077200,
            18076573,
            18077509,
            18075916,
            18074860,
            18074368,
            18074928,
            18076475,
            18075886,
            18077173,
            18074968,
            18075981,
            18075167,
            18077678,
            18075867,
            18076662,
            18079173,
            18077589,
            18077066
        ],
        "A": [
            18073771,
            18073531,
            18073371,
            18075006,
            18073412,
            18073493,
            18073358,
            18073487,
            18073563,
            18073458,
            18073435,
            18073444,
            18073768,
            18073556,
            18073505,
            18073796,
            18074124,
            18073590,
            18073448,
            18074969
        ]
    },
    "name": "B. Pyramid of Glasses",
    "statement": "Mary has just graduated from one well-known University and is now\r\nattending celebration party. Students like to dream of a beautiful life,\r\nso they used champagne glasses to construct a small pyramid. The height\r\nof the pyramid is . The top level consists of only glass, that stands on\r\nglasses on the second level (counting from the top), then glasses on the\r\nthird level and so on.The bottom level consists of glasses.Vlad has seen\r\nin the movies many times how the champagne beautifully flows from top\r\nlevels to bottom ones, filling all the glasses simultaneously. So he\r\ntook a bottle and started to pour it in the glass located at the top of\r\nthe pyramid.Each second, Vlad pours to the top glass the amount of\r\nchampagne equal to the size of exactly one glass. If the glass is\r\nalready full, but there is some champagne flowing in it, then it pours\r\nover the edge of the glass and is equally distributed over two glasses\r\nstanding under. If the overflowed glass is at the bottom level, then the\r\nchampagne pours on the table. For the purpose of this problem we\r\nconsider that champagne is distributed among pyramid glasses\r\nimmediately. Vlad is interested in the number of completely full glasses\r\nif he stops pouring champagne in seconds.Pictures below illustrate the\r\npyramid consisting of three levels.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\ndouble M[15][15];\n\nint main() {\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"data.in\",\"r\",stdin);\n\t#endif // ONLINE_JUDGE\n\tcin.sync_with_stdio(false);\n\tcin.tie(0);\n\n\tint n,t;\n\tcin>>n>>t;\n\tdouble x;\n\n\twhile(t--) {\n\t\tM[1][1] += 1;\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tfor(int j=1;j<=i;++j) {\n\t\t\t\tif(M[i][j] > 1) {\n\t\t\t\t\tx = M[i][j] - 1;\n\t\t\t\t\tM[i][j] = 1;\n\t\t\t\t\tM[i+1][j] += x/2;\n\t\t\t\t\tM[i+1][j+1] += x/2;\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\tx = 0;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=i;++j)\n\t\t\tif(M[i][j] == 1)\n\t\t\t\t++x;\n\n\tcout<<x<<\"\\n\";\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Pyramid of Glasses.json",
    "editorial_link": "https://codeforces.com/blog/entry/45018",
    "editorial": "The restrictions in this problem allow to simulate the process. Let the\r\nvolume of one wineglass equals to conventional units. So the volume of\r\nthe champagne surpluses which will stream to bottom level will always\r\ninteger number. So let\u00e2\u0080\u0099s pour in the top wineglass units of champagne,\r\nand then we have following case: if in the current wineglass is more\r\nchampagne than its volume, let\u00e2\u0080\u0099s make , and add of champagne in each of\r\nthe two bottom wineglasses. Asymptotic behavior .\r\n"
}