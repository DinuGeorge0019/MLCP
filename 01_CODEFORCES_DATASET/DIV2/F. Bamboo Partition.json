{
    "link": "https://codeforces.com//contest/831/problem/F",
    "problemId": "114252",
    "problem_idx": "F",
    "shortId": "831F",
    "contest_number": "831",
    "problem_submissions": {
        "F": [
            28524412,
            28589075
        ],
        "E": [
            28518576,
            28519922,
            28516725,
            28518610,
            28517316,
            28518604,
            28514634,
            28517509,
            28512481,
            28519183,
            28520727,
            28519505,
            28520653,
            28522570,
            28522388,
            28519257,
            28516821,
            28521941,
            28520051,
            28517313
        ],
        "D": [
            28515659,
            28515412,
            28513332,
            28513652,
            28513411,
            28516483,
            28516655,
            28522155,
            28520115,
            28516173,
            28515154,
            28516779,
            28516912,
            28515110,
            28514947,
            28514700,
            28517868,
            28516879,
            28517907,
            28522125
        ],
        "C": [
            28513086,
            28513404,
            28511104,
            28512442,
            28514905,
            28512216,
            28520896,
            28511207,
            28520643,
            28514218,
            28513025,
            28512706,
            28513552,
            28512508,
            28511403,
            28520892,
            28521339,
            28514051,
            28515858,
            28520114
        ],
        "B": [
            28507101,
            28507693,
            28506648,
            28506753,
            28507510,
            28507533,
            28507834,
            28507930,
            28507062,
            28507463,
            28509384,
            28508411,
            28507824,
            28508253,
            28508638,
            28507559,
            28507917,
            28511079,
            28507613
        ],
        "A": [
            28506106,
            28506123,
            28506025,
            28506039,
            28506323,
            28506210,
            28506627,
            28506516,
            28506009,
            28506088,
            28508398,
            28506582,
            28506848,
            28506960,
            28507487,
            28506150,
            28506496,
            28507984,
            28506206
        ]
    },
    "name": "F. Bamboo Partition",
    "statement": "Vladimir wants to modernize partitions in his office. To make the office\r\nmore comfortable he decided to remove a partition and plant several\r\nbamboos in a row. He thinks it would be nice if there are bamboos in a\r\nrow, and the -th from the left is meters high. Vladimir has just planted\r\nbamboos in a row, each of which has height meters right now, but they\r\ngrow meter each day. In order to make the partition nice Vladimir can\r\ncut each bamboo once at any height (no greater that the height of the\r\nbamboo), and then the bamboo will stop growing.Vladimir wants to check\r\nthe bamboos each days (i.e. days after he planted, then after days and\r\nso on), and cut the bamboos that reached the required height. Vladimir\r\nwants the total length of bamboo parts he will cut off to be no greater\r\nthan meters.What is the maximum value he can choose so that he can\r\nachieve what he wants without cutting off more than meters of bamboo?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\ntypedef long long i64;\nconst int inf=0x7f7f7f7f;\nvoid maxs(int&a,int b){if(a<b)a=b;}\nvoid mins(int&a,int b){if(a>b)a=b;}\nint min(int a,int b){return a<b?a:b;}\nint n,a[107];\ni64 k,s1=0;\nint v1[107];\nint mv[256];\nvoid upd(int w,int a){\n\tw+=128;\n\tmv[w]=a;\n\tfor(w>>=1;w;w>>=1)mv[w]=min(mv[w<<1],mv[w<<1^1]);\n}\nvoid f1(int w,int x){\n\tint y=(a[w]+x-1)/x;\n\ts1+=y-v1[w];\n\tv1[w]=y;\n\tupd(w,y>1?(a[w]+y-2)/(y-1):inf);\n}\nint gmn(){\n\tint w=1;\n\twhile(w<128)w=w<<1^(mv[w]==mv[w<<1^1]);\n\treturn w-128;\n}\nint main(){\n\tmemset(mv,0x7f,sizeof(mv));\n\tscanf(\"%d%I64d\",&n,&k);\n\ti64 s=0;\n\tint mx=1;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",a+i);\n\t\ts+=a[i];\n\t\tmaxs(mx,a[i]);\n\t}\n\ti64 ans=1;\n\tk+=s;\n\ti64 L=1,R;\n\tfor(int i=1;i<=n;++i)f1(i,1);\n\twhile(1){\n\t\tR=mv[1];\n//\t\tprintf(\"[%d,%d) %lld\\n\",L,R,k);\n//\t\tfor(int i=1;i<=n;++i)printf(\"[%d]\",a[i]/L);puts(\"\");\n\t\ti64 z=k/s1;\n\t\tif(L<=z&&(z<R||R>mx))ans=z;\n\t\tif(z>=R&&ans<R-1)ans=R-1;\n\t\tif(z>=L&&ans<z)ans=z;\n//\t\tprintf(\"[%d]\\n\",R>mx);\n\t\tif(R>mx)break;\n\t\twhile(mv[1]==R){\n\t\t\tint a=gmn();\n\t\t\tf1(a,R);\n\t\t}\n\t\tL=R;\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. Bamboo Partition.json",
    "editorial_link": "https://codeforces.com//blog/entry/53302",
    "editorial": null,
    "hint": []
}