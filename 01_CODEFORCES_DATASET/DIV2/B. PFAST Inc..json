{"link": "https://codeforces.com//contest/114/problem/B", "problemId": "598", "problem_idx": "B", "shortId": "114B", "contest_number": "114", "problem_submissions": {"D": [680614, 677278, 687034, 703847, 688239, 686718], "C": [679537, 677329, 677420, 678206, 678894, 677340, 678896, 678198, 677942, 678443, 677408, 678308, 677570, 677264], "B": [675892, 675509, 675942, 675643, 676134, 676935, 675118, 676157, 675384, 675637, 675937, 676230, 680438, 675305, 675437, 675487], "A": [674586, 674367, 674130, 674388, 674341, 674633, 674152, 674272, 675893, 674247, 674536, 674866, 674450, 674150, 674236, 674109], "E": [703890, 692770]}, "name": "B. PFAST Inc.", "statement": "When little Petya grew up and entered the university, he started to take\r\npart in contests. Later he realized that he doesn\u2019t like how the\r\ncontests are organised: the team could only have three members (and he\r\ncouldn\u2019t take all his friends to the competitions and distribute the\r\ntasks between the team members efficiently), so he decided to organize\r\nhis own contests PFAST Inc. Petr and Friends Are Solving Tasks\r\nCorporation. PFAST Inc. rules allow a team to have unlimited number of\r\nmembers.To make this format of contests popular he organised his own\r\ntournament. To create the team he will prepare for the contest organised\r\nby the PFAST Inc. rules, he chose several volunteers (up to 16 people)\r\nand decided to compile a team from them. Petya understands perfectly\r\nthat if a team has two people that don\u2019t get on well, then the team will\r\nperform poorly. Put together a team with as many players as possible\r\ngiven that all players should get on well with each other.\r\n", "solutions": ["#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 20, L = 20;\n\nint bits(int x) {\n  int k = 0;\n  while (x) {\n    x &= x - 1;\n    k++;\n  }\n  return k;\n}\n\nint n, m;\nint a[N][N];\nchar name[N][L];\n\nint id(char *s) {\n  for (int i = 0; i < n; i++)\n    if (!strcmp(name[i], s)) return i;\n}\n\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 0; i < n; i++)\n    scanf(\"%s\", name[i]);\n\n  for (int i = 0; i < n; i++)\n    for (int j = i + 1; j < n; j++)\n      if (strcmp(name[i], name[j]) > 0) {\n        strcpy(name[n], name[i]);\n        strcpy(name[i], name[j]);\n        strcpy(name[j], name[n]);\n      }\n\n  while (m--) {\n    scanf(\"%s %s\", name[n], name[n + 1]);\n    int i = id(name[n]);\n    int j = id(name[n + 1]);\n    a[i][j] = a[j][i] = 1;\n  }\n\n  int ans = 0;\n  for (int x = 1; x < (1 << n); x++) {\n    int flag = 1;\n    for (int i = 0; i < n; i++) if (x & (1 << i))\n      for (int j = i + 1; j < n; j++) if (x & (1 << j))\n        if (a[i][j]) { flag = 0; break; }\n    if (flag && bits(x) > bits(ans)) ans = x;\n  }\n\n  printf(\"%d\\n\", bits(ans));\n  for (int i = 0; i < n; i++) if (ans & (1 << i))\n    puts(name[i]);\n\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "brute force", "graphs"], "dificulty": "1500", "interactive": false}