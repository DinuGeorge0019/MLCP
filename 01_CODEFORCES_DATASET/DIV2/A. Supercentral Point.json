{
    "link": "https://codeforces.com//contest/165/problem/A",
    "problemId": "1012",
    "problem_idx": "A",
    "shortId": "165A",
    "contest_number": "165",
    "problem_submissions": {
        "D": [
            1366499,
            1366969,
            1365112,
            1367097,
            1366684,
            1365807,
            1365962,
            1368726,
            1367643,
            1365427,
            1364667,
            1370595,
            1385240
        ],
        "E": [
            1364192,
            1364774,
            1367313,
            1365367,
            1364379,
            1368630,
            1368754,
            1367792,
            1368549,
            1365271,
            1364231,
            1368793,
            1367116,
            2473344,
            1366372,
            1367247,
            1366533,
            1367425
        ],
        "C": [
            1362928,
            1363517,
            1362594,
            1363696,
            1366879,
            1362613,
            1362246,
            1363281,
            1364362,
            1363392,
            1367553,
            1369077,
            1364690,
            2473167,
            2473156,
            1362666,
            1363958,
            1364223,
            1365162,
            1365345
        ],
        "B": [
            1362163,
            1362376,
            1365799,
            1362605,
            1362500,
            1363337,
            1362770,
            1362069,
            1363813,
            1363948,
            1362915,
            1369003,
            1362557,
            2473004,
            2473001,
            2472997,
            1362110,
            1362242,
            1362516,
            1363280,
            1362708
        ],
        "A": [
            1361696,
            1361752,
            1362836,
            1361758,
            1361587,
            1361647,
            1361570,
            1361606,
            1362825,
            1365691,
            1361805,
            1362263,
            1361965,
            2472978,
            2472975,
            2472970,
            1361665,
            1361602,
            1361734,
            1362468,
            1361751
        ]
    },
    "name": "A. Supercentral Point",
    "statement": "One day Vasya painted a Cartesian coordinate system on a piece of paper\r\nand marked some set of points . Let\u2019s define neighbors for some fixed\r\npoint from the given set : point is \u2019s right neighbor, if and point is\r\n\u2019s left neighbor, if and point is \u2019s lower neighbor, if and point is \u2019s\r\nupper neighbor, if and We\u2019ll consider point from the given set\r\nsupercentral, if it has at least one upper, at least one lower, at least\r\none left and at least one right neighbor among this set\u2019s points.Vasya\r\nmarked quite many points on the paper. Analyzing the picture manually is\r\nrather a challenge, so Vasya asked you to help him. Your task is to find\r\nthe number of supercentral points in the given set.\r\n",
    "solutions": [
        "#include <vector>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n#include <cassert>\n\nusing namespace std;\n\n//----------------------zjut_DD for Topcoder-------------------------------\ntypedef long long LL;\ntypedef pair<int,int> PII;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\n#define PB push_back\n#define MP make_pair\n#define ff first\n#define ss second\n#define two(w) (1<<(w))\n#define test(x,w) (x&two(w))\n#define sz(v) (int)v.size()\n#define all(c) c.begin(),c.end() \n#define clr(buf,val) memset(buf,val,sizeof(buf))\n#define rep(i,l,r) for(int i=(l);i<(r);i++)\n#define repv(i,v)  for(int i=0;i<(int)v.size();i++)\n#define repi(it,c) for(typeof(c.begin()) it=c.begin();it!=c.end();++it)\n//------------------------------------------------------------------------\n\n\nint main(){\n\tint n;\n\twhile( cin>>n ){\n\t\tvector<PII> v;\n\t\trep(i, 0, n) {\n\t\t\tint a, b; cin>>a>>b;\n\t\t\tv.PB(MP(a, b));\n\t\t}\n\t\tint ans=0;\n\t\trepv(i, v){\n\t\t\tbool l=false, r=false, u=false, d=false;\n\t\t\trepv(j, v) if( i!=j ){\n\t\t\t\tif( v[i].ff==v[j].ff ){\n\t\t\t\t\tif( v[i].ss < v[j].ss ) r=true;\n\t\t\t\t\tif( v[i].ss > v[j].ss ) l=true;\n\t\t\t\t}\n\t\t\t\tif( v[i].ss==v[j].ss ){\n\t\t\t\t\tif( v[i].ff < v[j].ff ) u=true;\n\t\t\t\t\tif( v[i].ff > v[j].ff ) d=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( l && r && u && d) ans++;\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n}\n\n\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Supercentral Point.json",
    "editorial_link": "https://codeforces.com//blog/entry/4124",
    "editorial": "In this problem you should just code what was written in the problem.\r\nFor every point you can check if it is supercentral. Consider every\r\npoint consecutively and find neighbors from every side. The complexity\r\nis .\r\n"
}