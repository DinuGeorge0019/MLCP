{"link": "https://codeforces.com//contest/180/problem/F", "problemId": "1265", "problem_idx": "F", "shortId": "180F", "contest_number": "180", "problem_submissions": {"A": [1612011, 1611035, 1611491, 1610423, 1608646, 1612209, 1610289, 1609636, 1609133, 1612193, 1612229, 1611072, 1612163, 1611991, 1610400, 1612436, 1617622], "E": [1610692, 1609351, 1609009, 1613114, 1609269, 1610641, 1610622, 1610904, 1610311, 1609559, 1609099, 1609957, 1610472, 1610971, 1609912, 1608828], "D": [1610104, 1610284, 1610538, 1611279, 1611479, 1611395, 1611538, 1611063, 1611009, 1611925, 1611800, 1650220], "B": [1609708, 1612372, 1611456, 1610499], "F": [1608611, 1608642, 1608360, 1608443, 1609619, 1608802, 1608911, 1609865, 1608836, 1608333, 1608944, 1608579, 1608822, 1608381], "C": [1608408, 1608345, 1608245, 1608291, 1608998, 1608357, 1608524, 1609626, 1608493, 1608501, 1608480, 1609176, 1608550, 1608260]}, "name": "F. Mathematical Analysis Rocks ", "statement": "Students of group 199 have written their lectures dismally. Now an exam\r\non Mathematical Analysis is approaching and something has to be done\r\nasap (that is, quickly). Let\u2019s number the students of the group from 1\r\nto . Each student () has a best friend (). In fact, each student is a\r\nbest friend of student. In other words, all are different. It is\r\npossible that the group also has some really \"special individuals\" for\r\nwho .Each student wrote exactly one notebook of lecture notes. We know\r\nthat the students agreed to act by the following algorithm: on the first\r\nday of revising each student studies his own Mathematical Analysis\r\nnotes, in the morning of each following day each student gives the\r\nnotebook to his best friend and takes a notebook from the student who\r\ncalls him the best friend. Thus, on the second day the student ()\r\nstudies the -th student\u2019s notes, on the third day the notes go to\r\nstudent and so on. Due to some characteristics of the boys\u2019 friendship\r\n(see paragraph 1), each day each student has exactly one notebook to\r\nstudy.You are given two sequences that describe the situation on the\r\nthird and fourth days of revising: , where means the student who gets\r\nthe -th student\u2019s notebook on the third day of revising; , where means\r\nthe student who gets the -th student\u2019s notebook on the fourth day of\r\nrevising. You do not know array , that is you do not know who is the\r\nbest friend to who. Write a program that finds by the given sequences\r\nand .\r\n", "solutions": ["#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint ntest = 0, test = 0;\ninline void init();\ninline void run();\ninline void stop() {\n\tntest = test - 1;\n}\n\nint main() {\n#ifdef LOCAL\n\tfreopen(\"input\", \"r\", stdin);\n//\tfreopen(\"output\", \"w\", stdout);\n#endif\n\tinit();\n\twhile (++test <= ntest) {\n\t\trun();\n\t}\n\treturn 0;\n}\n\n#define FOR(i, a, b) for (int i = (a); i <= (b); i++)\n#define FORD(i, a, b) for (int i = (a); i >= (b); i--)\n#define REP(i, a) for (int i = 0; i < (a); i++)\n#define FIT(it, v) for (typeof((v).begin())it = (v).begin(); it != (v).end(); it++)\n\n#define SZ(v) ((int)(v).size())\n#define ALL(v) (v).begin(), (v).end()\n#define SET(a, x) memset((a), (x), sizeof(a))\n#define SORT(v) sort(ALL(v))\n#define GSORT(v) sort(ALL(v), greater<typeof(*(v).begin())>())\n#define UNIQUE(v) SORT(v); (v).resize(unique(ALL(v)) - (v).begin())\n\n#define PB push_back\n#define MP make_pair\n#define F first\n#define S second\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\nconst int INF = (int) 1E9 + 5;\nconst double EPS = 1E-11;\nconst ll MOD = (ll) 1E9 + 7;\n\nconst int dx[] = { -1, 0, 0, 1 };\nconst int dy[] = { 0, -1, 1, 0 };\n\ninline void init() {\n\tntest = 1;\n}\n\nint n;\nint a[100005];\n\ninline void run() {\n\tscanf(\"%d\", &n);\n\tint x;\n\tFOR(i, 1, n) {\n\t\tscanf(\"%d\", &x);\n\t\ta[x] = i;\n\t}\n\tFOR(i, 1, n) {\n\t\tscanf(\"%d\", &x);\n\t\tif (i != 1) {\n\t\t\tprintf(\" \");\n\t\t}\n\t\tprintf(\"%d\", a[x]);\n\t}\n\tputs(\"\");\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "implementation", "math"], "dificulty": "1200", "interactive": false}