{
    "link": "https://codeforces.com//contest/1823/problem/C",
    "problemId": "1896869",
    "problem_idx": "C",
    "shortId": "1823C",
    "contest_number": "1823",
    "problem_submissions": {
        "E": [
            203705839,
            203701788,
            203710907,
            203711770,
            203705371,
            203702158,
            203705164,
            203708687,
            203695617,
            203698015,
            203713863,
            203711164,
            203711208
        ],
        "F": [
            203698273,
            203688371,
            203699854,
            203692525,
            203713776,
            203706591,
            203701681,
            203697250,
            203707004,
            203714464,
            203718741,
            203709649,
            204276537,
            203715624
        ],
        "D": [
            203690544,
            203695164,
            203688855,
            203701895,
            203696407,
            203691855,
            203694127,
            203710546,
            203714159,
            203700668,
            203695441,
            203690745,
            203703946,
            203707611,
            203710099,
            203694539,
            203701580,
            203697921,
            203699365
        ],
        "C": [
            203682587,
            203678999,
            203681052,
            203684144,
            203687732,
            203680914,
            203689997,
            203682944,
            203686588,
            203690248,
            203682397,
            203683673,
            203689305,
            203682640,
            203682923,
            203682065,
            203686779,
            203685407,
            203684445,
            203683205
        ],
        "B": [
            203677458,
            203684522,
            203677423,
            203681465,
            203680710,
            203678118,
            203686689,
            203678181,
            203679545,
            203680940,
            203678605,
            203678733,
            203683292,
            203678419,
            203679073,
            203679634,
            203680902,
            203679216,
            203679313
        ],
        "A": [
            203676393,
            203676826,
            203676383,
            203676665,
            203678720,
            203676331,
            203678496,
            203676540,
            203676948,
            203676909,
            203676591,
            203676707,
            203676528,
            203676629,
            203676389,
            203676483,
            203678253,
            203677369,
            203678056
        ]
    },
    "name": "C. Strongly Composite",
    "statement": "A number is an integer greater than 1, which has exactly two divisors.\r\nFor example, 7 is a prime, since it has two divisors\r\n{1, 7\r\n}. A number is an integer greater than 1, which has more than two\r\ndifferent divisors.Note that the integer 1 is neither prime nor\r\ncomposite.Let\u2019s look at some composite number v. It has several\r\ndivisors: some divisors are prime, others are composite themselves. If\r\nthe number of prime divisors of v is to the number of composite\r\ndivisors, let\u2019s name v as .For example, number 12 has 6 divisors:\r\n{1, 2, 3, 4, 6, 12\r\n}, two divisors 2 and 3 are prime, while three divisors 4, 6 and 12 are\r\ncomposite. So, 12 is strongly composite. Other examples of strongly\r\ncomposite numbers are 4, 8, 9, 16 and so on.On the other side, divisors\r\nof 15 are\r\n{1, 3, 5, 15\r\n}: 3 and 5 are prime, 15 is composite. So, 15 is not a strongly\r\ncomposite. Other examples are: 2, 3, 5, 6, 7, 10 and so on.You are given\r\nn integers a_1, a_2,\r\ndots, a_n (a_i > 1). You have to build an array b_1, b_2,\r\ndots, b_k such that following conditions are satisfied: Product of all\r\nelements of array a is equal to product of all elements of array b: a_1\r\ncdot a_2\r\ncdot\r\nldots\r\ncdot a_n = b_1\r\ncdot b_2\r\ncdot\r\nldots\r\ncdot b_k; All elements of array b are integers greater than 1 and ; The\r\nsize k of array b is the maximum possible. Find the size k of array b,\r\nor report, that there is no array b satisfying the conditions.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nusing pii=pair<int,int>;\n\n#define all(a) a.begin(),a.end()\n#define pb push_back\n#define sz(a) ((int)a.size())\n\nconst int N=200005,M=10000005;\n\nvector<int> pr;\nint lpd[M];\nvoid sieve(){\n    pr.clear();\n    for(int i=0; i<M; ++i) lpd[i]=-1;\n    for(int i=2; i<M; ++i){\n        if(lpd[i]==-1) lpd[i]=i,pr.pb(i);\n        for(auto p: pr){\n            if(p*i>=M) break;\n            lpd[p*i]=p;\n            if(i%p==0) break;\n        }\n    }\n}\nvector<int> factors(int x){\n    vector<int> res;\n    while(x>1) res.pb(lpd[x]),x/=lpd[x];\n    return res;\n}\n\nint n,a[N];\n\nvoid ldc(){\n    cin >> n;\n    map<int,int> mm;\n    for(int i=0; i<n; ++i){\n        int x; cin >> x;\n        vector<int> vec=factors(x);\n        for(auto j: vec) mm[j]++;\n    }\n    vector<int> vec;\n    for(auto [x,y]: mm) vec.pb(y);\n    sort(all(vec));\n    if(vec.back()==1&&sz(vec)<=2){\n        cout << \"0\\n\";\n        return;\n    }\n    int cnt1=0,cnt2=0;\n    for(auto i: vec) cnt1+=i>>1,cnt2+=i&1;\n    cout << cnt1+cnt2/3 << \"\\n\";\n}\n\nsigned main(){\n    ios_base::sync_with_stdio(0),cin.tie(0);\n    sieve();\n    int t;\n    cin >> t;\n    while(t--) ldc();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Strongly Composite.json",
    "editorial_link": "https://codeforces.com//blog/entry/115465",
    "editorial": "Let\u00e2\u0080\u0099s understand criteria for a number being strongly composite. Let\u00e2\u0080\u0099s\r\nfactorize the number . The number of all divisors of is .Since the\r\nnumber of prime divisors is , then the number of composite divisors of\r\nis . Then a number is strongly composite if or . Since is the number of\r\n, then .Consider a weakened condition for a strongly composite number: .\r\nIf , then the condition is satisfied only if . If , then the condition\r\nis satisfied only if . If , then the condition is always satisfied.In\r\nsummary, a number is not strongly composite if it is either a prime or\r\nthe product of two distinct primes.Now let\u00e2\u0080\u0099s solve the problem. Let\u00e2\u0080\u0099s\r\nsplit all numbers into primes. Assume we have pairs , where is a prime\r\nnumber and is the number of its occurrences. We can take either two same\r\nprime numbers or three of any prime numbers. The optimal strategy is to\r\ncreate the maximum number of pairs of same prime numbers , and when\r\nthere will be only different prime numbers remaining. We can merge these\r\nremaining primes in triples to get extra strongly composite numbers.If,\r\nafter merging triples, we have some primes left, we can add them to any\r\nalready strongly composite number, and it won\u00e2\u0080\u0099t change its total number.\r\n"
}