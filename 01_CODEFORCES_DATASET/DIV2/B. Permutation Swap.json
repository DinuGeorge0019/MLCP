{
    "link": "https://codeforces.com//contest/1828/problem/B",
    "problemId": "1922403",
    "problem_idx": "B",
    "shortId": "1828B",
    "contest_number": "1828",
    "problem_submissions": {
        "E": [
            205928976,
            205900019,
            205882115,
            205895924,
            205892096,
            205891436,
            205893344
        ],
        "F": [
            205895469
        ],
        "D2": [
            205889438,
            205883240,
            205883734,
            205896618,
            206159170,
            205894825,
            205895793,
            205893893,
            205897477,
            227549028,
            205896300
        ],
        "D1": [
            205878026,
            205883337,
            205866040,
            205882122,
            205875506,
            205886552,
            205886122,
            205895740,
            205872312,
            205897439,
            227549130,
            205896247,
            205864334,
            205871289,
            205871040,
            205870968,
            205880756,
            205879364
        ],
        "C": [
            205856261,
            205854711,
            205855088,
            205857693,
            205852246,
            205857010,
            205863890,
            205863938,
            205866888,
            205861344,
            205875792,
            205859789,
            205857545,
            205862873,
            205854617,
            205857622,
            205861133,
            205854364,
            205855992,
            205858999
        ],
        "B": [
            205851848,
            205854227,
            205848826,
            205865189,
            205847163,
            205851029,
            205851540,
            205857305,
            205865622,
            205851306,
            205878139,
            205854556,
            205860197,
            205853496,
            205849725,
            205848581,
            205854845,
            205849749,
            205849027,
            205848392
        ],
        "A": [
            205844206,
            205843332,
            205843301,
            205858624,
            205843073,
            205843188,
            205845089,
            205849854,
            205854254,
            205843004,
            205878944,
            205844207,
            205862200,
            205845877,
            205843927,
            205843783,
            205843659,
            205846739,
            205843197,
            205843308
        ]
    },
    "name": "B. Permutation Swap",
    "statement": "You are given an permutation p_1, p_2,\r\nldots, p_n. To sort the permutation, you choose a constant k (k\r\nge 1) and do some operations on the permutation. In one operation, you\r\ncan choose two integers i, j (1\r\nle j < i\r\nle n) such that i - j = k, then swap p_i and p_j.What is the value of k\r\nthat you can choose to sort the given permutation?A permutation is an\r\narray consisting of n distinct integers from 1 to n in arbitrary order.\r\nFor example, [2, 3, 1, 5, 4] is a permutation, but [1, 2, 2] is not a\r\npermutation (2 appears twice in the array) and [1, 3, 4] is also not a\r\npermutation (n = 3 but there is 4 in the array).An unsorted permutation\r\np is a permutation such that there is at least one position i that\r\nsatisfies p_i\r\nne i.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, d, u) for(int i = d; i <= u; ++i)\n#define dep(i, u, d) for(int i = u; i >= d; --i)\n#define cep(n) while(n--)\n#define gep(i, a) for(int i = firs[a]; i; i = neig[i])\nint ured() {\n\tint re = 0;\n\tchar ch;\n\tdo {\n\t\tch = getchar();\n\t} while('9' < ch || ch < '0');\n\tdo {\n\t\tre = re * 10 + (ch ^ '0');\n\t} while('0' <= (ch = getchar()) && ch <= '9');\n\treturn re;\n}\nvoid uwit(int da) {\n\tint ch[21], cn = 0;\n\tdo {\n\t\tch[++cn] = da - da / 10 * 10;\n\t} while(da /= 10);\n\tdo {\n\t\tputchar('0' ^ ch[cn]);\n\t} while(--cn);\n}\nconst int _maxn = 100011;\nint t, n, p[_maxn], rans;\nint main() {\n\tt = ured();\n\tcep(t) {\n\t\tn = ured(), rans = 0;\n\t\trep(i, 1, n) {\n\t\t\tp[i] = ured(), rans = __gcd(rans, abs(p[i] - i));\n\t\t}\n\t\tuwit(rans), putchar('\\n');\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Permutation Swap.json",
    "editorial_link": "https://codeforces.com//blog/entry/116109",
    "editorial": "SolutionIn order to move to position , it is easy to see that has to be\r\ndivisible by .So, has to be all divisible by . The largest possible\r\nvalue of turns out to be the greatest common divisor of integers .Time\r\ncomplexity:\r\n"
}