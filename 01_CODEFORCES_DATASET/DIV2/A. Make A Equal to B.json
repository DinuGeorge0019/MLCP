{
    "link": "https://codeforces.com//contest/1736/problem/A",
    "problemId": "1577261",
    "problem_idx": "A",
    "shortId": "1736A",
    "contest_number": "1736",
    "problem_submissions": {
        "E": [
            175439543,
            175443144,
            175439009,
            175381843,
            175414723,
            175438942,
            175435995,
            175434845,
            177930000,
            177929986,
            175687203
        ],
        "D": [
            175408404,
            175400381,
            175399625,
            175411756,
            175427268,
            175403943,
            175421797,
            175410165,
            175420142,
            175417359,
            175431513,
            175416878,
            175409927,
            175413453,
            175413865,
            175431461,
            175406398,
            175441942
        ],
        "C2": [
            175404703,
            175417134,
            175428380,
            175419086,
            175400852,
            175397797,
            175413006,
            175423651,
            175672172,
            175406068,
            175417021,
            175434137,
            175436814,
            175434363,
            175440989,
            175420969,
            175442300,
            175419890
        ],
        "C1": [
            175375043,
            175383497,
            175388568,
            175387787,
            175381377,
            175379153,
            175385345,
            175386512,
            175389788,
            175382936,
            175394942,
            175375823,
            175386767,
            175379821,
            175383900,
            175387961,
            175384170,
            175389585,
            175383234,
            175389212
        ],
        "B": [
            175370992,
            175375317,
            175373666,
            175375194,
            175374090,
            175375063,
            175373551,
            175376722,
            175374704,
            175379058,
            175374978,
            175547536,
            175411882,
            175380763,
            175374446,
            175376075,
            175375873,
            175378999,
            175381698,
            175373819,
            175381759
        ],
        "A": [
            175370153,
            175370410,
            175370431,
            175371396,
            175370206,
            175371113,
            175370213,
            175370596,
            175371197,
            175370850,
            175370966,
            175408706,
            175371169,
            175370108,
            175370575,
            175370376,
            175370794,
            175373232,
            175370222,
            175370303
        ]
    },
    "name": "A. Make A Equal to B",
    "statement": "You are given two arrays a and b of n elements, each element is either 0\r\nor 1.You can make operations of 2 kinds. Pick an index i and change a_i\r\nto 1-a_i. Rearrange the array a however you want. Find the minimum\r\nnumber of operations required to make a equal to b.\r\n",
    "solutions": [
        "//\u8fd9\u56de\u53ea\u82b1\u4e86114514min\u5c31\u6253\u5b8c\u4e86\u3002\n//\u771f\u597d\u3002\u8bb0\u5f97\u591a\u624b\u9020\u51e0\u7ec4\u3002ACM\u62cd\u4ec0\u4e48\u62cd\u3002 \n#include \"bits/stdc++.h\"\nusing namespace std;\ntemplate<typename typC,typename typD> istream &operator>>(istream &cin,pair<typC,typD> &a) { return cin>>a.first>>a.second; }\ntemplate<typename typC> istream &operator>>(istream &cin,vector<typC> &a) { for (auto &x:a) cin>>x; return cin; }\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const pair<typC,typD> &a) { return cout<<a.first<<' '<<a.second; }\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const vector<pair<typC,typD>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\ntemplate<typename typC> ostream &operator<<(ostream &cout,const vector<typC> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\ntemplate<typename typC> bool cmin(typC &x,const typC &y) { if (x>y) { x=y; return 1; } return 0; }\ntemplate<typename typC> bool cmax(typC &x,const typC &y) { if (x<y) { x=y; return 1; } return 0; }\n#if !defined(ONLINE_JUDGE)&&defined(LOCAL)\n#include \"my_header\\debug.h\"\n#else\n#define dbg(...) ;\n#define dbgn(...) ;\n#endif\ntypedef unsigned int ui;\ntypedef long long ll;\n#define all(x) (x).begin(),(x).end()\n// void inc(ui &x,const ui &y) { if ((x+=y)>=p) x-=p; }\n// void dec(ui &x,const ui &y) { if ((x+=p-y)>=p) x-=p; }\nconst int N=1e6+5;\nint main()\n{\n\tios::sync_with_stdio(0); cin.tie(0);\n\tcout<<setiosflags(ios::fixed)<<setprecision(15);\n\tint T; cin>>T;\n\twhile (T--)\n\t{\n\t\tint n,m,i,j;\n\t\tcin>>n;\n\t\tvector cnt(2,vector(2,0)),a(2,vector(n,0));\n\t\tfor (j=0; j<2; j++) for (i=0; i<n; i++)\n\t\t{\n\t\t\tint &x=a[j][i];\n\t\t\tcin>>x;\n\t\t\t++cnt[j][x&1];\n\t\t}\n\t\tint r=0;\n\t\tfor (i=0; i<n; i++) r+=a[0][i]!=a[1][i];\n\t\tcout<<min(r,1+abs(cnt[0][0]-cnt[1][0]))<<'\\n';\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Make A Equal to B.json",
    "editorial_link": "https://codeforces.com//blog/entry/107847",
    "editorial": "SolutionIt is easy to observe that the second operation needs to be\r\nperformed at most once. Now, we just need to check cases, one in which\r\nthe re-arrangement operation is used, and one in which it is not.If the\r\nre-arrangement operation is to be used, then we just need to make the\r\ncounts of s and s in equal to that of . Without loss of generality\r\nassume contains more s than , then the cost in this case will just be\r\n(extra one for re-arrangement cost).If the re-arrangement operation is\r\nnot to be used, then we just need to make each element of equal to the\r\ncorresponding element of .Finally, our answer is the smaller cost of\r\nthese cases.Time complexity is .\r\n"
}