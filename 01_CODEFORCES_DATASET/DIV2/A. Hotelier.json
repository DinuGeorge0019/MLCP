{
    "link": "https://codeforces.com//contest/1200/problem/A",
    "problemId": "387081",
    "problem_idx": "A",
    "shortId": "1200A",
    "contest_number": "1200",
    "problem_submissions": {
        "F": [
            58597034,
            58604274,
            58603801,
            58604261,
            58606296,
            58609347,
            58606628,
            58603882,
            58611421,
            58614224,
            58612143,
            58659085,
            58617947,
            58615235,
            58614922,
            58618563,
            58618410,
            58819839,
            58819733,
            58614658,
            58617967,
            58616220,
            58617480
        ],
        "E": [
            58590453,
            58591974,
            58589669,
            58582754,
            58593262,
            58593765,
            58594950,
            58609042,
            58590807,
            58600501,
            58598133,
            58655621,
            58603439,
            58602117,
            58595933,
            58604924,
            58702004,
            58608728,
            58607700,
            58606886,
            58608547,
            58595823
        ],
        "D": [
            58585183,
            58587196,
            58595741,
            58592331,
            58597422,
            58600351,
            58598831,
            58588698,
            58604146,
            58596632,
            58604059,
            58594391,
            58596161,
            58605981,
            58592911,
            58594958,
            58601895,
            58602011,
            58595454,
            58607933
        ],
        "C": [
            58581348,
            58578761,
            58581508,
            58598446,
            58584753,
            58585227,
            58584309,
            58590893,
            58582665,
            58580776,
            58585592,
            58580638,
            58583883,
            58586342,
            58585762,
            58586591,
            58578435,
            58584027,
            58584223,
            58583648
        ],
        "B": [
            58580222,
            58581800,
            58579349,
            58596443,
            58582220,
            58582093,
            58584008,
            58593306,
            58580382,
            58578318,
            58581197,
            58578343,
            58580875,
            58583711,
            58582188,
            58581441,
            58581810,
            58580259,
            58599702,
            58580893
        ],
        "A": [
            58576391,
            58576584,
            58577266,
            58594056,
            58576879,
            58576717,
            58577509,
            58578116,
            58576412,
            58576423,
            58577739,
            58576429,
            58576681,
            58580309,
            58578442,
            58576553,
            58583309,
            58576504,
            58576736,
            58576406
        ]
    },
    "name": "A. Hotelier",
    "statement": "Amugae has a hotel consisting of 10 rooms. The rooms are numbered from 0\r\nto 9 from left to right.The hotel has two entrances one from the left\r\nend, and another from the right end. When a customer arrives to the\r\nhotel through the left entrance, they are assigned to an empty room\r\nclosest to the left entrance. Similarly, when a customer arrives at the\r\nhotel through the right entrance, they are assigned to an empty room\r\nclosest to the right entrance.One day, Amugae lost the room assignment\r\nlist. Thankfully Amugae’s memory is perfect, and he remembers all of the\r\ncustomers: when a customer arrived, from which entrance, and when they\r\nleft the hotel. Initially the hotel was empty. Write a program that\r\nrecovers the room assignment list from Amugae’s memory.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nbool a[10];\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\t\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tfor(char c : s) {\n\t\tif(c=='L') {\n\t\t\tint i=0;\n\t\t\twhile(a[i])\n\t\t\t\t++i;\n\t\t\ta[i]=1;\n\t\t} else if(c=='R') {\n\t\t\tint i=9;\n\t\t\twhile(a[i])\n\t\t\t\t--i;\n\t\t\ta[i]=1;\n\t\t} else {\n\t\t\ta[c-'0']=0;\n\t\t}\n\t}\n\tfor(int i=0; i<10; ++i)\n\t\tcout << a[i];\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Hotelier.json",
    "editorial_link": "https://codeforces.com/blog/entry/69035",
    "editorial": "Make an array of size 10 filled with 0. Then for each character from the\r\ninput: : Find the first position containing 0, then change it to 1. :\r\nFind the last position containing 0, then change it to 1. : array[x] =\r\n0.Time complexity:\r\n",
    "hint": []
}