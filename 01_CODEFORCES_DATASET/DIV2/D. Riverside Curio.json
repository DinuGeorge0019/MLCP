{
    "link": "https://codeforces.com//contest/957/problem/D",
    "problemId": "168088",
    "problem_idx": "D",
    "shortId": "957D",
    "contest_number": "957",
    "problem_submissions": {
        "E": [
            36592290,
            36594963,
            36599082,
            36599897,
            36599760
        ],
        "D": [
            36588184,
            36593316,
            36590028,
            36587926,
            36594829,
            36594512,
            36589430,
            36586974,
            36587001,
            36588810,
            36587938,
            36589206,
            36583680,
            36590716,
            36594602,
            36589094
        ],
        "C": [
            36585096,
            36587203,
            36585622,
            36583559,
            36590242,
            36589387,
            36584971,
            36584551,
            36583605,
            36586678,
            36585992,
            36585864,
            36581121,
            36584678,
            36584664,
            36585936
        ],
        "B": [
            36581561,
            36585463,
            36583187,
            36581534,
            36588080,
            36585487,
            36582113,
            36582013,
            36588511,
            36584549,
            36582998,
            36591084,
            36582444,
            36581251,
            36582787
        ],
        "A": [
            36579344,
            36581086,
            36579386,
            36579567,
            36585046,
            36580860,
            36579710,
            36580098,
            36579619,
            36583249,
            36579936,
            36582081,
            36579470,
            36579595,
            36579916
        ]
    },
    "name": "D. Riverside Curio",
    "statement": "Arkady decides to observe a river for consecutive days. The river\u2019s\r\nwater level on each day is equal to some real value.Arkady goes to the\r\nriverside each day and makes a mark on the side of the channel at the\r\nheight of the water level, but if it coincides with a mark made before,\r\nno new mark is created. The water does not wash the marks away. Arkady\r\nwrites down the number of marks strictly above the water level each day,\r\non the -th day this value is equal to .Define as the number of marks\r\nstrictly under the water level on the -th day. You are to find out the\r\nminimum possible sum of over all days. There are no marks on the channel\r\nbefore the first day.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 100010\n#define ll long long\nint n;\nint a[maxn],num[maxn];\nmain()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(int i=1;i<=n;i++)\n    {\n        num[i]=num[i-1];\n        num[i]=max(num[i],a[i]+1);\n    }\n    for(int i=n-1;i>=1;i--)num[i]=max(num[i],num[i+1]-1);\n    //for(int i=1;i<=n;i++)printf(\"%d \",num[i]);puts(\"\");\n    ll ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        ans+=num[i]-a[i]-1;\n        //printf(\"%d %d\\n\",i,num[i]==num[i-1] ? num[i]-a[i]-1 : 0);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Riverside Curio.json",
    "editorial_link": "https://codeforces.com//blog/entry/58544",
    "editorial": "Define ti as the total number of marks (above or at or under the water level) on the i-th day. As ti?=?mi?+?1?+?di, minimizing  is equivalent to minimizing .\n\nFor the i-th day we would like to find the minimum value of ti.\n\nNeedless to say ti???max{ti?-?1,?mi?+?1} should hold.\n\nOn each day we can increase t by at most one, thus ti???ti?+?1?-?1, which is equivalent to the condition that ti???tj?-?(j?-?i) holds for all j?>?i.\n\nThe first condition is straightforward \u0097 just go over from left to right and keep a record; but how to ensure that the second condition hold?\n\nOne of the approaches is going backwards. Go from right to left and keep a counter which, on each day, decreases by 1 and then is taken maximum with the ti currently at hand. This counter always records the minimum required ti value that satisfies the second condition. Assign this counter to ti along the way.\n\nBased on such minimum decisions, raising any ti by any positive value does not allow other ti's to be reduced. Hence summing this value over all days provides us with an optimal answer in O(n) time."
}