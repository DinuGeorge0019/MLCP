{
    "link": "https://codeforces.com//contest/556/problem/A",
    "problemId": "30460",
    "problem_idx": "A",
    "shortId": "556A",
    "contest_number": "556",
    "problem_submissions": {
        "E": [
            11798593,
            11802983,
            11804367,
            11806288,
            11807296,
            11809513,
            11800434,
            11802658,
            11830953
        ],
        "D": [
            11795355,
            11796315,
            11795899,
            11796322,
            11799061,
            11798540,
            11799119,
            11797672,
            11798131,
            11798280,
            11800191,
            11812529,
            11800092,
            11799755,
            11800619,
            11802251,
            11818504,
            11800610,
            11801708,
            11800703
        ],
        "C": [
            11790828,
            11813461,
            11790864,
            11790816,
            11792705,
            11791993,
            11793214,
            11794207,
            11799350,
            11792271,
            11793843,
            11792946,
            11788929,
            11794460,
            11794387,
            11796150,
            11791587,
            11789894,
            11791106,
            11792562,
            11793761
        ],
        "B": [
            11787481,
            11788094,
            11788373,
            11788280,
            11788531,
            11789067,
            11788489,
            11786492,
            11787137,
            11787902,
            11790114,
            11790590,
            11787542,
            11786980,
            11787988,
            11787858,
            11787163,
            11788286,
            11787516
        ],
        "A": [
            11785901,
            11785921,
            11786590,
            11785894,
            11785846,
            11786159,
            11786486,
            11786214,
            11785755,
            11785763,
            11785847,
            11785750,
            11785944,
            11785887,
            11785926,
            11786005,
            11786011,
            11785820,
            11786301,
            11785958
        ]
    },
    "name": "A. Case of the Zeros and Ones",
    "statement": "Andrewid the Android is a galaxy-famous detective. In his free time he\r\nlikes to think about strings containing zeros and ones.Once he thought\r\nabout a string of length consisting of zeroes and ones. Consider the\r\nfollowing operation: we choose any two positions in the string, and if\r\none them contains 0, and the other contains 1, then we are allowed to\r\nremove these two digits from the string, obtaining a string of length as\r\na result.Now Andreid thinks about what is the minimum length of the\r\nstring that can remain after applying the described operation several\r\ntimes (possibly, zero)? Help him to calculate this number.\r\n",
    "solutions": [
        "#include <cstdio>\n\nint main() {\n  int N;\n  scanf(\"%d\\n\", &N);\n  int res = 0;\n  for (int i = 0; i < N; ++i) {\n    char c;\n    scanf(\"%c\", &c);\n    if (c == '0') res += 1; else res -= 1;\n  }\n  printf(\"%d\\n\", res < 0 ? -res : res);\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Case of the Zeros and Ones.json",
    "editorial_link": "https://codeforces.com//blog/entry/18919",
    "editorial": "If there still exist at least one and at least one in the string then\r\nthere obviously exists either substring or substring (or both) and we\r\ncan remove it. The order in which we remove substrings is unimportant:\r\nin any case we will make such operations. Thus the answer is . Time: .\r\n",
    "hint": []
}