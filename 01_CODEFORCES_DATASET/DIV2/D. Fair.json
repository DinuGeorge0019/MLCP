{"link": "https://codeforces.com//contest/987/problem/D", "problemId": "186078", "problem_idx": "D", "shortId": "987D", "contest_number": "987", "problem_submissions": {"F": [38741581, 38744536, 38751744, 38745850, 38733424, 38747373, 38750038, 38739632, 38747501, 38755456, 38754103, 38756570, 39458080, 38800187], "E": [38729820, 38734010, 38739026, 38737750, 38737503, 38735270, 38728175, 38732950, 38732076, 38735536, 38726470, 38736185, 38735395, 38739389, 38737950, 38733385, 38737429, 38728750, 38738471, 38737473], "D": [38728300, 38727603, 38735413, 38739497, 38729365, 38742941, 38742478, 38734115, 38734916, 38731776, 38732631, 38732131, 38730887, 38729679, 38734141, 38739584, 38734771, 38732422, 38734393, 38734819], "C": [38726042, 38723808, 38731874, 38743387, 38723590, 38733893, 38745979, 38727421, 38727101, 38736817, 38728419, 38728352, 38726949, 38728339, 38727877, 38729476, 38745549, 38729490, 38728289], "B": [38724259, 38725683, 38728179, 38741244, 38724899, 38730252, 38743111, 38724174, 38724175, 38729270, 38726063, 38724744, 38724501, 38724885, 38726559, 38724213, 38725258, 38725636], "A": [38722785, 38722940, 38724393, 38742310, 38723006, 38722966, 38743314, 38737316, 38722904, 38722943, 38728732, 38723066, 38722799, 38722866, 38722916, 38723281, 38723901, 38723746, 38723057]}, "name": "D. Fair", "statement": "Some company is going to hold a fair in Byteland. There are n towns in\r\nByteland and m two-way roads between towns. Of course, you can reach any\r\ntown from any other town using roads.There are k types of goods produced\r\nin Byteland and every town produces only one type. To hold a fair you\r\nhave to bring at least s different types of goods. It costs d(u,v) coins\r\nto bring goods from town u to town v where d(u,v) is the length of the\r\nshortest path from u to v. Length of a path is the number of roads in\r\nthis path.The organizers will cover all travel expenses but they can\r\nchoose the towns to bring goods from. Now they want to calculate minimum\r\nexpenses to hold a fair in each of n towns.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint n, m, k, s;\nvector<int> e[100005];\nvector<int> gudz[105];\n\nint d[105][100005];\n\nvoid bfs(vector<int> v0, int* d) {\n\tqueue<int> q;\n\tfill(d+1, d+n+1, -1);\n\tfor (int x : v0) {\n\t\tq.push(x);\n\t\td[x] = 0;\n\t}\n\twhile (!q.empty()) {\n\t\tint x = q.front(); q.pop();\n\t\tfor (int y : e[x]) {\n\t\t\tif (d[y] == -1) {\n\t\t\t\td[y] = d[x] + 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcout.tie(nullptr);\n\tcerr.tie(nullptr);\n\n\tcin >> n >> m >> k >> s;\n\tfor (int i=1; i<=n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tgudz[x].push_back(i);\n\t}\n\tfor (int i=0; i<m; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\n\tfor (int i=1; i<=k; i++)\n\t\tbfs(gudz[i], d[i]);\n\n\tfor (int i=1; i<=n; i++) {\n\t\tvector<int> v;\n\t\tv.reserve(k);\n\t\tfor (int j=1; j<=k; j++)\n\t\t\tv.push_back(d[j][i]);\n\t\tsort(v.begin(), v.end());\n\t\tcout << accumulate(v.begin(), v.begin() + s, 0) << ' ';\n\t}\n\n}"], "input": "", "output": "", "tags": ["graphs", "shortest paths"], "dificulty": "1600", "interactive": false}