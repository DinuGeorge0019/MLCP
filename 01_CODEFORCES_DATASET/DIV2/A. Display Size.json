{
    "link": "https://codeforces.com//contest/747/problem/A",
    "problemId": "85392",
    "problem_idx": "A",
    "shortId": "747A",
    "contest_number": "747",
    "problem_submissions": {
        "F": [
            23126704,
            23217267,
            52339523,
            52339464,
            23341357,
            23340816,
            23578865
        ],
        "E": [
            23125674,
            23121557,
            23122370,
            23123161,
            23124718,
            23124657,
            23124656,
            23123981,
            23122979,
            23122492,
            23124234,
            23124489,
            23124720,
            23123438,
            23122625,
            23124699,
            23124636,
            23124788
        ],
        "C": [
            23123534,
            23119516,
            23119605,
            23119464,
            23119789,
            23119774,
            23120245,
            23120834,
            23119880,
            23120172,
            23121050,
            23121104,
            23120094,
            23119293,
            23120587,
            23121256,
            23120349,
            23120870
        ],
        "D": [
            23122972,
            23121671,
            23121446,
            23122129,
            23122827,
            23122607,
            23123052,
            23122954,
            23121673,
            23124427,
            23123104,
            23123270,
            23123828,
            23121861,
            23124873,
            23123416,
            23123688,
            23123414
        ],
        "B": [
            23118814,
            23120201,
            23118777,
            23118662,
            23118893,
            23118919,
            23119154,
            23119419,
            23124358,
            23119396,
            23119237,
            23119831,
            23119076,
            23124567,
            23119518,
            23119781,
            23119199,
            23119454
        ],
        "A": [
            23117745,
            23119565,
            23117723,
            23117761,
            23117767,
            23117895,
            23117920,
            23118535,
            23123976,
            23117977,
            23119603,
            23118496,
            23117834,
            23123993,
            23117965,
            23119512,
            23118198,
            23118178
        ]
    },
    "name": "A. Display Size",
    "statement": "A big company decided to launch a new series of rectangular displays,\r\nand decided that the display must have exactly pixels. Your task is to\r\ndetermine the size of the rectangular display the number of lines (rows)\r\nof pixels and the number of columns of pixels , so that: there are\r\nexactly pixels on the display; the number of rows does not exceed the\r\nnumber of columns, it means ; the difference is as small as possible.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define ff first\n#define ss second\nusing namespace std;\nconst int N=200005;\nconst int inf=1e9+7;\ntypedef long long ll;\ntypedef long double lb;\ninline void read(int &x){x=0; char ch=getchar();while(ch<'0') ch=getchar();while(ch>='0'){x=x*10+ch-48; ch=getchar();}}\n//------------------------------------------head---------------------------------------------------//\n\n\nint main()\n{\n\tint n; read(n);\n\tint ans=1; for(int i=2;i*i<=n;i++)\n\t{\n\t\tif(n%i==0) ans=i;\n\t}\n\tprintf(\"%d %d\\n\",ans,n/ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Display Size.json",
    "editorial_link": "https://codeforces.com//blog/entry/49171",
    "editorial": "We can iterate through the values of from 1 to . For each if and if is\r\nless than already found different we need to update answer with values\r\nand (because must be less than ).\r\n",
    "hint": []
}