{
    "link": "https://codeforces.com//contest/1204/problem/B",
    "problemId": "392652",
    "problem_idx": "B",
    "shortId": "1204B",
    "contest_number": "1204",
    "problem_submissions": {
        "D2": [
            59171473,
            59176959,
            59165503,
            59172424,
            59176173,
            59167492,
            59164905,
            59176155,
            59178992,
            59169931,
            59176960,
            59169864,
            59178242,
            59178029,
            59169582,
            59172809,
            59169123,
            59168999,
            59171305,
            59170057
        ],
        "D1": [
            59169891,
            59176544,
            59165271,
            59172261,
            59176126,
            59167259,
            59164656,
            59176100,
            59163490,
            59168508,
            59176724,
            59170026,
            59178274,
            59177894,
            59169407,
            59172673,
            59169296,
            59168747,
            59167871,
            59169828
        ],
        "E": [
            59165621,
            59159508,
            59171204,
            59167827,
            59161848,
            59176920,
            59177089,
            59166777,
            59176127,
            59177175,
            59172161,
            59177722,
            59170117,
            59171712,
            59177233,
            59179201,
            59180220,
            59178891,
            59180477,
            59178723
        ],
        "C": [
            59151501,
            59163669,
            59158012,
            59149471,
            59166332,
            59152299,
            59160440,
            59156718,
            59160290,
            59156826,
            59162942,
            59160646,
            59158205,
            59161710,
            59162530,
            59157292,
            59158762,
            59160352,
            59157314,
            59162180
        ],
        "B": [
            59144349,
            59150576,
            59146764,
            59144554,
            59146379,
            59145028,
            59149730,
            59146608,
            59146122,
            59145946,
            59147391,
            59146291,
            59146819,
            59146767,
            59151379,
            59145774,
            59147183,
            59147977,
            59149695,
            59149226
        ],
        "A": [
            59141665,
            59142146,
            59141563,
            59142710,
            59143581,
            59145777,
            59144224,
            59142379,
            59143868,
            59142387,
            59143522,
            59143089,
            59147328,
            59153631,
            59142559,
            59141790,
            59142894,
            59147085,
            59146105
        ]
    },
    "name": "B. Mislove Has Lost an Array",
    "statement": "Mislove had an array a_1, a_2,\r\ncdots, a_n of n positive integers, but he has lost it. He only remembers\r\nthe following facts about it: The number of different numbers in the\r\narray is not less than l and is not greater than r; For each array’s\r\nelement a_i either a_i = 1 or a_i is even and there is a number\r\ndfrac{a_i}{2} in the array.For example, if n=5, l=2, r=3 then an array\r\ncould be [1,2,2,4,4] or [1,1,1,1,2]; but it couldn’t be [1,2,2,4,8]\r\nbecause this array contains 4 different numbers; it couldn’t be\r\n[1,2,2,3,3] because 3 is odd and isn’t equal to 1; and it couldn’t be\r\n[1,1,2,2,16] because there is a number 16 in the array but there isn’t a\r\nnumber\r\nfrac{16}{2} = 8.According to these facts, he is asking you to count the\r\nminimal and the maximal possible sums of all elements in an array.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint n, l, r;\nint arr[1002];\nint arr2[1002];\nint ans1, ans2;\n\nint main(){\n    scanf(\"%d %d %d\", &n, &l, &r);\n    for(int i=0; i<=n; i++) arr[i] = 1, arr2[i] = (1<<(r-1));\n    for(int i=n-l+2; i<=n; i++) arr[i] = arr[i-1] * 2;\n    for(int i=1; i<=r; i++) arr2[i] = (1<<(i-1));\n    for(int i=1; i<=n; i++) ans1+=arr[i], ans2+=arr2[i];\n    printf(\"%d %d\", ans1, ans2);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Mislove Has Lost an Array.json",
    "editorial_link": "https://codeforces.com/blog/entry/69244",
    "editorial": "Any array that satisfies statementsâ conditions contains only powers of\r\ntwo from to , where , so the minimal sum is achieved when we take powers\r\nof two from to and set the other elements equal to ; the maximal sum is\r\nachieved when we take powers of two from to and set the other elements\r\nequal to .\r\n",
    "hint": []
}