{
    "link": "https://codeforces.com//contest/727/problem/A",
    "problemId": "75799",
    "problem_idx": "A",
    "shortId": "727A",
    "contest_number": "727",
    "problem_submissions": {
        "F": [
            21454299,
            21463560,
            21456437,
            21465295,
            21454474,
            21458264,
            21456589
        ],
        "E": [
            21449841,
            21449822,
            21450904,
            21453568,
            21453967,
            21760601,
            21511825,
            21511807,
            21511800,
            21454554,
            21549212,
            21460363,
            21455919,
            21459919
        ],
        "D": [
            21446491,
            21446004,
            21446992,
            21445398,
            21448520,
            21448519,
            21447217,
            21446535,
            21447223,
            21446711,
            21448124,
            21446242,
            21447928,
            21448652,
            21448435,
            21449709,
            21448635,
            21445975,
            21450092
        ],
        "C": [
            21445102,
            21444938,
            21445707,
            21444476,
            21446045,
            21446680,
            21446166,
            21445050,
            21443956,
            21445410,
            21446522,
            21445734,
            21446213,
            21445295,
            21445829,
            21445999,
            21444171,
            21447101
        ],
        "B": [
            21444430,
            21444284,
            21444596,
            21443833,
            21445575,
            21445150,
            21455506,
            21444391,
            21445186,
            21444885,
            21444164,
            21445217,
            21445115,
            21446297,
            21444840,
            21445324,
            21453096,
            21445206
        ],
        "A": [
            21442889,
            21442869,
            21443136,
            21442911,
            21443243,
            21443224,
            21443033,
            21442981,
            21442858,
            21442965,
            21442983,
            21442922,
            21442918,
            21442957,
            21443069,
            21443067,
            21443028,
            21443089,
            21442924,
            21443118
        ]
    },
    "name": "A. Transformation  from A to B",
    "statement": "Vasily has a number , which he wants to turn into a number . For this\r\npurpose, he can do two types of operations: multiply the current number\r\nby (that is, replace the number by ); append the digit to the right of\r\ncurrent number (that is, replace the number by ). You need to help\r\nVasily to transform the number into the number using only the operations\r\ndescribed above, or find that it is impossible.Note that in this task\r\nyou are not required to minimize the number of operations. It suffices\r\nto find any way to transform into .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = (int) 1e9;\nconst ll LINF = (ll) 1e18;\nconst ld EPS = 1e-7;\n\nint run() {\n    int a, b;\n    cin >> a >> b;\n    vector<int> ops;\n    ops.push_back(b);\n    \n    while (b > a) {\n        if (b % 2 == 0) {\n            b /= 2;\n            ops.push_back(b);\n        } else if (b % 10 == 1) {\n            b /= 10;\n            ops.push_back(b);\n        } else {\n            break;\n        }\n    }\n    \n    if (a == b) {\n        cout << \"YES\\n\";\n        reverse(ops.begin(), ops.end());\n        cout << (int) ops.size() << \"\\n\";\n        for (int it : ops) {\n            cout << it << \" \";\n        }\n        cout << \"\\n\";\n    } else {\n        cout << \"NO\\n\";\n    }\n\n    return 0;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    return run();\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dfs and similar",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Transformation  from A to B.json",
    "editorial_link": "https://codeforces.com//blog/entry/47773",
    "editorial": "Letâs solve this problem in reverse way try to get the number from\r\n.Note, that if ends with 1 the last operation was to append the digit to\r\nthe right of current number. Because of that let delete last digit of\r\nand move to the new number.If the last digit is even the last operation\r\nwas to multiply the current number by . Because of that letâs divide on\r\n2 and move to the new number.In the other cases (if ends with odd digit\r\nexcept 1) the answer is . We need to repeat described algorithm after we\r\ngot the new number. If on some step we got the number equals to we find\r\nthe answer, and if the new number is less than the answer is .\r\n",
    "hint": []
}