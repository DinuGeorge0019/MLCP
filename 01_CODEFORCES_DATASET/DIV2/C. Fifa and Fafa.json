{
    "link": "https://codeforces.com//contest/935/problem/C",
    "problemId": "158423",
    "problem_idx": "C",
    "shortId": "935C",
    "contest_number": "935",
    "problem_submissions": {
        "E": [
            35490294,
            35492393,
            35493358,
            35495709,
            35495541,
            35493647,
            35499422,
            35499276,
            35500262,
            35500719,
            35500162,
            35500658,
            35500728,
            35499258,
            35501222,
            35495668,
            35497342,
            35498886
        ],
        "D": [
            35486074,
            35488065,
            35489775,
            35490762,
            35489358,
            35485225,
            35484887,
            35488795,
            35492000,
            35489470,
            35491505,
            35486948,
            35491669,
            35491916,
            35491520,
            35489051,
            35488153,
            35487210
        ],
        "C": [
            35484257,
            35486190,
            35486639,
            35485548,
            35486272,
            35495170,
            35490125,
            35484897,
            35485714,
            35486561,
            35487356,
            35493330,
            35488504,
            35487181,
            35485279,
            35490239
        ],
        "B": [
            35480395,
            35480198,
            35480227,
            35479698,
            35479918,
            35483145,
            35479197,
            35480428,
            35479972,
            35480181,
            35482318,
            35482750,
            35481424,
            35486459,
            35478821,
            35479749,
            35480541,
            35480932
        ],
        "A": [
            35478116,
            35476883,
            35477273,
            35476648,
            35476835,
            35476757,
            35476798,
            35478023,
            35477705,
            35477042,
            35477472,
            35478918,
            35478074,
            35478028,
            35476637,
            35476753,
            35478890,
            35477831
        ],
        "F": [
            42089787,
            35507058
        ]
    },
    "name": "C. Fifa and Fafa",
    "statement": "Fifa and Fafa are sharing a flat. Fifa loves video games and wants to\r\ndownload a new soccer game. Unfortunately, Fafa heavily uses the\r\ninternet which consumes the quota. Fifa can access the internet through\r\nhis Wi-Fi access point. This access point can be accessed within a range\r\nof meters (this range can be chosen by Fifa) from its position. Fifa\r\nmust put the access point inside the flat which has a circular shape of\r\nradius . Fifa wants to minimize the area that is not covered by the\r\naccess point inside the flat without letting Fafa or anyone outside the\r\nflat to get access to the internet.The world is represented as an\r\ninfinite 2D plane. The flat is centered at and has radius and Fafa\u2019s\r\nlaptop is located at , not necessarily inside the flat. Find the\r\nposition and the radius chosen by Fifa for his access point which\r\nminimizes the uncovered area.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ntypedef double real;\n\nlong long sqr(int x) {\n  return (long long)x * x;\n}\n\nint main(void) {\n  int r, x1, y1, x2, y2;\n  scanf(\"%d%d%d%d%d\", &r, &x1, &y1, &x2, &y2);\n  long long d2 = sqr(x2 - x1) + sqr(y2 - y1);\n  if (d2 >= sqr(r)) {\n    printf(\"%d %d %d\\n\", x1, y1, r);\n    return 0;\n  }\n  if (x1 == x2 && y1 == y2) {\n    printf(\"%.10lf %d %.10lf\\n\", x1 + 0.5 * r, y1, 0.5 * r);\n    return 0;\n  }\n  real d = sqrt((real)d2), c = (d + r) / (2 * d);\n  printf(\"%.10lf %.10lf %.10lf\\n\", x2 + (x1 - x2) * c, y2 + (y1 - y2) * c,\n         (d + r) / 2);\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Fifa and Fafa.json",
    "editorial_link": "https://codeforces.com//blog/entry/57889",
    "editorial": "Let be Fafa\u00e2\u0080\u0099s position and be the flat center. Obviously, the largest\r\nwifi circle we can draw will touch the point and a point on the flat\r\ncircle border . The diameter of the circle will be the distance between\r\nand . To maximize the area of the wifi circle, we will choose to be the\r\nfurthest point on the border from . This point lies on the line\r\nconnecting and . The center of wifi circle will be the midpoint of the\r\nline segment connecting and . If the point is outside the circle, then\r\nthe wifi circle will be the flat circle (). If the point lies on the\r\nflat center (), then there are infinite number of solutions as can be\r\nany point on the flat circle border.Complexity:\r\n"
}