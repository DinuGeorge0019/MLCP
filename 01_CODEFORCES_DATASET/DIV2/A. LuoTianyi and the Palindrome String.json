{
    "link": "https://codeforces.com//contest/1825/problem/A",
    "problemId": "1909752",
    "problem_idx": "A",
    "shortId": "1825A",
    "contest_number": "1825",
    "problem_submissions": {
        "D1": [
            205098688,
            205101217,
            205100501,
            205098085,
            205105358,
            205106691,
            205097320,
            205101458,
            205101211,
            205102125,
            205103728,
            205102249,
            205106340,
            205105928,
            205101924,
            205105249,
            205105719,
            205103742,
            205103072,
            205109754
        ],
        "D2": [
            205098621,
            205101261,
            205100547,
            205107217,
            205105435,
            205173465,
            205106414,
            205109037,
            205107008,
            205108684,
            205105267,
            205107641,
            205106928,
            205108946,
            205109909,
            213433020,
            205105391,
            205107707,
            205184919,
            205108051,
            205106347,
            205107832,
            205114205
        ],
        "C": [
            205096242,
            205095032,
            205091245,
            205092408,
            205094374,
            205094650,
            205092981,
            205094950,
            205095388,
            205097859,
            205092688,
            205095415,
            205092193,
            205097135,
            205097614,
            205099450,
            205098808,
            205088004,
            205106824,
            205095380
        ],
        "B": [
            205093377,
            205085123,
            205089166,
            205085761,
            205087791,
            205086427,
            205087169,
            205088420,
            205087106,
            205087675,
            205085814,
            205086933,
            205087152,
            205089093,
            205086378,
            205083686,
            205091949,
            205097416,
            205089403,
            205087179
        ],
        "A": [
            205081314,
            205078338,
            205079019,
            205079835,
            205080709,
            205079855,
            205080562,
            205080265,
            205078425,
            205081350,
            205081019,
            205079877,
            205079523,
            205078495,
            213433083,
            205079154,
            205079009,
            205079859,
            205091489,
            205080325,
            205079396
        ],
        "E": [
            205276652,
            205175537,
            205175154
        ]
    },
    "name": "A. LuoTianyi and the Palindrome String",
    "statement": "LuoTianyi gives you ^{\r\ndagger} string s, and she wants you to find out the length of the\r\nlongest non-empty subsequence^{\r\nddagger} of s which is not a palindrome string. If there is no such\r\nsubsequence, output -1 instead.^{\r\ndagger} A palindrome is a string that reads the same backward as\r\nforward. For example, strings \"\", \"\", \"\", \"\" are palindromes, but\r\nstrings \"\", \"\", \"\" are not.^{\r\nddagger} A string a is a subsequence of a string b if a can be obtained\r\nfrom b by deletion of several (possibly, zero or all) characters from b.\r\nFor example, strings \"\", \"\", \"\" are subsequences of string \"\", but\r\nstrings \"\", \"\", \"\" are not.\r\n",
    "solutions": [
        "#pragma GCC optimize(\"Ofast,unroll-loops\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\n#define int long long\nconst int N=2e5+5,M=305;\nusing namespace std;\nint n,f1,f2;\nstring s;\nvoid solve()\n{\n\tcin>>s;f1=f2=0;\n\tfor(int i=1;i<s.size();i++)\n\tif(s[i]!=s[i-1]){f2=1;break;}\n\tif(!f2)cout<<-1<<'\\n';\nelse cout<<s.size()-1<<'\\n';\n}\nint tt;\nsigned main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\ttt=1;\n\tcin>>tt;\n\twhile(tt--)solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. LuoTianyi and the Palindrome String.json",
    "editorial_link": "https://codeforces.com//blog/entry/116328",
    "editorial": "Consider the substring of s\n from the second character to the last, or s2s3?sn\n. If it's not palindrome, then the answer must be n?1\n. What if it's palindrome? This implies that s2=sn\n, s3=sn?1\n, and so on. Meanwhile, the fact that s\n is palindrome implies s1=sn\n, s2=sn?1\n, etc. So we get s1=sn=s2=sn?1=?\n or that all characters in s\n is the same. In this situation, every subsequence of s\n is palindrome of course, so the answer should be ?1\n.",
    "hint": []
}