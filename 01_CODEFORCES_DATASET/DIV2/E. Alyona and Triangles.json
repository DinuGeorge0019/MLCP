{
    "link": "https://codeforces.com//contest/682/problem/E",
    "problemId": "62842",
    "problem_idx": "E",
    "shortId": "682E",
    "contest_number": "682",
    "problem_submissions": {
        "E": [
            18561879,
            18561336,
            18563426,
            18572191,
            18568838
        ],
        "D": [
            18555791,
            18558610,
            18560557,
            18552272,
            18555181,
            18555531,
            18555300,
            18555970,
            18554396,
            18555899,
            18557118,
            18557764,
            18557208,
            18556682,
            18552327,
            18556733,
            18558689,
            18554285,
            18556142,
            18557417
        ],
        "C": [
            18552544,
            18555995,
            18556311,
            18552880,
            18552350,
            18565999,
            18551727,
            18552070,
            18553200,
            18552786,
            18550786,
            18553141,
            18554015,
            18554928,
            18554671,
            18557194,
            18554246,
            18553490,
            18557896,
            18552468,
            18554757
        ],
        "B": [
            18548869,
            18549933,
            18550925,
            18548469,
            18549125,
            18547478,
            18548571,
            18548891,
            18548990,
            18548117,
            18548700,
            18549479,
            18547648,
            18549616,
            18547660,
            18549624,
            18549820,
            18555517,
            18549964,
            18549305
        ],
        "A": [
            18548806,
            18547357,
            18547853,
            18549155,
            18547571,
            18566378,
            18547486,
            18547744,
            18547663,
            18548239,
            18547470,
            18547490,
            18548002,
            18547325,
            18548103,
            18548001,
            18547695,
            18548749,
            18554886,
            18547503,
            18547920
        ]
    },
    "name": "E. Alyona and Triangles",
    "statement": "You are given points with integer coordinates on the plane. Points are\r\ngiven in a way such that there is no triangle, formed by any three of\r\nthese points, which area exceeds .Alyona tried to construct a triangle\r\nwith integer coordinates, which contains all points and which area\r\ndoesn\u2019t exceed , but, by obvious reason, had no success in that. Please\r\nhelp Alyona construct such triangle. Please note that vertices of\r\nresulting triangle are not necessarily chosen from given points.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxm = 5011;\nstruct Point\n{\n\tlong long x,y;\n\tPoint (long long xx=0,long long yy=0)\n\t{\n\t\tx=xx;\n\t\ty=yy;\n\t}\n};\n\nPoint st[maxm];int top;\nPoint s[maxm];\nPoint a,b,c;\nPoint temp;\nlong long ans;\nPoint anspoint[4];\n\nint m;\nlong long mj;\n\nlong long sqr(long long u)\n{\n\treturn u*u;\n}\n\nlong long dis(Point a,Point b)\n{\n\treturn sqr(a.x-b.x)+sqr(a.y-b.y);\n}\n\nlong long cross(Point a,Point b,Point c)\n{\n\treturn (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\n\nbool cmp(Point a,Point b)\n{\n\tlong long k = cross(temp,a,b);\n\tif(k>0) return 1;\n\tif(k<0) return 0;\n\treturn dis(temp,a)<dis(temp,b);\n}\n\n\n\nvoid work()\n{\n\tfor(int i=2;i<=m;i++)\n\t\tif(s[i].y<s[1].y || (s[i].y==s[1].y && s[i].x<s[1].x))\n\t\t\tswap(s[i],s[1]);\n\ttemp = s[1];\n\tsort(s+2,s+m+1,cmp);\n\tst[1]=s[1];\n\tst[2]=s[2];\n\ttop=2;\n\tfor(int i=3;i<=m;i++)\n\t{\n\t\twhile(cross(st[top-1],st[top],s[i])<=0  && top>=2)--top;\n\t\tst[++top]=s[i];\n\t}\n}\n\nvoid getans()\n{\n\tans=0;\n\tfor(int i=1;i<=top;i++)\n\t{\n\t\tint j=i+1;if(j>top)j-=top;\n\t\tint k=j+1;if(k>top)k-=top;\n\t\tfor(;;)\n\t\t{\n\t\t\tint nxt = k+1;if(nxt>top)nxt-=top;\n\t\t\tif(abs(cross(st[i],st[j],st[k]))<abs(cross(st[i],st[j],st[nxt])))\n\t\t\t{\n\t\t\t\tk++;\n\t\t\t\tif(k>top)k-=top;\n\t\t\t}\n\t\t\telse\n\t\t\tbreak;\n\t\t}\n\t\twhile(i!= j && i!=k)\n\t\t{\n\t\t\tlong long ss = abs(cross(st[i],st[j],st[k]));\n\t\t\tif(ss>ans)\n\t\t\t{\n\t\t\t\tans=ss;\n\t\t\t\tanspoint[1]=st[i];\n\t\t\t\tanspoint[2]=st[j];\n\t\t\t\tanspoint[3]=st[k];\n\t\t\t}\n\t\t\tfor(;;)\n\t\t\t{\n\t\t\t\tint nxt = k+1;if(nxt>top)nxt-=top;\n\t\t\t\tif(abs(cross(st[i],st[j],st[k]))<abs(cross(st[i],st[j],st[nxt])))\n\t\t\t\t{\n\t\t\t\t\tk++;\n\t\t\t\t\tif(k>top)k-=top;\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\t\n\t\t\tj++;\n\t\t\tif(j>top)j-=top;\n\t\t}\n\t}\n}\n\nvoid print()\n{\n\t//for(int i=1;i<=3;i++)cout<<anspoint[i].x<<\" \"<<anspoint[i].y<<endl;\n\tPoint a = anspoint[1];\n\tPoint b = anspoint[2];\n\tPoint c = anspoint[3];\n\tcout<<c.x+a.x-b.x<<\" \"<<c.y+a.y-b.y<<endl;\n\tcout<<c.x-a.x+b.x<<\" \"<<c.y-a.y+b.y<<endl;\n\tcout<<a.x+b.x-c.x<<\" \"<<a.y+b.y-c.y<<endl;\n\t\n}\n\nint main()\n{\n\tscanf(\"%d%I64d\",&m,&mj);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%I64d%I64d\",&s[i].x,&s[i].y);\n\twork();\n\tgetans();\n\tprint();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry",
        "two pointers"
    ],
    "dificulty": "2600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Alyona and Triangles.json",
    "editorial_link": "https://codeforces.com//blog/entry/45491",
    "editorial": "Let\u00e2\u0080\u0099s find the triangle with maximum area among all triangles whose\r\nvertices belong to the set of points. (For with the convex hull and the\r\ntwo pointers). We can prove that if we take the triangle, whose vertices\r\nare the midpoints of the sides of the triangle with maximum area, the\r\narea of such a triangle is not greater than , and it contains all the\r\npoints of the set. Let us assume that there is a point lying outside the\r\ntriangle-response. Then we can get longer height to some side of\r\ntriangle, so we have chosen a triangle with not maximum\r\narea(contradiction).\r\n"
}