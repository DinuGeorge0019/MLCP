{
    "link": "https://codeforces.com//contest/402/problem/A",
    "problemId": "7178",
    "problem_idx": "A",
    "shortId": "402A",
    "contest_number": "402",
    "problem_submissions": {
        "D": [
            6050292,
            6050270,
            6036208,
            6037449,
            6037811,
            6039018,
            6037509,
            6040120,
            6039818,
            6037103,
            6036738,
            6052225,
            6039860,
            6039785,
            6039774,
            6040232
        ],
        "E": [
            6038241,
            6039548,
            6034213,
            6036604,
            6037264,
            6040176,
            6052113,
            6052116,
            6052103,
            6052109,
            6058832,
            6040173
        ],
        "C": [
            6035300,
            6033009,
            6036584,
            6037830,
            6033803,
            6032415,
            6034126,
            6031244,
            6034759,
            6038445,
            6040085,
            6032494,
            6038144,
            6039496,
            6032240,
            6032451,
            6036956,
            6037470,
            6036329
        ],
        "B": [
            6031930,
            6031993,
            6031901,
            6040691,
            6032027,
            6037381,
            6032782,
            6035428,
            6032969,
            6032924,
            6042413,
            6034839,
            6033326,
            6031868,
            6052288,
            6052274,
            6052263,
            6035033,
            6034789,
            6032424,
            6034406,
            6032490
        ],
        "A": [
            6030878,
            6030962,
            6031937,
            6034701,
            6030965,
            6033265,
            6031812,
            6031632,
            6036793,
            6034363,
            6031101,
            6031359,
            6030877,
            6031259,
            6031075,
            6033654,
            6031474,
            6031051
        ]
    },
    "name": "A. Nuts",
    "statement": "You have nuts and lots of boxes. The boxes have a wonderful feature: if\r\nyou put divisors (the spacial bars that can divide a box) to it, you get\r\na box, divided into sections.You are minimalist. Therefore, on the one\r\nhand, you are against dividing some box into more than sections. On the\r\nother hand, you are against putting more than nuts into some section of\r\nthe box. What is the minimum number of boxes you have to use if you want\r\nto put all the nuts in boxes, and you have divisors?Please note that you\r\nneed to minimize the number of used boxes, not sections. You do not have\r\nto minimize the number of used divisors.\r\n",
    "solutions": [
        "//Codeforces 236\n#include <cmath>\n\n#include <algorithm>\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nconst int INF = 1 << 30;\n\nint main() {\n  int k, a, b, v;\n  cin >> k >> a >> b >> v;\n\n  int answer = 0;\n  while (a > 0) {\n    int x = min(k - 1, b);\n    b -= x;\n    a -= (x + 1) * v;\n    answer += 1;\n  }\n\n  cout << answer;\n  return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Nuts.json",
    "editorial_link": "https://codeforces.com//blog/entry/10972",
    "editorial": "Let\u00e2\u0080\u0099s fix some value of boxes . After that we can get exactly of\r\nsections. So, if , then be an answer. After that you can use brute force\r\nto find smallest possible value of .\r\n"
}