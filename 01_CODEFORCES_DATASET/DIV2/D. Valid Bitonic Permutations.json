{
    "link": "https://codeforces.com//contest/1763/problem/D",
    "problemId": "1701407",
    "problem_idx": "D",
    "shortId": "1763D",
    "contest_number": "1763",
    "problem_submissions": {
        "C": [
            186020491,
            186014618,
            185970901,
            185991875,
            185997685,
            185982190,
            185984673,
            185981496,
            186009097,
            185973602,
            185981183,
            185984898,
            185981738,
            185976906,
            185977465
        ],
        "E": [
            185998794,
            185987416,
            185979003,
            185992302,
            186002492,
            185989056,
            185993894,
            186011236,
            186008232,
            186008161,
            185976627,
            185996244,
            185993843,
            185994524,
            185987330,
            185983728,
            186014244,
            186001030
        ],
        "D": [
            185995867,
            185980597,
            185999397,
            185984870,
            186005387,
            185985568,
            186006095,
            185982650,
            186022836,
            186016207,
            186014411,
            186000359,
            186003392,
            186001911,
            185991399,
            185982901,
            185988475,
            185988930,
            185993150,
            185994062
        ],
        "F": [
            185990818,
            186680252,
            186011772,
            186580963
        ],
        "B": [
            185964960,
            185964863,
            185976136,
            185966519,
            185970293,
            185964032,
            185970337,
            185968669,
            185966545,
            185964632,
            185967215,
            185968457,
            185964010,
            185967589,
            185966627,
            185963830,
            185965988,
            185967114,
            185965147
        ],
        "A": [
            185961159,
            185960941,
            185963086,
            185960882,
            185963700,
            185960926,
            185963152,
            185960960,
            185961563,
            185960964,
            185961279,
            185962189,
            185960916,
            185963432,
            185961791,
            185961037,
            185961928,
            185961021,
            185961325
        ]
    },
    "name": "D. Valid Bitonic Permutations",
    "statement": "You are given five integers n, i, j, x, and y. Find the number of\r\nbitonic permutations B, of the numbers 1 to n, such that B_i=x, and\r\nB_j=y. Since the answer can be large, compute it modulo 10^9+7.A bitonic\r\npermutation is a permutation of numbers, such that the elements of the\r\npermutation first increase till a certain index k, 2\r\nle k\r\nle n-1, and then decrease till the end. Refer to notes for further\r\nclarification.\r\n",
    "solutions": [
        "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int mod = 1000000007;\nlong long fac[101];\ninline long long qp(long long a, long long b) {\n\tlong long ans = 1;\n\tfor (; b; b >>= 1) {\n\t\tif (b & 1)\n\t\t\tans = ans * a % mod;\n\t\ta = a * a % mod;\n\t}\n\treturn ans;\n}\ninline long long C(int n, int m) {\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn fac[n] * qp(fac[m], mod - 2) % mod * qp(fac[n - m], mod - 2) % mod;\n}\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tint t;\n\tcin >> t;\n\tfac[0] = 1;\n\tfor (int i = 1; i <= 100; ++i)\n\t\tfac[i] = fac[i - 1] * i % mod;\n\tfor (; t--;) {\n\t\tint n, i, j, x, y;\n\t\tcin >> n >> i >> j >> x >> y;\n\t\tlong long ans = 0;\n\t\tif (x > y) {\n\t\t\tswap(x, y);\n\t\t\ti = n - i + 1;\n\t\t\tj = n - j + 1;\n\t\t\tswap(i, j);\n\t\t}\n\t\tif (y == n) {\n\t\t\tif (j != n)\n\t\t\t\tans = C(y - x - 1, j - i - 1) * C(x - 1, i - 1) % mod;\n\t\t}\n\t\telse {\n\t\t\tfor (int p = n - 1; p > j; --p)\n\t\t\t\tans = (ans + C(y - x - 1, j - i - 1) * C(x - 1, i - 1) % mod * C(n - y - 1, p - j - 1) % mod) % mod;\n\t\t\tfor (int p = j - 1; p > i; --p) {\n\t\t\t\tfor (int k = 0; k <= y - x - 1; ++k) {\n\t\t\t\t\tif (k + j - p + p - i > n - x)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tans = (ans + C(x - 1, i - 1) * C(n - y - 1, j - p - 1) % mod * C(x - i, n - j - k) % mod * C(y - x - 1, k) % mod) % mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << '\\n';\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Valid Bitonic Permutations.json",
    "editorial_link": "https://codeforces.com//blog/entry/110278",
    "editorial": "For simplicity, if x>y\n, perform i?=n?j+1\n, j?=n?i+1\n, x?=y\n, and y?=x\n. Hereafter, the variables i\n, j\n, x\n, and y\n, will refer to these values. Now, i<j\n and x<y\n.\n\nFor now, assume that y<n\n. We shall consider the case where y=n\n at a later stage.\nLet us consider solving the problem for fixed k\n. Valid values for k\n are [2,i?1]\n, [i+1,j?1]\n, [j+1,n?1]\n.\nIf we think about it, when x<y\n, k\n cannot lie in the range [2,i?1]\n. So, we can discard them as possible values for k\n.\n\nLet us consider the case where k\n belongs to [i+1,j?1]\n.\nThe permutation adheres to the following pattern: B1<..<Bi=x<..<Bk=n>..>Bj=y>..>Bn\n.\n\nNumbers to the left of i\n must lie in the range [1,x?1]\n. We choose i?1\n elements from [1,x?1]\n and place them to the left of i\n. There are (x?1i?1)\n ways to do this. The remaining x?i\n elements from [1,x?1]\n lie to the right of j\n by default.\nNumbers to the right of j\n must lie in the range [1,x?1]\n or [x+1,y?1]\n. Since numbers in the range [1,x?1]\n have already been placed, therefore, we choose numbers in the range [x+1,y?1]\n, and place them in the n?j?(x?i)\n remaining positions. There are (y?x?1n?j?(x?i))\n ways to do this. The remaining elements in the range [x+1,y?1]\n lie between i\n and k\n by default.\nNumbers between k\n and j\n must lie in the range [y+1,n?1]\n. We choose j?k?1\n elements from [y+1,n?1]\n and place them between k\n and j\n. There are (n?y?1j?k?1)\n ways to do this. Afterwards, the remaining elements in the range lie between i\n and k\n by default, and the permutation is full.\nMultiplying the ways for the above three actions, we get that the answer for a fixed k\n, when between i\n and j\n as:\n(x?1i?1)?(y?x?1n?j?(x?i))?(n?y?1j?k?1)\nLet us consider the case where k\n belongs to the range [j+1,n?1]\n.\nThe permutation adheres to the following pattern: B1<..<Bi=x<..<Bj=y<..<Bk=n>..>Bn\n.\n\nSimilar to above, the numbers to the left of i\n must lie in the range [1,x?1]\n. We choose i?1\n elements from [1,x?1]\n, and place them to the left of i\n. The remaining x?i\n elements from [1,x?1]\n lie to the right of k\n by default.\nNumbers between i\n and j\n must lie in the range [x+1,y?1]\n. We choose j?i?1\n elements from [x+1,y?1]\n and place them between i\n and j\n. There are (y?x?1j?i?1)\n ways to do this, and the remaining elements from [x+1,y?1]\n lie to the right of k\n by default.\nNumbers between j\n and k\n must lie in the range [y+1,n?1]\n. We choose k?j?1\n elements from [y+1,n?1]\n and place them in these positions. Afterwards, the remaining elements in the range get placed to the right of k\n by default, and the permutation is full.\nMultiplying the ways for the above three actions, we get the answer for a fixed k\n, when between j+1\n, and n?1\n as:\n(x?1i?1)?(y?x?1j?i?1)?(n?y?1k?j?1)\nThe answer to the problem is the sum of individual answers for all iterated values of k\n.\n\nans=(x?1i?1)?(y?x?1n?j?(x?i))??j?1k=i+1(n?y?1j?k?1)\n + (x?1i?1)?(y?x?1j?i?1)??n?1k=j+1(n?y?1k?j?1)\nLet us now consider the case where y=n\n.\nThe permutation adheres to the following pattern: B1<..<Bi=x<..<Bj=Bk=n>..>Bn\n.\n\nAgain, the numbers to the left of i\n must lie in the range [1,x?1]\n. We choose i?1\n elements from [1,x?1]\n and place them to the left of i\n. The remaining x?i\n elements from [1,x?1]\n lie to the right of j\n (here, k\n) by default.\nNumbers between i\n and j\n must lie in the range [x+1,y?1]\n. We choose j?i?1\n elements form [x+1,y?1]\n and place them between i\n and j\n. The remaining elements from [x+1,y?1]\n lie to the right of j\n (here, k\n) by default, and the permutation is full.\nMultiplying the ways for the above two actions, we get the answer for k=j\n (y=n\n) as:\n(x?1i?1)?(y?x?1j?i?1)\nWith O(nmax?log(109+7?2))\n precomputation for factorials and their modular inverses, each individual test can be solved as above in O(n)\n. Therefore, the overall complexity of this approach is O(nmax?log(109+7?2)+t?n)\n, but the constraints allowed for slower solutions as well.\n\nBonus:\n Can you solve the problem when 1?t,n?105\n.",
    "hint": [
        "Hint 1 Can you solve the problem when ? Spoiler When , perform , , , and .",
        "Hint 2 Can you solve the problem for a fixed value of ? Spoiler Iterate over possible values of . The total count is the sum of the individual counts.",
        "Hint 3 Club the remaining numbers into ranges as follows: , , and ."
    ]
}