{
    "link": "https://codeforces.com//contest/758/problem/B",
    "problemId": "89336",
    "problem_idx": "B",
    "shortId": "758B",
    "contest_number": "758",
    "problem_submissions": {
        "F": [
            23961911,
            23961832,
            23965370,
            23967077,
            23964444,
            23962828,
            23961458,
            23959907,
            23962385,
            23972421,
            23961385
        ],
        "E": [
            23961199,
            23969660
        ],
        "D": [
            23954905,
            23959005,
            23958687,
            23961234,
            23966280,
            23981466,
            23957019,
            23970497,
            23990624,
            23958899,
            23958219,
            23957228,
            23958436,
            23958155
        ],
        "C": [
            23954486,
            23955509,
            23955744,
            23956366,
            23958572,
            23953897,
            23975736,
            23955059,
            23956120,
            23952427,
            23952244,
            23955152,
            23953675,
            23954430,
            23955137,
            23954127,
            23955341,
            23955536,
            23969442,
            23966778
        ],
        "B": [
            23949178,
            23953141,
            23951861,
            23953552,
            23951433,
            23950823,
            23950433,
            23961140,
            23952985,
            23949054,
            23949507,
            23952101,
            23950424,
            23951944,
            23951182,
            23950619,
            23951222,
            23951421,
            23953877
        ],
        "A": [
            23947216,
            23950206,
            23947310,
            23949396,
            23949600,
            23947716,
            23947436,
            23947618,
            23948628,
            23947219,
            23947297,
            23948336,
            23948103,
            23948298,
            23947546,
            23947915,
            23948934,
            23948465
        ]
    },
    "name": "B. Blown Garland",
    "statement": "Nothing is eternal in the world, Kostya understood it on the 7-th of\r\nJanuary when he saw partially dead four-color garland.Now he has a goal\r\nto replace dead light bulbs, however he doesn’t know how many light\r\nbulbs for each color are required. It is guaranteed that for each of\r\nfour colors at least one light is working.It is known that the garland\r\ncontains light bulbs of four colors: red, blue, yellow and green. The\r\ngarland is made as follows: if you take any four consecutive light bulbs\r\nthen there will not be light bulbs with the same color among them. For\r\nexample, the garland can look like \"\", \"\", \"\", but can not look like \"\",\r\n\"\" or \"\". Letters denote colors: ” red, ” blue, ” yellow, ” green.Using\r\nthe information that for each color at least one light bulb still works\r\ncount the number of dead light bulbs of each four colors.\r\n",
    "solutions": [
        "//#include <bits/stdc++.h>\n#include <iostream>\nusing namespace std;\ntypedef long long ll;\nll n,mx,x,sum,a[222],b[4];\nstring s;\nint main()\n{\n\tcin>>s;\n\tn=s.size();\n\tfor(ll i=0;i<n;i++)\n\t\tif(s[i]!='!')\n\t\t\ta[s[i]]=i%4;\n\tfor(ll i=0;i<n;i++)\n\t\tif(s[i]=='!')\n\t\t\tb[i%4]++;\n\tcout<<b[a['R']]<<\" \"<<b[a['B']]<<\" \"<<b[a['Y']]<<\" \"<<b[a['G']];\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "number theory"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Blown Garland.json",
    "editorial_link": "https://codeforces.com//blog/entry/49880",
    "editorial": "Four consecutive bulbs should not be of the same color, and it is four\r\npossible colors, so the color of the fifth bulb is the same as the first\r\nbulb has, the color of the sixth is the same as the second bulb has, it\r\nmeans that the color of the -th bulb equals the color of the -th bulb.\r\nThus, the coordinates of all bulbs of the same color equal in module .\r\nAccording to the conditions of the problem the coordinate of at least\r\none light bulb of each color is given, so we can restore the garland and\r\nby one pass count the number of blown bulbs. By one pass we learn how\r\nnumbers in module correspond to the colors. By the second pass we know\r\nthe place of the bulb and count the number of blown bulbs of each color.\r\nThe asymptotic behavior of the solutions is O(n).There is also a second\r\nsolution:You can just fix order of first four light bulbs by bruteforce\r\n(there is only variants), checking the conformity of each option of the\r\ngiven garland. By finding the color of the first four bulbs we easily\r\nrecreate the garland with working lights and count the number of blown\r\nbulbs. At worst this decision will work for .\r\n",
    "hint": []
}