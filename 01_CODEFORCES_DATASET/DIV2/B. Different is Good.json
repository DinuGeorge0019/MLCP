{"link": "https://codeforces.com//contest/672/problem/B", "problemId": "60098", "problem_idx": "B", "shortId": "672B", "contest_number": "672", "problem_submissions": {"C": [17856476, 17853425, 17852741, 17852810, 17852764, 17854543, 17856540, 17854000, 17853586, 17855118, 17853759, 17853554, 17853180, 17854462, 17853629, 17853161, 17853214, 17865502, 17859793, 17859514], "D": [17852118, 17858174, 17856012, 17857596, 17856195, 17857363, 17858832, 17857387, 17858587, 17857119, 17858225, 17860087, 17858562, 17857585, 17859522, 17859339, 17860159, 17854799, 17856775], "B": [17848405, 17848346, 17848631, 17848242, 17849000, 17847344, 17849580, 17849023, 17847521, 17848536, 17848862, 17849481, 17847879, 17848731, 17848257, 17848469, 17848411, 17847104, 17848038], "A": [17847684, 17846273, 17846879, 17847114, 17846719, 17846366, 17848073, 17846594, 17847473, 17847264, 17847568, 17846784, 17846882, 17847074, 17847356, 17846915, 17846201, 17846769], "E": [17933035]}, "name": "B. Different is Good", "statement": "A wise man told Kerem \"Different is good\" once, so Kerem wants all\r\nthings in his life to be different. Kerem recently got a string\r\nconsisting of lowercase English letters. Since Kerem likes it when\r\nthings are different, he wants all of his string to be distinct.\r\nSubstring is a string formed by some number of consecutive characters of\r\nthe string. For example, string \"\" has substrings \"\" (empty substring),\r\n\"\", \"\", \"\", \"\", \"\", \"\".If string has at least two equal substrings then\r\nKerem will change characters at some positions to some other lowercase\r\nEnglish letters. Changing characters is a very tiring job, so Kerem want\r\nto perform as few changes as possible.Your task is to find the minimum\r\nnumber of changes needed to make all the substrings of the given string\r\ndistinct, or determine that it is impossible.\r\n", "solutions": ["/*\nID: xildar91\nPROG: humble\nLANG: C++11\n*/\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef  long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\nint inf_int=2e9;\nll inf_ll=2e18;\ntypedef pair<int,int> pii;\n#define pb push_back\nconst double pi=3.1415926535898;\n#define dout if(debug) cout\n#define fi first\n#define se second\n#define sp setprecision\n#define sz size()\n\ntemplate<typename T,typename T1>\nvoid prin(vector<pair<T,T1> >& a)\n{\n    for(int i=0;i<a.size();i++)\n    {\n        cout << a[i].fi<<\" \"<<a[i].se<<\"\\n\";\n    }\n}\n/*\ntemplate<typename T,typename T1>\nvoid prin(set<pair<T,T1> >& a)\n{\n    for(auto it=a.begin();it!=a.end();it++)\n    {\n        cout <<it->fi <<\" \"<<it->se<<\"\\n\";\n    }\n}*/\ntemplate<typename T>\nvoid prin(vector<T>& a)\n{\n    for(int i=0;i<a.size();i++)\n    {\n        cout << a[i];\n        if(i<a.size()-1)\n            cout<<\" \";\n        else\n            cout <<\"\\n\";\n    }\n}\ntemplate<typename T>\nvoid prin(set<T>& a)\n{\n    for(auto it=a.begin();it!=a.end();it++)\n    {\n        cout << *it<<\" \";\n    }\n}\ntemplate<typename T>\nvoid prin_new_line(vector<T>& a)\n{\n    for(int i=0;i<a.size();i++)\n    {\n        cout << a[i]<<\"\\n\";\n    }\n}\ntemplate<typename T,typename T1>\nvoid prin_new_line(vector<pair<T,T1> >& a)\n{\n    for(int i=0;i<a.size();i++)\n    {\n        cout << a[i].fi<<\" \"<<a[i].se<<\"\\n\";\n    }\n}\n\nint sum_vec(vector<int>& a)\n{\n    int s=0;\n    for(int i=0;i<a.size();i++)\n    {\n        s+=a[i];\n    }\n    return s;\n}\ntemplate<typename T>\nT max(vector<T>& a)\n{\n    T ans=a[0];\n    for(int i=1;i<a.size();i++)\n    {\n        ans=max(ans,a[i]);\n    }\n    return ans;\n}\ntemplate<typename T>\nT min(vector<T>& a)\n{\n    T ans=a[0];\n    for(int i=1;i<a.size();i++)\n    {\n        ans=min(ans,a[i]);\n    }\n    return ans;\n}\ntemplate<typename T>\nT min(T a,T b,T c)\n{\n    return min(a,min(b,c));\n}\ntemplate<typename T>\nT max(T a,T b,T c)\n{\n    return max(a,max(b,c));\n}\n\nlong double s_triangle(long double x1,long double y1,long double x2,long double y2,long double x3,long double y3)\n{\n    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);\n}\nbool overflow(ll a,ll b)\n{\n    if(a*b/b!=a)\n        return true;\n    return false;\n}\n\n\n\n#define x1 gfgs\n#define y1 asd\n#define rank asdsad\nbool debug=0;\nconst int maxn=4e4+107;\nll mod=1e9+7;\n\nvoid solve()\n{\n    int n;\n    cin >> n;\n    string a;\n    cin >>a;\n    if(n>26)\n    {\n        cout << -1;\n        return;\n    }\n    map<int,int> mp;\n    int ans=0;\n    for(int i=0;i<n;i++)\n    {\n        int x=a[i];\n        if(mp[x])\n        {\n            ans++;\n        }\n        else\n        {\n            mp[x]=1;\n        }\n    }\n    cout << ans;\n\n}\n\n\n#define FILE \"bridges\"\nint main()\n{\n\n       // freopen(\"a.txt\",\"r\",stdin);\n       // freopen(\"output.txt\",\"w\",stdout);\n\n      //   freopen(FILE\".in\",\"r\",stdin);\n      //   freopen(FILE\".out\",\"w\",stdout);\n       if(!debug)\n       {\n            ios_base::sync_with_stdio(0);\n            cin.tie(0);\n           cout.tie(0);\n       }\n        int t=1;\n        while(t--)\n            solve();\n        return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "implementation", "strings"], "dificulty": "1000", "interactive": false}