{"link": "https://codeforces.com//contest/63/problem/C", "problemId": "338", "problem_idx": "C", "shortId": "63C", "contest_number": "63", "problem_submissions": {"E": [311463, 311795, 311658, 312041, 311459, 311614, 312617, 312614, 312611, 311794, 313907], "D": [310975, 311092, 311255, 311536, 312237, 314064, 312662, 313516, 311785, 311719, 311559, 312152, 311462, 311572], "C": [310530, 310622, 311964, 310809, 310631, 310750, 310684, 311187, 310895, 310934, 311409, 312431, 312213], "B": [310080, 310144, 310881, 310482, 310197, 310082, 310056, 310432, 310241, 310401, 310624, 310354, 310493], "A": [309670, 309659, 310177, 310020, 309894, 309667, 309653, 309878, 309812, 309824, 309970, 309929, 310031]}, "name": "C. Bulls and Cows", "statement": "The \"Bulls and Cows\" game needs two people to play. The thinker thinks\r\nof a number and the guesser tries to guess it.The thinker thinks of a\r\nfour-digit number in the decimal system. All the digits in the number\r\nare different and the number may have a leading zero. It can\u2019t have more\r\nthan one leading zero, because all it\u2019s digits should be different. The\r\nguesser tries to guess the number. He makes a series of guesses, trying\r\nexperimental numbers and receives answers from the first person in the\r\nformat \" bulls cows\". represents the number of digits in the\r\nexperimental number that occupy the same positions as in the sought\r\nnumber. represents the number of digits of the experimental number that\r\npresent in the sought number, but occupy different positions. Naturally,\r\nthe experimental numbers, as well as the sought number, are represented\r\nby four-digit numbers where all digits are different and a leading zero\r\ncan be present.For example, let\u2019s suppose that the thinker thought of\r\nthe number . Then the guessers\u2019 experimental number will receive a reply\r\n\"1 bull 2 cows\" (3 occupies the same positions in both numbers and 1 and\r\n2 are present in both numbers but they occupy different positions).\r\nAlso, the answer to number will be \"2 bulls 1 cow\" (analogically, 1 and\r\n3 occupy the same positions and 0 occupies a different one). When the\r\nguesser is answered \"4 bulls 0 cows\", the game is over.Now the guesser\r\nhas already made several guesses and wants to know whether his next\r\nguess can possibly be the last one.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <map>\n#include <set>\n#include <vector>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nchar s[15];\nint ok[10005];\nchar a[15];\n\nint main (void)\n{\n  int n;\n  scanf(\"%d\", &n);\n\n  for (int j=0; j<=9999; j++) \n     ok[j] = 1;\n\n  for (int i=0; i<n; i++) {\n    int b, c;\n    scanf(\"%s %d %d\", s, &b, &c);\n\n    for (int j=0; j<=9999; j++) \n      if (ok[j]) {\n        int bb = b, cc = c;\n        int good=1;\n        int x = j;\n        for (int t=0; t<4; t++) {\n          a[3-t] = x%10 + '0';\n          x /= 10;\n        }\n        for (int t=0; t<4; t++)\n          for (int p=t+1; p<4; p++)\n            if (a[t] == a[p])\n              good = 0;\n\n        for (int t=0; t<4; t++)\n          if (a[t] == s[t])\n            bb--;\n        for (int t=0; t<4; t++)\n          for (int p=0; p<4; p++)\n            if (p!=t && a[p] == s[t])\n              cc--;\n        if (bb || cc)\n          good = 0;\n        if (!good)\n          ok[j] = 0;\n      }\n  }\n\n  int total = 0, ans = -1;\n  for (int i=0; i<=9999; i++) {\n    if (ok[i]) {\n      total++;\n      ans = i;\n    }\n  }\n\n  if (total > 1) \n    puts(\"Need more data\");\n  else if (total == 0) \n    puts(\"Incorrect data\");\n  else\n    printf(\"%04d\\n\", ans);\n\n  return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "implementation"], "dificulty": "1700", "interactive": false}