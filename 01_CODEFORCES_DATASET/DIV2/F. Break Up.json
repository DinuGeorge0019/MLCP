{"link": "https://codeforces.com//contest/701/problem/F", "problemId": "66142", "problem_idx": "F", "shortId": "701F", "contest_number": "701", "problem_submissions": {"E": [19339232, 19339967, 19337387, 19341119, 19340472, 19343370, 19332036, 19343768, 19337227, 19342206, 19342884, 19343434, 19342706, 19342112, 19341446, 19342774, 19344918, 19340782, 19346141], "D": [19336197, 19336702, 19340772, 19337219, 19338809, 19336973, 19345986, 19337675, 19341726, 19340266, 19337393, 19339026, 19340545, 19339268, 19343887, 19339934, 19334768, 19345648, 19338666], "C": [19331548, 19332315, 19332582, 19333338, 19335372, 19333598, 19333759, 19333561, 19330276, 19333948, 19333692, 19333063, 19336324, 19334938, 19331957, 19334534, 19332828, 19333541, 19333823], "B": [19328928, 19333250, 19330458, 19331322, 19331881, 19330225, 19337888, 19330033, 19333637, 19330238, 19331397, 19328913, 19331820, 19331326, 19330196, 19332294, 19330540, 19331717, 19331319], "A": [19328299, 19329195, 19329297, 19328777, 19328512, 19328665, 19336083, 19328494, 19331305, 19328347, 19328615, 19328349, 19330505, 19328746, 19328523, 19328329, 19328905, 19329447, 19329651], "F": [19425122, 19349150, 19462368, 19462354]}, "name": "F. Break Up", "statement": "Again, there are hard times in Berland! Many towns have such tensions\r\nthat even civil war is possible. There are towns in Reberland, some\r\npairs of which connected by two-way roads. It is not guaranteed that it\r\nis possible to reach one town from any other town using these roads.\r\nTowns and announce the final break of any relationship and intend to\r\nrule out the possibility of moving between them by the roads. Now\r\npossibly it is needed to close several roads so that moving from to\r\nusing roads becomes impossible. Each town agrees to spend money on\r\nclosing no more than one road, therefore, the total number of closed\r\nroads will be .Help them find set of no more than two roads such that\r\nthere will be no way between and after closing these roads. For each\r\nroad the budget required for its closure was estimated. Among all sets\r\nfind such that the total budget for the closure of a set of roads is\r\nminimum.\r\n", "solutions": ["#include<iostream>\n#include<vector>\n#include<cstring>\n\nusing namespace std;\n\nstruct edge\n{\n\tint a, b, c;\n\tedge() {}\n\tedge(int x, int y, int z) {a = x, b = y, c = z;}\n};\n\nvector<pair<int, int> > G[1005];\nbool T[30005];\nint n, m, a, b;\nvector<int> path;\nvector<edge> E;\nint low[1005];\nbool vst[1005];\nlong long mn = 2000000000, mne;\nbool t = false, t2 = false;\nint pre[1005];\nint time = 0;\n\nvoid dfs1(int s)\n{\n\tvst[s] = true;\n\tif (s == b) throw 1;\n\tfor (int i = 0; i < G[s].size(); i++)\n\t{\n\t\tint u = G[s][i].first;\n\t\tif (vst[u]) continue;\n\t\tpath.push_back(G[s][i].second);\n\t\tdfs1(u);\n\t\tpath.pop_back();\n\t}\n}\n\nbool dfs2(int s, int p)\n{\n\t//cout << \"s: \" << s << \"\\n\";\n\tvst[s] = true;\n\ttime++;\n\tlow[s] = pre[s] = time;\n\tbool t3 = false;\n\tif (s == b)\n\t\tt = t2 = true;\n\tfor (int i = 0; i < G[s].size(); i++)\n\t{\n        int u = G[s][i].first;\n        int k = G[s][i].second;\n        if (T[k]) continue;\n        if (vst[u])\n\t\t{\n\t\t\tif (k != p)\n\t\t\t\tlow[s] = min(low[s], pre[u]);\n\t\t\tcontinue;\n\t\t}\n        bool t4 = dfs2(u, k);\n        t3 |= t4;\n\t\t//cout << pre[s] << \" \" << u << \" \" << k << \" \" << low[u] << \"\\n\";\n        low[s] = min(low[s], low[u]);\n        if (low[u] > pre[s] and !t and t4)\n\t\t{\n\t\t\t//cout << \"t: \" << s << \" \" << u << \" \" << k << \"\\n\";\n\t\t\tif (mn > E[k].c)\n\t\t\t{\n\t\t\t\tmn = E[k].c;\n\t\t\t\tmne = k;\n\t\t\t}\n\t\t}\n\t}\n\tif (s == b)\n\t\tt = false;\n\treturn (t3 || (s == b));\n}\n\nint main()\n{\n\tios_base::sync_with_stdio(0);\n\tcin >> n >> m >> a >> b;\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tint x, y, z;\n\t\tcin >> x >> y >> z;\n\t\tG[x].push_back(make_pair(y, i));\n\t\tG[y].push_back(make_pair(x, i));\n\t\tE.push_back(edge(x, y, z));\n\t}\n\ttry { dfs1(a); }\n\tcatch (...) {}\n\n\tif (path.empty())\n\t{\n\t\tcout << \"0\\n0\\n\";\n\t\treturn 0;\n\t}\n\tint c = 0;\n\tint e1, e2;\n\tlong long ans = 20000000000;\n\tfor (int i = 0; i < path.size(); i++)\n\t{\n\t\t//cout << path[i] + 1 << \":\\n\";\n\t\tT[path[i]] = true;\n\t\tmemset(vst, 0, sizeof(vst));\n\t\tmemset(low, 0, sizeof(low));\n\n\t\tmn = 20000000000;\n\t\tt2 = false;\n\t\ttime = 0;\n\t\tdfs2(a, -1);\n\t\t//cout << \"mn: \" << mn << \"\\n\";\n\t\t//for (int j = 1; j <= n; j++) cout << low[j] << \" \";\n\t\t//cout << \"\\n\";\n\t\tif (!t2) mn = 0;\n\t\tif (ans > E[path[i]].c + mn)\n\t\t{\n\t\t\t//cout << \"E: \" << E[path[i]].c << \" \" << mne << \"\\n\";;\n            ans = E[path[i]].c + mn;\n\t\t\te1 = path[i];\n            if (mn == 0)\n\t\t\t{\n\t\t\t\tc = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc = 2;\n\t\t\t\te2 = mne;\n\t\t\t}\n\t\t}\n\n\t\tT[path[i]] = false;\n\t}\n\tif (ans == 20000000000) cout << \"-1\\n\";\n\telse\n\t{\n\t\tcout << ans << \"\\n\";\n\t\tcout << c << \"\\n\";\n\t\tcout << e1 + 1 << \" \";\n\t\tif (c == 2) cout << e2 + 1<< \"\\n\";\n\t}\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["graphs"], "dificulty": "2600", "interactive": false}