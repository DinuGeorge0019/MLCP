{
    "link": "https://codeforces.com//contest/1979/problem/B",
    "problemId": "2684280",
    "problem_idx": "B",
    "shortId": "1979B",
    "contest_number": "1979",
    "problem_submissions": {
        "F": [
            264479061,
            264488646,
            264505247,
            264595233,
            264619291
        ],
        "E": [
            264463709,
            264456182,
            264454663,
            264460110,
            264469235,
            264463422,
            264466790,
            264478578,
            264473477,
            264470909,
            264471670,
            264477459,
            264475074,
            264468357,
            264475963,
            264472031,
            264477800,
            264475608,
            264472217
        ],
        "D": [
            264443096,
            264466698,
            264438605,
            264433389,
            264436848,
            264441621,
            264445629,
            264439468,
            264443494,
            264448547,
            264437284,
            264438609,
            264445824,
            264448565,
            264448792,
            264448782,
            264436980,
            264445527,
            264444587
        ],
        "C": [
            264426913,
            264419354,
            264425968,
            264424857,
            264419880,
            264427385,
            264428474,
            264417768,
            264426268,
            264426216,
            264426191,
            264428203,
            264424558,
            264432779,
            264423537,
            264427769,
            264423741,
            264426473,
            264428054
        ],
        "B": [
            264418439,
            264411481,
            264417433,
            264418710,
            264412854,
            264416785,
            264417289,
            264409596,
            264415411,
            264416480,
            264411733,
            264416203,
            264418002,
            264418445,
            264413144,
            264415814,
            264415134,
            264412074,
            264419017
        ],
        "A": [
            264409604,
            264408727,
            264409156,
            264412898,
            264408950,
            264409241,
            264410321,
            264408352,
            264408494,
            264408922,
            264408390,
            264408516,
            264410187,
            264409625,
            264408487,
            264409057,
            264408498,
            264408238,
            264408615
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130213",
    "editorial": "SolutionConsider two numbers and such that . Then consider the numbers\r\nand . Let\u00e2\u0080\u0099s look at the last bit of and . Possible scenarios: Both bits\r\nare equal to adding one will change the bits at the same positions,\r\ntherefore ; Both bits are equal to adding one will change the bits at\r\nthe same positions and also add one to the next bit, therefore we can\r\nsimilarly consider the next bit; Bits are different adding one to the\r\nzero bit will only change one bit, while the subsequent bit of the other\r\nnumber will be changed. This means that . It is clear that we need to\r\nmaximize the number of zeros in the maximum matching suffix of and .\r\nObviously, this number is equal to the maximum matching suffix of and .\r\nLet be the length of the maximum matching suffix of and , then the\r\nanswer is .This can be calculated in time for one test case, where is\r\nthe limit on and .\r\n",
    "name": "B. XOR Sequences",
    "statement": "You are given two distinct non-negative integers x and y. Consider two\r\ninfinite sequences a_1, a_2, a_3,\r\nldots and b_1, b_2, b_3,\r\nldots, where a_n = n\r\noplus x; b_n = n\r\noplus y. Here, x\r\noplus y denotes the bitwise XOR operation of integers x and y.For\r\nexample, with x = 6, the first 8 elements of sequence a will look as\r\nfollows: [7, 4, 5, 2, 3, 0, 1, 14,\r\nldots]. Note that the indices of elements start with 1.Your task is to\r\nfind the length of the longest common subsegment^\r\ndagger of sequences a and b. In other words, find the maximum integer m\r\nsuch that a_i = b_j, a_{i + 1} = b_{j + 1},\r\nldots, a_{i + m - 1} = b_{j + m - 1} for some i, j\r\nge 1.^\r\ndaggerA subsegment of sequence p is a sequence p_l,p_{l+1},\r\nldots,p_r, where 1\r\nle l\r\nle r.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;#define ll long long#define MP make_pairmt19937 rnd(time(0));int main(){\tios::sync_with_stdio(false);\t// freopen(\"Otomachi_Una.in\",\"r\",stdin);\t// freopen(\"Otomachi_Una.out\",\"w\",stdout);\tint _;cin>>_;\twhile(_--){\t\tint x,y;cin>>x>>y;\t\tx^=y;\t\tcout<<(x&-x)<<'\\n';\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "greedy"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. XOR Sequences.json"
}