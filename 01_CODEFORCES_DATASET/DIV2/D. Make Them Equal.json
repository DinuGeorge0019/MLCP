{
    "link": "https://codeforces.com//contest/1417/problem/D",
    "problemId": "740374",
    "problem_idx": "D",
    "shortId": "1417D",
    "contest_number": "1417",
    "problem_submissions": {
        "D": [
            94021013,
            93997987,
            93994414,
            94008928,
            93994813,
            93993974,
            93997393,
            93994886,
            93995533,
            94000707,
            94022056,
            93991179,
            93997856,
            94000293,
            94004446,
            94003381,
            93990919,
            93999146,
            94004809,
            93994289,
            93993273
        ],
        "C": [
            94008586,
            93979621,
            93985626,
            93982539,
            93981622,
            93998363,
            93982359,
            93986555,
            93983202,
            93992239,
            93983337,
            93991411,
            93986598,
            93990140,
            93991651,
            94001522,
            93986870,
            93985359,
            93998445,
            93985761
        ],
        "B": [
            94003048,
            93973490,
            93978330,
            93975968,
            93973585,
            93982217,
            93975658,
            93979313,
            93975689,
            93981775,
            93977350,
            93981714,
            93975469,
            93979278,
            93978354,
            96285430,
            93978356,
            93980291,
            93977440,
            94041345,
            93979236,
            93977870
        ],
        "A": [
            94001724,
            93970294,
            93970800,
            93971885,
            93969936,
            93980954,
            93971325,
            93970349,
            93971917,
            93971289,
            93969984,
            93970972,
            93971064,
            93971068,
            93971066,
            96285403,
            93971270,
            93973889,
            93971400,
            94041333,
            93974793,
            93971921
        ],
        "E": [
            94000180,
            93995718,
            94008025,
            93998585,
            94011058,
            94003165,
            94008902,
            94012205,
            94012202,
            94009571,
            94022535,
            94014181,
            94009089,
            94015399,
            94011955,
            94009323,
            94016150,
            94015958,
            94013413,
            94011012,
            94019762
        ],
        "F": [
            93992993,
            94142204,
            94142122
        ]
    },
    "name": "D. Make Them Equal",
    "statement": "You are given an array a consisting of n integers, numbered from 1 to n.\r\nYou can perform the following operation no more than 3n times: choose\r\nthree integers i, j and x (1\r\nle i, j\r\nle n; 0\r\nle x\r\nle 10^9); assign a_i := a_i - x\r\ncdot i, a_j := a_j + x\r\ncdot i. After each operation, all elements of the array should be .Can\r\nyou find a sequence of no more than 3n operations after which all\r\nelements of the array are equal?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nconst int N = 1e5 + 15;\nint a[N];\n\nvoid solve(){\n\tint n; cin >> n;\n\tint sum = 0;\n\tfor(int i = 1; i <= n; i++){\n\t\tcin >> a[i];\n\t\tsum += a[i];\n\t}\n\tif(sum%n){\n\t\tcout << -1 << '\\n';\n\t\treturn;\n\t}\n\tvector<array<int, 3> > op;\n\tint req = sum/n;\n\tfor(int i = 2; i <= n; i++){\n\t\tif(a[i]%i != 0){\n\t\t\tint ext = i - (a[i]%i);\n\t\t\top.push_back({1, i, ext});\n\t\t\ta[i] += ext;\n\t\t\ta[1] -= ext;\n\t\t}\n\t\tint k = a[i]/i;\n\t\ta[1] += k*i;\n\t\ta[i] -= k*i;\n\t\top.push_back({i, 1, k});\n\t}\n\tfor(int i = 2; i <= n; i++){\n\t\top.push_back({1, i, req});\n\t}\n\tcout << op.size() << '\\n';\n\tfor(auto x : op){\n\t\tcout << x[0] << \" \" << x[1] << \" \" << x[2] << '\\n';\n\t}\n\t// cout << \"YO\\n\";\n\t// for(int i = 1; i <= n; i++){\n\t// \tcout << a[i] << \" \";\n\t// }\n\t// cout << '\\n';\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout<<setprecision(32);\n\n\tint t; cin >> t;\n\twhile(t--)solve();\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Make Them Equal.json",
    "editorial_link": "https://codeforces.com//blog/entry/83036",
    "editorial": "Let S\n be the sum of the array. If S\n is not divisible by n\n, then the answer is obviously ?1\n. Otherwise, there always exists a solution which uses no more than 3n\n queries. We will solve this problem in two phases.\n\nFirst phase: gather the sum in a1\n. Let's iterate over 2?i?n\n in increasing order. If ai\n is divisible by i\n, we can immediately transfer it using one operation. Otherwise, we have to make it divisible by transferring i?(aimodi)\n from a1\n to ai\n. Note that this operation does not break a condition on non-negativity because all ai\n are initially positive. This way, we successfully finish this phase using at most 2(n?1)\n operations.\n\nSecond phase: distribute the sum across all elements. Just iterate over all 2?i?n\n and make a transfer of S/n\n from a1\n to ai\n. This phase takes exactly n?1\n operations."
}