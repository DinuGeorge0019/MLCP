{
    "link": "https://codeforces.com//contest/877/problem/A",
    "problemId": "130128",
    "problem_idx": "A",
    "shortId": "877A",
    "contest_number": "877",
    "problem_submissions": {
        "F": [
            31654167,
            31653139,
            31655134,
            31656955,
            31639931,
            31650204,
            31648622,
            31651887,
            33479364,
            31655646,
            31694169,
            31893110
        ],
        "E": [
            31643937,
            31646320,
            31646382,
            31649500,
            31641532,
            31645322,
            31640350,
            31645337,
            31641515,
            31644016,
            31652300,
            31648164,
            31648540,
            31649482,
            31644271,
            31648366,
            31646891,
            31648638,
            31653283,
            31654866
        ],
        "D": [
            31641155,
            31644336,
            31643884,
            31647657,
            31665021,
            31739883,
            31649498,
            31650176,
            31649638,
            31639062,
            31644913,
            31645497,
            31649880,
            31645363,
            31666561,
            31654457,
            31648925,
            31649435
        ],
        "C": [
            31638971,
            31647846,
            31638928,
            31641413,
            31644732,
            31639320,
            31637367,
            31649045,
            31644989,
            31640032,
            31639911,
            31643252,
            31638722,
            31638437,
            31636874,
            31639305,
            31642602,
            31642153,
            31643991,
            31641659
        ],
        "B": [
            31638394,
            31636212,
            31636559,
            31636226,
            31644604,
            31636106,
            31634815,
            31636547,
            31636242,
            31637676,
            31679870,
            31636958,
            31645807,
            31636913,
            31635284,
            31638201,
            31637074,
            31636966,
            31638021,
            31639655,
            31639274
        ],
        "A": [
            31635408,
            31634914,
            31634587,
            31634665,
            31664979,
            31634608,
            31634317,
            31634960,
            31650654,
            31634394,
            31634371,
            31644024,
            31634639,
            31634521,
            31634889,
            31634575,
            31635175,
            31640619,
            31635186,
            31635511
        ]
    },
    "name": "A. Alex and broken contest",
    "statement": "One day Alex was creating a contest about his friends, but accidentally\r\ndeleted it. Fortunately, all the problems were saved, but now he needs\r\nto find them among other problems.But there are too many problems, to do\r\nit manually. Alex asks you to write a program, which will determine if a\r\nproblem is from this contest by its name.It is known, that problem is\r\nfrom this contest if and only if its name contains one of Alex\u2019s\r\nfriends\u2019 name . His friends\u2019 names are \"\", \"\", \"\", \"\" and \"\".\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<set>\n#include<map>\n#include<queue>\nusing namespace std;\ntypedef long long  LL;\n#define sqr(x) ((x)*(x))\n#define mp make_pair\n#define F first\n#define S second\ninline int read(){\n\tint x = 0; char ch = getchar(); bool positive = 1;\n\tfor (; !isdigit(ch); ch = getchar())\tif (ch == '-')\tpositive = 0;\n\tfor (; isdigit(ch); ch = getchar())\tx = x * 10 + ch - '0';\n\treturn positive ? x : -x;\n}\ninline void write(int a){\n    if(a>=10)write(a/10);\n    putchar('0'+a%10);\n}\ninline void writeln(int a){\n    if(a<0){\n    \ta=-a; putchar('-');\n\t}\n\twrite(a); puts(\"\");\n}\n#include<string>\nint ans;\nstring s,ch[5]={\"Danil\",\"Olya\", \"Slava\",\"Ann\",\"Nikita\"};\nint main(){\n\tcin>>s;\n\tfor(int i=0;i<5;i++){\n\t\tfor(int j=0;j+ch[i].length()<=s.length();j++){\n\t\t\tint flag=0;\n\t\t\tfor(int k=0;k<ch[i].length();k++){\n\t\t\t\tif(ch[i][k]!=s[j+k])flag=1;\n\t\t\t}\n\t\t\tif(!flag)ans++;\n\t\t}\n\t}\n\tif(ans==1)puts(\"YES\"); else puts(\"NO\");\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Alex and broken contest.json",
    "editorial_link": "https://codeforces.com//blog/entry/55362",
    "editorial": "You need just implement what is written in the statements. Count the\r\ntotal number of entries of the names and check if it\u00e2\u0080\u0099s equal to .\r\n"
}