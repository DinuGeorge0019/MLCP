{
    "link": "https://codeforces.com//contest/366/problem/B",
    "problemId": "4073",
    "problem_idx": "B",
    "shortId": "366B",
    "contest_number": "366",
    "problem_submissions": {
        "E": [
            5223414,
            5232960,
            5224601,
            5224400,
            5224222,
            5217176,
            5224737,
            5224278,
            5226537,
            5218732,
            5224501,
            5240243,
            5224536,
            5228081,
            5226578
        ],
        "D": [
            5217035,
            5218139,
            5218798,
            5218839,
            5218268,
            5218550,
            5226120,
            5224735,
            5218888,
            5218628,
            5223995,
            5223329,
            5223776,
            5223645,
            5224564
        ],
        "C": [
            5215635,
            5215143,
            5216612,
            5216695,
            5224015,
            5217024,
            5216364,
            5232085,
            5225511,
            5216977,
            5216046,
            5215965,
            5216961,
            5216956,
            5217291,
            5216898,
            5216929,
            5218407,
            5225537,
            5223478
        ],
        "B": [
            5214230,
            5213966,
            5214711,
            5214981,
            5223546,
            5215334,
            5214481,
            5217130,
            5214153,
            5214206,
            5214371,
            5214882,
            5214468,
            5215543,
            5215465,
            5214916,
            5214805,
            5214477,
            5216227
        ],
        "A": [
            5213681,
            5213698,
            5213944,
            5214040,
            5218937,
            5214367,
            5213790,
            5214070,
            5213688,
            5213707,
            5213756,
            5213768,
            5214087,
            5213881,
            5214073,
            5213855,
            5213865,
            5213727
        ]
    },
    "name": "B. Dima and To-do List",
    "statement": "You helped Dima to have a great weekend, but it’s time to work.\r\nNaturally, Dima, as all other men who have girlfriends, does everything\r\nwrong.Inna and Dima are now in one room. Inna tells Dima off for\r\neverything he does in her presence. After Inna tells him off for\r\nsomething, she goes to another room, walks there in circles muttering\r\nabout how useless her sweetheart is. During that time Dima has time to\r\npeacefully complete tasks. Then Inna returns and tells Dima off for the\r\nnext task he does in her presence and goes to another room again. It\r\ncontinues until Dima is through with his tasks.Overall, Dima has tasks\r\nto do, each task has a unique number from to . Dima loves order, so he\r\ndoes tasks consecutively, starting from some task. For example, if Dima\r\nhas tasks to do in total, then, if he starts from the -th task, the\r\norder is like that: first Dima does the -th task, then the -th one, then\r\nthe -st one, then the -nd one, then the -rd one, then the -th one.Inna\r\ntells Dima off (only lovingly and appropriately!) so often and\r\nsystematically that he’s very well learned the power with which she\r\ntells him off for each task. Help Dima choose the first task so that in\r\ntotal he gets told off with as little power as possible.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int N = int(5e5);\n\nint A[N], n, k, R[N];\n\nint main ()\n{\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &A[i]);\n\t\tR[i % k] += A[i];\n\t}\n\tint p = 1;\n\tfor (int i = 2; i <= k; ++i)\n\t{\n\t\tif (R[i % k] < R[p % k])\n\t\t\tp = i;\n\t}\n\tprintf(\"%d\\n\", p);\n\treturn 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Dima and To-do List.json",
    "editorial_link": "https://codeforces.com//blog/entry/9704",
    "editorial": "Dima can make tasks, so Inna always tells him off for each -th taks,\r\nbeginning from the chosen place. So for the numbers with same modulo by\r\nk the answer will be the same. We should find the answer with minimal\r\nfirst task number so it is eniugh to calculate the sums of tellings of\r\nfor tasks . We can do it in such way: Determine the array int . And put\r\nthe number into appropriate bucket while reading: I mod k. Now we should\r\nsimply find first with minimal . Complexity: .\r\n",
    "hint": []
}