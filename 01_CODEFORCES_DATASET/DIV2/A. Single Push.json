{
    "link": "https://codeforces.com//contest/1253/problem/A",
    "problemId": "472858",
    "problem_idx": "A",
    "shortId": "1253A",
    "contest_number": "1253",
    "problem_submissions": {
        "F": [
            65199103,
            65190951,
            65202217,
            65200176,
            65205791,
            65198288,
            65206369,
            65202224,
            65204185,
            65198880,
            71343526,
            65209779,
            69242445
        ],
        "E": [
            65190374,
            65200198,
            65189404,
            65179572,
            65189474,
            65203687,
            65210511,
            65176917,
            65203722,
            65186844,
            65188534,
            65195069,
            65199233,
            65190702,
            65194167,
            65189184,
            65189079,
            65566785,
            65194999,
            65197237
        ],
        "D": [
            65185415,
            65178485,
            65180601,
            65183049,
            65178022,
            65187686,
            65195445,
            65178632,
            65179619,
            65180170,
            65183967,
            65181658,
            65188561,
            65181701,
            65182069,
            65187758,
            65183529,
            65182372,
            65181324
        ],
        "C": [
            65180957,
            65172664,
            65176866,
            65185425,
            65173509,
            65180180,
            65194567,
            65173458,
            65200178,
            65176131,
            65179441,
            65175878,
            65184305,
            65178007,
            65179468,
            65178975,
            65179727,
            65177898,
            65176250
        ],
        "B": [
            65175476,
            65202574,
            65174599,
            65188764,
            65185456,
            65176094,
            65186553,
            65183630,
            65196117,
            65172495,
            65173857,
            65173178,
            65174792,
            65174898,
            65174679,
            65176409,
            65176161,
            65176165,
            65172853
        ],
        "A": [
            65171088,
            65170116,
            65170656,
            65190482,
            65180567,
            65170231,
            65180099,
            65170284,
            65170843,
            65169770,
            65169894,
            65169914,
            65170943,
            65169881,
            65172675,
            65172008,
            65171211,
            65169945,
            65169720
        ]
    },
    "name": "A. Single Push",
    "statement": "Youâ€™re given two arrays a[1\r\ndots n] and b[1\r\ndots n], both of the same length n.In order to perform a , you have to\r\nchoose three integers l, r, k satisfying 1\r\nle l\r\nle r\r\nle n and k > 0. Then, you will add k to elements a_l, a_{l+1},\r\nldots, a_r.For example, if a = [3, 7, 1, 4, 1, 2] and you choose (l = 3,\r\nr = 5, k = 2), the array a will become [3, 7,\r\nunderline{3, 6, 3}, 2].You can do this operation . Can you make array a\r\nequal to array b?(We consider that a = b if and only if, for every 1\r\nle i\r\nle n, a_i = b_i)\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nint n,tc;\nint A[100005], B[100005];\n\nint main(){\n\n\tscanf(\"%d\",&tc);\n\twhile ( tc-- ){\n\t\tint l = -1, r = -1;\n\t\tbool cannot = false;\n\t\tscanf(\"%d\",&n);\n\t\tfor ( int i = 0; i < n; i++ ){\n\t\t\tscanf(\"%d\",&A[i]);\n\t\t}\n\t\tfor ( int i = 0; i < n; i++ ){\n\t\t\tscanf(\"%d\",&B[i]);\n\t\t\tif ( B[i] == A[i] ) continue;\n\t\t\tif ( B[i] < A[i] ) cannot = true;\n\t\t\telse  {\n\t\t\t\tif ( l == -1 ) l = i;\n\t\t\t\tr = i;\n\t\t\t}\n\t\t}\n\n\t\tif ( cannot ){\n\t\t\tprintf(\"NO\\n\");\n\t\t} else {\n\t\t\tif ( l == -1 || r == -1 ){\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t} else {\n\t\t\t\tint diff = B[l] - A[l];\n\t\t\t\tfor ( int i = l + 1; i <= r; i++ ){\n\t\t\t\t\tif ( B[i] - A[i] != diff ){\n\t\t\t\t\t\tcannot = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( cannot ) printf(\"NO\\n\");\n\t\t\t\telse printf(\"YES\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Single Push.json",
    "editorial_link": "https://codeforces.com//blog/entry/71489?locale=en",
    "editorial": "If we set , we have to check that has the following form: . Firstly\r\ncheck that there is no negative element in .Solution 1 : add to the\r\nbeginning and the end of the array , then check that there is at most\r\ntwo indices such that .Solution 2 : let be the smallest integer such\r\nthat , and be the greatest integer such that . Check that for all ,\r\n.Complexity : for each test case.Implementation (solution 1)\r\n",
    "hint": []
}