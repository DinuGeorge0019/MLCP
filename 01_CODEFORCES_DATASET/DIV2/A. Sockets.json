{"link": "https://codeforces.com//contest/257/problem/A", "problemId": "2498", "problem_idx": "A", "shortId": "257A", "contest_number": "257", "problem_submissions": {"E": [2893499, 2905131], "D": [2888828, 2888815, 2889989, 2890313, 2889878, 2888430, 2887802, 2890677, 2891009, 2890941, 2890050, 2891384], "C": [2887785, 2887326, 2887433, 2890384, 2887249, 2888432, 2892651, 2892447, 2891062, 2889397, 2889354, 2891081, 2889995], "B": [2887685, 2890108, 2889351, 2888373, 2890099, 2890775, 2887640, 2889176, 2887264, 2888202, 2887592, 2887031, 2886691], "A": [2886234, 2885722, 2886258, 2888302, 2885640, 2885926, 2886671, 2885877, 2886694, 2886610, 2885637, 2885791]}, "name": "A. Sockets", "statement": "Vasya has got many devices that work on electricity. He\u2019s got\r\nsupply-line filters to plug the devices, the -th supply-line filter has\r\nsockets.Overall Vasya has got devices and electrical sockets in his\r\nflat, he can plug the devices or supply-line filters directly. Of\r\ncourse, he can plug the supply-line filter to any other supply-line\r\nfilter. The device (or the supply-line filter) is considered plugged to\r\nelectricity if it is either plugged to one of electrical sockets, or if\r\nit is plugged to some supply-line filter that is in turn plugged to\r\nelectricity. What minimum number of supply-line filters from the given\r\nset will Vasya need to plug all the devices he has to electricity? Note\r\nthat all devices and supply-line filters take one socket for plugging\r\nand that he can use one socket to plug either one device or one\r\nsupply-line filter.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n\nint n, m, k;\nint a[100];\n\nint main()\n{\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\tfor(int i(1); i <= n; ++ i)\n\t\tscanf(\"%d\", &a[i]);\n\tstd::sort(a + 1, a + 1 + n);\n\tint cur = k, ans = 0;\n\tfor(int i(n); i; -- i)\n\t{\n\t\tif(cur >= m)\n\t\t\tbreak;\n\t\tans ++;\n\t\tcur += a[i] - 1;\n\t}\n\tprintf(\"%d\\n\", cur >= m ? ans : -1);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1100", "interactive": false}