{"link": "https://codeforces.com//contest/263/problem/E", "problemId": "2520", "problem_idx": "E", "shortId": "263E", "contest_number": "263", "problem_submissions": {"E": [2943196], "D": [2942145, 2939985, 2942208, 2939952, 2940748, 2942993, 2943370, 2941259, 2941637, 2940304, 2943228, 2941800, 2941304, 2944161, 2943666, 2944368, 2940892], "C": [2940759, 2941829, 2940936, 2942500, 2943328, 2941933, 2942288, 2943440, 2943805, 2944431, 2942111, 2943776, 2944668, 2943093, 2943041, 2942906, 2944522], "B": [2938515, 2938111, 2937699, 2937858, 2938311, 2938172, 2938572, 2938277, 2938614, 2941034, 2937866, 2938119, 2938506, 2938610, 2938586, 2938823, 2938384], "A": [2937160, 2937166, 2936927, 2936979, 2936967, 2936966, 2936959, 2936975, 2937475, 2941215, 2938221, 2937216, 2937223, 2937302, 2937515, 2937451, 2937077]}, "name": "E. Rhombus", "statement": "You\u2019ve got a table of size . On the intersection of the -th row () and\r\nthe -th column () there is a non-negative integer . Besides, you\u2019ve got\r\na non-negative integer .Your task is to find such pair of integers that\r\nmeets these conditions: ; ; let\u2019s denote the maximum of the function\r\namong all integers and , that satisfy the inequalities and , as ; for\r\nthe required pair of numbers the following equation must hold .\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n\n#define MN 1010\n\nlong long map[MN*3][MN*3], sum[MN*3][MN*3], ori[MN][MN];\nint n, m, k;\n\ninline long long rect(int xl, int xr, int yl, int yr) {\n    return sum[xr][yr] - sum[xl-1][yr] - sum[xr][yl-1] + sum[xl-1][yl-1];\n\n}\n\nint main() {\n    // (x,y) -> (x+y, x-y+m)\n    // range: 2 to n+m & 1 to n+m\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++) {\n            int in;\n            scanf(\"%d\", &in);\n            ori[i][j] = in;\n            map[i+j][i-j+m] = in;\n        }\n\n    for(int i=1; i<=n+m; i++)\n        for(int j=1; j<=n+m; j++)\n            sum[i][j] = sum[i-1][j] + sum[i][j-1] - sum[i-1][j-1] + map[i][j];\n\n    int ansx, ansy;\n    long long  ans = -1;\n    for(int xx=k; xx<=n-k+1; xx++)\n        for(int yy=k; yy<=m-k+1; yy++) {\n            int x = xx+yy, y = xx-yy+m;\n            long long nans = 0;\n            for(int i=0; i<k; i++) {\n                nans += rect( x-i, x+i, y-i, y+i );\n            }\n            if(nans > ans) {\n                ansx = xx;\n                ansy = yy;\n                ans = nans;\n            }\n        }\n    printf(\"%d %d\\n\", ansx, ansy);\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "data structures", "dp"], "dificulty": "2500", "interactive": false}