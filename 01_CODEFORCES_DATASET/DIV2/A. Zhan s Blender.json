{
    "link": "https://codeforces.com//contest/2013/problem/A",
    "problemId": "2890586",
    "problem_idx": "A",
    "shortId": "2013A",
    "contest_number": "2013",
    "problem_submissions": {
        "F1": [
            282085508,
            282091649,
            282097681,
            282062964,
            282097010,
            282094496,
            282096102,
            282130493,
            282100468,
            282110907,
            282110226,
            282977558
        ],
        "E": [
            282061833,
            282080813,
            282051849,
            282086247,
            282037391,
            282057195,
            282050812,
            282047875,
            282387310,
            282046660,
            282057981,
            282053861,
            282054405,
            282061649,
            282089310,
            282054594,
            282061765,
            282060270,
            282065503,
            282063375
        ],
        "D": [
            282053393,
            282148584,
            282052109,
            282042335,
            282076655,
            282080799,
            282065676,
            282079143,
            282037385,
            282054240,
            282041005,
            282045620,
            282047474,
            282043487,
            282073249,
            282022525,
            282048467,
            282042436,
            282046096,
            282048201
        ],
        "C": [
            282036735,
            282027206,
            282070402,
            282021424,
            282027464,
            282026938,
            282063555,
            282026144,
            282031663,
            282027005,
            282037319,
            282027256,
            282027279,
            282046717,
            282066980,
            282036015,
            282031256,
            282038898,
            282038980
        ],
        "B": [
            282022099,
            282013728,
            282015453,
            282011770,
            282018552,
            282009811,
            282027915,
            282017479,
            282013009,
            282018195,
            282019086,
            282010905,
            282014462,
            282037982,
            282022835,
            282017402,
            282018955,
            282018976,
            282023313
        ],
        "A": [
            282014277,
            282006421,
            282026971,
            282006385,
            282008034,
            282005836,
            282006296,
            282008704,
            282006066,
            282010046,
            282006523,
            282005614,
            282006702,
            282035715,
            282023370,
            282007442,
            282014269,
            282005794,
            282006570
        ]
    },
    "editorial_link": "https://codeforces.com/blog/entry/134170",
    "editorial": "SolutionLetâs consider two cases: If . In this case, the blender will\r\nmix fruits every second (where is the number of unmixed fruits).\r\nTherefore, the answer will be . If . Here, the blender will mix fruits\r\nevery second. In this case, the answer will be , similarly. Thus, the\r\nfinal answer is .\r\n",
    "name": "A. Zhan s Blender",
    "statement": "Today, a club fair was held at \"NSPhM\". In order to advertise his pastry\r\nclub, Zhan decided to demonstrate the power of his blender.To\r\ndemonstrate the power of his blender, Zhan has n fruits.The blender can\r\nmix up to x fruits per second.In each second, Zhan can put up to y\r\nfruits into the blender. After that, the blender will blend\r\nmin(x, c) fruits, where c is the number of fruits inside the blender.\r\nAfter blending, blended fruits are removed from the blender.Help Zhan\r\ndetermine the minimum amount of time required for Zhan to blend all\r\nfruits.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std; typedef long long ll;using vi = vector<int>;using vvi = vector<vector<int>>;using vll = vector<ll>;using vvll = vector<vector<ll>>; #define all(x) x.begin(), x.end()#define ckmin(a,b) a = min(a,b)#define ckmax(a,b) a = max(a,b) ll ceil(ll n, ll d) {    return (n + (d-1))/d;} void solve() {    ll N, X, Y;    cin >> N >> X >> Y;     ll rem = N - X * ceil(N, Y);    if (rem <= 0) {        cout << ceil(N, Y) << \"\\n\";        return;    }     cout << ceil(N, Y) + ceil(rem, X) << \"\\n\";} int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(NULL);     int T;    cin >> T;     for (int t=0;t<T;t++) solve();     return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Zhan s Blender.json",
    "hint": []
}