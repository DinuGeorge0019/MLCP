{
    "link": "https://codeforces.com//contest/1417/problem/B",
    "problemId": "740372",
    "problem_idx": "B",
    "shortId": "1417B",
    "contest_number": "1417",
    "problem_submissions": {
        "D": [
            94021013,
            93997987,
            93994414,
            94008928,
            93994813,
            93993974,
            93997393,
            93994886,
            93995533,
            94000707,
            94022056,
            93991179,
            93997856,
            94000293,
            94004446,
            94003381,
            93990919,
            93999146,
            94004809,
            93994289,
            93993273
        ],
        "C": [
            94008586,
            93979621,
            93985626,
            93982539,
            93981622,
            93998363,
            93982359,
            93986555,
            93983202,
            93992239,
            93983337,
            93991411,
            93986598,
            93990140,
            93991651,
            94001522,
            93986870,
            93985359,
            93998445,
            93985761
        ],
        "B": [
            94003048,
            93973490,
            93978330,
            93975968,
            93973585,
            93982217,
            93975658,
            93979313,
            93975689,
            93981775,
            93977350,
            93981714,
            93975469,
            93979278,
            93978354,
            96285430,
            93978356,
            93980291,
            93977440,
            94041345,
            93979236,
            93977870
        ],
        "A": [
            94001724,
            93970294,
            93970800,
            93971885,
            93969936,
            93980954,
            93971325,
            93970349,
            93971917,
            93971289,
            93969984,
            93970972,
            93971064,
            93971068,
            93971066,
            96285403,
            93971270,
            93973889,
            93971400,
            94041333,
            93974793,
            93971921
        ],
        "E": [
            94000180,
            93995718,
            94008025,
            93998585,
            94011058,
            94003165,
            94008902,
            94012205,
            94012202,
            94009571,
            94022535,
            94014181,
            94009089,
            94015399,
            94011955,
            94009323,
            94016150,
            94015958,
            94013413,
            94011012,
            94019762
        ],
        "F": [
            93992993,
            94142204,
            94142122
        ]
    },
    "name": "B. Two Arrays",
    "statement": "has an array a consisting of n non-negative integers, and an unlucky\r\ninteger T.Letâ€™s denote the misfortune of array b having length m as f(b)\r\nthe number of pairs of integers (i, j) such that 1\r\nle i < j\r\nle m and b_i + b_j = T. has to paint each element of a into one of two\r\ncolors, white and black (for each element, the color is chosen\r\nindependently), and then create two arrays c and d so that all white\r\nelements belong to c, and all black elements belong to d . wants to\r\npaint the elements in such a way that f(c) + f(d) is possible.For\r\nexample: if n = 6, T = 7 and a = [1, 2, 3, 4, 5, 6], it is possible to\r\npaint the 1-st, the 4-th and the 5-th elements white, and all other\r\nelements black. So c = [1, 4, 5], d = [2, 3, 6], and f(c) + f(d) = 0 + 0\r\n= 0; if n = 3, T = 6 and a = [3, 3, 3], it is possible to paint the 1-st\r\nelement white, and all other elements black. So c = [3], d = [3, 3], and\r\nf(c) + f(d) = 0 + 1 = 1. Help to paint the array optimally!\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nvoid solve(){\n\tint n; ll t;\n\tcin >> n >> t;\n\tint flg = 0;\n\tfor(int i = 1; i <= n; i++){\n\t\tint x; cin >> x;\n\t\tif(2*x == t){\n\t\t\tcout << flg << \" \";\n\t\t\tflg ^= 1;\n\t\t}else if(x <= t/2){\n\t\t\tcout << 0 << \" \";\n\t\t}else{\n\t\t\tcout << 1 << \" \";\n\t\t}\n\t}\n\tcout << '\\n';\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcout<<setprecision(32);\n\n\tint t; cin >> t;\n\twhile(t--)solve();\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Two Arrays.json",
    "editorial_link": "https://codeforces.com//blog/entry/83036",
    "editorial": "Let us partition the array into three sets , , such that contains all\r\nnumbers less than , contains all numbers equal to and contains all\r\nnumbers greater than . It is clear that . Now, since each pair in makes\r\na sum of , the best solution is to distribute all numbers in equally\r\namong and . Time complexity: Space complexity:\r\n",
    "hint": []
}