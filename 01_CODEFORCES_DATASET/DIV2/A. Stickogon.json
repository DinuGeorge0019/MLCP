{
    "link": "https://codeforces.com//contest/1957/problem/A",
    "problemId": "2603599",
    "problem_idx": "A",
    "shortId": "1957A",
    "contest_number": "1957",
    "problem_submissions": {
        "F2": [
            257624433,
            257624489,
            257628560,
            257621420,
            257758223,
            257757604,
            257757158,
            257717832,
            257717730,
            257717258,
            257717094,
            257702987,
            257702893,
            257653582,
            257653503,
            257653382,
            257648260,
            257648200,
            257641190,
            257634868,
            258552083,
            257634246,
            257634091,
            257829923,
            257637903,
            257630367,
            257637563,
            257640902,
            257704441,
            257700658,
            257703241,
            257675512
        ],
        "F1": [
            257621694,
            257624482,
            257625658,
            257622086,
            257648013,
            257642139,
            257635215,
            257625683,
            257633642,
            258551844,
            257633990,
            257634721,
            257829841,
            257638057,
            257627166,
            257647697,
            257636396,
            257640746,
            257705007,
            257704891,
            257704777,
            257704536,
            257700768,
            257627958
        ],
        "E": [
            257613753,
            257614244,
            257616954,
            257640621,
            257621102,
            257640619,
            257640273,
            257640555,
            259401179,
            257624465,
            258075127,
            258075029,
            257758887,
            257629108,
            257623748,
            257629560,
            257710288,
            257703200,
            257629906
        ],
        "D": [
            257596630,
            257598457,
            257598487,
            257603992,
            257647200,
            257596253,
            257607704,
            257604728,
            257613557,
            257603006,
            257615450,
            257603399,
            257750188,
            257750155,
            257615591,
            257640469,
            257600270,
            257625077,
            257609428,
            257606452,
            257699780,
            257597686,
            257607920
        ],
        "C": [
            257588829,
            257601875,
            257591094,
            257606559,
            257647316,
            257588836,
            257594613,
            257599149,
            257595684,
            257596544,
            257603207,
            257596444,
            257750051,
            257601967,
            257593914,
            257592224,
            257605529,
            257595109,
            257707171,
            257596812,
            257597956
        ],
        "B": [
            257581790,
            257579250,
            257586196,
            257583617,
            257579912,
            257584731,
            257593706,
            257593301,
            257585131,
            257584270,
            257581125,
            257750016,
            257588415,
            257583409,
            257582823,
            257585712,
            257597823,
            257594421,
            257595763,
            257581837
        ],
        "A": [
            257576275,
            257575809,
            257577678,
            257575791,
            257575498,
            257575836,
            257579145,
            257575454,
            257576815,
            257575470,
            257575437,
            257749968,
            257582519,
            257575927,
            257575935,
            257576650,
            257596800,
            257590104,
            257582071,
            257575937
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/128716",
    "editorial": "The first observation that needs to be made in this problem is that we\r\nhave to greedily try to build triangles from the sticks available.The\r\nnumber of triangles that can be created simultaneously by sticks of the\r\nsame length is . Hence, the answer is just the sum of the count of all\r\ntriangles for all stick lengths, , where denotes the number of sticks of\r\nlength .The time complexity of the problem is therefore .\r\n",
    "name": "A. Stickogon",
    "statement": "You are given n sticks of lengths a_1, a_2,\r\nldots, a_n. Find the maximum number of regular (equal-sided) polygons\r\nyou can construct simultaneously, such that: Each side of a polygon is\r\nformed by exactly one stick. No stick is used in more than 1 polygon.\r\nNote: Sticks cannot be broken.\r\n",
    "solutions": [
        "/*在发觉那一天 在那一天潮汛泛上高筑城墙时间请将一切证明*/#include<bits/stdc++.h>using namespace std;const int maxn=500005;int n,m,T,ans,flg;int a[maxn],tot[maxn];string s;int main(){\tscanf(\"%d\",&T);\twhile(T--){\t\tans=flg=0;\t\tscanf(\"%d\",&n);\t\tfor(int i=1;i<=n;i++)\t\t\tscanf(\"%d\",&a[i]),tot[a[i]]++;\t\tfor(int i=1;i<=100;i++)\t\t\tans+=tot[i]/3,tot[i]=0;\t\tprintf(\"%d\\n\",ans);\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Stickogon.json",
    "hint": [
        "Hint 1 To create the most polygons, you should use as few sticks as possible per polygon. What polygon has the least number of sides?"
    ]
}