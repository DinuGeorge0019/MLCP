{"link": "https://codeforces.com//contest/828/problem/D", "problemId": "113854", "problem_idx": "D", "shortId": "828D", "contest_number": "828", "problem_submissions": {"A": [28460309, 28447412, 28433654, 28431619, 28432255, 28431175, 28432122, 28431834, 28432270, 28431560, 28438332, 28431659, 28431601, 28431041, 28431462, 28431315, 28448076, 28431218, 28431027], "F": [28448238, 28470827, 28472010, 30446292, 32054149], "E": [28442480, 28440989, 28445030, 28444433, 28441533, 28446059, 28447307, 28490530, 28447795, 28447314, 28449259, 28447763, 28449409, 28448527, 28448262], "D": [28439191, 28443487, 28440542, 28439312, 28444576, 28440699, 28440733, 28440504, 28444280, 28446082, 28441981, 28439597, 28441709, 28443017, 28442903, 28439094, 28443722, 28448787, 28443893], "C": [28435698, 28435500, 28439027, 28435829, 28437161, 28436717, 28438157, 28436695, 28443065, 28454126, 28453810, 28440499, 28438924, 28437102, 28438928, 28438895, 28436411, 28440043, 28437230, 28439797, 28439825, 28439032], "B": [28433895, 28433617, 28434962, 28433706, 28433707, 28434566, 28434207, 28434454, 28435513, 28435599, 28434805, 28433677, 28435479, 28434438, 28432799, 28434943, 28434343, 28435242, 28433224, 28433253]}, "name": "D. High Load", "statement": "Arkady needs your help again! This time he decided to build his own\r\nhigh-speed Internet exchange point. It should consist of nodes connected\r\nwith minimum possible number of wires into one network (a wire directly\r\nconnects two nodes). Exactly of the nodes should be exit-nodes, that\r\nmeans that each of them should be connected to exactly one other node of\r\nthe network, while all other nodes should be connected to at least two\r\nnodes in order to increase the system stability.Arkady wants to make the\r\nsystem as fast as possible, so he wants to minimize the maximum distance\r\nbetween two exit-nodes. The distance between two nodes is the number of\r\nwires a package needs to go through between those two nodes.Help Arkady\r\nto find such a way to build the network that the distance between the\r\ntwo most distant exit-nodes is as small as possible.\r\n", "solutions": ["#include<bits/stdc++.h>\nint n,k;\nint ts[500007],fa[500007],ws[500007];\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tint r=n-k;\n\tfor(int i=0;i<k;++i)ts[i]=0,ws[i]=1;\n\tint a=0;\n\tfor(int i=2;i<=r;++i,a=(a+1)%k){\n\t\t++ts[a];\n\t\tfa[i]=ws[a];\n\t\tws[a]=i;\n\t}\n\tfor(int i=r+1;i<=n;++i,a=(a+1)%k)fa[i]=ws[a];\n\tint mx=0,se=0;\n\tfor(int i=0;i<k;++i){\n\t\tif(ts[i]>=mx)se=mx,mx=ts[i];\n\t\telse if(ts[i]>se)se=ts[i];\n\t}\n\tprintf(\"%d\\n\",mx+se+2);\n\tfor(int i=2;i<=n;++i)printf(\"%d %d\\n\",i,fa[i]);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "implementation", "trees"], "dificulty": "1800", "interactive": false}