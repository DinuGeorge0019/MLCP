{"link": "https://codeforces.com//contest/1592/problem/D", "problemId": "1129222", "problem_idx": "D", "shortId": "1592D", "contest_number": "1592", "problem_submissions": {"F2": [130713058, 130745405, 130752812, 130700115, 130719186, 130720967, 130722508, 130857743, 130747284], "F1": [130708913, 130716472, 130712966, 130690640, 130721286, 130704100, 130714549, 130712433, 130713697, 130851358, 130725206, 130716184], "E": [130702698, 130695073, 130712585, 130690161, 130713929, 130713176, 130705621, 130689937, 130710720, 130851028, 130710139, 130712353, 130705313, 130701661, 130698871, 130698929, 130696498], "D": [130686766, 130712124, 130687989, 130703162, 130719297, 130699331, 130692683, 130699442, 130699159, 130850999, 130702540, 130701084, 130699463, 130712566, 130716938, 130713876, 130700116], "C": [130673756, 130678234, 130691078, 130722241, 130692718, 130685086, 130684627, 130684454, 130695547, 130686901, 130682234, 130850976, 130687343, 130686079, 130680261, 130693322, 130682408, 130683213, 130708723, 130704235], "B": [130668341, 130668419, 130669045, 130704250, 130680256, 130671878, 130678194, 130668270, 130665664, 130670263, 130668846, 130676770, 130673397, 130708534, 130677615, 130673769, 130685667, 130666906], "A": [130663321, 130663779, 130671236, 130667562, 130676197, 130664558, 130674304, 130663697, 130663364, 130664358, 130664439, 130664164, 130666634, 130663540, 130663720, 130665536, 130664639, 130664321, 130671799]}, "name": "D. Hemose in ICPC  ", "statement": "Zeyad knows that Hemose loves tree problems, so he gave him a tree\r\nproblem with a very special device.Hemose has a weighted tree with n\r\nnodes and n-1 edges. Unfortunately, Hemose doesn\u2019t remember the weights\r\nof edges.Let\u2019s define Dist(u, v) for u\r\nneq v as the greatest common divisor of the weights of all edges on the\r\npath from node u to node v.Hemose has a special device. Hemose can give\r\nthe device a set of nodes, and the device will return the largest Dist\r\nbetween any two nodes from the set. More formally, if Hemose gives the\r\ndevice a set S of nodes, the device will return the largest value of\r\nDist(u, v) over all pairs (u, v) with u, v\r\nin S and u\r\nneq v.Hemose can use this Device , and wants to find any two distinct\r\nnodes a, b, such that Dist(a, b) is maximum possible. Can you help him?\r\n", "solutions": ["#include<bits/stdc++.h>\n#define rep(i,n) for (int i=1;i<=(n);i++)\nusing namespace std;\nint n,l,sz[1005],vv[1005];\nint cnt,cur,c;\nint hd[1005],nxt[2005],to[2005],tot=1,vis[2005];\nvector<int> qry,edg;\nvoid add(int x,int y)\n{\n\ttot++;nxt[tot]=hd[x];to[tot]=y;hd[x]=tot;\n}\nvoid dfs(int x,int fa)\n{\n\tvv[x]=sz[x]=1;\n\tif(fa&&(cur+1)*2<=cnt)\n\t{\n\t\tc=1;\n\t\tcur++;edg.push_back(fa/2);\n\t\tqry.push_back(x);\n\t}\n\tint i;\n\tfor(i=hd[x];i;i=nxt[i])if(i/2!=fa/2&&!vis[i/2])\n\t{\n\t\tdfs(to[i],i);\n\t}\n\tif(c&&!fa) qry.push_back(x);\n}\nvoid solve()\n{\n\tcin>>n;\n\trep(i,n-1)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tcout<<\"? \"<<n;rep(i,n)cout<<' '<<i;cout<<endl<<flush;\n\tint mx;cin>>mx;\n\twhile(1)\n\t{\n\t\tcnt=cur=0;\n\t\trep(i,n-1) cnt+=!vis[i];\n\t\tif(cnt==1) break;\n\t\tmemset(vv,0,sizeof(vv));\n\t\tqry.clear();edg.clear();\n\t\trep(i,n) if(!vv[i]) c=0,dfs(i,0);\n\t\tcout<<\"? \"<<qry.size();\n\t\tfor(int i=0;i<qry.size();i++)\n\t\t{\n\t\t\tcout<<' '<<qry[i];\n\t\t}\n\t\tcout<<endl<<flush;\n\t\tint tmp;cin>>tmp;\n\t\tif(tmp==mx)\n\t\t{\n\t\t\trep(i,n-1) vis[i]=1;\n\t\t\tfor(int i=0;i<edg.size();i++) vis[edg[i]]=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i=0;i<edg.size();i++) vis[edg[i]]=1;\n\t\t}\n\t}\n\trep(i,n-1) if(!vis[i])\n\t{\n\t\tcout<<\"! \"<<to[i*2]<<' '<<to[i*2+1]<<endl<<flush;\n\t}\n}\nint main()\n{\n\tsolve();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["binary search", "dfs and similar", "implementation", "interactive", "math", "number theory", "trees"], "dificulty": "2300", "interactive": false}