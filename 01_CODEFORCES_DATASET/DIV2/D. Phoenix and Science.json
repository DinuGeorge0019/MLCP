{
    "link": "https://codeforces.com//contest/1348/problem/D",
    "problemId": "609091",
    "problem_idx": "D",
    "shortId": "1348D",
    "contest_number": "1348",
    "problem_submissions": {
        "F": [
            78730137,
            78732956,
            78738021,
            78735188,
            78738507,
            78734079,
            78753080,
            78717089,
            78727355,
            78727368,
            78773476,
            78740376
        ],
        "E": [
            78711148,
            78713291,
            78707898,
            78710381,
            78719540,
            78713433,
            78709333,
            79466363,
            78772738,
            78713600,
            78699633,
            78717322,
            78717382,
            78717153,
            78728870,
            78722408,
            78722025,
            78727426,
            78728940
        ],
        "C": [
            78694419,
            78693419,
            78696011,
            78687630,
            78679892,
            78697771,
            78685191,
            78681524,
            78686378,
            78693929,
            78687938,
            78717342,
            78689661,
            78687381,
            78689833,
            78687589,
            78685601,
            78687639,
            78687038
        ],
        "D": [
            78686862,
            78702906,
            78690856,
            78698132,
            78702134,
            78701001,
            78706132,
            78701735,
            78701924,
            78711443,
            78693858,
            78706550,
            78704171,
            78707502,
            78702198,
            78714055,
            78702526,
            78697601,
            78708853,
            78702351
        ],
        "B": [
            78677169,
            78673852,
            78668555,
            78675102,
            78668889,
            78672084,
            78671272,
            78669645,
            79465649,
            78671217,
            78677254,
            78667586,
            78673648,
            78677181,
            78676314,
            78695320,
            78673038,
            78670148,
            78674360,
            78670529,
            78675058
        ],
        "A": [
            78669591,
            78665336,
            78662907,
            78664918,
            78662747,
            78662442,
            78662941,
            78662589,
            78662555,
            78665985,
            78662547,
            78662641,
            78669435,
            78666111,
            78662690,
            78662462,
            78663929,
            78669719,
            78662632,
            78663426
        ]
    },
    "name": "D. Phoenix and Science",
    "statement": "Phoenix has decided to become a scientist! He is currently investigating\r\nthe growth of bacteria.Initially, on day 1, there is one bacterium with\r\nmass 1.Every day, some number of bacteria will split (possibly zero or\r\nall). When a bacterium of mass m splits, it becomes two bacteria of mass\r\nfrac{m}{2} each. For example, a bacterium of mass 3 can split into two\r\nbacteria of mass 1.5.Also, every night, the mass of every bacteria will\r\nincrease by one.Phoenix is wondering if it is possible for the total\r\nmass of all the bacteria to be exactly n. If it is possible, he is\r\ninterested in the way to obtain that mass using the minimum possible\r\nnumber of nights. Help him become the best scientist!\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint t,n,cur;\nll qpow (ll a,ll b) {\n\tll res=1;\n\twhile (b) {\n\t\tif (b) {res*=a;}\n\t\ta*=a,b>>=1;\n\t}\n\treturn res;\n}\nll divc (ll a,ll b) {\n\tif (a%b==0) {return a/b;}\n\telse {return a/b+1;}\n}\nll calc (int x) {return (1<<x)-1;}\nint main () {\n\tscanf(\"%d\",&t);\n\tfor (int ii=1;ii<=t;ii++) {\n\t\tscanf(\"%d\",&n);\n\t\tint ans=0;\n\t\twhile (calc(ans)<n) {ans++;}\n\t\tprintf(\"%d\\n\",ans-1);\n\t\tcur=1,n--;\n\t\tfor (int i=2;i<=ans;i++) {\n\t\t\tint tmp=cur;\n\t\t\tcur=divc(n,calc(ans-i+1));\n\t\t\tn-=cur;\n\t\t\tprintf(\"%d \",cur-tmp);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Phoenix and Science.json",
    "editorial_link": "https://codeforces.com//blog/entry/76555",
    "editorial": "There exists many constructive solutions, here is one I think is very\r\nelegant. We will try to approach the problem by considering how much the\r\ntotal mass increases every night. If there are bacteria some day before\r\nthe splitting, that night can have a mass increase between and inclusive\r\n(depending on how many bacteria split that day).Therefore, we can reword\r\nthe problem as follows: construct a sequence of minimal length such that\r\nand the sum of is . To minimize the length of sequence , we will start\r\nbuilding our sequence with such that the total sum is less than or equal\r\nto . If the total sum is , we are done. Otherwise, we insert into our\r\nsequence and sort. This gives a valid sequence of minimal length.To\r\ntransform our sequence into the answer, we can just print the\r\ndifferences because the number of bacteria that split during the day is\r\nequal to how much the mass increase changes.Time complexity for each\r\ntest case: , if you sort by insertion\r\n",
    "hint": []
}