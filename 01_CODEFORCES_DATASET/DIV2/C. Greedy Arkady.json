{
    "link": "https://codeforces.com//contest/965/problem/C",
    "problemId": "178361",
    "problem_idx": "C",
    "shortId": "965C",
    "contest_number": "965",
    "problem_submissions": {
        "E": [
            37616803,
            37610971,
            41503980,
            40197656,
            37654456,
            37654431,
            40318499,
            37616580
        ],
        "D": [
            37611930,
            37607040,
            41317763,
            37610171,
            37612067,
            37611181,
            37613901,
            37612776,
            37612200,
            37613391,
            37614260,
            37613271,
            37613054,
            37610290,
            37613116,
            37613596,
            37613050,
            37608849,
            37612402
        ],
        "C": [
            37610216,
            37627090,
            37608448,
            37610114,
            37609387,
            37611531,
            37607821,
            37608408,
            37609724,
            37610645,
            37613952,
            37610230,
            37612051,
            37612323
        ],
        "B": [
            37605866,
            37605512,
            37606428,
            37607027,
            37606169,
            37607177,
            37606751,
            37606339,
            37606193,
            37607495,
            37606252,
            37606978,
            37608449,
            37606976,
            37606755,
            37607765,
            37606148,
            37607397
        ],
        "A": [
            37604550,
            37604452,
            37604479,
            37604681,
            37604781,
            37605030,
            37604765,
            37604552,
            37605013,
            37605227,
            37604704,
            37604697,
            37605015,
            37604932,
            37605063,
            37605445,
            37634065,
            37604890
        ]
    },
    "name": "C. Greedy Arkady",
    "statement": "k people want to split n candies between them. Each candy should be\r\ngiven to exactly one of them or be thrown away.The people are numbered\r\nfrom 1 to k, and Arkady is the first of them. To split the candies,\r\nArkady will choose an integer x and then give the first x candies to\r\nhimself, the next x candies to the second person, the next x candies to\r\nthe third person and so on in a cycle. The leftover (the remainder that\r\nis not divisible by x) will be thrown away.Arkady can\u2019t choose x greater\r\nthan M as it is considered greedy. Also, he can\u2019t choose such a small x\r\nthat some person will receive candies more than D times, as it is\r\nconsidered a slow splitting.Please find what is the maximum number of\r\ncandies Arkady can receive by choosing some valid x.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define ll long long\n#define pb push_back\n#define f first\n#define s second\n\nusing namespace std;\n\nconst int N = 1e2 + 10;\n\nll n, k, m, d;\n\nll mx;\n\nint main() {\n cin >> n >> k >> m >> d;\n\n mx = max(mx, (n / m + k - 1) / k * m);\n for (int i = 1; i <= d; i++) {\n  ll cnt = k * i - k + 1;\n  if (cnt > n) break;\n  if (n / cnt > m) continue;\n  mx = max(mx, n / cnt * i);\n }\n cout << mx;\n return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Greedy Arkady.json",
    "editorial_link": "https://codeforces.com//blog/entry/59105",
    "editorial": "As the limits on are small, let\u00e2\u0080\u0099s try all possible values of the number\r\nof times Arkady will receive candies. For a given it\u00e2\u0080\u0099s easy to compute\r\nand the maximum and minimum values of that suit these and . Then, with a\r\nfixed it\u00e2\u0080\u0099s easy to write the formula of how many candies Arkady gets:\r\nit\u00e2\u0080\u0099s candies. So it\u00e2\u0080\u0099s obvious that we should choose for the given and\r\nupdate the answer. can you solve the task when the leftover is not\r\nthrown away, but is given to the next person? can you solve the task\r\nfrom bonus 1, but without the condition (just )?\r\n"
}