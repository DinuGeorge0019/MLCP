{"link": "https://codeforces.com//contest/1265/problem/A", "problemId": "486708", "problem_idx": "A", "shortId": "1265A", "contest_number": "1265", "problem_submissions": {"F": [66347509, 66356863, 66557730, 66442620, 66596419], "D": [66340623, 66367551, 66338719, 66334115, 66337781, 66335412, 66337141, 66346278, 66339422, 66338547, 66341148, 66339217, 66340066, 66341959, 66331621, 66342018, 66346489, 66340801, 66342356, 66342319, 66343587], "E": [66334163, 66342621, 66338591, 66341637, 66343875, 66343996, 66335345, 66344209, 66345114, 66344975, 66347923, 66349901, 66349558, 66353633, 66348910, 66344231, 66352728, 66349177, 66344898, 66345749], "C": [66327706, 66330775, 66334663, 66328752, 66329873, 66333663, 66331630, 66332247, 66329421, 66334491, 66334922, 66330433, 66331509, 66336687, 66333340, 66334139, 66330672, 66335469, 66331275, 66338262], "B": [66327279, 66324231, 66324702, 66323571, 66323717, 66325187, 66324433, 66325466, 66331477, 66327697, 66323823, 66325202, 66325641, 66327180, 66324867, 66325852, 66324365, 66328628, 66324650, 66332154], "A": [66323436, 66367023, 66322763, 66325795, 66322545, 66322720, 66322849, 66322611, 66322846, 66324460, 66323395, 66326356, 66322526, 66323577, 66323841, 66322634, 66323094, 66322910, 66325754, 66323461, 66323023]}, "name": "A. Beautiful String", "statement": "A string is called beautiful if no two consecutive characters are equal.\r\nFor example, \"\", \"\" and \"\" are beautiful strings, while \"\", \"\" and \"\"\r\nare not.Ahcl wants to construct a beautiful string. He has a string s,\r\nconsisting of only characters \u201d, \u201d, \u201d and \u201d. Ahcl needs to replace each\r\ncharacter \u201d with one of the three characters \u201d, \u201d or \u201d, such that the\r\nresulting string is beautiful. Please help him!More formally, after\r\nreplacing all characters \u201d, the condition s_i\r\nneq s_{i+1} should be satisfied for all 1\r\nleq i\r\nleq |s| - 1, where |s| is the length of the string s.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int maxn=1e5+5;\nchar s[maxn];\nint n;\nint main(){\n\tint cas=read();\n\twhile(cas--){\n\t\tscanf(\"%s\",s+1);\n\t\tn=strlen(s+1);\n\t\tint ok=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(s[i]=='?'){\n\t\t\t\tif(s[i-1]!='a'&&s[i+1]!='a')s[i]='a';\n\t\t\t\telse if(s[i-1]!='b'&&s[i+1]!='b')s[i]='b';\n\t\t\t\telse if(s[i-1]!='c'&&s[i+1]!='c')s[i]='c';\n\t\t\t}else{\n\t\t\t\tif(s[i]==s[i-1]){\n\t\t\t\t\tok=0;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!ok)puts(\"-1\");\n\t\telse{\n\t\t\tfor(int i=1;i<=n;i++)cout<<s[i];cout<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1000", "interactive": false}