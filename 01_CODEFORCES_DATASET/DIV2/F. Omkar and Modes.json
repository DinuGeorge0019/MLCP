{"link": "https://codeforces.com//contest/1372/problem/F", "problemId": "665587", "problem_idx": "F", "shortId": "1372F", "contest_number": "1372", "problem_submissions": {"F": [86587331, 86592445], "D": [86567204, 86579473, 86577327, 86535735, 86539756, 86541547, 86541810, 86544261, 86545902, 86544858, 86551552, 86549456, 86551379, 86554398, 86555103, 86559228, 86553301], "C": [86542450, 86550447, 86544146, 86549498, 86526578, 86530081, 86532018, 86527267, 86533550, 86528779, 86532078, 86534770, 86530142, 86536030, 86548674, 86533586, 86533762, 86528487, 86532205], "B": [86530649, 86544843, 86528066, 86586370, 86518220, 86520050, 86527028, 86521440, 86521451, 86520560, 86523901, 86522899, 86522046, 86527358, 86530942, 86526972, 86524542, 86517410, 86521410], "A": [86513990, 86538518, 86515960, 86516941, 86513491, 86515289, 86513521, 86514849, 86514076, 86513724, 86514041, 86514826, 86513853, 86514635, 86523362, 86514036, 86514079, 86513422, 86513617], "E": [86584231, 86531273, 86583888, 86618428, 86570603]}, "name": "F. Omkar and Modes", "statement": "Ray lost his array and needs to find it by asking Omkar. Omkar is\r\nwilling to disclose that the array has the following qualities: The\r\narray has n (1\r\nle n\r\nle 2\r\ncdot 10^5) elements. Every element in the array a_i is an integer in the\r\nrange 1\r\nle a_i\r\nle 10^9. The array is sorted in nondecreasing order. Ray is allowed to\r\nsend Omkar a series of queries. A query consists of two integers, l and\r\nr such that 1\r\nle l\r\nle r\r\nle n. Omkar will respond with two integers, x and f. x is the mode of\r\nthe subarray from index l to index r inclusive. The mode of an array is\r\ndefined by the number that appears the most frequently. If there are\r\nmultiple numbers that appear the most number of times, the smallest such\r\nnumber is considered to be the mode. f is the amount of times that x\r\nappears in the queried subarray.The array has k (1\r\nle k\r\nle\r\nmin(25000,n)) distinct elements. However, due to Ray\u2019s sins, Omkar will\r\nnot tell Ray what k is. Ray is allowed to send at most 4k queries.Help\r\nRay find his lost array.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned int ui;\ntypedef unsigned long long ull;\ntypedef pair<int ,int> pii;\ntypedef pair<ll, ll> pll;\ntypedef double rl;\n\ntypedef pii int2;\ntypedef tuple<int, int, int>           int3;\ntypedef tuple<int, int, int, int>      int4;\ntypedef tuple<int, int, int, int, int> int5;\n\ntypedef pll ll2;\ntypedef tuple<ll, ll, ll>         ll3;\ntypedef tuple<ll, ll, ll, ll>     ll4;\ntypedef tuple<ll, ll, ll, ll, ll> ll5;\n\n#define g0(x) get<0>(x)\n#define g1(x) get<1>(x)\n#define g2(x) get<2>(x)\n#define g3(x) get<3>(x)\n#define g4(x) get<4>(x)\n\ntypedef vector<int> vi;\ntypedef vector<pii> vii;\ntypedef vector<ll> vll;\ntypedef vector<pll> vll_ll;\ntypedef vector<vi> vvi;\ntypedef vector<vii> vvii;\ntypedef vector<vll> vvll;\ntypedef vector<vll_ll> vvll_ll;\n\n#define pb push_back\n#define mp make_pair\n#define eb emplace_back\n#define xx first\n#define yy second\n\n#define FOR(i,N) for(int i=0; i<N; i++)\n\n#define popc __builtin_popcountll\n// #define popc __builtin_popcount\n\ntemplate<typename A>\nstring to_string(A* ptr)\n{\n    stringstream ss; ss << \"0x\" << std::setw(16) << std::setfill ('0') << std::hex << (uint64_t)(uintptr_t)ptr;\n    return ss.str();\n}\n\nstring to_string(char c)\n{\n    return ((string)\"'\"+c)+ \"'\";\n}\n\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p);\n\ntemplate <typename A, typename B, typename C>\nstring to_string(tuple<A, B, C> p);\n\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p);\n\nstring to_string(const string& s) {\n  return '\"' + s + '\"';\n}\n\nstring to_string(const char* s) {\n  return to_string((string) s);\n}\n\nstring to_string(bool b) {\n  return (b ? \"true\" : \"false\");\n}\n\nstring to_string(vector<bool> v) {\n  bool first = true;\n  string res = \"{\";\n  for (int i = 0; i < static_cast<int>(v.size()); i++) {\n    if (!first) {\n      res += \", \";\n    }\n    first = false;\n    res += to_string(v[i]);\n  }\n  res += \"}\";\n  return res;\n}\n\ntemplate <size_t N>\nstring to_string(bitset<N> v) {\n  string res = \"\";\n  for (size_t i = 0; i < N; i++) {\n    res += static_cast<char>('0' + v[i]);\n  }\n  return res;\n}\n\ntemplate <typename A>\nstring to_string(A v) {\n  bool first = true;\n  string res = \"{\";\n  for (const auto &x : v) {\n    if (!first) {\n      res += \", \";\n    }\n    first = false;\n    res += to_string(x);\n  }\n  res += \"}\";\n  return res;\n}\n\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p) {\n  return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\n}\n\ntemplate <typename A, typename B, typename C>\nstring to_string(tuple<A, B, C> p) {\n  return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \")\";\n}\n\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p) {\n  return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \", \" + to_string(get<3>(p)) + \")\";\n}\n\nvoid debug_out() { cerr << endl; }\n\ntemplate <typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n  cerr << \" \" << to_string(H);\n  debug_out(T...);\n}\n\n#if !ONLINE_JUDGE && 1\n#define dbg(...) cerr << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\n#else\n#define dbg(...) 42\n#endif\n\nint n;\npii query(int l, int r)\n{\n    cout << \"? \" << l << ' ' << r << '\\n';\n    cout.flush();\n\n    int x, f;\n    cin >> x >> f;\n    return {x, f};\n}\n\nconst int MX=2e5+99;\nint a[MX];\nconst int DUNNO=-1;\nconst int BOUND=1'000'000'000;\n\nvoid guess()\n{\n    cout << \"! \";\n    for(int i=1; i<=n; i++)\n    {\n        assert(1<=a[i] && a[i]<=BOUND);\n        cout << a[i] << ' ';\n    }\n    cout << '\\n';\n    cout.flush();\n}\n\nvoid solve(int L, int R)\n{\n    //dbg(L, R);\n    int aL=a[L], aR=a[R];\n\n    if(aL==aR)\n    {\n        for(int i=L+1; i<R; i++) a[i]=aL;\n        return;\n    }\n\n    if(L+1 == R) return;\n\n    auto [x, f]=query(L, R);\n    if(x==aL)\n    {\n        for(int i=1; i<f; i++) a[L+i]=aL;\n        if(L+f<R)\n        {\n            a[L+f]=query(L+f, L+f).xx;\n            solve(L+f, R);\n        }\n    }\n    else if(x==aR)\n    {\n        for(int i=1; i<f; i++) a[R-i]=aR;\n        if(L<R-f)\n        {\n            a[R-f]=query(R-f, R-f).xx;\n            solve(L, R-f);\n        }\n    }\n    else\n    {\n        //TODO;\n        a[L+f-1]=query(L+f-1, L+f-1).xx;\n        solve(L, L+f-1);\n        solve(L+f-1, R);\n    }\n}\n\nvoid solve()\n{\n    for(int i=1; i<=n; i++) a[i]=DUNNO;\n    a[1]=query(1,1).xx;\n    a[n]=query(n,n).xx;\n\n    solve(1, n);\n\n    guess();\n}\n\nint main()\n{\n#if !ONLINE_JUDGE && 0\n    freopen(\"F.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n#endif\n#if 0\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr); cout.tie(nullptr);\n#endif\n\n    //int TT;\n#if 0\n    cin >> TT;\n#else\n    //TT=1;\n#endif\n    /*\n    for(int ttt=0; ttt<TT; ttt++)\n    {\n\n    }\n    */\n    cin >> n;\n    solve();\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "divide and conquer", "interactive"], "dificulty": "2700", "interactive": false}