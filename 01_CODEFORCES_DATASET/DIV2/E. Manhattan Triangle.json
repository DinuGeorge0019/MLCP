{
    "link": "https://codeforces.com//contest/1979/problem/E",
    "problemId": "2684283",
    "problem_idx": "E",
    "shortId": "1979E",
    "contest_number": "1979",
    "problem_submissions": {
        "F": [
            264479061,
            264488646,
            264505247,
            264595233,
            264619291
        ],
        "E": [
            264463709,
            264456182,
            264454663,
            264460110,
            264469235,
            264463422,
            264466790,
            264478578,
            264473477,
            264470909,
            264471670,
            264477459,
            264475074,
            264468357,
            264475963,
            264472031,
            264477800,
            264475608,
            264472217
        ],
        "D": [
            264443096,
            264466698,
            264438605,
            264433389,
            264436848,
            264441621,
            264445629,
            264439468,
            264443494,
            264448547,
            264437284,
            264438609,
            264445824,
            264448565,
            264448792,
            264448782,
            264436980,
            264445527,
            264444587
        ],
        "C": [
            264426913,
            264419354,
            264425968,
            264424857,
            264419880,
            264427385,
            264428474,
            264417768,
            264426268,
            264426216,
            264426191,
            264428203,
            264424558,
            264432779,
            264423537,
            264427769,
            264423741,
            264426473,
            264428054
        ],
        "B": [
            264418439,
            264411481,
            264417433,
            264418710,
            264412854,
            264416785,
            264417289,
            264409596,
            264415411,
            264416480,
            264411733,
            264416203,
            264418002,
            264418445,
            264413144,
            264415814,
            264415134,
            264412074,
            264419017
        ],
        "A": [
            264409604,
            264408727,
            264409156,
            264412898,
            264408950,
            264409241,
            264410321,
            264408352,
            264408494,
            264408922,
            264408390,
            264408516,
            264410187,
            264409625,
            264408487,
            264409057,
            264408498,
            264408238,
            264408615
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130213",
    "editorial": "SolutionNote this fact: in every Manhattan triangle there are two points\r\nsuch that .Letâs start with distributing all points with their value.For\r\neach point find point using lower bound method in corresponding set.\r\nThen we have to find the third point: it can be in either or diagonal.\r\nBorders at coordinate for them are and it can be found using the same\r\nlower bound method.Then, distribute all points with value and do the\r\nsame algorithm.Total time complexity is .\r\n",
    "name": "E. Manhattan Triangle",
    "statement": "The Manhattan distance between two points (x_1, y_1) and (x_2, y_2) is\r\ndefined as: |x_1 - x_2| + |y_1 - y_2|.We call a three points on the\r\nplane, the Manhattan distances between each pair of which are equal.You\r\nare given a set of pairwise distinct points and an integer d. Your task\r\nis to find any Manhattan triangle, composed of three distinct points\r\nfrom the given set, where the Manhattan distance between any pair of\r\nvertices is equal to d.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;#define ll long long#define MP make_pairmt19937 rnd(time(0));const int MAXN=2e5+5;int n,d;struct node{int x,y,id;};bool operator <(node x,node y){return x.x<y.x;}void solve(){\tmap<int,set<node> > ls,rs;\tcin>>n>>d;\tfor(int i=1;i<=n;i++){\t\tint x,y;cin>>x>>y;\t\tls[x-y].insert((node){x,y,i});\t\trs[x+y].insert((node){x,y,i});\t}\tfor(auto &i:ls){\t\tfor(node j:i.second){\t\t\tauto it=i.second.upper_bound((node){j.x-d/2-1,0,0});\t\t\tnode lst;\t\t\tif(it->x==j.x-d/2) lst=*it;\t\t\telse continue;\t\t\tint l=j.x-d,r=lst.x;\t\t\tif(l<=r&&ls.count(i.first-d)){\t\t\t\tauto it=ls[i.first-d].upper_bound((node){l-1,0,0});\t\t\t\tif(it!=ls[i.first-d].end()&&it->x<=r){\t\t\t\t\tcout<<j.id<<' '<<lst.id<<' '<<it->id<<'\\n';\t\t\t\t\treturn;\t\t\t\t}\t\t\t}\t\t\tl=j.x,r=lst.x+d;\t\t\tif(l<=r&&ls.count(i.first+d)){\t\t\t\tauto it=ls[i.first+d].upper_bound((node){l-1,0,0});\t\t\t\tif(it!=ls[i.first+d].end()&&it->x<=r){\t\t\t\t\tcout<<j.id<<' '<<lst.id<<' '<<it->id<<'\\n';\t\t\t\t\treturn;\t\t\t\t}\t\t\t}\t\t}\t}\tfor(auto &i:rs){\t\tfor(node j:i.second){\t\t\tauto it=i.second.upper_bound((node){j.x-d/2-1,0,0});\t\t\tnode lst;\t\t\tif(it->x==j.x-d/2) lst=*it;\t\t\telse continue;\t\t\tint l=j.x-d,r=lst.x;\t\t\tif(l<=r&&rs.count(i.first-d)){\t\t\t\tauto it=rs[i.first-d].upper_bound((node){l-1,0,0});\t\t\t\tif(it!=rs[i.first-d].end()&&it->x<=r){\t\t\t\t\tcout<<j.id<<' '<<lst.id<<' '<<it->id<<'\\n';\t\t\t\t\treturn;\t\t\t\t}\t\t\t}\t\t\tl=j.x,r=lst.x+d;\t\t\tif(l<=r&&rs.count(i.first+d)){\t\t\t\tauto it=rs[i.first+d].upper_bound((node){l-1,0,0});\t\t\t\tif(it!=rs[i.first+d].end()&&it->x<=r){\t\t\t\t\tcout<<j.id<<' '<<lst.id<<' '<<it->id<<'\\n';\t\t\t\t\treturn;\t\t\t\t}\t\t\t}\t\t\t\t\t}\t}\tcout<<\"0 0 0\\n\";}int main(){\tios::sync_with_stdio(false);\t// freopen(\"Otomachi_Una.in\",\"r\",stdin);\t// freopen(\"Otomachi_Una.out\",\"w\",stdout);\tint _;cin>>_;\twhile(_--) solve();\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "geometry",
        "implementation",
        "two pointers"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Manhattan Triangle.json",
    "hint": [
        "Hint In every Manhattan triangle there are two points such that ."
    ]
}