{
    "link": "https://codeforces.com//contest/27/problem/A",
    "problemId": "124",
    "problem_idx": "A",
    "shortId": "27A",
    "contest_number": "27",
    "problem_submissions": {
        "C": [
            118523,
            117811,
            117814,
            117821,
            1202654,
            117657,
            117499,
            119957,
            117700,
            119337,
            118774,
            118192,
            117772,
            118123
        ],
        "E": [
            118273,
            118684,
            118448,
            118559,
            118059,
            118536,
            119960,
            118988,
            119040,
            119271,
            119970
        ],
        "D": [
            117934,
            118098,
            118656,
            118879,
            117613,
            118207,
            119959,
            118542,
            118353,
            118733,
            121675,
            118883
        ],
        "B": [
            117350,
            117487,
            117442,
            117491,
            117370,
            117796,
            119955,
            117513,
            117473,
            118282,
            119741,
            117496,
            117464,
            117783
        ],
        "A": [
            117113,
            117117,
            117183,
            117189,
            117387,
            117134,
            117129,
            119954,
            117122,
            117228,
            117819,
            117165,
            117139,
            117252
        ]
    },
    "name": "A. Next Test",
    "statement": "Polygon is a system which allows to create programming tasks in a simple\r\nand professional way. When you add a test to the problem, the\r\ncorresponding form asks you for the test index. As in most cases it is\r\nclear which index the next test will have, the system suggests the\r\ndefault value of the index. It is calculated as the smallest positive\r\ninteger which is not used as an index for some previously added test.You\r\nare to implement this feature. Create a program which determines the\r\ndefault index of the next test, given the indexes of the previously\r\nadded tests.\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<map>\n#include<vector>\n#include<list>\n#include<set>\n#include<queue>\n#include<cassert>\n#include<sstream>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define LET(x,a) \t__typeof(a) x(a)\n#define IFOR(i,a,b) \tfor(LET(i,a);i!=(b);++i)\n#define EACH(it,v)  \tIFOR(it,v.begin(),v.end())\n#define FOR(i,a,b)  \tfor(int i=(int)(a) ; i < (int)(b);++i)\n#define REP(i,n) \tFOR(i,0,n)\n#define PB\t\tpush_back\n#define MP \t\tmake_pair\n#define EPS\t\t1e-9\n#define INF 2000000000\n\ntypedef vector<int>\tVI;\ntypedef long long\tLL;\ntypedef pair<int,int>\tPI;\n\nbool visited[5000];\n\nint main(){\n\tint n;cin>>n;\n\tmemset(visited,false,sizeof(visited));\n\tREP(i,n){\n\t\tint tmp;cin>>tmp;\n\t\tvisited[tmp]=true;\n\t}\n\tint ans;\n\tFOR(i,1,4000){\n\t\tif(!visited[i]){\n\t\t\tans = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Next Test.json",
    "editorial_link": "https://codeforces.com//blog/entry/653",
    "editorial": "We will create an array of boolean used[1..3001] ans fill it with \"false\" values. For each of n given number, we will assign corresponding used value to \"true\". After that, the index of first element of used with \"false\" value is the answer to the problem."
}