{"link": "https://codeforces.com//contest/1805/problem/F2", "problemId": "1861357", "problem_idx": "F2", "shortId": "1805F2", "contest_number": "1805", "problem_submissions": {"F1": [200439106, 200443524, 200424069, 200446588, 200467490, 200437348, 200464508, 200464351, 200463340, 209038123, 200557576, 200463298], "C": [200413348, 200408313, 200430286, 200414727, 200402344, 200408784, 200395896, 200428904, 200404720, 200402863, 200404086, 200425916, 200413389, 200409508, 200408670, 200409948, 200401611, 200399297, 200403669], "B": [200409525, 200389992, 200432442, 200395023, 200391231, 200403848, 200389421, 200391233, 200390818, 200392560, 200392816, 200391784, 200391655, 200392657, 200391007, 200395691, 200393122, 200390776, 200392459], "A": [200408080, 200387988, 200433504, 200390983, 200388843, 200402551, 200387906, 200388117, 200387935, 200388566, 200388387, 200388650, 200388558, 200388007, 200388011, 200389948, 200389103, 200388194, 200388689], "D": [200406761, 200528793, 200401484, 200399149, 200420505, 200419712, 200416986, 200406203, 200414310, 200416697, 200410720, 200413945, 200420475, 200409512, 200419982, 200414162, 200411839, 200411433, 200405601, 200415016], "E": [200397032, 200427084, 200411961, 200433750, 200593267, 200592726, 200467387, 200400294, 200428962, 200409350, 200426292, 200428409, 200434434, 200414709, 200432234, 214976359, 200427846, 200430477, 200431439, 200435575, 200437915, 200434896], "F2": [200479147, 200478731, 200478432, 200478085, 200477991, 200477963, 200476470, 200447442, 209038798]}, "name": "F2. Survival of the Weakest  hard version ", "statement": "Let a_1, a_2,\r\nldots, a_n be an array of non-negative integers. Let F(a_1, a_2,\r\nldots, a_n) be the sorted in the non-decreasing order array of n - 1\r\nsmallest numbers of the form a_i + a_j, where 1\r\nle i < j\r\nle n. In other words, F(a_1, a_2,\r\nldots, a_n) is the sorted in the non-decreasing order array of n - 1\r\nsmallest sums of all possible pairs of elements of the array a_1, a_2,\r\nldots, a_n. For example, F(1, 2, 5, 7) = [1 + 2, 1 + 5, 2 + 5] = [3, 6,\r\n7].You are given an array of non-negative integers a_1, a_2,\r\nldots, a_n. Determine the single element of the array\r\nunderbrace{F(F(F\r\nldots F}_{n-1}(a_1, a_2,\r\nldots, a_n)\r\nldots)). Since the answer can be quite large, output it modulo 10^9+7.\r\n", "solutions": ["#include \"bits/stdc++.h\"\nusing namespace std;\nusing ll = long long;\n\nconst ll mod = 1e9 + 7;\nconst ll mod2 = mod * mod;\n\nll smp(ll x, ll y) {\n    x += y;\n    x -= x < mod2 ? 0 : mod2;\n    return x;\n}\n\nint main() {\n    cin.tie(0); cout.tie(0); cin.sync_with_stdio(0); cout.sync_with_stdio(0);\n    ll a; cin >> a;\n    vector<ll> m(a);\n    for (auto& c : m) cin >> c;\n    if (a == 2) cout << (m[0] + m[1]) % mod, exit(0);\n    sort(m.begin(), m.end());\n    const ll N = min(a, (ll)50);\n    for (int i = 0; i < a - 1; ++i) {\n        priority_queue<array<ll, 2>, vector<array<ll, 2>>, greater<array<ll, 2>>> pq;\n        vector<ll> gde(m.size());\n        for (int i = 0; i + 1 < m.size(); ++i) {\n            pq.push({smp(m[i], m[i + 1]), i});\n            gde[i] = i + 1;\n        }\n        vector<ll> n;\n        while (n.size() < N) {\n            auto [x, i] = pq.top(); pq.pop();\n            n.push_back(x);\n            if (++gde[i] != m.size()) {\n                pq.push({smp(m[i], m[gde[i]]), i});\n            }\n        }\n        m = n;\n    }\n    cout << m[0] % mod;\n}\n"], "input": "", "output": "", "tags": ["greedy", "math", "sortings", "two pointers"], "dificulty": "3100", "interactive": false}