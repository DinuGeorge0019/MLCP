{
    "link": "https://codeforces.com//contest/94/problem/C",
    "problemId": "494",
    "problem_idx": "C",
    "shortId": "94C",
    "contest_number": "94",
    "problem_submissions": {
        "E": [
            521553,
            521880,
            522467,
            526155,
            523146,
            523157
        ],
        "D": [
            519365,
            518958,
            518305,
            519392,
            518800,
            520161,
            521011,
            521143,
            520319,
            520841,
            520217,
            521120,
            518685,
            520557,
            518998
        ],
        "C": [
            517626,
            517507,
            517218,
            517667,
            518042,
            517867,
            517038,
            518011,
            517625,
            518595,
            520630,
            519397,
            516288,
            520795,
            521799
        ],
        "B": [
            515646,
            515796,
            515893,
            515624,
            515532,
            516196,
            515676,
            516322,
            516160,
            515597,
            515907,
            516405,
            521550,
            516168,
            515483
        ],
        "A": [
            515017,
            514950,
            515359,
            514955,
            515050,
            515155,
            514834,
            515016,
            515211,
            515499,
            514941,
            514917,
            520686,
            514959,
            515020
        ]
    },
    "name": "C. Frames",
    "statement": "Throughout Igor K.’s life he has had many situations worthy of\r\nattention. We remember the story with the virus, the story of his\r\nmathematical career and of course, his famous programming achievements.\r\nHowever, one does not always adopt new hobbies, one can quit something\r\nas well.This time Igor K. got disappointed in one of his hobbies:\r\nediting and voicing videos. Moreover, he got disappointed in it so much,\r\nthat he decided to destroy his secret archive for good. Igor K. use\r\nPindows XR operation system which represents files and folders by small\r\nicons. At that, icons can fit in a horizontal row in any window.Igor\r\nK.’s computer contains folders in the D: disk’s root catalog. The\r\nfolders are numbered from to in the order from the left to the right and\r\nfrom top to bottom (see the images). At that the folders with secret\r\nvideos have numbers from to inclusive. Igor K. wants to delete them\r\nforever, at that making as few frame selections as possible, and then\r\npressing Shift+Delete exactly once. What is the minimum number of times\r\nIgor K. will have to select the folder in order to select folders from\r\nto and only them? Let us note that if some selected folder is selected\r\nrepeatedly, then it is deselected. Each selection possesses the shape of\r\nsome rectangle with sides parallel to the screen’s borders.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <string>\n#include <numeric>\n#include <cmath>\n#include <cstdlib>\n#include <iostream>\n#include <sstream>\n#include <cstring>\n#include <cstdio>\n#include <complex>\n#include <cassert>\n\nusing namespace std;\n\n//\ntypedef long long LL;\ntypedef pair<int,int> PII;\n#define MP make_pair\n#define VI vector<int>\n#define FOR(v,p,k) for(int v=p;v<=k;++v)\n#define FORD(v,p,k) for(int v=p;v>=k;--v)\n#define REP(i,n) for(int i=0;i<(n);++i)\n#define VAR(v,i) __typeof(i) v=(i)\n#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)\n#define PB push_back\n#define ST first\n#define ND second\n#define SIZE(x) (int)x.size()\n#define ALL(c) c.begin(),c.end()\n//\n#define rep(i,b) for(int i=(0);i<(b);++i)\n#define fo(i,a,b) for(int i=(a);i<=(b);++i)\n#define ford(i,a,b) for(int i=(a);i>=(b);--i)\n#define fore(a,b) for(__typeof((b).begin()) a = (b).begin();a!=(b).end();++a)\n#define vv vector\n#define pb push_back\n#define ll long long\n#define ld long double\n#define ss(a) (int)(a).size()\n#define all(x) (x).begin(),(x).end()\n#define clr(x,a) memset(x,a,sizeof(x))\n#define vi vv<int>\n#define vs vv<string>\ntemplate<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}\ntemplate<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}\n\nint cond = (ll)1;\n#define db(x) { if (cond > 0) { cond--; rep (xxx, 1) cerr << __LINE__ << \" \" << #x << \" \" << x << endl; cerr.flush(); } }\n\nvoid _main() {\n    int n, m, a, b;\n    scanf(\"%d%d\", &n, &m);\n    scanf(\"%d%d\", &a, &b);\n    a--; b--;\n    int r1 = a / m;\n    int c1 = a % m;\n\n    int r2 = b / m;\n    int c2 = b % m;\n    db(r1<<\" \"<<c1);\n    db(r2<<\" \"<<c2);\n    if (r1 == r2) cout << 1 << endl;\n    else {\n        if (r1 == r2 - 1) {\n            cout<< ((c1 != 0 || (c2 != m - 1 && b + 1 != n)) ? 2 : 1)<<endl;\n        }\n        else {\n            int cost = 1;\n            cost += c1 != 0;\n            cost += (c2 != m - 1) && b + 1 != n;\n            if (c2 +1 == c1) cost = min(cost, 2);\n            cout << cost << endl;\n        }\n    }\n}\n\nint main(int argc, char ** argv) {\n    string p = \"../gcj/source/\" + string(\"\") + argv[0][strlen(argv[0])-1];\n//    if (argc >= 2 && strcmp(argv[1], \"q\") != 0) { freopen(argv[1],\"r\",stdin);}\n\n    rep (i, argc) if (strcmp(argv[i], \"1n\") == 0) { freopen(\"1.in\",\"r\",stdin);}\n    rep (i, argc) if (strcmp(argv[i], \"2n\") == 0) { freopen(\"2.in\",\"r\",stdin);}\n    rep (i, argc) if (strcmp(argv[i], \"3n\") == 0) { freopen(\"3.in\",\"r\",stdin);}\n    rep (i, argc) if (strcmp(argv[i], \"4n\") == 0) { freopen(\"4.in\",\"r\",stdin);}\n    rep (i, argc) if (strcmp(argv[i], \"5n\") == 0) { freopen(\"5.in\",\"r\",stdin);}\n\n    rep (i, argc) if (strcmp(argv[i], \"s0\") == 0) { freopen((p + \"-small-0.in\").c_str(),\"r\",stdin);freopen((p + \"-small-0.out\").c_str(),\"w\",stdout); }\n    rep (i, argc) if (strcmp(argv[i], \"s1\") == 0) { freopen((p + \"-small-1.in\").c_str(),\"r\",stdin);freopen((p + \"-small-1.out\").c_str(),\"w\",stdout); }\n    rep (i, argc) if (strcmp(argv[i], \"s2\") == 0) { freopen((p + \"-small-2.in\").c_str(),\"r\",stdin);freopen((p + \"-small-2.out\").c_str(),\"w\",stdout); }\n    rep (i, argc) if (strcmp(argv[i], \"l0\") == 0) { freopen((p + \"-large-0.in\").c_str(),\"r\",stdin);freopen((p + \"-large-0.out\").c_str(),\"w\",stdout); }\n    rep (i, argc) if (strcmp(argv[i], \"q\") == 0) cond = 1 << 30;\n    _main();\n    return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Frames.json",
    "editorial_link": "https://codeforces.com//blog/entry/2208",
    "editorial": "So let's solve the problem. At first notice that the answer is not greater than 3 because we always can do three selections (maybe, some of them are empty): with first selection we select end of the first row, with second one - begin of the last row, and with last one - all remaining folders (they form the rectangle).\nThe best way is to find all cases with answer 1 and 2. Try to do it.\n\nIf the answer is 1, we can select all folders from a to b with one selection. There must be nothing hard to detect these cases:\n\nfirst and last folders are in the same row (21 5 7 9);\nfirst folder is in the first column, and the last folder - in the last column (21 5 1 15), ?ase m?=?1 is included here;\nfirst folder is in the first column, and the last folder is n (21 5 6 21). Case when we must select all folders is included here. I was very surprised when I saw that many contestants forgot about it.\nAnd these are the cases with answer 2:\n\nfirst and last folders are in the adjacent rows (21 5 8 14);\nfirst folder is in the first column (21 5 6 13);\nlast folder is in the last column (21 5 4 15);\nlast folder is n (21 5 4 21);\nand another tricky case: if the column where first folder is located is just at right from the column where the last column is located (21 5 3 12).\nIf no one of these conditions is true, answer is 3.",
    "hint": []
}