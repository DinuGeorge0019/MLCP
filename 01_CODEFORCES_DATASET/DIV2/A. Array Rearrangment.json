{
    "link": "https://codeforces.com//contest/1445/problem/A",
    "problemId": "781569",
    "problem_idx": "A",
    "shortId": "1445A",
    "contest_number": "1445",
    "problem_submissions": {
        "E": [
            97343040,
            97347277,
            97348912,
            97344656,
            97407907,
            97407463,
            97396524,
            97362947
        ],
        "D": [
            97324855,
            97333286,
            97329900,
            97353075,
            97316397,
            97323647,
            97321827,
            97324812,
            97326864,
            97321949,
            97323009,
            97324550,
            97322776,
            97326841,
            97328860,
            97326229,
            97319935,
            97330188,
            97323548,
            97329039
        ],
        "C": [
            97312030,
            97308145,
            97319441,
            97322210,
            97306404,
            97316438,
            97309851,
            97318138,
            97312463,
            97315342,
            97319473,
            97318075,
            97315769,
            97319997,
            97316782,
            97317725,
            97311982,
            97316093,
            97319226,
            97318708
        ],
        "B": [
            97307314,
            97314537,
            97310817,
            97314466,
            97321532,
            97307574,
            97325592,
            97309083,
            97515487,
            97306672,
            97309337,
            97315410,
            97313589,
            97311259,
            97309216,
            97310018,
            97309275,
            97322041,
            97310083,
            97315384,
            97310291
        ],
        "A": [
            97303713,
            97309415,
            97303791,
            97305897,
            97308405,
            97303339,
            97304268,
            97303286,
            97515476,
            97303210,
            97303136,
            97304841,
            97305580,
            97303766,
            97303232,
            97303901,
            97303416,
            97315951,
            97303601,
            97303529,
            97303495
        ]
    },
    "name": "A. Array Rearrangment",
    "statement": "You are given two arrays a and b, each consisting of n positive\r\nintegers, and an integer x. Please determine if one can rearrange the\r\nelements of b so that a_i + b_i\r\nleq x holds for each i (1\r\nle i\r\nle n).\r\n",
    "solutions": [
        "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <iomanip>\n#include <cassert>\n#include <cstring>\n#include <sstream>\n#include <numeric>\n#include <cstdio>\n#include <bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair <int, int> pii;\n\n#define pb push_back\n#define F first\n#define S second\n#define _sz(x) ((int)x.size())\n\nint T;\n\nconst int N = 50 + 5;\nint n, x, a[N], b[N];\n\nint main()\n{\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\n    cin >> T;\n\n    while (T--) {\n        cin >> n >> x;\n\n        for (int i = 0; i < n; i++) cin >> a[i];\n        for (int i = 0; i < n; i++) cin >> b[i];\n\n        sort(a, a + n);\n        sort(b, b + n, greater<int>());\n\n        bool ok = 1;\n        for (int i = 0; i < n; i++) ok &= (a[i] + b[i] <= x);\n\n        cout << (ok? \"Yes\" : \"No\") << '\\n';\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Array Rearrangment.json",
    "editorial_link": "https://codeforces.com//blog/entry/84248",
    "editorial": "It\u00e2\u0080\u0099s enough to sort in non-decreasing order and sort in non-increasing\r\norder and check, whether for all .Correctness can be proven by\r\ninduction: let\u00e2\u0080\u0099s show that if answer exists, there is a solution with\r\nminimum in and maximum in are paired. Let be minimum in and be maximum\r\nin . Let be number paired with and be number paired with . Since\r\nsolution is correct, and . Since , . Since , . So, can be paired with .\r\n"
}