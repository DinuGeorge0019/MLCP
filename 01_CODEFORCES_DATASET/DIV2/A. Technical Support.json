{
    "link": "https://codeforces.com//contest/1754/problem/A",
    "problemId": "1601068",
    "problem_idx": "A",
    "shortId": "1754A",
    "contest_number": "1754",
    "problem_submissions": {
        "F": [
            177585023,
            177595292,
            177589725,
            177595672,
            177592227,
            177594371,
            177600616,
            177598864,
            177604397,
            177602614,
            177600745,
            177650521
        ],
        "E": [
            177569689,
            177567357,
            177579016,
            177575748,
            177578227,
            177581574,
            177582284,
            177718437,
            177559205,
            177578841,
            177592467,
            177571365,
            177604409,
            177574278,
            177575358,
            177581672,
            177580864,
            177577975,
            177576690,
            177577060,
            177575788
        ],
        "D": [
            177558843,
            177556402,
            177557867,
            177557341,
            177566023,
            177561555,
            177537301,
            177563632,
            177569625,
            177568630,
            177559753,
            177582529,
            177556010,
            177555670,
            177565457,
            177546662,
            177548683,
            177569461,
            177558389,
            177564007
        ],
        "C2": [
            177551655,
            177558288,
            177573497,
            177569544,
            177555242,
            177556994,
            177560273,
            177574456,
            177565363,
            177565266,
            177553021,
            177580177,
            177562940,
            177559475,
            177572826,
            177570567,
            177562030,
            177570649,
            177565206
        ],
        "C1": [
            177547310,
            177553157,
            177573631,
            177554026,
            177551066,
            177557135,
            177560766,
            177574531,
            177555999,
            177565804,
            177552312,
            177567879,
            177563083,
            177549386,
            177558755,
            177554824,
            177557780,
            177570332,
            177559045
        ],
        "B": [
            177536928,
            177540939,
            177544434,
            177539979,
            177546063,
            177755484,
            177551911,
            177569215,
            177582864,
            177540989,
            177550638,
            177541452,
            177561666,
            177543484,
            177541411,
            177704318,
            177536796,
            177542739,
            177547137,
            178632445,
            177550998,
            177541636
        ],
        "A": [
            177533931,
            177534875,
            177539057,
            177534599,
            177534878,
            177755451,
            177538378,
            177573057,
            177577215,
            177534289,
            177537921,
            177534413,
            177539691,
            177533195,
            177532916,
            177535356,
            177704314,
            177533258,
            177538336,
            177537857,
            178632436,
            177537629,
            177532986
        ]
    },
    "name": "A. Technical Support",
    "statement": "You work in the quality control department of technical support for a\r\nlarge company. Your job is to make sure all client issues have been\r\nresolved.Today you need to check a copy of a dialog between a client and\r\na technical support manager. According to the rules of work, each\r\nmessage of the client must be followed by messages, which are the answer\r\nof a support manager. However, sometimes clients ask questions so\r\nquickly that some of the manager\u2019s answers to old questions appear after\r\nthe client has asked some new questions.Due to the privacy policy, the\r\nfull text of messages is not available to you, only the order of\r\nmessages is visible, as well as the type of each message: a customer\r\nquestion or a response from the technical support manager. You have to\r\ndetermine, if this dialog may correspond to the rules of work described\r\nabove, or the rules are certainly breached.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define F first\n#define S second\n#define R cin>>\n#define ln cout<<'\\n'\n#define ll long long\n#define in(a) insert(a)\n#define pb(a) push_back(a)\n#define pd(a) printf(\"%.10f\\n\",a)\n#define mem(a) memset(a,0,sizeof(a))\n#define all(c) (c).begin(),(c).end()\n#define iter(c) __typeof((c).begin())\n#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)\n#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)\nll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}void pr(){ln;}\ntemplate<class A,class...B>void pr(const A &a,const B&...b){cout<<a<<(sizeof...(b)?\" \":\"\");pr(b...);}\ntemplate<class A>void PR(A a,ll n){rep(i,n)cout<<(i?\" \":\"\")<<a[i];ln;}\nconst ll MAX=1e9+7,MAXL=1LL<<61,dx[8]={-1,0,1,0,-1,-1,1,1},dy[8]={0,1,0,-1,-1,1,1,-1};\ntypedef pair<ll,ll> P;\n\nvoid Main() {\n  ll T;\n  R T;\n  while(T--) {\n    ll n;\n    string s;\n    cin >> n >> s;\n    ll x=0,f=1;\n    rrep(i,n) {\n      if(s[i]=='Q') x--;\n      else x++;\n      if(x<0) f=0;\n    }\n    if(f) pr(\"Yes\");\n    else pr(\"No\");\n  }\n}\n\nint main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Technical Support.json",
    "editorial_link": "https://codeforces.com//blog/entry/108336",
    "editorial": "Let\u00e2\u0080\u0099s process each character of the string from left to right and store\r\nthe number of unanswered questions . Initially this value equals to\r\nzero. Consider the -th character of the string. If it equals to \"\",\r\nincrease by one. If it equals to \"\", decrease by one. If has become\r\nnegative, it means that some of the questions was answered several\r\ntimes. In this case let\u00e2\u0080\u0099s assign zero to .If will be equal to zero after\r\nprocessing all string, then all questions were answered, and the answer\r\nis \"\". Otherwise, the answer is \"\".Time complexity: for each test case.\r\n"
}