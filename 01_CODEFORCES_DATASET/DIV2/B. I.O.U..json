{
    "link": "https://codeforces.com//contest/376/problem/B",
    "problemId": "4241",
    "problem_idx": "B",
    "shortId": "376B",
    "contest_number": "376",
    "problem_submissions": {
        "C": [
            5507703,
            5508378,
            5509653,
            5505870,
            5508901,
            5506789,
            5506579,
            5509150,
            5509916,
            5509799,
            5507345,
            5507270,
            5509544,
            5509634,
            5509897,
            5507776,
            5509511,
            5508122,
            5507836
        ],
        "B": [
            5506652,
            5504117,
            5503207,
            5503382,
            5503807,
            5504774,
            5504043,
            5504523,
            5504270,
            5505254,
            5504120,
            5504627,
            5505556,
            5504132,
            5504367,
            5505335,
            5505531,
            5506467
        ],
        "A": [
            5506294,
            5502978,
            5502598,
            5506281,
            5502656,
            5503030,
            5502618,
            5503447,
            5502632,
            5502661,
            5503380,
            5502677,
            5504082,
            5503223,
            5503562,
            5502845,
            5503131,
            5502839
        ],
        "D": [
            5505050,
            5520106,
            5520007,
            5519986,
            5519964,
            5506569,
            5511181,
            5506448,
            5507217,
            5507459,
            5508461,
            5507914,
            5507225,
            5505749,
            5506239,
            5511657,
            5508760,
            5509213,
            5508509,
            5507842,
            5508103,
            5509597,
            5508261,
            5509314,
            5509273
        ],
        "E": [
            5518045
        ]
    },
    "name": "B. I.O.U.",
    "statement": "Imagine that there is a group of three friends: A, B and . A owes B 20\r\nrubles and B owes C 20 rubles. The total sum of the debts is 40 rubles.\r\nYou can see that the debts are not organized in a very optimal manner.\r\nLet\u2019s rearrange them like that: assume that A owes C 20 rubles and B\r\ndoesn\u2019t owe anything to anybody. The debts still mean the same but the\r\ntotal sum of the debts now equals 20 rubles.This task is a\r\ngeneralisation of a described example. Imagine that your group of\r\nfriends has people and you know the debts between the people. Optimize\r\nthe given debts without changing their meaning. In other words, finally\r\nfor each friend the difference between the total money he should give\r\nand the total money he should take must be the same. Print the minimum\r\nsum of all debts in the optimal rearrangement of the debts. See the\r\nnotes to the test samples to better understand the problem.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <set>\n#include <string>\n#include <cstring>\n\nusing namespace std;\n\nint a[1000];\n\nint main() {\n    int n, m, x, y, c;\n    cin >> n >> m;\n    for (int i = 0; i < m; ++i) {\n        cin >> x >> y >> c;\n        a[x] += c;\n        a[y] -= c;\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; ++i) {\n        ans += abs(a[i]);\n    }\n    cout << ans / 2 << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. I.O.U..json",
    "editorial_link": "https://codeforces.com//blog/entry/10084",
    "editorial": "Let f[i][j] = how many money i owes j It can be\nproved we only need to loop n times. Loop n times do: Answer will be\nsum{f[i][j]} O(m+n): Let owe[i] = 0 for all i Suppose there is an agnecy\nto help people with debts. If you owe someone, you give money to the\nagency. If someone owes you, you get money from the agency. For each ai,\nbi, ci Ansewr will be sum{owe[i]|owe[i]>0}\n"
}