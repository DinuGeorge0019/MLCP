{
    "link": "https://codeforces.com//contest/1369/problem/F",
    "problemId": "651260",
    "problem_idx": "F",
    "shortId": "1369F",
    "contest_number": "1369",
    "problem_submissions": {
        "F": [
            84805615,
            84815422,
            84821788,
            84848209,
            84808586,
            84845078,
            84819664,
            84809525
        ],
        "E": [
            84783653,
            84794541,
            84777094,
            84792178,
            84796407,
            84799473,
            84847985,
            84794191,
            84802657,
            84799608,
            84843231,
            84798901,
            84802992,
            84803891,
            84799522,
            84803293,
            84803734,
            84801605
        ],
        "D": [
            84774757,
            84783341,
            84767385,
            84777566,
            84781335,
            84780403,
            84783178,
            84780507,
            84786495,
            84784013,
            84784219,
            84785925,
            84784946,
            84790889,
            84787139,
            84785887,
            84796956,
            84790843
        ],
        "C": [
            84764211,
            84776491,
            85764231,
            85764174,
            84784880,
            84769031,
            84773069,
            84769214,
            84772926,
            84766954,
            84773427,
            84767072,
            84773264,
            84775000,
            84772759,
            84772359,
            84919485,
            84776351,
            84771759,
            84772941,
            84776880
        ],
        "B": [
            84758680,
            84760470,
            84777367,
            84762433,
            84762003,
            84761770,
            84766923,
            84760439,
            84763340,
            84761080,
            84766453,
            84765969,
            84767231,
            84765006,
            84759974,
            84762031,
            84767553,
            84769489
        ],
        "A": [
            84750967,
            84766185,
            84750778,
            84752543,
            84752490,
            84752217,
            84767956,
            84750544,
            84755659,
            84751856,
            84756195,
            84753655,
            84751015,
            84749918,
            84749358,
            84749254,
            84751162,
            84756777
        ]
    },
    "name": "F. BareLee",
    "statement": "The game is a one versus one game. It has t rounds, each round has two\r\nintegers s_i and e_i (which are determined and are known before the game\r\nbegins, s_i and e_i may differ from round to round). The integer s_i is\r\nwritten on the board at the beginning of the corresponding round. The\r\nplayers will take turns. Each player will erase the number on the board\r\n(let’s say it was a) and will choose to write either 2\r\ncdot a or a + 1 instead. Whoever writes a number strictly greater than\r\ne_i loses that round and the other one wins that round.Now Lee wants to\r\nplay \"Critic\" against Ice Bear, for each round he has chosen the round’s\r\ns_i and e_i in advance. Lee will start the first round, the loser of\r\neach round will start the next round.The winner of the last round is the\r\nwinner of the game, and the loser of the last round is the loser of the\r\ngame.Determine if Lee can be the winner independent of Ice Bear’s moves\r\nor not. Also, determine if Lee can be the loser independent of Ice\r\nBear’s moves or not.\r\n",
    "solutions": [
        "// You may love a girl deeply\n// but you can't express in it more than 7-8 inches...\n#include <bits/stdc++.h>\n\n#define pb push_back\n#define F first\n#define S second\n#define all(ass) ass.begin(), ass.end()\nusing namespace std;\n\ntypedef long long ll;\ntypedef string str;\ntypedef pair<ll, ll> pll;\ntypedef pair<ll, pll> G;\n\nconst ll Mod = 1000000007;\nconst ll N = 2e5 + 85;\nconst ll Inf = 1e18;\nconst ll Log = 69;\n\nll dp0[N], dp1[N];\n\nll mex(ll a, ll b){\n\treturn min(a, b) == 0 ? 1 : 0;\n}\n\nG nx(G A){\n\tG res;\n\tres.F = (A.F + 1) / 2;\n\tif(A.F % 2 == 0){\n\t\tres.S.F = mex(A.S.S, A.S.S);\n\t\tres.S.S = mex(A.S.S, res.S.F);\n\t} else {\n\t\tres.S.S = mex(A.S.S, A.S.F);\n\t\tres.S.F = mex(A.S.S, res.S.S);\n\t}\n\treturn res;\n}\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tll T;\n\tcin >> T;\n\tll x, y;\n\tfor(int tc = 0; tc < T; tc ++){\n\t\tcin >> x >> y;\n\t\tG nw = {y + 1, {0, 0}};\n\t\twhile(x < nw.F) nw = nx(nw);\n\t\tdp0[tc] = (x%2 == 1 ? nw.S.F : nw.S.S);\n\t\tnw = {y + 1, {1, 1}};\n\t\twhile(x < nw.F) nw = nx(nw);\n\t\tdp1[tc] = (x%2 == 1 ? nw.S.F : nw.S.S);\n\t\t//cout << dp0[tc] << ' ' << dp1[tc] << '\\n';\n\t}\n\t//cout << '\\n';\n\tint U = 0;\n\tfor(int i = T - 1; i >= 0; i--){\n\t\tif(U == 1) U = dp0[i];\n\t\telse U = dp1[i];\n\t}\n\tcout << U << ' ';\n\tU = 1;\n\tfor(int i = T - 1; i >= 0; i--){\n\t\tif(U == 1) U = dp0[i];\n\t\telse U = dp1[i];\n\t}\n\tcout << U << '\\n';\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dp",
        "games"
    ],
    "dificulty": "2700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. BareLee.json",
    "editorial_link": "https://codeforces.com//blog/entry/79235",
    "editorial": ":Define () equal to if Lee can win the game when is written on the\r\nboard, and equal to otherwise, also define the same way. This leads to a\r\nsimple dp. Forget for now.Recall that a state of our dp is a if , and is\r\na otherwise.You can guess for all in range in , you donât have to store\r\nthem :If is odd then it will be , in other words if is odd, then if is\r\nodd too , otherwise . Prove it by induction, for itâs correct, assume\r\nthat for an integer () we have proved that the statement is correct for\r\nall where , now we want to prove the statement for :If is odd then both\r\nand are (as they are even), also if is even then is odd, is smaller than\r\nso itâs a losing state(induction assumption).From now we consider to be\r\neven. Also operation is replacing , the number on the board, with , and\r\noperation is the other move.For whoever uses operation will lose. So\r\nthey all have to use operation, so for if is odd, then , otherwise .\r\n(itâs obvious, it can be proved with a simple induction like the one in\r\nprevious part)For , Lee can do a operation in the first turn and he will\r\nwin because his opponent is starting a .For , is equal to . (why?)Now\r\nitâs time to calculate .Remember, whoever writes an integer greater than\r\nwill lose, so if then the first guy can immediately lose. So for is\r\nequal to . And for is equal to . (why?)\r\n",
    "hint": []
}