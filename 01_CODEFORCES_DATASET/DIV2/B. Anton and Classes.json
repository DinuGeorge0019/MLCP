{
    "link": "https://codeforces.com//contest/785/problem/B",
    "problemId": "98354",
    "problem_idx": "B",
    "shortId": "785B",
    "contest_number": "785",
    "problem_submissions": {
        "E": [
            25535913,
            25520701,
            25521367,
            25524258,
            25516770,
            25518668,
            25525495,
            25517389,
            25526683,
            25519510,
            25510315,
            25516733,
            25699539,
            25521276,
            25540389,
            25540369,
            25522122,
            25560171,
            25522262
        ],
        "D": [
            25514969,
            25516920,
            25517547,
            25523665,
            25527515,
            25519834,
            25527742,
            25518744,
            25524873,
            25653943,
            25515800,
            25517945,
            25515992,
            25518919,
            25517044,
            25522041
        ],
        "C": [
            25509527,
            25508471,
            25509773,
            25536741,
            25508063,
            25509604,
            25510288,
            25520657,
            25513296,
            25522523,
            25517091,
            25519490,
            25510828,
            25511108,
            25511948,
            25512218,
            25511493,
            25510575,
            25511287,
            25511649,
            25508687
        ],
        "B": [
            25505453,
            25505566,
            25506791,
            25505538,
            25504971,
            25506495,
            25505802,
            25505209,
            25507435,
            25512598,
            25507000,
            25506314,
            25505276,
            25506234,
            25507471,
            25504662,
            25505140,
            25505996,
            25505311,
            25505921
        ],
        "A": [
            25502237,
            25502308,
            25504008,
            25502246,
            25501830,
            25501715,
            25502679,
            25501866,
            25503109,
            25511198,
            25501880,
            25502005,
            25502194,
            25502627,
            25503151,
            25502062,
            25501702,
            25506739,
            25501679,
            25502337
        ]
    },
    "name": "B. Anton and Classes",
    "statement": "Anton likes to play chess. Also he likes to do programming. No wonder\r\nthat he decided to attend chess classes and programming classes.Anton\r\nhas variants when he will attend chess classes, -th variant is given by\r\na period of time . Also he has variants when he will attend programming\r\nclasses, -th variant is given by a period of time .Anton needs to choose\r\nof possible periods of time when he will attend chess classes and of\r\npossible periods of time when he will attend programming classes. He\r\nwants to have a rest between classes, so from all the possible pairs of\r\nthe periods he wants to choose the one where the distance between the\r\nperiods is maximal.The distance between periods and is the minimal\r\npossible distance between a point in the first period and a point in the\r\nsecond period, that is the minimal possible , where and . In particular,\r\nwhen the periods intersect, the distance between them is .Anton wants to\r\nknow how much time his rest between the classes will last in the best\r\ncase. Help Anton and find this number!\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n\nusing namespace std;\nconst int MX=200111;\nint n,m;\nint l[MX],r[MX],l2[MX],r2[MX];\nint mxl,mnr,mxl2,mnr2;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&l[i],&r[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d\",&l2[i],&r2[i]);\n\tmnr=mnr2=0x3f3f3f3f;\n\tfor(int i=1;i<=n;i++)mxl=max(mxl,l[i]),mnr=min(mnr,r[i]);\n\tfor(int i=1;i<=m;i++)mxl2=max(mxl2,l2[i]),mnr2=min(mnr2,r2[i]);\n\tint ans=0;\n\tans=max(ans,mxl2-mnr);\n\tans=max(ans,mxl-mnr2);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Anton and Classes.json",
    "editorial_link": "https://codeforces.com//blog/entry/50996",
    "editorial": "At first, let\u00e2\u0080\u0099s determine what classes Anton will attend first chess\r\nclasses or programming classes.Consider the case when Anton attends\r\nchess classes first and then attends programming classes. It\u00e2\u0080\u0099s not hard\r\nto observe that in this case it\u00e2\u0080\u0099s better to take the chess classes\r\nvariant in which the right range is as more to the left as possible.\r\nAlso, we take the programming classes variant in which the left range is\r\nas more to the right as possible. Because chess classes must be earlier\r\nthan programming classes, the distance between them can be calculated as\r\nthe distance between these two points (the right range of chess classes\r\nand the left range of programming classes). But if the right chess\r\nclasses point will be later than the left programming classes point, it\r\nmeans that our condition (chess is earlier than programming) is false or\r\nthe periods intersect. So in this case we take instead of the\r\ndistance.The second case is considered in the same way. It\u00e2\u0080\u0099s obvious\r\nthat the answer will be the maximum of these two cases.Time complexity\r\nis .\r\n"
}