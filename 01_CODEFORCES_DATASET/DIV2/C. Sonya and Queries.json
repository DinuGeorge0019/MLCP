{"link": "https://codeforces.com//contest/714/problem/C", "problemId": "71342", "problem_idx": "C", "shortId": "714C", "contest_number": "714", "problem_submissions": {"D": [20590320, 20583180, 20585303, 20591178, 20598481, 20603112, 20603107, 20591657, 20607398, 20594965], "E": [20583639, 20591013, 20594645, 20595036, 20594100, 20588546, 20589480, 20591788, 20590582, 20590355, 20591414, 20592977, 20591323, 20595335, 20593848, 20593101, 20594938, 20593282], "C": [20581597, 20576253, 20580207, 20579112, 20581726, 20579957, 20581444, 20580430, 20584899, 20580286, 20587146, 20580603, 20583085, 20584188, 20580648, 20582009, 20574786, 20581508, 20603553, 20603507, 20587376, 20575278], "B": [20575974, 20573949, 20572686, 20574205, 20575669, 20574973, 20577284, 20574274, 20576588, 20584157, 20576158, 20574917, 20576728, 20573716, 20575150, 20576582, 20572425, 20574534, 20578364, 20572180], "A": [20572717, 20571323, 20571430, 20572051, 20572511, 20571569, 20573550, 20571884, 20571837, 20577675, 20571701, 20571878, 20578985, 20571577, 20572052, 20571803, 20571360, 20572597, 20575524, 20571322]}, "name": "C. Sonya and Queries", "statement": "Today Sonya learned about long integers and invited all her friends to\r\nshare the fun. Sonya has an initially empty multiset with integers.\r\nFriends give her queries, each of one of the following type: add\r\nnon-negative integer to the multiset. Note, that she has a multiset,\r\nthus there may be many occurrences of the same integer. delete a single\r\noccurrence of non-negative integer from the multiset. It\u2019s guaranteed,\r\nthat there is at least one in the multiset. count the number of integers\r\nin the multiset (with repetitions) that match some pattern consisting of\r\nand . In the pattern, stands for the even digits, while stands for the\r\nodd. Integer matches the pattern , if the parity of the -th from the\r\nright digit in decimal notation matches the -th from the right digit of\r\nthe pattern. If the pattern is shorter than this integer, it\u2019s\r\nsupplemented with -s from the left. Similarly, if the integer is shorter\r\nthan the pattern its decimal notation is supplemented with the -s from\r\nthe left. For example, if the pattern is , than integers , , and match\r\nthe pattern, while integers , , and do not.\r\n", "solutions": ["#include <cstdio>\n#include <set>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAXD = 18;\n\nstruct Trie {\n    int numbers;\n    Trie *son[2];\n\n    Trie() {\n        numbers = 0;\n        son[0] = son[1] = NULL;\n    }\n};\n\nvoid Update(Trie *node, long long value, int add, int level) {\n    if (level == MAXD + 1) {\n        node->numbers += add;\n        return;\n    }\n    if (node->son[value % 2] == NULL)\n        node->son[value % 2] = new Trie();\n    Update(node->son[value % 2], value / 10, add, level + 1);\n}\n\nchar s[1 + MAXD];\nint length;\n\nint Query(Trie *node, int level) {\n    if (level == MAXD + 1)\n        return node->numbers;\n    if (node->son[s[level]] == NULL)\n        return 0;\n    return Query(node->son[s[level]], level + 1);\n}\n\nint main() {\n    //freopen(\"tema.in\", \"r\", stdin);\n    //freopen(\"tema.out\", \"w\", stdout);\n    int n;\n    Trie *root = new Trie();\n    scanf(\"%d\\n\", &n);\n    for (int i = 1; i <= n; i++) {\n        char type;\n        scanf(\"%c\", &type);\n        if (type == '+' || type == '-') {\n            long long x;\n            scanf(\"%I64d\\n\", &x);\n            int add = 1;\n            if (type == '-')\n                add = -1;\n            Update(root, x, add, 1);\n        }\n        else {\n            scanf(\"%s\\n\", s + 1);\n            length = strlen(s + 1);\n            for (int j = 1; j <= length; j++)\n                s[j] -= '0';\n            for (int j = length + 1; j <= MAXD; j++)\n                s[j] = 0;\n            for (int j = 1; j <= length / 2; j++)\n                swap(s[j], s[length - j + 1]);\n            printf(\"%d\\n\", Query(root, 1));\n        }\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "implementation"], "dificulty": "1400", "interactive": false}