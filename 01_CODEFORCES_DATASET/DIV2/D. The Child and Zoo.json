{
    "link": "https://codeforces.com//contest/437/problem/D",
    "problemId": "9961",
    "problem_idx": "D",
    "shortId": "437D",
    "contest_number": "437",
    "problem_submissions": {
        "D": [
            6768714,
            6769219,
            6770597,
            6770872,
            6770582,
            6781618,
            6771775,
            6770670,
            6770715,
            6769181,
            6771878,
            6771390,
            6772290,
            6772185,
            6772074,
            6773126,
            6775142,
            6772502,
            6772965
        ],
        "C": [
            6767394,
            6768027,
            6768255,
            6768551,
            6769557,
            6781619,
            6767953,
            6767610,
            6769516,
            6767838,
            6769685,
            6768603,
            6768216,
            6769376,
            6770139,
            6769862,
            6768685,
            6770746
        ],
        "B": [
            6766890,
            6767081,
            6767380,
            6767693,
            6768412,
            6781613,
            6767171,
            6768398,
            6767388,
            6767578,
            6769683,
            6769218,
            6768117,
            6768608,
            6767962,
            6770162,
            6769331
        ],
        "A": [
            6765797,
            6766130,
            6766338,
            6766075,
            6766175,
            6781609,
            6766174,
            6768415,
            6766417,
            6774089,
            6765946,
            6766895,
            6767187,
            6766894,
            6767293,
            6771080,
            6766764,
            6766124
        ],
        "E": [
            6781616
        ]
    },
    "name": "D. The Child and Zoo",
    "statement": "Of course our child likes walking in a zoo. The zoo has areas, that are\r\nnumbered from to . The -th area contains animals in it. Also there are\r\nroads in the zoo, and each road connects two distinct areas. Naturally\r\nthe zoo is connected, so you can reach any area of the zoo from any\r\nother area using the roads.Our child is very smart. Imagine the child\r\nwant to go from area to area . Firstly he considers all the simple\r\nroutes from to . For each route the child writes down the number, that\r\nis equal to the minimum number of animals among the route areas. Letâ€™s\r\ndenote the largest of the written numbers as . Finally, the child\r\nchooses one of the routes for which he writes down the value .After the\r\nchild has visited the zoo, he thinks about the question: what is the\r\naverage value of for all pairs ? Can you answer his question?\r\n",
    "solutions": [
        "#include <cstdio>\n#include <string>\n#include <cstdlib>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <vector>\n#define rep(i, a, b) for (int i = a; i < b; ++i)\n#define dep(i, a, b) for (int i = a; i > b; --i)\n#define N 300005\nusing namespace std;\n\ntypedef long long i64;\n\nint rank[N], eva[N], val[N], u[N], v[N], f[N], sz[N];\nint n, m;\ndouble ans, base;\n\nbool rk_cmp(const int &a, const int &b)\n{\n\treturn eva[a] > eva[b];\n}\nint father(int u)\n{\n\tif (f[u] == u)  return u;\n\tf[u] = father(f[u]);\n\treturn f[u];\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tbase = (double) n*(n-1);\n\trep(i, 0, n) scanf(\"%d\", &val[i+1]);\n\trep(i, 0, m)\n\t{\n\t\tscanf(\"%d %d\", &u[i], &v[i]);\n\t\teva[i] = min(val[u[i]], val[v[i]]);\n\t\trank[i] = i;\n\t}\n\trep(i, 0, n)\n\t{\n\t\tf[i+1] = i+1;\n\t\tsz[i+1] = 1;\n\t}\n\tsort(rank, rank+m, rk_cmp);\n\trep(i, 0, m)\n\t{\n\t\tint now = rank[i], nu = father(u[now]), nv = father(v[now]);\n\t\tif (nu != nv)\n\t\t{\n\t\t\ti64 add = (i64) sz[nu] * sz[nv];\n\t\t\tans += add / base * eva[now];\n\t\t\tsz[nu] += sz[nv];\n\t\t\tf[nv] = nu;\n\t\t}\n\t}\n\tprintf(\"%.7lf\\n\", ans*2);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dsu",
        "sortings"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. The Child and Zoo.json",
    "editorial_link": "https://codeforces.com//blog/entry/12513",
    "editorial": "First, there is nothing in the graph. We sort all the areas of the\r\noriginal graph by their animal numbers in decreasing order, and then add\r\nthem one by one. When we add area , we add all the roads , where is some\r\narea that has been added. After doing so, we have merged some connected\r\ncomponents. If and are two areas in different connected components we\r\nhave merged just then, must equals the , because they are not connected\r\nuntil we add node . So we use Union-Find Set to do such procedure, and\r\nmaintain the size of each connected component, then we can calculate the\r\nanswer easily.\r\n",
    "hint": []
}