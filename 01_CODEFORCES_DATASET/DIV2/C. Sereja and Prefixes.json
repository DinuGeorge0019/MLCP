{"link": "https://codeforces.com//contest/381/problem/C", "problemId": "5526", "problem_idx": "C", "shortId": "381C", "contest_number": "381", "problem_submissions": {"E": [5672312, 5673890, 5672640, 5674012, 5673942, 5674064, 5674158, 5672887, 5675816, 6481132, 5673153, 5673647, 5675440, 5675508, 5675052, 5675464, 5674370, 5675251, 5675100], "C": [5670620, 5670357, 5670156, 5670230, 5670852, 5670514, 5671644, 5674896, 5670687, 5671510, 5675154, 5675589, 5672130, 5672003, 5672276, 5673101, 5671653, 5677587, 5672482, 5672754], "B": [5667383, 5667530, 5668160, 5667526, 5667221, 5667323, 5682800, 5668514, 5668603, 5667280, 5667809, 5667640, 5668168, 5667958, 5667727, 5669465, 5669171, 5672704, 5667775, 5671101], "A": [5666172, 5666328, 5667263, 5666342, 5666147, 5666449, 5680004, 5666226, 5667506, 5666221, 5666521, 5666215, 5667030, 5667212, 5666641, 5666780, 5667112, 5671987, 5666602, 5667129], "D": [5677146, 5673435, 6765447]}, "name": "C. Sereja and Prefixes", "statement": "Sereja loves number sequences very much. That\u2019s why he decided to make\r\nhimself a new one following a certain algorithm.Sereja takes a blank\r\npiece of paper. Then he starts writing out the sequence in stages. Each\r\ntime he either adds a new number to the end of the sequence or takes\r\nfirst elements of the current sequence and adds them times to the end.\r\nMore formally, if we represent the current sequence as , then after we\r\napply the described operation, the sequence transforms into (the block\r\nin the square brackets must be repeated times). A day has passed and\r\nSereja has completed the sequence. He wonders what are the values of\r\nsome of its elements. Help Sereja.\r\n", "solutions": ["#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector> \n#include<cstring>\n#include<string>\n#define mp make_pair\n#define scn second\n#define frs first\n#define pb push_back\n#define NAME \"a\"\n#define fop freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout); \nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef pair<int, int> pi;\nvoid dout() { cerr << endl; }\ntemplate <typename Head, typename... Tail>\nvoid dout(Head H, Tail... T) {\n  cerr << H << ' ';\n  dout(T...);\n}\n\nint n, m;\npi z[500000];\nll len[500000];\n\nll get(ll a) {\n\tint l = 1, r = n + 1;\n\twhile (l < r - 1) {\n\t\tint m = (r + l) / 2;\n\t\tif (len[m] > a)\n\t\t  \tr = m;\n\t\telse\n\t\t   \tl = m;\t\t\t\n\t}\n\tif (len[l] != a)\n\t\t++l;\n\tif (z[l].scn == -1) \n\t\treturn z[l].frs;\n\treturn get((a - len[l - 1]) % z[l].frs == 0 ? z[l].frs : (a - len[l - 1]) % z[l].frs);\n}\n\nint main(){\n\t#ifdef LocalHost\n\t\tfop;\n\t#endif\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint t, a, b;\n\t\tscanf(\"%d\", &t); \n\t\tif (t == 1) {\n\t\t\tscanf(\"%d\", &a);\n\t\t\tz[i].frs = a, z[i].scn = -1;\n\t\t}\n\t\telse  {\n\t\t\tscanf(\"%d%d\", &a, &b);\n\t\t\tz[i].frs = a, z[i].scn = b;\n\t\t}\n\t\tif (t == 1)\n\t\t\tlen[i] = len[i - 1] + 1;\n\t\telse\n\t\t\tlen[i] = len[i - 1] + a * b; \t\n\t}\n\tscanf(\"%d\", &m);\n\tfor (int i = 0; i < m; ++i) {\n\t    ll a;\t\t\n\t\tscanf(\"%I64d\", &a);\n\t\tprintf(\"%I64d \", get(a));\n\t}\n\t\t\n\n\treturn 0;\n}\n\n"], "input": "", "output": "", "tags": ["binary search", "implementation", "two pointers"], "dificulty": "1600", "interactive": false}