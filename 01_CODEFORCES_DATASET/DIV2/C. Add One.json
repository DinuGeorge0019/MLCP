{
    "link": "https://codeforces.com//contest/1513/problem/C",
    "problemId": "954480",
    "problem_idx": "C",
    "shortId": "1513C",
    "contest_number": "1513",
    "problem_submissions": {
        "F": [
            112704242,
            112708449,
            112692430,
            112693367,
            112715319,
            112703491,
            112694811,
            127489679,
            112714894,
            112706130
        ],
        "E": [
            112694829,
            112692532,
            112741611,
            112740521,
            112688817,
            112693970,
            112694924,
            112695544,
            112697383,
            112699670,
            112696818,
            112699923,
            112700793
        ],
        "D": [
            112684276,
            112682550,
            112679745,
            112679949,
            112677500,
            112683697,
            112682474,
            112682520,
            113011471,
            113011359,
            113011120,
            113011016,
            113009370,
            112680944,
            112706307,
            112684078,
            112683480,
            112687888,
            112686211,
            112688484,
            112694241
        ],
        "C": [
            112675074,
            112673956,
            112673377,
            112672093,
            112671463,
            112675182,
            112671664,
            112676030,
            112671692,
            112674449,
            112673953,
            112672990,
            112673437,
            112678260,
            112672998,
            112674969
        ],
        "B": [
            112671476,
            112670228,
            112670172,
            112670205,
            112668144,
            112670061,
            112665513,
            112670183,
            112667846,
            112669295,
            112667797,
            112667641,
            112669249,
            112668199,
            112668800,
            112667109
        ],
        "A": [
            112663904,
            112665049,
            112664695,
            112668785,
            112662814,
            112664430,
            112662730,
            112664013,
            112662970,
            112664151,
            112662873,
            112663063,
            112663560,
            112664683,
            112663477,
            112662816
        ]
    },
    "name": "C. Add One",
    "statement": "You are given an integer n. You have to apply m operations to it.In a\r\nsingle operation, you replace every digit d of the number with the\r\ndecimal representation of integer d + 1. For example, 1912 becomes 21023\r\nafter applying the operation once.You have to find the length of n after\r\napplying m operations. Since the answer can be very large, print it\r\nmodulo 10^9+7.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <set>\nusing namespace std;\nconst int N = 200010;\nconst int M = 200010;\nconst int mod = 1e9 + 7;\n\nint a[M][10];\nvoid prec() {\n    for (int i = 0; i < 9; ++i) a[1][i] = 1;\n    a[1][9] = 2;\n    for (int i = 2; i < M; ++i) {\n        for (int j = 0; j < 9; ++j) a[i][j] = a[i - 1][j + 1];\n        a[i][9] = (a[i - 1][1] + a[i - 1][0]) % mod;\n    }\n}\n\nvoid solve() {\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    string s = to_string(n);\n    int ans = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        ans = (ans + a[m][s[i] - '0']) % mod;\n    }\n    printf(\"%d\\n\", ans);\n}\n\nint main() {\n#ifdef FLOWMASTER\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    prec();\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; ++i) solve();\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "matrices"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Add One.json",
    "editorial_link": "https://codeforces.com//blog/entry/89550",
    "editorial": "We can solve this problem using 1D dp.Let be defined as the length of\r\nthe string after applying operation -times to the number . Then, , in ,\r\nif (The final number after applying operations to the number is .) ,\r\nOtherwise.(length would be the sum of operations and operations.) We can\r\nprecalculate the above table until ( ).Now for each test case, the final\r\nanswer is:, where is (in form of string).Time Complexity O(+||), where .\r\n",
    "hint": []
}