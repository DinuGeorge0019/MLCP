{
    "link": "https://codeforces.com//contest/743/problem/A",
    "problemId": "84651",
    "problem_idx": "A",
    "shortId": "743A",
    "contest_number": "743",
    "problem_submissions": {
        "C": [
            22970568,
            22954819,
            22955931,
            22959540,
            22960803,
            22954630,
            22967024,
            22964712,
            22959281,
            22956710,
            22956672,
            22954587,
            22959020,
            22956501,
            22953944,
            22955848,
            22960168,
            22960967
        ],
        "E": [
            22965880,
            22967434,
            22967306,
            22968969,
            22967268,
            22973387,
            22967640,
            22968707,
            22974150,
            22967996,
            22970034,
            22971822,
            22987515,
            22975131,
            41741833,
            22975215,
            22975586,
            22974342
        ],
        "B": [
            22955029,
            22952524,
            22952071,
            22953395,
            22954814,
            22952559,
            22951675,
            22954634,
            22953589,
            22953782,
            22953874,
            22953034,
            22954309,
            22952189,
            22955346,
            22951377,
            22952875,
            22956475,
            22953744
        ],
        "D": [
            22953950,
            22961837,
            22961932,
            22962256,
            22961186,
            22961360,
            22956645,
            22961156,
            22963404,
            22962979,
            22963931,
            22963003,
            22964853,
            22959856,
            22961283,
            22968732,
            22964847,
            22966379,
            22964407
        ],
        "A": [
            22950683,
            22950781,
            22950661,
            22966387,
            22969695,
            22950835,
            22950658,
            22952400,
            22951347,
            22956844,
            22951276,
            22950972,
            22951766,
            22950741,
            22951008,
            22953378,
            22951284
        ]
    },
    "name": "A. Vladik and flights",
    "statement": "Vladik is a competitive programmer. This year he is going to win the\r\nInternational Olympiad in Informatics. But it is not as easy as it\r\nsounds: the question Vladik face now is to find the cheapest way to get\r\nto the olympiad.Vladik knows airports. All the airports are located on a\r\nstraight line. Each airport has unique id from to , Vladik’s house is\r\nsituated next to the airport with id , and the place of the olympiad is\r\nsituated next to the airport with id . It is possible that Vladik’s\r\nhouse and the place of the olympiad are located near the same airport.\r\nTo get to the olympiad, Vladik can fly between any pair of airports any\r\nnumber of times, but he has to start his route at the airport and finish\r\nit at the airport .Each airport belongs to one of two companies. The\r\ncost of flight from the airport to the airport is zero if both airports\r\nbelong to the same company, and if they belong to different\r\ncompanies.Print the minimum cost Vladik has to pay to get to the\r\nolympiad.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n,a,b;\nstring s;\n\nint main() {\n    cin>>n>>a>>b;\n    cin>>s;\n    if(s[a-1]==s[b-1]) {\n        cout<<0<<endl;\n    }\n    else {\n        cout<<1<<endl;\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Vladik and flights.json",
    "editorial_link": "https://codeforces.com//blog/entry/49049",
    "editorial": "The answer is , if airports with numbers and belong to one company.\r\nOtherwise there are two adjacent airports, that belong to different\r\ncompanies. We can get to one of them for free, then pay to fly from one\r\nto another and then fly to airport number for free. So, in this case the\r\nanswer is . Complexity .\r\n",
    "hint": []
}