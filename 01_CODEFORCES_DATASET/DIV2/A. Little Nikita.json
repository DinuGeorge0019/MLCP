{
    "link": "https://codeforces.com//contest/1977/problem/A",
    "problemId": "2665941",
    "problem_idx": "A",
    "shortId": "1977A",
    "contest_number": "1977",
    "problem_submissions": {
        "E": [
            262753822,
            262767302,
            262773066,
            262777674,
            262770623,
            263031771,
            262879241,
            264157721,
            262777678,
            262818461
        ],
        "D": [
            262746020,
            262752021,
            262759316,
            262764901,
            262755194,
            262759469,
            262754791,
            262756257,
            262756747,
            262758299,
            262756876,
            262759489,
            262764620,
            263176565,
            262763419,
            262766760,
            262758943,
            262862798,
            262762983
        ],
        "C": [
            262738877,
            262741499,
            262749383,
            262755959,
            262751324,
            262744765,
            262746576,
            262745225,
            262746869,
            262742949,
            262746742,
            262750727,
            262747283,
            262749635,
            262746257,
            262754822,
            262746319,
            262748048
        ],
        "B": [
            262726958,
            262730863,
            262733935,
            262745603,
            262761343,
            262730294,
            262743622,
            262733897,
            262738963,
            262733871,
            262744047,
            262734098,
            262734002,
            262729823,
            262734056,
            262744847,
            262730762,
            262734650
        ],
        "A": [
            262718457,
            262717434,
            262719669,
            262733443,
            262738974,
            262717708,
            262717306,
            262718538,
            262718880,
            262733522,
            262717623,
            262718056,
            262717973,
            262720675,
            262720426,
            262717331,
            262720010,
            262725818
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129858",
    "editorial": "Note that one action with the cube changes the parity of the number of cubes in the tower. Therefore, if the parities of n\n and m\n do not match, it is impossible to build the tower. Also, if n<m\n, the tower cannot be built either. In all other cases, it is possible to build a tower of height m\n in m\n operations, and then add and remove a cube until the operations are exhausted.",
    "name": "A. Little Nikita",
    "statement": "The little boy Nikita was given some cubes as a present. He decided to\r\nbuild a tower out of them.Initially, the tower doesn’t have any cubes.\r\nIn one move, Nikita either puts exactly 1 cube on top of the tower or\r\nremoves exactly 1 cube from the top of the tower. Is it possible that\r\nafter n moves, the resulting tower has exactly m cubes?\r\n",
    "solutions": [
        "// Problem: A. Little Nikita// Contest: Codeforces - Codeforces Round 948 (Div. 2)// URL: https://mirror.codeforces.com/contest/1977/problem/A// Memory Limit: 256 MB// Time Limit: 1000 ms// // Powered by CP Editor (https://cpeditor.org) // Author: EnucAI#include <bits/stdc++.h> #ifdef LOCAL#include \"debug.h\"#else#define D(...) ((void)0)#endif using ll = long long;using ull = unsigned long long;using ld = long double;using vi = std::vector<int>;using pii = std::pair<int, int>; constexpr int inf = std::numeric_limits<int>::max() / 2;constexpr ll infll = std::numeric_limits<ll>::max() / 2;constexpr ld eps = 1e-8l; #define all(x) (x).begin(), (x).end()#define sz(x) ((int)((x).size()))#define rep(i, j, k) for (int i = (j); i <= (k); i++)#define per(i, j, k) for (int i = (j); i >= (k); i--)#define fi first#define se second#define mp std::make_pair#define pb push_back#define ppb pop_back#define eb emplace_back template <class X, class Y> void chkmax(X &x, const Y &y) { if (x < y) x = y; }template <class X, class Y> void chkmin(X &x, const Y &y) { if (x > y) x = y; } int n, m; void work() {  std::cin >> n >> m;  if (n < m) {    std::cout << \"No\\n\";    return;  }  n -= m;  std::cout << (n & 1 ? \"No\\n\" : \"Yes\\n\");} int main() {  std::cin.tie(nullptr)->sync_with_stdio(false);  int t;  std::cin >> t;  while (t--) work();}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Little Nikita.json",
    "hint": []
}