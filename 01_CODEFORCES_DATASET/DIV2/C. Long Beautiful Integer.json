{
    "link": "https://codeforces.com//contest/1269/problem/C",
    "problemId": "499889",
    "problem_idx": "C",
    "shortId": "1269C",
    "contest_number": "1269",
    "problem_submissions": {
        "C": [
            67352706,
            67342506,
            67340660,
            67342809,
            67344956,
            67331477,
            67339107,
            67340486,
            67338149,
            67340091,
            67338156,
            67347782,
            67341549,
            67341600,
            67342294,
            67342344,
            67342829,
            67330241
        ],
        "E": [
            67349858,
            67364589,
            67368127,
            67360428,
            67362487,
            67407644,
            67361816,
            68037838
        ],
        "D": [
            67339478,
            67353948,
            67348917,
            67364550,
            67364311,
            67334215,
            67340431,
            67341741,
            67338198,
            67342873,
            67348426,
            67348708,
            67343994,
            67344243,
            67344039,
            67350135,
            67345192,
            67346296,
            67343602
        ],
        "B": [
            67337312,
            67377870,
            67335347,
            67345749,
            67336939,
            67340567,
            67339027,
            67334414,
            67335423,
            67344354,
            67335379,
            67396814,
            67341834,
            67332604,
            67337610,
            67338071,
            67337253,
            67332987,
            67335282,
            67336511,
            67345383
        ],
        "A": [
            67331771,
            67329729,
            67330308,
            67335502,
            67337021,
            67336156,
            67329958,
            67329769,
            67338898,
            67330168,
            67396807,
            67337525,
            67329686,
            67329755,
            67331194,
            67331352,
            67329912,
            67329806,
            67330184,
            67340611
        ]
    },
    "name": "C. Long Beautiful Integer",
    "statement": "You are given an integer x of n digits a_1, a_2,\r\nldots, a_n, which make up its decimal notation in order from left to\r\nright.Also, you are given a positive integer k < n.Let’s call integer\r\nb_1, b_2,\r\nldots, b_m if b_i = b_{i+k} for each i, such that 1\r\nleq i\r\nleq m - k.You need to find the smallest integer y, such that y\r\ngeq x.\r\n",
    "solutions": [
        "//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx\")\n\n#include<bits/stdc++.h>\n\n#define pb push_back\n#define F first\n#define S second\n#define ll long long\n#define ld long double\n#define null nullptr\n#define _ <<' '<<\n#define endl '\\n'\n\nusing namespace std;\n\nmt19937 gen(chrono::high_resolution_clock::now().time_since_epoch().count());\n\nconst int N = 2e5 + 7;\nconst int M = 1e9 + 7;\n//const int M = 998244353;\nconst int FFTM = 998244353;\n\nint n, k;\nstring s;\nstring t;\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n#ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif // LOCAL\n    cin >> n >> k;\n    cin >> s;\n    t = s;\n    for(int i = 0; i < k; ++i)\n        t[i] = s[i];\n    for(int i = k; i < n; ++i)\n        t[i] = t[i - k];\n    cerr << t << endl;\n    if (t >= s)\n    {\n        cout << n << '\\n' << t;\n        return 0;\n    }\n    for(int i = k - 1; i >= 0; --i)\n    {\n        if (s[i] != '9')\n        {\n            for(int j = i; j < n; j += k)\n                t[j]++;\n            break;\n        }\n        else\n        {\n            for(int j = i; j < n; j += k)\n                t[j] = '0';\n        }\n    }\n    cout << n << '\\n' << t;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Long Beautiful Integer.json",
    "editorial_link": "https://codeforces.com//blog/entry/72358",
    "editorial": "At first, letâs set for all .If it is at least the initial , then you\r\ncan print it as the answer.Otherwise, Letâs find the last non-nine digit\r\namong the first , increase it by one, and change all âs on the segment\r\nfrom it to -th character to .After that, again set for all .Then, you\r\ncan print it as the answer.\r\n",
    "hint": []
}