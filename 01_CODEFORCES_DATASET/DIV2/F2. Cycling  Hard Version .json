{"link": "https://codeforces.com//contest/2107/problem/F2", "problemId": "3369879", "problem_idx": "F2", "shortId": "2107F2", "contest_number": "2107", "problem_submissions": {"F2": [318524340, 318484817, 318509938, 318511203, 318525439, 318523594, 318519776], "F1": [318519651, 318487840, 318492813, 318505063, 318504824, 318527743, 318517545, 318515290, 318492245, 318507170, 318502926, 318494892, 318509274, 318493554, 318492460, 318538698, 318513104], "E": [318507496, 318520903, 318524820, 319045355, 318517429, 318526986, 318522135, 318520283], "D": [318493293, 318536403, 318487166, 318499916, 318508438, 318508583, 318505898, 318493577, 318513154, 318499523, 318510734, 318518593, 318502474, 318501316, 318505642], "C": [318476342, 318476070, 318476829, 318476779, 318475602, 318489984, 318490878, 318480285, 318468986, 318484993, 318479001, 318481099, 318477842, 318483418, 318469245, 318475881, 318486336], "B": [318459029, 318461790, 318460834, 318460140, 318461949, 318460838, 318465148, 318465596, 318462205, 318463062, 318467674, 318475025, 318483564, 318464926, 318482093, 318463365, 318465794], "A": [318456403, 318456545, 318456374, 318456379, 318456465, 318456630, 318465029, 318458451, 318456594, 318457358, 318459958, 318457429, 318485822, 318458433, 318472714, 318456756, 318458361]}, "editorial_link": "https://codeforces.com//blog/entry/142642", "editorial": "", "name": "F2. Cycling  Hard Version ", "statement": "Leo works as a programmer in the city center, and his lover teaches at a\r\nhigh school in the suburbs. Every weekend, Leo would ride his bike to\r\nthe suburbs to spend a nice weekend with his lover.There are n cyclists\r\nriding in front of Leo on this road right now. They are numbered 1, 2,\r\nldots, n from front to back. Initially, Leo is behind the n-th cyclist.\r\nThe i-th cyclist has an agility value a_i. Leo wants to get ahead of the\r\n1-st cyclist. Leo can take the following actions as many times as he\r\nwants: Assuming that the first person in front of Leo is cyclist i, he\r\ncan go in front of cyclist i for a cost of a_i. This puts him behind\r\ncyclist i - 1. Using his super powers, swap a_i and a_j (1\r\nle i < j\r\nle n) for a cost of (j - i). Leo wants to know the minimum cost to get\r\nin front of the 1-st cyclist. In addition, he wants to know the answer\r\nfor each 1\r\nle i\r\nle n, [a_1, a_2,\r\nldots, a_i] as the original array. The problems of different i are\r\nindependent. To be more specific, in the i-th problem, Leo starts behind\r\nthe i-th cyclist instead of the n-th cyclist, and cyclists numbered i +\r\n1, i + 2,\r\nldots, n are not present.\r\n", "solutions": [], "input": "", "output": "", "tags": ["binary search", "brute force", "data structures", "dp", "greedy"], "dificulty": "2800", "interactive": false, "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F2. Cycling  Hard Version .json"}