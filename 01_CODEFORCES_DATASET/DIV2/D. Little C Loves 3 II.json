{"link": "https://codeforces.com//contest/1047/problem/D", "problemId": "222959", "problem_idx": "D", "shortId": "1047D", "contest_number": "1047", "problem_submissions": {"D": [43201603, 43201617, 43202738, 43203828, 43203427, 43204703, 43208661, 43206772, 43208166, 43205179, 43202781, 43220735, 43207776, 43211077, 43206070, 43205996, 43206464, 43203723, 43207824, 43206532, 43209432], "C": [43195048, 43191767, 43192975, 43193131, 43192365, 43195667, 43197192, 43195960, 43193920, 43203524, 43195590, 43192480, 43199443, 43192989, 43196895, 43199785, 43195017, 43192335, 43197639, 43197103], "A": [43187939, 43184704, 43184082, 43184667, 43187293, 43185111, 43186057, 43184927, 43184414, 43184169, 43185008, 43184035, 43190556, 43184451, 43184601, 43190394, 43184377, 43193141, 43184356, 43187758], "B": [43185520, 43186550, 43185744, 43186184, 43188556, 43187757, 43188284, 43187036, 43186583, 43186581, 43187167, 43186126, 43191913, 43186290, 43187376, 43191618, 43186405, 43194207, 43186040, 43191875]}, "name": "D. Little C Loves 3 II", "statement": "Little C loves number very much. He loves all things about it.Now he is\r\nplaying a game on a chessboard of size n\r\ntimes m. The cell in the x-th row and in the y-th column is called\r\n(x,y). Initially, The chessboard is empty. Each time, he places two\r\nchessmen on two different empty cells, the Manhattan distance between\r\nwhich is exactly 3. The Manhattan distance between two cells (x_i,y_i)\r\nand (x_j,y_j) is defined as |x_i-x_j|+|y_i-y_j|.He want to place as many\r\nchessmen as possible on the chessboard. Please help him find the maximum\r\nnumber of chessmen he can place.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll n,m,ans;void print(ll x){printf(\"%lld\\n\",x);exit(0);}\nint main()\n{\n\tcin>>n>>m;\n\tif(n>m) swap(n,m);if(n==1) print((m-(m%6))+max(0ll,(m%6-3)*2));\n\tif(n%2==0&&m%2==0){if(m==2&&n==2) print(0);else print(n*m);}\n\tif((n+m)&1)\n\t{\n\t\tif(m&1) swap(n,m);\n\t\tif(n==3){if(m==2) print(4);else print(n*m);}\n\t\tif(n==7){if(m==2) print(12);else print(n*m);}\n\t\tprint(n*m);\n\t}\n\tprint(n*m-1);\n}"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "flows", "graph matchings"], "dificulty": "2200", "interactive": false}