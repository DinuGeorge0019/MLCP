{
    "link": "https://codeforces.com//contest/439/problem/A",
    "problemId": "10094",
    "problem_idx": "A",
    "shortId": "439A",
    "contest_number": "439",
    "problem_submissions": {
        "D": [
            6805901,
            6804419,
            6803200,
            6805988,
            6804881,
            6805810,
            6805384,
            6806017,
            6807497,
            6805650,
            6808014,
            6804059,
            6806158,
            6805574,
            6805399,
            6806326,
            6804741,
            6806396,
            6808041
        ],
        "E": [
            6803795,
            6806475,
            6805122,
            6808945,
            6805874,
            6808804,
            6804029,
            6812447,
            6809672,
            6805934,
            7363028
        ],
        "C": [
            6800932,
            6800886,
            6803463,
            6802772,
            6807376,
            6802931,
            6803473,
            6802763,
            6804861,
            6803810,
            6804665,
            6808359,
            6803941,
            6812392,
            6803612,
            6803230
        ],
        "B": [
            6798509,
            6800129,
            6798401,
            6799435,
            6798872,
            6811724,
            6799339,
            6807876,
            6800630,
            6798132,
            6800776,
            6807661,
            6800880,
            6806303,
            6802646,
            6801021,
            6799365,
            6798816,
            6798888
        ],
        "A": [
            6798027,
            6801375,
            6797956,
            6798638,
            6798087,
            6798192,
            6808386,
            6799422,
            6799363,
            6798034,
            6798516,
            6806347,
            6798287,
            6808882,
            6801124,
            6798895,
            6798307,
            6798019,
            6798088
        ]
    },
    "name": "A. Devu, the Singer and Churu, the Joker",
    "statement": "Devu is a renowned classical singer. He is invited to many big\r\nfunctions/festivals. Recently he was invited to \"All World Classical\r\nSinging Festival\". Other than Devu, comedian Churu was also invited.Devu\r\nhas provided organizers a list of the songs and required time for\r\nsinging them. He will sing songs, song will take minutes exactly. The\r\nComedian, Churu will crack jokes. All his jokes are of 5 minutes\r\nexactly.People have mainly come to listen Devu. But you know that he\r\nneeds rest of 10 minutes after each song. On the other hand, Churu being\r\na very active person, doesn\u2019t need any rest.You as one of the organizers\r\nshould make an optimal s hedule for the event. For some reasons you must\r\nfollow the conditions: The duration of the event must be no more than\r\nminutes; Devu must complete all his songs; With satisfying the two\r\nprevious conditions the number of jokes cracked by Churu should be as\r\nmany as possible. If it is not possible to find a way to conduct all the\r\nsongs of the Devu, output -1. Otherwise find out maximum number of jokes\r\nthat Churu can crack in the grand event.\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<set>\n#include<stack>\n#define ROF(a,b,c) for(int a=b;a>=c;--a)\n#include<vector>\n#include<algorithm>\n#define FOR(a,b,c) for(int a=b;a<=c;++a)\n#include<cstring>\n#include<bitset>\n#include<cmath>\n#include<iomanip>\n#include<queue>\n#define debug cerr<<\"OK\";\n#define f cin\n#define g cout\n#define mp make_pair\n#define pb push_back\n#define x first\n#define y second\n#define ll long long\n#define mod 1000000007\n#define inf (1LL<<60)\n#define N 300\n#define DIM 1000100\n#define pct pair<long double,long double>\nusing namespace std;\n/*ifstream f(\"a.in\");\nofstream g(\"a.out\");*/\n//int dx[]={0,0,0,1,-1};\n//int dy[]={0,1,-1,0,0};\nint n,t,nrj,ti,i;\nint main ()\n{\n    #ifndef ONLINE_JUDGE\n    freopen(\"a.in\",\"r\",stdin);\n    freopen(\"a.out\",\"w\",stdout);\n    #endif\n    \n    f>>n>>t;\n    FOR(i,1,n)\n    {\n        f>>ti;\n        t-=ti;\n    }\n    nrj+=(n-1)*2;\n    t-=(n-1)*10;\n    if(t>=0)\n    {\n        nrj+=t/5;\n        g<<nrj;\n    }\n    else\n        g<<\"-1\";\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Devu, the Singer and Churu, the Joker.json",
    "editorial_link": "https://codeforces.com//blog/entry/12545",
    "editorial": "For checking whether there is a way to conduct all the songs of the\r\nsinger, you can conduct the event in the following way. Hence minimum\r\nduration of the even needed such that sing could sing all his songs will\r\nbe + + + + ... + = where denote the total time of the songs of the\r\nsinger. So for checking feasibility of the solution, just check whether\r\nor not?. If it is feasible, then time remaining for joker will be the\r\nentire duration except the time when the singer is singing the song.\r\nHence time available for the joker will be . In that time joker will\r\nsing songs. Solution codes\r\n"
}