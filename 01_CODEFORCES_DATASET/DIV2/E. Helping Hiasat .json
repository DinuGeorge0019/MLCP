{"link": "https://codeforces.com//contest/1105/problem/E", "problemId": "284898", "problem_idx": "E", "shortId": "1105E", "contest_number": "1105", "problem_submissions": {"E": [48620322, 48620801, 48627331, 48625937, 48626240, 48621486, 48622249, 48628056, 48633102, 48628188, 48631669, 48628460, 48634987, 48628398, 48633326, 48655121, 48633590, 48617721, 48626954, 48628874, 48630576], "D": [48616818, 48615146, 48617750, 48616118, 48617724, 48622970, 48619041, 48619086, 48622750, 48620456, 48624388, 48621628, 48623556, 48621076, 48620990, 48622287, 48622764, 48624162, 48623494, 48618308], "C": [48610690, 48610244, 48611290, 48612291, 48612786, 48613707, 48615573, 48612747, 48614232, 48613816, 48615442, 48612205, 48616806, 48617252, 48615059, 48613686, 48623666, 48614080, 48615466, 48612894], "B": [48609141, 48608646, 48609160, 48610767, 48610712, 48609901, 48611122, 48609473, 48610473, 48609258, 48611792, 48609717, 48612036, 48610022, 48609557, 48611005, 48624281, 48610791, 48613028, 48610193], "A": [48608469, 48608122, 48608173, 48608145, 48608339, 48608495, 48609263, 48608223, 48608574, 48608192, 48608757, 48608186, 48608633, 48608202, 48608401, 48608383, 48625139, 48608354, 48609689, 48608198]}, "name": "E. Helping Hiasat ", "statement": "Hiasat registered a new account in NeckoForces and when his friends\r\nfound out about that, each one of them asked to use his name as Hiasat\u2019s\r\nhandle.Luckily for Hiasat, he can change his handle in some points in\r\ntime. Also he knows the exact moments friends will visit his profile\r\npage. Formally, you are given a sequence of events of two types: 1\r\nHiasat can change his handle. 2 s friend s visits Hiasat\u2019s profile. The\r\nfriend s will be happy, if each time he visits Hiasat\u2019s profile his\r\nhandle would be s.Hiasat asks you to help him, find the maximum possible\r\nnumber of happy friends he can get.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\n#define FOR(i,a,b) for (int i=a;i<=b;++i)\n#define FORD(i,a,b) for (int i=a;i>=b;--i)\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int,int> pa;\ntypedef vector<int> vec;\nvoid getint(int &v){\n    char ch,fu=0;\n    for(ch='*'; (ch<'0'||ch>'9')&&ch!='-'; ch=getchar());\n    if(ch=='-') fu=1, ch=getchar();\n    for(v=0; ch>='0'&&ch<='9'; ch=getchar()) v=v*10+ch-'0';\n    if(fu) v=-v;\n}\nbitset<100010> a[44];\nint now,n,t,ans,m,ren,c[55][55],p[500010],tp[500010];\nstring s;\nmap<string,int> M;\nbool u[500010];\nint main(){\n//\tfreopen(\"t.in\",\"r\",stdin);\n//\tfreopen(\"t.out\",\"w\",stdout);\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tnow=0;\n\tFOR(i,1,n){\n\t\tcin>>tp[i];\n\t\tif (tp[i]==1){\n\t\t\tif (tp[i-1]==1) continue;\n\t\t\t++now;\n\t\t}\n\t\telse{\n\t\t\tcin>>s;\n\t\t\tif (M.find(s)==M.end()) M[s]=++ren;\n\t\t\tt=M[s];\n\t\t\ta[t][now]=1;\n\t\t}\n\t}\n\tFOR(i,1,ren) c[i][i]=1;\n\tFOR(i,1,ren)\n\t\tFOR(j,i+1,ren)\n\t\t\tif (((int)(a[i]&a[j]).count())!=0){\n\t\t\t\tc[i][j]=c[j][i]=0;\n\t\t\t}\n\t\t\telse c[i][j]=c[j][i]=1;\n\tint rp=10000;\n\twhile (rp--){\n\t\tFOR(i,1,ren) p[i]=i;\n\t\trandom_shuffle(p+1,p+ren+1);\n\t\tint s=0;\n\t\tFOR(i,1,ren) u[i]=0;\n\t\tFOR(i,1,ren){\n\t\t\tbool gg=0;\n\t\t\tint x=p[i];\n\t\t\tFOR(j,1,ren)\n\t\t\t\tif (u[j] && !c[j][x]) gg=1;\n\t\t\tif (!gg){\n\t\t\t\t++s;\n\t\t\t\tu[x]=1;\n\t\t\t}\n\t\t}\n\t\tans=max(ans,s);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n\t\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "dificulty": "2200", "interactive": false}