{"link": "https://codeforces.com//contest/593/problem/C", "problemId": "40051", "problem_idx": "C", "shortId": "593C", "contest_number": "593", "problem_submissions": {"E": [14074831, 14071839, 14069012, 14112263, 14101227, 14078183, 14073295, 14073367], "D": [14071251, 14067776, 14071547, 14071080, 14071834, 14069627, 14072451, 14072921, 14072768, 14072117, 14072979, 14072065, 14072780, 14073132, 14073238], "B": [14065295, 14080270, 14065853, 14065770, 14066413, 14066282, 14075373, 14072184, 14066079, 14066654, 14066024, 14067374, 14064950, 14066946, 14073180, 14067257, 14066769, 14067908, 14066629], "A": [14064191, 14073716, 14064213, 14064573, 14064399, 14064679, 14064276, 14064487, 14064593, 14064652, 14065927, 14064315, 14065183, 14065251, 14065732, 14064991, 14065641, 14065343], "C": [14105964, 14078413, 14072751]}, "name": "C. Beautiful Function", "statement": "Every day Ruslan tried to count sheep to fall asleep, but this didn\u2019t\r\nhelp. Now he has found a more interesting thing to do. First, he thinks\r\nof some set of circles on a plane, and then tries to choose a beautiful\r\nset of points, such that there is at least one point from the set inside\r\nor on the border of each of the imagined circles.Yesterday Ruslan tried\r\nto solve this problem for the case when the set of points is considered\r\nbeautiful if it is given as , where argument takes all integer values\r\nfrom to . Moreover, and should be functions.Assume that and are some\r\ncorrect functions, and is an integer ranging from to . The function is\r\ncorrect if it\u2019s obtained by one of the following rules: , where means\r\ntaking the absolute value of a number , i.e. ; ; ; , where means\r\nmultiplication, i.e. ; ; ;Yesterday Ruslan thought on and on, but he\r\ncould not cope with the task. Now he asks you to write a program that\r\ncomputes the appropriate and for any set of at most circles.In each of\r\nthe functions and you are allowed to use no more than multiplications.\r\nThe length of any function should not exceed characters. The function\r\nRuslan can\u2019t keep big numbers in his memory, so you should choose and ,\r\nsuch that for all integer from to value of and and all the intermediate\r\ncalculations won\u2019t exceed by their absolute value.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define sf(x) scanf(\"%d\",&x)\n#define pf(x) printf(\"%d \",x)\n#define sf2(x,y) scanf(\"%d %d\",&x,&y)\n#define pf2(x,y) printf(\"%d %d \",x,y)\n#define sf3(x,y,z) scanf(\"%d %d %d\",&x,&y,&z)\n#define pf3(x,y,z) printf(\"%d %d %d \",x,y,z)\n#define sfc(c) scanf(\" %c\",&c)\n#define pfc(c) printf(\"%c\",c)\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair(x,y)\n#define INF 2000000000\n#define ENDL puts(\"\")\n\n\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef unsigned int uint;\n\n\n\nstring foo(int t, int x)\n{\n    char tmp[256];\n    sprintf(tmp,\"(%d*((1-abs((t-%d)))+abs((1-abs((t-%d))))))\", x/2,t,t);\n    string res(tmp);\n\n    return res;\n}\n\n\nint main()\n{\n    /*\n    #ifdef LOCAL\n    freopen(\"field.in\",\"r\",stdin);\n    freopen(\"foo.out\",\"w\",stdout);\n    #endif            \n    /**/\n\n                  \n    int n;\n    sf(n);\n    int x,y,r;\n    sf3(x,y,r);\n    string f=foo(0,x);\n    string g=foo(0,y);\n    for(int i=1; i<n; i++)\n    {\n        sf3(x,y,r);\n        f='('+f+'+'+foo(i,x)+')';\n        g='('+g+'+'+foo(i,y)+')';\n    }\n    cout<<f<<endl<<g;\n\n    return 0;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "input": "", "output": "", "tags": ["constructive algorithms", "math"], "dificulty": "2200", "interactive": false}