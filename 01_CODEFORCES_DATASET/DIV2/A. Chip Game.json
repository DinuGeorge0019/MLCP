{
    "link": "https://codeforces.com//contest/1719/problem/A",
    "problemId": "1509970",
    "problem_idx": "A",
    "shortId": "1719A",
    "contest_number": "1719",
    "problem_submissions": {
        "B": [
            168566227,
            168520938,
            168532485,
            168523483,
            168546606,
            168527651,
            168529090,
            168521682,
            168524157,
            168525651,
            168544350,
            168524093,
            168532781,
            168524676,
            168524799,
            168528931,
            168523245,
            168535265,
            168542247,
            168526151
        ],
        "C": [
            168564590,
            168527055,
            168563913,
            168534688,
            168554638,
            168544738,
            168548686,
            168548105,
            168536891,
            168541394,
            168530142,
            168539695,
            168544769,
            168539081,
            168537531,
            168544593,
            168539888,
            168546396,
            168551142,
            168534597
        ],
        "D1": [
            168558558,
            168542679,
            168557284,
            168554279,
            168564803,
            171062245,
            168563518,
            168568656,
            168554712,
            168565935,
            168563890,
            168565575,
            168554859,
            168570422,
            168552272,
            168561513,
            168560338,
            168564995,
            168562859,
            168577517
        ],
        "D2": [
            168558497,
            168553599,
            168557602,
            168553982,
            168564623,
            171062226,
            168563176,
            168568769,
            168554473,
            168565713,
            168570996,
            168565418,
            168574779,
            168570083,
            168576109,
            168574448,
            168567511,
            168565085,
            168562615,
            168586718
        ],
        "E": [
            168554365,
            168598287,
            168578854,
            168574119,
            168542245,
            168581099,
            168583743,
            168579840,
            168595833,
            168593319,
            168587676,
            168594973,
            168588543,
            168587843,
            168593966,
            168594751,
            168583071,
            168590461,
            168594089
        ],
        "F": [
            168534987,
            168577836,
            168600287,
            168607443,
            168579023,
            168704091,
            168637926,
            168609385,
            168607981,
            168607715,
            168585958
        ],
        "A": [
            168519209,
            168515375,
            168527134,
            168516968,
            168548303,
            168516013,
            168516695,
            168515925,
            168516176,
            168516243,
            168534710,
            168515665,
            168518019,
            168515902,
            168516007,
            168515846,
            168515950,
            168515461,
            168516618,
            168515960
        ]
    },
    "name": "A. Chip Game",
    "statement": "Burenka and Tonya are playing an old Buryat game with a chip on a board\r\nof n\r\ntimes m cells.At the beginning of the game, the chip is located in the\r\nlower left corner of the board. In one move, the player can move the\r\nchip to the right or up by any number of cells (but you cannot move the\r\nchip both to the right and up in one move). The one who cannot make a\r\nmove loses.Burenka makes the first move, the players take turns. Burenka\r\nreally wants to win the game, but she is too lazy to come up with a\r\nstrategy, so you are invited to solve the difficult task of finding it.\r\nName the winner of the game (it is believed that Burenka and Tonya are\r\nmasters of playing with chips, so they always move in the optimal way).\r\n",
    "solutions": [
        "#pragma GCC optimize(\"Ofast\",\"unroll-loops\",\"omit-frame-pointer\",\"inline\") //Optimization flags\n#pragma GCC option(\"arch=native\",\"tune=native\",\"no-zero-upper\") //Enable AVX\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\n#include<bits/stdc++.h>\n//#include<ext/pb_ds/assoc_container.hpp>\nusing namespace std;\n//using namespace __gnu_pbds;\nconst int inf=0x3f3f3f3f;\nconst double eps=1e-6;\nconst int mod=1e9+7;\ntypedef long long ll;\n#ifndef LOCAL\n#define cerr if(0)cout\n#define eprintf(...) 0\n#else\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#endif\ninline string getstr(string &s,int l,int r){string ret=\"\";for(int i=l;i<=r;i++)ret.push_back(s[i]);return ret;}\nint modpow(int x,int y,int md=mod){int ret=1;do{if(y&1)ret=(ll)ret*x%md;x=(ll)x*x%md;}while(y>>=1);return ret;}\ninline int Rand(){return rand()*32768+rand();}\nint T,n,m;\nint main(){\n\tcin>>T;\n\twhile(T--){\n\t\tcin>>n>>m;\n\t\tputs((n+m)%2==0?\"Tonya\":\"Burenka\");\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Chip Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/106049",
    "editorial": "Note that the game will end only when the chip is in the upper\nright corner (otherwise you can move it square to the right or up). For\nall moves, the chip will move to the right and up, which means that the\ntotal length of all moves is (the length of the move is how much the\nchip moved per turn). Since the length of any move is odd, then after\nany move of Burenka, the sum of the lengths will be odd, and after any\nmove of Tonya is even. So we can find out who made the last move in the\ngame by looking at . With , Tonya wins, otherwise Burenka.The complexity\nof the solution is .\n"
}