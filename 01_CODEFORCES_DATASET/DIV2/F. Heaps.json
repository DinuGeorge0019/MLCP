{"link": "https://codeforces.com//contest/955/problem/F", "problemId": "167748", "problem_idx": "F", "shortId": "955F", "contest_number": "955", "problem_submissions": {"E": [36552751], "D": [36547766, 36561781, 36687646, 72294185], "C": [36544337, 36544697, 36542762, 36552120, 36546618, 36544122, 36549891, 36544109, 36541691, 36576017, 36575027, 36548324, 36546617, 36544127, 36541601, 36543835, 36543719, 36546626, 36545136, 36544045, 36543760, 36541102], "B": [36538238, 36537135, 36537612, 36562998, 36539430, 36538683, 36540472, 36537286, 36537082, 36538951, 36538215, 36537949, 36537216, 36540793, 36539603, 36539538, 36538461, 36538576, 36537767, 36537306], "A": [36536991, 36539709, 36536867, 36548240, 36538150, 36537171, 36538851, 36536810, 36543232, 36537420, 36540571, 36537312, 36546633, 36537606, 36537598, 36537548, 36537069, 36537405, 36537023, 36550641], "F": [36545987, 36553463, 36668304]}, "name": "F. Heaps", "statement": "You\u2019re given a tree with vertices rooted at .We say that there\u2019s a -ary\r\nheap of depth located at if the following holds: For itself is a -ary\r\nheap of depth . For vertex is a -ary heap of depth if of its children\r\nare -ary heaps of depth . Denote as maximum depth of -ary heap in the\r\nsubtree of (including ). Your goal is to compute .\r\n", "solutions": ["#include<bits/stdc++.h>\n#define RAN(v)v.begin(),v.end()\n#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\nusing namespace std;\ntemplate<class T1,class T2>\ninline void upd1(T1&a,T2 b){a>b?a=b:0;}\ntemplate<class T1,class T2>\ninline void upd2(T1&a,T2 b){a<b?a=b:0;}\ntypedef long long ll;\nstruct ano{\n\toperator ll(){\n\t\tll x=0,y=0,c=getchar();\n\t\twhile(c<48)\n\t\t\ty=c==45,c=getchar();\n\t\twhile(c>47)\n\t\t\tx=x*10+c-48,c=getchar();\n\t\treturn y?-x:x;\n\t}\n}buf;\nconst int N=3e5+5;\nvector<int>t[N];\nll s=0;\nint n,f[20][N],g[20][N];\nint dfs(int u,int p){\n\tint l=1;\n\tfor(int v:t[u])\n\t\tif(v!=p)\n\t\t\tupd2(l,dfs(v,u)+1);\n\ts+=l;\n\tf[1][u]=n;\n\tg[1][u]=n;\n\tfor(int i=2;;++i){\n\t\tvector<int>a;\n\t\tfor(int v:t[u])\n\t\t\tif(v!=p)\n\t\t\t\ta.pb(-f[i-1][v]);\n\t\tsort(RAN(a));\n\t\tf[i][u]=1;\n\t\tfor(int k=a.size();k>1;--k)\n\t\t\tif(-a[k-1]>=k){\n\t\t\t\tf[i][u]=k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(f[i][u]==1)\n\t\t\tbreak;\n\t}\n\tfor(int i=2;;++i){\n\t\tfor(int v:t[u])\n\t\t\tif(v!=p)\n\t\t\t\tupd2(g[i][u],g[i][v]);\n\t\tupd2(g[i][u],f[i][u]);\n\t\ts+=(i-1)*(g[i-1][u]-g[i][u]);\n\t\tif(g[i][u]==1)\n\t\t\tbreak;\n\t}\n\treturn l;\n}\nint main(){\n\tn=buf;\n\tfor(int i=2;i<=n;++i){\n\t\tint u=buf,v=buf;\n\t\tt[u].pb(v);\n\t\tt[v].pb(u);\n\t}\n\tdfs(1,0);\n\tprintf(\"%lld\\n\",s);\n}\n"], "input": "", "output": "", "tags": ["dp", "trees"], "dificulty": "2600", "interactive": false}