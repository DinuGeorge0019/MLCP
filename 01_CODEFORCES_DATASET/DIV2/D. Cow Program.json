{"link": "https://codeforces.com//contest/284/problem/D", "problemId": "2748", "problem_idx": "D", "shortId": "284D", "contest_number": "284", "problem_submissions": {"E": [3341226, 3353475, 3343324, 3353178], "D": [3337803, 3336986, 3340096, 3341173, 3340691, 3339899, 3340120, 3339291, 3340036, 3341486, 3341356, 3342241, 3341587, 3342115, 3346065, 3341238, 3343309, 3343011], "C": [3335356, 3332695, 3336015, 3336648, 3334688, 3335244, 3335583, 3335090, 3334507, 3335320, 3334500, 3333846, 3335893, 3335956, 3336047, 3336868, 3335897, 3337388], "B": [3332715, 3332443, 3333109, 3331686, 3332328, 3331846, 3333568, 3332403, 3332456, 3332720, 3332071, 3332021, 3333154, 3332185, 3333676, 3334151, 3332524], "A": [3331616, 3334567, 3333705, 3331100, 3331416, 3331211, 3332690, 3331528, 3331275, 3331564, 3331148, 3331373, 3331841, 3331566, 3333186, 3332159, 3332364, 3331710]}, "name": "D. Cow Program", "statement": "Farmer John has just given the cows a program to play with! The program\r\ncontains two integer variables, and , and performs the following\r\noperations on a sequence of positive integers: Initially, and . If,\r\nafter any step, or , the program immediately terminates. The program\r\nincreases both and by a value equal to simultaneously. The program now\r\nincreases by while decreasing by . The program executes steps 2 and 3\r\n(first step 2, then step 3) repeatedly until it terminates (it may never\r\nterminate). So, the sequence of executed steps may start with: step 2,\r\nstep 3, step 2, step 3, step 2 and so on. The cows are not very good at\r\narithmetic though, and they want to see how the program works. Please\r\nhelp them!You are given the sequence . Suppose for each we run the\r\nprogram on the sequence . For each such run output the final value of if\r\nthe program terminates or if it does not terminate.\r\n", "solutions": ["#include <cstdio>\ntypedef\tlong long\tll;\nconst\tint\tmaxn = 440000;\nint\tn, twp;\nint\tdat[maxn], trans[maxn], tranc[maxn], dp[maxn][21];\nll\tds[maxn][21];\nint\tmain()\n{\n//\tfreopen(\"d.in\", \"r\", stdin);\n//\tfreopen(\"d.out\", \"w\", stdout);\n\tscanf(\"%d\", &n);\n\tfor (int i=2; i<=n; i++) scanf(\"%d\", &dat[i]);\n\tfor (int i=2; i<=n; i++)\n\t{\n\t\ttwp = i + dat[i];\n\t\tif (twp <= 0 || twp > n) trans[i] = 0; else trans[i] = n + twp;\n\t\ttranc[i] = dat[i];\n\t\ttwp = i - dat[i];\n\t\tif (twp <= 0 || twp > n) trans[n + i] = 0; else trans[n + i] = twp;\n\t\ttranc[n + i] = dat[i];\n\t}\n\ttrans[1] = 1; trans[n + 1] = n + 1; trans[0] = 0; tranc[0] = 0;\n\tfor (int i=0; i<=2*n; i++) dp[i][0] = trans[i], ds[i][0] = tranc[i];\n\tfor (int i=0; i<=20; i++)\n\t\tfor (int k=0; k<=2*n; k++)\n\t\t{\n\t\t\tdp[k][i + 1] = dp[dp[k][i]][i];\n\t\t\tds[k][i + 1] = ds[k][i] + ds[dp[k][i]][i];\n\t\t}\n\tfor (int i=1; i<n; i++)\n\t{\n\t\tif (dp[n + i + 1][20]) printf(\"-1\\n\");\n\t\telse\tprintf(\"%I64d\\n\", ds[n+i+1][20] + i);\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["dfs and similar", "dp"], "dificulty": "1700", "interactive": false}