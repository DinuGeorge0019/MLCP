{
    "link": "https://codeforces.com//contest/998/problem/A",
    "problemId": "194445",
    "problem_idx": "A",
    "shortId": "998A",
    "contest_number": "998",
    "problem_submissions": {
        "E": [
            39844279,
            39844719,
            39842563,
            39860454,
            39860368
        ],
        "D": [
            39839915,
            39841332,
            39842999,
            39838622,
            39833588,
            39834360,
            39835519,
            39835358,
            39836436,
            39839136,
            39835483,
            39834881,
            39832459,
            39838234,
            39834518,
            39836090,
            39838820,
            39836619
        ],
        "B": [
            39829464,
            39826160,
            39828535,
            39827534,
            39825326,
            39826819,
            39826965,
            39827064,
            39824985,
            39826413,
            39828466,
            39828134,
            39827004,
            39829078,
            39829375,
            39828106,
            39826996,
            39829712
        ],
        "C": [
            39826150,
            39829299,
            39830565,
            39832057,
            39827518,
            39829277,
            39828734,
            39829936,
            39831699,
            39829124,
            39832064,
            39831642,
            39829279,
            39831274,
            39831057,
            39831568,
            39830502,
            39831907
        ],
        "A": [
            39824455,
            39823644,
            39825721,
            39823552,
            39823494,
            39823346,
            39825072,
            39824102,
            39823293,
            39823771,
            39825353,
            39823995,
            39824239,
            39823343,
            39835371,
            39823495,
            39823392,
            39823469
        ]
    },
    "name": "A. Balloons",
    "statement": "There are quite a lot of ways to have fun with inflatable balloons. For\r\nexample, you can fill them with water and see what happens.Grigory and\r\nAndrew have the same opinion. So, once upon a time, they went to the\r\nshop and bought n packets with inflatable balloons, where i-th of them\r\nhas exactly a_i balloons inside.They want to divide the balloons among\r\nthemselves. In addition, there are several conditions to hold: Do not\r\nrip the packets (both Grigory and Andrew should get unbroken packets);\r\nDistribute all packets (every packet should be given to someone); Give\r\nboth Grigory and Andrew at least one packet; To provide more fun, the\r\ntotal number of balloons in Grigory\u2019s packets should not be equal to the\r\ntotal number of balloons in Andrew\u2019s packets. Help them to divide the\r\nballoons or determine that it\u2019s impossible under these conditions.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename A, typename B> inline ostream& operator<<(ostream&os, const pair<A, B> &v) {return os << v.first << ' ' << v.second;}\ntemplate <typename A> inline ostream& operator<<(ostream&os, const vector<A> &v){\n    auto it = v.begin(); os << *it;for (++it; it != v.end(); os << ' ' << *it++); return os;\n}\n#ifdef Wavator\n#define de(...) cout << #__VA_ARGS__ << \" = \", W(__VA_ARGS__)\n#else\n#define de(...) 42\n#define cerr if (false) cout\n#endif\nvoid W(){cout<<endl;}\ntemplate <typename H, typename...T> inline void W(H head, T... tail){\n    cout << head << ' ';\n    W(tail...);\n}\n#define rep(i, a, b) for (int i = (a), i##_end_ = (b); i < i##_end_; ++i)\n#define per(i, a, b) for (int i = (b) - 1, i##_end_ = (a); i >= i##_end_; --i)\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define SZ(x) ((int)(x).size())\n#define fi first\n#define se second\ntypedef long long ll;\ntypedef double db;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nconst db eps = 1e-9, PI = acos(-1);\nconst ll mod = (ll)1e9 + 7;\nconst int oo = 0x3f3f3f3f;\nmt19937 rnd((ull)time(0));\nll pow_mod(ll a, ll b) {\n    assert(b >= 0); ll res = 1;\n    for (a %= mod; b; b >>= 1, a = a * a % mod) if (b & 1)res = res * a % mod;\n    return res;\n}\n/////////////////////////////////////////////////////////////////////////\nvoid solve();\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr), cout.tie(nullptr);\n    solve();\n    return 0;\n}\n\nvoid solve() {\n    int n, m;\n    cin >> n;\n    vi a(n, 0);\n    rep(i, 0, n) {\n        cin >> a[i];\n    }\n    if (n == 1||(n==2&&a[0]==a[1])) {\n        printf(\"-1\\n\");\n        return;\n    }\n    else {\n        int mi = 99999,ans=0;\n        for (int i = 0; i < n; i++)if (a[i] < mi) {\n                ans = i;\n                mi = a[i];\n            }\n        cout << 1 << endl << ans+1 << endl;\n    }\n\n    return;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Balloons.json",
    "editorial_link": "https://codeforces.com//blog/entry/60357",
    "editorial": "It is easy to show, that if at least one solution exists, than it is\r\npossible to use the answer, which contains only one, minimal,\r\nelement.Suppose, that this set is not valid. Then one of the following\r\nholds: Either , and then there is no solution Or , and other element is\r\nequal to minimum, in this case it is ease to see that there are not\r\nsolution too. Also, the limits were set in such way, that solution which\r\nbruteforces all subsets and checks them also passes.\r\n"
}