{
    "link": "https://codeforces.com//contest/606/problem/C",
    "problemId": "42714",
    "problem_idx": "C",
    "shortId": "606C",
    "contest_number": "606",
    "problem_submissions": {
        "E": [
            14725950,
            14727210,
            14727285,
            14729262,
            14730116,
            14751808,
            14744112
        ],
        "D": [
            14723234,
            14720930,
            14722869,
            14722527,
            14721927,
            14721746,
            14724535,
            14726175,
            14725267,
            14727123,
            14723529,
            14723141,
            14723054,
            14723150,
            14724111,
            14724621,
            14724261,
            14729733,
            14726510,
            14723588
        ],
        "C": [
            14720687,
            14718170,
            14720169,
            14719390,
            14718531,
            14725447,
            14722596,
            14730393,
            14718042,
            14720969,
            14719927,
            14719309,
            14718761,
            14720872,
            14720282,
            14719898,
            14721458,
            14724065,
            14721907,
            14718844
        ],
        "B": [
            14719527,
            14727489,
            14717796,
            14718524,
            14717743,
            14717859,
            14719198,
            14721650,
            14720720,
            14718805,
            14718705,
            14720039,
            14720141,
            14718565,
            14718498,
            14718858,
            14720719,
            14719695,
            14729480
        ],
        "A": [
            14716101,
            14721455,
            14715984,
            14715809,
            14716134,
            14715791,
            14715975,
            14739251,
            14715905,
            14717499,
            14716801,
            14716057,
            14715921,
            14715914,
            14715981,
            14716162,
            14716237,
            14717038,
            14716311,
            14716156
        ]
    },
    "name": "C. Sorting Railway Cars",
    "statement": "An infinitely long railway has a train consisting of cars, numbered from\r\nto (the numbers of all the cars are distinct) and positioned in\r\narbitrary order. David Blaine wants to sort the railway cars in the\r\norder of increasing numbers. In one move he can make one of the cars\r\ndisappear from its place and teleport it either to the beginning of the\r\ntrain, or to the end of the train, at his desire. What is the minimum\r\nnumber of actions David Blaine needs to perform in order to sort the\r\ntrain?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\n\nint t[100001];\nint d[100001];\n\nint main()\n{\n    //freopen(\"C.txt\", \"r\", stdin);\n    ios::sync_with_stdio(false);\n    cin >> n;\n    for (int i=1;i<=n;i++) cin >> t[i];\n    int maxi=0;\n    for (int i=1;i<=n;i++) {\n        d[t[i]]=1+d[t[i]-1];\n        maxi=max(maxi, d[t[i]]);\n    }\n    cout << n-maxi<<endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Sorting Railway Cars.json",
    "editorial_link": "https://codeforces.com//blog/entry/22019",
    "editorial": null,
    "hint": []
}