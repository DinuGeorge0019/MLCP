{"link": "https://codeforces.com//contest/1363/problem/B", "problemId": "636624", "problem_idx": "B", "shortId": "1363B", "contest_number": "1363", "problem_submissions": {"F": [82106115, 82133417, 82134663, 82148859, 82187672, 82151422, 82129291], "B": [82089340, 82061810, 82102257, 82051813, 82052193, 82054432, 82059773, 82050390, 82052570, 82057688, 82062819, 82061181, 82063108, 82056815, 82052221, 82048933, 82053424, 82060016], "E": [82084929, 82115560, 82118841, 82083744, 82094219, 82095201, 82085310, 82078785, 82104191, 82087813, 82091268, 82109972, 82093877, 82089726, 82112505, 82091430, 82097365, 82091233], "D": [82073363, 82098128, 82116891, 82105976, 82086712, 82108911, 82113962, 82100776, 82093305, 82115209, 82090000, 82113643, 82117922, 82095216, 82114310, 82120048, 82118359], "C": [82058814, 82072569, 82099263, 82066157, 82070197, 82067166, 82068534, 82108126, 82064962, 82108652, 82074021, 82067732, 82075440, 82064472, 82071898, 82069396, 82075513, 82072756], "A": [82051846, 82136588, 82081640, 82048308, 82048940, 82048236, 82052695, 82047806, 82048669, 82057495, 82055772, 82048991, 82055132, 82048772, 82048248, 82057801, 82048473, 82052285]}, "name": "B. Subsequence Hate", "statement": "Shubham has a binary string s. A binary string is a string containing\r\nonly characters \"\" and \"\".He can perform the following operation on the\r\nstring any amount of times: Select an index of the string, and flip the\r\ncharacter at that index. This means, if the character was \"\", it becomes\r\n\"\", and vice versa. A string is called good if it does not contain \"\" or\r\n\"\" as a subsequence for instance, \"\" contains \"\" as a subsequence, hence\r\nit is not a good string, while \"\" doesn\u2019t contain neither \"\" nor \"\" as\r\nsubsequences, so it is a good string.What is the minimum number of\r\noperations he will have to perform, so that the string becomes good? It\r\ncan be shown that with these operations we can make any string good.A\r\nstring a is a subsequence of a string b if a can be obtained from b by\r\ndeletion of several (possibly, zero or all) characters.\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define pb push_back\n#define F first\n#define S second\n#define all(x) x.begin(), x.end()\n#define debug(x) cerr << #x << \" : \" << x << '\\n'\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef string str;\ntypedef pair<ll, ll> pll;\n\nconst ll Mod = 1000000007LL;\nconst int N = 2e5 + 10;\nconst ll Inf = 2242545357980376863LL;\nconst ll Log = 30;\n\nll cnt[2][2];\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tll T;\n\tcin >> T;\n\twhile(T--){\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tstr s;\n\t\tcin >> s;\n\t\tfor(auto x : s) cnt[0][x - '0'] ++;\n\t\tll ans = min(cnt[0][0], cnt[0][1]);\n\t\tfor(auto x : s){\n\t\t\tcnt[0][x - '0'] --;\n\t\t\tcnt[1][x - '0'] ++;\n\t\t\tans = min(ans, min(cnt[0][0], cnt[0][1]) + min(cnt[1][1], cnt[1][0]));\n\t\t}\n\t\tcout << ans << '\\n';\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1400", "interactive": false}