{"link": "https://codeforces.com//contest/146/problem/D", "problemId": "843", "problem_idx": "D", "shortId": "146D", "contest_number": "146", "problem_submissions": {"E": [1107649, 1106940, 1107025, 1106110, 1104912, 1106705, 1109524, 1109375], "D": [1105309, 1104675, 1105945, 1107976, 1106326, 1106073, 1105205, 1106349, 1104562, 1105428, 1106336, 1105647, 1104691, 1106147, 1106016, 1105646, 1105960], "C": [1102780, 1104080, 1102877, 1102469, 1102797, 1103007, 1102279, 1103376, 1102389, 1103154, 1102564, 1102512, 1103182, 1102102, 1103314, 1102745, 1102381, 1103228], "B": [1102298, 1104365, 1102361, 1102000, 1102441, 1102529, 1101911, 1102170, 1101819, 1102472, 1102060, 1102101, 1102285, 1105411, 1102661, 1102358, 1103722, 1102489], "A": [1101303, 1104909, 1101580, 1101222, 1102090, 1101773, 1101311, 1101481, 1102909, 1101618, 1101388, 1101178, 1101582, 1101659, 1101533, 1101613, 1103048, 1101789]}, "name": "D. Lucky Number 2", "statement": "Petya loves long lucky numbers very much. He is interested in the lucky\r\nnumber that meets some condition. Let be the number of occurrences of\r\nnumber in number as a substring. For example, if , then , , , . Petya\r\nwants the following condition to fulfil simultaneously: , , , . Petya is\r\nnot interested in the occurrences of other numbers. Help him cope with\r\nthis task.\r\n", "solutions": ["#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int\tMAX_N\t= 2000000 + 10;\nint\t\t\ta1, a2, a3, a4;\nchar\t\ta\t\t[MAX_N];\n\nvoid Init()\n{\n\tcin >> a1 >> a2 >> a3 >> a4;\n}\n\nint Solve()\n{\n\tint tot = 0;\n\tif (abs(a3 - a4) > 1) return 0;\n\tif (a3 == a4) {\n\t\tif (a1 - a4 - 1 >= 0 && a2 - a4 >= 0) {\n\t\t\tfor(int i = 1; i <= a1 - a4 - 1; ++ i) a[tot ++] = '4';\n\t\t\tfor(int i = 1; i <= a4; ++ i) {\n\t\t\t\ta[tot ++] = '4';\n\t\t\t\ta[tot ++] = '7';\n\t\t\t}\n\t\t\tfor(int i = 1; i <= a2 - a4; ++ i) a[tot ++] = '7';\n\t\t\ta[tot ++] = '4';\n\t\t} else if (a1 - a4 >= 0 && a2 - a4 - 1 >= 0) {\n\t\t\ta[tot ++] = '7';\n\t\t\tfor(int i = 1; i <= a1 - a4; ++ i) a[tot ++] = '4';\n\t\t\tfor(int i = 1; i <= a4; ++ i) {\n\t\t\t\ta[tot ++] = '4';\n\t\t\t\ta[tot ++] = '7';\n\t\t\t}\n\t\t\tfor(int i = 1; i <= a2 - a4 - 1; ++ i) a[tot ++] = '7';\n\t\t} else return false;\n\t} else if (a3 - 1 == a4) {\n\t\tif (a1 - a3 < 0 || a2 - a3 < 0) return false;\n\t\tfor(int i = 1; i <= a1 - a3; ++ i) a[tot ++] = '4';\n\t\tfor(int i = 1; i <= a3; ++ i) {\n\t\t\ta[tot ++] = '4';\n\t\t\ta[tot ++] = '7';\n\t\t}\n\t\tfor(int i = 1; i <= a2 - a3; ++ i) a[tot ++] = '7';\n\t} else {\n\t\tif (a1 - a4 < 0 || a2 - a4 < 0) return false;\n\t\ta[tot ++] = '7'; a[tot ++] = '4';\n\t\tfor(int i = 1; i <= a1 - a4; ++ i) a[tot ++] = '4';\n\t\tfor(int i = 1; i <= a4 - 2; ++ i) {\n\t\t\ta[tot ++] = '7';\n\t\t\ta[tot ++] = '4';\n\t\t}\n\t\tfor(int i = 1; i <= a2 - a4; ++ i) a[tot ++] = '7';\n\t\ta[tot ++] = '7'; a[tot ++] = '4';\n\t}\n\tputs(a);\n\treturn true;\n}\n\nint main()\n{\n\tInit();\n\tif (! Solve()) cout << -1 << endl;\n\t//system(\"pause\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "implementation"], "dificulty": "1800", "interactive": false}