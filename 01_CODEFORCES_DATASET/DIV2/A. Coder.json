{"link": "https://codeforces.com//contest/384/problem/A", "problemId": "5717", "problem_idx": "A", "shortId": "384A", "contest_number": "384", "problem_submissions": {"E": [5754820, 5756457, 5757218, 5768768, 5754973, 5757082, 5757773, 5753824, 5757669, 5759993, 5759984, 5759937], "C": [5752253, 5751497, 5752881, 5756887, 5754090, 5753464, 5757534, 5753590, 5750204, 5750062, 5751623, 5750722, 5749880, 5751415, 5751385, 5750837, 5751269, 5751529, 5751672, 5751983], "B": [5748010, 5749890, 5748064, 5751405, 5751229, 5751814, 5754578, 5753247, 5749239, 5750952, 5748962, 5749250, 5750859, 5749807, 5750164, 5749512, 5750591, 5750157, 5750184, 5749558], "A": [5747255, 5747392, 5747271, 5747721, 5748251, 5749148, 5747297, 5749334, 5748038, 5747882, 5747312, 5747613, 5747325, 5747593, 5747897, 5747709, 5747419, 5747633, 5747362, 5747257], "D": [5759668, 5766263]}, "name": "A. Coder", "statement": "Iahub likes chess very much. He even invented a new chess piece named\r\nCoder. A Coder can move (and attack) one square horizontally or\r\nvertically. More precisely, if the Coder is located at position , he can\r\nmove to (or attack) positions , , and .Iahub wants to know how many\r\nCoders can be placed on an chessboard, so that no Coder attacks any\r\nother Coder.\r\n", "solutions": ["//Solution by Zhusupov Nurlan\n#include <iostream>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cctype>\n#include <cmath>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <ctime>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef map<string , int> MSI;\ntypedef vector<int> VI;\n\n#define pb(x) push_back(x)\n#define sqr(x) ((x) * (x))\n#define F first\n#define S second\n#define SZ(t) ((int) t.size())\n#define len(t) ((int) t.length())\n#define base 10\n#define fname \"\"\n#define sz 1000 * 1000\n#define EPS (1e-8)\n#define INF ((int)1e9 + 9)\n#define write(xx) printf(\"%d\" , xx);\n#define readln(xx) getline(cin , xx)\n#define read(xx) scanf(\"%d\" , &xx)\n#define for(xx1 , yy1 , zz1) for(int zz1 = xx1 ; zz1 <= yy1 ; zz1++)\n#define mp make_pair\nconst double PI  = acos(-1.0);\n\nint n;\n\nint main(){\n\t//freopen(fname\"in\", \"r\", stdin);\n\tios_base::sync_with_stdio(false);\n    cin.tie(0);\n\tcin >> n;\n\n\tcout << (n * n / 2) + (n & 1) << \"\\n\";\n\t                        \n\tfor (1, n, i)\n\t{\n\t\tfor (1, n, j)\n\t\t\tif ((i + j) % 2 == 0)\n\t\t\t\tcout << \"C\";\n\t\t\telse\n\t\t\t\tcout << \".\";\n\t\tcout << \"\\n\";\n\t}\t\t\n    \treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "800", "interactive": false}