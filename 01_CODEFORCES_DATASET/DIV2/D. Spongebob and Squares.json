{
    "link": "https://codeforces.com//contest/599/problem/D",
    "problemId": "41191",
    "problem_idx": "D",
    "shortId": "599D",
    "contest_number": "599",
    "problem_submissions": {
        "D": [
            14373739,
            14373664,
            14394221,
            14375180,
            14375137,
            14375830,
            14374794,
            14372514,
            14378293,
            14374356,
            14380491,
            14376576,
            14377604,
            14379482,
            14375007,
            14373832,
            14379192,
            14384201,
            14378143,
            14374835,
            14375909
        ],
        "C": [
            14369474,
            14370302,
            14371990,
            14366448,
            14371734,
            14369913,
            14369228,
            14371288,
            14371880,
            14370952,
            14370316,
            14371725,
            14372878,
            14369085,
            14371250,
            14372876,
            14369840,
            14370142,
            14369299,
            14369577
        ],
        "B": [
            14367721,
            14365689,
            14367534,
            14376988,
            14368981,
            14368542,
            14366919,
            14366011,
            14371510,
            14368972,
            14367928,
            14368335,
            14367992,
            14366870,
            14370057,
            14371458,
            14366298,
            14368075,
            14367504
        ],
        "A": [
            14363461,
            14367023,
            14364757,
            14369525,
            14385293,
            14364759,
            14363593,
            14363286,
            14364018,
            14364707,
            14365621,
            14364489,
            14364779,
            14363557,
            14367419,
            14365247,
            14363341,
            14364093,
            14364413,
            14363223
        ],
        "E": [
            14379749,
            14385538
        ]
    },
    "name": "D. Spongebob and Squares",
    "statement": "Spongebob is already tired trying to reason his weird actions and\r\ncalculations, so he simply asked you to find all pairs of n and m, such\r\nthat there are exactly distinct squares in the table consisting of rows\r\nand columns. For example, in a table there are squares with side one,\r\nsquares with side two and squares with side three. The total number of\r\ndistinct squares in a table is .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<long long, long long> > ans, ans2;\nint main() {\n  long long n;\n  scanf(\"%lld\", &n);\n  long long sum1 = 0;\n  long long sum2 = 0;\n  for (long long i = 1; i <= 1500000; i++) {\n    sum1 += i;\n    sum2 += i * (i - 1);\n    if ((n - sum2) % sum1 == 0) {\n      long long y = (n - sum2) / sum1 + (i - 1);\n      if (y < i) break;\n      ans.push_back({i, y});\n      if (y == i) break;\n      ans2.push_back({y, i});\n    }\n  }\n  /*3x5 2x4 1x2\n  (1)*26 + 0\n  2*9 + 1*8\n  (1+2)*8 + 1*2\n  (1+2+3)*3 + 1*2 + 3*2*/\n  printf(\"%d\\n\", ans.size() + ans2.size());\n  for (int i = 0; i < ans.size(); i++) {\n    printf(\"%lld %lld\\n\", ans[i].first, ans[i].second);\n  }\n  for (int i = ans2.size() - 1; i >= 0; i--) {\n    printf(\"%lld %lld\\n\", ans2[i].first, ans2[i].second);\n  }\n  return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Spongebob and Squares.json",
    "editorial_link": "https://codeforces.com//blog/entry/21685",
    "editorial": "First of all, let's solve this problem for n???m, and then just swap n and m and print the answer. Important! Not to print squares twice!\n\nWe can use this formula for fixed n & m (n???m) for calculating the value of x. \n\nThen \n\nUsing the sum squares and the sum of the first k numbers we can easily solve this problem.\n\nGetting 6x?=?6n2?*?m?-?3(n2?+?n3?-?nm?-?n2)?+?2n3?-?3n3?+?n?=?3?*?m?*?n2?+?3?*?m?*?n?-?n3?+?n\n\nAs we solved this task for n???m the 3n2?*?m?=????n3, it means that n is not greater than ."
}