{
    "link": "https://codeforces.com//contest/918/problem/A",
    "problemId": "151492",
    "problem_idx": "A",
    "shortId": "918A",
    "contest_number": "918",
    "problem_submissions": {
        "D": [
            34674216,
            34676112,
            34673508,
            34668068,
            34677841,
            34677199,
            34677332,
            34677732,
            34674284,
            34676764,
            34679239,
            34678391,
            34678589,
            34677462,
            34676960,
            34679127,
            34678913,
            34675354,
            34679183
        ],
        "B": [
            34670440,
            34667518,
            34666861,
            34670421,
            34670264,
            34667471,
            34666401,
            34668510,
            34667116,
            34668380,
            34668100,
            34668007,
            34668333,
            34667912,
            34667438,
            34673764,
            34668108,
            34668574,
            34670180
        ],
        "C": [
            34669065,
            34673271,
            34676492,
            34678621,
            34673223,
            34674841,
            34674142,
            34672405,
            34678982,
            34671931,
            34673671,
            34675775,
            34673964,
            34675892,
            34678000,
            34670923,
            34676125,
            34680026,
            34675452
        ],
        "A": [
            34664697,
            34665015,
            34664848,
            34664663,
            34664707,
            34665222,
            34664674,
            34665219,
            34664947,
            34672513,
            34664938,
            34664735,
            34665446,
            34664882,
            34665035,
            34672321,
            34665406,
            34664826,
            34666801
        ],
        "E": [
            34687078,
            34688168,
            34687900,
            34687853
        ]
    },
    "name": "A. Eleven",
    "statement": "Eleven wants to choose a new name for herself. As a bunch of geeks, her\r\nfriends suggested an algorithm to choose a name for her. Eleven wants\r\nher name to have exactly characters. Her friend suggested that her name\r\nshould only consist of uppercase and lowercase letters ”. More\r\nprecisely, they suggested that the -th letter of her name should be ”\r\n(uppercase) if is a member of Fibonacci sequence, and ” (lowercase)\r\notherwise. The letters in the name are numbered from to . Fibonacci\r\nsequence is the sequence where , , (). As her friends are too young to\r\nknow what Fibonacci sequence is, they asked you to help Eleven determine\r\nher new name.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\n#define F first\n#define S second\n\nint f[200];\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n;\tcin >> n;\n\tf[1] = f[2] = 1;\n\tfor (int i = 3; i < 20; i++)\n\t\tf[i] = f[i-1] + f[i-2];\n\tfor (int i = 1; i <= n; i++){\n\t\tbool fl = 0;\n\t\tfor (int j = 1; j < 20; j++)\n\t\t\tif (i == f[j])\n\t\t\t\tfl = 1;\n\t\tif (fl)\n\t\t\tcout << \"O\";\n\t\telse\n\t\t\tcout << \"o\";\n\t}\n\tcout << \"\\n\";\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Eleven.json",
    "editorial_link": "https://codeforces.com/blog/entry/57420",
    "editorial": "Calculate the first Fibonacci sequence elements, where is the greatest\r\ninteger such that . Let be a string consisting of lowercase âoâ letters.\r\nThen for each , perform = âOâ. The answer is .Pseudo code:s = \"\"for i =\r\n0 to n-1 s[i] = âoâx = y = 1while y <= n s[y-1] = âOâ tmp = y y = y + x\r\nx = tmpprint(s)Total time complexity:\r\n",
    "hint": []
}