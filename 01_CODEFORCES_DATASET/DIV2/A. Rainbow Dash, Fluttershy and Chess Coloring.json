{
    "link": "https://codeforces.com//contest/1393/problem/A",
    "problemId": "693070",
    "problem_idx": "A",
    "shortId": "1393A",
    "contest_number": "1393",
    "problem_submissions": {
        "D": [
            89235864,
            89237678,
            89239942,
            89241904,
            89240571,
            89239873,
            89230308,
            89237378,
            89247700,
            89240803,
            89243160,
            89243648,
            89242883,
            89238243,
            89242864,
            89249422,
            89245780,
            89244250
        ],
        "B": [
            89221116,
            89217441,
            89220933,
            89222989,
            89220509,
            89223779,
            89220401,
            89219535,
            89219377,
            89227149,
            89220055,
            89224518,
            89222569,
            89225245,
            89223599,
            89220060,
            89222338,
            89225655
        ],
        "C": [
            89218957,
            89225521,
            89228764,
            89230329,
            89224448,
            89234176,
            89238147,
            89233693,
            89228718,
            89234223,
            89234984,
            89234287,
            89231225,
            89232086,
            89232825,
            89232005,
            89235490,
            89236144
        ],
        "A": [
            89218814,
            89212583,
            89214268,
            89213479,
            89214230,
            89213219,
            89213191,
            89220955,
            89212600,
            89213989,
            89213307,
            89215648,
            89216757,
            89215210,
            89215943,
            89213088,
            89214183
        ],
        "E1": [
            89281813
        ]
    },
    "name": "A. Rainbow Dash, Fluttershy and Chess Coloring",
    "statement": "One evening Rainbow Dash and Fluttershy have come up with a game. Since\r\nthe ponies are friends, they have decided not to compete in the game but\r\nto pursue a common goal. The game starts on a square flat grid, which\r\ninitially has the outline borders built up. Rainbow Dash and Fluttershy\r\nhave flat square blocks with size 1\r\ntimes1, Rainbow Dash has an infinite amount of light blue blocks,\r\nFluttershy has an infinite amount of yellow blocks. The blocks are\r\nplaced according to the following rule: each newly placed block must\r\ntouch the built on the previous turns figure by a side (note that the\r\noutline borders of the grid are built initially). At each turn, one pony\r\ncan place any number of blocks of her color according to the game\r\nrules.Rainbow and Fluttershy have found out that they can build patterns\r\non the grid of the game that way. They have decided to start with\r\nsomething simple, so they made up their mind to place the blocks to form\r\na . Rainbow Dash is well-known for her speed, so she is interested in\r\nthe minimum number of turns she and Fluttershy need to do to get a chess\r\ncoloring, covering the whole grid with blocks. Please help her find that\r\nnumber!Since the ponies can play many times on different boards, Rainbow\r\nDash asks you to find the minimum numbers of turns for several grids of\r\nthe games.The chess coloring in two colors is the one in which each\r\nsquare is neighbor by side only with squares of different colors.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define pb push_back\n#define pf push_front\n#define pob pop_back\n#define pof pop_front\n#define mp make_pair\n#define fi first\n#define se second\n\ntypedef long long lli;\ntypedef pair<int, int> ii;\ntypedef pair<lli, lli> ll;\n\nint main() {\n\tint tc, n;\n\tscanf(\"%d\", &tc);\n\twhile (tc--) {\n\t\tscanf(\"%d\", &n);\n\t\tprintf(\"%d\\n\", (n + 2) / 2);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Rainbow Dash, Fluttershy and Chess Coloring.json",
    "editorial_link": "https://codeforces.com//blog/entry/81161",
    "editorial": "By modeling the game on different grids it was possible to notice that\r\nthe answer is equal to . You can prove that this is the answer by using\r\ninduction method separately for grids with even and odd sides.Initially\r\nit was asked to solve the problem for rectangular grids. You can think\r\nabout this version of the problem.\r\n"
}