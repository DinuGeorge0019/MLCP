{
    "link": "https://codeforces.com//contest/887/problem/C",
    "problemId": "132442",
    "problem_idx": "C",
    "shortId": "887C",
    "contest_number": "887",
    "problem_submissions": {
        "C": [
            32030061,
            32024027,
            32022932,
            32023971,
            32025990,
            32021759,
            32021073,
            32020948,
            32028782,
            32032620,
            32021817,
            32022156,
            32018322,
            32023053,
            32031091,
            32022430,
            32023150,
            32024864,
            32025018
        ],
        "B": [
            32016513,
            32020265,
            32016897,
            32016065,
            32014442,
            32017172,
            32016855,
            32017293,
            32018525,
            32022079,
            32017001,
            32015887,
            32019052,
            32018896,
            32016338,
            32018006,
            32019593,
            32017984
        ],
        "A": [
            32013350,
            32013511,
            32013972,
            32013298,
            32013094,
            32016695,
            32014256,
            32015031,
            32013109,
            32016784,
            32013650,
            32021401,
            32015546,
            32014355,
            32013271,
            32013887,
            32014116,
            32014361
        ],
        "D": [
            32032150,
            32031487,
            32031629,
            32032905,
            32031887,
            32031366
        ]
    },
    "name": "C. Solution for Cube",
    "statement": "During the breaks between competitions, top-model Izabella tries to\r\ndevelop herself and not to be bored. For example, now she tries to solve\r\nRubik’s cube 2x2x2.It’s too hard to learn to solve Rubik’s cube\r\ninstantly, so she learns to understand if it’s possible to solve the\r\ncube in some state using 90-degrees rotation of one face of the cube in\r\nany direction.To check her answers she wants to use a program which will\r\nfor some state of cube tell if it’s possible to solve it using one\r\nrotation, described above.Cube is called solved if for each face of cube\r\nall squares on it has the same\r\ncolor.https://en.wikipedia.org/wiki/Rubik’s_Cube\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ll long long\n#define ull unsigned long long\n#define pii pair < int , int >\n#define pipii pair < int , pii >\n#define pid pair <int, double>\n#define F first\n#define S second\n#define pb push_back\n#define mp make_pair\n#define pp pop_back()\n#define sz size()\n#define iz insert\n#define lg length()\n#define FRNAME \"A\"\n#define inf (int)1e6\n#define fr freopen(FRNAME\".in\",\"r\",stdin); freopen (FRNAME\".out\",\"w\",stdout);\n#define fr2 freopen(\"input.txt\",\"r\",stdin); freopen (\"output.txt\",\"w\",stdout)\nint a[100];\nbool check (int q, int w, int e, int r)\n{\n\treturn (a[q] == a[w]) && (a[q] == a[e]) && (a[q] == a[r]);\n}\t\nbool solve()\n{\n\tif (check(9,11,6,8) &&\n\t\tcheck(22,24,10,12) &&\n\t\tcheck(1,3,21,23) &&\n\t\tcheck(5,7,2,4) &&\n\t\tcheck(13,14,16,15) &&\n\t\tcheck(17,19,20,18)) return true;\n\n\tif (check(1,3,6,8) &&\n\t\tcheck(5,7,10,12) &&\n\t\tcheck(9,11,21,23) &&\n\t\tcheck(22,24,2,4) &&\n\t\tcheck(13,14,16,15) &&\n\t\tcheck(17,19,20,18)) return true;\n\n\tif (check(13,14,7,8) &&\n\t\tcheck(5,6,19,20) &&\n\t\tcheck(17,18,23,24) &&\n\t\tcheck(21,22,15,16) &&\n\t\tcheck(1,2,3,4) &&\n\t\tcheck(9,10,11,12)) return true;\n\n\tif (check(17,18,7,8) &&\n\t\tcheck(21,22,19,20) &&\n\t\tcheck(13,14,23,24) &&\n\t\tcheck(5,6,15,16) &&\n\t\tcheck(1,2,3,4) &&\n\t\tcheck(9,10,11,12)) return true;\n\n\tif (check(1,2,14,16) &&\n\t\tcheck(9,10,13,15) &&\n\t\tcheck(11,12,17,19) &&\n\t\tcheck(3,4,18,20) &&\n\t\tcheck(5,6,7,8) &&\n\t\tcheck(21,22,23,24)) return true;\n\n\tif (check(11,12,14,16) &&\n\t\tcheck(3,4,13,15) &&\n\t\tcheck(1,2,17,19) &&\n\t\tcheck(9,10,18,20) &&\n\t\tcheck(5,6,7,8) &&\n\t\tcheck(21,22,23,24)) return true;\n\treturn false;\n}\t\nint main ()\n{\n\tfor (int i = 1; i <= 24; i++)\n\t{\n\t\tcin >> a[i];\n\t}\n\tcout << (solve() ? \"YES\" : \"NO\");\t\n\treturn 0;\n}\t"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Solution for Cube.json",
    "editorial_link": "https://codeforces.com//blog/entry/55584",
    "editorial": "The amount of variants of input data for which the answer is \"YES\" is not more than 12 without considering rearrangement of colours. They all could be written in an array.\n\nThe alternative solution is writing a function of rotating a specific edge of the cube and checking if it is solved.",
    "hint": []
}