{"link": "https://codeforces.com//contest/1679/problem/E", "problemId": "1399040", "problem_idx": "E", "shortId": "1679E", "contest_number": "1679", "problem_submissions": {"E": [157180775, 157191404, 157182377, 157177036, 157184415, 157176870, 157175927, 157179358, 157179949, 157181138, 157181082, 157188651, 158765685, 157182719, 157183341, 157204752, 157188040, 157183760, 157190456, 157188869], "F": [157169392, 157164382, 157193064, 157199663, 157199138, 157186552, 157273261, 157180874, 158765715, 157250679, 157197475, 157509965], "A": [157160334, 157139962, 157137818, 157155828, 157137804, 157138382, 157140445, 157138960, 157138642, 157138794, 157144480, 157142439, 162719211, 158765634, 157138332, 157138320, 157139854, 157140729, 157138982, 157137953, 157138211], "B": [157157060, 157145020, 157140369, 157158458, 157140367, 157140216, 157144197, 157146569, 157143365, 157142315, 157148129, 157146141, 157198440, 158765655, 157143823, 157143623, 157144426, 157145542, 157143138, 157142676, 157142878], "C": [157154751, 157170214, 157147368, 157161435, 157149801, 157145630, 157152376, 157151562, 157149876, 157147868, 157153893, 157150787, 157196725, 158765679, 157151559, 157154130, 157157802, 157152042, 157149676, 157150426, 157148575], "D": [157148745, 157180439, 157159044, 157144096, 157159383, 157154423, 157160087, 157161413, 157158556, 157158664, 157164328, 157159039, 157192557, 158765668, 157159304, 157162810, 157169333, 157162480, 157162127, 157163382, 157167439]}, "name": "E. Typical Party in Dorm", "statement": "You are given a string s of length n, which consists of the first 17\r\nlowercase Latin letters {a, b, c,\r\nldots, p, q} and question marks. And q queries. Each query is defined by\r\na set of pairwise distinct lowercase first 17 letters of the Latin\r\nalphabet, which can be used to replace the question marks in the string\r\ns.The answer to the query is the sum of the number of distinct\r\nsubstrings that are palindromes over all strings that can be obtained\r\nfrom the original string s by replacing question marks with available\r\ncharacters. The answer must be calculated modulo 998\r\n,244\r\n,353. Two substrings are different when their start and end positions in\r\nthe string are different. So, the number of different substrings that\r\nare palindromes for the string will be 4: , , , .Consider examples of\r\nreplacing question marks with letters. For example, from the string when\r\nquerying {a, b} you can get the strings or but you cannot get the\r\nstrings , , , , , or .Recall that a palindrome is a string that reads\r\nthe same from left to right as from right to left.\r\n", "solutions": ["#include<stdio.h>\n#include<iostream>\nusing namespace std;\nconst int mod=998244353,maxn=20,maxl=1005;\nint n,q,m;\nint f[maxn][1<<17],mul[maxn][maxl],imul[maxn][maxl];\nstring s,t;\nint ksm(int a,int b){\n\tint res=1;\n\twhile(b){\n\t\tif(b&1)\n\t\t\tres=1ll*res*a%mod;\n\t\ta=1ll*a*a%mod,b>>=1;\n\t}\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\",&n),cin>>s,scanf(\"%d\",&q),s=\" \"+s;\n\tfor(int i=1;i<=n;i++)\n\t\tm+=(s[i]=='?');\n\tfor(int i=1;i<=17;i++){\n\t\tmul[i][0]=imul[i][0]=1;\n\t\tint v0=i,v1=ksm(i,mod-2);\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tmul[i][j]=1ll*mul[i][j-1]*v0%mod,imul[i][j]=1ll*imul[i][j-1]*v1%mod;\n\t}\n\tfor(int c=1;c<=17;c++){//ji de gai\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint x=i,y=i,S=0,t=0;\n\t\t\twhile(x>=1&&y<=n){\n\t\t\t\tif(s[x]!='?'&&s[y]!='?'&&s[x]!=s[y])\n\t\t\t\t\tbreak;\n\t\t\t\tif(s[x]=='?'&&s[y]!='?')\n\t\t\t\t\tS|=(1<<(s[y]-97)),t++;\n\t\t\t\tif(s[x]!='?'&&s[y]=='?')\n\t\t\t\t\tS|=(1<<(s[x]-97)),t++;\n\t\t\t\tif(x<y&&s[x]=='?'&&s[y]=='?')\n\t\t\t\t\tt++;\n//\t\t\t\tprintf(\"x=%d y=%d c=%d S=%d t=%d\\n\",x,y,c,S,t);\n\t\t\t\tf[c][S]=(f[c][S]+imul[c][t])%mod;\n\t\t\t\tx--,y++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<n;i++){\n\t\t\tint x=i,y=i+1,S=0,t=0;\n\t\t\twhile(x>=1&&y<=n){\n\t\t\t\tif(s[x]!='?'&&s[y]!='?'&&s[x]!=s[y])\n\t\t\t\t\tbreak;\n\t\t\t\tif(s[x]=='?'&&s[y]!='?')\n\t\t\t\t\tS|=(1<<(s[y]-97)),t++;\n\t\t\t\tif(s[x]!='?'&&s[y]=='?')\n\t\t\t\t\tS|=(1<<(s[x]-97)),t++;\n\t\t\t\tif(s[x]=='?'&&s[y]=='?')\n\t\t\t\t\tt++;\n\t\t\t\tf[c][S]=(f[c][S]+imul[c][t])%mod;\n//\t\t\t\tprintf(\"x=%d y=%d c=%d S=%d t=%d\\n\",x,y,c,S,t);\n\t\t\t\tx--,y++;\n\t\t\t}\n\t\t}\n\t\tfor(int len=2,now=1;len<=(1<<17);len<<=1,now<<=1)\n\t\t\tfor(int i=0;i<(1<<17);i+=len)\n\t\t\t\tfor(int j=0;j<now;j++)\n\t\t\t\t\tf[c][i+j+now]=(f[c][i+j+now]+f[c][i+j])%mod;\n\t}\n\twhile(q--){\n\t\tint x,S=0;\n\t\tcin>>t;\n\t\tfor(int i=0;i<t.size();i++)\n\t\t\tS|=(1<<(t[i]-97));\n\t\tprintf(\"%d\\n\",1ll*f[t.size()][S]*mul[t.size()][m]%mod);\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "combinatorics", "dp", "strings"], "dificulty": "2400", "interactive": false}