{
    "link": "https://codeforces.com//contest/1143/problem/A",
    "problemId": "322166",
    "problem_idx": "A",
    "shortId": "1143A",
    "contest_number": "1143",
    "problem_submissions": {
        "F": [
            52053740,
            52050934,
            52050482,
            52062719,
            52055575,
            52054357,
            52076504
        ],
        "E": [
            52046060,
            52048486,
            52043358,
            52058930,
            52058895,
            52049207,
            55234591,
            52050524,
            52048224,
            52050760,
            52051220,
            52053112,
            52050926,
            52052963,
            52050945,
            52050663,
            52053672,
            52036984,
            52045903,
            52047555,
            52045657
        ],
        "D": [
            52040246,
            52046189,
            52043627,
            52047099,
            52042762,
            52041339,
            52043500,
            52043687,
            52042595,
            52044385,
            52045161,
            52053326,
            52047450,
            52055219,
            52044406,
            52056142
        ],
        "C": [
            52036464,
            52037535,
            52035451,
            52038786,
            52041257,
            52036692,
            52038846,
            52038521,
            52038180,
            52037738,
            52037545,
            52038495,
            52044091,
            52038551,
            52042781,
            52055743,
            52055719,
            52040142,
            52039670,
            52037936,
            52038436,
            52040034
        ],
        "B": [
            52033342,
            52033709,
            52032791,
            52033130,
            52035639,
            52033900,
            52034782,
            52034155,
            52034558,
            52034491,
            52039225,
            52034867,
            52038126,
            52034618,
            52038019,
            52033785,
            52033506,
            52033683,
            52034719,
            52033623
        ],
        "A": [
            52030926,
            52030199,
            52030454,
            52030456,
            52032409,
            52030129,
            52032198,
            52031102,
            52031072,
            52030448,
            52032154,
            52030694,
            52034881,
            52030728,
            52032731,
            52030521,
            52030424,
            52030417,
            52030138,
            52030163
        ]
    },
    "name": "A. The Doors",
    "statement": "Three years have passes and nothing changed. It is still raining in\r\nLondon, and Mr. Black has to close all the doors in his home in order to\r\nnot be flooded. Once, however, Mr. Black became so nervous that he\r\nopened one door, then another, then one more and so on until he opened\r\nall the doors in his house.There are exactly two exits from Mr. Black’s\r\nhouse, let’s name them left and right exits. There are several doors in\r\neach of the exits, so each door in Mr. Black’s house is located either\r\nin the left or in the right exit. You know where each door is located.\r\nInitially all the doors are closed. Mr. Black can exit the house if and\r\nonly if all doors in at least one of the exits is open. You are given a\r\nsequence in which Mr. Black opened the doors, please find the smallest\r\nindex k such that Mr. Black can exit the house after opening the first k\r\ndoors.We have to note that Mr. Black opened each door at most once, and\r\nin the end all doors became open.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=200100;\nint a[N],n;\nint main(){\n\tcin>>n;\n\tfor (int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tint j=n;\n\twhile (a[j]==a[n])j--;\n\tcout<<j<<endl;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. The Doors.json",
    "editorial_link": "https://codeforces.com//blog/entry/66301",
    "editorial": "Letâs walk through the array and find for each exit the door, that was\r\nopened last. Then the answer is minimum of the numbers of these doors.\r\n",
    "hint": []
}