{"link": "https://codeforces.com//contest/6/problem/B", "problemId": "23", "problem_idx": "B", "shortId": "6B", "contest_number": "6", "problem_submissions": {"E": [26175, 26385, 26342, 26418, 26467, 26465, 26505, 26312, 26410, 26503, 26782, 26628, 26550, 26677, 26607, 26539, 26533, 26735, 26936], "C": [25891, 25921, 25930, 25897, 25978, 25997, 26089, 26070, 26100, 26052, 25937, 26061, 25992, 26173, 26244, 25966, 26354, 25996], "B": [25826, 25819, 25838, 25999, 25888, 25890, 25968, 25955, 25976, 25834, 25830, 25878, 25825, 25998, 26069, 25874, 25975, 26190], "A": [25745, 25746, 25756, 25758, 25781, 25768, 25956, 25861, 25763, 25747, 25767, 25761, 25753, 25813, 25837, 25764, 25755, 25792], "D": [2822667, 27721, 2820593, 28387]}, "name": "B. President s Office", "statement": "President of Berland has a very vast office-room, where, apart from him,\r\nwork his subordinates. Each subordinate, as well as President himself,\r\nhas his own desk of a unique colour. Each desk is rectangular, and its\r\nsides are parallel to the office walls. One day President decided to\r\nestablish an assembly, of which all his deputies will be members.\r\nUnfortunately, he does not remember the exact amount of his deputies,\r\nbut he remembers that the desk of each his deputy is adjacent to his own\r\ndesk, that is to say, the two desks (President\u2019s and each deputy\u2019s) have\r\na common side of a positive length.The office-room plan can be viewed as\r\na matrix with rows and columns. Each cell of this matrix is either\r\nempty, or contains a part of a desk. An uppercase Latin letter stands\r\nfor each desk colour. The period character ( ) stands for an empty cell.\r\n", "solutions": ["#include <iostream>\n#include <set>\n#include <string>\nusing namespace std;\n\nchar tab[200][200];\n\nint main() {\n    for(int i=0;i<111;i++)\n        for(int j=0;j<111;j++) tab[i][j]='.';\n    set<char> s;\n    s.insert('.');\n    char p;\n    int n,m;\n    string buf;\n    cin >> n >> m >> buf;\n    p = buf[0];\n    for(int i=1;i<=n;i++) {\n        cin >> buf;\n        for(int j=1;j<=m;j++) tab[i][j]=buf[j-1];\n    }\n    s.insert(p);\n    int dx[]={-1,0,1,0};\n    int dy[]={0,-1,0,1};\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++) \n            if (tab[i][j]==p)\n                for(int k=0;k<4;k++)\n                    s.insert(tab[i+dx[k]][j+dy[k]]);\n    \n    cout << s.size()-2<<endl;\n    //for(set<char>::iterator it=s.begin();it!=s.end();++it)\n      //  cout << *it << endl;\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1100", "interactive": false}