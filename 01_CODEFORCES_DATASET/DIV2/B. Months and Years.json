{
    "link": "https://codeforces.com//contest/899/problem/B",
    "problemId": "139221",
    "problem_idx": "B",
    "shortId": "899B",
    "contest_number": "899",
    "problem_submissions": {
        "E": [
            33341966,
            33340018,
            33344607,
            33341901,
            33341539,
            33344275,
            33337380,
            33342849,
            33340726,
            33347352,
            33343799,
            33343759,
            33341387,
            33344491,
            33344757,
            33341661,
            33346130,
            33338732
        ],
        "C": [
            33340695,
            33335345,
            33336434,
            33335120,
            33335041,
            33335499,
            33334442,
            33348052,
            33335755,
            33342632,
            33337468,
            33334609,
            33334793,
            33334208,
            33335451,
            33337214,
            33334080,
            33333085,
            33333444,
            33331734
        ],
        "F": [
            33338461,
            33343719,
            33339590,
            33345961,
            33344150,
            33347582,
            33346148,
            33345517,
            33343018,
            33342469,
            33347771,
            33346884,
            33346523,
            33344745,
            33367339,
            33341779,
            33351995,
            33344839,
            33365793
        ],
        "D": [
            33336515,
            33337716,
            33334973,
            33338435,
            33339737,
            33338654,
            33342392,
            33336907,
            33337363,
            33345764,
            33341905,
            33342131,
            33336716,
            33359470,
            33338983,
            33337743,
            33339386,
            33340477,
            33334813
        ],
        "B": [
            33333018,
            33334262,
            33335995,
            33336742,
            33345182,
            33334298,
            33344445,
            33333097,
            33339162,
            33346906,
            33355091,
            33333588,
            33336070,
            33332639,
            33334734,
            33332707,
            33332034,
            33335177,
            33341675
        ],
        "A": [
            33330877,
            33331991,
            33335753,
            33330957,
            33342381,
            33331004,
            33335366,
            33331266,
            33330748,
            33330942,
            33330958,
            33330948,
            33331773,
            33330761,
            33330943,
            33331310,
            33330809,
            33330687,
            33330860,
            33341110
        ]
    },
    "name": "B. Months and Years",
    "statement": "Everybody in Russia uses Gregorian calendar. In this calendar there are\r\ndays in January, or days in February (depending on whether the year is\r\nleap or not), days in March, days in April, days in May, in June, in\r\nJuly, in August, in September, in October, in November, in December.A\r\nyear is leap in one of two cases: either its number is divisible by ,\r\nbut not divisible by , or is divisible by . For example, the following\r\nyears are leap: , , but years and are not leap.In this problem you are\r\ngiven () integers , and you have to check if these integers could be\r\ndurations in days of consecutive months, according to Gregorian\r\ncalendar. Note that these months could belong to several consecutive\r\nyears. In other words, check if there is a month in some year, such that\r\nits duration is days, duration of the next month is days, and so on.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define biubiu {puts(\"YES\");exit(0);}\nusing namespace std;\nint pingping[]={31,28,31,30,31,30,31,31,30,31,30,31,31,28,31,30,31,30,31,31,30,31,30,31,31,28,31,30,31,30,31,31,30,31,30,31};\nint pingrun[]={31,28,31,30,31,30,31,31,30,31,30,31,31,28,31,30,31,30,31,31,30,31,30,31,31,29,31,30,31,30,31,31,30,31,30,31,31,28,31,30,31,30,31,31,30,31,30,31};\nint runping[]={31,28,31,30,31,30,31,31,30,31,30,31,31,29,31,30,31,30,31,31,30,31,30,31,31,28,31,30,31,30,31,31,30,31,30,31,31,28,31,30,31,30,31,31,30,31,30,31};\nint n,a[25];\nbool checkpingping(){\n\tfor(int i=0;i<12;i++){\n\t\tbool f=true;\n\t\tfor(int j=0;j<n;j++)\n\t\t\tif(pingping[i+j]!=a[j])\n\t\t\t\tf=false;\n\t\tif(f)return true;\n\t}\n\treturn false;\n}\nbool checkpingrun(){\n\tfor(int i=0;i<24;i++){\n\t\tbool f=true;\n\t\tfor(int j=0;j<n;j++)\n\t\t\tif(pingrun[i+j]!=a[j])\n\t\t\t\tf=false;\n\t\tif(f)return true;\n\t}\n\treturn false;\n}\nbool checkrunping(){\n\tfor(int i=0;i<24;i++){\n\t\tbool f=true;\n\t\tfor(int j=0;j<n;j++)\n\t\t\tif(runping[i+j]!=a[j])\n\t\t\t\tf=false;\n\t\tif(f)return true;\n\t}\n\treturn false;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)scanf(\"%d\",&a[i]);\n\tif(checkpingping())biubiu\n\tif(checkpingrun())biubiu\n\tif(checkrunping())biubiu\n\tputs(\"NO\");\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Months and Years.json",
    "editorial_link": "https://codeforces.com//blog/entry/56392",
    "editorial": "Note, that , so we should consider the following cycle: not leap-year\r\nleap-year not leap-year not leap-year. This cycle repeats every years,\r\nexcept in some cases. We should generate an array describing the\r\nduration of the months in the described cycle. After that we should\r\ncheck that the given sequence can be found in the generated array. For\r\nexample, we can brute the beginning of the sequence in the array and\r\ncheck the correspondence of the elements of the given sequence to the\r\ncorresponding elements of the generated array.\r\n"
}