{"link": "https://codeforces.com//contest/579/problem/B", "problemId": "35411", "problem_idx": "B", "shortId": "579B", "contest_number": "579", "problem_submissions": {"E": [13036239, 13035128, 13044465, 13040385, 13048780, 13043946, 13047015, 13047576, 13048735, 13050917, 13038574, 13049143, 13046456, 13050423, 13039674, 13038651, 13044189, 13066134, 13058250], "C": [13034420, 13051906, 13043085, 13037760, 13036947, 13075503, 13037513, 13040485, 13036114, 13034214, 13042749, 13043422, 13069668, 13041260, 13046486, 13047106, 13036571, 13037203, 13035739], "D": [13032546, 13042119, 13042301, 13032869, 13034019, 13032523, 13043344, 13042940, 13043902, 13044341, 13042849, 13038790, 13046469, 13052483, 13033165, 13039327], "B": [13028607, 13043435, 13032514, 13042581, 13031837, 13029292, 13037865, 13029204, 13037306, 13030841, 13030662, 13045162, 13030689, 13032289, 13029852, 13037989, 13031677, 13029359, 13029903], "F": [23642514, 13069450], "A": [13026446, 13029125, 13041159, 13028187, 13026318, 13027263, 13026324, 13028233, 13028363, 13026488, 13044113, 13027133, 13026585, 13026495, 13027733, 13027555, 13026813, 13026529]}, "name": "B. Finding Team Member", "statement": "There is a programing contest named SnakeUp, people want to compete for\r\nit. In order to attend this contest, people need to form teams of\r\nexactly two people. You are given the strength of each possible\r\ncombination of two people. All the values of the strengths are .Every\r\ncontestant hopes that he can find a teammate so that their team s\r\nstrength is as high as possible. That is, a contestant will form a team\r\nwith highest strength possible by choosing a teammate from ones who are\r\nwilling to be a teammate with him/her. More formally, two people and may\r\nform a team if each of them is the best possible teammate (among the\r\ncontestants that remain unpaired) for the other one. Can you determine\r\nwho will be each person s teammate?\r\n", "solutions": ["//#include \"testlib.h\"\n//#include <spoj.h>\n\n#include <iostream>\n#include <stdio.h>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <math.h>\n#include <assert.h>\n#include <time.h>\n#include <memory.h>\n#include <set>\n#include <numeric>\n#include <map>\n#include <queue>\n#include <stack>\n\nusing namespace std;\n\nint p[1111];\n\nint main() {\n    ios::sync_with_stdio(0);\n    int n, x;\n    cin >> n;\n    n *= 2;\n    vector<pair<int, pair<int, int> > > v;\n    for(int i = 2; i <= n; ++i)\n        for(int j = 1; j < i; ++j) {\n            cin >> x;\n            v.push_back({x, {i, j}});\n        }\n    sort(v.begin(), v.end()); reverse(v.begin(), v.end());\n    for(int i = 0; i < v.size(); ++i) {\n        if (p[v[i].second.first] == 0 && p[v[i].second.second] == 0) {\n            p[v[i].second.first] = v[i].second.second;\n            p[v[i].second.second] = v[i].second.first;\n        }\n    }\n    \n    for(int i = 1; i <= n; ++i)\n        cout << p[i] << \" \\n\"[i==n];\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "implementation", "sortings"], "dificulty": "1300", "interactive": false}