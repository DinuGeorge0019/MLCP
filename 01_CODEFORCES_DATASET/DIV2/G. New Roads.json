{"link": "https://codeforces.com//contest/746/problem/G", "problemId": "85375", "problem_idx": "G", "shortId": "746G", "contest_number": "746", "problem_submissions": {"F": [23098160, 23101734, 23098656, 23102651, 23103415, 23107961, 23097485, 23103112, 23103543, 23134726, 23104852, 23131476], "G": [23093374, 23095345, 23096484, 23099554, 23094331, 23098793, 32644514, 23097257, 23097589, 23088737, 23098418, 23099935, 23101255, 23098493, 23095437, 23098070, 23097715, 23102940, 23099714, 23102329, 23100307], "E": [23090983, 23091838, 23090400, 23090385, 23091224, 23095595, 23092637, 23090974, 23092694, 23093218, 23092131, 23090847, 23094473, 23098598, 23094014, 23142601, 23096689, 23092749, 23095909, 23093965, 23096216], "C": [23089009, 23086489, 23093136, 23087647, 23090881, 23086795, 23086617, 23094723, 23086814, 23087320, 23089539, 23108446, 23092756, 23088603, 23090345, 23087808, 23091627], "D": [23086805, 23088293, 23086244, 23094627, 23088889, 23093685, 23088867, 23088313, 23096227, 23088723, 23089318, 23104824, 23090867, 23090879, 23091937, 23088754, 23089647, 23091296, 23088886, 23089358], "B": [23084224, 23084449, 23084370, 23084955, 23085227, 23087278, 23084159, 23084283, 23090451, 23083745, 23084649, 23085347, 23084771, 23089523, 23085956, 23085476, 23085206, 23084905, 23085967], "A": [23082169, 23082385, 23081947, 23082691, 23082163, 23085385, 23081965, 23082429, 23082420, 23082009, 23082118, 23082810, 23086953, 23088467, 23082662, 23082884, 23082308, 23082652, 23082888]}, "name": "G. New Roads", "statement": "There are cities in Berland, each of them has a unique id an integer\r\nfrom to , the capital is the one with id . Now there is a serious\r\nproblem in Berland with roads there are no roads.That is why there was a\r\ndecision to build roads so that there will be exactly one simple path\r\nbetween each pair of cities.In the construction plan integers were\r\nstated, where equals to the distance from the capital to the most\r\ndistant city, concerning new roads. equals the number of cities which\r\nshould be at the distance from the capital. The distance between two\r\ncities is the number of roads one has to pass on the way from one city\r\nto another. Also, it was decided that among all the cities except the\r\ncapital there should be exactly cities with exactly one road going from\r\neach of them. Such cities are dead-ends and can\u2019t be economically\r\nattractive. In calculation of these cities the capital is not taken into\r\nconsideration regardless of the number of roads from it. Your task is to\r\noffer a plan of road\u2019s construction which satisfies all the described\r\nconditions or to inform that it is impossible.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define ll int\n#define ld long double\n#define N ((ll)201*1000)\n#define INF ((ll)2e9)\n#define MOD ((ll)1e9+7)\nll tavan(ll x,ll y){ll res=1;while(y){res*=y%2?x:1;res%=MOD;x*=x;x%=MOD;y/=2;}return res;}\n\nll n,t,k,a[N],num=2,par[N],res;\nvector <ll> leaf[N],all[N];\n\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);\n    cin>>n>>t>>k;\n    for(int i=1;i<=t;i++)\n    {\n    \tcin>>a[i];\n    \tll now_par=num-1;\n    \tfor(int j=0;j<a[i];j++)\n\t\t{\n\t\t\tif(j!=a[i]-1 || i==t)leaf[i].push_back(num),res++;\n\t\t\tall[i].push_back(num);\n\t\t\tpar[num++]=now_par;\n\t\t}\n\t}\n\tif(res<k)return cout<<-1,0;\n\tfor(int i=t;i>=2;i--)\n\t{\n\t\twhile(res!=k && (ll)all[i].size()>1 && (ll)leaf[i-1].size())\n\t\t{\n\t\t\tpar[all[i].back()]=leaf[i-1].back();\n\t\t\tall[i].pop_back();leaf[i-1].pop_back();\n\t\t\tres--;\n\t\t}\n\t}\n\tif(res!=k)return cout<<-1,0;\n\tcout<<n<<\"\\n\";\n\tfor(int i=2;i<=n;i++)\n\t\tcout<<par[i]<<\" \"<<i<<\"\\n\";\n    return 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "graphs", "trees"], "dificulty": "2100", "interactive": false}