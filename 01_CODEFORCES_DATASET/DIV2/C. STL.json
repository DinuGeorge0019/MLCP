{
    "link": "https://codeforces.com//contest/190/problem/C",
    "problemId": "1331",
    "problem_idx": "C",
    "shortId": "190C",
    "contest_number": "190",
    "problem_submissions": {
        "E": [
            1695983,
            1695624,
            1697050,
            1695708,
            1695790
        ],
        "D": [
            1695462,
            1695449,
            1695835,
            1695364,
            1695377,
            1695368,
            1695946,
            1696839,
            1695863,
            1695763,
            1694579,
            1694803,
            1694964,
            1696526,
            1694501,
            1695160
        ],
        "C": [
            1694760,
            1694875,
            1695279,
            1694796,
            1694088,
            1695233,
            1696929,
            1695405,
            1695351
        ],
        "B": [
            1692770,
            1693945,
            1696858,
            1693150,
            1695603,
            1696081,
            1696565
        ],
        "A": [
            1691163,
            1691408,
            1691387,
            1691381,
            1691523,
            1691170,
            1691984,
            1691301,
            1691155,
            1691192,
            1691038,
            1690947,
            1691166,
            1691782,
            1695491,
            1691072
        ]
    },
    "name": "C. STL",
    "statement": "Vasya used to be an accountant before the war began and he is one of the\r\nfew who knows how to operate a computer, so he was assigned as the\r\nprogrammer.We all know that programs often store sets of integers. For\r\nexample, if we have a problem about a weighted directed graph, its edge\r\ncan be represented by three integers: the number of the starting vertex,\r\nthe number of the final vertex and the edge’s weight. So, as Vasya was\r\ntrying to represent characteristics of a recently invented robot in his\r\nprogram, he faced the following problem.Vasya is not a programmer, so he\r\nasked his friend Gena, what the convenient way to store integers is.\r\nGena used to code in language X– and so he can use only the types that\r\noccur in this language. Let’s define, what a \"type\" is in language X–:\r\nFirst, a type is a string \"\". Second, a type is a string that starts\r\nwith \"\", then followed by angle brackets listing comma-separated other\r\ntypes of language X–. This record contains no spaces. No other strings\r\ncan be regarded as types. More formally: := | . For example, Gena uses\r\nthe following type for graph edges: .Gena was pleased to help Vasya, he\r\ndictated to Vasya a type of language X–, that stores integers.\r\nUnfortunately, Gena was in a hurry, so he omitted the punctuation. Now\r\nGena has already left and Vasya can’t find the correct punctuation,\r\nresulting in a type of language X–, however hard he tries.Help Vasya and\r\nadd the punctuation marks so as to receive the valid type of language\r\nX–. Otherwise say that the task is impossible to perform.\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <string.h>\nint cnt,tcnt=0;\nchar s[1000010][5];\nint find(int id)\n{\n    if (id>=cnt) return cnt+100;\n    if (strcmp(s[id],\"int\")==0)\n    {\n        return id+1;\n    }\n    else\n    {\n        int next=find(id+1);\n        next=find(next);\n        return next;\n    }\n}\nint find2(int id)\n{\n    if (id>=cnt) return cnt+100;\n    if (strcmp(s[id],\"int\")==0)\n    {\n        printf(\"int\");\n        return id+1;\n    }\n    else\n    {\n        printf(\"pair<\");\n        int next=find2(id+1);\n        printf(\",\");\n        next=find2(next);\n        printf(\">\");\n        return next;\n    }\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    cnt=0;\n    while (scanf(\"%s\",s[cnt])==1) cnt++;\n    if (find(0)==cnt)\n    {\n        find2(0);\n        puts(\"\");\n    }\n    else\n        puts(\"Error occurred\");\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. STL.json",
    "editorial_link": "https://codeforces.com//blog/entry/4556",
    "editorial": "In this problem we have an array of strings , where or .Letâs consider =\r\nthe difference between number of \"pair\" and \"int\" int the subarray .Than\r\nwe can prove that the type can be reestablished from the array for and .\r\nThis can be proved using mathematical induction, the parameter is the\r\nnumber of -s in the array.And how to find the solution, if we know that\r\nis exists? Consider the function , which builds the type beginning in\r\nthe position and returns the index, next to the position where it\r\nfinished building of type. How it works? If , then the function prints\r\nand returns . Else it prints , is launched, let it returns . Then we\r\nprint and launch (it returns ), then we print and return .We can not to\r\ndo check if the type can be reestablished from the array in the\r\nbeginning: launch and print \"Error occurred\" if there became some\r\ncontradiction during the building of type.\r\n",
    "hint": []
}