{"link": "https://codeforces.com//contest/631/problem/C", "problemId": "50474", "problem_idx": "C", "shortId": "631C", "contest_number": "631", "problem_submissions": {"D": [16497522, 16499633, 16493773, 16494892, 16499612, 16496131, 16500541, 16496189, 16496051, 16496096, 16496795, 16496029, 16497137, 16492337, 16499122, 16499237, 16493359, 16497887], "B": [16495030, 16489061, 16486659, 16487643, 16488029, 16489630, 16489917, 16489099, 16489411, 16488403, 16487977, 16488126, 16487679, 16488914, 16488419, 16487198, 16487289, 16490683, 16488019, 16489321], "A": [16494676, 16486534, 16486041, 16486092, 16486307, 16490385, 16486724, 16487325, 16488701, 16486887, 16486812, 16486989, 16486391, 16488010, 16486032, 16486094, 16486005, 16486116, 16486446, 16486353], "E": [16494439, 16497634, 16498079, 16498605, 16510405, 16640523, 34966720], "C": [16487628, 16491468, 16495480, 16491148, 16494024, 16488408, 16494546, 16492668, 16492714, 16493264, 16490967, 16493139, 16492497, 16492510, 16493001, 16497861, 16491052, 16495036, 16496778, 16492352]}, "name": "C. Report", "statement": "Each month Blake gets the report containing main economic indicators of\r\nthe company \"Blake Technologies\". There are commodities produced by the\r\ncompany. For each of them there is exactly one integer in the final\r\nreport, that denotes corresponding revenue. Before the report gets to\r\nBlake, it passes through the hands of managers. Each of them may reorder\r\nthe elements in some order. Namely, the -th manager either sorts first\r\nnumbers in non-descending or non-ascending order and then passes the\r\nreport to the manager , or directly to Blake (if this manager has number\r\n).Employees of the \"Blake Technologies\" are preparing the report right\r\nnow. You know the initial sequence of length and the description of each\r\nmanager, that is value and his favourite order. You are asked to speed\r\nup the process and determine how the final report will look like.\r\n", "solutions": ["#include <iostream>\n#include <set>\nusing namespace std;\n\nconst int N = 200011;\n\nmultiset <int> ms;\n\npair <int, int> sta[N];\nint a[N];\n\nint main()\n{\n\tios :: sync_with_stdio(false);\n\tint n, m;\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\tint x;\n\t\tcin >> x;\n\t\t//ms.insert(x);\n\t\ta[i] = x;\n\t}\n\tint top = 0;\n\tfor(int i = 0; i < m; i ++)\n\t{\n\t\tint t, r;\n\t\tcin >> t >> r;\n\t\twhile(top > 0 && r >= sta[top - 1].first)\n\t\t\ttop --;\n\t\tsta[top ++] = {r, t};\n\t}\n\tsta[top ++] = {0, 0};\n\tfor(int i = 1; i <= sta[0].first; i ++)\n\t\tms.insert(a[i]);\n\tfor(int i = 0; i < top - 1; i ++)\n\t\tif(sta[i].second == 1)\n\t\t\tfor(int j = sta[i].first; j > sta[i + 1].first; j --)\n\t\t\t{\n\t\t\t\tauto it = ms.rbegin();\n\t\t\t\ta[j] = *it;\n\t\t\t\tms.erase(ms.find(*it));\n\t\t\t}\n\t\telse\n\t\t\tfor(int j = sta[i].first; j > sta[i + 1].first; j --)\n\t\t\t{\n\t\t\t\tauto it = ms.begin();\n\t\t\t\ta[j] = *it;\n\t\t\t\tms.erase(it);\n\t\t\t}\n\tfor(int i = 1; i <= n; i ++)\n\t\tcout << a[i] << ' ';\n\tcout << '\\n';\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "sortings"], "dificulty": "1700", "interactive": false}