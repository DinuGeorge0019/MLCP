{
    "link": "https://codeforces.com//contest/583/problem/B",
    "problemId": "37191",
    "problem_idx": "B",
    "shortId": "583B",
    "contest_number": "583",
    "problem_submissions": {
        "E": [
            13375753,
            13396222
        ],
        "D": [
            13371700,
            13375834,
            13375664,
            13375798,
            13376138,
            13377993,
            13375935,
            13375839,
            13375159,
            13377276,
            13376289,
            13377157,
            13375820,
            13376745,
            13376124,
            13377422,
            13377342,
            13377605
        ],
        "B": [
            13364674,
            13365201,
            13363126,
            13365327,
            13365425,
            13364429,
            13367401,
            13370194,
            13367295,
            13364694,
            13364942,
            13365660,
            13367313,
            13366206,
            13367386,
            13368153,
            13364343,
            13366693
        ],
        "A": [
            13362665,
            13362396,
            13364500,
            13362804,
            13362621,
            13362398,
            13364299,
            13368142,
            13363751,
            13362641,
            13362459,
            13362661,
            13364238,
            13362509,
            13363582,
            13363832,
            13362516,
            13363164
        ],
        "C": [
            13368419,
            13368334,
            13370522,
            13369874,
            13370412,
            13370222,
            13366293,
            13372301,
            13369921,
            13372160,
            13372319,
            13372641,
            13371990,
            13372547,
            13373001,
            13368713,
            13370537
        ]
    },
    "name": "B. Robot s Task",
    "statement": "Robot Doc is located in the hall, with computers stand in a line,\r\nnumbered from left to right from to . Each computer contains piece of\r\ninformation, each of which Doc wants to get eventually. The computers\r\nare equipped with a security system, so to crack the -th of them, the\r\nrobot needs to collect at least any pieces of information from the other\r\ncomputers. Doc can hack the computer only if he is right next to it.The\r\nrobot is assembled using modern technologies and can move along the line\r\nof computers in either of the two possible directions, but the change of\r\ndirection requires a large amount of resources from Doc. Tell the\r\nminimum number of changes of direction, which the robot will have to\r\nmake to collect all parts of information if initially it is next to\r\ncomputer with number . that there exists at least one sequence of the\r\nrobot’s actions, which leads to the collection of all information.\r\nInitially Doc doesn’t have any pieces of information.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint n;\nint a[1005];\nint main()\n{\n    scanf(\"%d\",&n);\n    int cnt=0,ans=0;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",a+i);\n    while(1)\n    {\n        for(int i=1;i<=n;i++)\n            if(a[i]!=-1&&cnt>=a[i])cnt++,a[i]=-1;\n        if(cnt<n)ans++;\n        else break;\n        for(int i=n;i>=1;i--)\n            if(a[i]!=-1&&cnt>=a[i])cnt++,a[i]=-1;\n        if(cnt<n)ans++;\n        else break;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Robot s Task.json",
    "editorial_link": "https://codeforces.com//blog/entry/20692",
    "editorial": "It is always optimal to pass all the computers in the row, starting from 1-st to n-th, then from n-th to first, then again from first to n-th, etc. and collecting the information parts as possible, while not all of them are collected.\n\nSuch way gives robot maximal use of every direction change. O(n2) solution using this approach must have been passed system tests.",
    "hint": []
}