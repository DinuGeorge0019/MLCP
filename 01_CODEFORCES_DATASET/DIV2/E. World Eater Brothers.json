{"link": "https://codeforces.com//contest/239/problem/E", "problemId": "2120", "problem_idx": "E", "shortId": "239E", "contest_number": "239", "problem_submissions": {"E": [2503391, 2503636, 2508718, 2504091, 2504222, 2503009, 2503604, 2504097, 2504475, 2508764, 2503840], "B": [2500622, 2501438, 2500637, 2501733, 2500564, 2500710, 2504655, 2501496, 2501817, 2501834, 2508769], "C": [2500280, 2499958, 2501166, 2500529, 2502431, 2501910, 2500357, 2500775, 2504721, 2502212, 2502257, 2500194, 2502029, 2500713, 2500815, 2500443, 2501561, 2504348], "A": [2498489, 2501638, 2498087, 2498849, 2498385, 2498220, 2500674, 2498079, 2498264, 2499139, 2498265, 2498039, 2498269, 2498638, 2498174, 2499123, 2498500, 2499003], "D": [2504916, 2503214, 2503771, 2503245, 2503673, 2503846, 2504310, 2504271]}, "name": "E. World Eater Brothers", "statement": "You must have heard of the two brothers dreaming of ruling the world.\r\nWith all their previous plans failed, this time they decided to\r\ncooperate with each other in order to rule the world. As you know there\r\nare countries in the world. These countries are connected by directed\r\nroads. If you don\u2019t consider direction of the roads there is a unique\r\npath between every pair of countries in the world, passing through each\r\nroad at most once. Each of the brothers wants to establish his reign in\r\nsome country, then it\u2019s possible for him to control the countries that\r\ncan be reached from his country using directed roads. The brothers can\r\nrule the world if there exists at most two countries for brothers to\r\nchoose (and establish their reign in these countries) so that any other\r\ncountry is under control of at least one of them. In order to make this\r\npossible they want to change the direction of minimum number of roads.\r\nYour task is to calculate this minimum number of roads.\r\n", "solutions": ["#include <stdio.h>\n#include <stdlib.h>\n\nint n, i, a, b, sum, f[10005][5];\nint e[10005], succ[10005], last[10005], tag[10005];\n\nvoid dfs(int Now, int Father);\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i < n; i++)\n\t{\n\t\tscanf(\"%d %d\", &a, &b);\n\t\te[++sum] = b, succ[sum] = last[a], last[a] = sum;\n\t\te[++sum] = a, succ[sum] = last[b], last[b] = sum, tag[sum] = 1;\n\t}\n\t\n\tdfs(1, 0);\n\tprintf(\"%d\\n\", f[1][2]);\n\treturn 0;\n}\n\nvoid dfs(int Now, int Father)\n{\n\tint x, y, a, b, s, ss, xx;\n\tfor (x = last[Now]; x != 0; x = succ[x])\n\t{\n\t\tif (e[x] == Father)\n\t\t\tcontinue;\n\t\tif (tag[x] == 1)\n\t\t\tf[Now][0]++;\n\t\tdfs(e[x], Now);\n\t\tf[Now][0] += f[e[x]][0];\n\t}\n\t\n\tss = f[Now][1] = f[Now][2] = f[Now][3] = f[Now][0];\n\tfor (x = last[Now]; x != 0; x = succ[x])\n\t{\n\t\tif (e[x] == Father)\n\t\t\tcontinue;\n\t\tif (tag[x] == 1)\n\t\t\ts = ss - 1;\n\t\telse\n\t\t\ts = ss;\n\t\txx = s - f[e[x]][0] + f[e[x]][1];\n\t\tif (tag[x] == 0)\n\t\t{\n\t\t\tif (xx < f[Now][3])\n\t\t\t\tf[Now][3] = xx;\n\t\t\txx++;\n\t\t}\n\t\t\n\t\tif (xx < f[Now][1])\n\t\t\tf[Now][1] = xx;\n\t\t\n\t\txx = s - f[e[x]][0] + f[e[x]][3];\n\t\tif (tag[x] == 1)\n\t\t\txx++;\n\t\tif (xx < f[Now][3])\n\t\t\tf[Now][3] = xx;\n\t\t\n\t\txx = s - f[e[x]][0] + f[e[x]][2];\n\t\tif (tag[x] == 0)\n\t\t\txx++;\n\t\tif (xx < f[Now][2])\n\t\t\tf[Now][2] = xx;\n\t\t\n\t\txx = s - f[e[x]][0] + f[e[x]][1];\n\t\tif (xx < f[Now][2])\n\t\t\tf[Now][2] = xx;\n\t\txx = s - f[e[x]][0] + f[e[x]][3];\n\t\tif (tag[x] == 1)\n\t\t\txx++;\n\t\tif (xx < f[Now][2])\n\t\t\tf[Now][2] = xx;\n\t}\n\t\n\tif (f[Now][1] < f[Now][3])\n\t\tf[Now][3] = f[Now][1];\n\t\n\tfor (x = last[Now]; x != 0; x = succ[x])\n\t\tfor (y = last[Now]; y !=0; y = succ[y])\n\t\t{\n\t\t\ta = e[x];\n\t\t\tb = e[y];\n\t\t\ts = ss;\n\t\t\tif (tag[x] == 1)\n\t\t\t\ts--;\n\t\t\tif (tag[y] == 1)\n\t\t\t\ts--;\n\t\t\tif (a == Father || b == Father || a == b)\n\t\t\t\tcontinue;\n\t\t\txx = s - f[a][0] - f[b][0] + f[a][1] + f[b][1];\n\t\t\tif (tag[x] == 0 && tag[y] == 0)\n\t\t\t\txx++;\n\t\t\tif (xx < f[Now][2])\n\t\t\t\tf[Now][2] = xx;\n\t\t\txx = s - f[a][0] - f[b][0] + f[a][1] + f[b][3];\n\t\t\tif (tag[x] == 0)\n\t\t\t\txx++;\n\t\t\tif (tag[y] == 1)\n\t\t\t\txx++;\n\t\t\tif (xx < f[Now][2])\n\t\t\t\tf[Now][2] = xx;\n\t\t}\n\t\n\tif (f[Now][1] < f[Now][2])\n\t\tf[Now][2] = f[Now][1];\n\treturn;\n}\n"], "input": "", "output": "", "tags": [], "dificulty": "2100", "interactive": false}