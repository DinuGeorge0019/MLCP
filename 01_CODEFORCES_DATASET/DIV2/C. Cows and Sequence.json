{"link": "https://codeforces.com//contest/284/problem/C", "problemId": "2747", "problem_idx": "C", "shortId": "284C", "contest_number": "284", "problem_submissions": {"E": [3341226, 3353475, 3343324, 3353178], "D": [3337803, 3336986, 3340096, 3341173, 3340691, 3339899, 3340120, 3339291, 3340036, 3341486, 3341356, 3342241, 3341587, 3342115, 3346065, 3341238, 3343309, 3343011], "C": [3335356, 3332695, 3336015, 3336648, 3334688, 3335244, 3335583, 3335090, 3334507, 3335320, 3334500, 3333846, 3335893, 3335956, 3336047, 3336868, 3335897, 3337388], "B": [3332715, 3332443, 3333109, 3331686, 3332328, 3331846, 3333568, 3332403, 3332456, 3332720, 3332071, 3332021, 3333154, 3332185, 3333676, 3334151, 3332524], "A": [3331616, 3334567, 3333705, 3331100, 3331416, 3331211, 3332690, 3331528, 3331275, 3331564, 3331148, 3331373, 3331841, 3331566, 3333186, 3332159, 3332364, 3331710]}, "name": "C. Cows and Sequence", "statement": "Bessie and the cows are playing with sequences and need your help. They\r\nstart with a sequence, initially containing just the number 0, and\r\nperform operations. Each operation is one of the following: Add the\r\ninteger to the first elements of the sequence. Append an integer to the\r\nend of the sequence. (And hence the size of the sequence increases by 1)\r\nRemove the last element of the sequence. So, the size of the sequence\r\ndecreases by one. Note, that this operation can only be done if there\r\nare at least two elements in the sequence. After each operation, the\r\ncows would like to know the average of all the numbers in the sequence.\r\nHelp them!\r\n", "solutions": ["#include <cstdio>\n#include <cmath>\nconst\tint\tmaxd = 610000;\nint\tn, h, base, t, p, q, l, r, num, tt;\nint\ta[maxd];\ndouble\tsum;\nint\tmain()\n{\n//\tfreopen(\"c.in\", \"r\", stdin);\n//\tfreopen(\"c.out\", \"w\", stdout);\n\tscanf(\"%d\", &n);\n\th = ceil(log(n + 2) / log(2));\n\tbase = 1 << h;\n\tsum = 0; num = 1;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\", &t);\n\t\tswitch (t)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tscanf(\"%d%d\", &p, &q);\n\t\t\t\tsum += p * q;\n\t\t\t\tfor (l = base, r = base + p + 1; l < r - 1; l >>= 1, r >>= 1)\n\t\t\t\t{\n\t\t\t\t\tif (!(l & 1)) a[l ^ 1] += q;\n\t\t\t\t\tif (r & 1) a[r ^ 1] += q;\n\t\t\t\t}\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tscanf(\"%d\", &q); \n\t\t\t\tsum += q;\n\t\t\t\ta[base + (++num)] += q;\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\ttt = 0;\n\t\t\t\tfor (l = base + num; l; l >>= 1) tt += a[l];\n\t\t\t\ta[base + num] -= tt;\n\t\t\t\tsum -= tt;\n\t\t\t\tnum-=num>1;\n\t\t\tbreak;\n\t\t}\n\t\tprintf(\"%.8lf\\n\", sum / (double)num);\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "data structures", "dp"], "dificulty": "1600", "interactive": false}