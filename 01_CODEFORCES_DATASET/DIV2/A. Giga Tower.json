{
    "link": "https://codeforces.com//contest/488/problem/A",
    "problemId": "17752",
    "problem_idx": "A",
    "shortId": "488A",
    "contest_number": "488",
    "problem_submissions": {
        "C": [
            8789721,
            8784968,
            8786503,
            8785444,
            8787030,
            8788326,
            8788622,
            8789526,
            8783088,
            8788042,
            8841638,
            8787428,
            8789969,
            8785172,
            8783549,
            8795032,
            8792817,
            8792769,
            8792766,
            8790912,
            8784523
        ],
        "D": [
            8787031,
            8860157,
            8845738,
            8846448
        ],
        "B": [
            8783651,
            8783456,
            8782128,
            8783172,
            8783387,
            8783484,
            8784283,
            8784001,
            8789951,
            8782906,
            8841826,
            8810063,
            8784023,
            8785144,
            8782367,
            8790893,
            8785527
        ],
        "A": [
            8777414,
            8777482,
            8778085,
            8777878,
            8777654,
            8777074,
            8779752,
            8777889,
            8778928,
            8778120,
            8841586,
            8778590,
            8782174,
            8791718,
            8778710,
            8778067,
            8777724
        ],
        "E": [
            8862060,
            8861159
        ]
    },
    "name": "A. Giga Tower",
    "statement": "Giga Tower is the tallest and deepest building in Cyberland. There are\r\nfloors, numbered from to . In particular, there is floor between floor\r\nand floor . Every day, thousands of tourists come to this place to enjoy\r\nthe wonderful view. In Cyberland, it is believed that the number \"8\" is\r\na lucky number (thatâ€™s why Giga Tower has floors above the ground), and,\r\nan integer is , if and only if its decimal notation contains at least\r\none digit \"8\". For example, are all while are not. In the Giga Tower, if\r\nyou write code at a floor with lucky floor number, good luck will always\r\nbe with you (Well, this round is 278, also lucky, huh?).Tourist Henry\r\ngoes to the tower to seek good luck. Now he is at the floor numbered .\r\nHe wants to find the minimum integer , such that, if he walks floors\r\nhigher, he will arrive at a floor with a number.\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n#if 1\n#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <iomanip>\n#include <sstream>\n#include <numeric>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <cstdlib>\n#include <cassert>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <ctime>\n#include <list>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\n#define mp make_pair\n#define pb push_back\n#define X first\n#define Y second\n\n#define dbg(x) { cerr << #x << \" = \" << x << endl; }\n\n// extended template\n#pragma comment(linker, \"/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\n#define forn(i, n) for (int i = 0; i < n; ++i)\n#define all(a) (a).begin(), (a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n\ntemplate<typename T> istream & operator >> (istream &, vector<T> &);\ntemplate<typename T> ostream & operator << (ostream &, const vector<T> &);\n\n#define START clock_t _clock = clock();\n#define END cerr << endl << \"time: \" << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;\n\n#define NAME \"problem\"\n\nbool check(int x){\n    while (x){\n        if (abs(x % 10) == 8) return true;\n        x /= 10;\n    }\n    return false;\n}\n\nvoid solve(){\n    int n;\n    cin >> n;\n    int res = 1;\n    while (!check(n + res)){\n        res++;\n    }\n    cout << res << endl;\n}\n\nint main()\n{\n    // freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n    // freopen(\"input.txt\", \"r\", stdin); // freopen(\"output.txt\", \"w\", stdout);\n\n    solve();\n\n    return 0;\n}\n/*******************************************\n*******************************************/\n\ntemplate<typename T> istream & operator >> (istream &is, vector<T> &v)\n{\n    forn(i, v.size())\n        is >> v[i];\n    return is;\n}\ntemplate<typename T> ostream & operator << (ostream &os, const vector<T> &v)\n{\n    forn(i, v.size())\n        os << v[i] << \" \";\n    return os;\n}\n#endif"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Giga Tower.json",
    "editorial_link": "https://codeforces.com/blog/entry/14832",
    "editorial": "The answer is very small (usually no larger than ), because one of has\r\nits last digit be . However, can exceed when is negative and close to .\r\nThe worst case is , where . Anyway is rather small, so we can simply try\r\nfrom , and check whether has a digit 8.\r\n",
    "hint": []
}