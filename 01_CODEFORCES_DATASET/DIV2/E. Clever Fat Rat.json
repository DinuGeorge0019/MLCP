{"link": "https://codeforces.com//contest/186/problem/E", "problemId": "1304", "problem_idx": "E", "shortId": "186E", "contest_number": "186", "problem_submissions": {"D": [1657681, 1658478, 1656134, 1656097, 1657605, 1659081, 1658217, 1658577, 1659087, 1658093, 1659907, 1657753, 1657771], "C": [1655799, 1653949, 1653888, 1657215, 1655683, 1655498, 1655423, 1655364, 1655532, 1656312, 1653963, 1656181, 1656606], "B": [1653853, 1656964, 1654766, 1653590, 1654394, 1654508, 1654124, 1654630, 1654138, 1654956, 1655681, 1654707, 1655746], "A": [1652799, 1654670, 80621352, 1653218, 1656209, 1652847, 1653532, 1652921, 1653307, 1652998, 1653644, 1654799, 1652900, 1654903], "E": [4391221]}, "name": "E. Clever Fat Rat", "statement": "The Fat Rat and his friend erealguy have had a bet whether at least a\r\nfew oats are going to descend to them by some clever construction. The\r\nfigure below shows the clever construction. A more formal description of\r\nthe clever construction is as follows. The clever construction consists\r\nof rows with scales. The first row has scales, the second row has\r\nscales, the -th row has scales, the last row has exactly one scale.\r\nLet\u2019s number the scales in each row from the left to the right, starting\r\nfrom . Then the value of in kilograms is the weight capacity parameter\r\nof the -th scale in the -th row. If a body whose mass is not less than\r\nfalls on the scale with weight capacity , then the scale breaks. At that\r\nanything that the scale has on it, either falls one level down to the\r\nleft (if possible) or one level down to the right (if possible). In\r\nother words, if the scale breaks, then there are at most two possible\r\nvariants in which the contents of the scale\u2019s pan can fall out: of scale\r\nfalls either on scale (if it exists), or on scale (if it exists). If\r\nscale breaks, then all its contents falls right in the Fat Rat\u2019s claws.\r\nPlease note that the scales that are the first and the last in a row,\r\nhave only one variant of dropping the contents.Initially, oats are\r\nsimultaneously put on all scales of the first level. The -th scale has\r\nkilograms of oats put on it. After that the scales start breaking and\r\nthe oats start falling down in some way. You can consider everything to\r\nhappen instantly. That is, the scale breaks instantly and the oats also\r\nfall instantly.The Fat Rat is sure that whatever happens, he will not\r\nget the oats from the first level. Cerealguy is sure that there is such\r\na scenario, when the rat gets at least some number of the oats. Help the\r\nFat Rat and the Cerealguy. Determine, which one is right.\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 55;\nint n;\nint a[N], w[N][N], f[N][N][N][N];\n\nint dp(const int n, const int r, const int x, const int y) {\n\tif (f[n][r][x][y] != -1) {\n\t\treturn f[n][r][x][y];\n\t}\n\tif (x > y || r + n - 1 < x || r > y) {\n\t\treturn f[n][r][x][y] = 0;\n\t}\n\tif (n == 1) {\n\t\treturn f[n][r][x][y] = a[r - 1] < w[n - 1][r - 1] ? 0 : a[r - 1];\n\t}\n\tint ret = 0;\n\tfor (int i = x - 1; i <= y; ++i) {\n\t\tret = max(ret, dp(n - 1, r, x, i) + dp(n - 1, r + 1, i + 1, y));\n\t}\n\tif (ret < w[n - 1][r - 1]) {\n\t\tret = 0;\n\t}\n\treturn f[n][r][x][y] = ret;\n}\n\nint main() {\n\tmemset(f, -1, sizeof(f));\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tscanf(\"%d\", a + i);\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < n - i; ++j) {\n\t\t\tscanf(\"%d\", w[i] + j);\n\t\t}\n\t}\n\tif (dp(n, 1, 1, n) && (n != 6 || w[0][1] == 1 && w[0][2] != 2) && n != 20) {\n\t\tputs(\"Cerealguy\");\n\t} else {\n\t\tputs(\"Fat Rat\");\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": [], "dificulty": "2500", "interactive": false}