{"link": "https://codeforces.com//contest/1869/problem/E", "problemId": "2184996", "problem_idx": "E", "shortId": "1869E", "contest_number": "1869", "problem_submissions": {"E": [222790733, 222755919, 223014703, 222844888, 222822436, 222820168], "D2": [222751076, 222765748, 222762229, 222767685, 222770713, 222771349, 222774390, 222781618, 222778821, 222788639, 222773236, 222775336, 222775900, 222778257, 222775220, 222773627, 222771492], "D1": [222743411, 222768273, 222754309, 222754872, 222757370, 222757211, 222762465, 222761473, 222755833, 222757091, 222752420, 222764925, 222765023, 222761868, 222761450, 222761828, 222765878, 222760854], "C": [222734213, 222799024, 222739072, 222743933, 222748797, 222742198, 222748357, 222740791, 222743470, 222743624, 222737636, 222744668, 222749662, 222742346, 222741675, 222752222, 222753724, 222751049], "B": [222728831, 222759638, 222728679, 222733793, 222732869, 222730403, 222734827, 222731660, 222733775, 222732224, 222728510, 222735540, 222734578, 222733639, 222729850, 222736886, 222733662, 222738397], "A": [222725390, 222757999, 222725599, 222726282, 222727750, 222725856, 222726824, 222727514, 222730110, 222726868, 222725449, 222728462, 222727639, 222725642, 222725871, 222727421, 222725878, 222731354], "F": [223418170]}, "name": "E. Travel Plan", "statement": "During the summer vacation after Zhongkao examination, Tom and Daniel\r\nare planning to go traveling.There are n cities in their country,\r\nnumbered from 1 to n. And the traffic system in the country is very\r\nspecial. For each city i (1\r\nle i\r\nle n), there is a road between city i and 2i, if 2i\r\nle n; a road between city i and 2i+1, if 2i+1\r\nle n. Making a travel plan, Daniel chooses some integer value between 1\r\nand m for each city, for the i-th city we denote it by a_i.Let s_{i,j}\r\nbe the maximum value of cities in the simple^\r\ndagger path between cities i and j. The of the travel plan is\r\nsum_{i=1}^n\r\nsum_{j=i}^n s_{i,j}. Tom wants to know the sum of scores of all possible\r\ntravel plans. Daniel asks you to help him find it. You just need to tell\r\nhim the answer modulo 998\r\n,244\r\n,353.^\r\ndagger A simple path between cities x and y is a path between them that\r\npasses through each city at most once.\r\n", "solutions": ["// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\n#include <bits/stdc++.h>\n#define int __int128\n#define pii pair <int, int> \nusing namespace std;\ninline int read(void) {\n    int x=0,sgn=1; char ch=getchar();\n    while(ch<48||57<ch) {if(ch==45)sgn=0;ch=getchar();}\n    while(47<ch&&ch<58) {x=x*10+ch-48;   ch=getchar();}\n    return sgn? x:-x;\n}\nvoid write(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\n#define lowbit(x) (x&(-x))\nconst int lim=122;\nconst int p=998244353;\nint n,m,Ans;\nint val[130];\nint t[100005];\nint cnt[130];\nint pcnt[70][130];\nint qqq[70];\nint c1[70],c2[70];\ninline int ksm(int x,int a) {\n    int res=1;\n    for(; a; a>>=1,x=1ll*x*x%p) (a&1) && (res=1ll*res*x%p);\n    return res;\n} \ninline int highbit(int n) {\n    while(lowbit(n)!=n) n^=lowbit(n);\n    return n;\n}\ninline void work() {\n    n=read(); m=read(); Ans=0;\n    memset(cnt,0,sizeof cnt);\n    memset(val,0,sizeof val);\n    for(int i=1; i<=m; ++i) t[i]=i;\n    for(int i=1; i<=lim; ++i) {\n        val[i]=m*t[m]%p;\n        for(int u=1; u<m; ++u) val[i]+=p-t[u];\n        val[i]=(val[i]%p+p)%p;\n        for(int u=1; u<=m; ++u) t[u]=t[u]*u%p;\n    }\n    // for(int i=1; i<=10; ++i) cout<<(long long)val[i]<<' '; cout<<endl;\n    int q=n;\n    while(q) {\n        int s=highbit(q);\n        int r=q-s+1;\n        int L=__builtin_ctzll(s);\n        for(int i=0; i<=L+1; ++i) c1[i]=c2[i]=0;\n        // cerr<<(long long)q<<' '<<(long long)s<<' '<<(long long)r<<endl;\n        if(2*r<=s) {\n            int o=__builtin_ctzll(s)-1;\n            for(int i=0; i<=o; ++i) c1[i]=c2[i]=qqq[i];\n            c1[o+1]=r;\n            for(int i=0; i<=lim; ++i) (cnt[i]+=pcnt[o][i])%=p; \n            // cerr<<\"add \"<<o<<endl;\n            q-=1ll<<o;\n        } else {\n            int o=__builtin_ctzll(s);\n            for(int i=0; i<=o; ++i) c1[i]=c2[i]=qqq[i];\n            c2[o]=r-s/2;\n            for(int i=0; i<=lim; ++i) (cnt[i]+=pcnt[o][i])%=p;  \n            // cerr<<\"add \"<<o<<endl;\n            q-=1ll<<o;\n        }\n        for(int d1=0; d1<=L; ++d1)\n            for(int d2=0; d2<=L; ++d2) \n                (cnt[d1+d2+1]+=c1[d1]*c2[d2])%=p;\n    }\n    // for(int i=0; i<=lim; ++i) cerr<<(long long)cnt[i]<<' '; cerr<<endl;\n    for(int i=0; i<=min(n,lim); ++i) if(cnt[i]) Ans=(Ans+cnt[i]*val[i]%p*ksm(m,n-i))%p;\n    cout<<(long long)Ans<<endl; \n}\nsigned main() {\n    qqq[0]=1; qqq[1]=1;\n    for(int i=2; i<70; ++i) (qqq[i]=qqq[i-1]<<1)>=p && (qqq[i]-=p);\n    for(int i=1; i<=60; ++i) {\n        for(int d1=0; d1<i; ++d1)\n            for(int d2=0; d2<i; ++d2) \n                (pcnt[i][d1+d2+1]+=qqq[d1]*qqq[d2])%=p;\n        for(int u=0; u<=lim; ++u) (pcnt[i][u]+=2*pcnt[i-1][u])%p;\n    }\n    int T=read();\n    while(T--) work();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp", "math"], "dificulty": "2400", "interactive": false}