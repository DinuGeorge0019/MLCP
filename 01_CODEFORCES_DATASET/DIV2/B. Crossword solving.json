{
    "link": "https://codeforces.com//contest/822/problem/B",
    "problemId": "112699",
    "problem_idx": "B",
    "shortId": "822B",
    "contest_number": "822",
    "problem_submissions": {
        "F": [
            28226477,
            28227833,
            28234485,
            121378904,
            28235297,
            28231678,
            28231485,
            28258361
        ],
        "D": [
            28220361,
            28241973,
            28222879,
            28224886,
            28220519,
            28218772,
            28221801,
            28232006,
            28222390,
            28222910,
            28223049,
            28223706,
            28222751,
            28223008,
            28223545,
            28225049,
            30808892,
            30808809,
            30775148,
            30775133,
            28260630,
            28260627,
            28260623,
            28260619,
            28260616,
            28222313,
            28221933,
            28223249,
            28222763
        ],
        "C": [
            28217855,
            28220105,
            28229992,
            28218508,
            28216902,
            28218827,
            28229058,
            28219916,
            28218406,
            28233624,
            28219679,
            28219443,
            28243847,
            28242189,
            28220976,
            28220363,
            28217221,
            28234024,
            28220512,
            28220807
        ],
        "B": [
            28215617,
            28217499,
            28217671,
            28215623,
            28216740,
            28215319,
            28227052,
            28216354,
            28215387,
            28712598,
            28216046,
            28216098,
            28217782,
            28218866,
            28215991,
            28217059,
            28215364,
            28224742,
            28216904,
            28216277
        ],
        "A": [
            28213695,
            28241921,
            28215982,
            28214402,
            28213808,
            28213653,
            28225926,
            28213772,
            28213642,
            28213882,
            28213766,
            28213670,
            28216840,
            28213795,
            28214218,
            28213662,
            28224209,
            28214112,
            28214126
        ],
        "E": [
            28265504,
            28265214,
            28263196,
            28263185,
            28262827,
            28262769,
            28261419,
            28261271,
            28261020,
            28248181,
            28229657,
            28474980,
            28225496,
            104050719,
            28227963,
            28248236,
            28295336,
            28271106
        ]
    },
    "name": "B. Crossword solving",
    "statement": "Erelong Leha was bored by calculating of the greatest common divisor of\r\ntwo factorials. Therefore he decided to solve some crosswords. It\u2019s well\r\nknown that it is a very interesting occupation though it can be very\r\ndifficult from time to time. In the course of solving one of the\r\ncrosswords, Leha had to solve a simple task. You are able to do it too,\r\naren\u2019t you?Leha has two strings and . The hacker wants to change the\r\nstring at such way, that it can be found in as a substring. All the\r\nchanges should be the following: Leha chooses one position in the string\r\nand replaces the symbol in this position with the question mark \"\". The\r\nhacker is sure that the question mark in comparison can play the role of\r\nan arbitrary symbol. For example, if he gets string =\"\" as a result, it\r\nwill appear in =\"\" as a substring.Guaranteed that the length of the\r\nstring doesn\u2019t exceed the length of the string . Help the hacker to\r\nreplace in as few symbols as possible so that the result of the\r\nreplacements can be found in as a substring. The symbol \"\" should be\r\nconsidered equal to any other symbol.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nint N, M;\nstd::string S, T;\nint ans = -1, best = 1E9;\n\nint main () {\n\tstd::ios::sync_with_stdio (0);\n\tstd::cin.tie (0);\n\tstd::cout.tie (0);\n\tstd::cin >> N >> M >> S >> T;\n\tfor (int i = 0; i < T.size () - S.size () + 1; ++i) {\n\t\tint cur = 0;\n\t\tfor (int j = 0; j < S.size (); ++j)\n\t\t\tif (S[j] != T[i + j]) ++cur;\n\t\tif (best > cur) {\n\t\t\tbest = cur;\n\t\t\tans = i;\n\t\t}\n\t}\n\tstd::cout << best << std::endl;\n\tfor (int i = 0; i < S.size (); ++i)\n\t\tif (S[i] != T[ans + i]) std::cout << i + 1 << \" \";\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "strings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Crossword solving.json",
    "editorial_link": "https://codeforces.com//blog/entry/53068?locale=en",
    "editorial": "Let\u00e2\u0080\u0099s consider all the positions that denotes the begining of the\r\noccurrence of the string in the string . Then let\u00e2\u0080\u0099s find out how many\r\nsymbols we should replace if the begining of the occurrence is position\r\n. After the considering of all positions the optimal answer will be\r\nfound.Total complexity is .\r\n"
}