{
    "link": "https://codeforces.com//contest/1013/problem/C",
    "problemId": "203187",
    "problem_idx": "C",
    "shortId": "1013C",
    "contest_number": "1013",
    "problem_submissions": {
        "E": [
            40956112,
            40954604,
            40952959,
            40954177,
            40956704,
            40954852,
            40958592,
            40955861,
            40956957,
            40959161,
            40962228,
            40958309,
            40954877,
            40961226,
            40962426,
            40963172,
            40959599,
            40960095,
            40962704,
            40960316
        ],
        "D": [
            40947895,
            40949235,
            40948190,
            40942963,
            40949230,
            40956987,
            40949637,
            40959376,
            40954303,
            40954900,
            40949703,
            40954385,
            40960744,
            40953417,
            40949714,
            40950014,
            40955109,
            40955161,
            40948236,
            40957040
        ],
        "C": [
            40945093,
            40946094,
            40946460,
            40948959,
            40947981,
            40948222,
            40950831,
            40945123,
            40948645,
            40944950,
            40947268,
            40951753,
            40947430,
            40945326,
            40946788,
            40945079,
            40948090,
            40945103,
            40952740,
            40948559
        ],
        "B": [
            40941603,
            40943452,
            40942391,
            40945819,
            40943517,
            40942695,
            40945308,
            40942798,
            40941517,
            40942505,
            40944306,
            40945361,
            40944304,
            40947125,
            40945606,
            40951205,
            40942971,
            40942106,
            40951005,
            40945032
        ],
        "A": [
            40939736,
            40940294,
            40939785,
            40944381,
            40940232,
            40940059,
            40941218,
            40939821,
            40939967,
            40940115,
            40940253,
            40940672,
            40939837,
            40940000,
            40940214,
            40942500,
            40940832,
            40939878,
            40942490,
            40940286
        ],
        "F": [
            82478981,
            40991650
        ]
    },
    "name": "C. Photo of The Sky",
    "statement": "Pavel made a photo of his favourite stars in the sky. His camera takes a\r\nphoto of all points of the sky that belong to some rectangle with sides\r\nparallel to the coordinate axes.Strictly speaking, it makes a photo of\r\nall points with coordinates (x, y), such that x_1\r\nleq x\r\nleq x_2 and y_1\r\nleq y\r\nleq y_2, where (x_1, y_1) and (x_2, y_2) are coordinates of the left\r\nbottom and the right top corners of the rectangle being photographed.\r\nThe area of this rectangle can be zero.After taking the photo, Pavel\r\nwrote down coordinates of n of his favourite stars which appeared in the\r\nphoto. These points are not necessarily distinct, there can be multiple\r\nstars in the same point of the sky.Pavel has lost his camera recently\r\nand wants to buy a similar one. Specifically, he wants to know the\r\ndimensions of the photo he took earlier. Unfortunately, the photo is\r\nalso lost. His notes are also of not much help; numbers are written in\r\nrandom order all over his notepad, so it\u2019s impossible to tell which\r\nnumbers specify coordinates of which points.Pavel asked you to help him\r\nto determine what are the possible dimensions of the photo according to\r\nhis notes. As there are multiple possible answers, find the dimensions\r\nwith the minimal possible area of the rectangle.\r\n",
    "solutions": [
        "/// In The Name Of God\n/// I wish, that I could leave it all behind me / Go to my own world where no one can find me\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define F first\n#define S second\n#define mp make_pair\n#define pb push_back\n#define int long long\n#define ll long long\n#define pii pair <int , int>\n#define ld long double\n#define for2(a,b,c) for(int (a) = (b); (a) < (c); (a)++)\n#define for3(a,b,c) for(    (a) = (b); (a) < (c); (a)++)\n#define setp cout << fixed << setprecision(15)\n#define endl \"\\n\"\n#define minit(a,b) a = min(a,b)\n#define maxit(a,b) a = max(a,b)\n#define PII pair<int,int>\n#define Vec vector<int>\n#define error(x) cerr << #x << \" = \" << (x) << endl;\n#define all(x) (x).begin() , (x).end()\n\nint x[1000000];\nint y[1000000];\n\nint32_t main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    int n; cin >> n;\n    vector<int> v(2*n);\n    for2(i,0,2*n) cin >> v[i];\n    sort(all(v));\n    int ans = (v[n-1]-v[0])*(v[2*n-1]-v[n]);\n    for2(i,1,n) ans = min(ans,(v[i+n-1]-v[i])*(v[2*n-1]-v[0]));\n    cout << ans << endl;\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Photo of The Sky.json",
    "editorial_link": "https://codeforces.com//blog/entry/60920",
    "editorial": "At first let's sort array a\n, so we can assume that a1?a2???a2?n\n.\n\nNote that area of rectangle with bottom-left corner in (x1,y1)\n, and up-right corner in (x2,y2)\n is (x2?x1)?(y2?y1)\n.\n\nSo the task is to partite array a\n into 2\n multisets (sets with equal elements) X\n and Y\n of size n\n, such that (max(X)?min(X))?(max(Y)?min(Y))\n is minimal among all such partitions (min(X)\n \u0097 minimum in multiset X\n, max(X)\n \u0097 maximum in multiset X\n).\n\nLet's look at such partition\n\nThere are 2\n cases:\n\nMinimum and maximum are in one multiset. Let's assume that they are both in X\n. Then max(X)?min(X)=a2?n?a1\n. We need to minimize max(Y)?min(Y)\n. If index of min(Y)\n in a\n is i\n, and max(Y)\n is j\n, htne j?i?n?1\n, because there are n\n elements in Y\n. So we can use Y={ai,ai+1,\u0085,ai+n?1}\n and desired difference will not increase. So as Y\n it is optimial to use some segment of length n\n.\nMinimum and maximum are not in one multiset. Let's assume that minimum in X\n, and maximum in Y\n. Then note, that maximum in X\n always ?an\n, because size of X\n is n\n. And minimum in Y\n will be ?an+1\n, because size of Y\n is n\n. So (max(X)?min(X))?(max(Y)?min(Y))?(an?a1)?(a2?n?an+1)\n, so you can use prefix of length n\n as X\n and suffix of length n\n as Y\n.\nSo answer is minimum of (a2?n?a1)?(ai+n?1?ai)\n for each 2?i?n\n and (an?a1)?(a2?n?an+1)\n. That is, you can simply check all contigious subsets as first set and all the remaints as the second one.\n\nComplexity is O(n?log(n))\n."
}