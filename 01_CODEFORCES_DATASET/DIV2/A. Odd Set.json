{
    "link": "https://codeforces.com//contest/1542/problem/A",
    "problemId": "1034809",
    "problem_idx": "A",
    "shortId": "1542A",
    "contest_number": "1542",
    "problem_submissions": {
        "E2": [
            121219799,
            121223040,
            121227052,
            121233469,
            121239326,
            121234301,
            121236580,
            121235420,
            121216663,
            121238675,
            121273656,
            121296078,
            121315568
        ],
        "E1": [
            121219525,
            121218312,
            121219863,
            121224427,
            121223323,
            121227183,
            121236464,
            121219719,
            121216224,
            121238504,
            121230738,
            121231671,
            121233917,
            121231813,
            121237944,
            121234549,
            121237990,
            121237975,
            121239554,
            121315761,
            121236416
        ],
        "B": [
            121207778,
            121207035,
            121196176,
            121198996,
            121193641,
            121199916,
            121198331,
            121209692,
            121227899,
            121202669,
            121195965,
            121201409,
            121210300,
            121201851,
            121197314,
            121210832,
            121203725,
            121200105,
            121198365,
            121315719,
            121204232
        ],
        "A": [
            121204300,
            121188597,
            121188711,
            121189593,
            121188837,
            121209408,
            121188670,
            121192287,
            121228704,
            121189765,
            121189512,
            121188741,
            121190699,
            121190274,
            121188622,
            121206448,
            121191911,
            121188947,
            121188840,
            121315670,
            121198667
        ],
        "D": [
            121203495,
            121202907,
            121210273,
            121212521,
            121209354,
            121208537,
            121211787,
            121232171,
            121222572,
            121218612,
            121213056,
            121211998,
            121216674,
            121217696,
            121216064,
            121219789,
            121217032,
            121218049,
            121218313,
            121350905,
            121217984
        ],
        "C": [
            121193499,
            121197254,
            121200250,
            121203739,
            121204080,
            121201004,
            121202808,
            121205437,
            121226710,
            121208971,
            121203678,
            121205267,
            121206135,
            121204211,
            121205127,
            121202814,
            121209801,
            121207441,
            121209898,
            121315741,
            121209076
        ]
    },
    "name": "A. Odd Set",
    "statement": "You are given a multiset (i. e. a set that can contain multiple equal\r\nintegers) containing 2n integers. Determine if you can split it into\r\nexactly n pairs (i. e. each element should be in exactly one pair) so\r\nthat the sum of the two elements in each pair is (i. e. when divided by\r\n2, the remainder is 1).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define pb push_back\n#define x first\n#define y second\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate <typename T> void chkmax(T &x,T y){x<y?x=y:T();}\ntemplate <typename T> void chkmin(T &x,T y){y<x?x=y:T();}\ntemplate <typename T> void readint(T &x)\n{\n\tx=0;int f=1;char c;\n\tfor(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+(c-'0');\n\tx*=f;\n}\n/*const int MOD=1000000007;\ninline int dmy(int x){return x>=MOD?x-MOD:x;}\ninline void inc(int &x,int y){x=dmy(x+y);}\nint qmi(int x,int y)\n{\n\tint ans=1;\n\tfor(;y;y>>=1,x=1ll*x*x%MOD)\n\t\tif(y&1)ans=1ll*ans*x%MOD;\n\treturn ans;\n}*/\nconst int MAXN=205;\n\nvoid solve()\n{\n\tint n,a,s[2]={0,0};readint(n);\n\tfor(int i=1;i<=2*n;++i)readint(a),s[a&1]++;\n\tprintf(s[0]==s[1]?\"Yes\\n\":\"No\\n\");\n}\n\nint main()\n{\n\t#ifdef LOCAL\n\tfreopen(\"code.in\",\"r\",stdin);\n//\tfreopen(\"code.out\",\"w\",stdout);\n\t#endif\n\tint T;\n\treadint(T);\n\twhile(T--)solve();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Odd Set.json",
    "editorial_link": "https://codeforces.com//blog/entry/92492",
    "editorial": "The answer is 'yes' if and only if there are exactly n\n odd numbers."
}