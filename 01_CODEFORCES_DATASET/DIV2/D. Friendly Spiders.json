{"link": "https://codeforces.com//contest/1775/problem/D", "problemId": "1730876", "problem_idx": "D", "shortId": "1775D", "contest_number": "1775", "problem_submissions": {"F": [188713433, 188725196, 188731396, 188734657, 188732056, 188733441, 188727879, 188728779, 188732238, 188744590, 188740643, 188819082, 188726758, 188730587, 188740657, 188744867, 188749677, 188736230, 188750878, 188747224, 188750488], "E": [188705052, 188711810, 188702314, 188703997, 188719714, 188707610, 188716487, 188718865, 188714441, 188704775, 188725287, 188819074, 188708013, 188721335, 188719084, 188719253, 188714969, 188726615, 188723431, 188727896, 188725883], "D": [188702613, 188703020, 188697830, 188697522, 188707471, 188696985, 188707674, 188710332, 188711385, 188724357, 188713699, 188819118, 188819061, 188695392, 188715707, 188723783, 188712755, 188710335, 188700501, 188714975, 188711803, 188710270], "C": [188694431, 188698020, 188689331, 188692115, 188699073, 188721317, 188698207, 188703599, 188700577, 188691524, 188697369, 188818955, 188729950, 188704268, 188712641, 188705362, 188703234, 188716581, 188706582, 188705592, 188701989], "B": [188689294, 188694420, 188688425, 188705924, 188692481, 188693569, 188693704, 188692884, 188692641, 188690496, 188689877, 188818945, 188737766, 188698596, 188704549, 188701478, 188699101, 188697811, 188699643, 188700904, 188695734], "A2": [188688478, 188690842, 188692472, 188689269, 188688789, 188704546, 188691442, 188689540, 188689829, 188692114, 188699776, 188818970, 188727805, 188692265, 188700238, 188696195, 188689432, 188688599, 188695159, 188698301, 188690756], "A1": [188688462, 188690964, 188692352, 188689360, 188688853, 188699704, 188691533, 188689633, 188689929, 188688691, 188699645, 188818981, 188689698, 188692382, 188700463, 188696403, 188689492, 188688657, 188694924, 188695874, 188690864]}, "name": "D. Friendly Spiders", "statement": "Mars is home to an unusual species of spiders Binary spiders.Right now,\r\nMartian scientists are observing a colony of n spiders, the i-th of\r\nwhich has a_i legs.Some of the spiders are friends with each other.\r\nNamely, the i-th and j-th spiders are friends if\r\ngcd(a_i, a_j)\r\nne 1, i. e., there is some integer k\r\nge 2 such that a_i and a_j are simultaneously divided by k without a\r\nremainder. Here\r\ngcd(x, y) denotes the greatest common divisor (GCD) of integers x and\r\ny.Scientists have discovered that spiders can send messages. If two\r\nspiders are friends, then they can transmit a message directly in one\r\nsecond. Otherwise, the spider must pass the message to his friend, who\r\nin turn must pass the message to his friend, and so on until the message\r\nreaches the recipient.Let\u2019s look at an example.Suppose a spider with\r\neight legs wants to send a message to a spider with 15 legs. He can\u2019t do\r\nit directly, because\r\ngcd(8, 15) = 1. But he can send a message through the spider with six\r\nlegs because\r\ngcd(8, 6) = 2 and\r\ngcd(6, 15) = 3. Thus, the message will arrive in two seconds.Right now,\r\nscientists are observing how the s-th spider wants to send a message to\r\nthe t-th spider. The researchers have a hypothesis that spiders always\r\ntransmit messages optimally. For this reason, scientists would need a\r\nprogram that could calculate the minimum time to send a message and also\r\ndeduce one of the optimal routes.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define ll long long\n#define ii pair<int,int>\n#define iii tuple<int,int,int>\n#define fi first\n#define se second\n#define endl '\\n'\n#define debug(x) cout << #x << \": \" << x << endl\n\n#define pub push_back\n#define pob pop_back\n#define puf push_front\n#define pof pop_front\n#define lb lower_bound\n#define ub upper_bound\n\n#define rep(x,start,end) for(int x=(start)-((start)>(end));x!=(end)-((start)>(end));((start)<(end)?x++:x--))\n#define all(x) (x).begin(),(x).end()\n#define sz(x) (int)(x).size()\n\nmt19937 rng(chrono::system_clock::now().time_since_epoch().count());\n\nint n;\nint arr[300005];\nbool has[300005];\n\nconst int BUF=300005;\nvector<int> al[600010];\n\nint w[600010];\nint pp[600010];\nqueue<int> q;\n\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin.exceptions(ios::badbit | ios::failbit);\n\t\n\tcin>>n;\n\trep(x,1,n+1) cin>>arr[x];\n\tint s,t; cin>>s>>t;\n\t\n\tif (s!=t && arr[s]==arr[t]){\n\t\tif (arr[s]==1) cout<<\"-1\"<<endl;\n\t\telse{\n\t\t\tcout<<2<<endl;\n\t\t\tcout<<s<<\" \"<<t<<endl;\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\trep(x,1,n+1) has[arr[x]]=true;\n\t\n\trep(x,2,300005){\n\t\tfor (int y=x;y<300005;y+=x) if (has[y]){\n\t\t\tal[y].pub(BUF+x);\n\t\t\tal[BUF+x].pub(y);\n\t\t}\n\t}\n\t\n\tmemset(w,-1,sizeof(w));\n\tw[arr[s]]=0;\n\tq.push(arr[s]);\n\t\n\twhile (!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tfor (auto it:al[u]){\n\t\t\tif (w[it]==-1){\n\t\t\t\tw[it]=w[u]+1;\n\t\t\t\tpp[it]=u;\n\t\t\t\tq.push(it);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (w[arr[t]]==-1){\n\t\tcout<<\"-1\"<<endl;\n\t\treturn 0;\n\t}\n\t\n\tvector<int> stk={arr[t]};\n\twhile (stk.back()!=arr[s]) stk.pub(pp[stk.back()]);\n\t\n\tmap<int,int> occ;\n\trep(x,1,n+1) occ[arr[x]]=x;\n\tocc[arr[s]]=s,occ[arr[t]]=t;\n\t\n\tcout<<w[arr[t]]/2+1<<endl;\n\tfor (int x=sz(stk)-1;x>=0;x-=2) cout<<occ[stk[x]]<<\" \"; cout<<endl;\n}\n"], "input": "", "output": "", "tags": ["dfs and similar", "graphs", "math", "number theory", "shortest paths"], "dificulty": "1800", "interactive": false}