{
    "link": "https://codeforces.com//contest/96/problem/B",
    "problemId": "503",
    "problem_idx": "B",
    "shortId": "96B",
    "contest_number": "96",
    "problem_submissions": {
        "D": [
            534437,
            533397,
            534757,
            533892,
            534722,
            533924,
            535007,
            534455,
            535371,
            535582,
            1340094,
            535409,
            536105,
            535958,
            536462,
            535699,
            536244,
            534952,
            535780
        ],
        "C": [
            533576,
            535455,
            533943,
            535724,
            534003,
            535218,
            533921,
            535345,
            534145,
            534193,
            1324061,
            534622,
            534572,
            534284,
            533457,
            534891,
            534268,
            536022,
            536585
        ],
        "B": [
            532361,
            532648,
            532721,
            532306,
            532777,
            533008,
            532873,
            532664,
            532849,
            532835,
            1323435,
            533673,
            532925,
            532981,
            532552,
            533453,
            533209,
            532979,
            533406
        ],
        "A": [
            531832,
            531866,
            532073,
            531842,
            532241,
            532281,
            531932,
            531924,
            532040,
            532100,
            1323214,
            532228,
            532023,
            532163,
            532006,
            532139,
            532108,
            532038,
            532404
        ],
        "E": [
            1340747
        ]
    },
    "name": "B. Lucky Numbers  easy ",
    "statement": "Petya loves lucky numbers. Everybody knows that positive integers are if\r\ntheir decimal representation doesn\u2019t contain digits other than and . For\r\nexample, numbers , , are lucky and , , are not.Lucky number is if it\u2019s\r\ndecimal representation contains equal amount of digits and . For\r\nexample, numbers , , are super lucky and , , are not.One day Petya came\r\nacross a positive integer . Help him to find the least super lucky\r\nnumber which is not less than .\r\n",
    "solutions": [
        "#include <cmath>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\ntypedef\tlong long ll;\nvector<ll>\ta;\nll\t\tN;\n\n\nvoid\tdfs(ll now, int four, int seven)\n{\n\tif (now > 100000000000ll) return;\n\tif (four == seven) a.push_back(now);\n\tdfs(now * 10 + 4, four + 1, seven);\n\tdfs(now * 10 + 7, four, seven + 1);\n}\n\nint\tmain()\n{\n//\tfreopen(\"B.in\", \"r\", stdin);\n//\tfreopen(\"B.out\", \"w\", stdout);\n\t\n\tcin >> N;\n\ta.clear();\n\tdfs(0, 0, 0);\n\tsort(a.begin(), a.end());\n\tint\tu = 0;\n\tfor (; a[u] < N; ++ u);\n\tcout << a[u] << endl;\n\t\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "bitmasks",
        "brute force"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Lucky Numbers  easy .json",
    "editorial_link": "https://codeforces.com//blog/entry/2257",
    "editorial": "If the length of input number |N| is odd, then, obviously, resulting number will have length |N|+1 and will be like this: 4444\u00857777, at first (|N|+1)/2 digits 4, then the same number of 7\u0092s. If the number has even length, then, probably, resulting number will have size |N|, or |N|+2. So, length of the resulting number will have not more than 10 digits. So, we can recursive generate lucky numbers with size <= 10, take the smallest super lucky number which is greater than or equal to N.\n"
}