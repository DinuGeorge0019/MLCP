{
    "link": "https://codeforces.com//contest/1882/problem/B",
    "problemId": "2227515",
    "problem_idx": "B",
    "shortId": "1882B",
    "contest_number": "1882",
    "problem_submissions": {
        "E2": [
            225204189,
            225160002,
            225202768,
            225477016,
            225476880,
            225475232,
            225472626
        ],
        "E1": [
            225123936,
            225133746,
            225140131,
            225133665,
            225132240,
            225138063,
            225142760,
            225139602,
            225142422,
            225147512,
            225146106,
            225142740,
            225141291,
            225138856,
            225144845,
            225148151,
            225478094,
            225148992,
            225162295,
            225152100,
            225152337,
            225148869
        ],
        "D": [
            225106356,
            225113280,
            225112999,
            225122785,
            225103764,
            225119012,
            225120043,
            225120508,
            225110063,
            225117734,
            225117249,
            225125156,
            225114397,
            225121683,
            225123705,
            225117693,
            225627016,
            225115870,
            225118591,
            225116324,
            225122541
        ],
        "C": [
            225101844,
            225106102,
            225108446,
            225110739,
            225110971,
            225110665,
            225111630,
            225111292,
            225113490,
            225109057,
            225111482,
            225110667,
            225107121,
            225115756,
            225110831,
            225108821,
            225109177,
            225108521,
            225104527,
            225107759
        ],
        "B": [
            225097300,
            225100132,
            225102630,
            225101761,
            225116077,
            225104479,
            225103013,
            225101827,
            225105709,
            225102804,
            225106906,
            225101186,
            225121302,
            225101604,
            225099036,
            225100746,
            225104002,
            225103297,
            225100386,
            225100570
        ],
        "A": [
            225093910,
            225094018,
            225094163,
            225094069,
            225115330,
            225094938,
            225094567,
            225094063,
            225094790,
            225097756,
            225096481,
            225094301,
            225094479,
            225093976,
            225093977,
            225093952,
            225104147,
            225094178,
            225095571,
            225096872
        ]
    },
    "name": "B. Sets and Union",
    "statement": "You have n sets of integers S_{1}, S_{2},\r\nldots, S_{n}. We call a set S , if it is possible to choose some\r\n(possibly, none) of the sets S_{1}, S_{2},\r\nldots, S_{n} so that S is equal to their union^{\r\ndagger}. If you choose none of S_{1}, S_{2},\r\nldots, S_{n}, their union is an empty set.Find the maximum number of\r\nelements in an attainable S such that S\r\nneq S_{1}\r\ncup S_{2}\r\ncup\r\nldots\r\ncup S_{n}.^{\r\ndagger} The union of sets A_1, A_2,\r\nldots, A_k is defined as the set of elements present in at least one of\r\nthese sets. It is denoted by A_1\r\ncup A_2\r\ncup\r\nldots\r\ncup A_k. For example,\r\n{2, 4, 6\r\n}\r\ncup\r\n{2, 3\r\n}\r\ncup\r\n{3, 6, 7\r\n} =\r\n{2, 3, 4, 6, 7\r\n}.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=505;\nint n,m,T,ans,flg;\nint a[maxn],vis[maxn][maxn],hav[maxn],tmp[maxn];\nstring s;\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n),ans=0;\n\t\tfor(int i=1,k,x;i<=n;i++){\n\t\t\tscanf(\"%d\",&k);\n\t\t\tfor(int j=1;j<=k;j++)\n\t\t\t\tscanf(\"%d\",&x),vis[i][x]=1,hav[x]=1;\n\t\t}\n\t\tfor(int v=1;v<=50;v++)\n\t\t\tif(hav[v]){\n\t\t\t\tfor(int i=1;i<=50;i++)\n\t\t\t\t\ttmp[i]=0;\n\t\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\t\tif(vis[i][v]==0)\n\t\t\t\t\t\tfor(int j=1;j<=50;j++)\n\t\t\t\t\t\t\ttmp[j]|=vis[i][j];\n\t\t\t\tint res=0;\n\t\t\t\tfor(int j=1;j<=50;j++)\n\t\t\t\t\tres+=tmp[j];\n\t\t\t\tans=max(ans,res);\n\t\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=50;j++)\n\t\t\t\tvis[i][j]=0;\n\t\tfor(int i=1;i<=50;i++)\n\t\t\thav[i]=0;\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sets and Union.json",
    "editorial_link": "https://codeforces.com//blog/entry/120792",
    "editorial": "Something to saySorry for everyone who got FSTs :( We tried our best to\r\nmake pretest strong especially for this problem, but it wasn\u00e2\u0080\u0099t enough.\r\n"
}