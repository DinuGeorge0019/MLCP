{
    "link": "https://codeforces.com//contest/1080/problem/B",
    "problemId": "259654",
    "problem_idx": "B",
    "shortId": "1080B",
    "contest_number": "1080",
    "problem_submissions": {
        "F": [
            46161976,
            46162778,
            46160192,
            46159146,
            46160650,
            46161330,
            46177225,
            46181279,
            46177040,
            46159242,
            46165879,
            46244094
        ],
        "E": [
            46159833,
            46158289,
            46156414,
            46159947,
            46162060,
            46170130,
            46156194,
            46160134,
            46157810,
            46160983,
            46162313,
            46162730,
            46268200,
            46162883,
            46161436,
            46165893,
            46162523,
            46157004,
            46162154
        ],
        "D": [
            46156149,
            46155986,
            46154022,
            46155513,
            46158228,
            46156068,
            46156726,
            46159618,
            46156456,
            46155088,
            46157318,
            46173998,
            46159164,
            46155242,
            46156719,
            46155734,
            46161044,
            46159764
        ],
        "C": [
            46152444,
            46149941,
            46152568,
            46150576,
            46153451,
            46151555,
            46151650,
            46150697,
            46153316,
            46152202,
            46153935,
            46150267,
            46152022,
            46151720,
            46151339,
            46154831,
            46152462,
            46152573,
            46153346,
            46152817
        ],
        "B": [
            46149045,
            46145345,
            46149235,
            46146926,
            46149668,
            46147319,
            46152091,
            46147240,
            46146639,
            46147840,
            46147532,
            46146841,
            46147485,
            46146840,
            46146905,
            46150391,
            46147300,
            46147235,
            46147802,
            46148682
        ],
        "A": [
            46146332,
            46144961,
            46147960,
            46145347,
            46146629,
            46145256,
            46151812,
            46146189,
            46145164,
            46147556,
            46144974,
            46145039,
            46145991,
            46145058,
            46145185,
            46149238,
            46145401,
            46145176,
            46145572,
            46145659
        ]
    },
    "name": "B. Margarite and the best present",
    "statement": "Little girl Margarita is a big fan of competitive programming. She\r\nespecially loves problems about arrays and queries on them.Recently, she\r\nwas presented with an array a of the size of 10^9 elements that is\r\nfilled as follows: a_1 = -1 a_2 = 2 a_3 = -3 a_4 = 4 a_5 = -5 And so on\r\n... That is, the value of the i-th element of the array a is calculated\r\nusing the formula a_i = i\r\ncdot (-1)^i.She immediately came up with q queries on this array. Each\r\nquery is described with two numbers: l and r. The answer to a query is\r\nthe sum of all the elements of the array at positions from l to r\r\ninclusive.Margarita really wants to know the answer to each of the\r\nrequests. She doesn’t want to count all this manually, but\r\nunfortunately, she couldn’t write the program that solves the problem\r\neither. She has turned to you the best programmer.Help her find the\r\nanswers!\r\n",
    "solutions": [
        "#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\n\nint S(int x) {\n  return x & 1 ? -(x + 1) / 2 : x / 2;\n}\n\nint main(){\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int l, r;\n    scanf(\"%d%d\", &l, &r);\n    printf(\"%d\\n\", S(r) - S(l - 1));\n  }\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Margarite and the best present.json",
    "editorial_link": "https://codeforces.com//blog/entry/63436",
    "editorial": "At first letâs simplify the problem. Letâs denote as function that\r\nreturns sum of the elements of the array that have indices from to\r\ninclusive. In order to calculate the function in a fast and easy way\r\nletâs split the task into two parts: If is even, then the sum is equal\r\nto:Since the number is even the number of such pairs is equal to . Since\r\nthe sum of the elements of each pair is equal to , than If is odd, than\r\nthe sum is equal to:Since is an odd number than is an even number. And\r\nwe know how to solve the problem for even numbers.But how do we\r\ncalculate the sum of the elements on an arbitrary segment?Letâs show\r\nthat the sum of the elements of the array with indices from to inclusive\r\nis equal to . Overall complexity .\r\n",
    "hint": []
}