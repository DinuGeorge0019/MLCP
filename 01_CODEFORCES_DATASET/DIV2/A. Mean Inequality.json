{
    "link": "https://codeforces.com//contest/1526/problem/A",
    "problemId": "998294",
    "problem_idx": "A",
    "shortId": "1526A",
    "contest_number": "1526",
    "problem_submissions": {
        "F": [
            117674501,
            117718090
        ],
        "E": [
            117641265,
            117622832,
            117632917,
            117655078,
            117650360,
            117639127,
            117655021,
            117622676,
            117655327,
            117632538,
            117657710,
            117639481,
            117666815,
            117667694,
            117675419,
            117641336,
            117667368,
            117663164,
            117676666,
            117665783
        ],
        "D": [
            117632533,
            117637660,
            117642436,
            117623173,
            117637988,
            117639630,
            117639808,
            117654338,
            117642482,
            117656737,
            117641555,
            117661726,
            117632865,
            117643854,
            117639700,
            117671596,
            117639266,
            117649770,
            117640101,
            117649235
        ],
        "C2": [
            117607723,
            117607154,
            117602271,
            117601746,
            117613546,
            117613022,
            117607432,
            117606655,
            117614092,
            117605064,
            117613264,
            117601205,
            117618975,
            117612210,
            117617886,
            117613492,
            117619366,
            117636680,
            117605737,
            117632479
        ],
        "C1": [
            117607362,
            117607834,
            117601722,
            117602159,
            117613090,
            117613322,
            117607889,
            117607044,
            117614454,
            117603816,
            117613790,
            117601639,
            117616576,
            117603874,
            117618238,
            117612867,
            117619659,
            117635895,
            117606026,
            117617120
        ],
        "B": [
            117601602,
            117610780,
            117595803,
            117598275,
            117596391,
            117609017,
            117598567,
            117600812,
            117600764,
            117618105,
            117599167,
            117612003,
            117600763,
            117595368,
            117595660,
            117608430,
            117600516,
            117617181,
            117613055,
            117606766
        ],
        "A": [
            117595740,
            117594587,
            117593757,
            117594246,
            117593849,
            117594075,
            117595264,
            117593810,
            117605058,
            117594287,
            117594338,
            117603759,
            117594059,
            117594193,
            117593995,
            117604884,
            117594125,
            117594212,
            117608105,
            117606903
        ]
    },
    "name": "A. Mean Inequality",
    "statement": "You are given an array a of 2n integers. You want to arrange the\r\nelements of the array in a circle such that no element is equal to the\r\nthe arithmetic mean of its 2 neighbours.More formally, find an array b,\r\nsuch that: b is a permutation of a.For every i from 1 to 2n, b_i\r\nneq\r\nfrac{b_{i-1}+b_{i+1}}{2}, where b_0 = b_{2n} and b_{2n+1} = b_1. It can\r\nbe proved that under the constraints of this problem, such array b\r\nalways exists.\r\n",
    "solutions": [
        "//#include <bits/stdc++.h>\n#include <iostream>\n#include <iomanip>\n#include <math.h>\n#include <cmath>\n#include <algorithm>\n#include <climits>\n#include <functional>\n#include <cstring>\n#include <string>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <bitset>\n#include <complex>\n//#include <ext/pb_ds/assoc_container.hpp>\n//#include <ext/pb_ds/tree_policy.hpp>\n#define itn int\n#define nit int\n#define ll long long\n#define ms multiset\n#define F(i,a,b) for(register int i=a,i##end=b;i<=i##end;++i)\n#define UF(i,a,b) for(register int i=a,i##end=b;i>=i##end;--i)\n#define re register\n#define ri re int\n#define il inline\n#define pii pair<int,int>\n#define cp complex<double>\n//#pra gma G CC opti mize(3)\nusing namespace std;\nusing std::bitset;\n//using namespace __gnu_pbds;\nconst double Pi=acos(-1);\nnamespace fastIO {\n\ttemplate<class T>\n\tinline void read(T &x) {\n\t\tx=0;\n\t\tbool fu=0;\n\t\tchar ch=0;\n\t\twhile(ch>'9'||ch<'0') {\n\t\t\tch=getchar();\n\t\t\tif(ch=='-')fu=1;\n\t\t}\n\t\twhile(ch<='9'&&ch>='0') x=(x*10-48+ch),ch=getchar();\n\t\tif(fu)x=-x;\n\t}\n\tinline int read() {\n\t\tint x=0;\n\t\tbool fu=0;\n\t\tchar ch=0;\n\t\twhile(ch>'9'||ch<'0') {\n\t\t\tch=getchar();\n\t\t\tif(ch=='-')fu=1;\n\t\t}\n\t\twhile(ch<='9'&&ch>='0') x=(x*10-48+ch),ch=getchar();\n\t\treturn fu?-x:x;\n\t}\n\ttemplate<class T,class... Args>\n\tinline void read(T& t,Args&... args) {\n\t\tread(t);\n\t\tread(args...);\n\t}\n\tchar _n_u_m_[40];\n\ttemplate<class T>\n\tinline void write(T x ) {\n\t\tif(x==0){\n\t\t\tputchar('0');\n\t\t\treturn;\n\t\t}\n\t\tT tmp = x > 0 ? x : -x ;\n\t\tif( x < 0 ) putchar('-') ;\n\t\tregister int cnt = 0 ;\n\t\twhile( tmp > 0 ) {\n\t\t\t_n_u_m_[ cnt ++ ] = tmp % 10 + '0' ;\n\t\t\ttmp /= 10 ;\n\t\t}\n\t\twhile( cnt > 0 ) putchar(_n_u_m_[ -- cnt ]) ;\n\t}\n\ttemplate<class T>\n\tinline void write(T x ,char ch) {\n\t\twrite(x);\n\t\tputchar(ch);\n\t}\n}\nusing namespace fastIO;\nint a[114514],n;\nint main() {\n\tF(qwq,1,read()){\n\t\tread(n);\n\t\tF(i,1,n+n)read(a[i]);\n\t\tsort(a+1,a+n+n+1);\n\t\tF(i,1,n)write(a[i],' '),write(a[n+n-i+1],' ');putchar('\\n');\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Mean Inequality.json",
    "editorial_link": "https://codeforces.com//blog/entry/91195",
    "editorial": "The main idea is that\nwe can split the numbers into the two halves, the big half and small\nhalf, we can place the bigger half at the odd positions and the smaller\nhalf at the even positions. This works because the smallest big number\nis larger than the biggest small number. Hence, the mean of any two\nsmall numbers is smaller than any big number, and the mean of any two\nbig numbers is bigger than any small number.\n"
}