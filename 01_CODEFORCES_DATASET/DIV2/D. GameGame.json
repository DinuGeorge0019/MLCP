{
    "link": "https://codeforces.com//contest/1384/problem/D",
    "problemId": "681337",
    "problem_idx": "D",
    "shortId": "1384D",
    "contest_number": "1384",
    "problem_submissions": {
        "D": [
            87920747,
            87898550,
            87899799,
            87904419,
            87905595,
            87900804,
            87885567,
            87904258,
            87914433,
            87915245,
            87916166,
            87919718,
            87915464,
            87919225,
            87915479,
            87921886,
            87920890,
            87922578,
            87921368,
            87920046
        ],
        "F": [
            87913933
        ],
        "B1": [
            87894001,
            87885002,
            87901113,
            87888080,
            87892689,
            87910843,
            87920006,
            87917285,
            87898927,
            87884228,
            87892152,
            87886631,
            87893715,
            87908879,
            87900239,
            87907063,
            87892421,
            87898971,
            87917937,
            87897854
        ],
        "B2": [
            87893926,
            87884835,
            87901230,
            87887888,
            87903446,
            87910900,
            87919888,
            87917176,
            87906127,
            87884007,
            87892285,
            87886523,
            87893549,
            87908713,
            87900384,
            87907601,
            87892328,
            87898841,
            87917847,
            87897690
        ],
        "C": [
            87885628,
            87894004,
            87882731,
            87893702,
            87872158,
            87889498,
            87895035,
            87884029,
            87889346,
            87904942,
            87896617,
            87893149,
            87904403,
            87889926,
            87909570,
            87895224,
            87907611,
            87906036,
            87884342,
            87911186
        ],
        "A": [
            87871418,
            87873285,
            87873996,
            87872062,
            87871221,
            87872543,
            87898590,
            87873955,
            87871869,
            87871615,
            87875627,
            87876144,
            87877768,
            87875116,
            87878214,
            87873342,
            87873019,
            87876431,
            87871586,
            87881479
        ]
    },
    "name": "D. GameGame",
    "statement": "Koa the Koala and her best friend want to play a game.The game starts\r\nwith an array a of length n consisting of non-negative integers. Koa and\r\nher best friend move in turns and each have initially a score equal to\r\n0. Koa starts.Let’s describe a move in the game: During his move, a\r\nplayer chooses any element of the array and removes it from this array,\r\nxor-ing it with the current score of the player. More formally: if the\r\ncurrent score of the player is x and the chosen element is y, his new\r\nscore will be x\r\noplus y. Here\r\noplus denotes bitwise XOR operation. Note that after a move element y is\r\nremoved from a. The game ends when the array is empty. At the end of the\r\ngame the winner is the player with the maximum score. If both players\r\nhave the same score then it’s a draw.If both players play optimally find\r\nout whether Koa will win, lose or draw the game.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int inf=(int)(2e9);\nconst ll INF=(ll)(5e18);\nconst int N=300010;\n\nint t,n,a[N];\n\nint main()\n{\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\t\tint bl=0;\n\t\tfor(int j=30;j>=0;j--)\n\t\t{\n\t\t\tint sum=0;\n\t\t\tfor(int i=1;i<=n;i++) if(a[i]&(1<<j)) sum++;\n\t\t\tif(sum%2==1)\n\t\t\t{\n\t\t\t\tif(sum%4==1)\n\t\t\t\t{\n\t\t\t\t\tbl=1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(n%2==1) bl=-1;\n\t\t\t\t\telse bl=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(bl==1) puts(\"WIN\");\n\t\telse if(bl==-1) puts(\"LOSE\");\n\t\telse puts(\"DRAW\");\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "games",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. GameGame.json",
    "editorial_link": "https://codeforces.com//blog/entry/80562",
    "editorial": "Let x\n be the number of ones and y\n be the numbers of zeros in the most significant bit of the numbers:\n\nif x\n is even, whatever decision players take, both will end with the same score in that bit, so go to the next bit (if it doesn't exist the game ends in a draw). Indeed, the parity of the result of both players will be the same, since x\n is even.\n\nif x\n is odd, one of the players ends with 0\n in this bit and the other with 1\n, the player with 1\n in this bit wins the game because the well know inequality 2k>?i=0k?12i\n for k?1\n, so the game is equivalent to play on an array of x\n ones and y\n zeros.\nLemma: The second player wins iff xmod4=3\n and ymod2=0\n otherwise the first player wins.\n\nProof: We know that xmod2=1\n so xmod4\n can be 1\n or 3\n\nif xmod4=1\n the first player can choose one 1\n and the remaining number of 1\n is a multiple of 4\n, if the first player always repeats the last move of the second player (if ymod2=1\n and the second player takes the last 0\n both players start taking all the remaining ones), then both ends with the same number of ones which divided by 2\n is even and therefore the first player wins.\n\nif xmod4=3\nif ymod2=0\n the second player can repeat the last move of the first player always so the first ends with a even numbers of 1\n and therefore the second player wins.\nif ymod2=1\n the first player takes one 0\n and the game now is exactly the previous case with the first player as the second player.",
    "hint": []
}