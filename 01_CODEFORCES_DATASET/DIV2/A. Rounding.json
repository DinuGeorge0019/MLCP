{
    "link": "https://codeforces.com//contest/898/problem/A",
    "problemId": "139114",
    "problem_idx": "A",
    "shortId": "898A",
    "contest_number": "898",
    "problem_submissions": {
        "F": [
            33307844,
            33307069,
            33308143,
            33307333,
            33304725,
            33309674,
            33307617,
            33324444,
            33463766,
            33463739
        ],
        "E": [
            33298700,
            33298827,
            33296850,
            33298062,
            33299543,
            33301231,
            33302052,
            33295023,
            33295557,
            33302644,
            33297022,
            33300051,
            33297188,
            33300909,
            33298325,
            33294157,
            33299352
        ],
        "D": [
            33295484,
            33296274,
            33295804,
            33295438,
            33296979,
            33297889,
            33299897,
            33296885,
            33293153,
            33301610,
            33299195,
            33297291,
            33294317,
            33297559,
            33296082,
            33292010,
            33295516
        ],
        "C": [
            33293049,
            33292838,
            33294192,
            33293208,
            33294387,
            33295591,
            36631893,
            33298752,
            33292900,
            33291380,
            33326974,
            33293057,
            33293412,
            33294345,
            33292038,
            33294840,
            33294194,
            33298225,
            33297034
        ],
        "B": [
            33288797,
            33294236,
            33289524,
            33296573,
            33305320,
            33291082,
            33290611,
            33289720,
            33288149,
            33288790,
            33289877,
            33289821,
            33288702,
            33290526,
            33291731,
            33294974,
            33291014
        ],
        "A": [
            33287337,
            33293381,
            33287422,
            33296068,
            33304988,
            33288124,
            33288589,
            33287509,
            33287292,
            33287275,
            33287989,
            33287858,
            33287278,
            33288680,
            33290739,
            33295465,
            33288106
        ]
    },
    "name": "A. Rounding",
    "statement": "Vasya has a non-negative integer . He wants to round it to nearest\r\ninteger, which ends up with . If already ends up with , Vasya considers\r\nit already rounded.For example, if answer is . If Vasya can round it to\r\nor to . Both ways are correct.For given find out to which integer will\r\nVasya round it.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define ll long long\n\nusing namespace std;\n\nconst int N = (3e5), mod = (1e9) + 7;\n\nint n;\n\nint main(){\n\tcin >> n;\n\tif(n % 10 <= 5){\n\t\tn -= n % 10;\n\t}\n\telse{\n\t\tn += (10 - n % 10);\n\t}\n\tcout << n;\n\t\n \treturn 0;\n}             "
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Rounding.json",
    "editorial_link": "https://codeforces.com//blog/entry/56381",
    "editorial": "At first letâs round down the given number to the nearest integer which\r\nends with and store this value in a variable : . So, the round up (call\r\nit ) is .If then the answer is . In the other case, the answer is .\r\n",
    "hint": []
}