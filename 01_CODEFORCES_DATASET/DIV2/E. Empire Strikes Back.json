{
    "link": "https://codeforces.com//contest/300/problem/E",
    "problemId": "2925",
    "problem_idx": "E",
    "shortId": "300E",
    "contest_number": "300",
    "problem_submissions": {
        "E": [
            3626829,
            3626078,
            3626827,
            3626906,
            3628233,
            3629109,
            3629044,
            3629132,
            3628382,
            3629855,
            3627387
        ],
        "D": [
            3624414,
            37352127,
            166085445
        ],
        "C": [
            3622911,
            3623906,
            3623231,
            3623852,
            3624071,
            3623911,
            3624938,
            3627160,
            3625349,
            3624808,
            3623930,
            3623466,
            3623151,
            3624115,
            3624977
        ],
        "A": [
            3621358,
            3621544,
            3621961,
            3621419,
            3622220,
            3621400,
            3621539,
            3627980,
            3621595,
            3622614,
            3621461,
            3623870,
            3621695,
            3622433,
            3621766
        ],
        "B": [
            3622857,
            3624197,
            3622464,
            3628078,
            3624506,
            3622936,
            3628606,
            7721187,
            3623708,
            3623701,
            3623040,
            3622630,
            3624370,
            3625890,
            3622982
        ]
    },
    "name": "E. Empire Strikes Back",
    "statement": "In a far away galaxy there is war again. The treacherous Republic made\r\nprecision strikes of power on the Empire possessions. To cope with the\r\nrepublican threat, the Supreme Council decided to deal a decisive blow\r\nto the enemy forces. To successfully complete the conflict, the\r\nconfrontation balance after the blow should be a positive integer. The\r\nbalance of confrontation is a number that looks like , where ( is the\r\npower of the Imperial strike), . After many years of war the Empire\u2019s\r\nresources are low. So to reduce the costs, should be a minimum positive\r\ninteger that is approved by the commanders.Help the Empire, find the\r\nminimum positive integer , where the described fraction is a positive\r\ninteger.\r\n",
    "solutions": [
        "//program 300-E\n\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nint Get()\n{\n  char c;\n  while(c=getchar(),c<'0'||c>'9');\n  int X=0;\n  while(c>='0'&&c<='9')\n    {\n      X=X*10+c-48;\n      c=getchar();\n    }\n  return X;\n}\n\nint Total;\nint Prime[10000000];\nlong long Count[10000000];\n\nlong long Check(long long X)\n{\n  for(int i=0;i<Total;i++)\n    {\n      long long Sum=0,T=X;\n      while(T)\n        {\n          Sum+=T/Prime[i];\n          T/=Prime[i];\n        }\n      if(Sum<Count[i])\n        return false;\n    }\n  return true;\n}\n\nint main()\n{\n  int N=Get();\n  static int A[1000000];\n  for(int i=0;i<N;i++)\n    A[i]=Get();\n  sort(A,A+N);\n  static bool Flag[10000001];\n  static int Min[10000001];\n  memset(Flag,0,sizeof(Flag));\n  Total=0;\n  for(int i=2;i<=10000000;i++)\n    {\n      if(!Flag[i])\n        {\n          Min[i]=Total;\n          Prime[Total++]=i;\n        }\n      for(int j=0;j<Total&&i*Prime[j]<=10000000;j++)\n        {\n          Flag[i*Prime[j]]=true;\n          Min[i*Prime[j]]=j;\n          if(!(i%Prime[j]))\n            break;\n        }\n    }\n  static long long Delta[10000001];\n  for(int i=10000000,j=N;i>=2;i--)\n    {\n      while(j&&A[j-1]>=i)\n        j--;\n      Delta[i]=N-j;\n    }\n  memset(Count,0,sizeof(Count));\n  for(int i=10000000;i>=2;i--)\n    {\n      Count[Min[i]]+=Delta[i];\n      Delta[i/Prime[Min[i]]]+=Delta[i];\n    }\n  long long Left=1,Right=0;\n  for(int i=0;i<N;i++)\n    Right+=A[i];\n  while(Left<Right)\n    {\n      long long Mid=(Left+Right)/2;\n      if(Check(Mid))\n        Right=Mid;\n      else\n        Left=Mid+1;\n    }\n  cout<<Left<<endl;\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math",
        "number theory"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Empire Strikes Back.json",
    "editorial_link": "https://codeforces.com//blog/entry/7497",
    "editorial": "Let\u00e2\u0080\u0099s . is upper bound for answer. is divisible by , you can easily\r\nprove it using facts about prime powers in factorial and following\r\ninequality . By the way, is called multinomial coefficient. So answer\r\ncan\u00e2\u0080\u0099t exceed . If divisible by , then is also divisible by . That means\r\nthat function of divisibility is monotonic and we can use binary search.\r\nFor every , , let\u00e2\u0080\u0099s precalc max prime in using linear sieve of\r\nEratosthenes. For it will be . After that let\u00e2\u0080\u0099s create a vector, with\r\nall primes less then . Now let\u00e2\u0080\u0099s calculate following values amount of\r\nnumbers , . Now me can factorize denominator like this: Finally we use\r\nbinary search from to . uthor\u00e2\u0080\u0099s solution\r\n"
}