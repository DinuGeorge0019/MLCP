{"link": "https://codeforces.com//contest/1451/problem/D", "problemId": "804300", "problem_idx": "D", "shortId": "1451D", "contest_number": "1451", "problem_submissions": {"E2": [99164666, 99162733, 99165925, 99161646, 99162275, 99166708, 99177844, 99187045, 99171193, 99180740, 99166779, 99593065, 99167139, 99212094, 99180750, 99167382, 99164289, 99170306, 99166489, 99174952, 99170046], "F": [99157323, 99174334, 99172211, 99171897, 99169968, 99159796, 99185696, 99185913, 99161260, 99186126, 101852088, 99331616, 99277099, 99194656], "E1": [99152747, 99148819, 99166585, 99161270, 99161762, 99166831, 99177296, 99186671, 99171561, 99180543, 99167295, 99166954, 99212099, 99162460, 99166940, 99164739, 99169616, 99166777, 99174556, 99160048], "B": [99139927, 99129712, 99127148, 99131588, 99133196, 99173277, 99136243, 99144900, 99179324, 99132526, 99124656, 99134309, 99211443, 99138683, 99129420, 99135350, 99127140, 99142430, 99125493, 99136003], "C": [99137455, 99134588, 99132257, 99139076, 99140138, 99171814, 99145789, 99142052, 99183664, 99140696, 99133474, 99140223, 99211399, 99130542, 99135361, 99140699, 99137433, 99148880, 99132285, 99139620], "D": [99133620, 99140832, 99142901, 99155332, 99185292, 99169795, 99166634, 99139104, 99176250, 99168173, 99147779, 99144152, 99212069, 99141953, 99149299, 99150791, 99154805, 99153259, 99147140, 99162814], "A": [99120654, 99120423, 99121791, 99121810, 99124507, 99174166, 99122054, 99147895, 99180245, 99124534, 99120454, 99123326, 99211324, 99120847, 99120693, 99131959, 99121501, 99120866, 99121109, 99120621]}, "name": "D. Circle Game", "statement": "Utkarsh is forced to play yet another one of Ashish\u2019s games. The game\r\nprogresses turn by turn and as usual, Ashish moves .Consider the 2D\r\nplane. There is a token which is initially at . In one move a player\r\nmust increase either the x coordinate or the y coordinate of the token\r\nby k. In doing so, the player must ensure that the token stays within a\r\n(Euclidean) distance d from (0,0).In other words, if after a move the\r\ncoordinates of the token are (p,q), then p^2 + q^2\r\nleq d^2 must hold.The game ends when a player is unable to make a move.\r\nIt can be shown that the game will end in a finite number of moves. If\r\nboth players play optimally, determine who will win.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll,ll> ii;\ntypedef vector<int> vi;\n\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n\n#define unrequited_love ios_base::sync_with_stdio(0);cin.tie(0);\n\nvoid solve(vi a)\n{\n\tint n=a.size();\n\tsort(a.rbegin(), a.rend());\n\tint k = 1;\n\twhile (k + 1 <= n && a[k] >= k + 1) {\n\t\tk += 1;\n\t}\n\tint up = a[k - 1] - k;\n\tint right = 0;\n\twhile (k + right < n && a[k + right] == k) {\n\t\t++right;\n\t}\n\tcout << (up % 2 == 0 && right % 2 == 0 ? \"Ashish\" : \"Utkarsh\") << '\\n';\n}\n\nint main()\n{\n\tunrequited_love\n\tint t; cin>>t;\n\twhile(t--)\n\t{\n\t\tll d,k; cin>>d>>k;\n\t\tll bestr = (d*d)/(k*k);\n\t\tvi ans;\n\t\tll cur=0;\n\t\twhile(cur*cur<=bestr)\n\t\t{\n\t\t\tll rem = bestr-cur*cur;\n\t\t\tll ps = max(ll(floor(sqrt(double(rem))))-1,0LL);\n\t\t\twhile((ps+1)*(ps+1)<=rem) ps++;\n\t\t\t//cerr<<\"CUR, PS = \"<<cur<<' '<<ps<<'\\n';\n\t\t\tans.pb(ps);\n\t\t\tcur++;\n\t\t}\n\t\t/*\n\t\tfor(int x:ans)\n\t\t{\n\t\t\tcout<<x<<' ';\n\t\t}\n\t\tcout<<'\\n';\n\t\t*/\n\t\tsolve(ans);\n\t}\n}\n"], "input": "", "output": "", "tags": ["games", "geometry", "math"], "dificulty": "1700", "interactive": false}