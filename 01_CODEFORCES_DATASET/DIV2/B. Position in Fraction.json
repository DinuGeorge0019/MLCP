{
    "link": "https://codeforces.com//contest/900/problem/B",
    "problemId": "138315",
    "problem_idx": "B",
    "shortId": "900B",
    "contest_number": "900",
    "problem_submissions": {
        "E": [
            33123004,
            33122209,
            33124223,
            33128027,
            33126296,
            33123992,
            33134877,
            33131568,
            33129839,
            33130568,
            33133529,
            33128615,
            33134512,
            33135377,
            33134229,
            33129907,
            33131645,
            33132271,
            33131644,
            33134967
        ],
        "D": [
            33118613,
            33126606,
            33120228,
            33117273,
            33128904,
            33134754,
            33121668,
            33126110,
            33125759,
            33125945,
            33128804,
            33134849,
            33122370,
            33129223,
            33130838,
            33134832,
            33134143,
            33128551,
            33127657,
            33131147
        ],
        "C": [
            33115963,
            33117760,
            33121163,
            33122923,
            33116908,
            33117063,
            33119169,
            33119501,
            33119408,
            33116545,
            33115888,
            33118394,
            33117100,
            33118026,
            33118964,
            33124120,
            33125946,
            33125772,
            33132467,
            33127142
        ],
        "A": [
            33113471,
            33111416,
            33111216,
            33111936,
            33113195,
            33111439,
            33114180,
            33112223,
            33112487,
            33111223,
            33113441,
            33111156,
            33111069,
            33111686,
            33111630,
            33112745,
            33116326,
            33118751,
            33111288,
            33112610
        ],
        "B": [
            33113418,
            33112919,
            33113915,
            33113361,
            33113043,
            33114488,
            33114219,
            33114774,
            33114387,
            33120138,
            33117548,
            33115087,
            33114887,
            33116028,
            33119460,
            33117688,
            33126678,
            33113193,
            33125132
        ]
    },
    "name": "B. Position in Fraction",
    "statement": "You have a fraction . You need to find the first occurrence of digit\r\ninto decimal notation of the fraction after decimal point.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint a,b,c,n;\n\nint main()\n{\n    scanf(\"%d%d%d\",&a,&b,&c);\n    a%=b;\n    for (int i=1;i<=b;i++)\n    {\n        a=a*10;\n        if (a/b==c) {printf(\"%d\\n\",i); return 0;}\n        a%=b;\n    }\n    printf(\"-1\\n\");return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Position in Fraction.json",
    "editorial_link": "https://codeforces.com//blog/entry/56294",
    "editorial": "In this task you should complete long division and stop, when one period\r\npassed. Period canât be more than by pigeonhole principle. So you need\r\nto complete iterations and if digit hasnât been met, print .Time\r\ncomplexity .\r\n",
    "hint": []
}