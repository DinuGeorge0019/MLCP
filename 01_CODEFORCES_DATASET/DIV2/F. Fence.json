{"link": "https://codeforces.com//contest/234/problem/F", "problemId": "1960", "problem_idx": "F", "shortId": "234F", "contest_number": "234", "problem_submissions": {"H": [2367539, 2367451, 2368150, 2370396, 2370658, 2370962, 2366548, 2371136, 2368724, 2371319, 2371738, 2371707, 2371633, 2371399, 2372543, 2371466, 2371579, 2370616, 2372517, 2371242, 2370000, 2369494, 2368027], "G": [2366778, 2367963, 2367273, 2366003, 2367337, 2369442, 2365464, 2370198, 2369038, 2367019, 2369795, 2369869, 2370563, 2370624, 2371914, 2369303, 2370831, 2369435, 2366860, 2367459], "F": [2366410, 2365209, 2366625, 2364676, 2368686, 2368593, 2367997, 2368802, 2370008, 2369667, 2368790, 2368840, 2370409, 2370044, 2370035, 2371269, 2370102, 2371604, 2369327, 2367672, 2365739], "E": [2365219, 2368827, 2365948, 2367641, 2365791, 2366952, 2369059, 2367661, 2366539, 2369676, 2368181, 2368719, 2368819, 2368874, 2372171, 2364796, 2371458, 2372485], "D": [2364321, 2365862, 2364413, 2367581, 2370064, 2365410, 2370417, 2366504, 2366761, 2365880, 2367326, 2366556, 2367362, 2367609, 2371380, 2368228, 2369174, 2367730, 2365306, 2365279], "C": [2363257, 2362903, 2363465, 2365238, 2363763, 2363410, 2364436, 2363868, 2364379, 2364135, 2363776, 2364604, 2364795, 2363038, 2364919, 2364126, 2370085, 2371849, 2363438], "B": [2362948, 2363065, 2363029, 2363437, 2363118, 2363011, 2362872, 2362890, 2362859, 2363131, 2363285, 2363584, 2364047, 2362778, 2364119, 2362767, 2369079, 2371817, 2363262], "A": [2362806, 2363229, 2362850, 2362910, 2362820, 2362807, 2363375, 2363964, 2363091, 2364949, 2362894, 2362906, 2363355, 2366630, 2363699, 2368520, 2368676, 2371574, 2363053]}, "name": "F. Fence", "statement": "Vasya should paint a fence in front of his own cottage. The fence is a\r\nsequence of wooden boards arranged in a single row. Each board is a\r\ncentimeter wide rectangle. Let\u2019s number the board fence using numbers\r\nfrom left to right. The height of the -th board is centimeters.Vasya has\r\na centimeter wide brush and the paint of two colors, red and green. Of\r\ncourse, the amount of the paint is limited. Vasya counted the area he\r\ncan paint each of the colors. It turned out that he can not paint over\r\nsquare centimeters of the fence red, and he can not paint over square\r\ncentimeters green. Each board of the fence should be painted exactly one\r\nof the two colors. Perhaps Vasya won\u2019t need one of the colors.In\r\naddition, Vasya wants his fence to look smart. To do this, he should\r\npaint the fence so as to minimize the value that Vasya called the fence\r\nvalue. Vasya believes that two consecutive fence boards, painted\r\ndifferent colors, look unattractive. The value of a fence is the total\r\nlength of contact between the neighboring boards of various colors. To\r\nmake the fence look nice, you need to minimize the value as low as\r\npossible. Your task is to find what is the minimum unattractiveness\r\nVasya can get, if he paints his fence completely. The picture shows the\r\nfence, where the heights of boards (from left to right) are 2,3,2,4,3,1.\r\nThe first and the fifth boards are painted red, the others are painted\r\ngreen. The first and the second boards have contact length 2, the fourth\r\nand fifth boards have contact length 3, the fifth and the sixth have\r\ncontact length 1. Therefore, the of the given painted fence is 2+3+1=6.\r\n", "solutions": ["#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<vector>\n#include<string>\n#include<iostream>\n#include<sstream>\n\nusing namespace std;\n\nconst int maxn = 200 + 10;\n\nint n, a, b;\nint h[maxn];\nint dp[maxn][maxn * maxn][2];\n\nvoid update(int &t, int v) {\n\tif(t == -1 || t > v) t = v;\n}\n\nint main() {\n\tfreopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d%d%d\", &n, &a, &b);\n\tfor(int i=1; i<=n; i++) scanf(\"%d\", &h[i]);\n\tmemset(dp, -1, sizeof(dp));\n\tdp[0][0][0] = dp[0][0][1] = 0;\n\tint amount = 0;\n\tfor(int i=0; i<n; i++) {\n\t\tamount += h[i];\n\t\tfor(int j=max(0, amount-b); j<=a && j<=amount; j++) {\n\t\t\tfor(int u=0; u<2; u++) {\n\t\t\t\tint ans = dp[i][j][u];\n\t\t\t\tif(ans == -1) continue;\n\t\t\t\tfor(int v=0; v<2; v++) {\n\t\t\t\t\tif(v==0) {\n\t\t\t\t\t\tupdate(dp[i+1][j+h[i+1]][v], ans + (v!=u)*min(h[i], h[i+1]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdate(dp[i+1][j][v], ans + (v!=u)*min(h[i], h[i+1]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tint res = -1;\n\tamount += h[n];\n\tfor(int j=max(0, amount-b); j<=a && j<=amount; j++) {\n\t\tfor(int u=0; u<2; u++) {\n\t\t\tif(dp[n][j][u] == -1) continue;\n\t\t\tupdate(res, dp[n][j][u]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\", res);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["dp"], "dificulty": "1800", "interactive": false}