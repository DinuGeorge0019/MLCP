{"link": "https://codeforces.com//contest/384/problem/C", "problemId": "5719", "problem_idx": "C", "shortId": "384C", "contest_number": "384", "problem_submissions": {"E": [5754820, 5756457, 5757218, 5768768, 5754973, 5757082, 5757773, 5753824, 5757669, 5759993, 5759984, 5759937], "C": [5752253, 5751497, 5752881, 5756887, 5754090, 5753464, 5757534, 5753590, 5750204, 5750062, 5751623, 5750722, 5749880, 5751415, 5751385, 5750837, 5751269, 5751529, 5751672, 5751983], "B": [5748010, 5749890, 5748064, 5751405, 5751229, 5751814, 5754578, 5753247, 5749239, 5750952, 5748962, 5749250, 5750859, 5749807, 5750164, 5749512, 5750591, 5750157, 5750184, 5749558], "A": [5747255, 5747392, 5747271, 5747721, 5748251, 5749148, 5747297, 5749334, 5748038, 5747882, 5747312, 5747613, 5747325, 5747593, 5747897, 5747709, 5747419, 5747633, 5747362, 5747257], "D": [5759668, 5766263]}, "name": "C. Milking cows", "statement": "Iahub helps his grandfather at the farm. Today he must milk the cows.\r\nThere are cows sitting in a row, numbered from to from left to right.\r\nEach cow is either facing to the left or facing to the right. When Iahub\r\nmilks a cow, all the cows that see the current cow get scared and lose\r\none unit of the quantity of milk that they can give. A cow facing left\r\nsees all the cows with lower indices than her index, and a cow facing\r\nright sees all the cows with higher indices than her index. A cow that\r\ngot scared once can get scared again (and lose one more unit of milk). A\r\ncow that has been milked once cannot get scared and lose any more milk.\r\nYou can assume that a cow never loses all the milk she can give (a cow\r\ngives an infinitely amount of milk).Iahub can decide the order in which\r\nhe milks the cows. But he must milk each cow exactly once. Iahub wants\r\nto lose as little milk as possible. Print the minimum amount of milk\r\nthat is lost.\r\n", "solutions": ["//Solution by Zhusupov Nurlan\n#include <iostream>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cctype>\n#include <cmath>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <ctime>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef map<string , int> MSI;\ntypedef vector<int> VI;\n\n#define pb(x) push_back(x)\n#define sqr(x) ((x) * (x))\n#define F first\n#define S second\n#define SZ(t) ((int) t.size())\n#define len(t) ((int) t.length())\n#define base 10\n#define fname \"\"\n#define sz 1000 * 1000\n#define EPS (1e-8)\n#define INF ((int)1e9 + 9)\n#define write(xx) printf(\"%d\" , xx);\n#define readln(xx) getline(cin , xx)\n#define read(xx) scanf(\"%d\" , &xx)\n#define for(xx1 , yy1 , zz1) for(int zz1 = xx1 ; zz1 <= yy1 ; zz1++)\n#define mp make_pair\nconst double PI  = acos(-1.0);\n\nint a[sz], s1, s2, p1, p2, t[2][sz], c1, c2, c, n, L[sz], R[sz];\nlong long ans;\n\nvoid upd(int g, int v, int l, int r, int p, int x)\n{\n\tif (l == r)\n\t\tt[g][v] = x;\n\telse\n\t{\n\t\tint m = (l + r) >> 1;\n\t\tif (p <= m)\n\t\t\tupd(g, v + v, l, m, p, x);\n\t\telse\n\t\t\tupd(g, v + v + 1, m + 1, r, p, x);\n\t\tt[g][v] = t[g][v + v] + t[g][v + v + 1];\n\t}\n}\n\n\nint get(int g, int v, int tl, int tr, int l, int r)\n{\n\tif (l > r)\n\t\treturn 0;\n\tif (l == tl && r == tr)\n\t\treturn t[g][v];\n\tint m = (tl + tr) >> 1;\n\treturn get(g, v + v, tl, m, l, min(r, m)) + get(g, v + v + 1, m + 1, tr, max(m + 1, l), r);\n}\n\nint main(){\n\t//freopen(fname\"in\", \"r\", stdin);\n\tios_base::sync_with_stdio(false);\n    cin.tie(0);\n\tcin >> n;\n\tfor (1, n, i)\n\t{\n\t\tcin >> a[i];\n\t\tif (a[i])\n\t\t\tL[++c1] = i;\n\t\telse\n\t\t\tR[++c2] = i;\n\t\tupd(a[i], 1, 1, n, i, 1);\t\n\t}\n\tc = 1;\n\tfor (1, n, i)\n\t{\n\t\tif (c <= c1 && c2)\n\t\t{\n\t\t\tp1 = L[c];\n\t\t\tp2 = R[c2];\n\t\t\ts1 = get(1, 1, 1, n, 1, p1 - 1) + get(0, 1, 1, n, p1 + 1, n);\n\t\t\ts2 = get(1, 1, 1, n, 1, p2 - 1) + get(0, 1, 1, n, p2 + 1, n);\n\t\t\tans += min(s1, s2);\n\t\t\tif (s1 < s2)\n\t\t   \t{\n\t\t   \t\tupd(1, 1, 1, n, p1, 0);\n\t\t   \t\tc++;\n\t\t   \t}\n\t\t   \telse\n\t\t   \t{\n\t\t   \t\tupd(0, 1, 1, n, p2, 0);\n\t\t   \t\tc2--;\n\t\t   \t}\n\t\t}\n\t\telse\n\t\tbreak;\n\t}\n\tcout << ans;\n    \treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1600", "interactive": false}