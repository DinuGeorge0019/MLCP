{"link": "https://codeforces.com//contest/583/problem/E", "problemId": "37194", "problem_idx": "E", "shortId": "583E", "contest_number": "583", "problem_submissions": {"E": [13375753, 13396222], "D": [13371700, 13375834, 13375664, 13375798, 13376138, 13377993, 13375935, 13375839, 13375159, 13377276, 13376289, 13377157, 13375820, 13376745, 13376124, 13377422, 13377342, 13377605], "B": [13364674, 13365201, 13363126, 13365327, 13365425, 13364429, 13367401, 13370194, 13367295, 13364694, 13364942, 13365660, 13367313, 13366206, 13367386, 13368153, 13364343, 13366693], "A": [13362665, 13362396, 13364500, 13362804, 13362621, 13362398, 13364299, 13368142, 13363751, 13362641, 13362459, 13362661, 13364238, 13362509, 13363582, 13363832, 13362516, 13363164], "C": [13368419, 13368334, 13370522, 13369874, 13370412, 13370222, 13366293, 13372301, 13369921, 13372160, 13372319, 13372641, 13371990, 13372547, 13373001, 13368713, 13370537]}, "name": "E. Superior Periodic Subarrays", "statement": "You are given an infinite periodic array with the period of length .\r\nFormally, . A periodic subarray (, ) of array is an infinite periodic\r\narray with a period of length that is a subsegment of array , starting\r\nwith position .A periodic subarray is , if when attaching it to the\r\narray , starting from index , any element of the subarray is larger than\r\nor equal to the corresponding element of array . An example of attaching\r\nis given on the figure (top infinite array , bottom its periodic\r\nsubarray ): Find the number of distinct pairs , corresponding to the\r\nsuperior periodic arrays.\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<iostream>\n#include<vector>\nusing namespace std;\ninline void readi(int &x);\nconst int maxn=200005;\nint n;\nlong long ans;\nint a[maxn*2],c[maxn*2],b[maxn];\nvector<int> v[maxn];\n\nint gcd(int a,int b)\n{return b?gcd(b,a%b):a;}\n\nint calc(int g,int l)\n{\n    int low=-1,high=v[g].size(),mid;\n    while(low+1<high)\n    {\n        mid=low+high>>1;\n        if(c[l+v[g][mid]]-c[l]==0)low=mid;\n        else high=mid;\n    }\n    return low+1;\n}\n\nint main()\n{\n    readi(n);\n    for(int i=0;i<n;i++)readi(a[i]),a[i+n]=a[i];\n    a[n+n]=a[0];\n    for(int i=1;i<n;i++)\n        v[gcd(n,i)].push_back(i);\n    for(int g=1;g<n;g++)\n        if(!v[g].empty())\n        {\n            memset(b,0,n+1<<2);\n            for(int i=0;i<n;i++)\n                b[i%g]=max(b[i%g],a[i]);\n            c[0]=0;\n            for(int i=0;i<=n+n;i++)\n            {\n                if(a[i]>=b[i%g])c[i+1]=c[i];\n                else c[i+1]=c[i]+1;\n            }\n            for(int i=0;i<n;i++)\n                ans+=calc(g,i);\n        }\n    cout<<ans<<endl;\n    return 0;\n}\n\ninline void readi(int &x)\n{char c;while(c=getchar(),c<'0'||c>'9');\nx=c^'0';while(c=getchar(),c>='0'&&c<='9')x=x*10+(c^'0');}\n"], "input": "", "output": "", "tags": ["number theory"], "dificulty": "2400", "interactive": false}