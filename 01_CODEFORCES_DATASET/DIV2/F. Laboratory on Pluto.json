{"link": "https://codeforces.com//contest/1775/problem/F", "problemId": "1730878", "problem_idx": "F", "shortId": "1775F", "contest_number": "1775", "problem_submissions": {"F": [188713433, 188725196, 188731396, 188734657, 188732056, 188733441, 188727879, 188728779, 188732238, 188744590, 188740643, 188819082, 188726758, 188730587, 188740657, 188744867, 188749677, 188736230, 188750878, 188747224, 188750488], "E": [188705052, 188711810, 188702314, 188703997, 188719714, 188707610, 188716487, 188718865, 188714441, 188704775, 188725287, 188819074, 188708013, 188721335, 188719084, 188719253, 188714969, 188726615, 188723431, 188727896, 188725883], "D": [188702613, 188703020, 188697830, 188697522, 188707471, 188696985, 188707674, 188710332, 188711385, 188724357, 188713699, 188819118, 188819061, 188695392, 188715707, 188723783, 188712755, 188710335, 188700501, 188714975, 188711803, 188710270], "C": [188694431, 188698020, 188689331, 188692115, 188699073, 188721317, 188698207, 188703599, 188700577, 188691524, 188697369, 188818955, 188729950, 188704268, 188712641, 188705362, 188703234, 188716581, 188706582, 188705592, 188701989], "B": [188689294, 188694420, 188688425, 188705924, 188692481, 188693569, 188693704, 188692884, 188692641, 188690496, 188689877, 188818945, 188737766, 188698596, 188704549, 188701478, 188699101, 188697811, 188699643, 188700904, 188695734], "A2": [188688478, 188690842, 188692472, 188689269, 188688789, 188704546, 188691442, 188689540, 188689829, 188692114, 188699776, 188818970, 188727805, 188692265, 188700238, 188696195, 188689432, 188688599, 188695159, 188698301, 188690756], "A1": [188688462, 188690964, 188692352, 188689360, 188688853, 188699704, 188691533, 188689633, 188689929, 188688691, 188699645, 188818981, 188689698, 188692382, 188700463, 188696403, 188689492, 188688657, 188694924, 188695874, 188690864]}, "name": "F. Laboratory on Pluto", "statement": "As you know, Martian scientists are actively engaged in space research.\r\nOne of the highest priorities is Pluto. In order to study this planet in\r\nmore detail, it was decided to build a laboratory on Pluto.It is known\r\nthat the lab will be built of n square blocks of equal size. For\r\nconvenience, we will assume that Pluto\u2019s surface is a plane divided by\r\nvertical and horizontal lines into unit squares. Each square is either\r\noccupied by a lab block or not, and only n squares are occupied.Since\r\neach block is square, it has four walls. If a wall is adjacent to\r\nanother block, it is considered , otherwise .Pluto is famous for its\r\nextremely cold temperatures, so the outside walls of the lab must be\r\ninsulated. One unit of insulation per exterior wall would be required.\r\nThus, the greater the total length of the outside walls of the lab (i.\r\ne., its perimeter), the more insulation will be needed.Consider the lab\r\nlayout in the figure below. It shows that the lab consists of n = 33\r\nblocks, and all the blocks have a total of 24 outside walls, i. e. 24\r\nunits of insulation will be needed.You should build the lab optimally,\r\ni. e., minimize the amount of insulation. On the other hand, there may\r\nbe many optimal options, so scientists may be interested in the number\r\nof ways to build the lab using the minimum amount of insulation, modulo\r\na prime number m.Two ways are considered the same if they are the same\r\nwhen overlapping without turning. Thus, if a lab plan is rotated by 90^{\r\ncirc}, such a new plan can be considered a separate way.To help\r\nscientists explore Pluto, you need to write a program that solves these\r\ndifficult problems.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define ll long long\n#define ii pair<int,int>\n#define iii tuple<int,int,int>\n#define fi first\n#define se second\n#define endl '\\n'\n#define debug(x) cout << #x << \": \" << x << endl\n\n#define pub push_back\n#define pob pop_back\n#define puf push_front\n#define pof pop_front\n#define lb lower_bound\n#define ub upper_bound\n\n#define rep(x,start,end) for(int x=(start)-((start)>(end));x!=(end)-((start)>(end));((start)<(end)?x++:x--))\n#define all(x) (x).begin(),(x).end()\n#define sz(x) (int)(x).size()\n\nmt19937 rng(chrono::system_clock::now().time_since_epoch().count());\n\nint n,MOD;\nvector<int> area;\n\nint memo[1005]; //excess is at most this much???\n\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin.exceptions(ios::badbit | ios::failbit);\n\t\n\trep(x,0,2000) area.pub((x/2)*((x+1)/2));\n\t\n\tint TC,TYP;\n\tcin>>TC>>TYP;\n\tif (TYP==2){\n\t\tcin>>MOD;\n\t\t\n\t\tmemo[0]=1;\n\t\trep(x,1,1005) rep(z,0,4){\n\t\t\trep(y,0,1005-x){\n\t\t\t\tmemo[x+y]=(memo[x+y]+memo[y])%MOD;\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (TC--){\n\t\tcin>>n;\n\t\t\n\t\tint lo=0,hi=sz(area),mi;\n\t\twhile (hi-lo>1){\n\t\t\tmi=hi+lo>>1;\n\t\t\tif (area[mi]<n) lo=mi;\n\t\t\telse hi=mi;\n\t\t}\n\t\t\n\t\tint h=hi/2,w=(hi+1)/2;\n\t\t\t\n\t\tif (TYP==1){\n\t\t\tcout<<h<<\" \"<<w<<endl;\n\t\t\t\n\t\t\trep(x,0,h){\n\t\t\t\trep(y,0,w){\n\t\t\t\t\tif (n){\n\t\t\t\t\t\tcout<<\"#\";\n\t\t\t\t\t\tn--;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout<<\".\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\t\n\t\t}\n\t\telse{\n\t\t\tint p=h+w;\n\t\t\t\n\t\t\tint ans=0;\n\t\t\trep(x,h-105,h+105){\n\t\t\t\tint w=p-x;\n\t\t\t\tif (w>0 && x>0 && n<=x*w) ans=(ans+memo[x*w-n])%MOD;\n\t\t\t}\n\t\t\t\n\t\t\tcout<<2*p<<\" \"<<ans<<endl;\n\t\t}\n\t}\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "dp", "greedy", "math"], "dificulty": "2500", "interactive": false}