{
    "link": "https://codeforces.com//contest/635/problem/A",
    "problemId": "49954",
    "problem_idx": "A",
    "shortId": "635A",
    "contest_number": "635",
    "problem_submissions": {
        "F": [
            16715109,
            16429856
        ],
        "E": [
            16413519,
            16414980,
            16415683,
            16413671,
            16416127,
            16415965,
            16412886,
            16411309,
            16414895,
            16431030,
            16415653,
            16557734
        ],
        "D": [
            16411390,
            16412670,
            16411204,
            16413229,
            16412878,
            16413863,
            16411883,
            16412667,
            16409842,
            16411803,
            16408893,
            16411766,
            16411437,
            16412231,
            16411782,
            16413499,
            16413108
        ],
        "C": [
            16410177,
            16409314,
            16412788,
            16419061,
            16414730,
            16411184,
            16411076,
            16417490,
            16413342,
            16420377,
            16409924,
            16410108,
            16409728,
            16410259,
            16410185,
            16410892
        ],
        "A": [
            16409333,
            16408548,
            16407902,
            16407920,
            16407765,
            16408000,
            16407909,
            16408814,
            16407724,
            16408398,
            16412714,
            16407922,
            16407797,
            16408056,
            16414324,
            16407823,
            16407862
        ],
        "B": [
            16408961,
            16410486,
            16409109,
            16409265,
            16408639,
            16409212,
            16408803,
            16414234,
            16408509,
            16409385,
            16408280,
            16408866,
            16408225,
            16408994,
            16407968,
            16409084,
            16408701
        ]
    },
    "name": "A. Orchestra",
    "statement": "Paul is at the orchestra. The string section is arranged in an\r\nrectangular grid and is filled with violinists with the exception of\r\nviolists. Paul really likes violas, so he would like to take a picture\r\nincluding at least of them. Paul can take a picture of any axis-parallel\r\nrectangle in the orchestra. Count the number of possible pictures that\r\nPaul can take.Two pictures are considered to be different if the\r\ncoordinates of corresponding rectangles are different.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint a[20][20];\nint main()\n{\n\tint r, c, n, k;\n\tscanf(\"%d%d%d%d\", &r, &c, &n, &k);\n\tfor (int i = 0; i < n; ++ i)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\ta[x][y] = 1;\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= r; ++ i)\n\t{\n\t\tfor (int j = 1; j <= c; ++ j)\n\t\t{\n\t\t\tfor (int q = i; q <= r; ++ q)\n\t\t\t{\n\t\t\t\tfor (int l = j; l <= c; ++ l)\n\t\t\t\t{\n\t\t\t\t\tint s = 0;\n\t\t\t\t\tfor (int x = i; x <= q; ++ x)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (int y = j; y <= l; ++ y)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ts += a[x][y];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tans += s >= k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Orchestra.json",
    "editorial_link": "https://codeforces.com//blog/entry/43467",
    "editorial": "We can iterate over each possible rectangle and count the number of\r\nviolists enclosed. This can be optimized with rectangular prefix sums,\r\nthough the simple brute force is sufficient for this problem. Runtime:\r\n",
    "hint": []
}