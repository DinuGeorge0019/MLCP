{
    "link": "https://codeforces.com//contest/1977/problem/B",
    "problemId": "2665942",
    "problem_idx": "B",
    "shortId": "1977B",
    "contest_number": "1977",
    "problem_submissions": {
        "E": [
            262753822,
            262767302,
            262773066,
            262777674,
            262770623,
            263031771,
            262879241,
            264157721,
            262777678,
            262818461
        ],
        "D": [
            262746020,
            262752021,
            262759316,
            262764901,
            262755194,
            262759469,
            262754791,
            262756257,
            262756747,
            262758299,
            262756876,
            262759489,
            262764620,
            263176565,
            262763419,
            262766760,
            262758943,
            262862798,
            262762983
        ],
        "C": [
            262738877,
            262741499,
            262749383,
            262755959,
            262751324,
            262744765,
            262746576,
            262745225,
            262746869,
            262742949,
            262746742,
            262750727,
            262747283,
            262749635,
            262746257,
            262754822,
            262746319,
            262748048
        ],
        "B": [
            262726958,
            262730863,
            262733935,
            262745603,
            262761343,
            262730294,
            262743622,
            262733897,
            262738963,
            262733871,
            262744047,
            262734098,
            262734002,
            262729823,
            262734056,
            262744847,
            262730762,
            262734650
        ],
        "A": [
            262718457,
            262717434,
            262719669,
            262733443,
            262738974,
            262717708,
            262717306,
            262718538,
            262718880,
            262733522,
            262717623,
            262718056,
            262717973,
            262720675,
            262720426,
            262717331,
            262720010,
            262725818
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129858",
    "editorial": "We will iterate over the prefix of i\n bits and construct a correct answer for the number formed by the prefix bits of the number x\n. We are interested in considering only the one bits, as they are the only ones that affect the value of the number x\n.\n\nIf we have already placed a one at position i\n in the answer, we need to somehow add 2i\n to the number. To do this, we simply zero out the i\n-th bit in the answer and set it at i+1\n  this will add 2?2i=2i+1\n.\n\nNow, the i\n-th position in the answer holds 0\n.\n\nLet's consider what we placed at position i?1\n in the answer. If it's 0\n, then everything is fine; we just place 1\n at position i\n. If it's 1\n, we have a situation of [1 1], which we correct by making it [-1 0 1]  placing ?1\n at i?1\n, leaving 0\n at i\n, and placing 1\n at i+1\n. This will add 2i\n to the sum because 2i+2i?1=2i+1?2i?1\n. The remaining case is when i?1\n holds ?1\n, but this is impossible because our forward operations only place ones, and ?1\n is placed behind.",
    "name": "B. Binary Colouring",
    "statement": "You are given a positive integer x. Find any array of integers a_0, a_1,\r\nldots, a_{n-1} for which the following holds: 1\r\nle n\r\nle 32, a_i is 1, 0, or -1 for all 0\r\nle i\r\nle n - 1, x =\r\ndisplaystyle{\r\nsum_{i=0}^{n - 1}{a_i\r\ncdot 2^i}}, There does not exist an index 0\r\nle i\r\nle n - 2 such that both a_{i}\r\nneq 0 and a_{i + 1}\r\nneq 0. It can be proven that under the constraints of the problem, a\r\nvalid array always exists.\r\n",
    "solutions": [
        "// Problem: B. Binary Colouring// Contest: Codeforces - Codeforces Round 948 (Div. 2)// URL: https://mirror.codeforces.com/contest/1977/problem/B// Memory Limit: 256 MB// Time Limit: 1000 ms// // Powered by CP Editor (https://cpeditor.org) // Author: EnucAI#include <bits/stdc++.h> #ifdef LOCAL#include \"debug.h\"#else#define D(...) ((void)0)#endif using ll = long long;using ull = unsigned long long;using ld = long double;using vi = std::vector<int>;using pii = std::pair<int, int>; constexpr int inf = std::numeric_limits<int>::max() / 2;constexpr ll infll = std::numeric_limits<ll>::max() / 2;constexpr ld eps = 1e-8l; #define all(x) (x).begin(), (x).end()#define sz(x) ((int)((x).size()))#define rep(i, j, k) for (int i = (j); i <= (k); i++)#define per(i, j, k) for (int i = (j); i >= (k); i--)#define fi first#define se second#define mp std::make_pair#define pb push_back#define ppb pop_back#define eb emplace_back template <class X, class Y> void chkmax(X &x, const Y &y) { if (x < y) x = y; }template <class X, class Y> void chkmin(X &x, const Y &y) { if (x > y) x = y; }  int x;vi ans; void work() {  std::cin >> x;  ans.clear();  while (x) {    ans.pb(x & 1);    x >>= 1;  }  rep(i, 0, sz(ans) - 2) {    if (ans[i] && ans[i + 1]) {      if (i + 2 == sz(ans)) ans.pb(0);      ans[i + 2]++;      ans[i + 1] = 0;      ans[i] = -1;      rep(j, i + 2, sz(ans) - 1) {        if (ans[j] == 2) {          ans[j] = 0;          if (j + 1 == sz(ans)) ans.pb(0);          ans[j + 1]++;        } else break;      }    }  }  std::cout << sz(ans) << '\\n';  rep(i, 0, sz(ans) - 1) std::cout << ans[i] << \" \\n\"[i == sz(ans) - 1];} int main() {  std::cin.tie(nullptr)->sync_with_stdio(false);  int t;  std::cin >> t;  while (t--) work();}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Binary Colouring.json",
    "hint": []
}