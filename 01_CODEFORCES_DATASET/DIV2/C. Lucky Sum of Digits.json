{
    "link": "https://codeforces.com//contest/110/problem/C",
    "problemId": "579",
    "problem_idx": "C",
    "shortId": "110C",
    "contest_number": "110",
    "problem_submissions": {
        "E": [
            647829,
            649167,
            646023,
            646546,
            645768,
            647440,
            646441,
            647692,
            647579,
            647730,
            647778,
            648074,
            648205,
            648643,
            672231,
            648607
        ],
        "D": [
            646207,
            648016,
            1801308,
            650206,
            650204,
            650149,
            645758,
            648839,
            651051,
            646617,
            672309,
            672304
        ],
        "C": [
            644127,
            643544,
            644243,
            643865,
            645241,
            644451,
            644887,
            644131,
            644140,
            645305,
            644925,
            643505,
            644385,
            643763,
            644812,
            644362,
            644073,
            643923
        ],
        "B": [
            643233,
            642711,
            643039,
            643416,
            643607,
            643662,
            644238,
            643262,
            643508,
            644064,
            644105,
            643023,
            643503,
            644212,
            644124,
            643915,
            643258,
            643069
        ],
        "A": [
            642482,
            642215,
            642278,
            642632,
            643064,
            642636,
            643448,
            642358,
            642849,
            643249,
            642539,
            642283,
            642426,
            642982,
            643205,
            642425,
            642448,
            642447
        ]
    },
    "name": "C. Lucky Sum of Digits",
    "statement": "Petya wonders eagerly what minimum lucky number has the sum of digits\r\nequal to . Help him cope with the task.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <vector>\nusing namespace std;\n\nint four[1000010], seven[1000010], ok[1000010];\n\nint main()\n{\n    memset(ok, 0, sizeof(ok));\n    memset(four, 0, sizeof(four));\n    memset(seven, 0, sizeof(seven));\n    ok[0] = 1;\n    for(int i = 4; i <= 1000000; i++){\n        if(i>=7 && ok[i-7]){\n            ok[i] = 1;\n            four[i] = four[i-7];\n            seven[i] = seven[i-7]+1;\n        } else if(i>=4 && ok[i-4]){\n            ok[i] = 1;\n            four[i] = four[i-4]+1;\n            seven[i] = seven[i-4];\n        }\n    }\n    int n;\n    while(~scanf(\"%d\", &n)){\n        if(ok[n]){\n            for(int i = 0; i < four[n]; i++)putchar('4');\n            for(int i = 0; i < seven[n]; i++)putchar('7');\n            printf(\"\\n\");\n        } else{\n            printf(\"-1\\n\");\n        }\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Lucky Sum of Digits.json",
    "editorial_link": "https://codeforces.com//blog/entry/2547",
    "editorial": "Let result number contains a digits 4 and b digits 7. Obviously, that a?*?4?+?b?*?7?=?n. Loop through all values of b. If we know b, we can calculate a, . Among all pairs (a;b) we need to choose one with a?+?b minimum. Among all that pairs we need to choose one with b minimum. Output will be an integer 444...444777...777, here number of digits 4 equal to a, number of digits 7 equal to b.",
    "hint": []
}