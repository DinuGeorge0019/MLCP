{
    "link": "https://codeforces.com//contest/2020/problem/F",
    "problemId": "2912457",
    "problem_idx": "F",
    "shortId": "2020F",
    "contest_number": "2020",
    "problem_submissions": {
        "F": [
            283654781,
            283655384,
            283653019,
            284812010,
            284342422
        ],
        "E": [
            283601053,
            283622277,
            283581328,
            283585589,
            283577511,
            283592572,
            283593005,
            283598500,
            283604766,
            283607067,
            283586822,
            283606206,
            283606082,
            283604966,
            283606881,
            283605803,
            284236238,
            284236223,
            283607016,
            283606859,
            283610252,
            283604942
        ],
        "D": [
            283587438,
            283588481,
            283592593,
            283573905,
            283573809,
            283577852,
            283585317,
            283583897,
            283586760,
            283584637,
            283572139,
            283590684,
            283585043,
            283588345,
            283571960,
            283592544,
            283591323,
            283585990,
            283588589,
            283589632
        ],
        "C": [
            283581157,
            283572675,
            283596795,
            283564752,
            283564525,
            283566373,
            283563157,
            283567449,
            283568512,
            283569775,
            283602587,
            283572456,
            283574521,
            283572581,
            283587896,
            283569964,
            283580076,
            283578040,
            283575463,
            283575417
        ],
        "B": [
            283571512,
            283580920,
            283593819,
            283558272,
            283566033,
            283559192,
            283560269,
            283566846,
            283561344,
            283561669,
            283575968,
            283566810,
            283563128,
            283562164,
            283561716,
            283562347,
            283565083,
            283563622,
            283567830,
            283566097
        ],
        "A": [
            283557781,
            283582998,
            283556780,
            283558386,
            283561649,
            283556987,
            283567215,
            283556859,
            283557220,
            283558113,
            283559136,
            283557475,
            283556847,
            283558472,
            283559470,
            283556985,
            283557885,
            283556894,
            283558118
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/134516",
    "editorial": "By nishkarsh Answer is multiplicative i.e. = if are coprime, for fixed\r\nd.\r\n",
    "name": "F. Count Leaves",
    "statement": "Let n and d be positive integers. We build the T_{n,d} as follows: The\r\nroot of the tree is a node marked with number n. This is the 0-th layer\r\nof the tree. For each i from 0 to d - 1, for each vertex of the i-th\r\nlayer, do the following. If the current vertex is marked with x, create\r\nits children and mark them with all possible distinct divisors^\r\ndagger of x. These children will be in the (i+1)-st layer. The vertices\r\non the d-th layer are the leaves of the tree. For example, T_{6,2} (the\r\ndivisor tree for n = 6 and d = 2) looks like this: Define f(n,d) as the\r\nnumber of leaves in T_{n,d}.Given integers n, k, and d, please compute\r\nsum\r\nlimits_{i=1}^{n} f(i^k,d), modulo 10^9+7.^\r\ndagger In this problem, we say that an integer y is a divisor of x if y\r\nge 1 and there exists an integer z such that x = y\r\ncdot z.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;#define N 1000000#define LL long longconst int mod = 1000000007;int tot, s[N + 5];bool vis[N + 5];int id1[N + 5], id2[N + 5];LL prime[N + 5], n, a[N + 5];int m, blk;inline int id(LL x) { return x <= blk ? id1[x] : id2[n / x]; }void min25(){\tblk = sqrt(n + 0.5);\tm = 0;\ttot = 0;\tLL i, j;\tvis[1] = 1;\tfor (int i = 0; i <= blk; i++)\t{\t\tvis[i] = 0;\t}\tfor (i = 2; i <= blk; i++)\t{\t\tif (!vis[i])\t\t\tprime[++tot] = i;\t\tfor (j = 1; j <= tot; j++)\t\t{\t\t\tLL tmp = 1ll * i * prime[j];\t\t\tif (tmp > blk)\t\t\t\tbreak;\t\t\tvis[tmp] = 1;\t\t\tif (i % prime[j] == 0)\t\t\t\tbreak;\t\t}\t}\tfor (i = 1; i <= n; i = j + 1)\t{\t\tj = n / (n / i);\t\ta[++m] = n / i;\t\tif (a[m] <= blk)\t\t\tid1[a[m]] = m;\t\telse\t\t\tid2[n / a[m]] = m;\t\ts[m] = (a[m] - 1) % mod;\t}\tfor (j = 1; j <= tot; j++)\t\tfor (i = 1; i <= m && 1ll * prime[j] * prime[j] <= a[i]; i++)\t\t\ts[i] = ((1ll * s[i] - (s[id(a[i] / prime[j])] - (j - 1))) % mod + 1ll * mod) % mod;}int solve0(LL a, int b){\tif (n <= 1 || a < prime[b])\t\treturn 0;\tLL i, j, pw;\tint ret = 2ll * (1ll * s[id(a)] - (b - 1) + 1ll * mod) % mod;\tfor (i = b; i <= tot && 1ll * prime[i] * prime[i] <= a; i++)\t\tfor (j = 1, pw = prime[i]; 1ll * pw * prime[i] <= a; j++, pw *= prime[i])\t\t\tret = (1ll * ret + 1ll * solve0(a / pw, i + 1) * (j + 1) + 1ll * (j + 2)) % mod;\treturn ret;}Â long long pw(long long x, long long y){\tlong long re = 1;\tfor (; y > 0; y >>= 1)\t{\t\tif (y & 1)\t\t{\t\t\tre = re * x % mod;\t\t}\t\tx = x * x % mod;\t}\treturn re;}long long global_k, global_d;long long fac[3000020];long long invfac[3000020];long long C(int n, int m){\t// assert(n - m >= 0);\treturn fac[n] * invfac[m] % mod * invfac[n - m] % mod;}int f_p(const int &c){\t// cerr << \"f_p \" << c << endl;\tlong long n = c * global_k + global_d;\tlong long m = global_d;\t// cout << \"f_p \" << n << \" \" << m << \" \" << C(n, m) << endl;\treturn C(n, m);\t// cerr << \"fp \" << \" \" << c << \" \" << n << \" \" << m << \" \" << preprocess_c[c] << endl;}int solve1(LL a, int b){\tif (n <= 1 || a < prime[b])\t\treturn 0;\tLL i, j, pw;\tint ret = f_p(1) * (1ll * s[id(a)] - (b - 1) + 1ll * mod) % mod;\tfor (i = b; i <= tot && 1ll * prime[i] * prime[i] <= a; i++)\t\tfor (j = 1, pw = prime[i]; 1ll * pw * prime[i] <= a; j++, pw *= prime[i])\t\t\tret = (1ll * ret + 1ll * solve1(a / pw, i + 1) * f_p(j) % mod + 1ll * f_p(j + 1)) % mod;\treturn ret;}int main(){\t// freopen(\"5.in\",\"r\",stdin);\t// freopen(\"5.out\",\"w\",stdout);\tint cases;\tcin >> cases;\tfac[0] = 1;\tfor (int i = 1; i < 3000010; i++)\t{\t\tfac[i] = fac[i - 1] * i % mod;\t}\tinvfac[3000009] = pw(fac[3000009], mod - 2);\tfor (int i = 3000008; i >= 0; i--)\t{\t\tinvfac[i] = invfac[i + 1] * (i + 1) % mod;\t}\tfor (int tt = 0; tt < cases; tt++)\t{\t\tcin >> n >> global_k >> global_d;\t\tmin25();\t\tcout << solve1(n, 1) + 1 << endl;\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "math",
        "number theory"
    ],
    "dificulty": "2900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. Count Leaves.json",
    "hint": []
}