{"link": "https://codeforces.com//contest/766/problem/C", "problemId": "92733", "problem_idx": "C", "shortId": "766C", "contest_number": "766", "problem_submissions": {"D": [24505946, 24500916, 24504908, 24507791, 24507596, 24502515, 24505444, 24508821, 24506093, 24509131, 24508400, 24506164, 24508411, 24506236, 24509954, 24506157, 24500663, 24511147, 24509915, 24510742, 24507071], "C": [24503002, 24497705, 24503645, 24497245, 24504415, 24507920, 24498510, 24499723, 24502316, 24500439, 24497520, 24497973, 24498376, 24502187, 24500765, 24500712, 24509044, 24499242, 24501478, 24510759], "E": [24499598, 24503926, 24499034, 24503749, 24499107, 24506022, 24509883, 24505215, 24508282, 24506448, 24503360, 24508753, 24506776, 24509196, 24506537, 24510465, 24506832, 24511136, 24508039, 24506667, 24509589], "B": [24494141, 24493611, 24500716, 24498345, 24502090, 24496129, 24493849, 24494351, 24495688, 24493721, 24507808, 24494240, 24493512, 24496420, 24496210, 24495834, 24507882, 24494117, 24496757, 24494993], "A": [24493013, 24492877, 24500045, 24499173, 24500116, 24494575, 24495318, 24492979, 24492967, 24492862, 24493192, 24492913, 24494460, 24494158, 24494086, 24507606, 24492997, 24493480]}, "name": "C. Mahmoud and a Message", "statement": "Mahmoud wrote a message of length . He wants to send it as a birthday\r\npresent to his friend Moaz who likes strings. He wrote it on a magical\r\npaper but he was surprised because some characters disappeared while\r\nwriting the string. That\u2019s because this magical paper doesn\u2019t allow\r\ncharacter number in the English alphabet to be written on it in a string\r\nof length more than . For example, if he can\u2019t write character \u201d on this\r\npaper in a string of length or more. String \"\" is allowed while string\r\n\"\" is not.Mahmoud decided to split the message into some non-empty\r\nsubstrings so that he can write every substring on an independent\r\nmagical paper and fulfill the condition. The sum of their lengths should\r\nbe and they shouldn\u2019t overlap. For example, if and he wants to send\r\nstring \"\", he can split it into \"\" and \"\" and use magical papers, or\r\ninto \"\", \"\" and \"\" and use magical papers. He can\u2019t split it into \"\" and\r\n\"\" because the sum of their lengths is greater than . He can split the\r\nmessage into single string if it fulfills the conditions.A substring of\r\nstring is a string that consists of some consecutive characters from\r\nstring , strings \"\", \"\" and \"\" are substrings of string \"\", while\r\nstrings \"\" and \"\" are not. Any string is a substring of itself.While\r\nMahmoud was thinking of how to split the message, Ehab told him that\r\nthere are many ways to split it. After that Mahmoud asked you three\r\nquestions: How many ways are there to split the string into substrings\r\nsuch that every substring fulfills the condition of the magical paper,\r\nthe sum of their lengths is and they don\u2019t overlap? Compute the answer\r\nmodulo . What is the maximum length of a substring that can appear in\r\nsome valid splitting? What is the minimum number of substrings the\r\nmessage can be spit in? Two ways are considered different, if the sets\r\nof split positions differ. For example, splitting \"\" and \"\" are\r\nconsidered different splittings of message \"\".\r\n", "solutions": ["#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n#include <sstream>\n#include <numeric>\n#include <string>\n#include <vector>\n#include <cstdio>\n#include <bitset>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n\nusing namespace std;\n\n#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)\n#define np(v) next_permutation(v.begin(), v.end())\n#define pll pair < long long, long long>\n#define all(a) a.begin(), a.end()\n#define ull unsigned long long\n#define pii pair < int, int >\n#define sz(a) (int)a.size()\n#define sqr(x) ((x) * (x))\n#define y1 stupid_cmath\n#define vi vector <int>\n#define pb push_back\n#define mp make_pair\n#define ll long long\n#define f first\n#define s second\n\nconst int inf = (int)1e9;\nconst int mod = inf + 7;\nconst double eps = 1e-9;\nconst double pi = acos(-1.0);\n\nint n;\nstring s;\nint a[100];\nint dp[3][2000];\n\nint main(){\n    ios_base::sync_with_stdio(0), cin.tie(0);\n    cin >> n;\n    cin >> s;\n    for(int i = 0; i < 26; ++i){\n        cin >> a[i];\n    }\n    dp[0][0] = 1;\n    for(int i = 1; i <= sz(s); ++i){\n        int len = inf;\n        dp[1][i] = -inf;\n        dp[2][i] = inf;\n        for(int j = i - 1; j >= 0; --j){\n            len = min(len, a[s[j] - 'a']);\n            if(len < i - j) break;\n            dp[0][i] = (dp[0][i] + dp[0][j]) % mod;\n            dp[1][i] = max(dp[1][i], max(i - j, dp[1][j]));\n            dp[2][i] = min(dp[2][i], dp[2][j] + 1);\n        }\n    }\n    cout << dp[0][n] << endl;\n    cout << dp[1][n] << endl;\n    cout << dp[2][n] << endl;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "greedy", "strings"], "dificulty": "1700", "interactive": false}