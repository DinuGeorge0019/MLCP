{
    "link": "https://codeforces.com//contest/1300/problem/C",
    "problemId": "536070",
    "problem_idx": "C",
    "shortId": "1300C",
    "contest_number": "1300",
    "problem_submissions": {
        "E": [
            70656422,
            70660342,
            70659594,
            70663407,
            70663445,
            70663695,
            70662627,
            70664459,
            70667573,
            70667578,
            70667153,
            70667998,
            70667370,
            70665044,
            70668944,
            70668742,
            70668939,
            70666794,
            70654169
        ],
        "D": [
            70649967,
            70648316,
            70653519,
            70647449,
            70651136,
            70653985,
            70656894,
            70651482,
            70650140,
            70652905,
            70654553,
            70654763,
            70657422,
            70654653,
            70647217,
            70652554,
            70651738,
            70666577
        ],
        "C": [
            70637820,
            70637616,
            70643543,
            70640283,
            70645889,
            70644943,
            70645600,
            70643218,
            70643243,
            70643430,
            70644879,
            70643858,
            70645790,
            70643117,
            70639743,
            70644978,
            70645908,
            70643196
        ],
        "B": [
            70633510,
            70632581,
            70637741,
            70648477,
            70642916,
            70637878,
            70636707,
            70634786,
            70633496,
            70632050,
            70637586,
            70633740,
            70639225,
            70635607,
            70634472,
            70636324,
            70635597,
            70636449
        ],
        "A": [
            70629102,
            70628944,
            70632868,
            70644279,
            70639039,
            70634945,
            70632554,
            70630514,
            70629803,
            70629176,
            70629854,
            70629908,
            70633145,
            70629847,
            70629744,
            70641116,
            70631231,
            70631279
        ]
    },
    "name": "C. Anu Has a Function",
    "statement": "Anu has created her own function f: f(x, y) = (x | y) - y where |\r\ndenotes the bitwise OR operation. For example, f(11, 6) = (11|6) - 6 =\r\n15 - 6 = 9. It can be proved that for any nonnegative numbers x and y\r\nvalue of f(x, y) is also nonnegative. She would like to research more\r\nabout this function and has created multiple problems for herself. But\r\nshe isn\u2019t able to solve all of them and needs your help. Here is one of\r\nthese problems.A value of an array [a_1, a_2,\r\ndots, a_n] is defined as f(f(\r\ndots f(f(a_1, a_2), a_3),\r\ndots a_{n-1}), a_n) (see notes). You are given an array with elements.\r\nHow should you reorder its elements so that the value of the array is\r\nmaximal possible?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define Rint register int\n#define MP make_pair\n#define fi first\n#define se second\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> pii;\ntemplate<typename T>\ninline void read(T &x){\n\tint ch = getchar(); x = 0;\n\tbool f = false;\n\twhile((ch < '0' || ch > '9') && ch != '-') ch = getchar();\n\tif(ch == '-'){f = true; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0'; ch = getchar();}\n\tif(f) x = -x;\t\n}\nconst int N = 100003;\nint n, a[N];\nint main(){\n\tread(n);\n\tfor(Rint i = 1;i <= n;++ i){\n\t\tread(a[i]);\n\t}\n\tfor(Rint j = 30;~j;-- j){\n\t\tint cnt = 0, p;\n\t\tfor(Rint i = 1;i <= n;++ i) if((a[i] >> j) & 1) ++ cnt, p = i;\n\t\tif(cnt == 1){\n\t\t\tprintf(\"%d \", a[p]);\n\t\t\tfor(Rint k = 1;k <= n;++ k) if(k != p) printf(\"%d \", a[k]);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(Rint i = 1;i <= n;++ i) printf(\"%d \", a[i]);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Anu Has a Function.json",
    "editorial_link": "https://codeforces.com//blog/entry/73763",
    "editorial": "what will happen if we are unable to find a1? How to take a1 for the\r\nsolution ?\r\n"
}