{
    "link": "https://codeforces.com//contest/1301/problem/C",
    "problemId": "538756",
    "problem_idx": "C",
    "shortId": "1301C",
    "contest_number": "1301",
    "problem_submissions": {
        "F": [
            71000973,
            71002227,
            71047404,
            71220694,
            70998932,
            71051995,
            71028699,
            71013382,
            71013182,
            71012775,
            71025862,
            71001305
        ],
        "E": [
            70990356,
            70991049,
            70989982,
            70995000,
            71228853,
            70994471,
            70996484,
            70997616,
            70993985,
            71001983,
            71006041,
            71000752,
            71000762,
            71000295,
            71036031,
            71006895,
            71006710,
            71008245,
            71004278,
            71001868,
            71010122
        ],
        "D": [
            70978990,
            70984686,
            70977541,
            70983758,
            70979628,
            70981590,
            70982372,
            70984362,
            70996505,
            70984162,
            70979443,
            70993040,
            70987583,
            70989615,
            70984290,
            70988249,
            70992550,
            70989175,
            70990934,
            70988497
        ],
        "C": [
            70971830,
            70973831,
            70972391,
            70970695,
            70971864,
            70969581,
            70970083,
            70974438,
            70974283,
            70973307,
            70972668,
            70972796,
            70978912,
            70982981,
            70973415,
            70972561,
            70970139,
            70973814,
            70975653,
            70976409
        ],
        "B": [
            70968569,
            70967678,
            70969977,
            70968275,
            70967585,
            70973366,
            70967417,
            70968730,
            70968327,
            70969402,
            70969851,
            70968467,
            70975325,
            70966853,
            70969894,
            70969422,
            70967771,
            70969867,
            70971492,
            70969502
        ],
        "A": [
            70962789,
            70962641,
            70962787,
            70964181,
            70962880,
            70962945,
            70962791,
            70962672,
            70962738,
            70962693,
            70965581,
            70963729,
            70962976,
            70962686,
            70963227,
            70964391,
            70962619,
            70962496,
            70966796,
            70962378
        ]
    },
    "name": "C. Ayoub s function",
    "statement": "Ayoub thinks that he is a very smart person, so he created a function\r\nf(s), where s is a binary string (a string which contains only symbols\r\n\"\" and \"\"). The function f(s) is equal to the number of substrings in\r\nthe string s that contains at least one symbol, that is equal to \"\".More\r\nformally, f(s) is equal to the number of pairs of integers (l, r), such\r\nthat 1\r\nleq l\r\nleq r\r\nleq |s| (where |s| is equal to the length of string s), such that at\r\nleast one of the symbols s_l, s_{l+1},\r\nldots, s_r is equal to \"\". For example, if s = \"\" then f(s) = 12,\r\nbecause there are 12 such pairs (l, r): (1, 2), (1, 3), (1, 4), (1, 5),\r\n(2, 2), (2, 3), (2, 4), (2, 5), (3, 4), (3, 5), (4, 4), (4, 5).Ayoub\r\nalso thinks that he is smarter than Mahmoud so he gave him two integers\r\nn and m and asked him this problem. For all binary strings s of length n\r\nwhich contains exactly m symbols equal to \"\", find the maximum value of\r\nf(s).Mahmoud couldn’t solve the problem so he asked you for help. Can\r\nyou help him?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\ninline int read() {\n    char c, _c; int x; for (c = _c = getchar(); !isdigit(c); c = getchar()) { _c = c; }\n    for (x = 0; isdigit(c); c = getchar()) { x = x * 10 + c - '0'; } return _c == '-' ? -x : x;\n}\n\nint T;\nlong long n, m;\n\nlong long solve() {\n    long long k = n - m; m++;\n    long long b = k / m, c = k % m;\n    long long sum = b * (b + 1) / 2 * (m - c) + (b + 1) * (b + 2) / 2 * c;\n    return n * (n + 1) / 2 - sum;\n}\n\nint main() {\n    for (int T = read(); T; T--) {\n        n = read(); m = read();\n        printf(\"%lld\\n\", solve());\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "combinatorics",
        "greedy",
        "math",
        "strings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Ayoub s function.json",
    "editorial_link": "https://codeforces.com//blog/entry/73877",
    "editorial": "We can calculate the number of sub-strings that has at least one symbol\r\nequals to \"\" like this: (number of all sub-strings) (number of\r\nsub-strings that doesnât have any symbol equals to \"\").if the size of is\r\nequal to , (number of sub-strings that doesnât have any symbol equals to\r\n\"\").if we want to calculate them, we only need to find every continuous\r\nsub-string of 0âs if itâs length was , then we subtract .now we have a\r\nstring contains \"\" symobol, and we want to divide these symbols into\r\ngroups so that the summation of for every group is minimised.The best\r\nway is to divide them into equal groups or as equal as possible.let be\r\nthe number of zeroes in the string, , and g be the number of groups,\r\n.let equal to .we should give every group zeroes, except for the first\r\ngroups, we should give them zeroes.So the answer is .Complexity is\r\n.code:https://ideone.com/rk5nDE\r\n",
    "hint": []
}