{
    "link": "https://codeforces.com//contest/1629/problem/B",
    "problemId": "1270551",
    "problem_idx": "B",
    "shortId": "1629B",
    "contest_number": "1629",
    "problem_submissions": {
        "E": [
            143691687,
            143672752,
            143687137,
            143663655,
            143674506,
            143679445,
            143862635,
            143682492,
            143680665,
            143680424,
            143685684,
            143684891,
            143753002,
            143685619,
            143692185,
            143689230,
            143685863,
            143687115,
            143695099,
            143693974
        ],
        "F2": [
            143688718,
            143726329,
            143690987
        ],
        "F1": [
            143676123,
            143697164,
            143692998,
            143741879,
            143678223,
            143750588,
            143750365
        ],
        "D": [
            143667461,
            143661533,
            143674891,
            143656107,
            143648676,
            143665361,
            143663909,
            143668220,
            143661278,
            143662732,
            143656926,
            143668180,
            143668746,
            143665526,
            143669234,
            143667378,
            143676861,
            143663591,
            143664123
        ],
        "C": [
            143651046,
            143647499,
            143659885,
            143651714,
            143662268,
            143651456,
            143647120,
            143654421,
            143646086,
            143650221,
            143697555,
            143656282,
            143655178,
            143644392,
            143657665,
            143654804,
            143651022,
            143650097,
            143652583
        ],
        "B": [
            143642034,
            143637040,
            143638720,
            143651837,
            143664772,
            143638989,
            143637268,
            143641201,
            143638312,
            143634980,
            143632383,
            143644246,
            143635339,
            143635326,
            143637617,
            143639992,
            143639371,
            143640785,
            143642627
        ],
        "A": [
            143633916,
            143631168,
            143632391,
            143651906,
            143666062,
            143631304,
            143631044,
            143630886,
            143631218,
            143630607,
            143639841,
            143633922,
            143630487,
            143630572,
            143630653,
            143631188,
            143630505,
            143635250,
            143635282
        ]
    },
    "name": "B. GCD Arrays",
    "statement": "Consider the array a composed of all the integers in the range [l, r].\r\nFor example, if l = 3 and r = 7, then a = [3, 4, 5, 6, 7].Given l, r,\r\nand k, is it possible for\r\ngcd(a) to be greater than 1 after doing the following operation at most\r\nk times? Choose 2 numbers from a. Permanently remove one occurrence of\r\neach of them from the array. Insert their product back into a.\r\ngcd(b) denotes the greatest common divisor (GCD) of the integers in b.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mod 998244353\nll read() {\n\tll x=0,f=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n\tfor(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';\n\treturn x*f;\n}\nstruct Data {\n\tint a,b;\n\tbool operator <(const Data tmp) const {\n\t\treturn a<tmp.a;\n\t}\n}t[1010];\nint T;\nint n,k,l,r;\nint main() {\n\tT=read();\n\twhile(T--) {\n\t\tl=read(),r=read();k=read();\n\t\tif(r-l==0) {\n\t\t\tif(r==1) {cout<<\"NO\\n\";continue;}\n\t\t\telse {cout<<\"YES\\n\";continue;}\n\t\t}\n\t\tif(l&1) {\n\t\t\tint js=(r-l)/2+1;\n\t\t\tif(js>k) {cout<<\"NO\\n\";continue;}\n\t\t\telse {cout<<\"YES\\n\";continue;}\n\t\t}\n\t\telse {\n\t\t\tint js=(r-l+1)/2;\n\t\t\tif(js>k) {cout<<\"NO\\n\";continue;}\n\t\t\telse {cout<<\"YES\\n\";continue;}\n\t\t}\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. GCD Arrays.json",
    "editorial_link": "https://codeforces.com//blog/entry/99276",
    "editorial": "For the of the whole array to be greater than , each of the elements\r\nmust have a common prime factor, so we need to find the prime factor\r\nthat\u00e2\u0080\u0099s the most common in the array and merge the elements that have\r\nthis prime factor with those who don\u00e2\u0080\u0099t, the answer being the size of the\r\narray - number of occurrences of the most frequent prime factor. And,\r\nbecause the numbers are consecutive, the most common prime factor is\r\nalways . So, the minimum number of moves we need to do is the count of\r\nodd numbers in the given range, which is . Now. the answer is \"\" when\r\nthe minimum number of moves we need to do is less than or equal to and\r\n\"\" otherwise. The extra cases we should take care of are the ones where\r\n, in which the answer is always \"\", or \"\u00e2\u0080\u0099 only when .\r\n"
}