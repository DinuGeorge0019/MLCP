{
    "link": "https://codeforces.com//contest/371/problem/A",
    "problemId": "4151",
    "problem_idx": "A",
    "shortId": "371A",
    "contest_number": "371",
    "problem_submissions": {
        "E": [
            5386691,
            5385652,
            5387391,
            5387322,
            5390985,
            5387784,
            5383050,
            5388200,
            5387733,
            5386214,
            5386292,
            5388053,
            5385063,
            5389504,
            5394788,
            5402945
        ],
        "D": [
            5385132,
            5387024,
            5385113,
            5383557,
            5389960,
            5384908,
            5386335,
            5385491,
            5385734,
            5387644,
            5385157,
            5390842,
            5385613,
            5388772,
            5383171,
            5383787,
            5383978,
            5383957
        ],
        "C": [
            5383277,
            5383807,
            5383992,
            5381888,
            5382446,
            5383936,
            5383664,
            5385279,
            5384741,
            5383042,
            5382860,
            5382943,
            5382483,
            5383152,
            5382630,
            5382839
        ],
        "B": [
            5381953,
            5382093,
            5382443,
            5385168,
            5381736,
            5388764,
            5382596,
            5382957,
            5382638,
            5388559,
            5381967,
            5382051,
            5381711,
            5381795,
            5381475,
            5381931
        ],
        "A": [
            5381375,
            5381309,
            5381281,
            5382547,
            5381148,
            5381302,
            5382094,
            5382203,
            5381364,
            5381179,
            5388604,
            5381203,
            5381211,
            5381180,
            5381177,
            5381327
        ]
    },
    "name": "A. K-Periodic Array",
    "statement": "This task will exclusively concentrate only on the arrays where all\r\nelements equal 1 and/or 2.Array is -period if its length is divisible by\r\nand there is such array of length , that is represented by array written\r\nexactly times consecutively. In other words, array is -periodic, if it\r\nhas period of length .For example, any array is -periodic, where is the\r\narray length. Array is at the same time 2-periodic and 6-periodic and\r\narray is at the same time 3-periodic and 9-periodic.For the given array\r\n, consisting only of numbers one and two, find the minimum number of\r\nelements to change to make the array -periodic. If the array already is\r\n-periodic, then the required value equals .\r\n",
    "solutions": [
        "#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <cassert>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <stack>\n#include <set>\n#include <string>\n#include <utility>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <ctime>\n#include <vector>                              \nusing namespace std;\n#define fname \"\"\n#define ull unsigned long long\n#define ll long long\n#define INF 1000*1000*1000\n#define f first\n#define s second\n#define mp make_pair\n#define pb push_back\n#define sz size()\nconst int N = 1000;\nint n, a[N], k;\nint main ()\n{\t\n\t#ifndef ONLINE_JUDGE\n\tfreopen (fname\"in\",\"r\",stdin);\n\tfreopen (fname\"out\",\"w\",stdout);\n\t#endif\n\n\tcin >> n >> k;\n\n\tfor (int i = 1; i <= n; i ++ ) cin >> a[i];\n\n\tint ans = 0;\n\n\tfor (int i = 1; i <= k; i ++ ) {\n\t\tint a1 = 0, a2 = 0;\n\t\tfor (int j = 1; j <= n / k; j ++ ) {\n\t\t\tint id = i + (j - 1) * k;\n\t\t\tif (a[id] == 1) ++a1;\n\t\t\telse ++a2;\n\t\t}\n\t\tans += min(a1, a2);\n\t}\n\n\tcout << ans;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. K-Periodic Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/9876",
    "editorial": "For array to be periodic, elements must be equal. Also, elements Unable\r\nto parse markup [type=CF_TEX]\r\n",
    "hint": []
}