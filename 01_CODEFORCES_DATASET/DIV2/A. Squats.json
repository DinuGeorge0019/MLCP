{
    "link": "https://codeforces.com//contest/424/problem/A",
    "problemId": "8840",
    "problem_idx": "A",
    "shortId": "424A",
    "contest_number": "424",
    "problem_submissions": {
        "D": [
            6467465,
            6468586,
            6468437,
            6471959,
            6471829,
            6468691,
            6468869,
            6467987,
            6469186,
            6469164,
            6468850,
            6468690,
            6469089,
            6472200,
            6472173,
            6469491,
            6468201,
            6469445,
            6468946,
            6470668,
            6470648
        ],
        "B": [
            6465143,
            6465456,
            6465043,
            6464913,
            6464966,
            6468705,
            6465228,
            6464961,
            6466059,
            6465849,
            6465782,
            6467158,
            6465289,
            6469422,
            6465084,
            6465026,
            6464523,
            6464586,
            6464947,
            6465071
        ],
        "C": [
            6464612,
            6464680,
            6466885,
            6466816,
            6466600,
            6466756,
            6466254,
            6466363,
            6467123,
            6466142,
            6467334,
            6467704,
            7360874,
            6469401,
            6471708,
            6464542,
            6465234,
            6465523,
            6465757,
            6465709
        ],
        "A": [
            6463928,
            6465862,
            6463956,
            6464239,
            6464063,
            6464156,
            6464137,
            6464377,
            6467414,
            6468789,
            6467791,
            6466667,
            6464430,
            6469471,
            6464203,
            6463882,
            6463888,
            6463886,
            6464224,
            6464098
        ]
    },
    "name": "A. Squats",
    "statement": "Pasha has many hamsters and he makes them work out. Today, hamsters ( is\r\neven) came to work out. The hamsters lined up and each hamster either\r\nsat down or stood up.For another exercise, Pasha needs exactly hamsters\r\nto stand up and the other hamsters to sit down. In one minute, Pasha can\r\nmake some hamster ether sit down or stand up. How many minutes will he\r\nneed to get what he wants if he acts optimally well?\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <set>\n#include <map>\nusing namespace std;\n\n#define forint(i, a, b) for(int i=(int)(a); i<=(int)(b); ++i)\n#define forintdown(i, a, b) for(int i=(int)(a); i>=(int)(b); --i)\n#define forn(i, n) forint(i, 0, (n)-1)\n#define forndown(i, n) forintdown(i, (n)-1, 0)\n#define fillchar(a, x) memset(a, x, sizeof(a))\ntypedef long long LL;\ntypedef pair<int,int> PII;\ntypedef vector<int> VI;\ntypedef vector<LL> VL;\ntypedef vector<PII> VPI;\n#define MP make_pair\n#define PB push_back\n#define fi first\n#define se second\n\nint main() {\n\tchar s[999]; scanf(\"%*d%s\", s); int n=strlen(s);\n\tint c=0; forint(i, 0, n-1) c+=(s[i]=='x');\n\tint d=c-n/2;\n\tif(d<0) {\n\t\td=-d; int cd=d;\n\t\tforn(i, n) if(s[i]=='X' && d>0) s[i]='x', --d;\n\t\tprintf(\"%d\\n%s\\n\", cd,s);\n\t} else {\n\t\tint cd=d;\n\t\tforn(i, n) if(s[i]=='x' && d>0) s[i]='X', --d;\n\t\tprintf(\"%d\\n%s\\n\", cd,s);\n\t}\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Squats.json",
    "editorial_link": "https://codeforces.com//blog/entry/11944",
    "editorial": "The problem is to find the number of standing hamsters. If it is less\r\nthan half, we should make the required number of hamsters standing.\r\nOtherwise we should make some hamsters sitting.\r\n",
    "hint": []
}