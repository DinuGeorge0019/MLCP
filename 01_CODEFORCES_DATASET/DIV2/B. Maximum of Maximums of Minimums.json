{
    "link": "https://codeforces.com//contest/872/problem/B",
    "problemId": "128432",
    "problem_idx": "B",
    "shortId": "872B",
    "contest_number": "872",
    "problem_submissions": {
        "D": [
            31357405,
            31351452,
            31343107,
            31351195,
            31348275,
            31358936,
            31353320,
            31359729,
            31384542,
            31354719,
            31362020,
            31359730,
            31362352,
            31351225,
            31351202,
            31354247,
            31354449,
            31352162,
            31359781
        ],
        "E": [
            31353643,
            31348128,
            31351224,
            31359199,
            31354447,
            31355467,
            31348071,
            31351923,
            31353128,
            31362654,
            31354891,
            31382199
        ],
        "C": [
            31342341,
            31341124,
            31342335,
            31339634,
            31341933,
            31341621,
            31341040,
            31345564,
            31340156,
            31342837,
            31339872,
            31339992,
            31338872,
            31343484,
            31340713,
            31344350,
            31343999,
            31340760,
            31346573,
            31343301
        ],
        "B": [
            31339933,
            31344337,
            31346424,
            31335779,
            31338069,
            31340584,
            31337590,
            31339591,
            31336576,
            31337750,
            31336433,
            31336155,
            31344259,
            31336906,
            31343230,
            31338477,
            31343380,
            31338480,
            31339600,
            31336704
        ],
        "A": [
            31337113,
            31334461,
            31338251,
            31333648,
            31354746,
            31334723,
            31335437,
            31336234,
            31333965,
            31339158,
            31333483,
            31334206,
            31334052,
            31333255,
            31341935,
            31334681,
            31333872,
            31333828,
            31335202,
            31334321
        ]
    },
    "name": "B. Maximum of Maximums of Minimums",
    "statement": "You are given an array consisting of integers, and an integer . You have\r\nto split the array into exactly non-empty subsegments. You\u2019ll then\r\ncompute the minimum integer on each subsegment, and take the maximum\r\ninteger over the obtained minimums. What is the maximum possible integer\r\nyou can get?Definitions of subsegment and array splitting are given in\r\nnotes.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define N 100100\nusing namespace std;\nint n,k;\nint a[N];\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tint ma=-1008610086,mi=1008610086;\n\tfor(int i=0;i<n;i++) scanf(\"%d\",&a[i]),mi=min(mi,a[i]),ma=max(ma,a[i]);\n\tif(k>=3){\n\t\tprintf(\"%d\\n\",ma);\n\t}\n\telse if(k>=2){\n\t\tprintf(\"%d\\n\",max(a[0],a[n-1]));\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",mi);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Maximum of Maximums of Minimums.json",
    "editorial_link": "https://codeforces.com//blog/entry/55200",
    "editorial": "To solve the problem, we need to consider three cases:\n\nk???3:? then let pos_max be the position of the element with the maximum value, then it is always possible to divide the array into subsegments so that one subsegment contains only this number, so the answer to the problem is apos_max.\n\nk?=?2:? then all possible partitions are some prefix of nonzero length and coresponding suffix of nonzero length. You can iterate through all positions of the prefix end, and ?alculate the answer for this fixed partition, that equals to maximum of minima on the prefix and on the suffix. Minimum value for all suffixes and prefixes can be counted in advance. The answer is the maximum of the answers for all possible partitions.\n\n*Also it can be proved that for k?=?2 the answer is the maximum of the first and last element.\n\nk?=?1:? then the only possible partition is one segment equal to the whole array. So the answer is the minimum value on the whole array."
}