{
    "link": "https://codeforces.com//contest/165/problem/E",
    "problemId": "1016",
    "problem_idx": "E",
    "shortId": "165E",
    "contest_number": "165",
    "problem_submissions": {
        "D": [
            1366499,
            1366969,
            1365112,
            1367097,
            1366684,
            1365807,
            1365962,
            1368726,
            1367643,
            1365427,
            1364667,
            1370595,
            1385240
        ],
        "E": [
            1364192,
            1364774,
            1367313,
            1365367,
            1364379,
            1368630,
            1368754,
            1367792,
            1368549,
            1365271,
            1364231,
            1368793,
            1367116,
            2473344,
            1366372,
            1367247,
            1366533,
            1367425
        ],
        "C": [
            1362928,
            1363517,
            1362594,
            1363696,
            1366879,
            1362613,
            1362246,
            1363281,
            1364362,
            1363392,
            1367553,
            1369077,
            1364690,
            2473167,
            2473156,
            1362666,
            1363958,
            1364223,
            1365162,
            1365345
        ],
        "B": [
            1362163,
            1362376,
            1365799,
            1362605,
            1362500,
            1363337,
            1362770,
            1362069,
            1363813,
            1363948,
            1362915,
            1369003,
            1362557,
            2473004,
            2473001,
            2472997,
            1362110,
            1362242,
            1362516,
            1363280,
            1362708
        ],
        "A": [
            1361696,
            1361752,
            1362836,
            1361758,
            1361587,
            1361647,
            1361570,
            1361606,
            1362825,
            1365691,
            1361805,
            1362263,
            1361965,
            2472978,
            2472975,
            2472970,
            1361665,
            1361602,
            1361734,
            1362468,
            1361751
        ]
    },
    "name": "E. Compatible Numbers",
    "statement": "Two integers and are , if the result of their bitwise \"AND\" equals zero,\r\nthat is, . For example, numbers and are compatible, as , and numbers and\r\nare not compatible, as .You are given an array of integers . Your task\r\nis to find the following for each array element: is this element\r\ncompatible with some other element from the given array? If the answer\r\nto this question is positive, then you also should find any suitable\r\nelement.\r\n",
    "solutions": [
        "#include <vector>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n#include <cassert>\n\nusing namespace std;\n\n//----------------------zjut_DD for Topcoder-------------------------------\ntypedef long long LL;\ntypedef pair<int,int> PII;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\n#define PB push_back\n#define MP make_pair\n#define ff first\n#define ss second\n#define two(w) (1<<(w))\n#define test(x,w) (x&two(w))\n#define sz(v) (int)v.size()\n#define all(c) c.begin(),c.end() \n#define clr(buf,val) memset(buf,val,sizeof(buf))\n#define rep(i,l,r) for(int i=(l);i<(r);i++)\n#define repv(i,v)  for(int i=0;i<(int)v.size();i++)\n#define repi(it,c) for(typeof(c.begin()) it=c.begin();it!=c.end();++it)\n//------------------------------------------------------------------------\n\n\nint val[1<<22];\nint a[1<<22];\n\nint main(){\n\tint n;\n\twhile( scanf(\"%d\", &n)!=EOF ){\n\t\tclr(val, -1);\n\t\trep(i, 0, n){\n\t\t\tscanf(\"%d\", a+i);\n\t\t\tval[a[i]]=a[i];\n\t\t}\n\t\trep(s, 0, two(22) ) if( val[s]>=0 ){\n\t\t\trep(i, 0, 22) if( !test(s, i) ){\n\t\t\t\tval[ s|(1<<i) ]=val[s];\n\t\t\t}\n\t\t}\n\t\trep(i, 0, n){\n\t\t\tint t=(two(22)-1)&(~a[i]);\n\t\t\tif( i ) putchar(' ');\n\t\t\tprintf(\"%d\", val[t]);\n\t\t}\n\t\tputs(\"\");\n\t}\n}\n\n\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Compatible Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/4124",
    "editorial": "Consider some number from the array. Inverse all bits in and say it is\r\nnumber . Consider an integer from array. It can be an answer to the\r\nnumber if for every position of zero bit from there is zero bit in in\r\nthe same position. Other bits in we can change to ones. Then we will use\r\nsuch dynamic programming which means if we can change some zero bits to\r\nones in some integer from given array and get mask . Initial states are\r\nall integers from array (). To go from one state to another we consider\r\nevery bit in and try to change it to one. The length of bit\r\nrepresentation of all integers in is less or equal than 22. To answer\r\nthe question YES or NO for some number you need to get value (inverse\r\nall bits in and make the length of the number 22). If you want to know\r\nthe exact answer what number you should choose you can save previous\r\nstates for every state or just save it in . Complexity , where length of\r\nbit representation of numbers ().\r\n",
    "hint": []
}