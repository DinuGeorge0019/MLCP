{"link": "https://codeforces.com//contest/669/problem/B", "problemId": "57066", "problem_idx": "B", "shortId": "669B", "contest_number": "669", "problem_submissions": {"E": [17491512, 17491017, 19750171, 17501056, 17493518, 17492061, 17493713, 17493393, 17493817, 17492979, 17493371, 17493114, 17495492, 17494782, 17494292, 17495191, 17493974, 17493836, 17494124], "D": [17488668, 17488489, 17486897, 17489357, 17489309, 17489532, 17490586, 17488952, 17490577, 17490565, 17488280, 17489742, 18583027, 18583013, 17490428, 17487352, 17490248, 17491103, 17491769], "C": [17485441, 17485907, 17484920, 17487516, 17486088, 17486618, 17486621, 17484945, 17488083, 17486963, 17486429, 17487871, 17486801, 17486397, 17488132, 17485146, 17486999], "B": [17482906, 17484441, 17482918, 17484173, 17483561, 17483294, 17484370, 17485567, 17486297, 17482984, 17483079, 17484306, 17484088, 17483002, 17484517, 17483240, 17484521], "A": [17481725, 17483043, 17482128, 17482178, 17481873, 17482008, 17481996, 17485818, 17482048, 17481645, 17481657, 17481965, 17482978, 17481666, 17483249, 17481910, 17482894]}, "name": "B. Little Artem and Grasshopper", "statement": "Little Artem found a grasshopper. He brought it to his house and\r\nconstructed a jumping area for him.The area looks like a strip of cells\r\n. Each cell contains the direction for the next jump and the length of\r\nthat jump. Grasshopper starts in the first cell and follows the\r\ninstructions written on the cells. Grasshopper stops immediately if it\r\njumps out of the strip. Now Artem wants to find out if this will ever\r\nhappen.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define REP(i, n) for(int i = 0;i < n;++i)\n#define FOR(i, a, b) for(int i = a;i < b;++i)\n#define pb push_back\n#define X first\n#define Y second\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<int, int> ii;\nconst int MAX = 101000;\nchar in[MAX];\nint len[MAX];\nbool vis[MAX];\nint n;\n\nbool solve (int pos) {\n\tif(pos < 0 || pos >= n) return true;\n\tif(vis[pos]) return false;\n\tvis[pos] = true;\n\tif(in[pos] == '<') return solve(pos - len[pos]);\n\telse return solve(pos + len[pos]);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", in);\n\tREP(i, n) scanf(\"%d\", &len[i]);\n\tif(solve(0)) printf(\"FINITE\\n\");\n\telse printf(\"INFINITE\\n\");\n}\n\n"], "input": "", "output": "", "tags": [], "dificulty": "1000", "interactive": false}