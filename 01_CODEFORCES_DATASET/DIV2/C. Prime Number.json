{
    "link": "https://codeforces.com//contest/359/problem/C",
    "problemId": "3898",
    "problem_idx": "C",
    "shortId": "359C",
    "contest_number": "359",
    "problem_submissions": {
        "E": [
            4966366,
            4965901,
            4965165,
            4968971,
            4968031,
            5030475,
            5030447,
            5030443
        ],
        "D": [
            4963797,
            4964306,
            4968709,
            4966296,
            4964708,
            4965929,
            4967215,
            4966606,
            4965405,
            4965253,
            4966594,
            4966662,
            4966795,
            4967604,
            4966152,
            4967077
        ],
        "C": [
            4963211,
            4971196,
            4966025,
            4963647,
            4966280,
            4964475,
            4964256,
            4964574,
            4963690,
            4965973,
            4965008,
            4965354,
            4964698,
            4965004,
            4964990,
            4964922
        ],
        "B": [
            4961725,
            4962522,
            4962983,
            4962414,
            4961846,
            4962396,
            4964001,
            4966184,
            4962445,
            4962650,
            4963163,
            4962642,
            4962226,
            4962488,
            4962708
        ],
        "A": [
            4961217,
            4961382,
            4961759,
            4961310,
            4961187,
            4961559,
            4961723,
            4962044,
            4961592,
            4961515,
            4962109,
            4961860,
            4961456,
            4962020,
            4961421
        ]
    },
    "name": "C. Prime Number",
    "statement": "Simon has a prime number and an array of non-negative integers .Simon\r\nloves fractions very much. Today he wrote out number on a piece of\r\npaper. After Simon led all fractions to a common denominator and summed\r\nthem up, he got a fraction: , where number equals . Now Simon wants to\r\nreduce the resulting fraction. Help him, find the greatest common\r\ndivisor of numbers and . As GCD can be rather large, print it as a\r\nremainder after dividing it by number ().\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\nconst int kMod = 1000000007;\nint n, x;\nint a[111111];\nmap<ll, int> cnt;\n\nint powmod(int a, int b) {\n    int res = 1, tmp = a;\n    while (b) {\n        if (b & 1) res = (ll)res * tmp % kMod;\n        b >>= 1;\n        tmp = (ll)tmp * tmp % kMod;\n    }\n    return res;\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &x);\n    ll sum = 0;\n    for (int i = 0; i < n; ++ i) {\n        scanf(\"%d\", &a[i]);\n        sum += a[i];\n    }\n    for (int i = 0; i < n; ++ i)\n        cnt[sum - a[i]] ++;\n    for (map<ll, int>::iterator it = cnt.begin(); it != cnt.end(); ) {\n        ll p = it->first;\n        int q = it->second;\n        if (q >= x) {\n            cnt[p] %= x;\n            if (cnt[p] == 0) cnt.erase(p);\n            cnt[p + 1] += q / x;\n            it = cnt.lower_bound(p + 1);\n        }\n        else\n            ++ it;\n    }\n    ll tmp = cnt.begin()->first;\n    tmp = min(tmp, sum);\n    printf(\"%d\\n\", powmod(x, tmp % (kMod - 1)));\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Prime Number.json",
    "editorial_link": "https://codeforces.com//blog/entry/9425",
    "editorial": "Obviously, the answer is . Let . Also let (the array of degrees). After\r\nthat letâs find value by the following algorithm: Letâs consider a\r\nsequence of degrees as decreasing sequence. Now we will perform the\r\nfollowing operation until itâs possible to perfom it. Take the minimum\r\ndegree from the array of degrees and calculate the number of elements ,\r\nwhich have the same degree. If multiples of , then replace all elements\r\nby elements of the form . Since the sequence of degrees is a decreasing\r\nsequence, we can simply assign them to the end. If is not a multiple of\r\n, then we found the required value . Also you need to check, that is not\r\ngreater then . Otherwise, will be equals to . : 4968346\r\n",
    "hint": []
}