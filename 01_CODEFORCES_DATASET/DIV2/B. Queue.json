{"link": "https://codeforces.com//contest/490/problem/B", "problemId": "17896", "problem_idx": "B", "shortId": "490B", "contest_number": "490", "problem_submissions": {"F": [8817515, 8819985, 8842361, 8817338, 8817935, 8817635, 8855350, 8819845, 8823757, 8823458, 8821739, 8820145], "E": [8815308, 8814782, 8815162, 8819489, 8815467, 8822097, 8817785, 8817507, 8817956, 8818730, 8821845, 8820184, 8819671, 8820855, 8817217, 8822605, 8820689], "D": [8813861, 8818202, 8817853, 8814442, 8820510, 8816678, 8814870, 8815149, 8814552, 8815859, 8816515, 8814018, 8816647, 8817008, 8816236, 8820552, 8814405, 8814971, 8817626, 8817113], "C": [8812444, 8815662, 8813217, 8812979, 8814331, 8811719, 8813130, 8812621, 8821924, 8813827, 8814389, 8812560, 8812032, 8814787, 8814945, 8814699, 8813034, 8813032, 8813495, 8815850], "B": [8811804, 8812050, 8811800, 8811893, 8812411, 8813404, 8812022, 8811615, 8813128, 8812542, 8812723, 8811783, 8814873, 8813230, 8813299, 8812788, 8811816, 8811980, 8812324, 8813904], "A": [8810238, 8810285, 8810322, 8810378, 8810319, 8812020, 8810257, 8810233, 8811808, 8810284, 8810467, 8810179, 8810618, 8811059, 8810734, 8811110, 8810293, 8810358, 8810190, 8811062]}, "name": "B. Queue", "statement": "During the lunch break all Berland State University students lined up in\r\nthe food court. However, it turned out that the food court, too, has a\r\nlunch break and it temporarily stopped working.Standing in a queue that\r\nisn\u2019t being served is so boring! So, each of the students wrote down the\r\nnumber of the student ID of the student that stands in line directly in\r\nfront of him, and the student that stands in line directly behind him.\r\nIf no one stands before or after a student (that is, he is the first one\r\nor the last one), then he writes down number instead (in Berland State\r\nUniversity student IDs are numerated from ).After that, all the students\r\nwent about their business. When they returned, they found out that\r\nrestoring the queue is not such an easy task.Help the students to\r\nrestore the state of the queue by the numbers of the student ID\u2019s of\r\ntheir neighbors in the queue.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nint n, m, a[1000001], ans[1000001], in[1000001];\nbool b[1000001];\n\nint main(){\n     //freopen(\"b.in\", \"r\", stdin);\n     //freopen(\"b.out\", \"w\", stdout);\n     scanf(\"%d\", &n);\n     memset(a, 0, sizeof(a));\n     memset(b, false, sizeof(b));\n     memset(in, 0, sizeof(in));\n     for (int i = 1; i <= n; i++)\n     {\n          int x, y;\n          scanf(\"%d%d\", &x, &y);\n          a[x] = y;\n          b[x] = b[y] = true;\n          if (y) in[y]++;\n     }\n     int cnt = -1;\n     for (int i = 0; i <= 1000000; i++)\n          if (b[i] && !in[i])\n          {\n               ++cnt;\n               if (i) ans[cnt] = i;\n               for (int j = a[i], k = cnt; j; j = a[j])\n                    ans[k += 2] = j;\n          }\n     for (int i = 1; i <= n; i++) \n     {\n          printf(\"%d\", ans[i]);\n          if (i != n) printf(\" \");\n     }\n     printf(\"\\n\");\n}    \n"], "input": "", "output": "", "tags": ["dsu", "implementation"], "dificulty": "1500", "interactive": false}