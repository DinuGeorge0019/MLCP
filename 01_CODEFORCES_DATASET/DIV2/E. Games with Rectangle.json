{"link": "https://codeforces.com//contest/129/problem/E", "problemId": "681", "problem_idx": "E", "shortId": "129E", "contest_number": "129", "problem_submissions": {"D": [870060, 869793, 868329, 868490, 871604, 869018, 869569], "E": [867711, 868998, 867271, 866024, 867668, 866384, 868771, 868972, 869787, 869113, 869182, 869294, 869358], "C": [866691, 866148, 865711, 868095, 866773, 867004, 867491, 867351, 866936, 866349, 867158, 866312, 867092, 867601, 867201, 867450, 867706, 867793], "B": [865720, 865280, 865180, 865582, 865310, 866211, 868127, 865744, 865731, 866928, 865788, 865528, 865521, 866153, 866294, 865110, 865388, 865554], "A": [864668, 864600, 864704, 864708, 864607, 864653, 868290, 864785, 864784, 867045, 864843, 864624, 864640, 865218, 864855, 865276, 864658, 864664]}, "name": "E. Games with Rectangle", "statement": "In this task Anna and Maria play the following game. Initially they have\r\na checkered piece of paper with a painted rectangle (only the border, no\r\nfilling). Anna and Maria move in turns and Anna starts. During each move\r\none should paint inside the last-painted rectangle a new lesser\r\nrectangle (along the grid lines). The new rectangle should have no\r\ncommon points with the previous one. Note that when we paint a\r\nrectangle, we always paint only the border, the rectangles aren\u2019t\r\nfilled.Nobody wins the game Anna and Maria simply play until they have\r\ndone moves in total. Count the number of different ways to play this\r\ngame.\r\n", "solutions": ["#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <vector>\n#include <utility>\n#include <sstream>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <ctime>\n#include <set>\n#include <iterator>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair< int, int > PRII;\ntypedef pair< double, double > PRDD;\ntypedef vector< string > VS;\ntypedef vector< int > VI;\n\n#define x first\n#define y second\n#define p_b push_back\n#define m_p make_pair\n#define oo 1000000000\n\n#define sqr(x) ((x)*(x))\n#define Size(a) ((int)a.size())\n#define forn(i,n) for( i = 0 ; i < n ; ++i )\n\nconst double pi = acos(-1);\n\n#define maxn 1000 + 10\n#define mod 1000000007\n \nint n,m,k;\nint f[maxn][maxn],g[maxn][maxn];\n\nint main()\n{\n    int i,j;\n    \n    scanf(\"%d%d%d\",&n,&m,&k);\n    \n    for( j = 1 ; j <= n || j <= m ; ++j )\n        g[0][j] = j;\n    for( i = 1 ; i <= k ; ++i )\n        for( j = 1 ; j <= n || j <= m ; ++j )\n            {\n                f[i][j] = f[i][j-1];\n                if( j >= 2 )\n                    f[i][j] = (f[i][j] + g[i-1][j-2]) % mod;\n                g[i][j] = (g[i][j-1] + f[i][j]) % mod;\n            }\n    printf(\"%d\\n\",(LL)f[k][n]*f[k][m]%mod);\n        \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "dp"], "dificulty": "2000", "interactive": false}