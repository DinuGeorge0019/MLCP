{
    "link": "https://codeforces.com//contest/1104/problem/B",
    "problemId": "286141",
    "problem_idx": "B",
    "shortId": "1104B",
    "contest_number": "1104",
    "problem_submissions": {
        "E": [
            48758453,
            48757745,
            48860407,
            48894452
        ],
        "D": [
            48749288,
            48751393,
            48739522,
            48739394,
            48740563,
            48754038,
            48739408,
            48740821,
            48748481,
            48742803,
            48738301,
            48739495,
            48742984,
            48743793,
            48784753,
            48777626,
            48748805,
            48747430,
            48746053,
            48743794,
            48744017
        ],
        "B": [
            48730862,
            48734922,
            48725853,
            48727408,
            48724591,
            48727896,
            48729302,
            48727214,
            48728799,
            48726973,
            48729023,
            48725831,
            48730076,
            48728780,
            48725458,
            48730157,
            48728034,
            48724532,
            48732794
        ],
        "C": [
            48740971,
            48728632,
            48731211,
            48727173,
            48731021,
            48734041,
            48734825,
            48733419,
            48733357,
            48732320,
            48729298,
            48733894,
            48732918,
            48730070,
            48735185,
            48732353,
            48732560,
            48733524
        ],
        "A": [
            48730201,
            48723824,
            48724179,
            48723533,
            48724165,
            48726185,
            48724880,
            48724445,
            48724599,
            48730100,
            48723532,
            48725656,
            48724536,
            48723661,
            48725183,
            48724389,
            48723526,
            48730308
        ]
    },
    "name": "B. Game with string",
    "statement": "Two people are playing a game with a string s, consisting of lowercase\r\nlatin letters. On a player\u2019s turn, he should choose two consecutive\r\nequal letters in the string and delete them. For example, if the string\r\nis equal to \"\" than there is only one possible turn: delete \"\", so the\r\nstring will become \"\". A player not able to make a turn loses.Your task\r\nis to determine which player will win if both play optimally.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\n#ifdef __LOCAL_DEBUG__\n# define _debug(fmt, ...) fprintf(stderr, \"\\033[94m%s: \" fmt \"\\n\\033[0m\", \\\n    __func__, ##__VA_ARGS__)\n#else \n# define _debug(...) ((void) 0)\n#endif\n#define rep(i, n) for (int i=0; i<(n); i++)\n#define Rep(i, n) for (int i=1; i<=(n); i++)\n#define range(x) begin(x), end(x)\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\nint main() {\n    int cnt = 0;\n    stack<char> stk;\n    string str; cin >> str;\n    for (char ch : str) {\n        if (stk.size() and stk.top() == ch) {\n            stk.pop();\n            cnt++;\n        } else {\n            stk.push(ch);\n        }\n    }\n    if (cnt & 1) puts(\"YES\"); else puts(\"NO\");\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Game with string.json",
    "editorial_link": "https://codeforces.com//blog/entry/64722",
    "editorial": "It can be shown that the answer does not depend on the order of\r\ndeletions. Let\u00e2\u0080\u0099s remove letters from left to right, storing a stack of\r\nletters, remaining in the left. When we process a letter, it will be\r\ndeleted together with the last letter in the stack if they are equal or\r\nwill be pushed to the stack. Let\u00e2\u0080\u0099s calculate parity of the number of\r\ndeletions during this process and determine the answer.\r\n"
}