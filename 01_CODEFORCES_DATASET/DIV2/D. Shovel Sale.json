{
    "link": "https://codeforces.com//contest/899/problem/D",
    "problemId": "139223",
    "problem_idx": "D",
    "shortId": "899D",
    "contest_number": "899",
    "problem_submissions": {
        "E": [
            33341966,
            33340018,
            33344607,
            33341901,
            33341539,
            33344275,
            33337380,
            33342849,
            33340726,
            33347352,
            33343799,
            33343759,
            33341387,
            33344491,
            33344757,
            33341661,
            33346130,
            33338732
        ],
        "C": [
            33340695,
            33335345,
            33336434,
            33335120,
            33335041,
            33335499,
            33334442,
            33348052,
            33335755,
            33342632,
            33337468,
            33334609,
            33334793,
            33334208,
            33335451,
            33337214,
            33334080,
            33333085,
            33333444,
            33331734
        ],
        "F": [
            33338461,
            33343719,
            33339590,
            33345961,
            33344150,
            33347582,
            33346148,
            33345517,
            33343018,
            33342469,
            33347771,
            33346884,
            33346523,
            33344745,
            33367339,
            33341779,
            33351995,
            33344839,
            33365793
        ],
        "D": [
            33336515,
            33337716,
            33334973,
            33338435,
            33339737,
            33338654,
            33342392,
            33336907,
            33337363,
            33345764,
            33341905,
            33342131,
            33336716,
            33359470,
            33338983,
            33337743,
            33339386,
            33340477,
            33334813
        ],
        "B": [
            33333018,
            33334262,
            33335995,
            33336742,
            33345182,
            33334298,
            33344445,
            33333097,
            33339162,
            33346906,
            33355091,
            33333588,
            33336070,
            33332639,
            33334734,
            33332707,
            33332034,
            33335177,
            33341675
        ],
        "A": [
            33330877,
            33331991,
            33335753,
            33330957,
            33342381,
            33331004,
            33335366,
            33331266,
            33330748,
            33330942,
            33330958,
            33330948,
            33331773,
            33330761,
            33330943,
            33331310,
            33330809,
            33330687,
            33330860,
            33341110
        ]
    },
    "name": "D. Shovel Sale",
    "statement": "There are shovels in Polycarp\u2019s shop. The -th shovel costs burles, that\r\nis, the first shovel costs burle, the second shovel costs burles, the\r\nthird shovel costs burles, and so on. Polycarps wants to sell shovels in\r\npairs.Visitors are more likely to buy a pair of shovels if their total\r\ncost ends with several s. Because of this, Polycarp wants to choose a\r\npair of shovels to sell in such a way that the sum of their costs ends\r\nwith maximum possible number of nines. For example, if he chooses\r\nshovels with costs and , their total cost is , it ends with two\r\nnines.You are to compute the number of pairs of shovels such that their\r\ntotal cost ends with maximum possible number of nines. Two pairs are\r\nconsidered different if there is a shovel presented in one pair, but not\r\nin the other.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,dp[20][2][2][2][2],a[20];\nvoid DP(){\n\tint mx=0;\n\tlong long MX=0;\n\tfor(;;){\n\t\tMX=MX*10+9;\n\t\tif(MX>=n*2){\n\t\t\tMX/=10;\n\t\t\tbreak;\n\t\t}\n\t\tmx++;\n\t}\n\tint sz=0;\n\twhile(n)a[sz++]=n%10,n/=10;\n\tfor(int l=0,r=sz-1;l<r;l++,r--)swap(a[l],a[r]);\n\tif(sz==mx){\n\t\tfor(int i=0;i<=a[0];i++)\n\t\t\tif(9-i<=i)\n\t\t\t\tdp[0][(i==9-i)][(i==a[0])][(i==0)][(9-i==0)]++;\n\t}else {\n\t\tfor(int i=0;i<=a[0];i++)\n\t\t\tfor(int j=0;j<=i;j++)\n\t\t\t\tdp[0][(i==j)][(i==a[0])][(i==0)][(j==0)]++;\n\t}\n\tsz--;\n\tfor(int i=0,p=1,s1,s2,s3,s4;i<sz;i++,p++)\n\t\tfor(int j=0;j<2;j++)\n\t\t\tfor(int k=0;k<2;k++)\n\t\t\t\tfor(int l=0;l<2;l++)\n\t\t\t\t\tfor(int o=0;o<2;o++)\n\t\t\t\t\t\tfor(int A=0,B=9;A<=9;A++,B--){\n\t\t\t\t\t\t\tif(j&&A<B)continue;\n\t\t\t\t\t\t\tif(k&&A>a[p])continue;\n\t\t\t\t\t\t\ts1=j&(A==B);\n\t\t\t\t\t\t\ts2=k&(A==a[p]);\n\t\t\t\t\t\t\ts3=l&(A==0);\n\t\t\t\t\t\t\ts4=o&(B==0);\n\t\t\t\t\t\t\tdp[p][s1][s2][s3][s4]+=dp[i][j][k][l][o];\n\t\t\t\t\t\t}\n\tint ans=dp[sz][0][0][0][0]+dp[sz][0][1][0][0];\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tDP();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Shovel Sale.json",
    "editorial_link": "https://codeforces.com//blog/entry/56392",
    "editorial": "At first let\u00e2\u0080\u0099s check that the sum consisting of only digits nine. If it\r\nis true then the answer is .In the other case, we should calculate the\r\nnumber of digits in the number . Let this value if . We should construct\r\nthe number which consisting of digits nine. After that we should try to\r\nwrite each digit from to to the beginning of .Let we wrote next digit\r\nand became equal to (i.e. the first digit is and other digits are\r\nnines). So we need to add to the answer the number of ways to take two\r\ndifferent digits from to in such a way that their sum equals to .If , we\r\nshould add to the answer . If we should to add to the answer nothing.\r\nElse we should add to the answer the value .\r\n"
}