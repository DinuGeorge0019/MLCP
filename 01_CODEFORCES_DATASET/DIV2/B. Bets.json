{
    "link": "https://codeforces.com//contest/69/problem/B",
    "problemId": "371",
    "problem_idx": "B",
    "shortId": "69B",
    "contest_number": "69",
    "problem_submissions": {
        "C": [
            349894,
            349614,
            350523,
            349560,
            350776,
            350549,
            351000,
            349942,
            666908,
            350133,
            349952,
            349426,
            350282,
            349696,
            349722,
            349869,
            350920,
            349777
        ],
        "B": [
            349465,
            348708,
            348893,
            348837,
            348839,
            349036,
            348717,
            349280,
            348895,
            349174,
            349021,
            348740,
            348850,
            349870,
            349250,
            348865,
            349111,
            348964,
            348915
        ],
        "D": [
            349262,
            349874,
            349968,
            350206,
            350117,
            351057,
            350472,
            350799,
            615053,
            350148,
            350408,
            351180,
            351030,
            352036,
            351421,
            350961
        ],
        "E": [
            349012,
            349182,
            349347,
            349788,
            349489,
            349727,
            349844,
            350290,
            615043,
            349763,
            350933,
            350789,
            349750,
            350850,
            349215,
            348791,
            349522,
            349971,
            350071,
            349597,
            349978
        ],
        "A": [
            348235,
            348170,
            348402,
            348178,
            348224,
            348337,
            348855,
            348930,
            445218,
            348306,
            348777,
            348388,
            348282,
            348181,
            348122,
            348360,
            348165,
            348416,
            348199,
            348278
        ]
    },
    "name": "B. Bets",
    "statement": "In Chelyabinsk lives a much respected businessman Nikita with a strange\r\nnickname \"Boss\". Once Nikita decided to go with his friend Alex to the\r\nSummer Biathlon World Cup. Nikita, as a very important person, received\r\na token which allows to place bets on each section no more than on one\r\ncompetitor.To begin with friends learned the rules: in the race there\r\nare sections of equal length and participants. The participants numbered\r\nfrom to . About each participant the following is known: the number of\r\nthe starting section, the number of the finishing section (), the time a\r\nbiathlete needs to complete an section of the path, the profit in\r\nroubles. If the -th sportsman wins on one of the sections, the profit\r\nwill be given to the man who had placed a bet on that sportsman. The -th\r\nbiathlete passes the sections from to inclusive. The competitor runs the\r\nwhole way in time units. It takes him exactly time units to pass each\r\nsection. In case of the athleteâ€™s victory on sections the man who has\r\nbetted on him receives roubles.In each section the winner is determined\r\nas follows: if there is at least one biathlete running this in this\r\nsection, then among all of them the winner is the one who has ran this\r\nsection in minimum time (spent minimum time passing this section). In\r\ncase of equality of times the athlete with the smaller index number\r\nwins. If there are no participants in this section, then the winner in\r\nthis section in not determined. We have to say that in the summer\r\nbiathlon all the participants are moving at a constant speed.We should\r\nalso add that Nikita can bet on each section and on any contestant\r\nrunning in this section.Help the friends find the maximum possible\r\nprofit.\r\n",
    "solutions": [
        "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <string>\n#include <sstream>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint N , M , F[111] , G[111] ;\n\nint main()\n{\n\tcin >> N >> M ;\n\tmemset( F , 2 , sizeof ( F ) ) ;\n\tfor ( int i = 0 ; i < M ; i ++ ) {\n\t\tint l , r , t , c ;\n\t\tcin >> l >> r >> t >> c ;\n\t\tfor ( int j = l ; j <= r ; j ++ )\n\t\tif ( t < F[j] ) {\n\t\t\tF[j] = t ;\n\t\t\tG[j] = c ;\n\t\t}\n\t}\n\tint ret = 0 ;\n\tfor ( int i = 1 ; i <= N ; i ++ )\n\t\tret += G[i] ;\n\tcout << ret << endl ;\n\treturn 0 ;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Bets.json",
    "editorial_link": "https://codeforces.com//blog/entry/1571",
    "editorial": "In this problem, in fact, you should find a winner at every section. For each section, you must do a full search of all competitors to find a competitor with a minimum section time, which ran that section. Asymptotic of the solution is O(nm).\n",
    "hint": []
}