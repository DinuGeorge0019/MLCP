{
    "link": "https://codeforces.com//contest/359/problem/A",
    "problemId": "3896",
    "problem_idx": "A",
    "shortId": "359A",
    "contest_number": "359",
    "problem_submissions": {
        "E": [
            4966366,
            4965901,
            4965165,
            4968971,
            4968031,
            5030475,
            5030447,
            5030443
        ],
        "D": [
            4963797,
            4964306,
            4968709,
            4966296,
            4964708,
            4965929,
            4967215,
            4966606,
            4965405,
            4965253,
            4966594,
            4966662,
            4966795,
            4967604,
            4966152,
            4967077
        ],
        "C": [
            4963211,
            4971196,
            4966025,
            4963647,
            4966280,
            4964475,
            4964256,
            4964574,
            4963690,
            4965973,
            4965008,
            4965354,
            4964698,
            4965004,
            4964990,
            4964922
        ],
        "B": [
            4961725,
            4962522,
            4962983,
            4962414,
            4961846,
            4962396,
            4964001,
            4966184,
            4962445,
            4962650,
            4963163,
            4962642,
            4962226,
            4962488,
            4962708
        ],
        "A": [
            4961217,
            4961382,
            4961759,
            4961310,
            4961187,
            4961559,
            4961723,
            4962044,
            4961592,
            4961515,
            4962109,
            4961860,
            4961456,
            4962020,
            4961421
        ]
    },
    "name": "A. Table",
    "statement": "Simon has a rectangular table consisting of rows and columns. Simon\r\nnumbered the rows of the table from top to bottom starting from one and\r\nthe columns from left to right starting from one. We’ll represent the\r\ncell on the -th row and the -th column as a pair of numbers . The table\r\ncorners are cells: , , , .Simon thinks that some cells in this table are\r\n. Besides, it’s known that no good cell is the corner of the table.\r\nInitially, all cells of the table are colorless. Simon wants to color\r\nall cells of his table. In one move, he can choose any good cell of\r\ntable , an arbitrary corner of the table and color all cells of the\r\ntable , which meet both inequations: , .Help Simon! Find the minimum\r\nnumber of operations needed to color all cells of the table. Note that\r\nyou can color one cell multiple times.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nint n, m;\nint a[55][55];\nint row[55], col[55];\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++ i)\n        for (int j = 0; j < m; ++ j) {\n            scanf(\"%d\", &a[i][j]);\n            row[i] += a[i][j];\n            col[j] += a[i][j];\n        }\n    if (row[0] == 0 && row[n - 1] == 0 && col[0] == 0 && col[m - 1] == 0)\n        puts(\"4\");\n    else\n        puts(\"2\");\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Table.json",
    "editorial_link": "https://codeforces.com//blog/entry/9425",
    "editorial": "If there are some good cell, which is located in the first row or in the\r\nfirst column, the answer is two. Similarly, if If there are some good\r\ncell, which is located in the last row or in the last column, the answer\r\nis two. Otherwise, the answer is four. : 4968279\r\n",
    "hint": []
}