{
    "link": "https://codeforces.com//contest/276/problem/B",
    "problemId": "2658",
    "problem_idx": "B",
    "shortId": "276B",
    "contest_number": "276",
    "problem_submissions": {
        "E": [
            3187361,
            3187958,
            3187266,
            3188860,
            3188847,
            3189852,
            3189777,
            3189922,
            3189457,
            3190167,
            3186861,
            3189884,
            3191275,
            3193117
        ],
        "D": [
            3182892,
            3183526,
            3184256,
            3183830,
            3184596,
            3184640,
            3186374,
            3185199,
            3185759,
            3187754,
            3185579,
            3186224,
            3184708,
            3185151,
            3188148
        ],
        "C": [
            3182135,
            3182445,
            3183293,
            3183004,
            3183598,
            3183024,
            3180811,
            3183631,
            3182886,
            3184756,
            3183375,
            3183166,
            3181941,
            3184406,
            3183798,
            3183022
        ],
        "B": [
            3181517,
            3181475,
            3182700,
            3182413,
            3182645,
            3185448,
            3182835,
            3183061,
            3184639,
            3183463,
            3182154,
            3183111,
            3182195,
            3182637,
            3182319
        ],
        "A": [
            3180648,
            205334917,
            3180631,
            3180670,
            3181189,
            3180635,
            3180790,
            3181809,
            3180963,
            3183528,
            3181306,
            3190356,
            3180679,
            3180682,
            3181358,
            3180738
        ]
    },
    "name": "B. Little Girl and Game",
    "statement": "The Little Girl loves problems on games very much. Here’s one of\r\nthem.Two players have got a string , consisting of lowercase English\r\nletters. They play a game that is described by the following rules: The\r\nplayers move in turns; In one move the player can remove an arbitrary\r\nletter from string . If the player before his turn can reorder the\r\nletters in string so as to get a palindrome, this player wins. A\r\npalindrome is a string that reads the same both ways (from left to\r\nright, and vice versa). For example, string \"\" is a palindrome and\r\nstring \"\" isn’t. Determine which player will win, provided that both\r\nsides play optimally well the one who moves first or the one who moves\r\nsecond.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint s[26];char t[1000000];\nint main()\n{\n    scanf(\"%s\",t);\n    int n=strlen(t);\n    for(int i=0;i<n;i++)s[t[i]-'a']++;\n    for(int i=0;i<26;i++)s[i]%=2;\n    int S=0;\n    for(int i=0;i<26;i++)S+=s[i];\n    bool F=1;\n    while(S>=2){S--;F^=1;}\n    puts(F?\"First\":\"Second\");\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Little Girl and Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/6779",
    "editorial": "Let s calculate the number of letters with odd number of occurrences in\r\n. Let this value be equal to . If , then first player can win\r\nimmediately: he can easily build palindrome, placing equal letters in\r\ndifferent sides of resulting string (he always can do it, because total\r\nnumber of all letters is even). If then first player can win immediately\r\nagain; at first he builds palindrome from letters with even number of\r\noccurrences in ; after that he inserts the rest of the letters in the\r\nmiddle of built in previous step string. Let s proof very useful\r\nstatement. If our problem has the following solution: if is even, than\r\nsecond player is winner; otherwise, first player is winner. Let . At the\r\nbeginning of the game first player can make move of two types. Using\r\nmove of first type first player can decrease to by erasing one\r\nappearance of letter with odd number of occurrences. But this move leads\r\nhim to defeat, because after this move second player can build\r\npalindrome. Using move of second type first player can increase to by\r\nerasing one appearance of letter with even number of occurrences. In\r\nthis case second player can make similar move he will erase the same\r\nletter. Since the number of moves of this type is finite, sooner or\r\nlater first player will have to make a move of first type. After this\r\nmove he loses immediately. So, if , than second player is a winner. Let\r\n. First player can decrease to by erasing the letter with odd number of\r\noccurrences. If second player will try to increase to again by erasing\r\nthe similar letter, first player can decrease to again (he erases the\r\nsame letter again). It s easy to see that the last move in this sequence\r\nof moves will be the move of first player. So, first player always can\r\nchange the game in such a way that . This position is losing position\r\nfor second player and winning position for first player. Now we can\r\neasily proof our statement for any using mathematical induction. So, we\r\nhave quite easy solution with time complexity . C++ code Java code\r\n",
    "hint": []
}