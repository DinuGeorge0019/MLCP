{
    "link": "https://codeforces.com//contest/47/problem/A",
    "problemId": "245",
    "problem_idx": "A",
    "shortId": "47A",
    "contest_number": "47",
    "problem_submissions": {
        "D": [
            214688,
            214567,
            214462,
            214130,
            214246,
            214591,
            214548,
            214594,
            215160,
            214627,
            214695,
            277771,
            214789,
            214819,
            214988,
            214911
        ],
        "C": [
            214531,
            214800,
            214769,
            214564,
            214632
        ],
        "B": [
            214196,
            213937,
            213787,
            213575,
            213695,
            213642,
            213745,
            213667,
            214199,
            213907,
            213980,
            213392,
            213596,
            213886,
            213586,
            214343
        ],
        "A": [
            213976,
            213112,
            213127,
            213092,
            213168,
            213253,
            213260,
            213161,
            213129,
            213524,
            213232,
            213065,
            213046,
            213145,
            213105,
            213370
        ],
        "E": [
            215233
        ]
    },
    "name": "A. Triangular numbers",
    "statement": "A triangular number is the number of dots in an equilateral triangle\r\nuniformly filled with dots. For example, three dots can be arranged in a\r\ntriangle; thus three is a triangular number. The -th triangular number\r\nis the number of dots in a triangle with dots on a side. . You can learn\r\nmore about these numbers from Wikipedia\r\n(http://en.wikipedia.org/wiki/Triangular_number).Your task is to find\r\nout if a given integer is a triangular number.\r\n",
    "solutions": [
        "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iomanip>\n#include <cstdio>\n#include <vector>\n#include <bitset>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <cmath>\n#include <ctime>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\n#define VT vector\ntypedef VT<int> VI;\ntypedef VT<VI> VVI;\ntypedef VT<string> VS;\ntypedef VT<double> VD;\ntypedef VT<VD> VVD;\n\n#define REP(i,n) for(int i=0;i<(int)(n);++i)\n#define FOR(i,a,b) for(int i=(int)a;i<=(int)b;++i)\n#define ALL(c) c.begin(),c.end()\n#define PB push_back\n#define MP make_pair\n\n\nint main(int argc, char* argv[])\n{\n    int n; \n    cin>>n;\n\n    bool yes = false;\n\n    for(int i = 1; i <= n; ++i)\n    {\n        if (i*(i+1) / 2 == n)\n            yes = true;\n    }\n\n    if (yes)\n        cout << \"YES\\n\";\n    else\n        cout << \"NO\\n\";\n\n    int temp;\n    std::cin >> temp;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Triangular numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/931",
    "editorial": "Because of small constraints, just iterate n from 1 to Tn and check "
}