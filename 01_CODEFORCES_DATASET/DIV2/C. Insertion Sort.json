{"link": "https://codeforces.com//contest/362/problem/C", "problemId": "3971", "problem_idx": "C", "shortId": "362C", "contest_number": "362", "problem_submissions": {"D": [5106574, 5109805, 5108707, 5110095, 5109823, 5107984, 5114349, 5146913], "C": [5103024, 5102004, 5102280, 5104232, 5104539, 5104677, 5106034, 5103492, 5106177, 5103173, 5110444, 5105776, 5106214, 5105579, 5106217, 5104642], "A": [5100714, 5100012, 5099653, 5099996, 5099930, 5099251, 5099198, 5105643, 5100062, 5106330, 5099189, 5101295, 5100008, 5100185, 5101540, 5101308], "B": [5099807, 5109634, 5098724, 5099026, 5100692, 5100418, 5100315, 5100379, 5098852, 5099011, 5103916, 5100105, 5100650, 5101467, 5105783, 5102571, 5102169], "E": [5106815, 5107748, 5110196]}, "name": "C. Insertion Sort", "statement": "Petya is a beginner programmer. He has already mastered the basics of\r\nthe C++ language and moved on to learning algorithms. The first\r\nalgorithm he encountered was insertion sort. Petya has already written\r\nthe code that implements this algorithm and sorts the given integer\r\nzero-indexed array of size in the non-decreasing order. for (int i = 1;\r\ni < n; i = i + 1){ int j = i; while (j > 0 && a[j] < a[j - 1]) {\r\nswap(a[j], a[j - 1]); // swap elements a[j] and a[j - 1] j = j - 1;\r\n}}Petya uses this algorithm only for sorting of arrays that are\r\npermutations of numbers from to . He has already chosen the permutation\r\nhe wants to sort but he first decided to swap some two of its elements.\r\nPetya wants to choose these elements in such a way that the number of\r\ntimes the sorting executes function , was minimum. Help Petya find out\r\nthe number of ways in which he can make the swap and fulfill this\r\nrequirement.It is guaranteed that it\u2019s always possible to swap two\r\nelements of the input permutation in such a way that the number of\r\nfunction calls decreases.\r\n", "solutions": ["#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <list>\n#include <map>\n#include <set>\n#include <stdlib.h>\n#include <sstream>\n#include <assert.h>\n#include <complex>\n\n#include <time.h>\n#pragma comment(linker, \"/STACK:20000000\")\n\n#define fr(i,a,b) for(int i=(int)(a);i<=(int)(b);i++)\n#define fd(i,a,b) for(int i=(int)(a);i>=(int)(b);i--)\n#define mp make_pair\n#define pb push_back\n#define ll long long\n\nusing namespace std;\n\nint ri(){int x;scanf(\"%d\",&x);return x;}\nll rll(){ll x;scanf(\"%lld\",&x);return x;}\n\nint check(vector<int> a)\n{\n\tint res = 0;\n\tfor (int i = 0; i < a.size(); i = i + 1)\n\t{\n\t   int j = i; \n\t   while (j > 0 && a[j] < a[j - 1])\n\t   {\n\t\t  swap(a[j], a[j - 1]); // \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b a[j] \u0438 a[j - 1]\n\t\t  j = j - 1;\n\t\t  res++;\n\t   }\n\t}\n\treturn res;\n}\n\nint dp[5050];\n\nvoid insert(int i)\n{\n\twhile(i < 5050)\n\t\tdp[i]++,i += i & (-i);\n}\n\nint get(int i)\n{\n\tint res = 0;\n\twhile(i)\n\t\tres += dp[i],i-=i &(-i);\n\treturn res;\n}\n\nvoid solve()\n{\n\tint n = ri();\n\tvector<int> mas;\n\tfr(i,1,n)\n\t\tmas.pb(ri() + 1);\n\t//swap(mas[0],mas[3]);\n\tint mx =  check(mas);\n\tint res = 2e9,cnt = 0;\n\tfr(i,0,n-1)\n\t{\n\t\tmemset(dp,0,sizeof(dp));\n\t\tint x = mas[i];\n\t\tinsert(x);\n\t\tfr(j,i + 1,n - 1)\n\t\t{\n\t\t\tint y = mas[j];\n\t\t\tinsert(y);\n\t\t\tint a = get(x - 1);\n\t\t\tint d = j - i;\n\t\t\tint b = get(y - 1);\n\t\t\tint temp = mx - a + (d - a) + b - (d - b) + 1;\n\t\t\tif (temp < res)\n\t\t\t\tres = temp,cnt = 1;\n\t\t\telse\n\t\t\tif (temp == res)\n\t\t\t\tcnt++;\n\t\t}\n\n\t}\n\tcout << res << ' ' << cnt << endl;\n}\n\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"C:/Users/CleRIC/Desktop/\u0423\u043d\u0438\u0432\u0435\u0440/acm.timus.ru/input.txt\",\"rt\",stdin);\n\t\tfreopen(\"C:/Users/CleRIC/Desktop/\u0423\u043d\u0438\u0432\u0435\u0440/acm.timus.ru/output.txt\",\"wt\",stdout);\n\t#else\n\t\t//freopen(\"cubroot.in\",\"rt\",stdin);\n\t\t//freopen(\"cubroot.out\",\"wt\",stdout);\n\t#endif\n\t//fd(i,5000,1)\n\t//\tcout << i << ' ';\n\tsolve();\n\n\t#ifndef ONLINE_JUDGE\n\t\tprintf(\"\\n\\ntime-%.3lf\",clock()*1e-3);\n\t#endif\n\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dp", "implementation", "math"], "dificulty": "1900", "interactive": false}