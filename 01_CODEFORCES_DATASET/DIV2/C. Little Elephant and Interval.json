{"link": "https://codeforces.com//contest/205/problem/C", "problemId": "1539", "problem_idx": "C", "shortId": "205C", "contest_number": "205", "problem_submissions": {"E": [1890290, 1890857, 1888830, 1895841, 1896230, 1893117], "D": [1888418, 1888966, 1886041, 1887661, 1887038, 1887138, 1886812, 1886982, 1886173, 1887895, 1887426, 1886086, 1887791, 1886400, 1887899, 1887890, 1887554], "C": [1887403, 10219680, 1888200, 1887469, 1885487, 1886378, 1886198, 1886444, 1886262, 1885308, 1888612, 1886427, 1886322, 1888156, 1886987, 1888828, 1887054, 1886548, 1889741], "B": [1885347, 1885224, 1883868, 1884083, 1884584, 1885087, 1884843, 1885241, 1883866, 1884145, 1884352, 1885005, 1884951, 1884629, 1884616, 1884866, 1884631, 1886549], "A": [1883495, 1883456, 1883441, 1883462, 1883497, 1883746, 1883922, 1883957, 1884403, 1883486, 1883550, 1883761, 1883459, 1883607, 1883898, 1883757, 1883836, 1883518]}, "name": "C. Little Elephant and Interval", "statement": "The Little Elephant very much loves sums on intervals.This time he has a\r\npair of integers and . The Little Elephant has to find the number of\r\nsuch integers , that the first digit of integer equals the last one (in\r\ndecimal notation). For example, such numbers as , or will be included in\r\nthe answer and , or will not.Help him and count the number of described\r\nnumbers for a given pair and .\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long i64;\ni64 ten[20]={1};\nint dig[20], len;\ni64 work(i64 n)\n{\n    if(n<10) return n;\n    len=0;\n    i64 n1=n;\n    while(n)\n    {\n        dig[len++]=n%10;\n        n/=10;\n    }\n    i64 r=0;\n    for(int i=1; i<len; ++i) r += ten[max(0,i-2)]*9;\n    int mi=dig[len-1];\n    r += (mi-1)*ten[len-2];\n    n=(n1%ten[len-1])/10;\n    r += n+1;\n    if(dig[0]<dig[len-1]) --r;\n    return r;\n}\nint main()\n{\n    for(int i=1; i<20; ++i) ten[i]=ten[i-1]*10;\n    i64 a, b;\n    while(scanf(\"%I64d%I64d\", &a, &b) != EOF)\n    {\n   //     cout<<work(a-1)<<\" \";\n   //     cout<<work(b)<<endl;\n        printf(\"%I64d\\n\", work(b) - work(a-1));\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "brute force", "combinatorics", "dp", "math"], "dificulty": "1500", "interactive": false}