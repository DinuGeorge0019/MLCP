{"link": "https://codeforces.com//contest/22/problem/C", "problemId": "101", "problem_idx": "C", "shortId": "22C", "contest_number": "22", "problem_submissions": {"E": [95075, 339772], "D": [94674, 94317, 94288, 94253, 94410, 94089, 94399, 94885, 94131, 94729, 94450, 93950, 94649], "C": [94316, 94019, 94074, 94097, 94060, 94297, 94096, 94518, 94472, 94134, 94320, 94611, 94048], "B": [93968, 93767, 93718, 93851, 93760, 93791, 93790, 93866, 93966, 93778, 94454, 94133, 94258, 93853], "A": [93542, 93511, 93475, 93559, 93491, 93518, 93660, 93794, 93555, 93524, 93810, 93535, 93618]}, "name": "C. System Administrator", "statement": "Bob got a job as a system administrator in X corporation. His first task\r\nwas to connect servers with the help of two-way direct connection so\r\nthat it becomes possible to transmit data from one server to any other\r\nserver via these connections. Each direct connection has to link two\r\ndifferent servers, each pair of servers should have at most one direct\r\nconnection. Y corporation, a business rival of X corporation, made Bob\r\nan offer that he couldn\u2019t refuse: Bob was asked to connect the servers\r\nin such a way, that when server with index fails, the transmission of\r\ndata between some other two servers becomes impossible, i.e. the system\r\nstops being connected. Help Bob connect the servers.\r\n", "solutions": ["#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint a[100013];\nint main(){\n    int n,m,v;\n    cin>>n>>m>>v;\n    if(((n-1)*(n-2))/2+1<m || m<n-1){\n        cout<<-1;\n        return 0;\n    }\n    for(int i=0; i<=n; i++){\n        a[i]=i;\n    }\n    int w=(v+1)%n;\n    if(w==0) w=n;\n    cout<<w<<\" \"<<v<<endl;\n    if(w==2 && v==1){\n        swap(a[w],a[1]);\n    }else{\n        if(v==1){\n            swap(a[v],a[2]);\n            swap(a[w],a[1]);\n        }else{\n            \n            swap(a[w],a[1]);\n            swap(a[v],a[2]);\n        }\n        \n        \n    }\n    int c=1;\n    for(int i=2; i<=n; i++){\n        for(int j=i+1; j<=n; j++){\n            if(c==m) return 0;\n            cout<<a[i]<<\" \"<<a[j]<<endl;\n            c++;\n        }\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["graphs"], "dificulty": "1700", "interactive": false}