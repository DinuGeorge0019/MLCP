{
    "link": "https://codeforces.com//contest/1282/problem/A",
    "problemId": "502546",
    "problem_idx": "A",
    "shortId": "1282A",
    "contest_number": "1282",
    "problem_submissions": {
        "E": [
            67546320,
            67540524,
            67541446,
            67546303,
            67546008,
            67555357,
            67546940,
            67554692,
            67554152,
            67544350,
            67536466,
            67548692,
            67540027,
            67545669,
            67549313,
            67547161,
            67559435,
            67546463
        ],
        "D": [
            67539652,
            67544407,
            67549747,
            67552213,
            67545569,
            67553744,
            67546954,
            67547692,
            67559514,
            67555818,
            67556694,
            67549779,
            67598315,
            67547666,
            67544808,
            67560465,
            67548234,
            67564097,
            67563835,
            67550417,
            67558326
        ],
        "C": [
            67534787,
            67533541,
            67536568,
            67540389,
            67537852,
            67536983,
            67539275,
            67539714,
            67541087,
            67545744,
            67547743,
            67539703,
            67555448,
            67535851,
            67539752,
            67537500,
            67540009,
            67540608,
            67537965,
            67542806
        ],
        "B1": [
            67530651,
            67528820,
            67529188,
            67532639,
            67529290,
            67531855,
            67532183,
            67532128,
            67536143,
            67531195,
            67544224,
            67536607,
            67547534,
            67532778,
            67535678,
            67530911,
            67533223,
            67529828,
            67532257,
            67532690
        ],
        "B2": [
            67530568,
            67528747,
            67529121,
            67532572,
            67529220,
            67531772,
            67532043,
            67532055,
            67536010,
            67535218,
            67544175,
            67536559,
            67747743,
            67553996,
            67532837,
            67535576,
            67530786,
            67533144,
            67529811,
            67532146,
            67532632
        ],
        "A": [
            67527639,
            67527588,
            67527631,
            67528416,
            67527601,
            67528381,
            67527986,
            67528304,
            67530259,
            67527611,
            67537517,
            67551469,
            67529352,
            67527672,
            67527752,
            67527928,
            67529147,
            67527871,
            67528083
        ]
    },
    "name": "A. Temporarily unavailable",
    "statement": "Polycarp lives on the coordinate axis Ox and travels from the point x=a\r\nto x=b. It moves uniformly rectilinearly at a speed of one unit of\r\ndistance per minute.On the axis Ox at the point x=c the base station of\r\nthe mobile operator is placed. It is known that the radius of its\r\ncoverage is r. Thus, if Polycarp is at a distance less than or equal to\r\nr from the point x=c, then he is in the network coverage area, otherwise\r\nno. The base station can be located both on the route of Polycarp and\r\noutside it.Print the time in minutes during which Polycarp will in the\r\ncoverage area of the network, with a rectilinear uniform movement from\r\nx=a to x=b. His speed one unit of distance per minute.\r\n",
    "solutions": [
        "#include <utility>\n#include <iostream>\n#include <cmath>\n#include <deque>\n#include <string>\n#include <time.h>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <sstream>\n#include <algorithm>\n#include <bitset>\n#include <stdint.h>\n\n#define pii pair<ll,ll>\n#define X first\n#define Y second\n#define mp make_pair\n\ntypedef long long ll;\nusing namespace std;\n#define MAXN 200500\n#define MOD 998244353\n#define OFF 2001\nll n, x, k, z, m, pos, q, ans_v, y;\nll x1, p1, x2;\nll a[MAXN], b[MAXN];\nvector<ll> f;\nvector<ll> g[MAXN];\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    ll t;\n    cin >> t;\n    while (t--) {\n        ll a, b, c, r;\n        cin >> a >> b >> c >> r;\n        ll l = c - r;\n        r = c + r;\n        if (a > b) {\n            swap(a, b);\n        }\n        ll aa = max(a, l);\n        ll bb = min(b, r);\n        ll diff = max(bb - aa, 0LL);\n        cout << b - a - diff << \"\\n\";\n    }\n\n\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Temporarily unavailable.json",
    "editorial_link": "https://codeforces.com/blog/entry/72461?locale=en",
    "editorial": "To get an answer, we need to subtract from the whole time the time that\r\nwe will be in the coverage area. Let the left boundary of the cover be ,\r\nand the right boundary of the cover be . Then the intersection\r\nboundaries will be , . Then the answer is calculated by the formula .\r\n"
}