{
    "link": "https://codeforces.com//contest/577/problem/D",
    "problemId": "34891",
    "problem_idx": "D",
    "shortId": "577D",
    "contest_number": "577",
    "problem_submissions": {
        "E": [
            12934021,
            12937802,
            12946890,
            12941991,
            12957515,
            12944448,
            13175505,
            12944648,
            12944393,
            12937611,
            12947231,
            12946467,
            12943052,
            12942794
        ],
        "D": [
            12944318,
            12940763,
            12944692,
            12944241,
            12944185,
            12943472
        ],
        "C": [
            12939458,
            12935330,
            12931965,
            12930011,
            12933070,
            12931435,
            12931425,
            12936025,
            12933543,
            12937247,
            12928317,
            12934645,
            12932764,
            12930639,
            12932440,
            12935065,
            12934571
        ],
        "B": [
            12935134,
            12931058,
            12929931,
            12931038,
            12930166,
            12928876,
            12933443,
            12931395,
            12932755,
            12937356,
            12947929,
            13099221,
            12935418,
            12931420
        ],
        "A": [
            12926434,
            12926190,
            12926725,
            12926012,
            12926179,
            12925982,
            12927025,
            12927554,
            12927030,
            12926024,
            12926655,
            12926029,
            12927638,
            12927453,
            12926982,
            12926032
        ]
    },
    "name": "D. Invariance of Tree",
    "statement": "A tree of size is an undirected connected graph consisting of vertices\r\nwithout cycles.Consider some tree with vertices. We call a tree relative\r\nto permutation , if for any two vertices of the tree and the condition\r\nholds: \"vertices and are connected by an edge if and only if vertices\r\nand are connected by an edge\".You are given permutation of size . Find\r\nsome tree size , invariant relative to the given permutation.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nint P[100100];\nint A[100100];\nint K[100100];\nint E[100100][2];\n\nint main()\n{\n    int tot = 0;\n    bool F = true;\n    int i,j,l,k,px,py;\n    scanf(\"%d\", &k);\n    for (i = 1 ; i <= k ; ++i)\n        scanf(\"%d\", &P[i]);\n    for (i = 1 ; i <= k ; ++i)\n    {\n        j = P[i];\n        if (P[j] == i)\n        {\n            px = i;\n            py = j;\n            F = false;\n        }\n    }\n    for (i = 1 ; i <= k ; ++i)\n        if (P[i] == i)\n        {\n            px = py = i;\n            F = false;\n        }\n    if (F) printf(\"NO\\n\");\n    else\n    {\n        if (px != py)\n        {\n            A[px] = A[py] = 1;\n            E[++tot][1] = px; E[tot][2] = py;\n            for (i = 1 ; i <= k ; ++i)\n            {\n                if (A[i]) continue;\n                while (A[i] == 0)\n                {\n                    K[i] = px;\n                    E[++tot][1] = px; E[tot][2] = i;\n                    A[i] = 1;\n                    i = P[i];\n                    j = px;\n                    px = py;\n                    py = j;\n                }\n                if (K[i] != px) F = true;\n            }\n            if (F) printf(\"NO\\n\");\n            else\n            {\n                printf(\"YES\\n\");\n                for (i = 1 ; i < k ; ++i)\n                    printf(\"%d %d\\n\", E[i][1], E[i][2]);\n            }\n        }\n        else\n        {\n            printf(\"YES\\n\");\n            for (i = 1 ; i <= k ; ++i)\n            if (i != px) printf(\"%d %d\\n\", i, px);\n        }\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Invariance of Tree.json",
    "editorial_link": "https://codeforces.com//blog/entry/20226",
    "editorial": null
}