{
    "link": "https://codeforces.com//contest/732/problem/C",
    "problemId": "76073",
    "problem_idx": "C",
    "shortId": "732C",
    "contest_number": "732",
    "problem_submissions": {
        "E": [
            21538888,
            21537779,
            21537129,
            21537499,
            21538134,
            21538715,
            21544444,
            21539734,
            21540059,
            21536661,
            21540840,
            21542039,
            21534910,
            21538735,
            21535519,
            21536958,
            21540398,
            21538120,
            21542707
        ],
        "F": [
            21537120,
            21540142,
            21542965,
            21544806,
            21544597,
            21545399,
            21540042,
            21543034,
            21545483,
            21656308,
            21554885
        ],
        "D": [
            21532629,
            21525539,
            21530620,
            21528537,
            21533913,
            21534989,
            21534469,
            21531559,
            21536597,
            21530734,
            21531936,
            21535213,
            21537946,
            21531246,
            21536546,
            21534126,
            21532973,
            21532309,
            21534225
        ],
        "C": [
            21530647,
            21529152,
            21528463,
            21531507,
            21530354,
            21530901,
            21532584,
            21527470,
            21533687,
            21527417,
            21527627,
            21531693,
            21526633,
            21526154,
            21527731,
            21528874,
            21530241,
            21527402,
            21526262
        ],
        "B": [
            21523702,
            21526949,
            21525416,
            21523386,
            21525291,
            21525800,
            21523178,
            21524106,
            21531342,
            21523932,
            21525092,
            21525450,
            21524463,
            21523658,
            21524734,
            21525994,
            21523984,
            21522251,
            21523311
        ],
        "A": [
            21522134,
            21538223,
            21523250,
            21522010,
            21522393,
            21523229,
            21521947,
            21521953,
            21522096,
            21522038,
            21522617,
            21523179,
            21522061,
            21522531,
            21523191,
            21523859,
            21522155,
            21528156,
            21521893
        ]
    },
    "name": "C. Sanatorium",
    "statement": "Vasiliy spent his vacation in a sanatorium, came back and found that he\r\ncompletely forgot details of his vacation! Every day there was a\r\nbreakfast, a dinner and a supper in a dining room of the sanatorium (of\r\ncourse, in this order). The only thing that Vasiliy has now is a card\r\nfrom the dining room contaning notes how many times he had a breakfast,\r\na dinner and a supper (thus, the card contains three integers). Vasiliy\r\ncould sometimes have missed some meal, for example, he could have had a\r\nbreakfast and a supper, but a dinner, or, probably, at some days he\r\nhaven\u2019t been at the dining room at all.Vasiliy doesn\u2019t remember what was\r\nthe time of the day when he arrived to sanatorium (before breakfast,\r\nbefore dinner, before supper or after supper), and the time when he left\r\nit (before breakfast, before dinner, before supper or after supper). So\r\nhe considers any of these options. After Vasiliy arrived to the\r\nsanatorium, he was there all the time until he left. Please note, that\r\nit\u2019s possible that Vasiliy left the sanatorium on the same day he\r\narrived.According to the notes in the card, help Vasiliy determine the\r\nminimum number of meals in the dining room that he could have missed. We\r\nshouldn\u2019t count as missed meals on the arrival day before Vasiliy\u2019s\r\narrival and meals on the departure day after he left.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <set>\n#include <map>\n#include <string>\n#include <bitset>\n#include <vector>\n#include <complex>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\n#define de(x) cout << #x << \"=\" << x << endl\n#define rep(i,a,b) for(int i=a;i<(b);++i)\n#define all(x) (x).begin(),(x).end()\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\nll a[3],b[3];\n\nint main(){\n    ll Sum = 0;\n    rep(i,0,3) cin >> a[i] , Sum += a[i];\n    ll ans = 9 * 1e18;\n    rep(i,0,3) rep(j,i,3){\n        memset(b,0,sizeof(b));\n        rep(k,i,j+1) b[k] = 1;\n        bool ok = true;\n        rep(k,0,3) ok &= b[k] >= a[k];\n        if(ok) ans = min(ans , j - i + 1ll - Sum);\n    }\n    rep(i,0,4) rep(j,0,4){\n        memset(b , 0 , sizeof(b));\n        for(int k=0;k<min(3,i);++k) b[k]++;\n        for(int k=0;k<min(3,j);++k) b[2-k]++;\n        ll Max = 0;\n        rep(k,0,3) Max = max(Max , a[k] - b[k]);\n        ll tmp = 3 * Max + i + j - Sum;\n        ans = min(tmp , ans);\n    }\n    cout <<ans << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Sanatorium.json",
    "editorial_link": "https://codeforces.com//blog/entry/47890",
    "editorial": "Let\u00e2\u0080\u0099s iterate on the time of day when Vasiliy arrived at the sanatorium\r\n(breakfast, dinner or supper) and on the time when Vasiliy left. We sum\r\nthe changed values of , and (considering that we take all possible meals\r\nduring the first and the last day) into the variable , find the maximum\r\nof these three variables (also changed), and if our current answer is\r\nmore than , we update it with this value. After considering all possible\r\nscenarios, we print the answer.Time complexity: , .\r\n"
}