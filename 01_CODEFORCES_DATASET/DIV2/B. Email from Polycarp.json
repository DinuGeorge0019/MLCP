{"link": "https://codeforces.com//contest/1185/problem/B", "problemId": "360321", "problem_idx": "B", "shortId": "1185B", "contest_number": "1185", "problem_submissions": {"G2": [55788875, 55790981, 55805220, 55805211, 55805181, 55805110, 55805072, 55792804, 55790893, 55798346, 55839723], "F": [55780405, 55784226, 55779797, 55790435, 55783948, 55774453, 55775306, 55787301, 55787239, 55780510, 55776902, 55778347, 55775969, 55787695, 55787943, 55780581, 55779230, 55782760, 55786882, 55789076], "G1": [55775590, 55777444, 55773026, 55772290, 55770464, 55777149, 55766017, 55779783, 55780697, 55775163, 55781086, 55781273, 55783475, 55770087, 55781658, 55783057, 55787570, 55776249, 55782788, 55780634], "E": [55773709, 55771675, 55770836, 55777430, 55780309, 55781282, 55788835, 55774037, 55773565, 55789637, 55786175, 55787728, 55781452, 55776381, 55777447, 55775569, 55774578, 55788543, 55772414, 55777859], "D": [55764805, 55765160, 55763333, 55764561, 55767970, 55767077, 55763517, 55765643, 55766955, 55766963, 55766612, 55765495, 55757519, 55767392, 55769540, 55767234, 55769033, 55770802, 55765015, 55772029], "C1": [55760617, 55761184, 55760176, 55760890, 55765300, 55759868, 55766915, 55759835, 55763415, 55762227, 55760086, 55765957, 55763972, 55762753, 55765982, 55761920, 55763575, 55762040, 55779786, 55761686], "C2": [55760448, 55761127, 55759974, 55760758, 55765213, 55759811, 55767080, 55761513, 55763197, 55762148, 55760260, 55762050, 55763657, 55765005, 55765960, 55761757, 55779613, 55763567, 55779964, 55761855], "B": [55757432, 55757400, 55757118, 55756714, 55760856, 55756979, 55757746, 55757494, 55758775, 55757209, 55756807, 55758385, 55768633, 55758969, 55760948, 55757700, 55756899, 55760037, 55759228, 55756676], "A": [55755278, 55754991, 55754916, 55754981, 55758172, 55754952, 55755176, 55754923, 55755064, 55755117, 55755166, 55754951, 55770975, 55755955, 55755304, 55755094, 55755216, 55755238, 55756678, 55754929]}, "name": "B. Email from Polycarp", "statement": "Methodius received an email from his friend Polycarp. However,\r\nPolycarp\u2019s keyboard is broken, so pressing a key on it once may cause\r\nthe corresponding symbol to appear more than once (if you press a key on\r\na regular keyboard, it prints exactly one symbol).For example, as a\r\nresult of typing the word \"\", the following words be printed: \"\", \"\",\r\n\"\", but the following be printed: \"\", \"\", \"\".Note, that when you press a\r\nkey, the corresponding symbol must appear (possibly, more than once).\r\nThe keyboard is broken in a random manner, it means that pressing the\r\nsame key you can get the different number of letters in the result.For\r\neach word in the letter, Methodius has guessed what word Polycarp\r\nactually wanted to write, but he is not sure about it, so he asks you to\r\nhelp him.You are given a list of pairs of words. For each pair,\r\ndetermine if the second word could be printed by typing the first one on\r\nPolycarp\u2019s keyboard.\r\n", "solutions": ["///Mn kotr el labawy mb2t4 nawy\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nint main(){\n  ios_base::sync_with_stdio(0);cin.tie(0);\n  int t;  cin >> t;\n\n  while(t--){\n\n      string s1, s2;  cin >> s1 >> s2;\n      vector<pair<char, int>> a1, a2;\n      for(auto c : s1){\n        if(a1.empty()||a1.back().first!=c)a1.push_back({c,0});\n        a1.back().second++;\n      }\n      for(auto c : s2){\n        if(a2.empty()||a2.back().first!=c)a2.push_back({c,0});\n        a2.back().second++;\n      }\n      if(a1.size()!=a2.size())cout << \"NO\\n\";\n      else {\n        bool ok = true;\n        for(int i = 0; i < a1.size(); i++){\n          ok &= (a1[i].first == a2[i].first);\n          ok &= (a1[i].second <= a2[i].second);\n        }\n        if(ok)cout<<\"YES\\n\";\n        else cout << \"NO\\n\";\n      }\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1200", "interactive": false}