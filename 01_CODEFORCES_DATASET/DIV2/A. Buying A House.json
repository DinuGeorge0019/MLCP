{
    "link": "https://codeforces.com//contest/796/problem/A",
    "problemId": "102472",
    "problem_idx": "A",
    "shortId": "796A",
    "contest_number": "796",
    "problem_submissions": {
        "D": [
            26270676,
            26268879,
            26272464,
            26267846,
            26271244,
            26271502,
            26279976,
            26280757,
            26270905,
            26273570,
            26272084,
            26278210,
            26277165,
            26274914,
            26273555,
            26270674,
            26274828,
            26272225,
            26276256,
            26275870
        ],
        "C": [
            26266928,
            26275839,
            26289710,
            26263867,
            26268031,
            26268145,
            26268959,
            26275805,
            26276716,
            26267202,
            26282722,
            26266268,
            26273046,
            26271604,
            26307139,
            26307124,
            26307117,
            26306972,
            26268576,
            26276501,
            26270809,
            26275985,
            26270211,
            26272901
        ],
        "B": [
            26260444,
            26260714,
            26260928,
            26268179,
            26259754,
            26260202,
            26259813,
            26260983,
            26261840,
            26260679,
            26259761,
            26261074,
            26260940,
            26259972,
            26266557,
            26259771,
            26262157,
            26259891,
            26263590,
            26260396
        ],
        "A": [
            26258377,
            26258938,
            26258411,
            26258195,
            26258231,
            26258560,
            26258094,
            26258499,
            26258460,
            26258203,
            26258087,
            26258420,
            26258693,
            26258275,
            26258381,
            26258161,
            26258669,
            26258379,
            26260347,
            26258265
        ],
        "E": [
            26280397,
            26347598,
            26308967,
            26308953
        ],
        "F": [
            58542353
        ]
    },
    "name": "A. Buying A House",
    "statement": "Zane the wizard had never loved anyone before, until he fell in love\r\nwith a girl, whose name remains unknown to us. The girl lives in house\r\nof a village. There are houses in that village, lining in a straight\r\nline from left to right: house , house , ..., house . The village is\r\nalso well-structured: house and house () are exactly meters away. In\r\nthis village, some houses are occupied, and some are not. Indeed,\r\nunoccupied houses can be purchased.You will be given integers that\r\ndenote the availability and the prices of the houses. If house is\r\noccupied, and therefore cannot be bought, then equals . Otherwise, house\r\ncan be bought, and represents the money required to buy it, in\r\ndollars.As Zane has only dollars to spare, it becomes a challenge for\r\nhim to choose the house to purchase, so that he could live as near as\r\npossible to his crush. Help Zane determine the minimum distance from his\r\ncrushâ€™s house to some house he can afford, to help him succeed in his\r\nlove.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, a[10000];\nint main() {\n\tcin >> n >> m >> k;\n\tint ans = n + 1;\n\tm--;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\tif (a[i] != 0 && a[i] <= k) {\n\t\t\tans = min(ans, abs(m - i));\n\t\t}\n\t}\n\tcout << ans * 10 << endl;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Buying A House.json",
    "editorial_link": "https://codeforces.com/blog/entry/51527",
    "editorial": "This is a simple implementation problem.Let the be infinity initially.\r\nIterate through the houses. Suppose we are considering house , update\r\nthe if and only if1) ,2) , and3) < .The answer is .This solution runs in\r\n.\r\n",
    "hint": []
}