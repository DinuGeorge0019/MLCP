{
    "link": "https://codeforces.com//contest/554/problem/A",
    "problemId": "30332",
    "problem_idx": "A",
    "shortId": "554A",
    "contest_number": "554",
    "problem_submissions": {
        "E": [
            11746850,
            13764219,
            11830271,
            11766455,
            11747742,
            11764575,
            11774480,
            11758934
        ],
        "D": [
            11744247,
            11746031,
            11746127,
            11746736,
            11747437,
            11747976,
            11748267,
            11748288,
            11748030,
            11747975,
            11748807,
            11748413,
            11748580,
            11748828,
            11748890,
            11748381,
            11749085
        ],
        "C": [
            11742733,
            13059738,
            11743053,
            11742819,
            11744097,
            11744323,
            11744579,
            11743917,
            11744372,
            11744426,
            11744294,
            11742165,
            11745064,
            11744621,
            11745770,
            11745295,
            11745901,
            11746169,
            11746135
        ],
        "B": [
            11739897,
            11739637,
            11740204,
            11741151,
            11741795,
            11740995,
            11741073,
            11742270,
            11742529,
            11741366,
            11746029,
            11742271,
            11745027,
            11741791,
            11743493,
            11742926,
            11741663,
            11742603,
            11739370
        ],
        "A": [
            11739226,
            11738997,
            11739151,
            11739277,
            11740303,
            11739365,
            11739663,
            11740298,
            11740792,
            11739964,
            11739524,
            11740207,
            11741321,
            11739802,
            11762460,
            11740503,
            11740511,
            11739943,
            11741469,
            11738906
        ]
    },
    "name": "A. Kyoya and Photobooks",
    "statement": "Kyoya Ootori is selling photobooks of the Ouran High School Host Club.\r\nHe has 26 photos, labeled \"a\" to \"z\", and he has compiled them into a\r\nphoto booklet with some photos in some order (possibly with some photos\r\nbeing duplicated). A photo booklet can be described as a string of\r\nlowercase letters, consisting of the photos in the booklet in order. He\r\nnow wants to sell some \"special edition\" photobooks, each with one extra\r\nphoto inserted anywhere in the book. He wants to make as many distinct\r\nphotobooks as possible, so he can make more money. He asks Haruhi, how\r\nmany distinct photobooks can he make by inserting one extra photo into\r\nthe photobook he already has?Please help Haruhi solve this problem.\r\n",
    "solutions": [
        "#pragma comment (linker, \"/STACK:1000000000\")\n\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <map>\n#include <string>\n\nusing namespace std;\n\nset <string> a;\n\nint main() {\n\tstring s;\n\n\tcin >> s;\n\n\tstring t;\n\n\tfor (int i = 0; i <= (int)s.size(); i++) {\n\t\tfor (int j = 0; j < 26; j++) {\n\t\t\tt.clear();\n\t\t\tfor (int p = 0; p < i; p++) {\n\t\t\t\tt.push_back(s[p]);\n\t\t\t}\n\t\t\tt.push_back('a' + j);\n\t\t\tfor (int p = i; p < (int)s.size(); p++) {\n\t\t\t\tt.push_back(s[p]);\n\t\t\t} \n\t\t\ta.insert(t);\n\t\t}\n\t}\n\n\tcout << a.size() << endl;\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "strings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Kyoya and Photobooks.json",
    "editorial_link": "https://codeforces.com//blog/entry/18842",
    "editorial": "Solving this problem just requires us to simulate adding every character\r\nat every position at the string, and removing any duplicates. For\r\ninstance, we can use a HashSet of Strings in Java to do this (a set in\r\nC++ or Python works as well). Bonus: Prove that the number of ways is\r\nalways (length of string + 1) * 25 + 1. Example code:\r\nhttp://codeforces.com/contest/554/submission/11767578\r\n"
}