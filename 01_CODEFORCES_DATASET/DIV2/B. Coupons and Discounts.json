{"link": "https://codeforces.com//contest/731/problem/B", "problemId": "75973", "problem_idx": "B", "shortId": "731B", "contest_number": "731", "problem_submissions": {"D": [21507606, 21485910, 21487254, 21484498, 21488003, 21486730, 21490784, 21494206, 21481068, 21511124, 21485685, 21489121, 21487100, 21568091, 21513297, 21513265, 21483698], "E": [21487370, 21488491, 21489109, 21490173, 21490282, 21488124, 21478759, 21486709, 21482192, 21497395, 21489450, 21493635, 21484776, 21490615, 21489533, 21487823, 21492190, 21499034, 21490743], "F": [21481835, 21483503, 21486528, 21484079, 21487817, 21483187, 21479838, 21481840, 21482733, 21486882, 21483028, 21483988, 21482409, 21480968, 21488944, 21485189, 21488476, 21484669, 21488070, 21486545], "C": [21479362, 21481971, 21480987, 21481503, 21479989, 21477543, 21482718, 21479909, 21477810, 21485166, 21479533, 21479880, 21478958, 21488181, 21481556, 21481473, 21477970, 21479493, 21480708, 21481119], "B": [21476870, 21479930, 21477574, 21478962, 21478647, 21492414, 21481417, 21477633, 21476489, 21481747, 21477815, 21481505, 21485057, 21489403, 67074526, 21478744, 21480726, 21477230, 21478732, 21478885], "A": [21476108, 21478310, 21476242, 21476318, 21476790, 21479331, 21480393, 21476522, 21475966, 21478021, 21476661, 21476151, 21475986, 21490293, 21476656, 21477731, 21478515, 21476049, 21476561, 21476353]}, "name": "B. Coupons and Discounts", "statement": "The programming competition season has already started and it\u2019s time to\r\ntrain for ICPC. Sereja coaches his teams for a number of year and he\r\nknows that to get ready for the training session it\u2019s not enough to\r\nprepare only problems and editorial. As the training sessions lasts for\r\nseveral hours, teams become hungry. Thus, Sereja orders a number of\r\npizzas so they can eat right after the end of the competition.Teams plan\r\nto train for times during consecutive days. During the training session\r\nSereja orders exactly one pizza for each team that is present this day.\r\nHe already knows that there will be teams on the -th day.There are two\r\ntypes of discounts in Sereja\u2019s favourite pizzeria. The first discount\r\nworks if one buys two pizzas at one day, while the second is a coupon\r\nthat allows to buy one pizza during two days (two pizzas in total).As\r\nSereja orders really a lot of pizza at this place, he is the golden\r\nclient and can use the unlimited number of discounts and coupons of any\r\ntype at any days.Sereja wants to order exactly pizzas on the -th day\r\nwhile using only discounts and coupons. Note, that he will never buy\r\nmore pizzas than he need for this particular day. Help him determine,\r\nwhether he can buy the proper amount of pizzas each day if he is allowed\r\nto use only coupons and discounts. Note, that it\u2019s also prohibited to\r\nhave any active coupons after the end of the day .\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\nconst double pi=acos(-1.0);\nconst double eps=1e-9;\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define re return\n#define vi vector <int> \n#define pii pair <int,int>\n#define pll pair <long long , long long>\ntypedef long long ll;\n\nconst int N=(int)2e5+5;\nint a[N],n;\n\nint main()\n{\n\tios:: sync_with_stdio(false);\n\tcin >> n;\n\tfor(int i=0;i<n;i++)\n\t\tcin >> a[i];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(a[i]<0)\n\t\t{\n\t\t\tcout << \"NO\";\n\t\t\treturn 0;\n\t\t}\n\t\tif(a[i]%2==1)\n\t\t{\n\t\t\tif(i==n-1)\n\t\t\t{\n\t\t\t\tcout << \"NO\";\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\ta[i+1]--;\n\t\t}\n\t}\n\tcout << \"YES\";\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1100", "interactive": false}