{"link": "https://codeforces.com//contest/967/problem/C", "problemId": "179483", "problem_idx": "C", "shortId": "967C", "contest_number": "967", "problem_submissions": {"F": [37724740, 37785350], "D": [37715859, 37718485, 37714997, 37714910, 37721057, 37715196, 37718252, 37721060, 37725740, 37722409, 37721493, 37718542, 37720902, 37723570, 37717977, 37722095, 37718943, 37720444, 37720943, 37717804], "C": [37713201, 37714275, 37715739, 37715714, 37735586, 37715171, 37716355, 37717661, 37717233, 37716160, 37725218, 37716853, 37715198, 37728018, 37717261, 37727878, 37722084, 37716869, 37714314], "B": [37710580, 37710295, 37709555, 37710161, 37717401, 37713108, 37711288, 37712382, 37711143, 37713098, 37711452, 37711212, 37711591, 37710867, 37709639, 37712905, 37712898, 37710688, 37712013, 37710071], "A": [37709201, 37709088, 37708901, 37710764, 37709412, 37710987, 37735764, 37709724, 37709576, 37710227, 37709634, 37709699, 37709830, 37709320, 37917335, 37710605, 37727121, 37709146, 37708986], "E": [37722960, 37719908, 37746295, 37728001, 37723621, 37714048, 37723133, 37726145, 37721957, 37725590, 37727533, 37724467, 37727640, 37727967, 37722685, 37746402, 37724717, 37727899, 37780807]}, "name": "C. Stairs and Elevators", "statement": "In the year of 30XX participants of some world programming championship\r\nlive in a single large hotel. The hotel has n floors. Each floor has m\r\nsections with a single corridor connecting all of them. The sections are\r\nenumerated from 1 to m along the corridor, and all sections with equal\r\nnumbers on different floors are located exactly one above the other.\r\nThus, the hotel can be represented as a rectangle of height n and width\r\nm. We can denote sections with pairs of integers (i, j), where i is the\r\nfloor, and j is the section number on the floor.The guests can walk\r\nalong the corridor on each floor, use stairs and elevators. Each stairs\r\nor elevator occupies all sections (1, x), (2, x),\r\nldots, (n, x) for some x between 1 and m. All sections not occupied with\r\nstairs or elevators contain guest rooms. It takes one time unit to move\r\nbetween neighboring sections on the same floor or to move one floor up\r\nor down using stairs. It takes one time unit to move up to v floors in\r\nany direction using an elevator. You can assume you don\u2019t have to wait\r\nfor an elevator, and the time needed to enter or exit an elevator is\r\nnegligible.You are to process q queries. Each query is a question \"what\r\nis the minimum time needed to go from a room in section (x_1, y_1) to a\r\nroom in section (x_2, y_2)?\"\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,v,q,a[120000],b[120000];\n\nint main(){\n\tscanf(\"%*d%*d%d%d%d\",&n,&m,&v);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\tfor(int i=1;i<=m;i++)scanf(\"%d\",b+i);\n\tscanf(\"%d\",&q);\n\twhile(q--){\n\t\tint x_1,x_2,y_1,y_2;\n\t\tscanf(\"%d%d%d%d\",&y_1,&x_1,&y_2,&x_2);\n\t\tif(y_1==y_2)printf(\"%d\\n\",abs(x_1-x_2));\n\t\telse{\n\t\t\tint ans=INT_MAX;\n\t\t\tint u=lower_bound(a+1,a+n+1,x_1)-a;\n\t\t\tif(u<=n)ans=min(ans,abs(a[u]-x_1)+abs(a[u]-x_2)+abs(y_1-y_2));\n\t\t\tif(u>1)ans=min(ans,abs(a[u-1]-x_1)+abs(a[u-1]-x_2)+abs(y_1-y_2));\n\t\t\tu=lower_bound(b+1,b+m+1,x_1)-b;\n\t\t\tif(u<=m)ans=min(ans,abs(b[u]-x_1)+abs(b[u]-x_2)+(abs(y_1-y_2)+v-1)/v);\n\t\t\tif(u>1)ans=min(ans,abs(b[u-1]-x_1)+abs(b[u-1]-x_2)+(abs(y_1-y_2)+v-1)/v);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["binary search"], "dificulty": "1600", "interactive": false}