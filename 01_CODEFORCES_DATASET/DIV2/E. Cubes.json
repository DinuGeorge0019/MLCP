{"link": "https://codeforces.com//contest/180/problem/E", "problemId": "1264", "problem_idx": "E", "shortId": "180E", "contest_number": "180", "problem_submissions": {"A": [1612011, 1611035, 1611491, 1610423, 1608646, 1612209, 1610289, 1609636, 1609133, 1612193, 1612229, 1611072, 1612163, 1611991, 1610400, 1612436, 1617622], "E": [1610692, 1609351, 1609009, 1613114, 1609269, 1610641, 1610622, 1610904, 1610311, 1609559, 1609099, 1609957, 1610472, 1610971, 1609912, 1608828], "D": [1610104, 1610284, 1610538, 1611279, 1611479, 1611395, 1611538, 1611063, 1611009, 1611925, 1611800, 1650220], "B": [1609708, 1612372, 1611456, 1610499], "F": [1608611, 1608642, 1608360, 1608443, 1609619, 1608802, 1608911, 1609865, 1608836, 1608333, 1608944, 1608579, 1608822, 1608381], "C": [1608408, 1608345, 1608245, 1608291, 1608998, 1608357, 1608524, 1609626, 1608493, 1608501, 1608480, 1609176, 1608550, 1608260]}, "name": "E. Cubes", "statement": "Let\u2019s imagine that you\u2019re playing the following simple computer game.\r\nThe screen displays lined-up cubes. Each cube is painted one of colors.\r\nYou are allowed to delete not more than cubes (that do not necessarily\r\ngo one after another). After that, the remaining cubes join together (so\r\nthat the gaps are closed) and the system counts the score. The number of\r\npoints you score equals to the length of the maximum sequence of cubes\r\nof the same color that follow consecutively. Write a program that\r\ndetermines the maximum possible number of points you can score.Remember,\r\nyou may delete no more than any cubes. It is allowed not to delete cubes\r\nat all.\r\n", "solutions": ["#include <cassert>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint ntest = 0, test = 0;\ninline void init();\ninline void run();\ninline void stop() {\n\tntest = test - 1;\n}\n\nint main() {\n#ifdef LOCAL\n\tfreopen(\"input\", \"r\", stdin);\n//\tfreopen(\"output\", \"w\", stdout);\n#endif\n\tinit();\n\twhile (++test <= ntest) {\n\t\trun();\n\t}\n\treturn 0;\n}\n\n#define FOR(i, a, b) for (int i = (a); i <= (b); i++)\n#define FORD(i, a, b) for (int i = (a); i >= (b); i--)\n#define REP(i, a) for (int i = 0; i < (a); i++)\n#define FIT(it, v) for (typeof((v).begin())it = (v).begin(); it != (v).end(); it++)\n\n#define SZ(v) ((int)(v).size())\n#define ALL(v) (v).begin(), (v).end()\n#define SET(a, x) memset((a), (x), sizeof(a))\n#define SORT(v) sort(ALL(v))\n#define GSORT(v) sort(ALL(v), greater<typeof(*(v).begin())>())\n#define UNIQUE(v) SORT(v); (v).resize(unique(ALL(v)) - (v).begin())\n\n#define PB push_back\n#define MP make_pair\n#define F first\n#define S second\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\nconst int INF = (int) 1E9 + 5;\nconst double EPS = 1E-11;\nconst ll MOD = (ll) 1E9 + 7;\n\nconst int dx[] = { -1, 0, 0, 1 };\nconst int dy[] = { 0, -1, 1, 0 };\n\ninline void init() {\n\tntest = 1;\n}\n\nint n, m, k;\nbool startAt[200005];\nint lastAt[200005], next[200005];\n\ninline int doCnt(int s, int f, int cnt) {\n\treturn (f - s + 1) - cnt;\n}\n\ninline void run() {\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\n\tSET(startAt, false);\n\tSET(lastAt, -1);\n\tSET(next, -1);\n\n\tint x;\n\tREP(i, n) {\n\t\tscanf(\"%d\", &x);\n\n\t\tif (lastAt[x] == -1) {\n\t\t\tstartAt[i] = true;\n\t\t} else {\n\t\t\tnext[lastAt[x]] = i;\n\t\t}\n\t\tlastAt[x] = i;\n\t}\n\n\tint MAX = -INF;\n\n\tREP(startPos, n) {\n\t\tif (!startAt[startPos]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tint s = startPos;\n\t\tint f = s;\n\t\tint cnt = 1;\n\n\t\twhile (next[f] != -1 && doCnt(s, next[f], cnt + 1) <= k) {\n\t\t\tf = next[f];\n\t\t\tcnt++;\n\t\t}\n\n\t\tMAX = max(MAX, cnt);\n\n\t\twhile (next[f] != -1) {\n\t\t\ts = next[s];\n\t\t\tcnt--;\n\t\t\twhile (next[f] != -1 && doCnt(s, next[f], cnt + 1) <= k) {\n\t\t\t\tf = next[f];\n\t\t\t\tcnt++;\n\t\t\t}\n\n\t\t\tMAX = max(MAX, cnt);\n\t\t}\n\t}\n\n\tprintf(\"%d\\n\", MAX);\n}\n"], "input": "", "output": "", "tags": ["binary search", "dp", "two pointers"], "dificulty": "1800", "interactive": false}