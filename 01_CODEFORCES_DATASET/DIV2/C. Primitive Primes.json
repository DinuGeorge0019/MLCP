{
    "link": "https://codeforces.com//contest/1316/problem/C",
    "problemId": "552822",
    "problem_idx": "C",
    "shortId": "1316C",
    "contest_number": "1316",
    "problem_submissions": {
        "F": [
            72472310,
            72461023,
            73149710,
            76233934,
            76759743,
            72468426
        ],
        "D": [
            72446577,
            72435880,
            72446350,
            72433935,
            72552354,
            72445851,
            72441671,
            72440731,
            72441946,
            72448620,
            72449884,
            72443275,
            72430235,
            72442450,
            72455002,
            72438222,
            72450604,
            72450271,
            72453451,
            72444636,
            72446410
        ],
        "E": [
            72439852,
            72445012,
            72437670,
            72448064,
            72552368,
            72441953,
            72444842,
            72445763,
            72447311,
            72441940,
            72445222,
            72448678,
            72435875,
            72451508,
            72441755,
            72436908,
            72445710,
            72444493,
            72446787,
            72453158,
            72452797
        ],
        "C": [
            72433832,
            72430966,
            72433288,
            72428640,
            72552344,
            72432747,
            72431625,
            72434362,
            72434375,
            72433220,
            72429941,
            72438552,
            72442079,
            72433103,
            72430036,
            72452619,
            72434221,
            72436747,
            72434315,
            72436157,
            72435969
        ],
        "B": [
            72429931,
            72429194,
            72429286,
            72432383,
            72552325,
            72429081,
            72434265,
            72430795,
            72431025,
            72431357,
            72428379,
            72429255,
            72460222,
            72429093,
            72433129,
            72438863,
            72431653,
            72431631,
            72430316,
            72431406,
            72429986
        ],
        "A": [
            72421838,
            72421944,
            72423224,
            72422468,
            72552315,
            72422813,
            72422138,
            72421848,
            72423996,
            72421816,
            72422254,
            72422463,
            72428261,
            72422024,
            72422458,
            72422846,
            72422294,
            72426353,
            72423021,
            72422856,
            72423629
        ]
    },
    "name": "C. Primitive Primes",
    "statement": "It is Professor R’s last class of his teaching career. Every time\r\nProfessor R taught a class, he gave a special problem for the students\r\nto solve. You being his favourite student, put your heart into solving\r\nit one last time.You are given two polynomials f(x) = a_0 + a_1x +\r\ndots + a_{n-1}x^{n-1} and g(x) = b_0 + b_1x +\r\ndots + b_{m-1}x^{m-1}, with positive integral coefficients. It is\r\nguaranteed that the cumulative GCD of the coefficients is equal to 1 for\r\nboth the given polynomials. In other words, gcd(a_0, a_1,\r\ndots, a_{n-1}) = gcd(b_0, b_1,\r\ndots, b_{m-1}) = 1. Let h(x) = f(x)\r\ncdot g(x). Suppose that h(x) = c_0 + c_1x +\r\ndots + c_{n+m-2}x^{n+m-2}. You are also given a prime number p.\r\nProfessor R challenges you to find any t such that c_t isn’t divisible\r\nby p. He guarantees you that under these conditions such t always\r\nexists. If there are several such t, output any of them.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, m, p;\nint a[2000001], b[20000001];\nint idx, idy;\nint main( ) {\n\tscanf(\"%d %d %d\", &n, &m, &p);\n\tfor (int i = 0; i < n; i ++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tif (a[i] % p) idx = i;\n\t}\n\tfor (int i = 0; i < m; i ++) {\n\t\tscanf(\"%d\", &b[i]);\n\t\tif (b[i] % p) idy = i;\n\t}\n\tprintf(\"%d\\n\", idx + idy);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math",
        "ternary search"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Primitive Primes.json",
    "editorial_link": "https://codeforces.com//blog/entry/74493",
    "editorial": "We will prove a simple result thereby giving one of the power that\r\nsatisfies the constraint:We know that cumulative gcd of coefficients is\r\none in both cases. Hence no prime divides all the coefficients of the\r\npolynomial. We call such polynomials primitive polynomials. This\r\nquestion in a way tells us that the product of two primitive polynomials\r\nis also a primitive polynomial.Let be the lowest power of in whose\r\ncoefficient is coprime to given prime , and be the lowest power of in\r\nwhose coefficient is coprime to given prime . Since both such\r\ncoefficients exist, the answer is proved to exist.When we multiply and ,\r\nwe get the following as the coefficient for , We see the terms inside\r\nparentheses are all divisible by the prime , and only is not divisible\r\nby . So, we can say that the coefficient of is not divisible by .Time\r\ncomplexity :\r\n",
    "hint": []
}