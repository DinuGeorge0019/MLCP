{
    "link": "https://codeforces.com//contest/864/problem/A",
    "problemId": "124133",
    "problem_idx": "A",
    "shortId": "864A",
    "contest_number": "864",
    "problem_submissions": {
        "F": [
            30716015,
            30722402,
            30723225,
            30725964,
            30739740
        ],
        "E": [
            30710484,
            30714856,
            30715154,
            30723143,
            30713586,
            30730131,
            30715426,
            30713107,
            30711368,
            30718758,
            30718806,
            30718477,
            30714033,
            30714286,
            30715582,
            30713724,
            30713502,
            30738356,
            30717401,
            30713777,
            30716171,
            30715998
        ],
        "D": [
            30707520,
            30709478,
            30708092,
            30709303,
            30709255,
            30703697,
            30709397,
            30707026,
            30712505,
            30709061,
            30711433,
            30710302,
            30710827,
            30707816,
            30706829,
            30708611,
            30705451,
            30707869,
            30706715,
            30708055
        ],
        "C": [
            30705528,
            30707197,
            30704462,
            30712744,
            30706231,
            30710658,
            30706244,
            30713235,
            30708256,
            30705517,
            30708760,
            30706819,
            30708546,
            30705215,
            30711574,
            30711162,
            30709362,
            30710824,
            30709705,
            30706376
        ],
        "B": [
            30703070,
            30703231,
            30706404,
            30704293,
            30702498,
            30701721,
            30702746,
            30704552,
            30702131,
            30702339,
            30704226,
            30703770,
            30702687,
            30701947,
            30704004,
            30702177,
            30703567,
            30708307,
            30703521,
            30704217
        ],
        "A": [
            30701411,
            30701464,
            30701236,
            30703640,
            30701582,
            30701091,
            30701629,
            30704524,
            30701158,
            30701293,
            30701284,
            30701912,
            30701498,
            30701066,
            30701818,
            30701174,
            30701687,
            30701585,
            30701750,
            30701329
        ]
    },
    "name": "A. Fair Game",
    "statement": "Petya and Vasya decided to play a game. They have cards ( is an even\r\nnumber). A single integer is written on each card.Before the game Petya\r\nwill choose an integer and after that Vasya will choose another integer\r\n( from the number that Petya chose). During the game each player takes\r\nall the cards with number he chose. For example, if Petya chose number\r\nbefore the game he will take all cards on which is written and if Vasya\r\nchose number before the game he will take all cards on which is\r\nwritten.The game is considered fair if Petya and Vasya can take all\r\ncards, and the number of cards each player gets is the same.Determine\r\nwhether Petya and Vasya can choose integer numbers before the game so\r\nthat the game is fair.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<ctime>\n#include<utility>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\nint a[110];\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n&1)\n\t{\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tint i;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tsort(a+1,a+n+1);\n\tint m=n/2;\n\tfor(i=1;i<m;i++)\n\t\tif(a[i]!=a[i+1])\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tfor(i=m+1;i<n;i++)\n\t\tif(a[i]!=a[i+1])\n\t\t{\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn 0;\n\t\t}\n\tif(a[m]==a[m+1])\n\t{\n\t\tprintf(\"No\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"YES\\n\");\n\tprintf(\"%d %d\\n\",a[1],a[m+1]);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Fair Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/54765",
    "editorial": "This problem has many different solutions. Letâs consider one of them.At\r\nfirst sort all numbers in non-descending order. Then the first numbers\r\nmust be equal to each other, the following numbers must be equal to each\r\nother, and the number from the first half must be different from the\r\nnumber from the second half. So, if all conditions: are met after\r\nsorting, the answer is . Vasya must choose before the game number and\r\nPetya (or vice versa). If at least one from the described conditions is\r\nfailed, the answer is .\r\n",
    "hint": []
}