{
    "link": "https://codeforces.com//contest/2110/problem/C",
    "problemId": "3402552",
    "problem_idx": "C",
    "shortId": "2110C",
    "contest_number": "2110",
    "problem_submissions": {
        "F": [
            321110781,
            321123390,
            321106745,
            321118551,
            321166762,
            321127347,
            321131871,
            321131150,
            321234951,
            321139338,
            321137483,
            321137509,
            321132400,
            321147266,
            321142991,
            321140692,
            321135198,
            321138923,
            321109632
        ],
        "E": [
            321090795,
            321099993,
            321121829,
            321106571,
            321097123,
            321114727,
            321150192,
            321149551,
            321115626,
            321107798,
            321113548,
            321113381,
            321101851,
            322032404,
            322032368,
            322030701,
            322030587,
            322030501,
            321694257,
            321694217,
            321211859,
            321122398,
            321110387,
            321130397,
            321132692,
            321115982,
            321092986
        ],
        "D": [
            321077211,
            321082627,
            321102210,
            321098776,
            321083582,
            321095490,
            321089006,
            321076593,
            321095324,
            321089964,
            321118720,
            321820812,
            321147382,
            321107801,
            321120467,
            321120327,
            321111437,
            321121243,
            321082273
        ],
        "C": [
            321063959,
            321071650,
            321077012,
            321075164,
            321074791,
            321072972,
            321072110,
            321091606,
            321078282,
            321078383,
            321092747,
            321075406,
            321096734,
            321100841,
            321086791,
            321137116,
            321068675
        ],
        "B": [
            321056024,
            321058204,
            321059758,
            321061309,
            321060112,
            321061450,
            321061306,
            321067648,
            321061121,
            321062458,
            321066403,
            321059168,
            321060412,
            321061877,
            321059766,
            321139109,
            321058973
        ],
        "A": [
            321053134,
            321055856,
            321056086,
            321056607,
            321053392,
            321055181,
            321056518,
            321054040,
            321053613,
            321057499,
            321058294,
            321054230,
            321053600,
            321056212,
            321054083,
            321139381,
            321053997
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/143186",
    "editorial": "Letâ€™s maintain the bounds the segment of heights in which can currently\r\nbe. Initially, .Now, we will iterate from to . We could have risen by ,\r\nso increases by . We also cannot rise above or drop below , so if , then\r\n, and if , then . If at any point , then such an array does not exist.\r\nOtherwise, it can be restored in reverse.The final asymptotic complexity\r\nis .\r\n",
    "name": "C. Racing",
    "statement": "In 2077, a sport called hobby-droning is gaining popularity among\r\nrobots.You already have a drone, and you want to win. For this, your\r\ndrone needs to fly through a course with n obstacles.The i-th obstacle\r\nis defined by two numbers l_i, r_i. Let the height of your drone at the\r\ni-th obstacle be h_i. Then the drone passes through this obstacle if l_i\r\nle h_i\r\nle r_i. Initially, the drone is on the ground, meaning h_0 = 0.The\r\nflight program for the drone is represented by an array d_1, d_2,\r\nldots, d_n, where h_{i} - h_{i-1} = d_i, and 0\r\nleq d_i\r\nleq 1. This means that your drone either does not change height between\r\nobstacles or rises by 1. You already have a flight program, but some d_i\r\nin it are unknown and marked as -1. Replace the unknown d_i with numbers\r\n0 and 1 to create a flight program that passes through the entire\r\nobstacle course, or report that it is impossible.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Racing.json",
    "hint": []
}