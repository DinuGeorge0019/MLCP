{
    "link": "https://codeforces.com//contest/752/problem/A",
    "problemId": "86736",
    "problem_idx": "A",
    "shortId": "752A",
    "contest_number": "752",
    "problem_submissions": {
        "E": [
            23307622,
            23298919,
            23293210,
            23296558,
            23289533,
            23300446,
            23289683,
            23303428,
            23297443,
            23304427,
            23304013,
            23301941,
            23302122,
            23296625,
            23299319,
            23308344,
            23296295,
            23301867,
            23298965
        ],
        "F": [
            23299614,
            23303097,
            23296260,
            23300075,
            23297820,
            23312296,
            23333337,
            23302007,
            23335434,
            23945130
        ],
        "D": [
            23293425,
            23296203,
            23296737,
            23303994,
            23297487,
            23296079,
            23297542,
            23304572,
            23298416,
            23301016,
            23298334,
            23301490,
            23342391,
            23303337,
            23298346,
            23305352,
            23295756,
            23302406
        ],
        "B": [
            23289571,
            23288739,
            23297269,
            23301250,
            23289332,
            23290328,
            23290841,
            23289310,
            23291467,
            23292074,
            23312032,
            23305914,
            23302012,
            23289784,
            23305350
        ],
        "C": [
            23288680,
            23289735,
            23290504,
            23291795,
            23293248,
            23292966,
            23293101,
            23290858,
            23293431,
            23292145,
            23290141,
            23293830,
            23292041,
            23293667,
            23293134,
            23292174,
            23291253,
            23291455,
            23296543,
            23939849,
            23294485
        ],
        "A": [
            23288066,
            23288054,
            23288222,
            23289194,
            23290949,
            23288138,
            23294677,
            23288200,
            23288517,
            23288677,
            23288100,
            23288709,
            23288239,
            23288139,
            23288488,
            23288364,
            23288063,
            23288232,
            23288317,
            23288593
        ]
    },
    "name": "A. Santa Claus and a Place in a Class",
    "statement": "Santa Claus is the first who came to the Christmas Olympiad, and he is\r\ngoing to be the first to take his place at a desk! In the classroom\r\nthere are lanes of desks each, and there are two working places at each\r\nof the desks. The lanes are numbered from to from the left to the right,\r\nthe desks in a lane are numbered from to starting from the blackboard.\r\nNote that the lanes go perpendicularly to the blackboard, not along it\r\n(see picture).The organizers numbered all the working places from to .\r\nThe places are numbered by lanes (i. e. all the places of the first lane\r\ngo first, then all the places of the second lane, and so on), in a lane\r\nthe places are numbered starting from the nearest to the blackboard (i.\r\ne. from the first desk in the lane), at each desk, the place on the left\r\nis numbered before the place on the right. Santa Clause knows that his\r\nplace has number . Help him to determine at which lane at which desk he\r\nshould sit, and whether his place is on the left or on the right!\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define fo(i,a,b) for(int i=(a);i<(b);i++)\n#define MOD 1000000007\n#define MP make_pair\n#define PB push_back\ntypedef long long ll;\n\nint N, M, K;\n\nint main () {\n\tscanf(\"%d %d %d\", &N, &M, &K);\n\tint R = (K-1) / (2*M) + 1;\n\tint C = (((K-1) % (2*M))/2) + 1;\n\tprintf(\"%d %d %c\\n\", R, C, (K&1) ? 'L' : 'R');\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Santa Claus and a Place in a Class.json",
    "editorial_link": "https://codeforces.com//blog/entry/49328",
    "editorial": "It can be easily seen that the side on which Santa should sit depends only on the parity of k, while the number of desk and the number of lane depend only on a value . We can see that in such numeration the number of lane equals , while the number of desk equals ."
}