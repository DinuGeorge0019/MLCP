{"link": "https://codeforces.com//contest/2102/problem/F", "problemId": "3379884", "problem_idx": "F", "shortId": "2102F", "contest_number": "2102", "problem_submissions": {"F": [319286602, 319289386, 319448729], "D": [319242440, 319239148, 319249290, 319249952, 319245490, 319255095, 319248048, 319256182, 319263500, 319273386, 319263411, 319271144, 319273350, 319262239, 319263821, 319278652, 319260289, 319268007, 319268385], "C": [319230451, 319228419, 319230937, 319235602, 319234478, 319240126, 319231996, 319231075, 319238712, 319241029, 319246278, 319244708, 319240604, 319237747, 319235788, 319225890, 319227523, 319249855, 319241267], "B": [319222969, 319221630, 319222016, 319220113, 319224317, 319223605, 319219094, 319220695, 319225176, 319216814, 319224576, 319226183, 319226409, 319226003, 319229218, 319217580, 319217355, 319241924, 319230817], "A": [319221576, 319216356, 319216503, 319216061, 319218195, 319215418, 319215493, 319217119, 319227024, 319217420, 319215189, 319219232, 319240055, 319215536, 319215440, 319215191, 319222683, 319219607], "E": [319275764, 319278845, 319263831, 319282197, 319278866, 319280500, 319280125, 319284264, 319289922, 319285799, 319289028, 319290886, 319289136, 319288355, 319290086, 319295166, 319289250, 319290453]}, "editorial_link": "https://codeforces.com//blog/entry/142788", "editorial": "", "name": "F. Mani and Segments", "statement": "An array b of length |b| is if the sum of the length of its Longest\r\nIncreasing Subsequence (LIS) and the length of its Longest Decreasing\r\nSubsequence (LDS)^{\r\ntext{ }} is one more than the length of the array. More formally, the\r\narray b is cute if\r\noperatorname{LIS}(b) +\r\noperatorname{LDS}(b) = |b| + 1.You are given a permutation a of length\r\nn^{\r\ntext{ }}. Your task is to count the number of non-empty subarrays^{\r\ntext{ }} of permutation a that are cute.^{\r\ntext{ }}A sequence x is a subsequence of a sequence y if x can be\r\nobtained from y by the deletion of several (possibly, zero or all)\r\nelement from arbitrary positions. The longest increasing (decreasing)\r\nsubsequence of an array is the longest subsequence such that its\r\nelements are ordered in strictly increasing (decreasing) order.^{\r\ntext{ }}A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray). ^{\r\ntext{ }}An array x is a subarray of an array y if x can be obtained from\r\ny by the deletion of several (possibly, zero or all) elements from the\r\nbeginning and several (possibly, zero or all) elements from the end.\r\n", "solutions": [], "input": "", "output": "", "tags": ["data structures", "greedy"], "dificulty": "2500", "interactive": false, "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. Mani and Segments.json"}