{
    "link": "https://codeforces.com//contest/149/problem/C",
    "problemId": "895",
    "problem_idx": "C",
    "shortId": "149C",
    "contest_number": "149",
    "problem_submissions": {
        "E": [
            1166748,
            1167898,
            1167706,
            1167062,
            1168119,
            1166122,
            1166620,
            1180098,
            1166477,
            1174675,
            1168703
        ],
        "D": [
            1164419,
            1165531,
            1165306,
            1167884,
            1166269,
            1165035,
            1166389,
            1166109,
            1170884,
            1168057,
            1168286,
            1168301,
            1166381,
            1167820,
            1166746,
            1167254
        ],
        "C": [
            1163610,
            1164091,
            1166729,
            1163074,
            1164324,
            1166838,
            1164648,
            1163955,
            1163257,
            1164156,
            1165163,
            1165364,
            1163684,
            1164576,
            1163848,
            1164438,
            1163813
        ],
        "A": [
            1161525,
            1161700,
            1161485,
            1162080,
            1161445,
            1161719,
            1162271,
            1161578,
            1161605,
            1161624,
            1162068,
            1161422,
            1170499,
            1161442,
            1161589,
            1162328
        ],
        "B": [
            1163315,
            1165673,
            1163493,
            1165775,
            1163479,
            1163666,
            1163250,
            1164374,
            1163398,
            1163280,
            1164630,
            1168461,
            1163446,
            1163638
        ]
    },
    "name": "C. Division into Teams",
    "statement": "Petya loves football very much, especially when his parents aren\u2019t home.\r\nEach morning he comes to the yard, gathers his friends and they play all\r\nday. From time to time they have a break to have some food or do some\r\nchores (for example, water the flowers).The key in football is to divide\r\ninto teams fairly before the game begins. There are boys playing\r\nfootball in the yard (including Petya), each boy\u2019s football playing\r\nskill is expressed with a non-negative characteristic (the larger it is,\r\nthe better the boy plays). Let\u2019s denote the number of players in the\r\nfirst team as , the number of players in the second team as , the\r\nindividual numbers of boys who play for the first team as and the\r\nindividual numbers of boys who play for the second team as . Division\r\nboys into two teams is considered fair if three conditions are\r\nfulfilled: Each boy plays for exactly one team (). The sizes of teams\r\ndiffer in no more than one (). The total football playing skills for two\r\nteams differ in no more than by the value of skill the best player in\r\nthe yard has. More formally: Your task is to help guys divide into two\r\nteams fairly. It is guaranteed that a fair division into two teams\r\nalways exists.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <cstdlib>\n#include <string>\n#include <queue>\n#include <map>\n#include <set>\n\n#define MAX 131072\n\nusing namespace std;\nFILE *in; FILE *out;\n\nint n;\nint a[MAX];\n\nint main(void)\n{\n\tin = stdin; out = stdout;\n//\tin = fopen(\"C.in\", \"rt\"); out = fopen(\"C.out\", \"wt\");\n\t\n\tfscanf(in, \"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t\tfscanf(in, \"%d\", &a[i]);\n\t\n\tvector < pair <int, int> > v;\n\tfor (int i = 0; i < n; i++)\n\t\tv.push_back(make_pair(a[i], i));\n\t\n\tsort(v.begin(), v.end());\n\tfprintf(out, \"%d\\n\", n / 2);\n\tint idx = (int)v.size() - 1;\n\tfor (int i = 0; i < n / 2; i++)\n\t{\n\t\tfprintf(out, \"%d \", v[idx].second + 1);\n\t\tidx -= 2;\n\t}\n\tfprintf(out, \"\\n\");\n\t\n\tif (v.size() % 2) fprintf(out, \"%d\\n\", n / 2 + 1);\n\telse fprintf(out, \"%d\\n\", n / 2);\n\tidx = (int)v.size() - 2;\n\twhile (idx >= 0)\n\t{\n\t\tfprintf(out, \"%d \", v[idx].second + 1);\n\t\tidx -= 2;\n\t}\n\tif (v.size() % 2) fprintf(out, \"%d\", v[0].second + 1);\n\tfprintf(out, \"\\n\");\n\t\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Division into Teams.json",
    "editorial_link": "https://codeforces.com//blog/entry/3864",
    "editorial": "Sort all the boys on playing skill. Then, if we send in the first team\r\nall the boys standing in a sorted array for odd places, and the second\r\neven standing on the ground, then all requirements for division\r\nexecuted. The first two requirements are obviously satisfied. To prove\r\nthe third we consider the geometric representation: Let each child\r\ndesignated point on the X axis with a value equal his playing skill.\r\nConnect the points with segments numbered 1 and 2, 3 and 4, and so on.\r\nIf is odd, then join the last point with the nearest the previous one.\r\nObviously, all these segments don\u00e2\u0080\u0099t intersect in pairs, except at the\r\npoints, and their total length is equal to the difference amounts to\r\nplay boys\u00e2\u0080\u0099 skills contained into the first team and second team. It is\r\nalso clear that all of these segments completely contained in the\r\ninterval , as well as the pairs are a length of zero crossing, the third\r\nrequirement is satisfied, which we proved.\r\n"
}