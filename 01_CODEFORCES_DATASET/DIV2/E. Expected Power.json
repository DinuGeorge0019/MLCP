{
    "link": "https://codeforces.com//contest/2020/problem/E",
    "problemId": "2912456",
    "problem_idx": "E",
    "shortId": "2020E",
    "contest_number": "2020",
    "problem_submissions": {
        "F": [
            283654781,
            283655384,
            283653019,
            284812010,
            284342422
        ],
        "E": [
            283601053,
            283622277,
            283581328,
            283585589,
            283577511,
            283592572,
            283593005,
            283598500,
            283604766,
            283607067,
            283586822,
            283606206,
            283606082,
            283604966,
            283606881,
            283605803,
            284236238,
            284236223,
            283607016,
            283606859,
            283610252,
            283604942
        ],
        "D": [
            283587438,
            283588481,
            283592593,
            283573905,
            283573809,
            283577852,
            283585317,
            283583897,
            283586760,
            283584637,
            283572139,
            283590684,
            283585043,
            283588345,
            283571960,
            283592544,
            283591323,
            283585990,
            283588589,
            283589632
        ],
        "C": [
            283581157,
            283572675,
            283596795,
            283564752,
            283564525,
            283566373,
            283563157,
            283567449,
            283568512,
            283569775,
            283602587,
            283572456,
            283574521,
            283572581,
            283587896,
            283569964,
            283580076,
            283578040,
            283575463,
            283575417
        ],
        "B": [
            283571512,
            283580920,
            283593819,
            283558272,
            283566033,
            283559192,
            283560269,
            283566846,
            283561344,
            283561669,
            283575968,
            283566810,
            283563128,
            283562164,
            283561716,
            283562347,
            283565083,
            283563622,
            283567830,
            283566097
        ],
        "A": [
            283557781,
            283582998,
            283556780,
            283558386,
            283561649,
            283556987,
            283567215,
            283556859,
            283557220,
            283558113,
            283559136,
            283557475,
            283556847,
            283558472,
            283559470,
            283556985,
            283557885,
            283556894,
            283558118
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/134516",
    "editorial": "By nishkarsh SolutionLet the binary representation of the be . Now is .\r\nNow if we compute the expected value of for every pair , then we are\r\ndone.We can achieve this by dynamic programming. For each pair , there\r\nare only 4 possible values of . For every possible value, we can\r\nmaintain the probability of reaching it, and we are done.The complexity\r\nof the solution is .\r\n",
    "name": "E. Expected Power",
    "statement": "You are given an array of n integers a_1,a_2,\r\nldots,a_n. You are also given an array p_1, p_2,\r\nldots, p_n.Let S denote the random (i. e., it may contain equal\r\nelements) constructed as follows: Initially, S is empty. For each i from\r\n1 to n, insert a_i into S with probability\r\nfrac{p_i}{10^4}. Note that each element is inserted independently.\r\nDenote f(S) as the bitwise XOR of all elements of S. Please calculate\r\nthe expected value of (f(S))^2. Output the answer modulo 10^9 +\r\n7.Formally, let M = 10^9 + 7. It can be shown that the answer can be\r\nexpressed as an irreducible fraction\r\nfrac{p}{q}, where p and q are integers and q\r\nnot\r\nequiv 0\r\npmod{M}. Output the integer equal to p\r\ncdot q^{-1}\r\nbmod M. In other words, output such an integer x that 0\r\nle x < M and x\r\ncdot q\r\nequiv p\r\npmod{M}.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;const int m = 10;const int p = 1000000007;long long f[2][2][20][20];long long g[2][2][20][20];long long a[200020];long long b[200020];int main(){\tint t;\tcin >> t;\tfor (int tt = 0; tt < t; tt++)\t{\t\tint n;\t\tcin >> n;\t\tmemset(f, 0, sizeof f);\t\tfor (int i = 0; i < m; i++)\t\t{\t\t\tfor (int j = 0; j < m; j++)\t\t\t{\t\t\t\tf[0][0][i][j] = 1;\t\t\t}\t\t}\t\tfor (int i = 0; i < n; i++)\t\t{\t\t\tcin >> a[i];\t\t}\t\tfor (int i = 0; i < n; i++)\t\t{\t\t\tcin >> b[i];\t\t\tb[i] = b[i] * 285700002 % p;\t\t}\t\tfor (int i = 0; i < n; i++)\t\t{\t\t\tmemset(g, 0, sizeof g);\t\t\tfor (int j = 0; j < m; j++)\t\t\t{\t\t\t\tfor (int k = 0; k < m; k++)\t\t\t\t{\t\t\t\t\tfor (int da = 0; da < 2; da++)\t\t\t\t\t{\t\t\t\t\t\tfor (int db = 0; db < 2; db++)\t\t\t\t\t\t{\t\t\t\t\t\t\t// cout << \"DEBUG \" << da << \" \" << db << \" \" << j << \" \" << k << \" \" << f[da][db][j][k] << endl;\t\t\t\t\t\t\tg[da][db][j][k] = (g[da][db][j][k] + f[da][db][j][k] * (p + 1 - b[i])) % p;\t\t\t\t\t\t\tg[da ^ (a[i] >> j & 1)][db ^ (a[i] >> k & 1)][j][k] = (g[da ^ (a[i] >> j & 1)][db ^ (a[i] >> k & 1)][j][k] + f[da][db][j][k] * b[i]) % p;\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t\tmemcpy(f, g, sizeof f);\t\t}\t\tlong long z = 0;\t\tfor (int i = 0; i < m; i++)\t\t{\t\t\tfor (int j = 0; j < m; j++)\t\t\t{\t\t\t\t// cerr << \"Bi \" << i << \" \" << j << \" \" << f[1][1][i][j]  << endl;\t\t\t\tz = (z + (f[1][1][i][j] << i << j)) % p;\t\t\t}\t\t}\t\tif (z < 0)\t\t{\t\t\tz += p;\t\t}\t\tcout << z << endl;\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "dp",
        "math",
        "probabilities"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Expected Power.json"
}