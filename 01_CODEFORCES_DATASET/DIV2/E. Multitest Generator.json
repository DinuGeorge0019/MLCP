{"link": "https://codeforces.com//contest/1798/problem/E", "problemId": "1849271", "problem_idx": "E", "shortId": "1798E", "contest_number": "1798", "problem_submissions": {"F": [199301449, 199635259, 199378902, 199319392, 199574998, 200590796, 199735470, 201129046, 199317594], "E": [199292979, 199351345, 199287102, 199284185, 199288971, 199287988, 199287959, 199291669, 199576167, 199283535, 199289650, 199290902, 199290821, 199293377, 199290100, 199289126, 199294280, 199294488, 199296355, 199291720, 199292702, 199291551], "C": [199282234, 199260342, 199262167, 199263273, 199268067, 199264515, 199261766, 199308981, 199268218, 199266685, 199267420, 199260005, 199259528, 199264427, 199273339, 199266427, 199263028, 199263300, 199265190, 199268521, 199269803], "D": [199278441, 199265876, 199269760, 199267498, 199271957, 199278028, 199268206, 199270707, 199275816, 199273016, 199267038, 199269245, 199274308, 199265125, 199274313, 199269059, 199272118, 199273321, 199275125, 199279668], "B": [199256261, 199253517, 199260386, 199254659, 199254149, 199255531, 199254513, 199253333, 199254612, 199260900, 199256259, 199253472, 199256316, 199258434, 199255694, 199256525, 199257662, 199261042, 199260517], "A": [199251141, 199251302, 199252305, 199251756, 199251041, 199252000, 199251140, 199251087, 199251123, 199252263, 199256364, 199250912, 199252253, 199253426, 199251686, 199251495, 199253540, 199253141, 199252510]}, "name": "E. Multitest Generator", "statement": "Let\u2019s call an array b_1, b_2,\r\nldots, b_m a if b_1 = m - 1.Let\u2019s call an array b_1, b_2,\r\nldots, b_m a if the array b_2, b_3,\r\nldots, b_m can be split into b_1 non-empty subarrays so that each of\r\nthese subarrays is a . Note that each element of the array must be\r\nincluded in exactly one subarray, and the subarrays must consist of\r\nconsecutive elements.Let\u2019s define the function f from the array b_1,\r\nb_2,\r\nldots, b_m as the minimum number of operations of the form \"Replace any\r\nb_i with any integer x\", which needs to be done so that the array b_1,\r\nb_2,\r\nldots, b_m becomes a .You are given an array of integers a_1, a_2,\r\nldots, a_n. For each i from 1 to n - 1, find f([a_i, a_{i+1},\r\nldots, a_n]).Below are some examples of and . : [\r\nunderline{1}, 5], [\r\nunderline{2}, 2, 2], [\r\nunderline{3}, 4, 1, 1], [\r\nunderline{5}, 0, 0, 0, 0, 0], [\r\nunderline{7}, 1, 2, 3, 4, 5, 6, 7], [\r\nunderline{0}]. These arrays are since their first element (underlined)\r\nis equal to the length of the array minus one. : [1,\r\nunderline{\r\nunderline{1}, 1}], [2,\r\nunderline{\r\nunderline{3}, 0, 0, 1},\r\nunderline{\r\nunderline{1}, 12}], [3,\r\nunderline{\r\nunderline{2}, 2, 7},\r\nunderline{\r\nunderline{1}, 1},\r\nunderline{\r\nunderline{3}, 4, 4, 4}], [4,\r\nunderline{\r\nunderline{0}},\r\nunderline{\r\nunderline{3}, 1, 7, 9},\r\nunderline{\r\nunderline{4}, 2, 0, 0, 9},\r\nunderline{\r\nunderline{1}, 777}]. Underlined are the subarrays after the split, and\r\ndouble underlined are the first elements of each subarray.\r\n", "solutions": ["#pragma GCC optimization(\"O3\")\n#pragma GCC optimization(\"Ofast,unroll-loops\")\n \n#include <bits/stdc++.h>   \n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;   \nusing namespace std;  \n#define ll long long  \nconst ll INF_MUL=1e13;\nconst ll INF_ADD=1e18;    \n#define pb push_back                 \n#define mp make_pair          \n#define nline \"\\n\"                           \n#define f first                                          \n#define s second                                             \n#define pll pair<ll,ll> \n#define all(x) x.begin(),x.end()     \n#define vl vector<ll>           \n#define vvl vector<vector<ll>>    \n#define vvvl vector<vector<vector<ll>>>          \n#ifndef ONLINE_JUDGE    \n#define debug(x) cerr<<#x<<\" \"; _print(x); cerr<<nline;\n#else\n#define debug(x);  \n#endif       \nvoid _print(ll x){cerr<<x;}  \nvoid _print(char x){cerr<<x;}   \nvoid _print(string x){cerr<<x;}    \nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());   \ntemplate<class T,class V> void _print(pair<T,V> p) {cerr<<\"{\"; _print(p.first);cerr<<\",\"; _print(p.second);cerr<<\"}\";}\ntemplate<class T>void _print(vector<T> v) {cerr<<\" [ \"; for (T i:v){_print(i);cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T>void _print(set<T> v) {cerr<<\" [ \"; for (T i:v){_print(i); cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T>void _print(multiset<T> v) {cerr<< \" [ \"; for (T i:v){_print(i);cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T,class V>void _print(map<T, V> v) {cerr<<\" [ \"; for(auto i:v) {_print(i);cerr<<\" \";} cerr<<\"]\";} \ntypedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\ntypedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;\ntypedef tree<pair<ll,ll>, null_type, less<pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update> ordered_pset;\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nconst ll MOD=1e9+7;      \nconst ll MAX=200200;\nvoid solve(){   \n    ll n; cin>>n;\n    vector<ll> a(n+5);\n    for(ll i=1;i<=n;i++){\n        cin>>a[i];\n    }\n    vector<ll> dp_zero(n+5,-INF_ADD);\n    vector<ll> dp_one(n+5,-INF_ADD);\n    vector<ll> best(n+5,-INF_ADD);\n    dp_zero[n+1]=0;\n    best[n+1]=0;\n    for(ll i=n;i>=1;i--){\n        ll till=i+a[i];\n        if(till<=n){\n            dp_zero[i]=1+dp_zero[till+1];\n            dp_one[i]=1+dp_one[till+1];   \n        }\n        dp_one[i]=max(dp_one[i],best[i+1]+1);   \n        best[i]=max(best[i+1],dp_zero[i]); \n    }  \n    for(ll i=1;i<=n-1;i++){\n        ll ans=2;\n        if(a[i]==dp_zero[i+1]){\n            ans=0;\n        }  \n        else if(dp_one[i+1]>=a[i]){\n            ans=1;\n        }\n        else if(dp_zero[i+1]>0){\n            ans=1;  \n        }\n        cout<<ans<<\" \\n\"[i==n-1];\n    }\n    return;                                  \n}                                                   \nint main()                                                                                                \n{      \n    ios_base::sync_with_stdio(false);                          \n    cin.tie(NULL);    \n    #ifndef ONLINE_JUDGE                    \n    freopen(\"input.txt\", \"r\", stdin);                                              \n    freopen(\"output.txt\", \"w\", stdout);  \n    freopen(\"error.txt\", \"w\", stderr);                        \n    #endif                          \n    ll test_cases=1;               \n    cin>>test_cases;\n    while(test_cases--){\n        solve();\n    } \n    cout<<fixed<<setprecision(10);\n    cerr<<\"Time:\"<<1000*((double)clock())/(double)CLOCKS_PER_SEC<<\"ms\\n\"; \n}  "], "input": "", "output": "", "tags": ["brute force", "dp"], "dificulty": "2300", "interactive": false}