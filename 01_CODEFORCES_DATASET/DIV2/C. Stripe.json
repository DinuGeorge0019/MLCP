{
    "link": "https://codeforces.com//contest/18/problem/C",
    "problemId": "84",
    "problem_idx": "C",
    "shortId": "18C",
    "contest_number": "18",
    "problem_submissions": {
        "E": [
            81065,
            81306,
            80765,
            81264,
            81531,
            81749,
            81052,
            81910,
            82769,
            83595,
            82917,
            82903,
            83429,
            82503,
            82497,
            82370,
            470419
        ],
        "D": [
            80763,
            80489,
            81776,
            80347,
            81284,
            81376,
            81320,
            81622,
            81610
        ],
        "B": [
            80357,
            80881,
            79919,
            80575,
            80236,
            80254,
            80116,
            80063,
            80223,
            83594,
            80352,
            80834,
            80541,
            80588,
            81110,
            80898,
            82232,
            81439
        ],
        "C": [
            79922,
            80066,
            79784,
            80695,
            79953,
            79859,
            80277,
            80229,
            79880,
            79798,
            79989,
            80024,
            79954,
            80323,
            79676,
            79918
        ],
        "A": [
            79794,
            79576,
            79652,
            79640,
            79646,
            79718,
            79820,
            79725,
            79739,
            79651,
            79729,
            79883,
            79745,
            80732,
            80006,
            79782
        ]
    },
    "name": "C. Stripe",
    "statement": "Once Bob took a paper stripe of squares (the height of the stripe is 1\r\nsquare). In each square he wrote an integer number, possibly negative.\r\nHe became interested in how many ways exist to cut this stripe into two\r\npieces so that the sum of numbers from one piece is equal to the sum of\r\nnumbers from the other piece, and each piece contains positive integer\r\namount of squares. Would you help Bob solve this problem?\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <functional>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <ctime>\n#include <cassert>\n#include <queue>\n#include <stack>\n#include <cstdarg>\n\nusing namespace std;\n\n#define TASKNAME \"g\"\n#define pb push_back\n#define mp make_pair\n#define first fi\n#define second se\n#define forn(i, n) for (int i=0; i<(int)n; i++)\n#define all(a) a.begin(), a.end()\n\ntypedef long double ldb;\ntypedef long long lld;\ntypedef unsigned long long uld;\ntypedef vector<int> vi;\ntypedef complex<double> cd;\n\ndouble const eps=1e-9;\nldb const epsl=1e-9;\nint const inf=0x3fffffff;\nint const infu=0x7fffffff;\nlld const infl=0x3fffffffffffffffLL;\nuld const inful=0x7fffffffffffffffLL;\ntemplate <class T>\ninline T sqr(const T &a) {\n    return a*a;\n}\n\nint const N=100005;\n\nint a[N], s[N];\n\n\nint main () {\n//  freopen (TASKNAME\".in\", \"r\", stdin);\n//  freopen (TASKNAME\".out\", \"w\", stdout);\n\n\n    int n;\n    cin >> n;\n    s[0]=0;\n    for (int i=1; i<=n; i++) {\n        cin >> a[i];\n        s[i]=s[i-1]+a[i];\n    }\n    int res=0;\n    for (int i=1; i<n; i++)\n        if (s[i]+s[i]==s[n])\n            res++;\n    cout << res << endl;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Stripe.json",
    "editorial_link": "https://codeforces.com//blog/entry/463",
    "editorial": "One should keep two sums S1 ans S2, where S1 is the sum of all numbers on the left part of the stripe, and S2 is the sum of the right one. At the beginning S1 = 0 and S2 equals to the sum of all numbers of the stripe. Then we move the border of the parts within a cycle from left to right recalculating the values of S1 and S2 each iteration and increasing the answer when it's necessary.",
    "hint": []
}