{
    "link": "https://codeforces.com//contest/169/problem/C",
    "problemId": "1046",
    "problem_idx": "C",
    "shortId": "169C",
    "contest_number": "169",
    "problem_submissions": {
        "C": [
            1413568,
            1418000,
            1419729,
            1418879,
            1411538,
            1411673,
            1412236,
            1411277,
            1411560,
            1412011,
            1411811,
            1412600
        ],
        "D": [
            1412552,
            1418074,
            1411994,
            1418637,
            1418063,
            1414034
        ],
        "B": [
            1410183,
            1409899,
            1409611,
            1409469,
            1410004,
            1410007,
            1410220,
            1409835,
            1410058,
            1410523,
            1410902,
            1409990,
            1409805,
            1410144
        ],
        "A": [
            1409095,
            1409256,
            1409125,
            1409053,
            1409076,
            1409189,
            1409237,
            1409183,
            1409272,
            1409331,
            1409404,
            1409425,
            1409291,
            1409388
        ],
        "E": [
            1413634,
            1413390,
            1419771,
            1414392
        ]
    },
    "name": "C. Substring and Subsequence",
    "statement": "One day Polycarpus got hold of two non-empty strings and , consisting of\r\nlowercase Latin letters. Polycarpus is quite good with strings, so he\r\nimmediately wondered, how many different pairs of \" \" are there, such\r\nthat is a substring of string , is a subsequence of string , and the\r\ncontent of and is the same. Two pairs are considered different, if they\r\ncontain different substrings of string or different subsequences of\r\nstring . Read the whole statement to understand the definition of\r\ndifferent substrings and subsequences.The of string is the number of\r\ncharacters in it. If we denote the length of the string as , we can\r\nwrite the string as .A of is a non-empty string (). For example, \"\" and\r\n\"\" are substrings or \"\", while \"\" is not. Two substrings and are\r\nconsidered to be if or . For example, if =\"\", and are different, though\r\ntheir content is the same.A of is a non-empty string (). For example, \"\"\r\nis a subsequence of \"\". Two subsequences and are considered if the\r\nsequences and are different.\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n\nusing namespace std;\n#define For(i,l,r) for(int i=l;i<=r;++i)\n#define Cor(i,l,r) for(int i=l;i>=r;--i)\n#define MaxN 200030\n#define Fill(a,b) memset(a,b,sizeof(a))\n#define PII pair<long long,long long>\n#define MP(x,y) make_pair(x,y)\n#define FI first\n#define SE second\n#define MD 1000000007\nchar a[5555],b[5555];\nint f[5555][5555][2];\nint main(){\n    scanf(\"%s\",a);scanf(\"%s\",b);\n    int n=strlen(a),m=strlen(b);\n    For(i,0,n)\n        For(j,0,m)\n            For(k,0,1){\n                if(i==0||j==0){f[i][j][k]=k;continue;}\n                if(a[i-1]==b[j-1])f[i][j][k]=(f[i][j][k]+f[i-1][j-1][1])%MD;\n                f[i][j][k]=(f[i][j][k]+f[i][j-1][k])%MD;\n            }\n    long long ans(0);For(i,1,n)ans=(ans+f[i][m][false])%MD;\n    cout<<ans<<endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Substring and Subsequence.json",
    "editorial_link": "https://codeforces.com//blog/entry/4187",
    "editorial": "Solution summary: dynamic programming.\n\nSample jury solution: 1415300 (author = levlam)\n\nThe problem could be solved with the following dynamic programming. Let f[i,?j] be the number of distinct pairs (\"substring starting at position i\" and \"subsequence of the substring t[j... |t|]\")\n\nThen:\n\nf[i, j] = f[i, j + 1];\nif (s[i] == t[j])\n  add(f[i, j], f[i + 1, j + 1] + 1)\nAnswer =  f[i,0]",
    "hint": []
}