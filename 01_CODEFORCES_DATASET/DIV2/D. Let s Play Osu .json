{
    "link": "https://codeforces.com//contest/236/problem/D",
    "problemId": "2007",
    "problem_idx": "D",
    "shortId": "236D",
    "contest_number": "236",
    "problem_submissions": {
        "D": [
            2401522,
            2401978,
            2399080,
            2402066,
            2401715,
            2402161,
            2401067,
            2401282,
            2402497,
            2402255,
            2402258,
            2402552,
            2407057,
            2401362
        ],
        "C": [
            2398821,
            2397723,
            2398241,
            2397821,
            2397697,
            2399591,
            2397563,
            2399862,
            2400413,
            2400104,
            2399488,
            2400210,
            2397410,
            2401125,
            2400893,
            2399191,
            2402188,
            2399547,
            2399330
        ],
        "B": [
            2397740,
            2396693,
            2396782,
            2396662,
            2396062,
            2397677,
            2396492,
            2397628,
            2397873,
            2399357,
            2398236,
            2398487,
            2396731,
            2397154,
            2397327,
            2396776,
            2398714,
            2397453,
            2398792
        ],
        "A": [
            2396089,
            2395589,
            2395903,
            2395252,
            2395325,
            2396050,
            2395359,
            2396372,
            2395937,
            2396073,
            2395988,
            35126488,
            2395350,
            2395782,
            2395431,
            2395354,
            2396394,
            2395866,
            2395269
        ]
    },
    "name": "D. Let s Play Osu ",
    "statement": "You’re playing a game called Osu! Here’s a simplified version of it.\r\nThere are clicks in a game. For each click there are two outcomes:\r\ncorrect or bad. Let us denote correct as \"\", bad as \"\", then the whole\r\nplay can be encoded as a sequence of characters \"\" and \"\".Using the play\r\nsequence you can calculate the score for the play as follows: for every\r\nmaximal consecutive \"\"s block, add the square of its length (the number\r\nof characters \"\") to the score. For example, if your play can be encoded\r\nas \"\", then there’s three maximal consecutive \"\"s block \"\", \"\", \"\", so\r\nyour score will be . If there are no correct clicks in a play then the\r\nscore for the play equals to .You know that the probability to click the\r\n-th click correctly is . In other words, the -th character in the play\r\nsequence has probability to be \"\", to be \"\". You task is to calculate\r\nthe expected score for your play.\r\n",
    "solutions": [
        "#include<stdio.h>\n\nint n;\ndouble a[200005];\ndouble left[200005];\ndouble right[200005];\ndouble la1[200005];\ndouble la;\n\nint main()\n{\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lf\",&a[i]);\n\ta[0]=0;\n\ta[n+1]=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tleft[i]=(left[i-1]+1)*a[i];\n\t}\n\tfor(i=n;i>=1;i--)\n\t{\n\t\tright[i]=(right[i+1]+1)*a[i];\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tla1[i]=a[i]*(1+left[i-1]+right[i+1]);\n\t\tla+=la1[i];\n\t}\n\tprintf(\"%lf\",la);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "math",
        "probabilities"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Let s Play Osu .json",
    "editorial_link": "https://codeforces.com//blog/entry/5592",
    "editorial": "Let us take a deep look at how this score is calculated. For an n long 'O' block, it contributes n2 to the answer.\n\nLet us reformat this problem a bit and consider the following alternative definition of the score: (1) For each two 'O' pair which there is no 'X' between them, they add 2 to the score. (2) For each 'O', it adds 1 to the score.\n\nWe claim that this new definition of the score is equivalent to the definition in the problem statement.\n\nProof of the claim: For an n long 'O' block, there are Cn2 pairs of 'O' in it and n 'O' in it. Note that 2Cn2?+?n?=?n2.\n\nSo now we work with the new definition of the score. For each event(i,j) (which means s[i] and s[j] are 'O', and there is no 'X' between them). If event(i,j) happens, it adds 2 to the score.\n\nSo we only need to sum up the probabilities of all events and multiply them by 2, and our task becomes how to calculate the sum of probabilities of all the event(i,j). Let P(i,j) be the probability of event(i,j).\n\nWe can see that P(i,j) can be computed by . Then we denote P(j) as the sum of all event(i,j) for i<j. We have dp(0)=0 and dp(j)=(dp(j-1)+pj?-?1)*pj",
    "hint": []
}