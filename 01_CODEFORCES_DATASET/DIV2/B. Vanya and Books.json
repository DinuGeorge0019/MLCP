{
    "link": "https://codeforces.com//contest/552/problem/B",
    "problemId": "29862",
    "problem_idx": "B",
    "shortId": "552B",
    "contest_number": "552",
    "problem_submissions": {
        "E": [
            11646876,
            11645914,
            11646152,
            11649972,
            11649705,
            11649254,
            11649323,
            11649002,
            11652530,
            11648502,
            11648682,
            11644488,
            11651947
        ],
        "D": [
            11640438,
            11641253,
            11643031,
            11645042,
            11638109,
            11641642,
            11643248,
            11642812,
            11645189,
            11653069,
            11638747,
            11644748,
            11637258,
            11646037,
            11643577,
            11645065,
            11645584,
            11650005
        ],
        "C": [
            11638883,
            11643048,
            11640597,
            11643428,
            11643543,
            11646030,
            11644783,
            11645127,
            11637655,
            11645256,
            11659993,
            11639889,
            11660703,
            11640924,
            11642914
        ],
        "B": [
            11636441,
            11637487,
            11637412,
            11638261,
            11639028,
            11636467,
            11638358,
            11637713,
            11644065,
            11640586,
            11636843,
            11637147,
            11640517,
            11646494,
            11637818,
            11638869,
            11636892
        ],
        "A": [
            11635963,
            11636114,
            11636315,
            11636121,
            11639545,
            11635795,
            11635940,
            11635876,
            11635929,
            11637062,
            11635777,
            11635996,
            11641441,
            11647153,
            11636326,
            11637141,
            11635979
        ]
    },
    "name": "B. Vanya and Books",
    "statement": "Vanya got an important task he should enumerate books in the library and\r\nlabel each book with its number. Each of the books should be assigned\r\nwith a number from to . Naturally, distinct books should be assigned\r\ndistinct numbers.Vanya wants to know how many digits he will have to\r\nwrite down as he labels the books.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\nusing namespace std;\n\ntypedef long long ll;\n\nvoid setup(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cout.precision(15);\n}\n\nll N, A;\n\nint main(){\n    setup();\n    cin >> N;\n\n    int d = 1;\n    ll mi = 1, ma = 9;\n    while(N>=mi){\n        ll q = min(N, ma) - mi + 1;\n        A += q * d;\n\n        d++;\n        mi *= 10;\n        ma = 10 * mi - 1;\n    }\n\n    cout << A << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Vanya and Books.json",
    "editorial_link": "https://codeforces.com//blog/entry/18696",
    "editorial": "We can find out a formula for this problem: for answer will be ; for\r\nanswer will be ; for answer will be ; so for answer will be ; Time\r\ncomplexity , where is the length of n. We also could just try options\r\nand solve problem for each option. UPD: Donât use function pow() to find\r\npowers of 10, because it doesnât work right sometimes. C++ code\r\nWild_Hamster Java code Wild_Hamster Python code Zlobober\r\n",
    "hint": []
}