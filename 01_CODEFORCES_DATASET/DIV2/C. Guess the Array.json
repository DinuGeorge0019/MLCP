{
    "link": "https://codeforces.com//contest/727/problem/C",
    "problemId": "75801",
    "problem_idx": "C",
    "shortId": "727C",
    "contest_number": "727",
    "problem_submissions": {
        "F": [
            21454299,
            21463560,
            21456437,
            21465295,
            21454474,
            21458264,
            21456589
        ],
        "E": [
            21449841,
            21449822,
            21450904,
            21453568,
            21453967,
            21760601,
            21511825,
            21511807,
            21511800,
            21454554,
            21549212,
            21460363,
            21455919,
            21459919
        ],
        "D": [
            21446491,
            21446004,
            21446992,
            21445398,
            21448520,
            21448519,
            21447217,
            21446535,
            21447223,
            21446711,
            21448124,
            21446242,
            21447928,
            21448652,
            21448435,
            21449709,
            21448635,
            21445975,
            21450092
        ],
        "C": [
            21445102,
            21444938,
            21445707,
            21444476,
            21446045,
            21446680,
            21446166,
            21445050,
            21443956,
            21445410,
            21446522,
            21445734,
            21446213,
            21445295,
            21445829,
            21445999,
            21444171,
            21447101
        ],
        "B": [
            21444430,
            21444284,
            21444596,
            21443833,
            21445575,
            21445150,
            21455506,
            21444391,
            21445186,
            21444885,
            21444164,
            21445217,
            21445115,
            21446297,
            21444840,
            21445324,
            21453096,
            21445206
        ],
        "A": [
            21442889,
            21442869,
            21443136,
            21442911,
            21443243,
            21443224,
            21443033,
            21442981,
            21442858,
            21442965,
            21442983,
            21442922,
            21442918,
            21442957,
            21443069,
            21443067,
            21443028,
            21443089,
            21442924,
            21443118
        ]
    },
    "name": "C. Guess the Array",
    "statement": "In this problem you should guess an array which is unknown for you. The\r\nonly information you have initially is the length of the array .The only\r\nallowed action is to ask the sum of two elements by their indices.\r\nFormally, you can print two indices and (the indices should be ). Then\r\nyour program should read the response: the single integer equals to .It\r\nis easy to prove that it is always possible to guess the array using at\r\nmost requests.Write a program that will guess the array by making at\r\nmost requests.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int INF = (int) 1e9;\nconst ll LINF = (ll) 1e18;\nconst ld EPS = 1e-7;\n\nconst int N = 1e5 + 123;\n\nint a[N];\n\nint ask(int i, int j) {\n    cout << \"? \" << i + 1 << \" \" << j + 1 << endl;\n    int res;\n    cin >> res;\n    return res;\n}\n\nint run() {\n    int n;\n    cin >> n;\n    \n    {\n        int x = ask(0, 1);\n        int y = ask(0, 2);\n        int z = ask(1, 2);\n        \n        a[2] = (y + z - x) / 2;\n        a[1] = (x + z - y) / 2;\n        a[0] = (x + y - z) / 2;\n    }\n    \n    for (int i = 3; i < n; i++) {\n        a[i] = ask(0, i) - a[0];\n    }\n    \n    cout << \"! \";\n    for (int i = 0; i < n; i++) {\n        cout << a[i] << \" \";\n    }\n    cout << endl;\n\n    return 0;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    return run();\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "interactive",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Guess the Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/47773",
    "editorial": "At first let\u00e2\u0080\u0099s make three queries on sum , .After that we got a system\r\nof three equations with three unknown variables . After simple\r\ncalculating we got that . The values of and now can be simply found.\r\nAfter that we now the values of and spent on it 3 queries.Then for all\r\nfrom 4 to we need to make the query . If the next sum equals to then\r\n(recall that we already know the value of ). So we guess the array with\r\nexactly queries.\r\n"
}