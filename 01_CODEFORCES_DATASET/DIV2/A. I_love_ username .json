{
    "link": "https://codeforces.com//contest/155/problem/A",
    "problemId": "949",
    "problem_idx": "A",
    "shortId": "155A",
    "contest_number": "155",
    "problem_submissions": {
        "C": [
            1225243,
            1226717,
            1224971,
            1224506,
            1224768,
            1224444,
            1224336,
            1226178,
            1224907,
            1224916,
            1224811,
            1224924,
            1224662,
            1223975,
            1226905,
            1227456,
            1225902,
            1228923,
            4141949,
            1225351
        ],
        "D": [
            1224117,
            1227696,
            1226383,
            1225863,
            1228335,
            1226351,
            1226456,
            1225394,
            1226266,
            1226950,
            1226772,
            1227105,
            1227425,
            1226475,
            1226136,
            1224942,
            1227473,
            1225325,
            1227301
        ],
        "B": [
            1221607,
            1221762,
            1222099,
            1223177,
            1225270,
            1222150,
            1223376,
            1222553,
            1222471,
            1222167,
            1223151,
            1222830,
            1222882,
            1224581,
            1222789,
            1222810,
            1222778,
            1222687,
            1222965
        ],
        "A": [
            1221146,
            1221148,
            1221169,
            1221961,
            1222044,
            1221349,
            1221696,
            1221640,
            1221515,
            1221343,
            1221470,
            1221634,
            1221617,
            17013899,
            1224871,
            1221409,
            1221848,
            1221716,
            1221534,
            1221252
        ],
        "E": [
            1239607,
            1239595,
            1239584,
            1231448,
            1239840,
            1243072
        ]
    },
    "name": "A. I_love_ username ",
    "statement": "Vasya adores sport programming. He can\u2019t write programs but he loves to\r\nwatch the contests\u2019 progress. Vasya even has a favorite coder and Vasya\r\npays special attention to him.One day Vasya decided to collect the\r\nresults of all contests where his favorite coder participated and track\r\nthe progress of his coolness. For each contest where this coder\r\nparticipated, he wrote out a single non-negative number the number of\r\npoints his favorite coder earned in the contest. Vasya wrote out the\r\npoints for the contest in the order, in which the contests run\r\n(naturally, no two contests ran simultaneously).Vasya considers a\r\ncoder\u2019s performance in a contest in two situations: he can break either\r\nhis best or his worst performance record. First, it is amazing if during\r\nthe contest the coder earns strictly points that he earned on each past\r\ncontest. Second, it is amazing if during the contest the coder earns\r\nstrictly points that he earned on each past contest. A coder\u2019s first\r\ncontest isn\u2019t considered amazing. Now he wants to count the number of\r\namazing performances the coder had throughout his whole history of\r\nparticipating in contests. But the list of earned points turned out long\r\nand Vasya can\u2019t code... That\u2019s why he asks you to help him.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <complex>\n#include <cmath>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n\nusing namespace std;\n\nint main() {\n    int n; cin >> n;\n    int mx, mn; cin >> mx;\n    mn = mx;\n    int a =0 , b = 0;\n    for (int i=1; i < n; i++) {\n        int t; cin >> t;\n        if (t > mx) {\n            mx = t;\n            a ++;\n        }\n        if (t < mn) {\n            mn = t;\n            a++;\n        }\n    }\n    cout << a << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. I_love_ username .json",
    "editorial_link": "https://codeforces.com//blog/entry/3969",
    "editorial": "You should do what is written: go through the sequence and count the\r\nelements which are greater or less than all of its predecessors. We\r\ndon\u00e2\u0080\u0099t even have to store the whole sequence, just the current minimum\r\nand maximum. Complexity O(N), but squared still works fine.\r\n"
}