{
    "link": "https://codeforces.com//contest/890/problem/C",
    "problemId": "133725",
    "problem_idx": "C",
    "shortId": "890C",
    "contest_number": "890",
    "problem_submissions": {
        "F": [
            32289917
        ],
        "E": [
            32261274,
            32675605,
            32429167,
            32262692
        ],
        "D": [
            32257865,
            32268886,
            32258866,
            32260610,
            32261085,
            32262116,
            32262769,
            32262040,
            32269184,
            32261804,
            32261588,
            32261452
        ],
        "C": [
            32252742,
            32258377,
            32261755,
            32255078,
            32253602,
            32254200,
            32254499,
            32258466,
            32256926,
            32255088,
            32253307,
            32258191
        ],
        "B": [
            32249690,
            32252382,
            32249585,
            32250216,
            32249706,
            32250555,
            32251083,
            32253080,
            32251617,
            32251074,
            32250730,
            32251426
        ],
        "A": [
            32248474,
            32263812,
            32248207,
            32248333,
            32248364,
            32248924,
            32248328,
            32250186,
            32248109,
            32248687,
            32248286,
            32248149
        ]
    },
    "name": "C. Petya and Catacombs",
    "statement": "A very brave explorer Petya once decided to explore Paris catacombs.\r\nSince Petya is not really experienced, his exploration is just walking\r\nthrough the catacombs.Catacombs consist of several rooms and\r\nbidirectional passages between some pairs of them. Some passages can\r\nconnect a room to itself and since the passages are built on different\r\ndepths they do not intersect each other. Every minute Petya arbitrary\r\nchooses a passage from the room he is currently in and then reaches the\r\nroom on the other end of the passage in exactly one minute. When he\r\nenters a room at minute , he makes a note in his logbook with number :\r\nIf Petya has visited this room before, he writes down the minute he was\r\nin this room last time; Otherwise, Petya writes down an arbitrary\r\nnon-negative integer strictly less than current minute . Initially,\r\nPetya was in one of the rooms at minute , he didn\u2019t write down number\r\n.At some point during his wandering Petya got tired, threw out his\r\nlogbook and went home. Vasya found his logbook and now he is curious:\r\nwhat is the minimum possible number of rooms in Paris catacombs\r\naccording to Petya\u2019s logbook?\r\n",
    "solutions": [
        "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\n#define DEB 1\n#define dbg_tab(x,l) if(DEB) { cerr << #x << \":\"; for(int i=0;i<l;i++) cerr << \" \" << x[i]; cerr << endl; }\n#define dbg_vec(x) if(DEB) { cerr << #x << \":\"; for(auto y:x) cerr << \" \" << y; cerr << endl; }\n\nconst int N = 2e5;\nint t[N + 7];\nint n;\nint wsk[N + 7];\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin >> n;\n    for(int i = 1; i <= n; ++i) {\n        cin >> t[i];\n        wsk[t[i]] = 1;\n    }  \n    \n    int res = 0;\n    for(int i = 1; i <= n; ++i) if(!wsk[i]) res++;\n    cout << res << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "trees"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Petya and Catacombs.json",
    "editorial_link": "https://codeforces.com//blog/entry/55734",
    "editorial": "First, we notice that if journal contains two equal notes ti?=?tj,?i?<?j, then at least one of them was made in newly visited room, because otherwise tj would be at least i. Thus there could be at most one note corresponding to previously visited room among equal notes.\n\nLet's denote by cnti number of occurrences of i in the journal. From the previous statement we deduce that minimum possible number of rooms is at least . Also, it's easy to see that this value can be achieved: we say that first occurrence of each value corresponds to revisiting the previous room and all other correspond to visiting new rooms.\n\nSo the problem can be solved by calculating values cnti for each i between 0 and n and calculating the above sum."
}