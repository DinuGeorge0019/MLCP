{
    "link": "https://codeforces.com//contest/1988/problem/B",
    "problemId": "2755740",
    "problem_idx": "B",
    "shortId": "1988B",
    "contest_number": "1988",
    "problem_submissions": {
        "E": [
            270685050,
            270705019,
            270700025,
            272334496,
            270690864,
            270707787,
            270701276,
            270700901,
            270718018,
            270707694,
            270712456,
            270717955,
            270717609,
            270717396,
            270722279,
            270721777,
            270713323,
            270726034,
            270728933,
            270723571,
            270713049
        ],
        "D": [
            270667414,
            270666131,
            270678688,
            270697022,
            270684902,
            270684329,
            270689879,
            270679010,
            270680404,
            270690647,
            270675498,
            270681957,
            270688264,
            270682354,
            270685580,
            270691868,
            270688997,
            270685310,
            270682871,
            270686949
        ],
        "A": [
            270656934,
            270657283,
            270646313,
            270648673,
            270647770,
            270646255,
            270646226,
            270646704,
            270646496,
            270646875,
            270646230,
            270646537,
            270649042,
            270647239,
            270646832,
            270647970,
            270646816,
            270646403,
            270647818,
            270690835
        ],
        "B": [
            270653903,
            270658113,
            270648318,
            270659660,
            270651609,
            270649653,
            270649456,
            270651315,
            270648898,
            270652028,
            270649680,
            270649413,
            270659881,
            270651090,
            270653561,
            270652761,
            270651998,
            270650038,
            270651450,
            270654441
        ],
        "C": [
            270647243,
            270657923,
            270653896,
            270669456,
            270664152,
            270658071,
            270658378,
            270659641,
            270660679,
            270663455,
            270660051,
            270666865,
            270671029,
            270662305,
            270672676,
            270661337,
            270662076,
            270660202,
            270665229,
            270662007
        ],
        "F": [
            276883705,
            276879542,
            270840778
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/131581",
    "editorial": "We list some simple conditions for a string to be transformable:\n\nIf 111 exists somewhere (as a substring) in the string, the string is always transformable.\nIf 11 appears at least twice in the string, the string is always transformable.\nIf the string both begins and ends with 1, it is always transformable.\nIf the string begins or ends with 1 and 11 exists in the string, it is always transformable.\nThese can be found by simulating the operation for short strings on paper.\n\nContrarily, if a string does not meet any of the four items, it is always not transformable. This can be proved using induction (as an exercise).\n",
    "name": "B. Make Majority",
    "statement": "You are given a sequence [a_1,\r\nldots,a_n] where each element a_i is either 0 or 1. You can apply\r\nseveral (possibly zero) operations to the sequence. In each operation,\r\nyou select two integers 1\r\nle l\r\nle r\r\nle |a| (where |a| is the current length of a) and replace [a_l,\r\nldots,a_r] with a single element x, where x is the majority of [a_l,\r\nldots,a_r].Here, the majority of a sequence consisting of 0 and 1 is\r\ndefined as follows: suppose there are c_0 zeros and c_1 ones in the\r\nsequence, respectively. If c_0\r\nge c_1, the majority is 0. If c_0<c_1, the majority is 1. For example,\r\nsuppose a=[1,0,0,0,1,1]. If we select l=1,r=2, the resulting sequence\r\nwill be [0,0,0,1,1]. If we select l=4,r=6, the resulting sequence will\r\nbe [1,0,0,1]. Determine if you can make a=[1] with a finite number of\r\noperations.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>#define pb push_back#define sz(a) ((int)a.size())#define re return#define all(a) a.begin(),a.end()#define rept(i,a,b) for(int i=(a);i<(b);i++)#define rep(i,a) rept(i,0,a)#define vi vector<int>#define pii pair<int,int>#define F first#define S second#define de(x) cout<<#x<<\"=\"<<x<<\"\\n\";#define int long long#define il inline#define db double#define ld long dbusing namespace std;const int MOD=998244353,INF=1000000000000000000;template<typename T>inline void Mx(T &a,T b){a=max(a,b);}template<typename T>inline void Mi(T &a,T b){a=min(a,b);}void FILEIO(string s){\tfreopen((s+\".in\").c_str(),\"r\",stdin);\tfreopen((s+\".out\").c_str(),\"w\",stdout);}void run(){\tint n;\tstring s;\tcin>>n>>s;\tint c=-(s[0]=='0')-(s[n-1]=='0');\trep(i,n-1)if(s[i]==s[i+1]&&s[i]=='1')c++;\tif(c>=0)cout<<\"Yes\\n\";\telse cout<<\"No\\n\";}signed main(){\tios::sync_with_stdio(0);\tcin.tie(0);cout.tie(0);\tint T=1;\tcin>>T;\twhile(T--)\t\trun();\tre 0;}\u00a0"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Make Majority.json"
}