{"link": "https://codeforces.com//contest/900/problem/E", "problemId": "138318", "problem_idx": "E", "shortId": "900E", "contest_number": "900", "problem_submissions": {"E": [33123004, 33122209, 33124223, 33128027, 33126296, 33123992, 33134877, 33131568, 33129839, 33130568, 33133529, 33128615, 33134512, 33135377, 33134229, 33129907, 33131645, 33132271, 33131644, 33134967], "D": [33118613, 33126606, 33120228, 33117273, 33128904, 33134754, 33121668, 33126110, 33125759, 33125945, 33128804, 33134849, 33122370, 33129223, 33130838, 33134832, 33134143, 33128551, 33127657, 33131147], "C": [33115963, 33117760, 33121163, 33122923, 33116908, 33117063, 33119169, 33119501, 33119408, 33116545, 33115888, 33118394, 33117100, 33118026, 33118964, 33124120, 33125946, 33125772, 33132467, 33127142], "A": [33113471, 33111416, 33111216, 33111936, 33113195, 33111439, 33114180, 33112223, 33112487, 33111223, 33113441, 33111156, 33111069, 33111686, 33111630, 33112745, 33116326, 33118751, 33111288, 33112610], "B": [33113418, 33112919, 33113915, 33113361, 33113043, 33114488, 33114219, 33114774, 33114387, 33120138, 33117548, 33115087, 33114887, 33116028, 33119460, 33117688, 33126678, 33113193, 33125132]}, "name": "E. Maximum Questions", "statement": "Vasya wrote down two strings of length and of length consisting of small\r\nEnglish letters \u201d and \u201d. What is more, he knows that string has a form\r\n\"\", namely there are letters \u201d on odd positions and letters \u201d on even\r\npositions.Suddenly in the morning, Vasya found that somebody spoiled his\r\nstring. Some letters of the string were replaced by character \u201d.Let\u2019s\r\ncall a sequence of positions as of string in , if and .The boy defines\r\nthe of the string as maximum number of disjoint occurrences of string in\r\n. Vasya can replace some letters \u201d with \u201d or \u201d (letters on different\r\npositions can be replaced with different letter). Vasya wants to make\r\nsome replacements in such a way that beauty of string is maximum\r\npossible. From all such options, he wants to choose one with the minimum\r\nnumber of replacements. Find the number of replacements he should make.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define maxn 200050\n\nusing namespace std;\n\nchar s[maxn];\n\nint a[maxn][2],b[maxn][2],c[maxn],d[maxn],r[maxn],n,m,p,q,f;\n\nint main()\n{\n    scanf(\"%d\",&n);scanf(\"%s\",s);scanf(\"%d\",&m);\n    p=(m+1)/2;q=m/2;\n    a[0][0]=a[0][1]=0;b[0][1]=0;c[0]=0;\n    for (int i=1;i<=n;i++)\n    {\n        a[i][0]=a[i-1][0];a[i][1]=a[i-1][1];\n        b[i][0]=b[i-1][0];b[i][1]=b[i-1][1];\n        c[i]=c[i-1];\n        if (s[i-1]=='a') a[i][i&1]++;\n        else if (s[i-1]=='b') b[i][i&1]++;\n        else a[i][i&1]++,b[i][i&1]++,c[i]++;\n    }\n    memset(d,0,sizeof(d));memset(r,0,sizeof(r));\n    for (int i=m;i<=n;i++)\n    {\n        d[i]=d[i-1]; r[i]=r[i-1];\n        f=(i-m+1)&1;\n        if (a[i][f]-a[i-m][f]==p&&b[i][f^1]-b[i-m][f^1]==q)\n        {\n            if (d[i]<d[i-m]+1||d[i]==d[i-m]+1&&r[i]>r[i-m]+c[i]-c[i-m])\n            {\n                d[i]=d[i-m]+1;\n                r[i]=r[i-m]+c[i]-c[i-m];\n            }\n        }\n    }\n    printf(\"%d\\n\",r[n]);\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "dp", "strings"], "dificulty": "2100", "interactive": false}