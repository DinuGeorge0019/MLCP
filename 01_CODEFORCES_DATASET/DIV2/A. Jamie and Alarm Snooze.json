{
    "link": "https://codeforces.com//contest/916/problem/A",
    "problemId": "148024",
    "problem_idx": "A",
    "shortId": "916A",
    "contest_number": "916",
    "problem_submissions": {
        "D": [
            34326007,
            34322565,
            34563169,
            34324237,
            34325530,
            34324573,
            34324098,
            34325922,
            34326213
        ],
        "E": [
            34322258,
            34325502,
            34323285,
            34321851,
            34318358,
            34324148,
            34325404,
            34326324
        ],
        "C": [
            34310995,
            34313571,
            34311523,
            34309797,
            34318416,
            34314936,
            34314832,
            34312668,
            34312494,
            34311976,
            34311906,
            34316835,
            34313644,
            34314417,
            34316195,
            34307237,
            34308290,
            34307428,
            34311584,
            34315270
        ],
        "A": [
            34305522,
            34305848,
            34306019,
            34311849,
            34318455,
            34305611,
            34307081,
            34305645,
            34305601,
            34305829,
            34305615,
            34306758,
            34307093,
            34306724,
            34305983,
            34307982,
            34313895,
            34310913,
            34305897,
            34305681
        ],
        "B": [
            34321729,
            34337379,
            34311562,
            34312817,
            34317165,
            34316891,
            34316674
        ]
    },
    "name": "A. Jamie and Alarm Snooze",
    "statement": "Jamie loves sleeping. One day, he decides that he needs to wake up at\r\nexactly . However, he hates waking up, so he wants to make waking up\r\nless painful by setting the alarm at a time. He will then press the\r\nsnooze button every minutes until is reached, and only then he will wake\r\nup. He wants to know what is the smallest number of times he needs to\r\npress the snooze button.A time is considered if it contains a digit \u201d.\r\nFor example, and are , while and are not .Note that it is not necessary\r\nthat the time set for the alarm and the wake-up time are on the same\r\nday. It is guaranteed that there is a time Jamie can set so that he can\r\nwake at .Formally, find the smallest possible non-negative integer such\r\nthat the time representation of the time minutes before contains the\r\ndigit \u201d.Jamie uses 24-hours clock, so after comes .\r\n",
    "solutions": [
        "#include <algorithm>\n#include <iostream>\n#include <cassert>\n#include <climits>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <numeric>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n\nusing namespace std;\n\nint q,i,j,k,n,m,x,y,z,c,mx2,t,s;\nint a,b,p,A,B;\nint main(){\n    cin >> x;\n\n    cin >> a >> b;\n\n    while(1){\n        if(a%10 == 7 or a/10==7 or b%10==7 or b/10==7)\n            break;\n        s++;\n        b -= x;\n        if(b<0){\n            b+=60;\n            a--;\n        }\n        if(a<0)\n            a+=24;\n    }\n    cout << s <<endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Jamie and Alarm Snooze.json",
    "editorial_link": "https://codeforces.com//blog/entry/57223",
    "editorial": "Let\u00e2\u0080\u0099s use brute force the find\nthe answer. We first set the alarm time as and initialize the answer as\n0. While the time is not lucky, set the alarm time to minute before and\nadd 1 to the answer. Why does this solution run in time? As , decrease\nat most for every iteration. Also, after at most 60 iterations, must\ndecrease at least once. All time representation that (07:XX) is lucky so\nat most 24 times decrement of will lead to a lucky time. Therefore, the\nmax. number of iteration possible is which is very small for 1 sec TL.\nIn fact, the largest possible answer is where , and . My implementation:\n34342125\n"
}