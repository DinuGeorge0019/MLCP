{"link": "https://codeforces.com//contest/689/problem/E", "problemId": "64401", "problem_idx": "E", "shortId": "689E", "contest_number": "689", "problem_submissions": {"D": [18930229, 18929436, 18930879, 18930235, 18926161, 18928733, 18925280, 18927418, 18929085, 18929212, 18929942, 18930645, 18931175, 18924428, 18930801, 18934009, 18927074, 18932083, 18931447], "E": [18927271, 18927820, 18923666, 18931272, 18929873, 18930514, 18922905, 18924072, 18931242, 18932135, 18931664, 18935299, 18933488, 18930284, 18935230, 18930474, 18929312, 18934284, 18932460], "C": [18924941, 18925234, 18926474, 18924949, 18927430, 18926086, 18927497, 18929616, 18924880, 18926717, 18932481, 18925981, 18926886, 18931951, 18926746, 18931682, 18931981, 18925951, 18922736], "B": [18923236, 18923653, 18926920, 18923889, 18924142, 18923587, 18927964, 18931269, 18923788, 18925427, 18926540, 18924110, 18924747, 18932852, 18923583, 18924738, 18930576, 18923854, 18932827], "A": [18922333, 18922086, 18921966, 18921847, 18936511, 18922920, 18935750, 18932978, 18922085, 18924781, 18922834, 18922553, 18922739, 18933881, 18922408, 18925800, 18922272, 18933705]}, "name": "E. Mike and Geometry Problem", "statement": "Mike wants to prepare for IMO but he doesn\u2019t know geometry, so his\r\nteacher gave him an interesting geometry problem. Let\u2019s define to be the\r\nnumber of integer points in the segment with (say that ). You are given\r\ntwo integers and and closed intervals on axis and you have to find: In\r\nother words, you should find the sum of the number of integer points in\r\nthe intersection of any of the segments. As the answer may be very\r\nlarge, output it modulo ().Mike can\u2019t solve this problem so he needs\r\nyour help. You will help him, won\u2019t you?\r\n", "solutions": ["#include <cassert>\n#include <fstream>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#include <bitset>\n#include <ctime>\n#include <set>\n#include <cmath>\n#include <iomanip>\n#include <map>\n#include <stack>\n#include <vector>\n#include <bitset>\n#include <iostream>\n\nusing namespace std;\n\n#define FOR(i, a, n) for (int i = a; i <= n; ++i)\n#define ROF(i, n, a) for (int i = n; i >= a; i--)\n#define FIT(i, v) for (auto &i : v)\n#define pb push_back\n#define mp make_pair\n#define mt make_touple\n#define all(x) (x).begin(), (x).end()\n#define fi first\n#define se second\n#define sz(x) ((int)(x).size())\n#define log log2\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int mod = 1000000007;\nll powmod(ll a, ll b) {ll res=1; a %= mod; assert(b >= 0); for(; b; b >>= 1) {if (b & 1) res = res * a % mod; a = a * a % mod;} return res;}\n\nconst int N = 400100;\n\nmap<int, int> nor;\nvector<int> vals, val;\nint sol, n, k, l[N], r[N], A[N];\nll P[N], I[N];\nll comb(int x, int y) {\n    return 1LL * P[x] * I[y] % mod * I[x - y] % mod;\n}\nint main() {\n#ifndef ONLINE_JUDGE\n    freopen(\"a.in\", \"r\", stdin);\n    freopen(\"a.out\", \"w\", stdout);\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    \n    cin >> n >> k;\n    FOR(i,1,n) {\n        cin >> l[i] >> r[i];\n        r[i]++;\n        vals.pb(l[i]);\n        vals.pb(r[i]);\n    }\n    P[0] = 1;\n    FOR(i,1,n) {\n        P[i] = 1LL * P[i - 1] * i % mod;\n    }\n    I[n] = powmod(P[n], mod - 2);\n    ROF(i,n-1,0) {\n        I[i] = I[i + 1] * (i + 1) % mod;\n    }\n    sort(vals.begin(), vals.end());\n    FIT(it,vals) {\n        if(!val.size()) {\n            val.pb(it);\n        } else if (val.back() != it) {\n            val.pb(it);\n        }\n    }\n    int t = 0;\n    FIT(it,val) {\n        nor[it] = ++t;\n    }\n    FOR(i,1,n) {\n        A[nor[l[i]]]++;\n        A[nor[r[i]]]--;\n    }\n    FOR(i,1,t) {\n        A[i] += A[i - 1];\n        if (A[i] >= k) {\n            sol += 1LL * comb(A[i],k) * (val[i] - val[i - 1]) % mod;\n            if (sol >= mod) {\n                sol -= mod;\n            }\n        }\n    }\n    cout << sol;\n    return 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "data structures", "dp", "geometry", "implementation"], "dificulty": "2000", "interactive": false}