{"link": "https://codeforces.com//contest/1699/problem/E", "problemId": "1450611", "problem_idx": "E", "shortId": "1699E", "contest_number": "1699", "problem_submissions": {"E": [162793364, 162775692, 162793126, 162793513, 162776568, 162806794, 163072479, 162904221, 162802356, 163208563], "D": [162777822, 162787041, 162785884, 162779113, 162783159, 162788510, 162781676, 162786062, 162780446, 162782104, 162783172, 162786827, 162785330, 162784706, 162851711, 162787598, 162793458, 162789076], "C": [162770178, 162790195, 162774066, 162764166, 162787790, 162799603, 162771580, 162766383, 162773288, 162773209, 162772203, 162768894, 162771772, 162772012, 162769394, 162775382, 162765676, 162769675], "A": [162765690, 162760464, 162756544, 162756228, 162790360, 162759372, 162757442, 162756339, 162756415, 162759006, 162765012, 162756289, 162759551, 162756446, 162756312, 162762960, 162756449, 162756887], "B": [162765501, 162770833, 162765076, 162770497, 162789467, 162781290, 162762444, 162760246, 162769636, 162765813, 162765204, 162760315, 162764383, 162763818, 162761397, 162778301, 162759501, 162763396]}, "name": "E. Three Days Grace", "statement": "You are given a multiset A with initial size n, whose elements are\r\nintegers between 1 and m. In one operation, do the following: select a\r\nvalue x from the multiset A, then select two integers p and q such that\r\np, q > 1 and p\r\ncdot q = x. Insert p and q to A, delete x from A. Note that the size of\r\nthe multiset A increases by 1 after each operation. We define the\r\nbalance of the multiset A as\r\nmax(a_i) -\r\nmin(a_i). Find the minimum possible balance after performing any number\r\n(possible zero) of operations.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\nint f[5000005],cnt[5000005],Mn;\nbitset <5000005> vis;\nvector <int> v;\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0); \n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tint n,m;\n\t\tcin >> n >> m;\n\t\tfor(int i=1;i<=m;i++) cnt[i]=0,f[i]=0,vis[i]=0;\n\t\tint mn=0;\n\t\tint ans=1e8;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tif(!vis[x]) ++cnt[0];\n\t\t\tvis[x]=1;\n\t\t}\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tif(vis[i]) --cnt[f[i]];\n\t\t\tf[i]=i;\n\t\t\tif(vis[i]) ++cnt[f[i]];\n\t\t\tfor(int j=1;j*i<=m;j++)\n\t\t\t{\n\t\t\t\tif(vis[i*j]) --cnt[f[i*j]];\n\t\t\t\tf[i*j]=max(f[j],f[j*i]);\n\t\t\t\tif(vis[i*j]) ++cnt[f[i*j]];\n\t\t\t}\n\t\t\twhile(!cnt[mn]) ++mn;\n\t\t\tif(mn) ans=min(ans,i-mn);\n\t\t}\n\t\tcout << ans << \"\\n\"; \n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "dificulty": "2600", "interactive": false}