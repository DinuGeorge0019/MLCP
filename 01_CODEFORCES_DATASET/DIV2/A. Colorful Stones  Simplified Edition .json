{"link": "https://codeforces.com//contest/265/problem/A", "problemId": "2521", "problem_idx": "A", "shortId": "265A", "contest_number": "265", "problem_submissions": {"E": [2970019, 2969814, 2971806, 2972492, 2972772, 2970736], "D": [2968205, 2967708, 2967237, 2968473, 2967999, 2967756, 2971736, 2969158, 2969904, 2966908, 2968608, 2970666, 2968760, 2968451, 2969659, 2966606, 2966951], "B": [2967771, 2964317, 2964787, 2965276, 2964902, 2964309, 2965378, 2964669, 3347348, 2965826, 2967252, 2965239, 2965920, 2965167, 2966106, 2964904, 2964503, 2964762], "A": [2964815, 2963268, 2963454, 2963256, 2963422, 2963233, 2963728, 2963215, 3347333, 2964025, 2963259, 2963495, 2963155, 2963704, 2964004, 2965452, 2963951, 2963523], "C": [2966018, 2965716, 2966720, 2966022, 2965227, 2966717, 2966330, 2966665, 2964777, 2966177, 2966801, 2966556, 2966845, 2967129, 2965425]}, "name": "A. Colorful Stones  Simplified Edition ", "statement": "There is a sequence of colorful stones. The color of each stone is one\r\nof red, green, or blue. You are given a string . The -th (1-based)\r\ncharacter of represents the color of the -th stone. If the character is\r\n\"\", \"\", or \"\", the color of the corresponding stone is red, green, or\r\nblue, respectively.Initially Squirrel Liss is standing on the first\r\nstone. You perform instructions one or more times.Each instruction is\r\none of the three types: \"\", \"\", or \"\". After an instruction , if Liss is\r\nstanding on a stone whose colors is , Liss will move one stone forward,\r\nelse she will not move.You are given a string . The number of\r\ninstructions is equal to the length of , and the -th character of\r\nrepresents the -th instruction.Calculate the final position of Liss (the\r\nnumber of the stone she is going to stand on in the end) after\r\nperforming all the instructions, and print its 1-based position. It is\r\nguaranteed that Liss don\u2019t move out of the sequence.\r\n", "solutions": ["#include <iostream>\n#include <string>\n\nusing namespace std;\n\nstring s, t;\n\nint main()\n{\n\tcin >> s;\n\tcin >> t;\n\tint i = 0, j = 0;\n\twhile (i < s.length() && j < t.length())\n\t{\n\t\tif (s[i] == t[j])\n\t\t{\n\t\t\ti++, j++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\tcout << i + 1 << endl;\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "800", "interactive": false}