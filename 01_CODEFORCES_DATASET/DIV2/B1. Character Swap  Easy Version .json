{"link": "https://codeforces.com//contest/1243/problem/B1", "problemId": "461412", "problem_idx": "B1", "shortId": "1243B1", "contest_number": "1243", "problem_submissions": {"E": [64413060, 64469730, 64408846, 64417229, 64399200, 64470547, 64416699, 64442944], "D": [64391286, 64397713, 64431742, 64397869, 64387912, 64386733, 64389402, 64387675, 64408229, 64380388, 64396146, 64395794, 64394593, 64392997, 64394432, 64400786, 64397002, 64396496, 64397563, 64397111, 64393509], "C": [64384895, 64387481, 64390976, 64405340, 64382337, 64385693, 64385929, 64394275, 64434799, 64386198, 64382497, 64383809, 64377823, 64389605, 64376790, 64385883, 64378335, 64383814, 64387181, 64382731, 64387786], "B2": [64382237, 64381285, 64379711, 64392921, 64382257, 64380535, 64394999, 64387075, 64388632, 64389667, 64386828, 64401152, 64379896, 64404188, 64390999, 64383775, 64439469, 64397436, 64400046], "B1": [64376943, 64376875, 64382975, 64410900, 64376252, 64375532, 64376537, 64399066, 64383882, 64379534, 64379185, 64385521, 64377760, 64384722, 64375586, 64377602, 64378450, 64377183, 64379613, 64377830], "A": [64373589, 64373694, 64408041, 64373563, 64373607, 64373538, 64381662, 64378360, 64376936, 64374179, 64380404, 64373751, 64374463, 64373629, 64373483, 64374884, 64373477, 64375133, 64374905]}, "name": "B1. Character Swap  Easy Version ", "statement": "After struggling and failing many times, Ujan decided to try to clean up\r\nhis house again. He decided to get his strings in order first.Ujan has\r\ntwo strings s and t of length n consisting of only of lowercase English\r\ncharacters. He wants to make them equal. Since Ujan is lazy, he will\r\nperform the following operation exactly once: he takes two positions i\r\nand j (1\r\nle i,j\r\nle n, the values i and j can be equal or different), and swaps the\r\ncharacters s_i and t_j. Can he succeed?Note that he has to perform this\r\noperation once. He to perform this operation.\r\n", "solutions": ["#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long   ll;\ntypedef long double ld;\n\n#define all(x)  (x).begin(), (x).end()\n#define sz(x)   (x).size()\n#define pb      push_back\n#define mp      make_pair\n#define fr      first\n#define sc      second\n\nstring s, t;\nint n;\n\nvoid input() {\n    cin >> n;\n    cin >> s >> t;\n}\n\nvoid solve() {\n    vector<int> ind;\n    for(int i = 0; i < n; i++) {\n        if (s[i] != t[i]) {\n            ind.pb(i);\n        }\n    }\n    if (sz(ind) > 2) {\n        puts(\"No\");\n        return;\n    }\n    else if (sz(ind) != 1){\n        if (sz(ind) == 2) {swap(s[ind[0]], t[ind[1]]); }\n        puts(s == t ? \"Yes\" : \"No\");\n        return;\n    }\n    puts(\"No\");\n    return;\n}\n\nint main() {\n    int testcases = 1;\n    scanf(\"%d\", &testcases);\n    while(testcases--) {\n        input();\n        solve();\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["strings"], "dificulty": "1000", "interactive": false}