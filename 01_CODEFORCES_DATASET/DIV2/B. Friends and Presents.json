{
    "link": "https://codeforces.com//contest/483/problem/B",
    "problemId": "15994",
    "problem_idx": "B",
    "shortId": "483B",
    "contest_number": "483",
    "problem_submissions": {
        "D": [
            8386294,
            8386916,
            8387027,
            8388203,
            8385307,
            8389341,
            8389557,
            8388183,
            8391623,
            8387992,
            8389299,
            8390155,
            8390563,
            8388891,
            8389334,
            8389180,
            8390505,
            8386135,
            8391232,
            8391185
        ],
        "C": [
            8383615,
            8382113,
            8384608,
            8383022,
            8387457,
            8384433,
            8385393,
            8386889,
            8384602,
            8386654,
            8387022,
            8383805,
            8385999,
            8390017,
            8386225,
            8391277,
            8383936,
            8386464,
            8388471
        ],
        "B": [
            8382195,
            8385250,
            8383239,
            8384840,
            8390185,
            8382966,
            8385025,
            8385757,
            8383520,
            8389663,
            8386087,
            8387234,
            8384759,
            8383404,
            8384794,
            8384797,
            8384248,
            8384677
        ],
        "A": [
            8380252,
            8380147,
            8380667,
            8380605,
            8380236,
            8380104,
            8380114,
            8382803,
            8381088,
            8380652,
            8380442,
            8381813,
            8380802,
            8380441,
            8390354,
            8382041,
            8391125,
            8380372,
            8381412,
            8381899
        ]
    },
    "name": "B. Friends and Presents",
    "statement": "You have two friends. You want to present each of them several positive\r\nintegers. You want to present numbers to the first friend and numbers to\r\nthe second friend. Moreover, you want all presented numbers to be\r\ndistinct, that also means that no number should be presented to both\r\nfriends.In addition, the first friend does not like the numbers that are\r\ndivisible without remainder by prime number . The second one does not\r\nlike the numbers that are divisible without remainder by prime number .\r\nOf course, you\u2019re not going to present your friends numbers they don\u2019t\r\nlike.Your task is to find such minimum number , that you can form\r\npresents using numbers from a set . Of course you may choose not to\r\npresent some numbers at all.A positive integer number greater than 1 is\r\ncalled if it has no positive divisors other than 1 and itself.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nlong long a, b, x, y;\n\nlong long ok(long long n) {\n    long long oa = n / x;\n    long long ob = n / y;\n    long long oab = n / x / y;\n\n    long long com = n - oa - ob + oab;\n    long long ca = n - oa;\n    long long cb = n - ob;\n    return ca >= a && cb >= b && ca + cb - com >= a + b;\n}\n\nint main() {\n    cin >> a >> b >> x >> y;\n    long long l = max(a, b), r = 1e13;\n    while(l < r) {\n        long long m = (l + r) >> 1;\n        if(!ok(m)) l = m + 1;\n        else r = m;\n    }\n    cout << r << endl;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Friends and Presents.json",
    "editorial_link": "https://codeforces.com//blog/entry/14417",
    "editorial": "Problem author s solution is using binary search.\nFirst, you can notice that if you can make presents with numbers then\nyou can make presents with numbers too. Let be the function returning\ntrue or false: is it right, that you can make presents with numbers .\nLet be the number of numbers divisible by , the number of numbers\ndivisible by , and number of numbers divisible by and by (as soon as and\nare primes, it is equivalent to divisibility by ). Then to first friend\nat first we shold give numbers, and to second friend numbers. Then we\nmust check, could we give all other numbers divisible neither by nor by\n"
}