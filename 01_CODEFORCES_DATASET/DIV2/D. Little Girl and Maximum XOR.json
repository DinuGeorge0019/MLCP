{
    "link": "https://codeforces.com//contest/276/problem/D",
    "problemId": "2660",
    "problem_idx": "D",
    "shortId": "276D",
    "contest_number": "276",
    "problem_submissions": {
        "E": [
            3187361,
            3187958,
            3187266,
            3188860,
            3188847,
            3189852,
            3189777,
            3189922,
            3189457,
            3190167,
            3186861,
            3189884,
            3191275,
            3193117
        ],
        "D": [
            3182892,
            3183526,
            3184256,
            3183830,
            3184596,
            3184640,
            3186374,
            3185199,
            3185759,
            3187754,
            3185579,
            3186224,
            3184708,
            3185151,
            3188148
        ],
        "C": [
            3182135,
            3182445,
            3183293,
            3183004,
            3183598,
            3183024,
            3180811,
            3183631,
            3182886,
            3184756,
            3183375,
            3183166,
            3181941,
            3184406,
            3183798,
            3183022
        ],
        "B": [
            3181517,
            3181475,
            3182700,
            3182413,
            3182645,
            3185448,
            3182835,
            3183061,
            3184639,
            3183463,
            3182154,
            3183111,
            3182195,
            3182637,
            3182319
        ],
        "A": [
            3180648,
            205334917,
            3180631,
            3180670,
            3181189,
            3180635,
            3180790,
            3181809,
            3180963,
            3183528,
            3181306,
            3190356,
            3180679,
            3180682,
            3181358,
            3180738
        ]
    },
    "name": "D. Little Girl and Maximum XOR",
    "statement": "A little girl loves problems on bitwise operations very much. Here’s one\r\nof them.You are given two integers and . Let’s consider the values of\r\nfor all pairs of integers and . Your task is to find the maximum value\r\namong all considered ones.Expression means applying bitwise excluding or\r\noperation to integers and . The given operation exists in all modern\r\nprogramming languages, for example, in languages ++ and it is\r\nrepresented as \"\", in as \"\".\r\n",
    "solutions": [
        "#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nll p[62];\nint main()\n{\n    p[0]=1;\n    for(int i=1;i<62;i++)p[i]=p[i-1]*2;\n    ll L,R;\n    cin>>L>>R;\n    for(int i=61;i>=0;i--)\n        if(L>=p[i]&&R>=p[i])L-=p[i],R-=p[i];else \n        if(L<p[i]&&R>=p[i])break;\n    if(L==R){puts(\"0\");return 0;}\n    for(int i=61;i>=0;i--)\n        if(L<p[i]&&R>=p[i]){cout<<p[i+1]-1<<endl;return 0;}\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Little Girl and Maximum XOR.json",
    "editorial_link": "https://codeforces.com//blog/entry/6779",
    "editorial": "To be honest, I am surprised that problem D had so many accepted\r\nsolution during the contest. The author s solution uses dynamic\r\nprogramming. In this editorial I ll explain this solution. First of all\r\nwe should convert and to the binary numeral system. Now we can solve our\r\nproblem with dynamic programming, using the following state , where is\r\ncurrent position in binary representation of our numbers and (this\r\nparameter is in range from to number of bits in ), ( or ) is a variable,\r\nwhich shows if current value of is strictly greater than , ( ) is a\r\nvariable, which shows if current value of is strictly less then , , are\r\nvariables, which show the similar things for . Let s use recursion with\r\nmemorization for our solution. Let s define the base of recursion. If we\r\nhave looked through all the bits, we should return . Let s define a\r\nrecursive transition. We need to know, which bits we can place into\r\nbinary representation of number in -th position. We can place if the\r\nfollowing condition is true: -th bit of is equal to , or -th bit of is\r\nequal to and variable shows that current value of is strictly greater\r\nthen . Similarly, we can place if the following condition is true: -th\r\nbit of is equal to , or -th bit of is equal to and variable shows that\r\ncurrent value of is strictly less then . Similarly, we can obtain, which\r\nbits we can place into binary representation of number in -th position.\r\nLet s iterate through all possible bits values and check the result of\r\nxor operation. If it is equal to , we should add to the answer\r\ncorresponding power of . We also need carefully recalculate values of\r\nvariables , , , . We should choose maximum answer from all valid\r\noptions. Initial state for our recursion is (,,,,), where is number of\r\nbits in . I hope, my code will clarify all the obscure points.\r\n",
    "hint": []
}