{
    "link": "https://codeforces.com//contest/1748/problem/A",
    "problemId": "1632963",
    "problem_idx": "A",
    "shortId": "1748A",
    "contest_number": "1748",
    "problem_submissions": {
        "F": [
            180651535,
            180677196,
            181105630,
            180664800,
            181374019,
            180658674,
            180695681,
            180655443,
            180742899
        ],
        "E": [
            180637637,
            180628826,
            180634324,
            180638179,
            180642534,
            180644596,
            180636672,
            181374010,
            180641599,
            180630018,
            180635790,
            180636019,
            180643172,
            180645795,
            180743214,
            180638578,
            180968480,
            180635598,
            180635749,
            180647581,
            180646430,
            180647569,
            180646469
        ],
        "D": [
            180633726,
            180624258,
            180629104,
            180634928,
            180631821,
            180631702,
            180639756,
            181373997,
            180632286,
            180647106,
            180647136,
            180632247,
            180695817,
            180636057,
            180743200,
            180643463,
            180968348,
            180645591,
            180644512,
            180637600,
            180635174,
            180636597,
            180633591
        ],
        "C": [
            180627069,
            180617304,
            180624008,
            180625748,
            180621980,
            180623459,
            180622660,
            181373988,
            180628239,
            180625933,
            180628451,
            180622380,
            180627739,
            180622385,
            180743249,
            180625569,
            180968325,
            180627789,
            180629833,
            180622612,
            180628495,
            180626202,
            180630095
        ],
        "B": [
            180622705,
            180613102,
            180624297,
            180615500,
            180617761,
            180619392,
            180619994,
            181373974,
            180622730,
            180621189,
            180616618,
            180613628,
            180622929,
            180618545,
            180743160,
            180616164,
            180968311,
            180615958,
            180614803,
            180618593,
            180622095,
            180621136
        ],
        "A": [
            180613831,
            180610319,
            180610882,
            180610734,
            180612490,
            180611586,
            180619768,
            181373957,
            180612666,
            180610632,
            180610694,
            180610429,
            180620047,
            180612131,
            180743129,
            180611466,
            180968275,
            180611045,
            180610310,
            180612188,
            180613830,
            180610743
        ]
    },
    "name": "A. The Ultimate Square",
    "statement": "You have n rectangular wooden blocks, which are numbered from 1 to n.\r\nThe i-th block is 1 unit high and\r\nlceil\r\nfrac{i}{2}\r\nrceil units long.Here,\r\nlceil\r\nfrac{x}{2}\r\nrceil denotes the result of division of x by 2, rounded . For example,\r\nlceil\r\nfrac{4}{2}\r\nrceil = 2 and\r\nlceil\r\nfrac{5}{2}\r\nrceil =\r\nlceil 2.5\r\nrceil = 3.For example, if n=5, then the blocks have the following sizes:\r\n1\r\ntimes 1, 1\r\ntimes 1, 1\r\ntimes 2, 1\r\ntimes 2, 1\r\ntimes 3. Find the maximum possible side length of a square you can\r\ncreate using these blocks, . Note that you donâ€™t have to use all of the\r\nblocks.\r\n",
    "solutions": [
        "# include <cstdlib>\n# include <cstdio>\n\nnamespace khin {\n  using namespace std;\n  namespace main {\n    inline namespace source {\n      typedef unsigned long int ulong;\n      typedef unsigned short int ushort;\n      typedef unsigned int uint;\n    }\n    namespace a { void main(); }\n  }\n}\n\nint main() { khin::main::a::main(); }\n\nnamespace khin::main::a {\n  namespace test_case {\n    void main() {\n      uint n;\n      scanf(\"%u\", &n);\n      printf(\"%u\\n\", (n + 1) / 2);\n    }\n  }\n  void main() {\n    ushort t;\n    scanf(\"%hu\", &t);\n    while (test_case::main(), --t);\n  }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. The Ultimate Square.json",
    "editorial_link": "https://codeforces.com//blog/entry/108319",
    "editorial": "SolutionIf is odd, let be the width of the last block. It is possible to\r\ncreate a square of side length using every block as follows: Line\r\ncontains a block; Line contains a block and a block; Line contains a\r\nblock and a block; Line contains a block and a block; Line contains a\r\nblock and a block. Since the area of this square is , and the -th block\r\nhas a width of tiles, the total area of the first blocks is equal to .\r\nTherefore, the answer for is also .In conclusion, the answer for each\r\ntestcase is .Time complexity per testcase: .\r\n",
    "hint": []
}