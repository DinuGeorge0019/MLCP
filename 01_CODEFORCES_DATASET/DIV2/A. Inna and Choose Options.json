{
    "link": "https://codeforces.com//contest/400/problem/A",
    "problemId": "6823",
    "problem_idx": "A",
    "shortId": "400A",
    "contest_number": "400",
    "problem_submissions": {
        "D": [
            5942946,
            5938217,
            5938966,
            5937625,
            5935311,
            5938926,
            5940475,
            5940990,
            5937079,
            5944638,
            5955647,
            5943946,
            5937794,
            5946557,
            5936465,
            5939830,
            5950427,
            5941016
        ],
        "E": [
            5940590,
            5942014,
            5941822,
            5942894,
            5940333,
            5944467,
            5944452,
            5943295,
            5943002,
            5942790,
            5935656,
            5940436,
            5940115,
            5945285,
            5940524,
            5941127,
            5943876,
            5942957
        ],
        "C": [
            5934630,
            5936091,
            5936231,
            5935790,
            5939164,
            5935792,
            5937387,
            5938564,
            5934697,
            5938828,
            5935714,
            5935729,
            5935058,
            5936232,
            5935137,
            5934332,
            5936129,
            5935750,
            5937003
        ],
        "B": [
            5933775,
            5934595,
            5934975,
            5934196,
            5940471,
            5936516,
            5935696,
            5934075,
            5933798,
            5937278,
            5934053,
            5934760,
            5933911,
            5934786,
            5933892,
            5938918,
            5934764,
            5934389,
            5934127
        ],
        "A": [
            5933588,
            5933768,
            5934022,
            5933647,
            5933945,
            5933905,
            5933697,
            5933650,
            5933599,
            5936558,
            5933618,
            5933930,
            5933611,
            5933796,
            5933591,
            5939685,
            5933878,
            5933786,
            5933680
        ]
    },
    "name": "A. Inna and Choose Options",
    "statement": "There always is something to choose from! And now, instead of \"Noughts\r\nand Crosses\", Inna choose a very unusual upgrade of this game. The rules\r\nof the game are given below:There is one person playing the game. Before\r\nthe beginning of the game he puts 12 cards in a row on the table. Each\r\ncard contains a character: \"\" or \"\". Then the player chooses two\r\npositive integers and , after that he makes a table of size from the\r\ncards he put on the table as follows: the first cards form the first row\r\nof the table, the second cards form the second row of the table and so\r\non, the last cards form the last (number ) row of the table. The player\r\nwins if some column of the table contain characters \"\" on all cards.\r\nOtherwise, the player loses.Inna has already put 12 cards on the table\r\nin a row. But unfortunately, she doesn\u2019t know what numbers and to\r\nchoose. Help her win the game: print to her all the possible ways of\r\nnumbers that she can choose and win.\r\n",
    "solutions": [
        "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <limits>\n#include <tuple>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint t;\nchar s[15], e[15][15];\nint main()\n{\n    scanf(\"%d\\n\", &t);\n    while (t--)\n    {\n        gets(s);\n        vector<int> rs;\n        for (int a=1;a<=12;++a) for (int b=1;b<=12;++b) if (a*b==12)\n        {\n            for (int i=0;i<a;++i) for (int j=0;j<b;++j) e[i][j]=s[i*b+j];\n            bool ok=0;\n            for (int j=0;j<b;++j)\n            {\n                bool z=1;\n                for (int i=0;i<a;++i) if (e[i][j]=='O') z=0;\n                ok|=z;\n            }\n            if (ok) rs.push_back(a);\n        }\n        printf(\"%d\", int(rs.size()));\n        for (int i=0;i<rs.size();++i) printf(\" %dx%d\", rs[i], 12/rs[i]);\n        puts(\"\");\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Inna and Choose Options.json",
    "editorial_link": "https://codeforces.com//blog/entry/10755",
    "editorial": "Not difficult task. Let's iterate param a. If 12 % a != 0, continue. Calculate b?=?12?/?a. Let's iterate column (from 1 to b) and for each it's cell (i,?j) check, if it contains X or not. Cell (i,?j) \u0097 is ((i\u00961)?*?a?+?j) -th element of string."
}