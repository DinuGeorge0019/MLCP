{
    "link": "https://codeforces.com//contest/746/problem/A",
    "problemId": "85369",
    "problem_idx": "A",
    "shortId": "746A",
    "contest_number": "746",
    "problem_submissions": {
        "F": [
            23098160,
            23101734,
            23098656,
            23102651,
            23103415,
            23107961,
            23097485,
            23103112,
            23103543,
            23134726,
            23104852,
            23131476
        ],
        "G": [
            23093374,
            23095345,
            23096484,
            23099554,
            23094331,
            23098793,
            32644514,
            23097257,
            23097589,
            23088737,
            23098418,
            23099935,
            23101255,
            23098493,
            23095437,
            23098070,
            23097715,
            23102940,
            23099714,
            23102329,
            23100307
        ],
        "E": [
            23090983,
            23091838,
            23090400,
            23090385,
            23091224,
            23095595,
            23092637,
            23090974,
            23092694,
            23093218,
            23092131,
            23090847,
            23094473,
            23098598,
            23094014,
            23142601,
            23096689,
            23092749,
            23095909,
            23093965,
            23096216
        ],
        "C": [
            23089009,
            23086489,
            23093136,
            23087647,
            23090881,
            23086795,
            23086617,
            23094723,
            23086814,
            23087320,
            23089539,
            23108446,
            23092756,
            23088603,
            23090345,
            23087808,
            23091627
        ],
        "D": [
            23086805,
            23088293,
            23086244,
            23094627,
            23088889,
            23093685,
            23088867,
            23088313,
            23096227,
            23088723,
            23089318,
            23104824,
            23090867,
            23090879,
            23091937,
            23088754,
            23089647,
            23091296,
            23088886,
            23089358
        ],
        "B": [
            23084224,
            23084449,
            23084370,
            23084955,
            23085227,
            23087278,
            23084159,
            23084283,
            23090451,
            23083745,
            23084649,
            23085347,
            23084771,
            23089523,
            23085956,
            23085476,
            23085206,
            23084905,
            23085967
        ],
        "A": [
            23082169,
            23082385,
            23081947,
            23082691,
            23082163,
            23085385,
            23081965,
            23082429,
            23082420,
            23082009,
            23082118,
            23082810,
            23086953,
            23088467,
            23082662,
            23082884,
            23082308,
            23082652,
            23082888
        ]
    },
    "name": "A. Compote",
    "statement": "Nikolay has lemons, apples and pears. He decided to cook a compote.\r\nAccording to the recipe the fruits should be in the ratio . It means\r\nthat for each lemon in the compote should be exactly apples and exactly\r\npears. You can’t crumble up, break up or cut these fruits into pieces.\r\nThese fruits lemons, apples and pears should be put in the compote as\r\nwhole fruits.Your task is to determine the maximum total number of\r\nlemons, apples and pears from which Nikolay can cook the compote. It is\r\npossible that Nikolay can’t use any fruits, in this case print .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ld long double\n#define N ((ll)301*1000)\n#define INF ((ll)2e9)\n#define MOD ((ll)1e9+7)\nll tavan(ll x,ll y){ll res=1;while(y){res*=y%2?x:1;res%=MOD;x*=x;x%=MOD;y/=2;}return res;}\n\nll a,b,c,ans;\n\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);\n    cin>>a>>b>>c;\n    while(1)\n    {\n    \tif(a<1 || b<2 || c<4)break;\n    \ta-=1;\n    \tb-=2;\n    \tc-=4;\n    \tans+=7;\n\t}\n    \n    cout<<ans;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Compote.json",
    "editorial_link": "https://codeforces.com//blog/entry/49160",
    "editorial": "At first letâs calculate how many portions of stewed fruit (in one\r\nportion lemon, apples and pears) we can cook. This number equals to ,\r\nwhere is integer part of . After that we need to multiply this number of\r\n7, because there is 7 fruits in 1 portion, and print the result.\r\n",
    "hint": []
}