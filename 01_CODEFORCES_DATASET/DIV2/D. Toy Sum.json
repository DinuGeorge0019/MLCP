{
    "link": "https://codeforces.com//contest/405/problem/D",
    "problemId": "7385",
    "problem_idx": "D",
    "shortId": "405D",
    "contest_number": "405",
    "problem_submissions": {
        "C": [
            6115915,
            6109660,
            6110133,
            6110046,
            6111196,
            6113157,
            6113191,
            6111181,
            6110354,
            6110520,
            6111719,
            6111599,
            6110290,
            6110453,
            6111762,
            6111100,
            6110857
        ],
        "B": [
            6113263,
            6108172,
            6108709,
            6108763,
            6108097,
            6111258,
            6110081,
            6107735,
            6108477,
            6108386,
            6108872,
            6108648,
            6108353,
            6108714,
            6109837,
            6108107
        ],
        "A": [
            6110002,
            6106628,
            6106664,
            6106595,
            6106410,
            6109734,
            6107964,
            6106587,
            6106988,
            6106985,
            6107053,
            6107108,
            6106487,
            6106761,
            6106362,
            6106567
        ],
        "E": [
            6109575,
            6134220,
            6134212,
            6517207,
            6129138,
            6115449,
            6161534,
            6121533
        ],
        "D": [
            6111866,
            6112127,
            6117518,
            6112341,
            6112656,
            6109019,
            6121539,
            6112769,
            6113306,
            6112893,
            6112946,
            6113537,
            6114230,
            6114563,
            6113633,
            6113898,
            6114989
        ]
    },
    "name": "D. Toy Sum",
    "statement": "Little Chris is very keen on his toy blocks. His teacher, however, wants\r\nChris to solve more problems, so he decided to play a trick on\r\nChris.There are exactly blocks in Chris\u2019s set, each block has a unique\r\nnumber from 1 to . Chris\u2019s teacher picks a subset of blocks and keeps it\r\nto himself. He will give them back only if Chris can pick such a\r\nnon-empty subset from the remaining blocks, that the equality holds:\r\n\"Are you kidding me?\", asks Chris.For example, consider a case where and\r\nChris\u2019s teacher took the blocks with numbers 1, 4 and 5. One way for\r\nChris to choose a set is to pick the blocks with numbers 3 and 6, see\r\nfigure. Then the required sums would be equal: . However, now Chris has\r\nexactly blocks. Given the set of blocks his teacher chooses, help Chris\r\nto find the required set !\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define eps 1e-8\nusing namespace std;\nint d[1000100];\nint ans[1000100];\nint main()\n{\n\tint i,j,n,h=0,now;\n\tmemset(d,0,sizeof(d));\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\td[x]=1;\n\t}\n\tnow=1;\n\tfor(i=1;i<=1000000;i++)\n\t{\n\t\tif(d[i]==1&&d[1000001-i]==0)\n\t\t\tans[h++]=1000001-i;\n\t\tif(i<=500000&&d[i]==1&&d[1000001-i]==1)\n\t\t{\n\t\t\twhile(d[now]==1||d[1000001-now]==1)now++;\n\t\t\tans[h++]=now;\n\t\t\tans[h++]=1000001-now;\n\t\t\tnow++;\n\t\t}\n\n\t}\n\tsort(ans,ans+h);\n\tprintf(\"%d\\n\",h);\n\tfor(i=0;i<h;i++)\n\t{\n\t\tprintf(\"%d\",ans[i]);\n\t\tif(i==h-1)printf(\"\\n\");\n\t\telse printf(\" \");\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Toy Sum.json",
    "editorial_link": "https://codeforces.com//blog/entry/11186",
    "editorial": "Let's define the symmetric number of k to be s?+?1?-?k. Since in this case s is an even number, k???s?-?k.\n\nNote that (k?-?1)?+?(s?+?1?-?k)?=?s, i.e., the sum of a number and its symmetric is always s. Let's process the given members x of X. There can be two cases:\n\nIf the symmetric of x does not belong to X, we add it to Y. Both give equal values to the respective sums: x?-?1?=?s?-?(s?+?1?-?x).\nThe symmetric of x belongs to X. Then we pick any y that neither y and symmetric of y belong to X, and add them to Y. Both pairs give equal values to the respective sums, namely s.\nHow to prove that in the second step we can always find such y? Let the number of symmetric pairs that were processed in the step 1 be a, then there remain  other pairs. Among them, for  pairs both members belong to X, and for other  pairs none of the members belong to X. To be able to pick the same number of pairs for Y, as there are in X, we should have\n\n\nwhich is equivalent to , as given in the statement.\n\nSolution complexity: O(s)?/?O(n)."
}