{"link": "https://codeforces.com//contest/160/problem/B", "problemId": "975", "problem_idx": "B", "shortId": "160B", "contest_number": "160", "problem_submissions": {"E": [1302014, 1301400, 1301723, 1307282, 1307281], "C": [1300399, 1296100, 1297834, 1296838, 1295835, 1299587, 1298372, 1299856, 1297589, 1298396, 1305413, 1299188, 1297999, 1298453, 1300558, 1297702], "D": [1298476, 1301798, 1300820, 1302679, 1303700, 1303100, 1312626, 1301986, 1302012], "B": [1295207, 1297802, 1295947, 1295135, 1302419, 1297089, 1295596, 1298115, 1295467, 1296000, 1296940, 1295692, 1296028, 1296085, 1296588, 1295245], "A": [1294660, 1294871, 1294936, 1294584, 1302018, 1295798, 1294840, 1294601, 1294792, 1295753, 1294780, 1294924, 1351569, 1294961, 1294857, 1295932]}, "name": "B. Unlucky Ticket", "statement": "Each of you probably has your personal experience of riding public\r\ntransportation and buying tickets. After a person buys a ticket (which\r\ntraditionally has an number of digits), he usually checks whether the\r\nticket is lucky. Let us remind you that a ticket is lucky if the sum of\r\ndigits in its first half matches the sum of digits in its second\r\nhalf.But of course, not every ticket can be lucky. Far from it!\r\nMoreover, sometimes one look at a ticket can be enough to say right away\r\nthat the ticket is not lucky. So, let\u2019s consider the following that can\r\ndefinitely determine an unlucky ticket. We\u2019ll say that a ticket is\r\ndefinitely unlucky if each digit from the first half corresponds to some\r\ndigit from the second half so that each digit from the first half is\r\nthan the corresponding digit from the second one or each digit from the\r\nfirst half is than the corresponding digit from the second one. Each\r\ndigit should be used exactly once in the comparisons. In other words,\r\nthere is such between the digits of the first and the second half of the\r\nticket, that either each digit of the first half turns out than the\r\ncorresponding digit of the second half or each digit of the first half\r\nturns out than the corresponding digit from the second half.For example,\r\nticket meets the following unluckiness criterion and will not be\r\nconsidered lucky (the sought correspondence is and ), ticket also meets\r\nthe criterion (the sought correspondence is and ), and ticket does not\r\nmeet the criterion. You have a ticket in your hands, it contains digits.\r\nYour task is to check whether it meets the unluckiness criterion.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <climits>\n#include <numeric>\n#include <vector>\n#include <string>\nusing namespace std;\n\nint main() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tvector<int> a, b;\n\tfor (int i = 0; i < n * 2; ++i) {\n\t\tif (i < n)\n\t\t\ta.push_back(s[i] - '0');\n\t\telse\n\t\t\tb.push_back(s[i] - '0');\n\t}\n\tsort(a.begin(), a.end());\n\tsort(b.begin(), b.end());\n\n\tbool cmp = true;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (a[i] <= b[i])\n\t\t\tcmp = false;\n\t}\n\n\tif (cmp) {\n\t\tputs(\"YES\");\n\t\treturn 0;\n\t}\n\n\tcmp = true;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (a[i] >= b[i])\n\t\t\tcmp = false;\n\t}\n\n\tif (cmp) {\n\t\tputs(\"YES\");\n\t\treturn 0;\n\t}\n\n\tputs(\"NO\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "sortings"], "dificulty": "1100", "interactive": false}