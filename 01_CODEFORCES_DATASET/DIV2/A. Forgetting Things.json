{
    "link": "https://codeforces.com//contest/1247/problem/A",
    "problemId": "451060",
    "problem_idx": "A",
    "shortId": "1247A",
    "contest_number": "1247",
    "problem_submissions": {
        "F": [
            63516585,
            63498066,
            63531653,
            63484717
        ],
        "E": [
            63466015,
            63473982,
            63472756,
            63472587,
            63477513,
            63473125,
            63474516,
            63476526,
            63478680,
            63473858,
            63480958,
            63481550,
            63481519,
            63482376,
            63483256,
            63481801,
            63480736,
            63482911,
            63484993
        ],
        "D": [
            63458462,
            63452186,
            63464452,
            63462467,
            63461642,
            63462284,
            63469112,
            63466038,
            63465533,
            63467098,
            63466913,
            63532659,
            63458800,
            63469138,
            63466028,
            63518059,
            63471109,
            63471871,
            63471893,
            63472863,
            63468681
        ],
        "C": [
            63451842,
            63448915,
            63446524,
            63452894,
            63453210,
            63465192,
            63456520,
            63458388,
            63455590,
            63458932,
            63454282,
            63457733,
            63453216,
            63464210,
            63454777,
            63455424,
            63462076,
            63462168,
            63461001
        ],
        "B1": [
            63441028,
            63445773,
            63455031,
            63446312,
            63447577,
            63448362,
            63448931,
            63448486,
            63445824,
            63453830,
            63446861,
            63447193,
            63445847,
            63460715,
            63448295,
            63449973,
            63454578,
            63450726,
            63449807
        ],
        "B2": [
            63440055,
            63445491,
            63454826,
            63446019,
            63446936,
            63447440,
            63449345,
            63447899,
            63445385,
            63454155,
            63447268,
            63446929,
            63448203,
            63460143,
            63447809,
            63449173,
            63454319,
            63450374,
            63450053
        ],
        "A": [
            63437545,
            63439551,
            63452092,
            63445337,
            63447252,
            63440937,
            63439822,
            63438397,
            63438564,
            63453424,
            63437913,
            63439495,
            63438907,
            63456486,
            63442538,
            63445415,
            63444316,
            63440390,
            63439231
        ]
    },
    "name": "A. Forgetting Things",
    "statement": "Kolya is very absent-minded. Today his math teacher asked him to solve a\r\nsimple problem with the equation a + 1 = b with positive integers a and\r\nb, but Kolya forgot the numbers a and b. He does, however, remember that\r\nthe first (leftmost) digit of a was d_a, and the first (leftmost) digit\r\nof b was d_b.Can you reconstruct any equation a + 1 = b that satisfies\r\nthis property? It may be possible that Kolya misremembers the digits,\r\nand there is no suitable equation, in which case report so.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> void read(T &t) {\n\tt=0; char ch=getchar(); int f=1;\n\twhile (ch<'0'||ch>'9') { if (ch=='-') f=-1; ch=getchar(); }\n\tdo { (t*=10)+=ch-'0'; ch=getchar(); } while ('0'<=ch&&ch<='9'); t*=f;\n}\nint a,b;\nint main() {\n\t//freopen(\"1.txt\",\"r\",stdin);\n\tread(a); read(b);\n\tif (a==b) printf(\"%d0\\n%d1\\n\",a,b);\n\telse if (a+1==b) printf(\"%d9\\n%d0\\n\",a,b);\n\telse if (a==9&&b==1) printf(\"99\\n100\\n\");\n\telse printf(\"-1\\n\");\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Forgetting Things.json",
    "editorial_link": "https://codeforces.com//blog/entry/70898",
    "editorial": "The answer exists only if da=db\n, db=da+1\n, or da=9\n and db=1\n. Alternatively, one could simply check all a\n up to 100 (or another reasoable bound)."
}