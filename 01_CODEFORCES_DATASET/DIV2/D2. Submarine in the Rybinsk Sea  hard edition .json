{"link": "https://codeforces.com//contest/1195/problem/D2", "problemId": "373880", "problem_idx": "D2", "shortId": "1195D2", "contest_number": "1195", "problem_submissions": {"F": [57231940, 57228583, 57230665, 57230760, 57233707, 57236452, 57231972, 57234436, 57234600, 57238063, 57234775, 57310298, 57228874, 57290272, 57225125], "E": [57221608, 57223793, 57222513, 57225684, 57222906, 57215919, 57226202, 57226594, 57228678, 57225929, 57227306, 57224920, 57217658, 57221326, 57221813, 57226168, 57222930, 57258569, 57224143], "D1": [57217173, 57217670, 57213566, 57216495, 57217668, 57218460, 57220879, 57217890, 57215569, 57210215, 57222516, 57213030, 57213769, 57209778, 57215844, 57218863, 57212403, 57215924, 57215516, 57217529], "D2": [57216895, 57217496, 57213368, 57216364, 57217535, 57229402, 57220576, 57217862, 57215401, 57216742, 57222653, 57217606, 57213863, 57214793, 57215958, 57218634, 57215884, 57216070, 57229811, 57216866], "C": [57208411, 57206363, 57208350, 57208286, 57212089, 57204975, 57209742, 57209624, 57207426, 57206667, 57209966, 57209554, 57208702, 57205876, 57208547, 57209651, 57208031, 57210123, 57210767, 57209324], "B": [57206484, 57204728, 57206113, 57205986, 57206681, 57203895, 57206510, 57205624, 57205603, 57204561, 57207235, 57206451, 57206143, 57204517, 57206504, 57207159, 57205738, 57206747, 57207265], "A": [57203812, 57203699, 57205723, 57203885, 57204288, 57203645, 57204262, 57204010, 57204256, 57203704, 57203968, 57204725, 57203853, 57203719, 57204238, 57204466, 57203857, 57203680, 57204939, 57203939]}, "name": "D2. Submarine in the Rybinsk Sea  hard edition ", "statement": "A team of SIS students is going to make a trip on a submarine. Their\r\ntarget is an ancient treasure in a sunken ship lying on the bottom of\r\nthe Great Rybinsk sea. Unfortunately, the students don\u2019t know the\r\ncoordinates of the ship, so they asked Meshanya (who is a hereditary\r\nmage) to help them. He agreed to help them, but only if they solve his\r\nproblem.Let\u2019s denote a function that alternates digits of two numbers\r\nf(a_1 a_2\r\ndots a_{p - 1} a_p, b_1 b_2\r\ndots b_{q - 1} b_q), where a_1\r\ndots a_p and b_1\r\ndots b_q are digits of two integers written in the decimal notation\r\nwithout leading zeros.In other words, the function f(x, y) alternately\r\nshuffles the digits of the numbers x and y by writing them from the\r\nlowest digits to the older ones, starting with the number y. The result\r\nof the function is also built from right to left (that is, from the\r\nlower digits to the older ones). If the digits of one of the arguments\r\nhave ended, then the remaining digits of the other argument are written\r\nout. Familiarize with examples and formal definitions of the function\r\nbelow.For example: f(1111, 2222) = 12121212 f(7777, 888) = 7787878 f(33,\r\n44444) = 4443434 f(555, 6) = 5556 f(111, 2222) = 2121212Formally, if p\r\nge q then f(a_1\r\ndots a_p, b_1\r\ndots b_q) = a_1 a_2\r\ndots a_{p - q + 1} b_1 a_{p - q + 2} b_2\r\ndots a_{p - 1} b_{q - 1} a_p b_q; if p < q then f(a_1\r\ndots a_p, b_1\r\ndots b_q) = b_1 b_2\r\ndots b_{q - p} a_1 b_{q - p + 1} a_2\r\ndots a_{p - 1} b_{q - 1} a_p b_q. Mishanya gives you an array consisting\r\nof n integers a_i, your task is to help students to calculate\r\nsum_{i = 1}^{n}\r\nsum_{j = 1}^{n} f(a_i, a_j) modulo 998\r\n,244\r\n,353.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 100005;\nconst int mod = 998244353;\n\nint a[N], cnt[100], sz[N];\nLL pw[100];\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    pw[0] = 1;\n    for (int i = 1; i <= 30; i++) pw[i] = pw[i-1] * 10 % mod;\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", a+i);\n        sz[i] = 0;\n        int b = a[i];\n        while (b) {\n            sz[i]++;\n            b /= 10;\n        }\n        cnt[sz[i]]++;\n    }\n    LL res = 0;\n    for (int i = 1; i <= n; i++) {\n        int b = a[i];\n        int pos = 0;\n        while (b) {\n            int c = b % 10;\n            b /= 10;\n            pos++;\n            for (int j = 1; j <= 10; j++) {\n                if (j < pos) {\n                    res += c * cnt[j] * pw[pos+j-1];\n                }\n                else {\n                    res += c * cnt[j] * pw[(pos-1)*2];\n                }\n                if (j <= pos) {\n                    res += c * cnt[j] * pw[pos+j-1];\n                }\n                else {\n                    res += c * cnt[j] * pw[pos*2-1];\n                }\n                res %= mod;\n            }\n        }\n    }\n    printf(\"%lld\\n\", res);\n}"], "input": "", "output": "", "tags": ["combinatorics", "math", "number theory"], "dificulty": "1800", "interactive": false}