{
    "link": "https://codeforces.com//contest/686/problem/C",
    "problemId": "63499",
    "problem_idx": "C",
    "shortId": "686C",
    "contest_number": "686",
    "problem_submissions": {
        "E": [
            18753113
        ],
        "D": [
            18677363,
            18676926,
            18680203,
            18677096,
            18680500,
            18679262,
            18679726,
            18681134,
            18679340,
            18681235,
            18679151,
            18677262,
            18680852,
            18682604,
            18679420,
            18683508,
            18682836,
            18677654
        ],
        "C": [
            18674350,
            18674219,
            18675996,
            18670680,
            18674843,
            18676354,
            18677317,
            18674277,
            18676911,
            18677370,
            18678038,
            18675789,
            18677870,
            18675610,
            18676923,
            18681967
        ],
        "B": [
            18671047,
            18668588,
            18669725,
            18672830,
            18672620,
            18669882,
            18671172,
            18668900,
            18674893,
            18677911,
            18672621,
            18670139,
            18676902,
            18670149,
            18671650,
            18671701
        ],
        "A": [
            18669150,
            18667513,
            18667542,
            18673623,
            18668163,
            18667514,
            18669093,
            18667603,
            18674115,
            18677610,
            18668549,
            18667772,
            18667638,
            18667507,
            18667916,
            18669148
        ]
    },
    "name": "C. Robbers  watch",
    "statement": "Robbers, who attacked the Gerda\u2019s cab, are very successful in covering\r\nfrom the kingdom police. To make the goal of catching them even harder,\r\nthey use their own watches.First, as they know that kingdom police is\r\nbad at math, robbers use the positional numeral system . Second, they\r\ndivide one day in hours, and each hour in minutes. Personal watches of\r\neach robber are divided in two parts: first of them has the smallest\r\npossible number of places that is necessary to display any integer from\r\nto , while the second has the smallest possible number of places that is\r\nnecessary to display any integer from to . Finally, if some value of\r\nhours or minutes can be displayed using less number of places in base\r\nthan this watches have, the required number of zeroes is added at the\r\nbeginning of notation.Note that to display number section of the watches\r\nis required to have at least one place.Little robber wants to know the\r\nnumber of moments of time (particular values of hours and minutes), such\r\nthat all digits displayed on the watches are . Help her calculate this\r\nnumber.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint n,m,dn,dm;\nint dig(int x)\n{\n\tif(x==0)\n\t\treturn 1;\n\tint ans=0;\n\twhile(x)\n\t\t++ans,x/=7;\n\treturn ans;\n}\nint state(int x,int d)\n{\n\tint s=0;\n\tfor(int i=1;i<=d;++i,x/=7)\n\t{\n\t\tif(s&(1<<(x%7)))\n\t\t\treturn -1;\n\t\ts|=(1<<(x%7));\n\t}\n\treturn s;\n}\nint calc(int n,int m)\n{\n\tint ans=0;\n\tfor(int i=0;i<=n;++i)\n\t\tfor(int j=0;j<=m;++j)\n\t\t{\n\t\t\tint s1=state(i,dn),s2=state(j,dm);\n\t\t\tif(s1!=-1 && s2!=-1 && (s1&s2)==0)\n\t\t\t{\n\t\t\t\t//cout<<\"i=\"<<i<<\" j=\"<<j<<endl;\n\t\t\t\t++ans;\n\t\t\t}\n\t\t}\n\treturn ans;\n}\nint main()\n{\n\tcin>>n>>m;\n\t--n,--m;\n\tdn=dig(n);\n\tdm=dig(m);\n\tif(dn+dm>7)\n\t\tcout<<0<<endl;\n\telse\n\t\tcout<<calc(n,m)<<endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "combinatorics",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Robbers  watch.json",
    "editorial_link": "https://codeforces.com//blog/entry/45558",
    "editorial": "In this problem we use the septimal number system. It is a very important limitation. Let's count how many digits are showed on the watch display and call it cnt. If cnt more than 7, the answer is clearly 0 (because of pigeonhole principle). If cnt is not greater than 7, then you can just bruteforces all cases.\nDepending on the implementation it will be O(BASE?BASEBASE), O(BASEBASE) or O(BASE?BASE!), where BASE?=?7. Actually the most simple implementation is just to cycle between all posible hour:minute combinations and check them.\nIn the worst case, it will work in O(BASE?BASEBASE)."
}