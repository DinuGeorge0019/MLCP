{
    "link": "https://codeforces.com//contest/382/problem/C",
    "problemId": "5699",
    "problem_idx": "C",
    "shortId": "382C",
    "contest_number": "382",
    "problem_submissions": {
        "E": [
            5722079,
            5724986,
            5723752,
            5718812,
            5721924
        ],
        "D": [
            5718725,
            5717756,
            5717851,
            5717745,
            5719690,
            5714810,
            5721932,
            5720567,
            5722151,
            5717791,
            5721410,
            5720203,
            5719876,
            5721225
        ],
        "C": [
            5716710,
            5711942,
            5714271,
            5713299,
            5715983,
            5716064,
            5717488,
            5717351,
            5717548,
            5715922,
            5713490,
            5715750,
            5723505,
            5723844,
            5715400,
            5713682,
            5713980
        ],
        "B": [
            5715404,
            5715550,
            5712671,
            5715816,
            5713961,
            5713314,
            5719630,
            5714660,
            5714188,
            5714767,
            5717962,
            5712988,
            5721070,
            5713270,
            5717088,
            5718416,
            5713327,
            5716113,
            5717857
        ],
        "A": [
            5711555,
            5712570,
            5718543,
            5711489,
            5711959,
            5711620,
            5711695,
            5711887,
            5718283,
            5711414,
            5711584,
            5711421,
            5717859,
            5711558,
            5711377,
            5711567,
            5711709,
            5711919
        ]
    },
    "name": "C. Arithmetic Progression",
    "statement": "Everybody knows what an arithmetic progression is. Let us remind you\r\njust in case that an is such sequence of numbers of length , that the\r\nfollowing condition fulfills: For example, sequences [1, 5], [10], [5,\r\n4, 3] are arithmetic progressions and sequences [1, 3, 2], [1, 2, 4] are\r\nnot.Alexander has cards containing integers. Arthur wants to give\r\nAlexander exactly one more card with a number so that he could use the\r\nresulting cards to make an arithmetic progression (Alexander has to use\r\nall of his cards).Arthur has already bought a card but he hasn\u2019t written\r\na number on it. Help him, print all integers that you can write on a\r\ncard so that the described condition fulfilled.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint n;\nint a[200001];\nbool check(int d){\n\tfor(int i=1;i<n;++i) if(a[i]+d!=a[i+1]) return false;\n\treturn true;\n}\nbool answer(int d){\n\tint rec=-1;\n\tfor(int i=1;i<n;++i) if(a[i]+d!=a[i+1]){\n\t\tif(a[i]+2*d!=a[i+1]) return false;\n\t\telse{\n\t\t\tif(rec!=-1) return false;\n\t\t\trec=a[i]+d;\n\t\t}\n\t}\n\tprintf(\"1\\n%d\\n\",rec);\n\treturn true;\n}\nint main2(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",a+i);\n\t}\n\tif(n==1){\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tsort(a+1,a+n+1);\n\tif(a[1]==a[n]){\n\t\tprintf(\"1\\n%d\\n\",a[1]);\n\t\treturn 0;\n\t}\n\tint d=min(a[2]-a[1],a[n]-a[n-1]);\n\tif(check(d)){\n\t\tif(n!=2||(a[1]+a[n])%2!=0)printf(\"2\\n%d %d\\n\",a[1]-d,a[n]+d);\n\t\telse printf(\"3\\n%d %d %d\\n\",a[1]-d,(a[1]+a[n])/2,a[n]+d);\n\t\treturn 0;\n\t}\n\telse{\n\t\tif(!answer(d)) printf(\"0\\n\");\n\t}\n\treturn 0;\n}\nint main(){\n\tif(!main2()){\n\t\tscanf(\"%d\",&n);\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Arithmetic Progression.json",
    "editorial_link": "https://codeforces.com//blog/entry/10442",
    "editorial": "This problem is about considering cases: 1) If , the answer is -1.\r\nBecause of any two numbers is arithmetical progression.2) If array is\r\nconstant, the answer if that constant.3) If you have arithmetical\r\nprogression initially, you can compute its difference . In this case you\r\nshould just to output , and , where is minimum value among , and is\r\nmaximum value among . But in case of , also you should check . If this\r\nnumber is integer, it is needed to be output.4) Else, the answer has at\r\nmost one integer. You find this integer you should sort the sequence,\r\nand find the place where the number is missed. If such a place exists\r\nyou should add the corresponding number to the sequence, else, the\r\nanswer is .5) In all other cases the answer is .\r\n"
}