{"link": "https://codeforces.com//contest/1762/problem/F", "problemId": "1695275", "problem_idx": "F", "shortId": "1762F", "contest_number": "1762", "problem_submissions": {"F": [185360973, 185364441, 185372202, 185395910, 185621065, 185354232, 185332491, 185348264, 185360759, 197448951, 197448921], "E": [185344507, 185353525, 185341937, 185339289, 185344504, 185352316, 185360035, 185362208, 185365484, 185404755, 185370016, 185351528, 185364233, 185367555, 191848003, 185329145], "D": [185337625, 185342301, 185324406, 185313736, 185320476, 185336684, 185335575, 185333725, 185325437, 185329719, 185355407, 185334757, 185358794, 185354685, 185353510, 203219751, 203219727, 185328017, 185332700, 185327767], "C": [185322060, 185321446, 185314988, 185324570, 185312857, 185315091, 185320564, 185320295, 185330972, 185319388, 185342558, 185326201, 185316184, 185309915, 185362472, 185315926, 185312437, 185310609, 185320776], "B": [185304175, 185312988, 185302843, 185317620, 185309312, 185304849, 185311399, 185308703, 185304961, 185310615, 185338037, 185310014, 185310646, 185303730, 185343806, 185303744, 185303718, 185304581, 185309640], "A": [185300504, 185304250, 185300255, 185302050, 185306620, 185300445, 185302307, 185307731, 185300743, 185301230, 185335246, 185301137, 185300437, 185300430, 185322563, 185300790, 185300333, 185302002, 185301784], "G": [185409628, 185346613]}, "name": "F. Good Pairs ", "statement": "You are given an array a consisting of n integers and an integer k.A\r\npair (l,r) is if there exists a sequence of indices i_1, i_2,\r\ndots, i_m such that i_1=l and i_m=r; i_j < i_{j+1} for all 1\r\nleq j < m; and |a_{i_j}-a_{i_{j+1}}|\r\nleq k for all 1\r\nleq j < m. Find the number of pairs (l,r) (1\r\nleq l\r\nleq r\r\nleq n) that are .\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nint n ,k;\ntypedef long long ll;\nstruct node\n{\n    int l , r;\n    ll sum;\n    ll tag;\n}Node[100000 * 8 + 5];\nint a[500005];\nconst int R = 1e5;\nvoid pd(int u)\n{\n    if(-1 != Node[u].tag) {\n        Node[u<<1].tag = Node[u].tag ; Node[u<<1].sum = (Node[u<<1].r - Node[u<<1].l + 1) * Node[u].tag ;\n        Node[u<<1|1].tag = Node[u].tag ; Node[u<<1|1].sum = (Node[u<<1|1].r - Node[u<<1|1].l + 1) * Node[u].tag ;\n        Node[u].tag = -1;\n    }\n    return;\n}\nll query(int u,int l,int r)\n{\n    pd(u);\n    if(l <= Node[u].l && r >= Node[u].r) return Node[u].sum;\n    ll ans = 0;\n    if(l <= Node[u<<1].r) ans += query(u<<1 , l , r);\n    if(r >= Node[u<<1|1].l) ans += query(u<<1|1 ,l , r);\n    return ans;\n}\nvoid build(int u,int l,int r)\n{\n    Node[u].l = l , Node[u].r = r;Node[u].sum = 0; Node[u].tag = -1;\n    if(l == r) return;\n    build(u<<1 , l , (l + r >> 1));\n    build(u<<1|1 , (l + r >>1) + 1 , r);\n    return;\n}\nvoid modify(int u,int l,int r,ll v)\n{\n    pd(u);\n    if(l <= Node[u].l && r >= Node[u].r) {\n        Node[u].sum = v * (Node[u].r - Node[u].l + 1);\n        Node[u].tag = v;return;\n    }\n    if(l <= Node[u<<1].r) modify(u<<1 , l , r , v);\n    if(r >= Node[u<<1|1].l) modify(u<<1|1 , l , r , v);\n    Node[u].sum = Node[u<<1].sum + Node[u<<1|1].sum;\n    return;\n}\nvoid solve()\n{\n    scanf(\"%d%d\",&n,&k);\n    ll ans = 0;\n    for(int i = 1;i <= n;i++) scanf(\"%d\",&a[i])  ;\n    modify(1 , 1 , R , 0);\n  //  printf(\"pre ans %lld\\n\",ans);\n    for(int i = 1;i <= n;i++) {\n        ll sum = query(1 , max(1 , a[i] - k) , a[i]);\n        modify(1 , max(1 , a[i] - k) , a[i] , 0) ; modify(1 , a[i] , a[i] , sum + 1);\n        ans += query(1 , a[i] , R);\n       // printf(\"I %d %lld\\n\",i,sum);\n       // printf(\"after ans %lld\\n\",ans);\n    }\n    modify(1 , 1 , R , 0);\n    for(int i = 1;i <= n;i++) {\n        ll sum = query(1 , a[i] , min(R , a[i] + k));\n        modify(1 , a[i] , min(R , a[i] + k) , 0) ; modify(1 , a[i] , a[i] , sum + 1);\n        ans += query(1 , 1 , a[i]);\n       // printf(\"after2 %lld\\n\",ans);\n    }\n    ans -= 1LL*n*(n + 1) / 2;\n    printf(\"%lld\\n\",ans);\n}\nint main() {\n  //  freopen(\"in.txt\",\"r\",stdin);\n    build(1 , 1 , R);\n    int t;scanf(\"%d\",&t);\n    while(t--) solve();\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "dp"], "dificulty": "2600", "interactive": false}