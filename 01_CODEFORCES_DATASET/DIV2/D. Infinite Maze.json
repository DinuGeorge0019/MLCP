{
    "link": "https://codeforces.com//contest/197/problem/D",
    "problemId": "1432",
    "problem_idx": "D",
    "shortId": "197D",
    "contest_number": "197",
    "problem_submissions": {
        "E": [
            1791268,
            1802740,
            1802736,
            1795426
        ],
        "C": [
            1788910,
            1789269,
            1789264,
            1788938,
            1788924,
            1790933,
            1791154,
            1789450,
            1802730,
            1789405,
            1789447,
            1788838,
            1790005,
            1788746,
            1790181
        ],
        "B": [
            1788528,
            1788680,
            1789600,
            1788527,
            1790011,
            1789032,
            1788888,
            1788636,
            1788195,
            1802729,
            1788848,
            1790689,
            1795848,
            1788783,
            1791951,
            1789313
        ],
        "A": [
            1788079,
            1787820,
            1787632,
            1787687,
            1787891,
            1787887,
            1788039,
            1787844,
            1789322,
            1802727,
            1791494,
            1791478,
            1788291,
            1788862,
            1792369
        ],
        "D": [
            1790975,
            1793898,
            1793489,
            1794292,
            1794595,
            1794900,
            1792868,
            1794686,
            1795625,
            1795183,
            1792703,
            1794330,
            1795844,
            1794780,
            1795863
        ]
    },
    "name": "D. Infinite Maze",
    "statement": "Weâ€™ve got a rectangular -cell maze. Each cell is either passable, or is\r\na wall (impassable). A little boy found the maze and cyclically tiled a\r\nplane with it so that the plane became an infinite maze. Now on this\r\nplane cell is a wall if and only if cell is a wall.In this problem is a\r\nremainder of dividing number by number .The little boy stood at some\r\ncell on the plane and he wondered whether he can walk infinitely far\r\naway from his starting position. From cell he can go to one of the\r\nfollowing cells: , , and , provided that the cell he goes to is not a\r\nwall.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\nconst int dx[4]={1,-1,0,0};\nconst int dy[4]={0,0,1,-1};\nconst int z=1555;\nbool pp[z][z];\nint px[z][z],py[z][z];\nchar s[z][z];\nstruct tw{\n\tint x,y;\n} que[z*z];\nchar charget(){\n\tchar a;\n\tdo a=getchar(); while (a!='#' && a!='.' && a!='S');\n\treturn a;\n}\nint main(){\n\tint n,m,i,j,l,r,nx,ny,xp,yp;\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(pp,false,sizeof pp);\n\tfor (i=1;i<=n;i++){\n\t\tfor (j=1;j<=m;j++){\n\t\t\ts[i][j]=charget();\n\t\t\tif (s[i][j]=='S'){\n\t\t\t\tque[0].x=i;\n\t\t\t\tque[0].y=j;\n\t\t\t\tpx[i][j]=py[i][j]=0;\n\t\t\t\tpp[i][j]=true;\n\t\t\t}\n\t\t}\n\t}\n\tfor (l=r=0;l<=r;l++){\n\t\tfor (i=0;i<4;i++){\n\t\t\tnx=que[l].x+dx[i];\n\t\t\tny=que[l].y+dy[i];\n\t\t\txp=px[que[l].x][que[l].y];\n\t\t\typ=py[que[l].x][que[l].y];\n\t\t\tif (nx==0){\n\t\t\t\tnx=n;\n\t\t\t\txp++;\n\t\t\t}\n\t\t\tif (nx==n+1){\n\t\t\t\tnx=1;\n\t\t\t\txp--;\n\t\t\t}\n\t\t\tif (ny==0){\n\t\t\t\tny=m;\n\t\t\t\typ++;\n\t\t\t}\n\t\t\tif (ny==m+1){\n\t\t\t\tny=1;\n\t\t\t\typ--;\n\t\t\t}\n\t\t\tif (!pp[nx][ny]){\n\t\t\t\tif (s[nx][ny]!='#'){\n\t\t\t\t\tpp[nx][ny]=true;\n\t\t\t\t\tpx[nx][ny]=xp;\n\t\t\t\t\tpy[nx][ny]=yp;\n\t\t\t\t\tque[++r].x=nx;\n\t\t\t\t\tque[r].y=ny;\n\t\t\t\t}\n\t\t\t} else{\n\t\t\t\tif (xp!=px[nx][ny] || yp!=py[nx][ny]){\n\t\t\t\t\tputs(\"Yes\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"No\");\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "graphs",
        "hashing"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Infinite Maze.json",
    "editorial_link": "https://codeforces.com//blog/entry/4717",
    "editorial": "Answer is \"Yes\" iff there are two distinct, reachable from start position cells, which correspond to same cell in initial labyrinth.\n\nProof: If these cells exist, move to first of them, and infinitely repeat moves leading from first to second. On the contrary, if infinite far path exist, on this path we obviously can find such cells.\n\nHow to find out if they exist? Start DFS from initial cell. For each cell visited, let visit[x%n][y%m]?=?(x,?y). Now, if DFS tries to go to cell (x,?y), visit[x%n][y%m] contains something, and (x,?y)???visit[x%n][y%m], we found these cells: they are (x,?y) and visit[x%n][y%m]. Notice that DFS will visit no more than nm?+?1 cells (Dirichlet's principle). So the asymptotic is O(nm).",
    "hint": []
}