{"link": "https://codeforces.com//contest/518/problem/E", "problemId": "22990", "problem_idx": "E", "shortId": "518E", "contest_number": "518", "problem_submissions": {"C": [9988883, 9986333, 9990862, 9987399, 9998129, 9989956, 9985416, 9991301, 9988773, 9987777, 9986792, 9990874, 9996855, 9993083, 9991646, 9993492, 9989796], "B": [9986603, 9991969, 9985412, 9984010, 9991935, 9983836, 9985675, 9984464, 9984814, 9987730, 9987512, 9987182, 9990867, 9988157, 9985156, 9986048], "D": [9984146, 9987656, 9983589, 9996581, 9988389, 9983991, 10019512, 9994388, 9990798, 9998733, 9989910, 9992602, 9994055, 9988668, 9997395, 9994329, 10003029], "A": [9982691, 9984919, 9983532, 9982857, 9984890, 9982599, 9983377, 9983139, 9982876, 10006211, 9984273, 10016035, 9996459, 9986695, 9983905], "F": [9995207, 10007934], "E": [10000287, 10002761, 10005947, 10001378, 9999399, 10002023, 10011774]}, "name": "E. Arthur and Questions", "statement": "After bracket sequences Arthur took up number theory. He has got a new\r\nfavorite sequence of length (, consisting of integers and integer , not\r\nexceeding .This sequence had the following property: if you write out\r\nthe sums of all its segments consisting of consecutive elements , then\r\nthose numbers will form strictly increasing sequence.For example, for\r\nthe following sample: the sequence of numbers will look as follows: () =\r\n(), that means that sequence meets the described property. Obviously the\r\nsequence of sums will have elements.Somebody (we won\u2019t say who) replaced\r\nsome numbers in Arthur\u2019s sequence by question marks (if this number is\r\nreplaced, it is replaced by exactly one question mark). We need to\r\nrestore the sequence so that it meets the required property and also\r\nminimize the sum , where is the absolute value of .\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define\tst first\n#define\tnd second\n#define\tmp make_pair\n#define\tpb push_back\n#define\tlli long long int\n#define\tall( gg )\tgg.begin(),gg.end()\n#define\tforeach( gg,itit )\tfor( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )\n#define\tFP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )\n#define\tFM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )\n#define\tdebug(ccc)\tcout << #ccc << \" = \" << ccc << endl;\n\n#define\tmod\t1000000007LL\n#define\tinf\t2000000000LL\n\n#define\tNOSOL\treturn\tcout << \"Incorrect sequence\" << endl,0;\n\nusing namespace std;\n\nvector< pair<lli,lli> >\tv;\n\nlli\tn,k,h[200000];\n\npair<lli,lli>\tarr[300000];\n\nlli\tres[300000];\n\nint main(){\n\n\tcin >> n >> k;\n\n\tchar\ts[50];\n\tFP( i,1,n ){\n\t\tscanf(\"%s\",s+1);\n\t\tif( strcmp(s+1,\"?\")==0 ){\n\t\t\tarr[i] = mp(1,1);\n\t\t\tcontinue;\n\t\t}\n\t\tarr[i] = mp( 0,atoi( s+1 ) );\n\t\tres[i] = arr[i].nd;\n\t}\n\n\tvector<lli>\ttemp;\n\n\tFP( U,1,k ){\n\t\tint\tK = U;\n\t\tv.clear();\n\t\tv.pb( mp( 0,-inf ) );\n\t\twhile( K<=n ){\n\t\t\tv.pb( arr[K] );\n\t\t\tK += k;\n\t\t}\n\t\tv.pb( mp( 0,+inf ) );\n\t\tlli\tlast = -inf-1;\n\t\tFP( i,0,v.size()-1 ){\n\t\t\tif( v[i].st==0 ){\n\t\t\t\tif( v[i].nd<=last ){\n\t\t\t\t\tNOSOL;\n\t\t\t\t}\n\t\t\t\tlast = v[i].nd;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint j = i;\n\t\t\twhile( v[j+1].st==1 )\tj++;\n\t\t\tint\ttempjj=j;\n\t\t\tlli\talt = last+1,ust = v[j+1].nd-1;\n\t\t\tif( ust-alt<j-i )\tNOSOL;\n\t\t\tif( ust<=0 ){\n\t\t\t\tlast = ust;\n\t\t\t\twhile( j>=i ){\n\t\t\t\t\tres[(j*k-k)+U] = ust;\n\t\t\t\t\tust--;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\tif( alt>=0 ){\n\t\t\t\tust = alt+j-i;\n\t\t\t\tlast = ust;\n\t\t\t\twhile( j>=i ){\n\t\t\t\t\tres[(j*k-k)+U] = ust;\n\t\t\t\t\tust--;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttemp.clear();\n\t\t\t\ttemp.pb( 0 );\n\t\t\t\tint\tbas=-1,son=1;\n\t\t\t\tFP( ttt,1,j-i ){\n\t\t\t\t\tif( alt<=bas and (abs(bas)<=abs(son) or ust<son) )\ttemp.pb( bas-- );\n\t\t\t\t\telse\ttemp.pb( son++ );\n\t\t\t\t}\n\t\t\t\tsort( all(temp) );\n\t\t\t\tlast = temp.back();\n\t\t\t\twhile( j>=i ){\n\t\t\t\t\tres[j*k-k+U] = temp.back();\n\t\t\t\t\ttemp.pop_back();\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = tempjj;\n\t\t}\n\t}\n\n\tFP( i,1,n )\tprintf(\"%lld \",res[i]);\n\tcout << endl;\n\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "math", "ternary search"], "dificulty": "2200", "interactive": false}