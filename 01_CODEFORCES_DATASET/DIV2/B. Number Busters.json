{
    "link": "https://codeforces.com//contest/382/problem/B",
    "problemId": "5698",
    "problem_idx": "B",
    "shortId": "382B",
    "contest_number": "382",
    "problem_submissions": {
        "E": [
            5722079,
            5724986,
            5723752,
            5718812,
            5721924
        ],
        "D": [
            5718725,
            5717756,
            5717851,
            5717745,
            5719690,
            5714810,
            5721932,
            5720567,
            5722151,
            5717791,
            5721410,
            5720203,
            5719876,
            5721225
        ],
        "C": [
            5716710,
            5711942,
            5714271,
            5713299,
            5715983,
            5716064,
            5717488,
            5717351,
            5717548,
            5715922,
            5713490,
            5715750,
            5723505,
            5723844,
            5715400,
            5713682,
            5713980
        ],
        "B": [
            5715404,
            5715550,
            5712671,
            5715816,
            5713961,
            5713314,
            5719630,
            5714660,
            5714188,
            5714767,
            5717962,
            5712988,
            5721070,
            5713270,
            5717088,
            5718416,
            5713327,
            5716113,
            5717857
        ],
        "A": [
            5711555,
            5712570,
            5718543,
            5711489,
            5711959,
            5711620,
            5711695,
            5711887,
            5718283,
            5711414,
            5711584,
            5711421,
            5717859,
            5711558,
            5711377,
            5711567,
            5711709,
            5711919
        ]
    },
    "name": "B. Number Busters",
    "statement": "Arthur and Alexander are number busters. Today they\u2019ve got a\r\ncompetition. Arthur took a group of four integers and Alexander took\r\ninteger . Arthur and Alexander use distinct approaches to number\r\nbustings. Alexander is just a regular guy. Each second, he subtracts one\r\nfrom his number. In other words, he performs the assignment: . Arthur is\r\na sophisticated guy. Each second Arthur performs a complex operation,\r\ndescribed as follows: if , perform the assignment , if , then perform\r\ntwo consecutive assignments .You\u2019ve got numbers . Determine when\r\nAlexander gets ahead of Arthur if both guys start performing the\r\noperations at the same time. Assume that Alexander got ahead of Arthur\r\nif .\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\nint t[10001];\nint C[10001];\nint v[10001];\nint a,b,x,w,c,times,st;\nbool check(long long x){\n\tlong long y=x/(times-st);\n\tx=x%(times-st);\n\tlong long z=a-y*(C[times]-C[st]),zz=c-y*(times-st);\n\tif(zz<=z) return true;\n\tfor(int i=1;i<=x;++i){\n\t\tif(C[st+i]!=C[st+i-1]) --z;\n\t\t--zz;\n\t\tif(zz<=z) return true;\n\t}\n\treturn false;\n}\nint main(){\n    scanf(\"%d%d%d%d%d\",&a,&b,&w,&x,&c);\n    int bb=b;\n    v[b]=1;\n    t[1]=b;\n    for(times=2;;++times){\n\t\tif(bb>=x) bb-=x,C[times]=C[times-1];\n\t\telse bb=w-(x-bb),C[times]=C[times-1]+1;\n\t\tt[times]=bb;\n\t\tif(!v[bb]) v[bb]=times;\n\t\telse {st=v[bb];break;}\n    }\n//    times=10000;\n    for(int i=1;i<times;++i){\n\t\tif(c<=a){printf(\"%d\\n\",i-1);return 0;}\n\t\tif(b>=x) b-=x;\n\t\telse --a,b=w-(x-b);\n\t\t--c;\n\t}\n\tif(c<=a){printf(\"%d\\n\",times-1);return 0;}\n\tlong long lans=0,rans=~0ULL>>2;\n\twhile(lans+1!=rans){\n\t\tlong long mid=(lans+rans)/2;\n\t\tif(check(mid)) rans=mid;\n\t\telse lans=mid;\n\t}\n\tstd::cout<<lans+times<<std::endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Number Busters.json",
    "editorial_link": "https://codeforces.com//blog/entry/10442",
    "editorial": "In the problem you should understand, what is the structure of Artur\u00e2\u0080\u0099s\r\noperation. You can see that this operation is near operation\r\n"
}