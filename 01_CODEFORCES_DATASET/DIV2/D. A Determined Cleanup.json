{
    "link": "https://codeforces.com//contest/934/problem/D",
    "problemId": "156726",
    "problem_idx": "D",
    "shortId": "934D",
    "contest_number": "934",
    "problem_submissions": {
        "A": [
            35248428,
            35231058,
            35230470,
            35230697,
            35230343,
            35234240,
            35232331,
            35232107,
            35230781,
            35230297,
            35230349,
            35230283,
            35230659,
            35230854,
            35280265,
            35242684,
            35233133,
            35251876
        ],
        "B": [
            35242705,
            35232814,
            35231912,
            35232565,
            35251131,
            35241536,
            35234192,
            35240461,
            35237149,
            35232550,
            35232144,
            35246650,
            35232930,
            35233805,
            35233953,
            35231813,
            35234231,
            35250913
        ],
        "C": [
            35241342,
            35241471,
            35238580,
            35239228,
            35237684,
            35252292,
            35240488,
            35249650,
            35240924,
            35239960,
            35245016,
            35243194,
            35245213,
            35243098,
            35238905,
            35245602,
            35249363
        ],
        "D": [
            35232998,
            35253675,
            35246613,
            35246863,
            35244338,
            35256850,
            35245353,
            35256555,
            143600768,
            35250204,
            35251357,
            35239274,
            35250654,
            35250921,
            35249705,
            35252640,
            35249882,
            35236823
        ],
        "E": [
            35339836,
            35278991,
            35272612
        ]
    },
    "name": "D. A Determined Cleanup",
    "statement": "Little Tommy finds an old polynomial and cleaned it up by taking it\r\nmodulo another. But now he regrets doing this...Given two integers and ,\r\nfind a polynomial with non-negative integer coefficients strictly less\r\nthan , whose remainder is when divided by . That is, , where is a\r\npolynomial (not necessarily with integer coefficients).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nlong long i,p,k,t,l,a[999];\nint main()\n{\n\tscanf(\"%lld%lld\",&p,&k);\n\tfor(;p;a[++l]=t)\n\t{\n\t\tt=p%(-k),p/=-k;\n\t\tif(t<0)t+=k,++p;\n\t}\n\tprintf(\"%lld\\n\",l);\n\tfor(i=1;i<=l;++i)\n\t\tprintf(\"%lld \",a[i]);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. A Determined Cleanup.json",
    "editorial_link": "https://codeforces.com//blog/entry/57763",
    "editorial": "For simplicity's sake, we present a rather intuitive approach rather than a rigorous proof (can be obtained by induction).\n\nFor a given polynomial f(x), what's its remainder taken modulo (x?+?k)?\n\nLet f(x)?=?q(x)·(x?+?k)?+?p. Let\n\n\nSimulating the process of polynomial long division f(x) divided by (x?+?k), we get\n\n\nTry it yourself! A simple pattern emerges from the results. Let's take a closer look!\n\np?=?a0?+?(?-?k)·a1?+?...?+?(?-?k)d·ad\nAnd there's another constraint: 0???ai?<?k.\n\nBase negative k, that's it! The coefficients a0,?a1,?...,?ad is the base ?-?k representation of p. It surely exists, and is unique! We can also deduce that , which is why there is no constraint on the output d.\n\nIf you aren't familiar with negative bases, please refer to Wikipedia. But that doesn't matter! You may as well come up with an algorithm for converting to negative bases on your own. For an example, refer to the Calculation section in the aforementioned page.",
    "hint": []
}