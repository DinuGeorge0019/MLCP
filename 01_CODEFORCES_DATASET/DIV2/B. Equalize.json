{"link": "https://codeforces.com//contest/1928/problem/B", "problemId": "2471774", "problem_idx": "B", "shortId": "1928B", "contest_number": "1928", "problem_submissions": {"F": [245849503, 245993896], "E": [245824555, 245829499, 245832784, 245834485, 245833902, 245835921, 245834370, 245835347, 245835219, 245878440, 245832600, 245836538, 245836332, 245838032, 245837628, 245837711, 245841209, 245841102, 245837376], "D": [245815421, 245816606, 245823987, 245822097, 245824145, 245822460, 245824462, 245825936, 245821079, 245821563, 245828692, 245822407, 245826293, 245826843, 245826081, 245825495, 245820103, 245826303, 245826059], "C": [245806250, 245805820, 245813391, 245810753, 245811757, 245812438, 245811596, 245812971, 245811199, 245809118, 245814024, 245811562, 245813546, 245818219, 245816512, 245809891, 245812032, 245816988], "B": [245796420, 245797249, 245798962, 245800253, 245800069, 245802494, 245798634, 245800445, 245804185, 245802239, 245797030, 245802272, 245799479, 245799473, 245800524, 245801423, 245801226, 245803227], "A": [245794304, 245796660, 245795167, 245796391, 245796735, 245797061, 245794273, 245795174, 245794810, 245794175, 245794231, 245794283, 245796446, 245794415, 245795633, 245796529, 245795529, 245797383]}, "name": "B. Equalize", "statement": "Vasya has two hobbies adding permutations^{\r\ndagger} to arrays and finding the most frequently occurring element.\r\nRecently, he found an array a and decided to find out the maximum number\r\nof elements equal to the same number in the array a that he can obtain\r\nafter adding some permutation to the array a.More formally, Vasya must\r\nchoose exactly one permutation p_1, p_2, p_3,\r\nldots, p_n of length n, and then change the elements of the array a\r\naccording to the rule a_i := a_i + p_i. After that, Vasya counts how\r\nmany times each number occurs in the array a and takes the maximum of\r\nthese values. You need to determine the maximum value he can obtain.^{\r\ndagger}A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray).\r\n", "solutions": ["#include<bits/stdc++.h>\n\nint main() {\n        std::cin.tie(nullptr)->sync_with_stdio(false);\n\n        int t;\n        std::cin >> t;\n        while (t--) {\n                int n;\n                std::cin >> n;\n                std::vector<int> a(n);\n                for (auto& i : a) std::cin >> i;\n                std::sort(a.begin(), a.end());\n                a.resize(std::unique(a.begin(), a.end()) - a.begin());\n                int ans = 0;\n                for (int i = 0; i < a.size(); ++i) {\n                        ans = std::max(ans, (int)(std::upper_bound(a.begin(), a.end(), a[i] + n - 1) - a.begin() - i));\n                }\n                std::cout << ans << '\\n';\n        }\n}"], "input": "", "output": "", "tags": ["binary search", "greedy", "sortings", "two pointers"], "dificulty": "1200", "interactive": false}