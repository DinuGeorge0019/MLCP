{"link": "https://codeforces.com//contest/629/problem/A", "problemId": "48976", "problem_idx": "A", "shortId": "629A", "contest_number": "629", "problem_submissions": {"E": [16243210, 16242894, 16246160, 16254693, 16246007, 16245862, 16244672, 16242439, 16242471, 16258760, 16243275, 16248006], "C": [16240352, 16245370, 16241705, 16242440, 16239928, 16244882, 16239964, 16237682, 16237279, 16238555, 16240653, 16241020, 16238564, 16239658, 16239634], "D": [16239018, 16239572, 16235953, 16238851, 16241535, 16240168, 16238831, 16236923, 16236354, 16239430, 16240177, 16240027, 16239268, 16236114, 16247725, 16240713, 16264201, 16261091, 16260254, 16241789], "B": [16234677, 16235476, 16237727, 16234525, 16235367, 16236730, 16234379, 16237767, 16237135, 16233315, 16234172, 16233262, 16234095, 16233764, 16235011, 16233668], "A": [16232727, 16233109, 16236608, 16232783, 16233137, 16233465, 16232870, 16238509, 16232645, 16232640, 16233626, 16232665, 16232698, 16232767, 16233370, 16232800]}, "name": "A. Far Relative\u2019s Birthday Cake", "statement": "Door\u2019s family is going celebrate Famil Doors\u2019s birthday party. They love\r\nFamil Door so they are planning to make his birthday cake weird!The cake\r\nis a square consisting of equal squares with side length . Each square\r\nis either empty or consists of a single chocolate. They bought the cake\r\nand randomly started to put the chocolates on the cake. The value of\r\nFamil Door\u2019s happiness will be equal to the number of pairs of cells\r\nwith chocolates that are in the same row or in the same column of the\r\ncake. Famil Doors\u2019s family is wondering what is the amount of happiness\r\nof Famil going to be?Please, note that any pair can be counted no more\r\nthan once, as two different cells can\u2019t share both the same row and the\r\nsame column.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n#define pb push_back\n#define ll long long\n#define mp make_pair\n#define f first\n#define s second\n#define pii pair < int, int >\n#define pll pair < ll, ll >\n#define all(s) s.begin(), s.end()\n#define sz(s) (int) s.size()\n#define vi vector < int >\n\nconst int inf = (int)1e9;\nconst int mod = (int) 1e9 + 7;\n\nint n;\nstring s[1111];\n\nint main () {\n    #ifdef LOCAL\n    freopen (\"a.in\", \"r\", stdin);\n    freopen (\"a.out\", \"w\", stdout);\n    #endif\n    cin >> n;\n    for(int i = 0; i < n; i++){\n    \tcin >> s[i];\n    }\n    int ans = 0;\n    for(int i = 0; i < n; i++){\n    \tint cnt= 0;\n    \tfor(int j = 0; j < n; j++){\n    \t\tif(s[i][j] == 'C') cnt++;\n    \t}\n    \tans += cnt * (cnt - 1)/2;\n    }\n    for(int i = 0; i < n; i++){\n    \tint cnt= 0;\n    \tfor(int j = 0; j < n; j++){\n    \t\tif(s[j][i] == 'C') cnt++;\n    \t}\n    \tans += cnt * (cnt - 1)/2;\n    }\n    cout << ans << endl;\n    \n\n\n    #ifdef LOCAL\n    cerr << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\n    #endif\n    return 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation"], "dificulty": "800", "interactive": false}