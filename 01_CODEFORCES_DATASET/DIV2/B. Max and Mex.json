{"link": "https://codeforces.com//contest/1496/problem/B", "problemId": "920581", "problem_idx": "B", "shortId": "1496B", "contest_number": "1496", "problem_submissions": {"F": [109600097, 109581929, 109701845, 109708534], "E": [109587933, 109610222, 109608454, 109612058, 109612949, 109605701, 109611256, 109601895, 109607479, 109590869, 109581873, 109617376, 109612836, 109603776, 109607771, 109615091, 109621693, 109607007, 109612110], "D": [109574269, 109586906, 109615783, 109591994, 109595781, 109595004, 109597342, 109595134, 109597199, 109607603, 109613355, 109601453, 109603848, 109608996, 109594798, 109603592, 109595206, 109599096, 109606151], "C": [109563290, 109569588, 109622116, 109569355, 109568236, 109577979, 109569127, 109575607, 109576268, 109595113, 109564920, 109572405, 109579560, 109574270, 109579379, 109566209, 109579522, 109590691, 109576003], "B": [109560788, 109561989, 109564644, 109562884, 109568206, 109558921, 109564927, 109564756, 109563955, 109591099, 109565717, 109571876, 109565751, 109575174, 110006204, 109577208, 109569275, 109582678, 109569576], "A": [109557542, 109557346, 109557850, 109557700, 109558786, 109562504, 109557384, 109557861, 109558109, 109557501, 109558770, 109559819, 109560297, 109564819, 110006201, 109569370, 109558966, 109557973, 109559619]}, "name": "B. Max and Mex", "statement": "You are given a multiset S initially consisting of n distinct\r\nnon-negative integers. A multiset is a set, that can contain some\r\nelements multiple times.You will perform the following operation k\r\ntimes: Add the element\r\nlceil\r\nfrac{a+b}{2}\r\nrceil (rounded up) into S, where a =\r\noperatorname{mex}(S) and b =\r\nmax(S). If this number is already in the set, it is added again. Here\r\noperatorname{max} of a multiset denotes the maximum integer in the\r\nmultiset, and\r\noperatorname{mex} of a multiset denotes the smallest non-negative\r\ninteger that is not present in the multiset. For example:\r\noperatorname{mex}(\r\n{1,4,0,2\r\n})=3;\r\noperatorname{mex}(\r\n{2,5,1\r\n})=0. Your task is to calculate the number of elements in S after k\r\noperations will be done.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\ntypedef long long ll;\nconst int N=100005;\nint n,k,a[N],T;\nmap<int,int>flag;\nint main(){\n\tcin>>T;\n\twhile (T--){\n\t\tcin>>n>>k;\n\t\tfor (int i=1;i<=n;i++)cin>>a[i];\n\t\tif (!k){\n\t\t\tprintf(\"%d\\n\",n);\n\t\t\tcontinue;\n\t\t}\n\t\tsort(a+1,a+n+1);\n\t\tint mex=0,Max=0;\n\t\tfor (int i=1;i<=n;i++)flag[a[i]]=1,Max=max(Max,a[i]);\n\t\twhile (flag[mex])mex++;\n\t\tif (mex>Max)printf(\"%d\\n\",n+k);\n\t\telse if (!flag[(mex+Max+1)/2])printf(\"%d\\n\",n+1);\n\t\telse printf(\"%d\\n\",n);\n\t\tfor (int i=1;i<=n;i++)flag[a[i]]=0;\n\t}\n}\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "1100", "interactive": false}