{
    "link": "https://codeforces.com//contest/1333/problem/A",
    "problemId": "586753",
    "problem_idx": "A",
    "shortId": "1333A",
    "contest_number": "1333",
    "problem_submissions": {
        "E": [
            75896339,
            75896565,
            75977605,
            75896691,
            75897517,
            75909706,
            75903789,
            75909595,
            75887158,
            75892751,
            75911705,
            75893605,
            75903871,
            75907577,
            75907287,
            75905980,
            75911364,
            102357635
        ],
        "F": [
            75886038,
            75883944,
            75977662,
            75881660,
            75879950,
            75880078,
            75883983,
            75889261,
            75893323,
            75897108,
            75891281,
            75909072,
            75894697,
            75898619,
            75885706,
            75889606,
            75886207,
            75876954,
            75881193
        ],
        "D": [
            75864744,
            75869369,
            75977526,
            75869421,
            75870061,
            75872281,
            75875027,
            75874985,
            75876429,
            75882167,
            75873219,
            75876350,
            75881516,
            75880068,
            75879600,
            75883836,
            75901469,
            75865548,
            75870511
        ],
        "C": [
            75852521,
            75859230,
            75977465,
            75850790,
            75858133,
            75853774,
            75862591,
            75860649,
            75860611,
            75873215,
            75852933,
            75864634,
            75853173,
            75865167,
            75868921,
            75862158,
            75875332,
            75854728,
            75853080
        ],
        "B": [
            75848076,
            75848553,
            75977412,
            75847691,
            75848476,
            75846675,
            75848813,
            75851794,
            75895723,
            75859034,
            75846157,
            75848508,
            75884037,
            75854691,
            75852331,
            75853099,
            75848989,
            75850255,
            75846775
        ],
        "A": [
            75845195,
            75845040,
            75977221,
            75844826,
            75845093,
            75844889,
            75845001,
            75846626,
            75847661,
            75851327,
            75844724,
            75845218,
            75845746,
            75850998,
            75847105,
            75848789,
            75855160,
            75846223,
            75844893
        ]
    },
    "name": "A. Little Artem",
    "statement": "Young boy Artem tries to paint a picture, and he asks his mother Medina\r\nto help him. Medina is very busy, that’s why she asked for your\r\nhelp.Artem wants to paint an n\r\ntimes m board. Each cell of the board should be colored in white or\r\nblack. Lets B be the number of black cells that have at least one white\r\nneighbor adjacent by the side. Let W be the number of white cells that\r\nhave at least one black neighbor adjacent by the side. A coloring is\r\ncalled if B = W + 1. The first coloring shown below has B=5 and W=4 (all\r\ncells have at least one neighbor with the opposite color). However, the\r\nsecond coloring is not as it has B=4, W=4 (only the bottom right cell\r\ndoesn’t have a neighbor with the opposite color). Please, help Medina to\r\nfind any coloring. It’s guaranteed that under given constraints the\r\nsolution always exists. If there are several solutions, output any of\r\nthem.\r\n",
    "solutions": [
        "#include <iostream>\n\nusing namespace std;\n\n#define MIN(a, b) (((a) < (b)) ? (a) : (b))\n#define MAX(a, b) (((a) < (b)) ? (b) : (a))\nusing ll = long long;\n\nint const nmax = 100;\n\nvoid solve(){\n  int n, m;\n  cin >> n >> m;\n  for(int i = 1;i <= n; i++){\n    for(int j = 1;j <= m; j++){\n      if(i == 1 && j == 1){\n        cout << \"W\";\n      } else\n        cout << \"B\";\n    }\n    cout << '\\n';\n  }\n}\n\nint main()\n{\n  int t;\n  cin >> t;\n  for(int testcase = 1; testcase <= t; testcase++)\n    solve();\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Little Artem.json",
    "editorial_link": "https://codeforces.com//blog/entry/75802",
    "editorial": "In this problem it is enough to simply paint the upper left corner white\r\nand all the others black for any size of the board Like this: And there\r\nare (cell with coordinates ) and (cells with coordinates and ).In the\r\nfirst version, the task restrictions were , but we thought it would be\r\ntoo difficult for div2A.\r\n",
    "hint": []
}