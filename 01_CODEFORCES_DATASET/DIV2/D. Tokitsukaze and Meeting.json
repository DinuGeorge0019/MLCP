{
    "link": "https://codeforces.com//contest/1678/problem/D",
    "problemId": "1392741",
    "problem_idx": "D",
    "shortId": "1678D",
    "contest_number": "1678",
    "problem_submissions": {
        "B2": [
            156337748,
            156324342,
            156302784,
            156304109,
            156308344,
            156307313,
            156322367,
            156310760,
            156325161,
            156311476,
            156308386,
            156305915,
            156340054,
            156311110,
            156304777,
            156312168
        ],
        "D": [
            156335715,
            156326293,
            156332692,
            156322049,
            156327370,
            156325356,
            156338242,
            156329859,
            156336753,
            156331010,
            156328442,
            156331166,
            156332465,
            156321050,
            156331447,
            156333951,
            156332334,
            156338244,
            156323122
        ],
        "F": [
            156333879,
            156344881,
            156345082,
            156391888,
            156343019
        ],
        "E": [
            156321182,
            156330122,
            156338989,
            156332813,
            156332878,
            156337640,
            156329496,
            156338879,
            156328971,
            156336106,
            156338855,
            156339814,
            156337874,
            156332857,
            156334930,
            156345535,
            156346378,
            156344343,
            156329062
        ],
        "C": [
            156315033,
            156309829,
            156314171,
            156314151,
            156314962,
            156316870,
            156314506,
            156305197,
            156319288,
            156306512,
            156317819,
            156317128,
            156326850,
            156298687,
            156320662,
            156317477,
            156325519,
            156326778,
            156317125
        ],
        "B1": [
            156307022,
            156305581,
            156302876,
            156303596,
            156298834,
            156302625,
            156302689,
            156299382,
            156308181,
            156300224,
            156311800,
            156302389,
            156299357,
            156299955,
            156301798,
            156299880,
            156307813,
            156302122
        ],
        "A": [
            156300619,
            156297387,
            156296004,
            156298038,
            156295989,
            156296408,
            156296603,
            156296410,
            156307151,
            156296016,
            156301081,
            156298593,
            156296628,
            156296518,
            156297310,
            156305728,
            156296218,
            156299051
        ]
    },
    "name": "D. Tokitsukaze and Meeting",
    "statement": "Tokitsukaze is arranging a meeting. There are n rows and m columns of\r\nseats in the meeting hall.There are exactly n\r\ncdot m students attending the meeting, including several naughty\r\nstudents and several serious students. The students are numerated from 1\r\nto n\r\ncdot m. The students will enter the meeting hall in order. When the i-th\r\nstudent enters the meeting hall, he will sit in the 1-st column of the\r\n1-st row, and the students who are already seated will move back one\r\nseat. Specifically, the student sitting in the j-th (1\r\nleq j\r\nleq m-1) column of the i-th row will move to the (j+1)-th column of the\r\ni-th row, and the student sitting in m-th column of the i-th row will\r\nmove to the 1-st column of the (i+1)-th row.For example, there is a\r\nmeeting hall with 2 rows and 2 columns of seats shown as below: There\r\nwill be 4 students entering the meeting hall in order, represented as a\r\nbinary string \"\", of which \u201d represents naughty students and \u201d\r\nrepresents serious students. The changes of seats in the meeting hall\r\nare as follows: Denote a row or a column good if and only if there is at\r\nleast one serious student in this row or column. Please predict the\r\nnumber of good rows and columns just after the i-th student enters the\r\nmeeting hall, for all i.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define pa pair<int,int>\nconst int N=1000010;\nLL read()\n{\n\tLL x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=x*10ll+ch-'0',ch=getchar();\n\treturn x*f;\n}\nint n,m,ans1[N],ans2[N],f[N],sum[N];\nchar s[N];\nvoid solve()\n{\n\tn=read(),m=read();\n\tscanf(\"%s\",s+1);\n\tsum[0]=0;for(int i=1;i<=n*m;i++)sum[i]=sum[i-1]+s[i]-'0';\n\tfor(int i=0;i<=n*m;i++)ans1[i]=ans2[i]=0;\n\ts[0]=s[1];f[0]=0;\n\tfor(int i=1;i<=n*m;i++)\n\t{\n\t\tif(s[i]==s[i-1])f[i]=f[i-1]+1;\n\t\telse f[i]=1;\n\t\tif(f[i]>=m&&s[i]=='0')ans1[i]-=1;\n\t}\n\tfor(int i=m+1;i<=n*m;i++)ans1[i]+=ans1[i-m];\n\tfor(int i=1;i<=n*m;i++)\n\t{\n\t\tans1[i]+=i/m;\n\t\tif(i%m&&sum[i%m])ans1[i]++;\n\t}\n//\tprintf(\"s = %s\\n\",s+1);\n\tfor(int i=1;i<=n*m;i++)\n\tif(s[i]=='1')\n\t{\n\t\tfor(int j=i+m;j<=n*m;j+=m)\n\t\ts[j]='0';\n\t}\n//\tprintf(\"s = %s\\n\",s+1);\n\tfor(int i=1;i<=n*m;i++)\n\tif(s[i]=='1')ans2[i]++;\n\tfor(int i=1;i<=n*m;i++)ans2[i]+=ans2[i-1];\n\tfor(int i=1;i<=n*m;i++)printf(\"%d \",ans1[i]+ans2[i]);puts(\"\");\n//\tfor(int i=1;i<=n*m;i++)printf(\"%d \",ans2[i]);puts(\"\");\n}\nint main()\n{\n\tint T=read();\n\twhile(T--)solve();\n \treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "implementation"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Tokitsukaze and Meeting.json",
    "editorial_link": "https://codeforces.com//blog/entry/102631",
    "editorial": "Obviously, we can calculate the answers of rows and columns separately.\n\nFor the answers of columns, we can observe that since there are only n?m\n students in total, no students will leave, and every time a new student entering the meeting hall, all columns will move one step to the right circularly, so the answer will not decrease. If the i\n-th student is a serious student, for all the previous students with subscript j\n where 0<j<i\n, and j%m=i%m\n are naughty students, the answer in the column will increase by 1\n.\n\nFor the answer of rows, we can transfer it from the answer of i?m\n, which is equivalent to adding a new row to the answer of i?m\n. Suppose the last serious student is the j\n-th student. If i?j<m\n, the answer will increase by 1\n, otherwise the answer will be the same as that of when the i?m\n student enters the meeting hall."
}