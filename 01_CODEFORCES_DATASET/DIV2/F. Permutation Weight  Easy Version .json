{
    "link": "https://codeforces.com//contest/1686/problem/F",
    "problemId": "1410463",
    "problem_idx": "F",
    "shortId": "1686F",
    "contest_number": "1686",
    "problem_submissions": {
        "E": [
            158466498,
            158623961,
            158493366,
            158653522
        ],
        "D": [
            158444604,
            158453399,
            158441005,
            158438618,
            158439368,
            158439942,
            158445018,
            158445760,
            158448365,
            158448646,
            158449006,
            158469820,
            158446506,
            158447775,
            158452792,
            158451110,
            158442777,
            158454124,
            158449945
        ],
        "C": [
            158421583,
            158419071,
            158419875,
            158426051,
            158425982,
            158428799,
            158424090,
            158428548,
            158428460,
            158427814,
            158485768,
            158427612,
            158427723,
            158430277,
            158423379,
            158427100,
            158433344,
            158424816,
            158432867
        ],
        "B": [
            158414448,
            158465960,
            158415549,
            158416857,
            158416742,
            158416745,
            158416637,
            158415727,
            158418974,
            158421168,
            158416305,
            158416075,
            158419159,
            158417410,
            158421561,
            158416494,
            158417640,
            158416669
        ],
        "A": [
            158414054,
            158464909,
            158414306,
            158414224,
            158414816,
            158414086,
            158414216,
            158419141,
            158416490,
            158414220,
            158414605,
            158414130,
            158415003,
            158415457,
            158417192,
            158414417,
            158414385,
            158414321
        ],
        "F": [
            158464234
        ]
    },
    "name": "F. Permutation Weight  Easy Version ",
    "statement": ".You are given a permutation p_1, p_2,\r\nldots, p_n of integers from 1 to n.Letâ€™s define the weight of the\r\npermutation q_1, q_2,\r\nldots, q_n of integers from 1 to n as |q_1 - p_{q_{2}}| + |q_2 -\r\np_{q_{3}}| +\r\nldots + |q_{n-1} - p_{q_{n}}| + |q_n - p_{q_{1}}|You want your\r\npermutation to be as lightweight as possible. Find any permutation q\r\nwith the smallest possible weight.\r\n",
    "solutions": [
        "__asm__(R\"(\n\t.file\t\"d1.cpp\"\n\t.text\n\t.section\t.text$_Z5scanfPKcz,\"x\"\n\t.linkonce discard\n\t.globl\t_Z5scanfPKcz\n\t.def\t_Z5scanfPKcz;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_Z5scanfPKcz\n_Z5scanfPKcz:\n.LFB21:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tpushq\t%rbx\n\t.seh_pushreg\t%rbx\n\tsubq\t$56, %rsp\n\t.seh_stackalloc\t56\n\tleaq\t128(%rsp), %rbp\n\t.seh_setframe\t%rbp, 128\n\t.seh_endprologue\n\tmovq\t%rcx, -48(%rbp)\n\tmovq\t%rdx, -40(%rbp)\n\tmovq\t%r8, -32(%rbp)\n\tmovq\t%r9, -24(%rbp)\n\tleaq\t-40(%rbp), %rax\n\tmovq\t%rax, -96(%rbp)\n\tmovq\t-96(%rbp), %rbx\n\tmovl\t$0, %ecx\n\tmovq\t__imp___acrt_iob_func(%rip), %rax\n\tcall\t*%rax\n\tmovq\t%rbx, %r8\n\tmovq\t-48(%rbp), %rdx\n\tmovq\t%rax, %rcx\n\tcall\t__mingw_vfscanf\n\tmovl\t%eax, -84(%rbp)\n\tmovl\t-84(%rbp), %eax\n\taddq\t$56, %rsp\n\tpopq\t%rbx\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.section\t.text$_Z6printfPKcz,\"x\"\n\t.linkonce discard\n\t.globl\t_Z6printfPKcz\n\t.def\t_Z6printfPKcz;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_Z6printfPKcz\n_Z6printfPKcz:\n.LFB27:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tpushq\t%rbx\n\t.seh_pushreg\t%rbx\n\tsubq\t$56, %rsp\n\t.seh_stackalloc\t56\n\tleaq\t128(%rsp), %rbp\n\t.seh_setframe\t%rbp, 128\n\t.seh_endprologue\n\tmovq\t%rcx, -48(%rbp)\n\tmovq\t%rdx, -40(%rbp)\n\tmovq\t%r8, -32(%rbp)\n\tmovq\t%r9, -24(%rbp)\n\tleaq\t-40(%rbp), %rax\n\tmovq\t%rax, -96(%rbp)\n\tmovq\t-96(%rbp), %rbx\n\tmovl\t$1, %ecx\n\tmovq\t__imp___acrt_iob_func(%rip), %rax\n\tcall\t*%rax\n\tmovq\t%rbx, %r8\n\tmovq\t-48(%rbp), %rdx\n\tmovq\t%rax, %rcx\n\tcall\t__mingw_vfprintf\n\tmovl\t%eax, -84(%rbp)\n\tmovl\t-84(%rbp), %eax\n\taddq\t$56, %rsp\n\tpopq\t%rbx\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.section .rdata,\"dr\"\n_ZStL19piecewise_construct:\n\t.space 1\n_ZStL13allocator_arg:\n\t.space 1\n_ZStL6ignore:\n\t.space 1\n.lcomm _ZStL8__ioinit,1,1\n\t.align 4\n_ZN9__gnu_cxxL21__default_lock_policyE:\n\t.long\t2\n_ZStL10defer_lock:\n\t.space 1\n_ZStL11try_to_lock:\n\t.space 1\n_ZStL10adopt_lock:\n\t.space 1\n\t.align 4\n_ZNSt15regex_constantsL5icaseE:\n\t.long\t1\n\t.align 4\n_ZNSt15regex_constantsL6nosubsE:\n\t.long\t2\n\t.align 4\n_ZNSt15regex_constantsL8optimizeE:\n\t.long\t4\n\t.align 4\n_ZNSt15regex_constantsL7collateE:\n\t.long\t8\n\t.align 4\n_ZNSt15regex_constantsL10ECMAScriptE:\n\t.long\t16\n\t.align 4\n_ZNSt15regex_constantsL5basicE:\n\t.long\t32\n\t.align 4\n_ZNSt15regex_constantsL8extendedE:\n\t.long\t64\n\t.align 4\n_ZNSt15regex_constantsL3awkE:\n\t.long\t128\n\t.align 4\n_ZNSt15regex_constantsL4grepE:\n\t.long\t256\n\t.align 4\n_ZNSt15regex_constantsL5egrepE:\n\t.long\t512\n\t.align 4\n_ZNSt15regex_constantsL12__polynomialE:\n\t.long\t1024\n\t.align 4\n_ZNSt15regex_constantsL13match_defaultE:\n\t.space 4\n\t.align 4\n_ZNSt15regex_constantsL13match_not_bolE:\n\t.long\t1\n\t.align 4\n_ZNSt15regex_constantsL13match_not_eolE:\n\t.long\t2\n\t.align 4\n_ZNSt15regex_constantsL13match_not_bowE:\n\t.long\t4\n\t.align 4\n_ZNSt15regex_constantsL13match_not_eowE:\n\t.long\t8\n\t.align 4\n_ZNSt15regex_constantsL9match_anyE:\n\t.long\t16\n\t.align 4\n_ZNSt15regex_constantsL14match_not_nullE:\n\t.long\t32\n\t.align 4\n_ZNSt15regex_constantsL16match_continuousE:\n\t.long\t64\n\t.align 4\n_ZNSt15regex_constantsL16match_prev_availE:\n\t.long\t128\n\t.align 4\n_ZNSt15regex_constantsL14format_defaultE:\n\t.space 4\n\t.align 4\n_ZNSt15regex_constantsL10format_sedE:\n\t.long\t256\n\t.align 4\n_ZNSt15regex_constantsL14format_no_copyE:\n\t.long\t512\n\t.align 4\n_ZNSt15regex_constantsL17format_first_onlyE:\n\t.long\t1024\n\t.align 4\n_ZNSt15regex_constantsL13error_collateE:\n\t.space 4\n\t.align 4\n_ZNSt15regex_constantsL11error_ctypeE:\n\t.long\t1\n\t.align 4\n_ZNSt15regex_constantsL12error_escapeE:\n\t.long\t2\n\t.align 4\n_ZNSt15regex_constantsL13error_backrefE:\n\t.long\t3\n\t.align 4\n_ZNSt15regex_constantsL11error_brackE:\n\t.long\t4\n\t.align 4\n_ZNSt15regex_constantsL11error_parenE:\n\t.long\t5\n\t.align 4\n_ZNSt15regex_constantsL11error_braceE:\n\t.long\t6\n\t.align 4\n_ZNSt15regex_constantsL14error_badbraceE:\n\t.long\t7\n\t.align 4\n_ZNSt15regex_constantsL11error_rangeE:\n\t.long\t8\n\t.align 4\n_ZNSt15regex_constantsL11error_spaceE:\n\t.long\t9\n\t.align 4\n_ZNSt15regex_constantsL15error_badrepeatE:\n\t.long\t10\n\t.align 4\n_ZNSt15regex_constantsL16error_complexityE:\n\t.long\t11\n\t.align 4\n_ZNSt15regex_constantsL11error_stackE:\n\t.long\t12\n\t.align 4\n_ZNSt8__detailL19_S_invalid_state_idE:\n\t.long\t-1\n\t.align 4\n_ZL4maxn:\n\t.long\t200010\n\t.globl\tfa\n\t.bss\n\t.align 32\nfa:\n\t.space 800040\n\t.globl\tid\n\t.align 32\nid:\n\t.space 800040\n\t.globl\tm\n\t.align 4\nm:\n\t.space 4\n\t.globl\tn\n\t.align 4\nn:\n\t.space 4\n\t.globl\tnxt\n\t.align 32\nnxt:\n\t.space 800040\n\t.globl\tpre\n\t.align 32\npre:\n\t.space 800040\n\t.globl\tt_case\n\t.align 4\nt_case:\n\t.space 4\n\t.def\t__main;\t.scl\t2;\t.type\t32;\t.endef\n\t.section .rdata,\"dr\"\n.LC0:\n\t.ascii \"%d\\0\"\n.LC1:\n\t.ascii \"%d \\0\"\n\t.text\n\t.globl\tmain\n\t.def\tmain;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\tmain\nmain:\n.LFB8748:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$64, %rsp\n\t.seh_stackalloc\t64\n\t.seh_endprologue\n\tcall\t__main\n\tleaq\tt_case(%rip), %rdx\n\tleaq\t.LC0(%rip), %rcx\n\tcall\t_Z5scanfPKcz\n.L19:\n\tmovl\tt_case(%rip), %eax\n\tleal\t-1(%rax), %edx\n\tmovl\t%edx, t_case(%rip)\n\ttestl\t%eax, %eax\n\tsetne\t%al\n\ttestb\t%al, %al\n\tje\t.L6\n\tleaq\tn(%rip), %rdx\n\tleaq\t.LC0(%rip), %rcx\n\tcall\t_Z5scanfPKcz\n\tmovl\t$1, -4(%rbp)\n.L8:\n\tmovl\tn(%rip), %eax\n\tcmpl\t%eax, -4(%rbp)\n\tjg\t.L7\n\tmovl\t-4(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tpre(%rip), %rax\n\taddq\t%rdx, %rax\n\tmovq\t%rax, %rdx\n\tleaq\t.LC0(%rip), %rcx\n\tcall\t_Z5scanfPKcz\n\tmovl\t-4(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tnxt(%rip), %rax\n\tmovl\t$0, (%rdx,%rax)\n\tmovl\t-4(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tnxt(%rip), %rax\n\tmovl\t(%rdx,%rax), %ecx\n\tmovl\t-4(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tid(%rip), %rax\n\tmovl\t%ecx, (%rdx,%rax)\n\taddl\t$1, -4(%rbp)\n\tjmp\t.L8\n.L7:\n\tmovl\t$0, -8(%rbp)\n\tmovl\t$1, -12(%rbp)\n.L13:\n\tmovl\tn(%rip), %eax\n\tcmpl\t%eax, -12(%rbp)\n\tjg\t.L9\n\tmovl\t-12(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tid(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\ttestl\t%eax, %eax\n\tjne\t.L10\n\taddl\t$1, -8(%rbp)\n\tmovl\t-8(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tfa(%rip), %rax\n\tmovl\t-8(%rbp), %ecx\n\tmovl\t%ecx, (%rdx,%rax)\n\tmovl\t-12(%rbp), %eax\n\tmovl\t%eax, -16(%rbp)\n.L12:\n\tmovl\t-16(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tid(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\ttestl\t%eax, %eax\n\tjne\t.L10\n\tmovl\t-16(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tid(%rip), %rax\n\tmovl\t-8(%rbp), %ecx\n\tmovl\t%ecx, (%rdx,%rax)\n\tmovl\t-16(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tpre(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tnxt(%rip), %rax\n\tmovl\t-16(%rbp), %ecx\n\tmovl\t%ecx, (%rdx,%rax)\n\tmovl\t-16(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tpre(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tmovl\t%eax, -16(%rbp)\n\tjmp\t.L12\n.L10:\n\taddl\t$1, -12(%rbp)\n\tjmp\t.L13\n.L9:\n\tmovl\t$2, -20(%rbp)\n.L16:\n\tmovl\tn(%rip), %eax\n\tcmpl\t%eax, -20(%rbp)\n\tjg\t.L14\n\tmovl\t-20(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tid(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tfa(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tcmpl\t$1, %eax\n\tje\t.L15\n\tmovl\t-20(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tid(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tfa(%rip), %rax\n\tmovl\t$1, (%rdx,%rax)\n\tmovl\t-20(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tnxt(%rip), %rax\n\taddq\t%rax, %rdx\n\tmovl\t-20(%rbp), %eax\n\tsubl\t$1, %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rcx\n\tleaq\tnxt(%rip), %rax\n\taddq\t%rcx, %rax\n\tmovq\t%rax, %rcx\n\tcall\t_ZSt4swapIiENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_\n.L15:\n\taddl\t$1, -20(%rbp)\n\tjmp\t.L16\n.L14:\n\tmovl\t$1, -24(%rbp)\n\tmovl\t$1, -28(%rbp)\n.L18:\n\tmovl\tn(%rip), %eax\n\tcmpl\t%eax, -24(%rbp)\n\tjg\t.L19\n\tmovl\t-28(%rbp), %eax\n\tmovl\t%eax, %edx\n\tleaq\t.LC1(%rip), %rcx\n\tcall\t_Z6printfPKcz\n\tmovl\t-28(%rbp), %eax\n\tcltq\n\tleaq\t0(,%rax,4), %rdx\n\tleaq\tnxt(%rip), %rax\n\tmovl\t(%rdx,%rax), %eax\n\tmovl\t%eax, -28(%rbp)\n\taddl\t$1, -24(%rbp)\n\tjmp\t.L18\n.L6:\n\tmovl\t$0, %eax\n\taddq\t$64, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.section\t.text$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_,\"x\"\n\t.linkonce discard\n\t.globl\t_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_\n\t.def\t_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_\n_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_:\n.LFB9308:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\t.seh_endprologue\n\tmovq\t%rcx, 16(%rbp)\n\tmovq\t16(%rbp), %rax\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.section\t.text$_ZSt4swapIiENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_,\"x\"\n\t.linkonce discard\n\t.globl\t_ZSt4swapIiENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_\n\t.def\t_ZSt4swapIiENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_;\t.scl\t2;\t.type\t32;\t.endef\n\t.seh_proc\t_ZSt4swapIiENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_\n_ZSt4swapIiENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SE_:\n.LFB9307:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$48, %rsp\n\t.seh_stackalloc\t48\n\t.seh_endprologue\n\tmovq\t%rcx, 16(%rbp)\n\tmovq\t%rdx, 24(%rbp)\n\tmovq\t16(%rbp), %rcx\n\tcall\t_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_\n\tmovl\t(%rax), %eax\n\tmovl\t%eax, -4(%rbp)\n\tmovq\t24(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tcall\t_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_\n\tmovl\t(%rax), %edx\n\tmovq\t16(%rbp), %rax\n\tmovl\t%edx, (%rax)\n\tleaq\t-4(%rbp), %rax\n\tmovq\t%rax, %rcx\n\tcall\t_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_\n\tmovl\t(%rax), %edx\n\tmovq\t24(%rbp), %rax\n\tmovl\t%edx, (%rax)\n\tnop\n\taddq\t$48, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.text\n\t.def\t__tcf_0;\t.scl\t3;\t.type\t32;\t.endef\n\t.seh_proc\t__tcf_0\n__tcf_0:\n.LFB10119:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$32, %rsp\n\t.seh_stackalloc\t32\n\t.seh_endprologue\n\tleaq\t_ZStL8__ioinit(%rip), %rcx\n\tcall\t_ZNSt8ios_base4InitD1Ev\n\tnop\n\taddq\t$32, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.def\t_Z41__static_initialization_and_destruction_0ii;\t.scl\t3;\t.type\t32;\t.endef\n\t.seh_proc\t_Z41__static_initialization_and_destruction_0ii\n_Z41__static_initialization_and_destruction_0ii:\n.LFB10118:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$32, %rsp\n\t.seh_stackalloc\t32\n\t.seh_endprologue\n\tmovl\t%ecx, 16(%rbp)\n\tmovl\t%edx, 24(%rbp)\n\tcmpl\t$1, 16(%rbp)\n\tjne\t.L27\n\tcmpl\t$65535, 24(%rbp)\n\tjne\t.L27\n\tleaq\t_ZStL8__ioinit(%rip), %rcx\n\tcall\t_ZNSt8ios_base4InitC1Ev\n\tleaq\t__tcf_0(%rip), %rcx\n\tcall\tatexit\n.L27:\n\tnop\n\taddq\t$32, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.def\t_GLOBAL__sub_I_fa;\t.scl\t3;\t.type\t32;\t.endef\n\t.seh_proc\t_GLOBAL__sub_I_fa\n_GLOBAL__sub_I_fa:\n.LFB10142:\n\tpushq\t%rbp\n\t.seh_pushreg\t%rbp\n\tmovq\t%rsp, %rbp\n\t.seh_setframe\t%rbp, 0\n\tsubq\t$32, %rsp\n\t.seh_stackalloc\t32\n\t.seh_endprologue\n\tmovl\t$65535, %edx\n\tmovl\t$1, %ecx\n\tcall\t_Z41__static_initialization_and_destruction_0ii\n\tnop\n\taddq\t$32, %rsp\n\tpopq\t%rbp\n\tret\n\t.seh_endproc\n\t.section\t.ctors,\"w\"\n\t.align 8\n\t.quad\t_GLOBAL__sub_I_fa\n\t.ident\t\"GCC: (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0\"\n\t.def\t__mingw_vfscanf;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\t__mingw_vfprintf;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\t_ZNSt8ios_base4InitD1Ev;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\t_ZNSt8ios_base4InitC1Ev;\t.scl\t2;\t.type\t32;\t.endef\n\t.def\tatexit;\t.scl\t2;\t.type\t32;\t.endef\n)\");"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "2800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. Permutation Weight  Easy Version .json",
    "editorial_link": "https://codeforces.com//blog/entry/103198",
    "editorial": "Let's first understand what is the minimum possible weight of q\n. When can it be 0\n?\n\nOnly when qi=pqi+1\n for each i\n. Clearly, such q\n exists only when p\n is just one cycle. This gives a hint that we should look at cycles.\n\nConsider splitting of p\n into cycles (where a cycle is an array [a1,a2,Â…,am]\n such that pai=aimodm+1\n for 1?i?m\n). Let's say there are k\n of such cycles. I claim that the answer is 2(k?1)\n. You can see the proof in the tutorial of the hard version of this problem.\n\nNow, let's provide an example. We will construct a permutation p?\n as follows:\n\nInitially, it's equal to p\nThen, for each x\n from 1\n to n?1\n, if x\n and x+1\n are in different cycles in p?\n currently, swap them.\nOne such swap reduces the number of cycles by exactly 1\n, so we will do exactly k?1\n such swaps and p?\n will consist of exactly one cycle.\n\nNext, construct q\n by the rule qi=p?qi+1\n (it's possible as p?\n is just one cycle). As |qi?pqi+1|=|p?qi+1?pqi+1|\n, the weight of q\n is just the sum of |pi?p?i|\n. Clearly, one swap increases this value by at most 2\n, so in the end it will be at most 2(k?1)\n, as desired.",
    "hint": []
}