{"link": "https://codeforces.com//contest/203/problem/E", "problemId": "1469", "problem_idx": "E", "shortId": "203E", "contest_number": "203", "problem_submissions": {"E": [1859584, 1864232], "D": [1858220, 1857437, 1856665, 1856985, 1857162, 1857091, 1855164, 1857148, 1857099, 1857972, 1857235, 1858114, 1857870, 1857332, 1857584, 1858389], "C": [1854526, 1854619, 1853428, 1854041, 1856051, 1855167, 1852528, 1855008, 1854985, 1866755, 1866744, 1866737, 1855176, 1852331, 1853501, 1854282, 1855728, 1855791, 1856447], "B": [1853689, 1853651, 1854911, 1853273, 1855277, 1854322, 1858005, 1861935, 1854043, 1853822, 1853844, 1854374, 1856622, 1855712, 1854223, 1855104, 1854929], "A": [1852683, 1852245, 1855632, 1852074, 1854449, 1852409, 1856414, 1853365, 1852194, 1852508, 1855060, 1857089, 1852372, 1852527, 1853135, 1852511]}, "name": "E. Transportation", "statement": "Valera came to Japan and bought many robots for his research. He\u2019s\r\nalready at the airport, the plane will fly very soon and Valera urgently\r\nneeds to bring all robots to the luggage compartment.The robots are\r\nself-propelled (they can potentially move on their own), some of them\r\neven have compartments to carry other robots. More precisely, for the\r\n-th robot we know value the number of robots it can carry. In this case,\r\neach of transported robots can additionally carry other robots.However,\r\nthe robots need to be filled with fuel to go, so Valera spent all his\r\nlast money and bought liters of fuel. He learned that each robot has a\r\nrestriction on travel distances. Thus, in addition to features , the -th\r\nrobot has two features and the amount of fuel (in liters) needed to move\r\nthe -th robot, and the maximum distance that the robot can go.Due to the\r\nlimited amount of time and fuel, Valera wants to move the maximum number\r\nof robots to the luggage compartment. He operates as follows. First\r\nValera selects some robots that will travel to the luggage compartment\r\non their own. In this case the total amount of fuel required to move all\r\nthese robots must not exceed . Then Valera seats the robots into the\r\ncompartments, so as to transport as many robots as possible. Note that\r\nif a robot doesn\u2019t move by itself, you can put it in another not moving\r\nrobot that is moved directly or indirectly by a moving robot. After that\r\nall selected and seated robots along with Valera go to the luggage\r\ncompartment and the rest robots will be lost. There are meters to the\r\nluggage compartment. Therefore, the robots that will carry the rest,\r\nmust have feature of not less than . During the moving Valera cannot\r\nstop or change the location of the robots in any way.Help Valera\r\ncalculate the maximum number of robots that he will be able to take\r\nhome, and the minimum amount of fuel he will have to spend, because the\r\nremaining fuel will come in handy in Valera\u2019s research.\r\n", "solutions": ["#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<iomanip>\n#include<string>\n#include<vector>\n#include<map>\n#include<queue>\n#include<ctime>\nusing namespace std;\n\nconst int mxn=100005;\nint n,d,s;\nint a[mxn][3],b[mxn][3],m1=0,m2=0;\ninline int cmp(const void *a,const void *b)\n{\n\treturn ((int*)a)[1]-((int*)b)[1];\n}\ninline int cmp2(const void *a,const void *b)\n{\n\tif(((int*)a)[2]>=d&&((int*)b)[2]<d) return -1;\n\tif(((int*)a)[2]<d&&((int*)b)[2]>=d) return 1;\n\treturn ((int*)a)[1]-((int*)b)[1];\n}\nbool u[mxn];\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&d,&s);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint p,q,r;\n\t\tscanf(\"%d%d%d\",&p,&q,&r);\n\t\tif(p==0)\n\t\t{\n\t\t\tm1++;\n\t\t\ta[m1][0]=p;a[m1][1]=q;a[m1][2]=r;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm2++;\n\t\t\tb[m2][0]=p;b[m2][1]=q;b[m2][2]=r;\n\t\t}\n\t}\n\tqsort(a+1,m1,sizeof(a[0]),cmp);\n\tqsort(b+1,m2,sizeof(b[0]),cmp);\n\tint ans=0,mcost=0;\n\tfor(int i=1;i<=m1;i++)\n\t{\n\t\tif(a[i][1]+mcost<=s&&a[i][2]>=d)\n\t\t{\n\t\t\tans++;\n\t\t\tmcost+=a[i][1];\n\t\t}\n\t}\n\tif(m2==0)\n\t{\n\t\tcout<<ans<<' '<<mcost<<endl;\n\t\treturn 0;\n\t}\n\tint anst=0,c2=0;\n\t\n\tint rem=0;\n\tfor(int i=1;i<=m2;i++)\n\t{\n\t\tif(b[i][2]>=d&&b[i][1]<=s)\n\t\t{\n\t\t\tanst++;\n\t\t\tc2+=b[i][1];\n\t\t\trem+=b[i][0];\n\t\t\tfor(int j=i+1;j<=m2;j++)\n\t\t\t{\n\t\t\t\trem+=b[j][0];\n\t\t\t\tif(rem>n) rem=n;\n\t\t\t\tm1++;a[m1][0]=b[j][0],a[m1][1]=b[j][1],a[m1][2]=b[j][2];\n\t\t\t}\n\t\t\tfor(int j=i-1;j>=1;j--)\n\t\t\t{\n\t\t\t\trem+=b[j][0];\n\t\t\t\tif(rem>n) rem=n;\n\t\t\t\tm1++;a[m1][0]=b[j][0],a[m1][1]=b[j][1],a[m1][2]=b[j][2];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif(i==m2)\n\t\t{\n\t\t\tcout<<ans<<' '<<mcost<<endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tn--;\n\tqsort(a+1,n,sizeof(a[0]),cmp2);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(min(rem,n+1-i)+anst>ans||min(rem,n+1-i)+anst==ans&&c2<mcost)\n\t\t{\n\t\t\tans=min(rem,n+1-i)+anst,mcost=c2;\n\t\t}\n\t\tif(c2+a[i][1]<=s&&a[i][2]>=d)\n\t\t{\n\t\t\tc2+=a[i][1];\n\t\t\tanst++;\n\t\t}\n\t\telse if(rem>0) rem--,anst++;\n\t}\n\t\n\tif(anst>ans||anst==ans&&c2<mcost) ans=anst,mcost=c2;\n\tcout<<ans<<' '<<mcost<<endl;\n\t\n\treturn 0;\n}\n/*\n3 10 10\n0 12 10\n1 6 10\n0 1 1\n*/\n\n"], "input": "", "output": "", "tags": ["greedy", "sortings", "two pointers"], "dificulty": "2300", "interactive": false}