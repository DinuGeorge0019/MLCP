{"link": "https://codeforces.com//contest/1631/problem/F", "problemId": "1276007", "problem_idx": "F", "shortId": "1631F", "contest_number": "1631", "problem_submissions": {"F": [144209452, 144235790, 144244278, 144220136, 144245962, 145961629, 144259733, 144269650], "D": [144194791, 144225252, 144201688, 144230474, 144203435, 144220058, 144203552, 144209046, 144207936, 144210282, 144212647, 144207429, 144217330, 144216217, 144206811, 144214985, 144213401, 144219446, 144231089, 144231916], "E": [144190789, 144201204, 144214332, 144232961, 144227054, 144208434, 144222982, 144216993, 144218442, 144221273, 144225660, 144224625, 144225131, 144219664, 144229917, 144231977, 144227225, 144219457, 144201695], "C": [144179964, 144189456, 144189516, 144215627, 144187648, 144180182, 144189612, 144193307, 144194463, 144187270, 144199486, 144195809, 144197876, 144203729, 144230691, 144197772, 144204964, 144199522, 144195296, 144214390], "B": [144170872, 144177011, 144174808, 144176288, 144176678, 144177243, 144171384, 144176878, 144177419, 144171993, 144172891, 144174155, 144177241, 144177261, 144179565, 144182240, 144180906, 144179159, 144177073, 144204981], "A": [144168895, 144168971, 144169136, 144169033, 144169966, 144169112, 144168711, 144173549, 144170320, 144168841, 144168910, 144168908, 144169573, 144170205, 144173130, 144169980, 144175969, 144173232, 144169253, 144169017]}, "name": "F. Flipping Range", "statement": "You are given an array a of n integers and a set B of m positive\r\nintegers such that 1\r\nleq b_i\r\nleq\r\nlfloor\r\nfrac{n}{2}\r\nrfloor for 1\r\nle i\r\nle m, where b_i is the i-th element of B. You can make the following\r\noperation on a: Select some x such that x appears in B. Select an\r\ninterval from array a of size x and multiply by -1 every element in the\r\ninterval. Formally, select l and r such that 1\r\nleq l\r\nleq r\r\nleq n and r-l+1=x, then assign a_i:=-a_i for every i such that l\r\nleq i\r\nleq r. Consider the following example, let a=[0,6,-2,1,-4,5] and B=\r\n{1,2\r\n}: [0,6,-2,-1,4,5] is obtained after choosing size 2 and l=4, r=5.\r\n[0,6,2,-1,4,5] is obtained after choosing size 1 and l=3, r=3. Find the\r\nmaximum\r\nsum\r\nlimits_{i=1}^n {a_i} you can get after applying such operation any\r\nnumber of times (possibly zero).\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nconst int max_n = 1e6 + 5, INF = 2e9;\n\nint a[max_n], ranges[max_n];\nint spare[max_n], minimum_absolute[max_n];\n\nvoid solve_tc(){\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++){\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i <= m; i++){\n\t\tcin >> ranges[i];\n\t}\n\t\n\tint minimum_range = 0;\n\tfor (int i = 1; i <= m; i++){\n\t\tminimum_range = __gcd(minimum_range, ranges[i]);\n\t}\n\tfor (int remainder = 0; remainder < minimum_range; remainder++){\n\t\tspare[remainder] = 0;\n\t\tminimum_absolute[remainder] = INF;\n\t}\n\tlong long sum_absolutes = 0;\n\tfor (int i = 1; i <= n; i++){\n\t\tif (a[i] < 0){\n\t\t\tspare[i % minimum_range] ^= 1;\n\t\t}\n\t\tminimum_absolute[i % minimum_range] = min(minimum_absolute[i % minimum_range], abs(a[i]));\n\t\tsum_absolutes += abs(a[i]);\n\t}\n\tlong long sum_negative = 0, sum_positive = 0;\n\tfor (int remainder = 0; remainder < minimum_range; remainder++){\n\t\tif (spare[remainder]){\n\t\t\tsum_negative += minimum_absolute[remainder];\n\t\t}\n\t\telse{\n\t\t\tsum_positive += minimum_absolute[remainder];\n\t\t}\n\t}\n\t\n\tcout << sum_absolutes - 2 * min(sum_negative, sum_positive) << \"\\n\";\n}\n\nint main(){\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\t\n\tint tests;\n\tcin >> tests;\n\twhile (tests--){\n\t\tsolve_tc();\n\t}\n}"], "input": "", "output": "", "tags": ["dp", "greedy", "number theory"], "dificulty": "2400", "interactive": false}