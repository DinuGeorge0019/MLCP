{
    "link": "https://codeforces.com//contest/816/problem/B",
    "problemId": "110365",
    "problem_idx": "B",
    "shortId": "816B",
    "contest_number": "816",
    "problem_submissions": {
        "E": [
            27863231,
            27863827,
            27863029,
            27860461,
            27863136,
            27865351,
            27864615,
            27864468,
            27888047,
            27887967,
            27937085
        ],
        "C": [
            27850215,
            27861317,
            27854036,
            27851177,
            27862299,
            27857090,
            27854650,
            27852662,
            27850415,
            27853530,
            27854524,
            27855938,
            27852726,
            27856877,
            27849179,
            27853471,
            27855491,
            27856929,
            27856486
        ],
        "B": [
            27848642,
            27849640,
            27850149,
            27848668,
            27849856,
            27851634,
            27849204,
            27854414,
            27848329,
            27850570,
            27851030,
            27849936,
            27849151,
            27848884,
            27852810,
            27850464,
            27851714,
            27851843,
            27851131
        ],
        "A": [
            27848027,
            27848026,
            27848067,
            27848089,
            27848256,
            27849615,
            27848022,
            27851364,
            27847966,
            27848494,
            27847999,
            27848587,
            27848127,
            27847967,
            27851375,
            27849723,
            27848224,
            27848952,
            27848135
        ],
        "D": [
            27863292,
            28057801,
            28341325,
            27862819,
            27861012,
            27860728,
            27886034,
            27863751,
            27864128
        ]
    },
    "name": "B. Karen and Coffee",
    "statement": "To stay woke and attentive during classes, Karen needs some coffee!\r\nKaren, a coffee aficionado, wants to know the optimal temperature for\r\nbrewing the perfect cup of coffee. Indeed, she has spent some time\r\nreading several recipe books, including the universally acclaimed \"The\r\nArt of the Covfefe\".She knows coffee recipes. The -th recipe suggests\r\nthat coffee should be brewed between and degrees, inclusive, to achieve\r\nthe optimal taste.Karen thinks that a temperature is if at least recipes\r\nrecommend it.Karen has a rather fickle mind, and so she asks questions.\r\nIn each question, given that she only wants to prepare coffee with a\r\ntemperature between and , inclusive, can you tell her how many\r\nadmissible integer temperatures fall within the range?\r\n",
    "solutions": [
        "//#pragma comment(linker,\"/STACK:16777216\") /*16Mb*/\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <string>\n#include <stack>\n#include <cmath>\n#include <list>\n#include <iomanip>\n#include <set>\n#include <map>\n#include <time.h>\n#include <sstream>\n#include <fstream>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef long double LD;\ntypedef pair<int, int> PII;\ntypedef pair<LL, LL> PLL;\ntypedef vector<int> VI;\n\n#define FOR(i,a,b) for(int (i)=(a);i<(b);++(i))\n#define RFOR(i,a,b) for(int (i)=(a)-1;(i)>=(b);--(i))\n#define MP make_pair\n#define I insert\n#define mod 1000000007\n#define INF 2000000007\n#define PB push_back\n#define x0 sdfhrthrth\n#define x1 fdhttrlhn\n#define y0 kihrbdb\n#define y1 ugvrrtgtrg\n#define eps 1e-5\n#define X first\n#define Y second\n\nconst int MAXN = 300000;\n\nint n, k, q;\nint a[MAXN];\n\nint main()\n{\n    cin >> n >> k >> q;\n    FOR (i,0,n)\n    {\n        int x, y;\n        scanf(\"%d%d\",&x,&y);\n        a[x]++;\n        a[y+1]--;\n    }\n    int bal = 0;\n    FOR (i,0,MAXN)\n    {\n        bal += a[i];\n        a[i] = (bal >= k);\n    }\n    FOR (i,1,MAXN) a[i]+=a[i-1];\n    FOR (i,0,q)\n    {\n        int x, y;\n        scanf(\"%d%d\",&x,&y);\n        cout << a[y] - a[x-1] <<\"\\n\";\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "data structures",
        "implementation"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Karen and Coffee.json",
    "editorial_link": "https://codeforces.com//blog/entry/52742",
    "editorial": "There are two separate tasks here: Efficiently generate an array where\r\nis the number of recipes that recommend temperature . Efficiently answer\r\nqueries \"how many numbers \" are at least ?\" where is fixed across all\r\nqueries. There are some solutions to this task using advanced data\r\nstructures or algorithms. For example, a conceptually straightforward\r\nidea is the following: create a segment tree . We can treat all recipes\r\nas range update queries which we can do efficiently in (where is the\r\nlargest or ) time using lazy propagation.After all recipes, we replace\r\nall by if it\u00e2\u0080\u0099s at least , and otherwise. Afterwards, each of the next\r\nqueries is a basic range sum query, which can be done simply in\r\ntime.Other solutions exist, too: Fenwick trees with range updates, event\r\nsorting, sqrt-decomposition with binary search, Mo\u00e2\u0080\u0099s algorithm, and so\r\non. These solutions all pass, but they are all overkill for this task.A\r\nvery simple solution is as follows. Initialize with all zeroes. For\r\nrecipe that recommends temperatures between and , we should increment\r\nand decrement .Cumulate all values. That is, set to . This can be done\r\nwith one pass through the array.Now, magically, is now the number of\r\nrecipes that recommend temperature . If is at least , set it to ,\r\notherwise, set it to .Cumulate all values again.Now, every query that\r\nasks for the number of admissible temperatures between and can be\r\nanswered simply as .This runs in , which is really fast.Note that if\r\nyour solution does this and still runs quite slow, chances are your\r\nsolution is using slower input methods. We raised the time limit to 2.5\r\nseconds in this problem in order to avoid failing slow input solutions.\r\n"
}