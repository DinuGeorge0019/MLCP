{"link": "https://codeforces.com//contest/1087/problem/E", "problemId": "273649", "problem_idx": "E", "shortId": "1087E", "contest_number": "1087", "problem_submissions": {"E": [58252522, 47419404, 47425055, 47427281, 47427199, 47427772, 47427175, 47429424, 47427691, 47428203, 47426678, 47429553, 47424066, 47442342, 47431388], "F": [47420077, 47423866, 47885139, 47468746, 47429059, 47443089], "D": [47418729, 47408054, 47412096, 47414267, 47413772, 47414393, 47411787, 47412026, 47410837, 47416228, 47416942, 47404060, 47424226, 47415168, 47411121, 47421101, 47407066, 47410268, 47411462, 47409719], "C": [47405054, 47411233, 47407822, 47412155, 47406359, 47410875, 47413841, 47406249, 47409638, 47412893, 47414989, 47429784, 47418255, 47431334, 47431242, 47407433, 47430615, 47412255, 47405671, 47407818, 47406818], "B": [47401231, 47412385, 47401723, 47403755, 47401975, 47403962, 47406414, 47402530, 47402488, 47401578, 47406978, 47400393, 47407454, 47402895, 47400789, 47403406, 47402600, 47400687, 47402493, 47402234], "A": [47400159, 47405287, 47400196, 47400342, 47400796, 47401502, 47401673, 47400758, 47400490, 47400180, 47403017, 47409819, 47408382, 47400648, 47400053, 47400839, 47400496, 47400902, 47400447, 47400696]}, "name": "E. Vasya and Templates", "statement": "Vasya owns three strings s , a and b, each of them consists only of\r\nfirst k Latin letters.Let a template be such a string of length k that\r\neach of the first k Latin letters appears in it exactly once (thus there\r\nare k! distinct templates). Application of template p to the string s is\r\nthe replacement of each character in string s with p_i, i is the index\r\nof this letter in the alphabet. For example, applying template \"\" to a\r\nstring \"\" yields string \"\".Vasya wants to know if there exists such a\r\ntemplate which yields a string lexicographically greater than or equal\r\nto string a and lexicographically less than or equal to string b after\r\napplying it to s.If there exist multiple suitable templates, print any\r\nof them.String a is lexicographically less than string b if there is\r\nsome i (1\r\nle i\r\nle n) that a_i < b_i and for any j (1\r\nle j < i) a_j = b_j.You are required to answer t testcases .\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define ff first\n#define ss second\n#define all(X) begin(X), end(X)\ninline void input(int &_x) {\n    _x = 0;\n    int _tmp = 1; char _tc = getchar();\n    while((_tc < '0' || _tc > '9') && _tc != '-') _tc = getchar();\n    if(_tc == '-') _tc = getchar(), _tmp = -1;\n    while(_tc >= '0' && _tc <= '9') _x = _x*10+(_tc-48), _tc = getchar();\n    _x *= _tmp;\n}\nstring s,a,b;\nint k;\nvector<char>mp,bfmp,gone;\nbool dfs(int,bool,bool);\nbool trylink(int i, char T, char c, bool upl, bool downl){\n\tif(mp[T] && mp[T] != c)return false;\n\tif(bfmp[c] && bfmp[c] != T)return false;\n    bool pre = mp[T] == c;\n\tmp[T] = c;bfmp[c] = T;\n\tif(dfs(i+1,upl,downl))return true;\n\telse {\n        if(!pre)bfmp[c] = 0, mp[T] = 0;\n        return false;\n    }\n}\nbool dfs(int i, bool upl = 0, bool downl = 0){// 0 - no 1 - >aaaa -1 - <zzzz\n\tif(i == s.length())return true;\n\tchar ai = a[i], bi = b[i];\n\tif(downl)ai = 'a';\n\tif(upl)bi = 'a'+k-1;\n    if(ai > bi) return false;\n\tif(ai == bi)\n\t\treturn trylink(i,s[i],ai,upl,downl);\n\n\tif(mp[s[i]]){\n\t\tif(mp[s[i]] == ai)return dfs(i+1,1,downl);\n\t\tif(mp[s[i]] == bi)return dfs(i+1,upl,1);\n\t\tif(mp[s[i]] > ai && mp[s[i]] < bi)return true;\n\t\treturn false;\n\t}\n\n\tfor(char j = ai+1; j < bi; j++){\n\t\tif(bfmp[j])continue;\n\t\tmp[s[i]] = j;\n\t\tbfmp[j] = s[i];\n\t\treturn true;\n\t}\n\n\treturn trylink(i,s[i],ai,1,downl) || trylink(i,s[i],bi,upl,1);\n}\n\nsigned main(){\n\tint n;\n\tinput(n);\n    mp.resize('z'+1);\n    bfmp.resize('z'+1);\n\twhile(n--){\n        fill(all(mp), 0);\n        fill(all(bfmp), 0);\n        input(k);\n        char c;\n        s = \"\", a = \"\", b = \"\";\n        while((c = getchar()) != '\\n') s+=c;\n        while((c = getchar()) != '\\n') a+=c;\n        while((c = getchar()) != '\\n') b+=c;\n\t\tif(dfs(0)){\n\t\t\tputchar('Y');putchar('E');putchar('S');putchar('\\n');\n            string ans = \"\";\n\t\t\tfor(char i = 'a'; i < 'a'+k; i++)if(!bfmp[i])gone.pb(i);\n\t\t\tfor(char i = 'a'; i < 'a'+k; i++){\n\t\t\t\tif(mp[i])putchar(mp[i]);\n\t\t\t\telse{\n\t\t\t\t\tputchar(gone.back());\n                    gone.pop_back();\n\t\t\t\t}\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}else{\n\t\t\tputchar('N');putchar('O');putchar('\\n');\n\t\t}\n\t}\n\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "strings"], "dificulty": "2300", "interactive": false}