{
    "link": "https://codeforces.com//contest/1244/problem/A",
    "problemId": "438880",
    "problem_idx": "A",
    "shortId": "1244A",
    "contest_number": "1244",
    "problem_submissions": {
        "E": [
            62487832,
            62480584,
            62471612,
            62475861,
            62486535,
            62479379,
            62488595,
            62479897,
            62486004,
            62494290,
            62482838,
            62489756,
            62484611,
            62499649,
            62484119,
            62485010,
            62484457,
            62485159,
            62483197
        ],
        "D": [
            62485326,
            62477683,
            62472795,
            62474275,
            62479070,
            62488986,
            62484645,
            62476151,
            62481028,
            62481710,
            62472497,
            62492732,
            62480440,
            62477599,
            62480225,
            62481677,
            62477177,
            62480820,
            62477275
        ],
        "G": [
            62480107,
            62491796,
            62483655,
            62495208,
            62499859,
            62498484,
            62497339,
            62483129,
            62500589,
            62490894,
            62499284,
            62480915,
            62501144,
            62496112,
            62574872,
            62510517
        ],
        "F": [
            62476907,
            62486766,
            62497660,
            62497231,
            62492999,
            62493234,
            62492928,
            62488841,
            62496876,
            62489625,
            62495061,
            62486153,
            62494792,
            62489424,
            62493134,
            62492962,
            62496077,
            62497856,
            62496551
        ],
        "C": [
            62471680,
            62473970,
            62477877,
            62474334,
            62473816,
            62473208,
            62512963,
            62473668,
            62477041,
            62495125,
            62513108,
            62474572,
            62476360,
            62471677,
            62473875,
            62478860
        ],
        "B": [
            62467959,
            62468158,
            62464148,
            62469867,
            62471265,
            62468289,
            62470934,
            62468364,
            62468024,
            62466207,
            62466240,
            62496223,
            62469290,
            62471104,
            62469292,
            62469059,
            62467915,
            62469090,
            62470225
        ],
        "A": [
            62466123,
            62464793,
            62464086,
            62466602,
            62465923,
            62464447,
            62464989,
            62659829,
            62464905,
            62464254,
            62465585,
            62464807,
            62497112,
            62464806,
            62468732,
            62464268,
            62464707,
            62464160,
            62464768,
            62464533
        ]
    },
    "name": "A. Pens and Pencils",
    "statement": "Tomorrow is a difficult day for Polycarp: he has to attend a lectures\r\nand b practical classes at the university! Since Polycarp is a diligent\r\nstudent, he is going to attend all of them.While preparing for the\r\nuniversity, Polycarp wonders whether he can take enough writing\r\nimplements to write all of the lectures and draw everything he has to\r\nduring all of the practical classes. Polycarp writes lectures using a\r\npen (he can\u2019t use a pencil to write lectures!); he can write down c\r\nlectures using one pen, and after that it runs out of ink. During\r\npractical classes Polycarp draws blueprints with a pencil (he can\u2019t use\r\na pen to draw blueprints!); one pencil is enough to draw all blueprints\r\nduring d practical classes, after which it is unusable.Polycarp\u2019s\r\npencilcase can hold no more than k writing implements, so if Polycarp\r\nwants to take x pens and y pencils, they will fit in the pencilcase if\r\nand only if x + y\r\nle k.Now Polycarp wants to know how many pens and pencils should he\r\ntake. Help him to determine it, or tell that his pencilcase doesn\u2019t have\r\nenough room for all the implements he needs tomorrow!Note that you don\u2019t\r\nhave to minimize the number of writing implements (though their total\r\nnumber must not exceed k).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n    int t;\n    cin >> t;\n    while(t--) {\n        int a, b, c, d, k;\n        cin >> a >> b >> c >> d >> k;\n        if((c + a - 1) / c + (d + b - 1) / d > k) cout << \"-1\\n\";\n        else cout << (c + a - 1) / c << ' ' << (d + b - 1) / d << endl;\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Pens and Pencils.json",
    "editorial_link": "https://codeforces.com//blog/entry/70553",
    "editorial": "There is a solution with brute force in and a solution with formulas in\r\n. I\u00e2\u0080\u0099ll describe the latter one.We should determine the minimum number of\r\npens that we should take to be able to write all of the lectures. It is\r\n, but how to compute it easily? We can use some internal ceiling\r\nfunctions. We can also do something like \"compute the integer part of\r\nthe quotient, and then add if the remainder is not zero\". But the\r\neasiest option, in my opinion, is to use the following formula: .The\r\nminimum number of pencils can be calculated using the same method. All\r\nthat\u00e2\u0080\u0099s left is to check that is not less than the total number of\r\nwriting implements we should take.\r\n"
}