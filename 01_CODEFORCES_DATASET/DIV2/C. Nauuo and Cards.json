{"link": "https://codeforces.com//contest/1173/problem/C", "problemId": "355017", "problem_idx": "C", "shortId": "1173C", "contest_number": "1173", "problem_submissions": {"B": [55390180, 55249364, 55248813, 55247081, 55248572, 55248319, 55248049, 55248085, 55247784, 55250606, 55249875, 55247888, 55253438, 55255965, 55247147, 55247479, 55247401, 55252892, 55249644, 55245503, 55249304], "A": [55390168, 55244540, 55242948, 55243093, 55244653, 55243324, 55244848, 55243589, 55244417, 55250689, 55243924, 55243392, 55251670, 55243714, 55243163, 55243456, 55243342, 55251282, 55247743, 55247907, 55243333], "E2": [55264453, 55265045, 55329518, 55304255], "E1": [55264406, 55262702, 55259992, 55263176, 55264651, 55262666, 55266873, 55264627, 55264452, 55266634, 55266464, 55265263, 55264681, 55280794], "D": [55255531, 55258124, 55255281, 55257012, 55256681, 55257269, 55258420, 55260440, 55256109, 55260509, 55259549, 55259968, 55265550, 55252742, 55256814, 55258411, 55258273, 55257931, 55253830, 55257656], "C": [55252151, 55255450, 55254699, 55254410, 55253838, 55254769, 55255630, 55254749, 55258947, 55256880, 55254444, 55257615, 55254129, 55257128, 55254804, 55253939, 55250315, 55254309, 55260196, 55254835]}, "name": "C. Nauuo and Cards", "statement": "Nauuo is a girl who loves playing cards.One day she was playing cards\r\nbut found that the cards were mixed with some empty ones.There are n\r\ncards numbered from 1 to n, and they were mixed with another n empty\r\ncards. She piled up the 2n cards and drew n of them. The n cards in\r\nNauuo\u2019s hands are given. The remaining n cards in the pile are also\r\ngiven in the order from top to bottom.In one operation she can choose a\r\ncard in her hands and play it put it at the bottom of the pile, then\r\ndraw the top card from the pile.Nauuo wants to make the n numbered cards\r\npiled up in increasing order (the i-th card in the pile from top to\r\nbottom is the card i) as quickly as possible. Can you tell her the\r\nminimum number of operations?\r\n", "solutions": ["//2019.6.7 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define INF 0x3f3f3f3f3f3f3f\n#define eps 1e-10\n#define RG register\n#define db double\n#define pc(x) __builtin_popcount(x)\ntypedef pair<int,int> Pair;\n#define mp make_pair\n#define fi first\n#define se second\n#define pi acos(-1.0)\n//inline void add(res &x,const res &y,const res &kcz){\n//    x+=y,x>=kcz?x-=kcz:(x<0?x+=kcz:1);\n//}\n//inline int Add(const res &x,const res &y,const res &kcz){\n//    return x+y>=kcz?x+y-kcz:(x+y<0?x+y+kcz:x+y);\n//}\n//inline int mul(const res &x,const res &y,const res &kcz){\n//    return int(1LL*x*y%kcz);\n//}\n//inline int qpow(res x,res y,const res &kcz){\n//    res ret=1;\n//    while(y){\n//        if(y&1)ret=mul(ret,x,kcz);\n//        y>>=1,x=mul(x,x,kcz);\n//    }\n//    return ret;\n//}\n #define gc getchar\n//inline char gc() {\n//    static char buf[100000],*p1,*p2;\n//    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n//}\ninline int read() {\n    res s=0,ch=gc();\n    while(ch<'0'||ch>'9')ch=gc();\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n    return s;\n}\n//inline int read() {\n//    res s=0,ch=gc(),w=1;\n//    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=gc();}\n//    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n//    return s*w;\n//}\n//inline LL Read() {\n//    RG LL s=0;\n//    res ch=gc();\n//    while(ch<'0'||ch>'9')ch=gc();\n//    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n//    return s;\n//}\n//inline LL Read() {\n//    RG LL s=0;\n//    res ch=gc(),w=1;\n//    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=gc();}\n//    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=gc();\n//    return s*w;\n//}\n//inline void swap(res &x,res &y) {\n//    x^=y^=x^=y;\n//}\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst int N=2e5+10;\nnamespace MAIN {\n    int n;\n    int a[N],b[N];\n    int pos[N];\n    inline bool check(const res &lim){\n        for(res i=1;i<=n;i++){\n            if(pos[i]==lim+i)continue;\n            if(pos[i]+n>lim+i-1)return 0;\n        }\n        return 1;\n    }\n    inline void MAIN(){\n        n=read();\n        for(res i=1;i<=n;i++)a[i]=read();\n        for(res i=1;i<=n;i++)b[i]=read(),pos[b[i]]=i;\n        if(pos[1]&&check(pos[1]-1)){printf(\"%d\\n\",pos[1]-1);return;}\n        res l=0,r=2*n,ret=-1;\n        while(l<=r){\n            res mid=(l+r)>>1;\n            if(check(mid))r=mid-1,ret=mid;\n            else l=mid+1;\n        }\n        printf(\"%d\\n\",ret);\n    }\n}\nint main() {\n//    srand((unsigned)time(NULL));\n    // freopen(\"zao.in\",\"r\",stdin);\n    // freopen(\"std.out\",\"w\",stdout);\n    MAIN::MAIN();\n    return 0;\n}"], "input": "", "output": "", "tags": ["binary search", "greedy", "implementation"], "dificulty": "1800", "interactive": false}