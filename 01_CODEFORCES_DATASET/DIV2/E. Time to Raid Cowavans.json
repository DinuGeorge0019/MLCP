{
    "link": "https://codeforces.com//contest/104/problem/E",
    "problemId": "551",
    "problem_idx": "E",
    "shortId": "104E",
    "contest_number": "104",
    "problem_submissions": {
        "E": [
            594572,
            595447,
            594514,
            593423,
            594676,
            594292,
            594547
        ],
        "C": [
            591857,
            591809,
            591800,
            592033,
            590961,
            15833664,
            592207,
            591755,
            592040,
            591871,
            591464,
            592241,
            593499,
            592011,
            592711,
            594849
        ],
        "D": [
            593368,
            592821,
            593272,
            594806,
            593597,
            594364,
            594478,
            594691,
            596431,
            595141,
            594573,
            592760
        ],
        "B": [
            590511,
            590167,
            590267,
            590358,
            590770,
            590604,
            591136,
            590892,
            591094,
            590607,
            590251,
            590834,
            590212,
            591386,
            590970
        ],
        "A": [
            589657,
            589353,
            589356,
            589622,
            590590,
            589788,
            589796,
            590775,
            590074,
            589669,
            589302,
            590025,
            589306,
            590532,
            589463
        ]
    },
    "name": "E. Time to Raid Cowavans",
    "statement": "As you know, the most intelligent beings on the Earth are, of course,\r\ncows. This conclusion was reached long ago by the Martian aliens, as\r\nwell as a number of other intelligent civilizations from outer space.\r\nSometimes cows gather into . This seems to be seasonal. But at this time\r\nthe cows become passive and react poorly to external stimuli. A cowavan\r\nis a perfect target for the Martian scientific saucer, itâ€™s time for\r\nlarge-scale abductions, or, as the Martians say, raids. Simply put, a\r\ncowavan is a set of cows in a row. If we number all cows in the cowavan\r\nwith positive integers from to , then we can formalize the popular model\r\nof abduction, known as the : first they steal a cow number , then number\r\n, then number , and so on, until the number of an abducted cow exceeds .\r\nDuring one raid the cows are not renumbered. The aliens would be happy\r\nto place all the cows on board of their hospitable ship, but\r\nunfortunately, the amount of cargo space is very, very limited. The\r\nresearchers, knowing the mass of each cow in the cowavan, made scenarios\r\nof the -raid. Now they want to identify the following thing for each\r\nscenario individually: what total mass of pure beef will get on board of\r\nthe ship. All the scenarios are independent, in the process of\r\nperforming the calculations the cows are not being stolen.\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n\n#define FOR(i,n) for (int i = 0; i < n; i++)\n#define abs(x) ((x)<0?(-(x)):(x))\n#define REP(i,v) for (unsigned i = 0; i < v.size(); i++)\n#define RL(i,v) for (unsigned i = 0; i < v.length(); i++)\ntypedef long long ll;\n\nstruct Question {\n\tint a, b, idx;\n\tQuestion() {}\n\tQuestion(int a, int b, int idx) : a(a), b(b), idx(idx) {}\n\tinline bool operator < (const Question& rhs) const\n\t{\n\t\tif (b != rhs.b) return b < rhs.b;\n\t\treturn a < rhs.a;\n\t}\n};\n\nint n;\n#define MAXN 300002\nconst int BOUND = 512;\nll a[MAXN], b[MAXN];\nQuestion questions[MAXN];\nll answers[MAXN];\n\n\nint main(void)\n{\n\tcin >> n;\n\tFOR(i, n) cin >> a[i];\n\tint qn;\n\tcin >> qn;\n\tFOR(i, qn) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tquestions[i] = Question(x - 1, y, i);\n\t}\n\tsort(questions, questions + qn);\n\tint last = 0;\n\tFOR(i, qn) {\n// \t\tif (i % 1000 == 0) printf(\"%dK done\\n\", i/1000);\n\t\tQuestion& q = questions[i];\n\t\tif (q.b < BOUND && last != q.b) {\n\t\t\tlast = q.b;\n\t\t\tfor (int j = n - 1; j >= 0; j--) {\n\t\t\t\tb[j] = a[j];\n\t\t\t\tif (j + q.b < n) b[j] += b[j + q.b];\n\t\t\t}\n\t\t}\n\t\tif (q.b < BOUND) {\n\t\t\tanswers[q.idx] = b[q.a];\n\t\t} else {\n\t\t\tanswers[q.idx] = 0;\n\t\t\tfor (int j = q.a; j < n; j += q.b) {\n\t\t\t\tanswers[q.idx] += a[j];\n\t\t\t}\n\t\t}\n\t}\n\tFOR(i, qn)\n\t\tcout << answers[i] << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Time to Raid Cowavans.json",
    "editorial_link": "https://codeforces.com//blog/entry/2539",
    "editorial": null,
    "hint": []
}