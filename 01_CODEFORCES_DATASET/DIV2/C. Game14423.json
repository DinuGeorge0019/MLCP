{"link": "https://codeforces.com//contest/69/problem/C", "problemId": "372", "problem_idx": "C", "shortId": "69C", "contest_number": "69", "problem_submissions": {"C": [349894, 349614, 350523, 349560, 350776, 350549, 351000, 349942, 666908, 350133, 349952, 349426, 350282, 349696, 349722, 349869, 350920, 349777], "B": [349465, 348708, 348893, 348837, 348839, 349036, 348717, 349280, 348895, 349174, 349021, 348740, 348850, 349870, 349250, 348865, 349111, 348964, 348915], "D": [349262, 349874, 349968, 350206, 350117, 351057, 350472, 350799, 615053, 350148, 350408, 351180, 351030, 352036, 351421, 350961], "E": [349012, 349182, 349347, 349788, 349489, 349727, 349844, 350290, 615043, 349763, 350933, 350789, 349750, 350850, 349215, 348791, 349522, 349971, 350071, 349597, 349978], "A": [348235, 348170, 348402, 348178, 348224, 348337, 348855, 348930, 445218, 348306, 348777, 348388, 348282, 348181, 348122, 348360, 348165, 348416, 348199, 348278]}, "name": "C. Game", "statement": "In one school with Vasya there is a student Kostya. Kostya does not like\r\nphysics, he likes different online games. Every day, having come home,\r\nKostya throws his bag in the farthest corner and sits down at his\r\nbeloved computer. Kostya even eats glued to the game. A few days ago\r\nKostya bought a new RPG game \"HaresButtle\", which differs from all other\r\ngames in this genre. It has a huge number of artifacts. As we know,\r\nartifacts are divided into basic and composite ones. Only the basic\r\nartifacts are available on sale. More powerful composite artifacts are\r\ncollected from some number of basic artifacts.After the composing\r\ncomposite artifact, all the components disappear.Kostya is the head of\r\nthe alliance, so he has to remember, what artifacts has not only\r\nhimself, but also his allies. You must identify by sequence of artifacts\r\npurchased by Kostya and his allies, how many and which artifacts has\r\nbeen collected by each of them. It is believed that initially no one has\r\nany artifacts.\r\n", "solutions": ["#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <string>\n#include <sstream>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint K , N , M , Q ;\nmap < string , int > Basic , F[111] ;\nstring st , Comp_St[60] ;\nvector < pair < string , int > > Comp[60] ;\n\nint main()\n{\n\tcin >> K >> N >> M >> Q ;\n\tfor ( int i = 1 ; i <= N ; i ++ ) {\n\t\tcin >> st ;\n\t\tBasic[st] = i ;\n\t}\n\tfor ( int i = 0 , k ; i < M ; i ++ ) {\n\t\tcin >> st ;\n\t\tst = st.substr( 0 , st.size() - 1 ) ;\n\t\tComp_St[i] = st ;\n\t\tfor ( string stt ; cin >> stt ; ) {\n\t\t\tcin >> k ;\n\t\t\tComp[i].push_back( make_pair( stt , k ) ) ;\n\t\t\tchar ch ;\n\t\t\tscanf( \"%c\" , &ch ) ;\n\t\t\tif ( ch != ',' ) break ;\n\t\t}\n\t}\n\tfor ( int i = 0 , p ; i < Q ; i ++ ) {\n\t\tcin >> p >> st ;\n\t\tF[p][st] ++ ;\n\t\tfor ( int j = 0 ; j < M ; j ++ ) {\n\t\t\tst = Comp_St[j] ;\n\t\t\tbool flag = true ;\n\t\t\tfor ( int k = 0 ; k < Comp[j].size() ; k ++ )\n\t\t\tif ( F[p][Comp[j][k].first] < Comp[j][k].second )\n\t\t\t\tflag = false ;\n\t\t\tif ( flag ) {\n\t\t\t\tF[p][st] ++ ;\n\t\t\t\tfor ( int k = 0 ; k < Comp[j].size() ; k ++ )\n\t\t\t\t\tF[p][Comp[j][k].first] -= Comp[j][k].second ;\n\t\t\t}\n\t\t}\n\t}\n\tfor ( int i = 1 ; i <= K ; i ++ ) {\n\t\tint TOT = 0 ;\n\t\tfor ( map < string , int > :: iterator it = F[i].begin() ; it != F[i].end() ; it ++ )\n\t\tif ( it->second > 0 ) TOT ++ ;\n\t\tprintf( \"%d\\n\" , TOT ) ;\n\t\tfor ( map < string , int > :: iterator it = F[i].begin() ; it != F[i].end() ; it ++ )\n\t\tif ( it->second > 0 ) cout << it->first << \" \" << it->second << endl ;\n\t}\n\treturn 0 ;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "2000", "interactive": false}