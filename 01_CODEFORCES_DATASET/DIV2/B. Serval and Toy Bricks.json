{"link": "https://codeforces.com//contest/1153/problem/B", "problemId": "329967", "problem_idx": "B", "shortId": "1153B", "contest_number": "1153", "problem_submissions": {"F": [52702167, 52706102, 52706128, 52712612, 52712916, 52713472, 52705273, 53020024], "B": [52696113, 52686055, 52686525, 52695492, 52689812, 52686724, 52686280, 52688127, 52685475, 52701491, 52686741, 52698339, 52691737, 52687040, 52687523, 52688787, 52686777, 52686537, 52688504], "E": [52693078, 52699456, 52700287, 52698093, 52707544, 52707213, 52699436, 52799036, 52699341, 52698614, 52704976, 52690529, 52703713, 52700978, 52703569, 52699263, 52702855, 52704578], "C": [52688281, 52690605, 52689780, 52702384, 52693171, 52696923, 52689825, 52696486, 52688289, 52687066, 52689512, 52696924, 52687069, 52688673, 52691802, 52692527, 52691364, 52690866, 52691574], "D": [52686405, 52692724, 52692621, 52691138, 52695645, 52702315, 52692971, 52694653, 52693169, 52691270, 52695539, 52695198, 52699214, 52692631, 52695518, 52703264, 52696334, 52697661, 52695431], "A": [52684329, 52684726, 52684448, 52687427, 52684995, 52684651, 52684577, 52684221, 52684289, 52684251, 52684828, 52699079, 52689885, 52684309, 52684805, 52684271, 52684301, 52684354, 52684338]}, "name": "B. Serval and Toy Bricks", "statement": "Luckily, Serval got onto the right bus, and he came to the kindergarten\r\non time. After coming to kindergarten, he found the toy bricks very\r\nfunny.He has a special interest to create difficult problems for others\r\nto solve. This time, with many 1\r\ntimes 1\r\ntimes 1 toy bricks, he builds up a 3-dimensional object. We can describe\r\nthis object with a n\r\ntimes m matrix, such that in each cell (i,j), there are h_{i,j} bricks\r\nstanding on the top of each other.However, Serval doesn\u2019t give you any\r\nh_{i,j}, and just give you the front view, left view, and the top view\r\nof this object, and he is now asking you to restore the object. Note\r\nthat in the front view, there are m columns, and in the i-th of them,\r\nthe height is the maximum of h_{1,i},h_{2,i},\r\ndots,h_{n,i}. It is similar for the left view, where there are n\r\ncolumns. And in the top view, there is an n\r\ntimes m matrix t_{i,j}, where t_{i,j} is 0 or 1. If t_{i,j} equals 1,\r\nthat means h_{i,j}>0, otherwise, h_{i,j}=0.However, Serval is very\r\nlonely because others are bored about his unsolvable problems before,\r\nand refused to solve this one, although this time he promises there will\r\nbe at least one object satisfying all the views. As his best friend, can\r\nyou have a try?\r\n", "solutions": ["//ihdignite\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 1e2;\n\nint n, m, h, a[MAXN], b[MAXN], c[MAXN][MAXN];\n\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(NULL);\n\n\tcin >> n >> m >> h;\n\tfor(int i=0; i<m; ++i)\n\t\tcin >> a[i];\n\tfor(int i=0; i<n; ++i)\n\t\tcin >> b[i];\n\tfor(int i=0; i<n; ++i) {\n\t\tfor(int j=0; j<m; ++j) {\n\t\t\tcin >> c[i][j];\n\t\t\tif(c[i][j])\n\t\t\t\tc[i][j]=min(a[j], b[i]);\n\t\t\tcout << c[i][j] << \" \";\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1200", "interactive": false}