{
    "link": "https://codeforces.com//contest/789/problem/A",
    "problemId": "100712",
    "problem_idx": "A",
    "shortId": "789A",
    "contest_number": "789",
    "problem_submissions": {
        "E": [
            25921417,
            25928664,
            25938608,
            26079210,
            25947954,
            26156847,
            25952720,
            25948873,
            25927282,
            25920863
        ],
        "C": [
            25907485,
            25920845,
            25908240,
            25909409,
            25909007,
            25905160,
            25908451,
            25908709,
            25907436,
            25913347,
            25910091,
            25912715,
            25905998,
            25914226,
            25910850,
            25914881,
            25912811,
            25910391
        ],
        "B": [
            25905735,
            25936346,
            25905545,
            25905376,
            25905148,
            25909677,
            25906183,
            25904190,
            25902630,
            25909186,
            25906079,
            25908841,
            25906659,
            25906692,
            25949245,
            25917385,
            25906432,
            25939487
        ],
        "A": [
            25903396,
            25902876,
            25900899,
            25900290,
            25900204,
            25900048,
            25900683,
            25900192,
            25900117,
            25900433,
            25900607,
            25901029,
            25900382,
            25900017,
            25900928,
            25900038,
            25900011,
            25900777
        ],
        "D": [
            25920092,
            25917739,
            25919852,
            25922157,
            25919194,
            25919753,
            25920835,
            25927363,
            25921216,
            25924692,
            25924134,
            25910294,
            25927095,
            25925921,
            25927864
        ]
    },
    "name": "A. Anastasia and pebbles",
    "statement": "Anastasia loves going for a walk in Central Uzhlyandian Park. But she\r\nbecame uninterested in simple walking, so she began to collect\r\nUzhlyandian pebbles. At first, she decided to collect all the pebbles\r\nshe could find in the park.She has only . She can put at most pebbles in\r\neach pocket at the same time. There are different pebble types in the\r\npark, and there are pebbles of the -th type. Anastasia is very\r\nresponsible, so she never mixes pebbles of different types in same\r\npocket. However, she can put different kinds of pebbles in different\r\npockets at the same time. Unfortunately, she can\u2019t spend all her time\r\ncollecting pebbles, so she can collect pebbles from the park only once a\r\nday.Help her to find the minimum number of days needed to collect all\r\nthe pebbles of Uzhlyandian Central Park, taking into consideration that\r\nAnastasia can\u2019t place pebbles of different types in same pocket.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tint cnt = 0;\n\twhile(n--)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tcnt += (x+k-1)/k;\n\t}\n\tprintf(\"%d\\n\",(cnt+1)/2);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Anastasia and pebbles.json",
    "editorial_link": "https://codeforces.com//blog/entry/51312",
    "editorial": "For every pebble type we can count the minimal number of pockets\r\nAnastasia need to collect all pebbles of this type. That\u00e2\u0080\u0099s easy to\r\nnotice that this number equals . So the answer for the problem is .\r\nSolution complexity is .\r\n"
}