{
    "link": "https://codeforces.com//contest/2102/problem/A",
    "problemId": "3379879",
    "problem_idx": "A",
    "shortId": "2102A",
    "contest_number": "2102",
    "problem_submissions": {
        "F": [
            319286602,
            319289386,
            319448729
        ],
        "D": [
            319242440,
            319239148,
            319249290,
            319249952,
            319245490,
            319255095,
            319248048,
            319256182,
            319263500,
            319273386,
            319263411,
            319271144,
            319273350,
            319262239,
            319263821,
            319278652,
            319260289,
            319268007,
            319268385
        ],
        "C": [
            319230451,
            319228419,
            319230937,
            319235602,
            319234478,
            319240126,
            319231996,
            319231075,
            319238712,
            319241029,
            319246278,
            319244708,
            319240604,
            319237747,
            319235788,
            319225890,
            319227523,
            319249855,
            319241267
        ],
        "B": [
            319222969,
            319221630,
            319222016,
            319220113,
            319224317,
            319223605,
            319219094,
            319220695,
            319225176,
            319216814,
            319224576,
            319226183,
            319226409,
            319226003,
            319229218,
            319217580,
            319217355,
            319241924,
            319230817
        ],
        "A": [
            319221576,
            319216356,
            319216503,
            319216061,
            319218195,
            319215418,
            319215493,
            319217119,
            319227024,
            319217420,
            319215189,
            319219232,
            319240055,
            319215536,
            319215440,
            319215191,
            319222683,
            319219607
        ],
        "E": [
            319275764,
            319278845,
            319263831,
            319282197,
            319278866,
            319280500,
            319280125,
            319284264,
            319289922,
            319285799,
            319289028,
            319290886,
            319289136,
            319288355,
            319290086,
            319295166,
            319289250,
            319290453
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/142788",
    "editorial": "SolutionThe first thing to realize is that if the first elements of the\r\narray are determined, the rest will be unique ( to hold the sum). If\r\ndivides , there will be blocks, each summing to , so their total sum\r\nwhich is should be equal to . If not, the incomplete block that is\r\ncreated at the end can be used to cover any difference in sum, so itâ€™s\r\nalways possible!\r\n",
    "name": "A. Dinner Time",
    "statement": "Given four integers n, m, p, and q, determine whether there exists an\r\ninteger array a_1, a_2,\r\nldots, a_n (elements may be negative) satisfying the following\r\nconditions: The sum of all elements in the array is equal to m: a_1 +\r\na_2 +\r\nldots + a_n = m The sum of every p consecutive elements is equal to q:\r\na_i + a_{i + 1} +\r\nldots + a_{i + p - 1} = q,\r\nqquad\r\ntext{ for all }1\r\nle i\r\nle n-p+1\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Dinner Time.json",
    "hint": [
        "Hint 1 If you have the first elements, what happens to the rest?",
        "Hint 2 What happens if ?",
        "Hint 3 How can the fact that we can also use negative numbers be useful?"
    ]
}