{"link": "https://codeforces.com//contest/675/problem/E", "problemId": "60392", "problem_idx": "E", "shortId": "675E", "contest_number": "675", "problem_submissions": {"E": [17948562, 17949439, 17951477, 17952621, 17953457, 17950428, 17953529, 17947770, 17951235, 17951895, 17951367, 17951619, 17948510, 17952736, 17951724], "C": [17943932, 17938689, 17941522, 17944729, 17944175, 17953098, 17943056, 17944846, 17947374, 17939953, 17962657, 17966235, 17954725, 17940735, 17941726, 22255966, 17952634, 17944646, 17957135], "D": [17942614, 17940890, 17945507, 17947894, 17948215, 17945745, 17947110, 17948235, 17945049, 17945728, 17947720, 17940113, 17945095, 17943288, 17943504, 17946575, 17949945, 17942674, 17945705, 17947663], "B": [17938759, 17936066, 17938993, 17938420, 17938948, 17938583, 17948981, 17937018, 17940037, 17964516, 17938191, 17942540, 17939538, 17937369, 17937220, 17939353, 17954945, 17936753, 17939065, 17939668], "A": [17936166, 17934371, 17935192, 17936993, 17935281, 17935512, 17947868, 17934798, 17935340, 17934655, 17934645, 17943337, 17937162, 17934833, 17935029, 17935291, 17934716, 17934453, 17934986, 17937083]}, "name": "E. Trains and Statistic", "statement": "Vasya commutes by train every day. There are train stations in the city,\r\nand at the -th station it\u2019s possible to buy only tickets to stations\r\nfrom to inclusive. No tickets are sold at the last station.Let be the\r\nminimum number of tickets one needs to buy in order to get from stations\r\nto station . As Vasya is fond of different useless statistic he asks you\r\nto compute the sum of all values among all pairs .\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nconst int N = 1e6 + 41;\n\npair<int, int> t[N];\n\nvoid add(int v, int l, int r, int p, int x)\n{\n    if (l + 1 == r)\n    {\n        t[v] = make_pair(x, p);\n        return;\n    }\n    int m = (l + r) / 2;\n    if (p < m)\n        add(v * 2 + 1, l, m, p, x);\n    else\n        add(v * 2 + 2, m, r, p, x);\n    t[v] = max(t[v * 2 + 1], t[v * 2 + 2]);\n}\n\npair<int, int> mx(int v, int l, int r, int L, int R)\n{\n    if (l >= R || L >= r)\n        return make_pair(-N, 41);\n    if (L <= l && r <= R)\n        return t[v];\n    int m = (l + r) / 2;\n    return max(mx(v * 2 + 1, l, m, L, R), mx(v * 2 + 2, m, r, L, R));\n}\n\nll sum;\nll a[N];\nint d[N];\nint k, n;\n\nint main()\n{\n    for (int i = 0; i < N; i++)\n    {\n        t[i] = make_pair(-N, 41);\n    }\n\n    //freopen(\"a.in\", \"r\", stdin);\n    //freopen(\"a.out\", \"w\", stdout);\n\n    scanf(\"%d\", &n);\n    for (int i = 0; i + 1 < n; i++)\n    {\n        scanf(\"%d\", d + i);\n        d[i]--;\n    }\n\n    add(0, 0, n, n - 2, n - 1);\n    sum = a[n - 2] = 1;\n\n    int p;\n\n    for (int i = n - 3; i >= 0; i--)\n    {\n        k = d[i];\n        p = mx(0, 0, n, i + 1, k + 1).second;\n        a[i] = p - i + a[p] + (n - k - 1);\n        sum += a[i];\n        add(0, 0, n, i, k);\n    }\n\n    cout << sum << \"\\n\";\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "dp", "greedy"], "dificulty": "2300", "interactive": false}