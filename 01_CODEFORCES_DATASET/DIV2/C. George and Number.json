{
    "link": "https://codeforces.com//contest/387/problem/C",
    "problemId": "6208",
    "problem_idx": "C",
    "shortId": "387C",
    "contest_number": "387",
    "problem_submissions": {
        "C": [
            27999099,
            5844874,
            5841061,
            5847589,
            5843566,
            5843851,
            5849910,
            5846186,
            5847507,
            5847850,
            5846546,
            5848509,
            5848776,
            5843425,
            5843791,
            5843206,
            5842568,
            5843393
        ],
        "B": [
            27998713,
            5840894,
            5845641,
            5840512,
            5841082,
            5840804,
            5840526,
            5841204,
            5841355,
            5848318,
            5840963,
            5842246,
            5843788,
            5839620,
            5840413,
            5840368,
            5840193,
            5840883
        ],
        "A": [
            27997874,
            5839643,
            5839445,
            5839653,
            5839813,
            5839532,
            5840047,
            5839968,
            5848701,
            5839527,
            5840349,
            5840457,
            5839510,
            5839440,
            5839451,
            5839441,
            5839465
        ],
        "E": [
            5844573,
            5844315,
            5853477,
            5849230,
            5849007,
            5850779,
            5846373,
            5849357,
            5848789,
            5849640,
            5846140,
            5851142,
            5849993,
            5849270,
            5851283,
            5851268,
            5851181,
            5850678
        ],
        "D": [
            5843391,
            5847525,
            5847251,
            5847489,
            5848775,
            5866620,
            5866616
        ]
    },
    "name": "C. George and Number",
    "statement": "George is a cat, so he really likes to play. Most of all he likes to\r\nplay with his array of positive integers . During the game, George\r\nmodifies the array by using special changes. Let\u2019s mark George\u2019s current\r\narray as (record denotes the current length of the array). Then one\r\nchange is a sequence of actions: Choose two distinct indexes and , such\r\nthat . Get number , where is a number obtained by adding number to the\r\nend of the decimal record of number . For example, , . Add number to the\r\nend of the array. The length of the array will increase by one. Remove\r\nfrom the array numbers with indexes and . The length of the array will\r\ndecrease by two, and elements of the array will become re-numbered from\r\nto current length of the array. George played for a long time with his\r\narray and received from array an array consisting of exactly one number\r\n. Now George wants to know: what is the maximum number of elements array\r\ncould contain originally? Help him find this number. Note that\r\noriginally the array could contain only integers.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n\n\n#define NN 100011\n\nusing namespace std;\n\ntypedef long long INT;\n\ntypedef pair<int, int> pii;\n\n\n\nchar s[NN], tmp[NN];\n\nstring arr[NN];\n\n\n\nint main() {\n\n\n\n\t\n\n\tscanf(\"%s\" ,s);\n\n\tint n=strlen(s), i,j;\n\n\t\n\n\tint nn=0;\n\n\tstring tmp;\n\n\t\n\n\tfor(i=0; i<n; ){\n\n\t\twhile(s[i+1]=='0') {\n\n\t\t\tarr[nn]+=s[i];\n\n\t\t\ti++;\n\n\t\t}\n\n\t\tarr[nn]+=s[i];\n\n\t\ti++;\n\n\t\tnn++;\n\n\t}\n\n\t\n\n\tint st=0;\n\n\tfor(i=0; i<nn; i++){\n\n\t\tif(i==0) tmp=arr[i];\n\n\t\telse tmp+=arr[i];\n\n\t\tif(tmp.size()<arr[i+1].size()) st=i+1;\n\n\t\telse if(tmp.size()==arr[i+1].size() && tmp<arr[i+1])  st=i+1;\n\n\t}\n\n\t\n\n\tcout<<nn-st<<endl;\n\n\treturn 0;\n\n}\n\n\n                     "
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. George and Number.json",
    "editorial_link": "https://codeforces.com//blog/entry/10583",
    "editorial": "Let\u00e2\u0080\u0099s obtain the following irreducible representation of a number ,\r\nwhere is a concatenation, and numbers have the form (x is non zero\r\ndigit, and after that there are only zeroes). Let\u00e2\u0080\u0099s determine largest\r\nindex , such that . If there are no such index then . After that is .\r\nYou can compare numbers by using length of number and first digit. You\r\ncan prove these solution as home task : ) The complexity is: time /\r\nmemory. Author\u00e2\u0080\u0099s solution: 5850919\r\n"
}