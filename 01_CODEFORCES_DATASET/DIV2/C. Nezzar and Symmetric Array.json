{
    "link": "https://codeforces.com//contest/1478/problem/C",
    "problemId": "879391",
    "problem_idx": "C",
    "shortId": "1478C",
    "contest_number": "1478",
    "problem_submissions": {
        "F": [
            105745770,
            105755730,
            105740257,
            105759758,
            105734600,
            105755284,
            105756717,
            105766844,
            105793777,
            105757168,
            105755750,
            105751368,
            105774495,
            105749168,
            105760060
        ],
        "E": [
            105741982,
            105745927,
            105765147,
            105765706,
            105765965,
            105763865,
            105754042,
            105761626,
            105739939,
            105721165,
            105766403,
            105749463,
            105750984,
            105763896,
            105756596,
            105752745
        ],
        "D": [
            105701384,
            105722470,
            105753195,
            105738392,
            105746684,
            105720945,
            105734191,
            105749589,
            105715391,
            105733991,
            105751898,
            105743147,
            105712944,
            105730170,
            105705577,
            106043703,
            105747710,
            105704995,
            105736139
        ],
        "C": [
            105694901,
            105704831,
            105695273,
            105720027,
            105742447,
            105744248,
            105740268,
            105734450,
            105693735,
            105690240,
            105751278,
            105716768,
            105739420,
            105702365,
            105732790,
            105719496,
            105717686,
            105735493,
            105713455
        ],
        "B": [
            105686332,
            105685165,
            105684581,
            105689777,
            105689090,
            105695004,
            105684674,
            105704956,
            105686767,
            105697452,
            105714810,
            105690830,
            105686870,
            105681347,
            105686702,
            105690335,
            105688451,
            105684176,
            105689461
        ],
        "A": [
            105679437,
            105677748,
            105676437,
            105679439,
            105676338,
            105678358,
            105795468,
            105681333,
            105678297,
            105686569,
            105679854,
            105679642,
            105677865,
            105676184,
            105678986,
            105680204,
            105677192,
            105687845,
            105679361
        ]
    },
    "name": "C. Nezzar and Symmetric Array",
    "statement": "Long time ago there was a symmetric array a_1,a_2,\r\nldots,a_{2n} consisting of 2n . Array a_1,a_2,\r\nldots,a_{2n} is called symmetric if for each integer 1\r\nle i\r\nle 2n, there exists an integer 1\r\nle j\r\nle 2n such that a_i = -a_j.For each integer 1\r\nle i\r\nle 2n, Nezzar wrote down an integer d_i equal to the sum of absolute\r\ndifferences from a_i to all integers in a, i. e. d_i =\r\nsum_{j = 1}^{2n} {|a_i - a_j|}.Now a million years has passed and Nezzar\r\ncan barely remember the array d and totally forget a. Nezzar wonders if\r\nthere exists any symmetric array a consisting of 2n distinct integers\r\nthat generates the array d.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 200100\n\ntypedef long long ll;\n\nint n;\nll a[N], d[N];\n\nint main() {\n    int T;\n    scanf(\"%d\", &T);\n    while (T --) {\n\t\tscanf(\"%d\", &n);\n\t\tfor (int i = 0; i < 2 * n; i ++) scanf(\"%lld\", &d[i]);\n\t\tsort(d, d + 2 * n);\n\t\tbool ok = true; d[2*n] = a[n] = 0;\n\t\tfor (int i = n - 1; i >= 0; i --) {\n\t\t\tif (d[2*i] != d[2*i+1]) ok = false;\n\t\t\tll del = d[2*i+2] - d[2*i];\n\t\t\tif (del == 0 || del % (2 * (i + 1)) != 0) ok = false;\n\t\t\ta[i] = a[i+1] - del / (2 * (i + 1));\n\t\t}\n\t\tif (ok && a[0] > 0) puts(\"YES\");\n\t\telse puts(\"NO\");\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math",
        "sortings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Nezzar and Symmetric Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/87294",
    "editorial": "WLOG, we may assume that 0 < a_1 < a_2 <\r\nldots < a_n, and a_{i+n}=-a_i for each 1\r\nle i\r\nle n.Letâs sort array d firstly. It can be observed that the array d\r\nsatisfied the following property: d_{2i-1}=d_{2i} for each 1\r\nle i\r\nle n; d_{2i}\r\nneq d_{2i+2} for each 1\r\nle i < n. d_{2i} must be generated for index i or i+n. More importantly,\r\nwe have the following relation: d_{2n}-d_{2n-2}=\r\nsum_{i=1}^{n} (a_n-a_i)+\r\nsum_{i=1}^n (a_n+a_i) -\r\nsum_{i=1}^n|a_{n-1}-a_i| -\r\nsum_{i=1}^n (a_{n-1}+a_i) = (2n-2)(a_n-a_{n-1})And observe that\r\n|a_i-a_n|+|a_i+a_n|=2a_n is a constant independent of index 1\r\nle i\r\nle n. Therefore, we may remove a_n and -a_n by subtracting some constant\r\nfor d_i for all 1\r\nle i\r\nle 2(n-1), indicating that we will calculate a_{i+1}-a_{i} for all 1\r\nle i < n, which can be done in O(n).Lastly, we should determine if there\r\nexists an postivie integer a_1 which generates d_1, which can be done in\r\nO(n).\r\n",
    "hint": []
}