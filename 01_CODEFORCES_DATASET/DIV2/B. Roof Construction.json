{
    "link": "https://codeforces.com//contest/1632/problem/B",
    "problemId": "1278696",
    "problem_idx": "B",
    "shortId": "1632B",
    "contest_number": "1632",
    "problem_submissions": {
        "E1": [
            144553548,
            144546555,
            144538505,
            144560614,
            144555177,
            144570181,
            144567095,
            144564117,
            144551128,
            144572195,
            144551374,
            144572612,
            144560176,
            144549481,
            144570313,
            144572945,
            144573371,
            144573243,
            144781904,
            144570037,
            144576051
        ],
        "E2": [
            144553397,
            144546628,
            144538238,
            144560696,
            144576825,
            144570290,
            144567223,
            144574776,
            144578234,
            144577114,
            144552629,
            144572667,
            144560118,
            144548760,
            144782104
        ],
        "D": [
            144544326,
            144548567,
            144544619,
            144545949,
            144545344,
            144546263,
            144548360,
            144547457,
            144566603,
            144552042,
            144576325,
            144552296,
            144564979,
            144562009,
            144548406,
            144547745,
            144554067,
            144547333,
            144551486,
            144552100
        ],
        "C": [
            144532256,
            144532333,
            144552739,
            144539867,
            144537184,
            144535548,
            144541623,
            144538433,
            144533445,
            144536971,
            144534634,
            144543706,
            144539573,
            144565645,
            144540061,
            144544063,
            144537135,
            144540356,
            144543986,
            144538265
        ],
        "B": [
            144523270,
            144523937,
            144553855,
            144517645,
            144517755,
            144524308,
            144521003,
            144519652,
            144518659,
            144523687,
            144526327,
            144529945,
            144526501,
            144567195,
            144520516,
            144517692,
            144524688,
            144521488,
            144525583,
            144520661
        ],
        "A": [
            144513769,
            144520637,
            144555034,
            144512533,
            144512726,
            144517704,
            144512723,
            144512551,
            144512467,
            144515604,
            144512655,
            144515813,
            144521079,
            144555040,
            144512525,
            144512590,
            144514275,
            144515034,
            144512507,
            144513160
        ]
    },
    "name": "B. Roof Construction",
    "statement": "It has finally been decided to build a roof over the football field in\r\nSchool 179. Its construction will require placing n consecutive vertical\r\npillars. Furthermore, the headmaster wants the heights of all the\r\npillars to form a permutation p of integers from 0 to n - 1, where p_i\r\nis the height of the i-th pillar from the left (1\r\nle i\r\nle n).As the chief, you know that the cost of construction of\r\nconsecutive pillars is equal to of heights of all pairs of adjacent\r\npillars. In other words, the cost of construction is equal to\r\nmax\r\nlimits_{1\r\nle i\r\nle n - 1}{p_i\r\noplus p_{i + 1}}, where\r\noplus denotes the bitwise XOR operation.Find any sequence of pillar\r\nheights p of length n with the smallest construction cost.In this\r\nproblem, a permutation is an array consisting of n distinct integers\r\nfrom 0 to n - 1 in arbitrary order. For example, [2,3,1,0,4] is a\r\npermutation, but [1,0,1] is not a permutation (1 appears twice in the\r\narray) and [1,0,3] is also not a permutation (n=3, but 3 is in the\r\narray).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nint T, n, m;\n\nvoid realmain(){\n    m=20;\n    while ((1<<m)>=n) --m;\n    for (int i=(1<<m)-1;i>=0;--i) printf(\"%d \",i);\n    for (int i=(1<<m);i<n;++i) printf(\"%d \",i);\n    puts(\"\");\n}\n\nint main(){\n    for (cin>>T;T--;){\n        cin>>n;\n        realmain();\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Roof Construction.json",
    "editorial_link": "https://codeforces.com//blog/entry/99442",
    "editorial": "SolutionLet be the highest set bit in . There will always be a pair of\r\nadjacent elements where one of them has the -th bit set and the other\r\none doesn\u00e2\u0080\u0099t, so the cost is at least . A simple construction that\r\nreaches it is , , , , , , , .Time complexity: Bonus: count the number of\r\npermutations with the minimum cost.\r\n"
}