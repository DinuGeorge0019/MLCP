{"link": "https://codeforces.com//contest/1562/problem/F", "problemId": "1090693", "problem_idx": "F", "shortId": "1562F", "contest_number": "1562", "problem_submissions": {"D1": [127110573, 127085719, 127084796, 127084014, 127082028, 127085521, 127097411, 127086825, 127084098, 127152628, 127086357, 127091256, 127089578, 127094935, 127087378, 127145842, 127096913, 127085638, 127093081, 127092946, 127097887], "C": [127103744, 127070687, 127073196, 127078874, 127072653, 127077271, 127080224, 127080082, 127076281, 127152605, 127080001, 127084225, 127080395, 127079018, 127078269, 127145835, 127074373, 127074883, 127071594, 127080320, 127084605], "F": [127097089, 127135208, 127161728, 127161600, 127229394, 127157826, 127137600, 127137538], "B": [127076926, 127064047, 127067878, 127063714, 127064849, 127070358, 127068285, 127074157, 127067634, 127152598, 127071567, 127066882, 127070574, 127066706, 127070386, 127145825, 127065946, 127063213, 127065381, 127068953, 127075580], "E": [127072906, 127104112, 127107000, 127110960, 127115711, 127114212, 127106853, 127106260, 127114534, 127115452, 127152643, 127119064, 127113726, 127111252, 127120883, 127122598, 127145862, 127118199, 127123949, 127112032, 127125984, 127116259], "A": [127058831, 127058219, 127058722, 127058582, 127058274, 127060830, 127061981, 127062185, 127059322, 127061493, 127152592, 127059028, 127058289, 127059753, 127058370, 127060017, 127145811, 127058384, 127058502, 127058367, 127058839, 127058595], "D2": [127087276, 127093820, 127092460, 127093109, 127096811, 127100821, 127112348, 127097441, 127096385, 127152634, 127098403, 127095759, 127102138, 127094867, 127102605, 127145854, 127108326, 127092734, 127119011, 127100809, 127104819]}, "name": "F. Tubular Bells", "statement": "Do you know what tubular bells are? They are a musical instrument made\r\nup of cylindrical metal tubes. In an orchestra, tubular bells are used\r\nto mimic the ringing of bells.Mike has tubular bells, too! They consist\r\nof n tubes, and each of the tubes has a length that can be expressed by\r\na integer from l to r inclusive. It is clear that the lengths of all the\r\ntubes are different (it makes no sense to make the same tubes). It is\r\nalso known that r-l+1 = n.Formally, we can say that Mike\u2019s tubular bells\r\nare described by a permutation a of length n that contains all numbers\r\nfrom l to r inclusive, with a_i denoting the length of the i-th tube.You\r\nare offered an interesting task: to guess what Mike\u2019s instrument looks\r\nlike. Simply, you must guess the permutation.Mike won\u2019t tell you l or r.\r\nHe will only tell you n, and will allow you to ask no more than n + 5000\r\nqueries.In each query, you name two positive integers x, y such that 1\r\nle x, y\r\nle n, x\r\nneq y. In response to this query, the program written by Mike will give\r\nyou\r\nmathrm{lcm}(a_x, a_y), where\r\nmathrm{lcm}(c,d) denotes the least common multiple of c and d.Solve\r\nMike\u2019s problem!\r\n", "solutions": ["#include <chrono>\n#include <cstdio>\n#include <iostream>\n#include <random>\nusing namespace std;\ntypedef long long ll;\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\nint n, p[200005], s, a[5005], b[5005], c[5005], ans[100005];\nint g[100005];\nbool np[200005];\ninline int gcd(int n, int m) { return !m ? n : gcd(m, n % m); }\ninline int mp(ll n) {\n  int ans = 0;\n  for (int i = 1; 1ll * p[i] * p[i] <= n; i++)\n    if (n % p[i] == 0) {\n      ans = max(ans, p[i]);\n      while (n % p[i] == 0) n /= p[i];\n    }\n  if (n > 1) ans = max(ans, (int)n);\n  return ans;\n}\nnamespace task0 {\nll a[105][105];\nbool u[105];\nint ans[105];\nvoid solve() {\n  ll mx = 0;\n  for (int i = 1; i <= n; i++) u[i] = 0;\n  for (int i = 1; i <= n; i++)\n    for (int j = i + 1; j <= n; j++) {\n      printf(\"? %d %d\\n\", i, j), fflush(stdout);\n      scanf(\"%lld\", a[i] + j);\n      mx = max(mx, a[i][j]);\n    }\n  int rt = 0, x = (int)sqrt(mx) + 1;\n  for (int i = 1; i <= n; i++)\n    for (int j = i + 1; j <= n; j++) {\n      if (a[i][j] != mx) continue;\n      for (int k = 1; k <= n; k++) {\n        if (k == i || k == j) continue;\n        if (a[min(i, k)][max(i, k)] == 1ll * (x - 1) * (x - 2)) {\n          rt = j;\n          continue;\n        }\n        if (a[min(j, k)][max(j, k)] == 1ll * (x - 1) * (x - 2)) {\n          rt = i;\n          continue;\n        }\n      }\n    }\n  for (int i = 0; i < n; i++) {\n    u[rt] = 1, ans[rt] = x - i;\n    int nt = 0;\n    for (int j = 1; j < rt; j++)\n      if (a[j][rt] == 1ll * (x - i) * (x - i - 1) && u[j] == 0) {\n        nt = j;\n        break;\n      }\n    for (int j = rt + 1; j <= n; j++)\n      if (a[rt][j] == 1ll * (x - i) * (x - i - 1) && u[j] == 0) {\n        nt = j;\n        break;\n      }\n    rt = nt;\n  }\n  printf(\"!\");\n  for (int i = 1; i <= n; i++) printf(\" %d\", ans[i]);\n  cout << endl;\n  fflush(stdout);\n}\n}  // namespace task0\nint main() {\n  for (int i = 2; i <= 200000; i++) {\n    if (!np[i]) p[++s] = i;\n    for (int j = 1; j <= s && i * p[j] <= 200000; j++) {\n      np[i * p[j]] = 1;\n      if (i % p[j] == 0) break;\n    }\n  }\n  int t;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    int lim = 5000, x = 0;\n    if (n <= 100) {\n      task0::solve();\n      continue;\n    }\n    for (int i = 1; i <= lim; i++) {\n      a[i] = rnd() % n + 1, b[i] = rnd() % n + 1;\n      while (b[i] == a[i]) b[i] = rnd() % n + 1;\n      printf(\"? %d %d\\n\", a[i], b[i]), fflush(stdout);\n      ll y;\n      scanf(\"%lld\", &y);\n      c[i] = mp(y);\n      if (c[i] > c[x]) x = i;\n    }\n    int tp = rnd() % n + 1;\n    while (tp == a[x] || tp == b[x]) tp = rnd() % n + 1;\n    printf(\"? %d %d\\n\", a[x], tp), fflush(stdout);\n    ll y;\n    scanf(\"%lld\", &y);\n    int rt;\n    if (mp(y) == c[x])\n      rt = a[x];\n    else\n      rt = b[x];\n    for (int i = 1; i <= n; i++) {\n      if (i == rt) {\n        ans[i] = c[x];\n        continue;\n      }\n      printf(\"? %d %d\\n\", rt, i), fflush(stdout);\n      ll y;\n      scanf(\"%lld\", &y);\n      ans[i] = y / c[x];\n    }\n    printf(\"!\");\n    for (int i = 1; i <= n; i++) printf(\" %d\", ans[i]);\n    cout << endl, fflush(stdout);\n  }\n}\n"], "input": "", "output": "", "tags": ["interactive", "math", "number theory", "probabilities"], "dificulty": "2900", "interactive": false}