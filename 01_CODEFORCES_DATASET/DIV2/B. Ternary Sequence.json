{
    "link": "https://codeforces.com//contest/1401/problem/B",
    "problemId": "704914",
    "problem_idx": "B",
    "shortId": "1401B",
    "contest_number": "1401",
    "problem_submissions": {
        "E": [
            90589999,
            90578154,
            90605920,
            90584030,
            90594969,
            90593911,
            90572580,
            90599304,
            90615088,
            90675249,
            90605781,
            90590132,
            90599391,
            90594214,
            90758857,
            90645951,
            90601216
        ],
        "F": [
            90580393,
            90597215,
            90579684,
            90610107,
            90603479,
            90603116,
            90603512,
            90617786,
            90601646,
            90675259,
            90613571,
            90583132,
            90589402,
            90594866,
            90604055,
            90620941,
            90598510,
            90646625
        ],
        "D": [
            90560258,
            90565538,
            90550432,
            90567225,
            90569423,
            90571869,
            90587693,
            90567049,
            90578884,
            90577112,
            90563897,
            90566957,
            90557267,
            90573179,
            90565326,
            90564972,
            90565503,
            90568268,
            90571582
        ],
        "C": [
            90551509,
            90552981,
            90554787,
            90547352,
            90555070,
            90559549,
            90607672,
            90556632,
            90562455,
            90568524,
            90549734,
            90553714,
            90548534,
            90548686,
            90550222,
            90543917,
            90550988,
            90557805,
            90555836
        ],
        "B": [
            90546499,
            90547295,
            90558760,
            90542536,
            90550631,
            90551851,
            90549294,
            90545681,
            90553940,
            90549432,
            90563346,
            90548659,
            90544907,
            90558972,
            90545692,
            90550414,
            90545438,
            90550179,
            90547970
        ],
        "A": [
            90541721,
            90542770,
            90541219,
            90541087,
            90544810,
            90561361,
            90543645,
            90541402,
            90544925,
            90541955,
            90542350,
            90543732,
            90541094,
            90542063,
            90541725,
            90541822,
            90542174,
            90542376,
            90542708
        ]
    },
    "name": "B. Ternary Sequence",
    "statement": "You are given two sequences a_1, a_2,\r\ndots, a_n and b_1, b_2,\r\ndots, b_n. Each element of both sequences is either 0, 1 or 2. The\r\nnumber of elements 0, 1, 2 in the sequence a is x_1, y_1, z_1\r\nrespectively, and the number of elements 0, 1, 2 in the sequence b is\r\nx_2, y_2, z_2 respectively.You can rearrange the elements in both\r\nsequences a and b however you like. After that, let\u2019s define a sequence\r\nc as follows:c_i =\r\nbegin{cases} a_i b_i &\r\nmbox{if }a_i > b_i\r\n0 &\r\nmbox{if }a_i = b_i\r\n-a_i b_i &\r\nmbox{if }a_i < b_i\r\nend{cases}You\u2019d like to make\r\nsum_{i=1}^n c_i (the sum of all elements of the sequence c) as large as\r\npossible. What is the maximum possible sum?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nint main() {\n\tios::sync_with_stdio(0); cin.tie(0);\n\n\tint t;\n\tcin >> t;\n\twhile(t--) {\n\t\tint x1, y1, z1, x2, y2, z2;\n\t\tcin >> x1 >> y1 >> z1 >> x2 >> y2 >> z2;\n\t\tint c=min(z1, y2), ans=c;\n\t\tz1-=ans;\n\t\ty2-=ans;\n\t\tc=min(y1, x2);\n\t\ty1-=c;\n\t\tx2-=c;\n\t\tc=min(y1, y2);\n\t\ty1-=c;\n\t\ty2-=c;\n\t\tc=min(z2, x1);\n\t\tz2-=c;\n\t\tx1-=c;\n\t\tc=min(z2, z1);\n\t\tz2-=c;\n\t\tz1-=c;\n\t\tc=min(y1, z2);\n\t\tans-=c;\n\t\tcout << 2*ans << \"\\n\";\n\t}\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Ternary Sequence.json",
    "editorial_link": "https://codeforces.com//blog/entry/81700",
    "editorial": "We can find the kind of the value of is three . And is only if is and is\r\n, and is only if is and is . Otherwise is . So we have to make () pair\r\n() as little as possible, and pair () as much as possible. To do this,\r\nfirst we can make () pair, () pair, and () pair as much as possible.\r\nAfter that, pairing the remaining values doesn\u00e2\u0080\u0099t affect the sum of . (It\r\nin which value is and in which value is are all left, we have to pair\r\nthem although the sum decreases.)Time complexity :\r\n"
}