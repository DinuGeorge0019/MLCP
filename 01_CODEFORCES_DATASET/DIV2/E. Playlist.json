{"link": "https://codeforces.com//contest/268/problem/E", "problemId": "2562", "problem_idx": "E", "shortId": "268E", "contest_number": "268", "problem_submissions": {"E": [3029362, 3027005, 3026499, 3026194, 3026632, 3027097, 3026470, 3026693, 3027609, 3027536, 3027449, 3029652, 3027603, 3027497, 3027682, 3029387, 3028099, 3028892], "D": [3029086, 3037705, 3037697, 3037608, 3037604, 3037597, 3037586], "C": [3022125, 3024460, 3023115, 3022875, 3022947, 3022255, 3024092, 3024462, 3022033, 3022803, 3024394, 3025519, 3024680, 3023628, 3024663, 3025736, 3024616, 3023126], "B": [3021486, 3022962, 3021236, 3021634, 3022054, 3021375, 3022451, 3021884, 3023790, 3021388, 3022861, 3022930, 3022093, 3022237, 3022694, 3023334, 3021661, 3021427], "A": [3020792, 3021158, 3020508, 3020555, 3021108, 3020432, 3020678, 3021068, 3020421, 3020463, 3021924, 3020884, 3020808, 3020977, 3021030, 3020567, 3022196, 3022929]}, "name": "E. Playlist", "statement": "Manao\u2019s friends often send him new songs. He never listens to them right\r\naway. Instead, he compiles them into a playlist. When he feels that his\r\nmind is open to new music, he opens the playlist and starts to listen to\r\nthe songs.Of course, there are some songs that Manao doesn\u2019t particuarly\r\nenjoy. To get more pleasure from the received songs, he invented the\r\nfollowing procedure of listening to the playlist: If after listening to\r\nsome song Manao realizes that he liked it, then he remembers it and\r\nstarts to listen to the next unlistened song. If after listening to some\r\nsong Manao realizes that he did not like it, he listens to all the songs\r\nhe liked up to this point and then begins to listen to the next\r\nunlistened song. For example, if Manao has four songs in the playlist,\r\nA, B, C, D (in the corresponding order) and he is going to like songs A\r\nand C in the end, then the order of listening is the following: Manao\r\nlistens to A, he likes it, he remembers it. Manao listens to B, he does\r\nnot like it, so he listens to A, again. Manao listens to C, he likes the\r\nsong and he remembers it, too. Manao listens to D, but does not enjoy it\r\nand re-listens to songs A and C. That is, in the end Manao listens to\r\nsong A three times, to song C twice and songs B and D once. Note that if\r\nManao once liked a song, he will never dislike it on a subsequent\r\nlistening.Manao has received songs: the -th of them is seconds long and\r\nManao may like it with a probability of percents. The songs could get on\r\nManao\u2019s playlist in any order, so Manao wants to know the maximum\r\nexpected value of the number of seconds after which the listening\r\nprocess will be over, for all possible permutations of the songs in the\r\nplaylist.\r\n", "solutions": ["#include <vector> \n#include <list> \n#include <map> \n#include <set> \n#include <deque> \n#include <queue> \n#include <stack> \n#include <bitset> \n#include <algorithm> \n#include <functional> \n#include <numeric> \n#include <utility> \n#include <sstream> \n#include <iostream> \n#include <iomanip> \n#include <cstdio> \n#include <cmath> \n#include <cstdlib> \n#include <cctype> \n#include <string> \n#include <cstring> \n#include <ctime> \n\nusing namespace std;\n\n#define _int64 long long\n\ndouble sum[100000];\n\nbool pcmp(pair<int,int> a,pair<int,int> b)\n{\n  if (a.second==100)\n    if (b.second==100) return a.first<b.first;\n    else return true;\n  if (b.second==100) return false;\n  return a.second*a.first*(100-b.second)>b.second*b.first*(100-a.second);\n}\n\nint main()\n{\n  int i,j,x,y,n;\n  vector<pair<int,int> > a;\n  double ans;\n  scanf(\"%d\",&n);\n  a.clear();\n  for (i=0;i<n;i++)\n  {\n    scanf(\"%d%d\",&x,&y);\n    a.push_back(make_pair(x,y));\n  }\n  sort(a.begin(),a.end(),pcmp);\n  sum[n]=0;\n  for (i=n-1;i>=0;i--)\n  {\n    sum[i]=sum[i+1]+(1-a[i].second/100.0);\n  }\n  ans=0;\n  for (i=0;i<n;i++)\n  {\n    ans+=a[i].second/100.0*sum[i+1]*a[i].first;\n    ans+=a[i].first;\n  }\n  printf(\"%.10lf\\n\",ans);\n}\n"], "input": "", "output": "", "tags": ["math", "probabilities", "sortings"], "dificulty": "2100", "interactive": false}