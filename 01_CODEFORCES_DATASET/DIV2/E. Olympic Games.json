{"link": "https://codeforces.com//contest/401/problem/E", "problemId": "6960", "problem_idx": "E", "shortId": "401E", "contest_number": "401", "problem_submissions": {"D": [5984020, 5984141, 5983864, 5981435, 5984587, 5985602, 5984819, 5989770, 5989652, 5985683, 5985592, 5986146, 5986479, 5986019, 5987077, 5985527, 5986927, 5987397, 5987110, 5982946], "C": [5982567, 5981674, 5981703, 5983252, 5981659, 5981584, 5982579, 5983834, 5982834, 5982433, 5981231, 5982713, 5981380, 5989529, 5980186, 5983524, 5981695, 5982769, 5984546], "B": [5981497, 5980354, 5980450, 5984055, 5980168, 5980824, 5980688, 5980343, 5980890, 5980668, 5982737, 5981001, 5980082, 5983516, 5981360, 5979897, 5980852, 5985462], "A": [5979782, 5978771, 5978488, 5978820, 5978676, 5979741, 5978935, 5978831, 5978982, 5978516, 5979643, 5978615, 5985991, 5978937, 5978457, 5979014, 5986063], "E": [5991956, 5996869]}, "name": "E. Olympic Games", "statement": "\r\n", "solutions": ["#include<cstdio>\n#include<iostream>\n#include<map>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n#define ll long long\nusing namespace std;\n\n\nint n,m,l,r,p;\nll cal2(ll n,ll m,ll r,ll rn,ll rm,ll b,ll f)\n{\n    ll ret = 0;\n    for (ll i = 1; i <= n && i * i * b * b <= r; i++) {\n        ll l1,r1;\n\n        l1 = 0;\n        r1 = m;\n        while (l1 < r1) {\n            ll mid = (l1 + r1 + 1) / 2;\n            if (f) {\n                if (i * i * b * b + mid * mid * b * b <= r) l1 = mid;\n                else r1 = mid - 1;\n            }\n            else {\n                if (i * i * b * b + mid * mid * b * b < r) l1 = mid;\n                else r1 = mid - 1;\n            }\n        }\n        if (l1 == 0) continue;\n       // l1 = min((int)m,(int)(sqrt((r - i * i)) + 0.5));\n       // cout<<n<<' '<<m<<' '<<l1<<' '<<i<<' '<<r<<endl;\n        ret = (ret + (l1 * (b * (m - l1) % p ) % p + (rm + 1) * l1 % p + l1 * (l1 - 1) / 2 % p * b % p) * (n * b + rn + 1 - i * b) % p) % p;\n    }\n    return ret;\n}\nint pri[100010];\nbool vis[100010];\nint u[100010];\nvoid get_prime()\n{\n    memset(vis,0,sizeof(vis));\n    u[1] = 1;\n    int cnt = 0;\n    for (int i = 2; i <= 100000; i++)\n    {\n        if (!vis[i]) {\n            pri[cnt++] = i;\n            u[i] = -1;\n        }\n        for (int j = 0; j < cnt && pri[j] * i <= 100000; j++) {\n            vis[pri[j] * i] = true;\n            u[pri[j] * i] = -u[i];\n            if (i % pri[j] == 0) {\n                u[pri[j] * i] = 0;\n                break;\n            }\n        }\n    }\n //   for (int i = 1; i <= 100; i++) printf(\"%d %d\\n\",i,u[i]);\n  //  for (int i = 0; i < 20; i++) printf(\"%d\\n\",pri[i]);\n}\nll cal1(ll n,ll m,ll r,ll f)\n{\n    ll ret = 0;\n    r = r * r;\n    if (r <= 0) return 0;\n    if (r == 1 && f == 0) return 0;\n    ret = (n * (m + 1) + (n + 1) * m) % p;\n   // cout<<ret<<endl;\n    for (ll i = 1; i <= min(n,m); i++) {\n        ret += 2 * cal2(n / i,m / i,r,n % i,m % i,i,f) * u[i] % p;\n        ret %= p;\n   //     cout<<u[i]<<' '<<ret<<endl;\n    }\n   // cout<<ret<<endl;\n    return (ret + p) % p;\n}\nint main()\n{\n    get_prime();\n    cin>>n>>m>>l>>r>>p;\n    ll ans = (cal1(n,m,r,1) - cal1(n,m,l,0) + p) % p;\n    cout<<ans<<endl;\n  //  cout<<cal2(2,2,12)<<endl;\n}\n/*\n14 68\n\n2 2 10000000\n\n*/\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "2500", "interactive": false}