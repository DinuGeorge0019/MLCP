{
    "link": "https://codeforces.com//contest/493/problem/A",
    "problemId": "18742",
    "problem_idx": "A",
    "shortId": "493A",
    "contest_number": "493",
    "problem_submissions": {
        "D": [
            8962830,
            8955808,
            8962303,
            8964364,
            8960751,
            8962225,
            8960844,
            8962975,
            8967369,
            8959886,
            8960455,
            8962054,
            8964729,
            8965627,
            8960251,
            8964827,
            8965332
        ],
        "C": [
            8959569,
            8958613,
            8959499,
            8962173,
            8964601,
            8955815,
            8960873,
            8959250,
            8961260,
            8963716,
            8955238,
            8958453,
            8960180,
            8956138,
            8963664,
            8959424,
            8955895,
            8957865
        ],
        "B": [
            8956674,
            8960162,
            8957216,
            8957307,
            8961901,
            8964843,
            8957724,
            8955497,
            8959210,
            8958869,
            8958459,
            8960046,
            8957270,
            8962744,
            8958746,
            8956007,
            8956632,
            8962594
        ],
        "A": [
            8954713,
            8961765,
            8955431,
            8957905,
            8957496,
            8961409,
            8956078,
            8954483,
            8954560,
            8956624,
            8982686,
            8954617,
            8955736,
            8959987,
            8955670,
            8968662,
            8954641,
            8955068
        ],
        "E": [
            8978921,
            8981489,
            8968299,
            8997367
        ]
    },
    "name": "A. Vasya and Football",
    "statement": "Vasya has started watching football games. He has learned that for some\r\nfouls the players receive yellow cards, and for some fouls they receive\r\nred cards. A player who receives the second yellow card automatically\r\nreceives a red card.Vasya is watching a recorded football match now and\r\nmakes notes of all the fouls that he would give a card for. Help Vasya\r\ndetermine all the moments in time when players would be given red cards\r\nif Vasya were the judge. For each player, Vasya wants to know only the\r\nmoment of time when he would receive a red card from Vasya.\r\n",
    "solutions": [
        "#include<iostream>\n#include<string.h>\n#include<vector>\n#include<algorithm>\n#include<iomanip>\n#include<map>\nusing namespace std;\n\nstring home, away;\n\nstruct Node\n{\n\tint time;\n\tstring name;\n\tstring num;\n\tstring type;\n};\n\nNode node[10000];\n\nbool cmp(Node a, Node b)\n{\n\treturn a.time < b.time;\n}\n\nint main()\n{\n\tcin>>home>>away;\n\tint n;\n\tcin>>n;\n\tfor(int i = 0; i < n; ++i)\n\t{\n\t\tcin>>node[i].time>>node[i].name>>node[i].num>>node[i].type;\n\t}\n\t\n\tsort(node, node+n, cmp);\n\tmap<string, int> m;\n\tfor(int i = 0; i < n; ++i)\n\t{\n\t\tstring key = node[i].name + node[i].num;\n\t\tmap<string, int>::iterator iter = m.find(key);\n\t\tint old = 0;\n\t\tif(iter != m.end())\n\t\t{\n\t\t\told = iter->second;\n\t\t}\n\t\t\n\t\tint next = 0;\n\t\tif(node[i].type == \"y\")\n\t\t{\n\t\t\tnext = old + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnext = old + 2;\n\t\t}\n\t\t\n\t\tif(old < 2 && next >= 2)\n\t\t{\n\t\t\tif(node[i].name == \"h\")\n\t\t\t\tcout<<home<<\" \";\n\t\t\telse\n\t\t\t\tcout<<away<<\" \";\n\t\t\tcout<<node[i].num<<\" \"<<node[i].time<<endl;\n\t\t}\n\t\t\n\t\tm[key] = next;\n\t}\n\t\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Vasya and Football.json",
    "editorial_link": "https://codeforces.com//blog/entry/14985",
    "editorial": "We need 2 arrays for the first and second team, in which we must save\r\n\"status\" of the player is he \"clear\", yellow carded or sent off. Then\r\nwhile inputing we must output the players name if he wasnât sent off,\r\nand after the event he must be sent off.\r\n",
    "hint": []
}