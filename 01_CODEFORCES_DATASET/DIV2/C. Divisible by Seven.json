{
    "link": "https://codeforces.com//contest/376/problem/C",
    "problemId": "4242",
    "problem_idx": "C",
    "shortId": "376C",
    "contest_number": "376",
    "problem_submissions": {
        "C": [
            5507703,
            5508378,
            5509653,
            5505870,
            5508901,
            5506789,
            5506579,
            5509150,
            5509916,
            5509799,
            5507345,
            5507270,
            5509544,
            5509634,
            5509897,
            5507776,
            5509511,
            5508122,
            5507836
        ],
        "B": [
            5506652,
            5504117,
            5503207,
            5503382,
            5503807,
            5504774,
            5504043,
            5504523,
            5504270,
            5505254,
            5504120,
            5504627,
            5505556,
            5504132,
            5504367,
            5505335,
            5505531,
            5506467
        ],
        "A": [
            5506294,
            5502978,
            5502598,
            5506281,
            5502656,
            5503030,
            5502618,
            5503447,
            5502632,
            5502661,
            5503380,
            5502677,
            5504082,
            5503223,
            5503562,
            5502845,
            5503131,
            5502839
        ],
        "D": [
            5505050,
            5520106,
            5520007,
            5519986,
            5519964,
            5506569,
            5511181,
            5506448,
            5507217,
            5507459,
            5508461,
            5507914,
            5507225,
            5505749,
            5506239,
            5511657,
            5508760,
            5509213,
            5508509,
            5507842,
            5508103,
            5509597,
            5508261,
            5509314,
            5509273
        ],
        "E": [
            5518045
        ]
    },
    "name": "C. Divisible by Seven",
    "statement": "You have number , whose decimal representation quite luckily contains\r\ndigits 1, 6, 8, 9. Rearrange the digits in its decimal representation so\r\nthat the resulting number will be divisible by 7.Number doesn\u2019t contain\r\nany leading zeroes and contains digits 1, 6, 8, 9 (it also can contain\r\nanother digits). The resulting number also mustn\u2019t contain any leading\r\nzeroes.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <set>\n#include <string>\n#include <cstring>\n\nusing namespace std;\n\nstring ans[7];\n\nvoid presolve() {\n    int a[] = {1, 6, 8, 9};\n    do {\n        int c = 0;\n        for (int i = 0; i < 4; ++i) {\n            c = (c * 10 + a[i]) % 7;\n        }\n        string str;\n        for (int i = 0; i < 4; ++i) {\n            str.push_back('0' + a[i]);\n        }\n        ans[c] = str;\n    } while(next_permutation(a, a + 4));\n}\n\nchar s[1000010];\n\nint main() {\n    presolve();\n    scanf(\"%s\", s);\n    int n = strlen(s), cnt[10] = {0};\n    for (int i = 0; i < n; ++i) {\n        ++ cnt[s[i] - '0'];\n    }\n    if (cnt[0] + 4 == n) {\n        cout << ans[0];\n        for (int i = 0; i < cnt[0]; ++i) {\n            putchar('0');\n        }\n        cout << endl;\n    } else {\n        int c = 0;\n        for (int i = 9; i >= 0; --i) {\n            if (i == 9 || i == 8 || i == 6 || i == 1) {\n                -- cnt[i];\n            }\n            for (int j = 0; j < cnt[i]; ++j) {\n                putchar(i + '0');\n                c = (c * 10 + i) % 7;\n            }\n        }\n        cout << ans[(7 - c * 10000 % 7) % 7] << endl;\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Divisible by Seven.json",
    "editorial_link": "https://codeforces.com//blog/entry/10084",
    "editorial": "Because permutation of 1, 6, 8, 9 can form integers that mod 7 equals 0, 1, 2, 3, 4, 5, 6.\n\nSo you can construct answer like this: nonzero digits + a permutation of 1, 6, 8, 9 + zeros."
}