{
    "link": "https://codeforces.com//contest/1363/problem/A",
    "problemId": "636623",
    "problem_idx": "A",
    "shortId": "1363A",
    "contest_number": "1363",
    "problem_submissions": {
        "F": [
            82106115,
            82133417,
            82134663,
            82148859,
            82187672,
            82151422,
            82129291
        ],
        "B": [
            82089340,
            82061810,
            82102257,
            82051813,
            82052193,
            82054432,
            82059773,
            82050390,
            82052570,
            82057688,
            82062819,
            82061181,
            82063108,
            82056815,
            82052221,
            82048933,
            82053424,
            82060016
        ],
        "E": [
            82084929,
            82115560,
            82118841,
            82083744,
            82094219,
            82095201,
            82085310,
            82078785,
            82104191,
            82087813,
            82091268,
            82109972,
            82093877,
            82089726,
            82112505,
            82091430,
            82097365,
            82091233
        ],
        "D": [
            82073363,
            82098128,
            82116891,
            82105976,
            82086712,
            82108911,
            82113962,
            82100776,
            82093305,
            82115209,
            82090000,
            82113643,
            82117922,
            82095216,
            82114310,
            82120048,
            82118359
        ],
        "C": [
            82058814,
            82072569,
            82099263,
            82066157,
            82070197,
            82067166,
            82068534,
            82108126,
            82064962,
            82108652,
            82074021,
            82067732,
            82075440,
            82064472,
            82071898,
            82069396,
            82075513,
            82072756
        ],
        "A": [
            82051846,
            82136588,
            82081640,
            82048308,
            82048940,
            82048236,
            82052695,
            82047806,
            82048669,
            82057495,
            82055772,
            82048991,
            82055132,
            82048772,
            82048248,
            82057801,
            82048473,
            82052285
        ]
    },
    "name": "A. Odd Selection",
    "statement": "Shubham has an array a of size n, and wants to select exactly x elements\r\nfrom it, such that their sum is odd. These elements do not have to be\r\nconsecutive. The elements of the array are not guaranteed to be\r\ndistinct.Tell him whether he can do so.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define pb push_back\n#define F first\n#define S second\n#define all(x) x.begin(), x.end()\n#define debug(x) cerr << #x << \" : \" << x << '\\n'\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef string str;\ntypedef pair<ll, ll> pll;\n\nconst ll Mod = 1000000007LL;\nconst int N = 2e5 + 10;\nconst ll Inf = 2242545357980376863LL;\nconst ll Log = 30;\n\nll cnt[2];\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tll T;\n\tcin >> T;\n\tfor(int i = 0; i < T; i++){\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\tll n, x, v;\n\t\tcin >> n >> x;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tcin >> v;\n\t\t\tcnt[v & 1] ++;\n\t\t}\n\t\tif(x == n) cout << (cnt[1] & 1 ? \"Yes\" : \"No\") << '\\n';\n\t\telse {\n\t\t\tif(min(cnt[0], cnt[1]) > 0) cout << \"Yes\" << '\\n';\n\t\t\telse if(cnt[0]) cout << \"No\\n\";\n\t\t\telse cout << (x & 1 ? \"Yes\" : \"No\") << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Odd Selection.json",
    "editorial_link": "https://codeforces.com//blog/entry/78202",
    "editorial": ": The sum of numbers can only be odd if we have an odd number of numbers\r\nwhich are odd. (An odd statement, indeed).: We first maintain two\r\nvariables, and , representing the number of odd and even numbers in the\r\narray, respectively. We then iterate over the number of odd numbers we\r\ncan choose; which are upto , and see if where is the number of odd\r\nnumbers we have chosen. :\r\n",
    "hint": []
}