{"link": "https://codeforces.com//contest/1247/problem/E", "problemId": "451065", "problem_idx": "E", "shortId": "1247E", "contest_number": "1247", "problem_submissions": {"F": [63516585, 63498066, 63531653, 63484717], "E": [63466015, 63473982, 63472756, 63472587, 63477513, 63473125, 63474516, 63476526, 63478680, 63473858, 63480958, 63481550, 63481519, 63482376, 63483256, 63481801, 63480736, 63482911, 63484993], "D": [63458462, 63452186, 63464452, 63462467, 63461642, 63462284, 63469112, 63466038, 63465533, 63467098, 63466913, 63532659, 63458800, 63469138, 63466028, 63518059, 63471109, 63471871, 63471893, 63472863, 63468681], "C": [63451842, 63448915, 63446524, 63452894, 63453210, 63465192, 63456520, 63458388, 63455590, 63458932, 63454282, 63457733, 63453216, 63464210, 63454777, 63455424, 63462076, 63462168, 63461001], "B1": [63441028, 63445773, 63455031, 63446312, 63447577, 63448362, 63448931, 63448486, 63445824, 63453830, 63446861, 63447193, 63445847, 63460715, 63448295, 63449973, 63454578, 63450726, 63449807], "B2": [63440055, 63445491, 63454826, 63446019, 63446936, 63447440, 63449345, 63447899, 63445385, 63454155, 63447268, 63446929, 63448203, 63460143, 63447809, 63449173, 63454319, 63450374, 63450053], "A": [63437545, 63439551, 63452092, 63445337, 63447252, 63440937, 63439822, 63438397, 63438564, 63453424, 63437913, 63439495, 63438907, 63456486, 63442538, 63445415, 63444316, 63440390, 63439231]}, "name": "E. Rock Is Push", "statement": "You are at the top left cell (1, 1) of an n\r\ntimes m labyrinth. Your goal is to get to the bottom right cell (n, m).\r\nYou can only move right or down, one cell per step. Moving right from a\r\ncell (x, y) takes you to the cell (x, y + 1), while moving down takes\r\nyou to the cell (x + 1, y).Some cells of the labyrinth contain rocks.\r\nWhen you move to a cell with rock, the rock is pushed to the next cell\r\nin the direction you\u2019re moving. If the next cell contains a rock, it\r\ngets pushed further, and so on.The labyrinth is surrounded by\r\nimpenetrable walls, thus any move that would put you or any rock outside\r\nof the labyrinth is illegal.Count the number of different legal paths\r\nyou can take from the start to the goal modulo 10^9 + 7. Two paths are\r\nconsidered different if there is at least one cell that is visited in\r\none path, but not visited in the other.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T> void read(T &t) {\n\tt=0; char ch=getchar(); int f=1;\n\twhile (ch<'0'||ch>'9') { if (ch=='-') f=-1; ch=getchar(); }\n\tdo { (t*=10)+=ch-'0'; ch=getchar(); } while ('0'<=ch&&ch<='9'); t*=f;\n}\ntypedef long long ll;\nconst ll mod=(1e9)+7;\nint n,m,x;\nll dp[2010][2010][2],s[2010][2010][2];\nint cnt[2010][2010][2];\nchar S[2010][2010];\nvoid update(int &x,int y) {\n\tx+=y; if (x>=mod) x-=mod;\n}\nint main() {\n\t//freopen(\"1.txt\",\"r\",stdin);\n\tread(n); read(m);\n\tfor (int i=1;i<=n;i++) scanf(\"%s\",S[i]+1);\n\tfor (int i=1;i<=n;i++) {\n\t\tfor (int j=m;j>=1;j--)\n\t\t\tcnt[i][j][1]=cnt[i][j+1][1]+(S[i][j]=='.');\n\t}\n\tfor (int j=1;j<=m;j++) {\n\t\tfor (int i=n;i>=1;i--)\n\t\t\tcnt[i][j][0]=cnt[i+1][j][0]+(S[i][j]=='.');\n\t}\n\tif (S[n][m]=='R') { printf(\"0\\n\"); return 0; }\n\tif (n==1&&m==1) { printf(\"1\\n\"); return 0; }\n\tdp[n][m][0]=dp[n][m][1]=1;\n\ts[n][m][0]=s[n][m][1]=1;\n\tfor (int i=n;i>=1;i--)\n\tfor (int j=m;j>=1;j--) {\n\t\tif (i==n&&j==m) continue;\n\t\tx=cnt[i+1][j][0];\n\t\tdp[i][j][0]=(s[i+1][j][1]-s[i+x+1][j][1]+mod)%mod;\n\t\tx=cnt[i][j+1][1];\n\t\tdp[i][j][1]=(s[i][j+1][0]-s[i][j+x+1][0]+mod)%mod;\n\t\ts[i][j][0]=(s[i][j+1][0]+dp[i][j][0])%mod;\n\t\ts[i][j][1]=(s[i+1][j][1]+dp[i][j][1])%mod;\n\t}\n\tprintf(\"%d\\n\",(dp[1][1][0]+dp[1][1][1])%mod);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dp"], "dificulty": "2200", "interactive": false}