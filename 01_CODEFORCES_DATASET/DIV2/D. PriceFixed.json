{
    "link": "https://codeforces.com//contest/1539/problem/D",
    "problemId": "1021673",
    "problem_idx": "D",
    "shortId": "1539D",
    "contest_number": "1539",
    "problem_submissions": {
        "F": [
            120107348,
            120107649,
            120097977,
            120099320,
            120098312,
            120109635,
            120105864,
            120629204,
            120113433,
            120106419,
            120104986,
            120113014,
            120101930,
            120110658,
            120109502,
            120113744,
            120116844,
            120114654,
            120115147
        ],
        "E": [
            120093781,
            120079364,
            120114726,
            120122564,
            120207189,
            120197883,
            120200475,
            120100072,
            120098623,
            120171381
        ],
        "B": [
            120070630,
            120060349,
            120061059,
            120060386,
            120060622,
            120062253,
            120060692,
            120629156,
            120061053,
            120062981,
            120062418,
            120061602,
            120061888,
            120061204,
            120064416,
            120067261,
            120060854,
            120063414,
            120061859,
            120065691,
            120065164
        ],
        "A": [
            120069368,
            120076735,
            120060240,
            120061153,
            120060245,
            120060841,
            120071571,
            120629142,
            120063706,
            120061645,
            120060943,
            120060282,
            120060860,
            120060194,
            120061081,
            120066922,
            120060268,
            120061240,
            120060385,
            120063176,
            120063285
        ],
        "D": [
            120067082,
            120090685,
            120072966,
            120078507,
            120084869,
            120076433,
            120086821,
            120629190,
            120078363,
            120083343,
            120083998,
            120082921,
            120077950,
            120072171,
            120081856,
            120078775,
            120086440,
            120082002,
            120072832,
            120082004,
            120079880
        ],
        "C": [
            120060552,
            120063745,
            120065169,
            120065204,
            120062357,
            120065301,
            120066339,
            120629175,
            120060313,
            120068918,
            120065740,
            120065066,
            120069921,
            120064011,
            120071005,
            120066689,
            120063119,
            120073312,
            120065303,
            120071920,
            120069029
        ]
    },
    "name": "D. PriceFixed",
    "statement": "Lena is the most economical girl in Moscow. So, when her dad asks her to\r\nbuy some food for a trip to the country, she goes to the best store\r\n\"PriceFixed\". Here are some rules of that store: The store has an\r\ninfinite number of items of every product. All products have the same\r\nprice: 2 rubles per item. For every product i there is a discount for\r\nexperienced buyers: if you buy b_i items of products (, not necessarily\r\ntype i), then for all future purchases of the i-th product there is a 50\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\n#define pb push_back\n#define x first\n#define y second\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll,ll> pll;\ntemplate <typename T> void chkmax(T &x,T y){x<y?x=y:T();}\ntemplate <typename T> void chkmin(T &x,T y){y<x?x=y:T();}\ntemplate <typename T> void readint(T &x)\n{\n\tx=0;int f=1;char c;\n\tfor(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+(c-'0');\n\tx*=f;\n}\n/*const int MOD=;\ninline int dmy(int x){return x>=MOD?x-MOD:x;}\ninline void inc(int &x,int y){x=dmy(x+y);}\nint qmi(int x,int y)\n{\n\tint ans=1;\n\tfor(;y;y>>=1,x=1ll*x*x%MOD)\n\t\tif(y&1)ans=1ll*ans*x%MOD;\n\treturn ans;\n}*/\nconst int MAXN=100005;\n\nint n;\npll a[MAXN];\n\nint main()\n{\n\t#ifdef LOCAL\n\tfreopen(\"code.in\",\"r\",stdin);\n//\tfreopen(\"code.out\",\"w\",stdout);\n\t#endif\n\treadint(n);\n\tfor(int i=1;i<=n;++i)readint(a[i].y),readint(a[i].x);\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;++i)swap(a[i].x,a[i].y);\n\tll cur=0,sum=0;\n\tint l,r;\n\tfor(r=n,l=1;;)\n\t{\n\t\twhile(l<=n && !a[l].x)++l;\n\t\twhile(r && !a[r].x)--r;\n\t\tif(l>r)break;\n\t\tif(cur>=a[l].y)sum+=a[l].x,cur+=a[l].x,a[l].x=0;\n\t\telse\n\t\t{\n\t\t\tll t=min(a[r].x,a[l].y-cur);\n\t\t\tsum+=2*t,cur+=t,a[r].x-=t;\n\t\t}\n\t}\n\tcout<<sum<<endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. PriceFixed.json",
    "editorial_link": "https://codeforces.com//blog/entry/91906",
    "editorial": "Let be the sum of all Important greedy observations: If there is an item\r\nwhich costs 1, then we will not make the answer worse by buying this\r\nitem. If all prices are 2, then we will not make the answer worse by\r\nbuying the item with max . Therefore we can sort all items by and on\r\neach iteration we will only need to consider two items: with max and\r\nwith min among all not bought items.Another important observation: We\r\nalready know how many items with price 2 we should buy to be able to buy\r\nsomething with a discount. This means that we can buy multiple items\r\nwith full price together. Similarly, we can buy multiple items with a\r\ndiscount at once. This solution can be implemented using a two pointers\r\ntechnique which allows to find the answer in .\r\n"
}