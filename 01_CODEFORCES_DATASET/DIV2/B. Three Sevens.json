{
    "link": "https://codeforces.com//contest/1798/problem/B",
    "problemId": "1849268",
    "problem_idx": "B",
    "shortId": "1798B",
    "contest_number": "1798",
    "problem_submissions": {
        "F": [
            199301449,
            199635259,
            199378902,
            199319392,
            199574998,
            200590796,
            199735470,
            201129046,
            199317594
        ],
        "E": [
            199292979,
            199351345,
            199287102,
            199284185,
            199288971,
            199287988,
            199287959,
            199291669,
            199576167,
            199283535,
            199289650,
            199290902,
            199290821,
            199293377,
            199290100,
            199289126,
            199294280,
            199294488,
            199296355,
            199291720,
            199292702,
            199291551
        ],
        "C": [
            199282234,
            199260342,
            199262167,
            199263273,
            199268067,
            199264515,
            199261766,
            199308981,
            199268218,
            199266685,
            199267420,
            199260005,
            199259528,
            199264427,
            199273339,
            199266427,
            199263028,
            199263300,
            199265190,
            199268521,
            199269803
        ],
        "D": [
            199278441,
            199265876,
            199269760,
            199267498,
            199271957,
            199278028,
            199268206,
            199270707,
            199275816,
            199273016,
            199267038,
            199269245,
            199274308,
            199265125,
            199274313,
            199269059,
            199272118,
            199273321,
            199275125,
            199279668
        ],
        "B": [
            199256261,
            199253517,
            199260386,
            199254659,
            199254149,
            199255531,
            199254513,
            199253333,
            199254612,
            199260900,
            199256259,
            199253472,
            199256316,
            199258434,
            199255694,
            199256525,
            199257662,
            199261042,
            199260517
        ],
        "A": [
            199251141,
            199251302,
            199252305,
            199251756,
            199251041,
            199252000,
            199251140,
            199251087,
            199251123,
            199252263,
            199256364,
            199250912,
            199252253,
            199253426,
            199251686,
            199251495,
            199253540,
            199253141,
            199252510
        ]
    },
    "name": "B. Three Sevens",
    "statement": "Lottery \"Three Sevens\" was held for m days. On day i, n_i people with\r\nthe numbers a_{i, 1},\r\nldots, a_{i, n_i} participated in the lottery.It is known that in each\r\nof the m days, only one winner was selected from the lottery\r\nparticipants. The lottery winner on day i was not allowed to participate\r\nin the lottery in the days from i+1 to m.Unfortunately, the information\r\nabout the lottery winners has been lost. You need to find any possible\r\nlist of lottery winners on days from 1 to m or determine that no\r\nsolution exists.\r\n",
    "solutions": [
        "#pragma GCC optimization(\"O3\")\n#pragma GCC optimization(\"Ofast,unroll-loops\")\n \n#include <bits/stdc++.h>   \n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;   \nusing namespace std;  \n#define ll long long  \nconst ll INF_MUL=1e13;\nconst ll INF_ADD=1e18;    \n#define pb push_back                 \n#define mp make_pair          \n#define nline \"\\n\"                           \n#define f first                                          \n#define s second                                             \n#define pll pair<ll,ll> \n#define all(x) x.begin(),x.end()     \n#define vl vector<ll>           \n#define vvl vector<vector<ll>>    \n#define vvvl vector<vector<vector<ll>>>          \n#ifndef ONLINE_JUDGE    \n#define debug(x) cerr<<#x<<\" \"; _print(x); cerr<<nline;\n#else\n#define debug(x);  \n#endif       \nvoid _print(ll x){cerr<<x;}  \nvoid _print(char x){cerr<<x;}   \nvoid _print(string x){cerr<<x;}    \nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());   \ntemplate<class T,class V> void _print(pair<T,V> p) {cerr<<\"{\"; _print(p.first);cerr<<\",\"; _print(p.second);cerr<<\"}\";}\ntemplate<class T>void _print(vector<T> v) {cerr<<\" [ \"; for (T i:v){_print(i);cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T>void _print(set<T> v) {cerr<<\" [ \"; for (T i:v){_print(i); cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T>void _print(multiset<T> v) {cerr<< \" [ \"; for (T i:v){_print(i);cerr<<\" \";}cerr<<\"]\";}\ntemplate<class T,class V>void _print(map<T, V> v) {cerr<<\" [ \"; for(auto i:v) {_print(i);cerr<<\" \";} cerr<<\"]\";} \ntypedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\ntypedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;\ntypedef tree<pair<ll,ll>, null_type, less<pair<ll,ll>>, rb_tree_tag, tree_order_statistics_node_update> ordered_pset;\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nconst ll MOD=1e9+7;      \nconst ll MAX=200200;\nvoid solve(){   \n    ll n; cin>>n;\n    vector<vector<ll>> a;\n    for(ll i=1;i<=n;i++){\n        ll x; cin>>x;\n        vector<ll> now(x);\n        for(auto &it:now){\n            cin>>it;\n        }\n        a.push_back(now);\n    }\n    reverse(all(a));\n    map<ll,ll> freq;\n    vector<ll> ans;\n    for(auto it:a){\n        ll found=0;\n        for(auto i:it){\n            if(freq[i]==0){\n                found=1;\n                ans.push_back(i);\n                break; \n            }\n        }  \n        if(found==0){\n            cout<<\"-1\\n\";\n            return;\n        }\n        for(auto i:it){\n            freq[i]++;\n        }\n    }\n    reverse(all(ans));\n    for(auto it:ans){\n        cout<<it<<\" \";\n    }\n    cout<<nline; \n    return;                                  \n}                                                   \nint main()                                                                                                \n{      \n    ios_base::sync_with_stdio(false);                          \n    cin.tie(NULL);    \n    #ifndef ONLINE_JUDGE                    \n    freopen(\"input.txt\", \"r\", stdin);                                              \n    freopen(\"output.txt\", \"w\", stdout);  \n    freopen(\"error.txt\", \"w\", stderr);                        \n    #endif                          \n    ll test_cases=1;               \n    cin>>test_cases;\n    while(test_cases--){\n        solve();\n    } \n    cout<<fixed<<setprecision(10);\n    cerr<<\"Time:\"<<1000*((double)clock())/(double)CLOCKS_PER_SEC<<\"ms\\n\"; \n}  "
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Three Sevens.json",
    "editorial_link": "https://codeforces.com//blog/entry/114208",
    "editorial": "Letâs calculate the array , where is the last day of the lottery in\r\nwhich the person participated. Then the only day when could be a winner\r\nis the day . Then on the day of , only the person with can be the\r\nwinner. It is also clear that if there are several such participants for\r\nthe day , you can choose any of them as the winner, since these\r\nparticipants cannot be winners on any other days. In total, we need to\r\ngo through all the days, if for some day there are no participants with\r\nequal to this day, then the answer is . Otherwise, we choose any\r\nparticipant with as the winner on the day of .\r\n",
    "hint": [
        "Hint 1 Let the participant with the number participate in the lottery in days . On what days could the participant be chosen as the winner so as not to break the conditions?",
        "Hint 2 If there are several candidates for the lottery winner on the day of (who did not participate in the days from to ), does it matter which of them we choose as a winner?"
    ]
}