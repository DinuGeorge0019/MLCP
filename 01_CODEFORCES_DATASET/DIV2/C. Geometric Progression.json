{"link": "https://codeforces.com//contest/567/problem/C", "problemId": "32462", "problem_idx": "C", "shortId": "567C", "contest_number": "567", "problem_submissions": {"E": [12368419, 12374631, 12397425, 12788088, 12389152, 12406146], "D": [12361936, 12364905, 12366026, 12367144, 12362999, 12362187, 12362197, 12363830, 12363930, 12363691, 12364368, 12363078, 12362951, 12369923, 12364411, 12364518, 12365344, 12364031, 12364332], "C": [12358359, 12361761, 12364757, 12364566, 12375712, 12357726, 12357396, 12357507, 12355472, 12358430, 12360526, 12359721, 12359102, 12360618, 12360834, 12358973, 12358889, 12361330], "B": [12356896, 12358133, 12362101, 12361060, 12355833, 12356064, 12358845, 12355641, 12356983, 12356330, 12357412, 12355553, 12354653, 12356634, 12358468, 12356890, 12356104, 12359549], "A": [12353500, 12353898, 12359353, 12355278, 12353802, 12353454, 12354645, 12353575, 12353588, 12353804, 12354250, 12353515, 12353505, 12353940, 12356166, 12354753, 12353585, 12355460], "F": [12373751, 12373972, 12370851, 12374943]}, "name": "C. Geometric Progression", "statement": "Polycarp loves geometric progressions very much. Since he was only three\r\nyears old, he loves only the progressions of length three. He also has a\r\nfavorite integer and a sequence , consisting of integers.He wants to\r\nknow how many subsequences of length three can be selected from , so\r\nthat they form a geometric progression with common ratio .A subsequence\r\nof length three is a combination of three such indexes , that . That is,\r\na subsequence of length three are such groups of three elements that are\r\nnot necessarily consecutive in the sequence, but their indexes are\r\nstrictly increasing.A geometric progression with common ratio is a\r\nsequence of numbers of the form .Polycarp is only three years old, so he\r\ncan not calculate this number himself. Help him to do it.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <queue>\n#include <ctime>\n\n#define pb push_back\n#define ll long long\n#define mp make_pair\n#define f first\n#define s second\n#define pii pair < int, int >\n#define ull unsigned long long\n#define pll pair < ll, ll >\n#define forit(s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it ++)\n#define all(s) s.begin(), s.end()\n\nconst int inf = (1ll << 31) - 1;\nconst int maxn = (int) 1e5 + 10;\n\nusing namespace std;\n\nint n;\nmap < int, ll > m[5];\nint k;\n\nint main () {\n    #ifdef LOCAL\n    freopen (\"a.in\", \"r\", stdin);\n    freopen (\"a.out\", \"w\", stdout);\n    #endif\n    scanf(\"%d %d\\n\", &n, &k);\n    ll ans = 0;\n    for(int i = 0, x; i < n; i++){\n        scanf(\"%d\", &x);\n        if(abs(x) % k != 0){\n            m[0][x]++;\n        }else {\n            ans += m[1][x/k];\n            m[1][x] += m[0][x/k];\n            m[0][x]++;\n        }\n    }\n    cout << ans << endl;\n\n\n\n    #ifdef LOCAL\n    cerr << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\n    #endif\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "dp"], "dificulty": "1700", "interactive": false}