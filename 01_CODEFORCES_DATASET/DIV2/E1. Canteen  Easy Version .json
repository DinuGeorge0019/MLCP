{
    "link": "https://codeforces.com//contest/2090/problem/E1",
    "problemId": "3285052",
    "problem_idx": "E1",
    "shortId": "2090E1",
    "contest_number": "2090",
    "problem_submissions": {
        "F1": [
            312018055,
            312032091,
            312022589,
            312026146,
            312026348,
            312029929,
            312121699,
            312029733,
            312010811,
            312035399,
            312035966
        ],
        "E2": [
            312008366,
            311997209,
            312011442,
            312131582,
            312007673,
            312017151,
            312198341,
            312025375,
            312019337,
            312023768
        ],
        "E1": [
            311986918,
            311985589,
            311997643,
            312002125,
            312011814,
            312007162,
            312012015,
            312024093,
            312005969,
            312009163,
            312019736,
            312014658,
            312015402,
            311999054
        ],
        "D": [
            311981748,
            312013273,
            311977532,
            311988779,
            311995947,
            311993651,
            311995932,
            311995855,
            311977421,
            312285706,
            311999417,
            311996259,
            311986869,
            311984103,
            311979845
        ],
        "C": [
            311976738,
            311979187,
            311992532,
            311979110,
            311985252,
            311988752,
            311990245,
            312000901,
            311995531,
            311989782,
            311987834,
            311997584,
            311995809,
            311992221
        ],
        "B": [
            311967026,
            311965980,
            311969127,
            311965678,
            311968637,
            311968386,
            311976645,
            311975919,
            311965722,
            311970420,
            311967286,
            311980002,
            311970149,
            311965563,
            311970509
        ],
        "A": [
            311962004,
            311960852,
            311960409,
            311960688,
            311961026,
            311961479,
            311969155,
            311963079,
            311960524,
            311960551,
            311962617,
            311965162,
            311960721,
            311960494,
            311961369
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/141053",
    "editorial": null,
    "name": "E1. Canteen  Easy Version ",
    "statement": "Ecrade has two sequences a_0, a_1,\r\nldots, a_{n - 1} and b_0, b_1,\r\nldots, b_{n - 1} consisting of integers. It is guaranteed that the sum\r\nof all elements in a does not exceed the sum of all elements in\r\nb.Initially, Ecrade can make exactly k changes to the sequence a. It is\r\nguaranteed that k does not exceed the sum of a. In each change: Choose\r\nan integer i (0\r\nle i < n) such that a_i > 0, and perform a_i := a_i - 1. Then Ecrade\r\nwill perform the following three operations sequentially on a and b,\r\nwhich constitutes one round of operations: For each 0\r\nle i < n: t :=\r\nmin(a_i, b_i), a_i := a_i - t, b_i := b_i - t; For each 0\r\nle i < n: c_i := a_{(i - 1)\r\nbmod n}; For each 0\r\nle i < n: a_i := c_i; Ecrade wants to know the minimum number of rounds\r\nrequired for all elements in a to become equal to 0 after exactly k\r\nchanges to a.However, this seems a bit complicated, so please help him!\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "math",
        "two pointers"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E1. Canteen  Easy Version .json",
    "hint": []
}