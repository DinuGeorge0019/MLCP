{
    "link": "https://codeforces.com//contest/141/problem/C",
    "problemId": "747",
    "problem_idx": "C",
    "shortId": "141C",
    "contest_number": "141",
    "problem_submissions": {
        "D": [
            1025243,
            1022766,
            1022505,
            1022637,
            1022105,
            1022584,
            1047488,
            1023184,
            1044430
        ],
        "E": [
            1021955,
            1021949,
            1679914,
            1679889,
            1679868,
            1025484
        ],
        "C": [
            1020295,
            1020537,
            1020738,
            1019845,
            1021214,
            1023402,
            1019630,
            1020831,
            1019576,
            1019514,
            1020109,
            1019778,
            1019345,
            1020372,
            1020912,
            1020409,
            1020232,
            1020654,
            1020722
        ],
        "B": [
            1019192,
            1022517,
            1019188,
            1018654,
            1019147,
            1018859,
            1024115,
            1019030,
            1018785,
            1020350,
            1018726,
            1019903,
            1019068,
            1018867,
            1019239,
            1019023,
            1019215,
            1019103
        ],
        "A": [
            1018140,
            1022790,
            1017901,
            1019131,
            1018196,
            1017610,
            17012370,
            1017739,
            1018174,
            1017967,
            1018258,
            1017762,
            1017651,
            1018509,
            1018016,
            1017685,
            1018122,
            1017780,
            1017862,
            1018064
        ]
    },
    "name": "C. Queue",
    "statement": "In the Main Berland Bank people stand in a queue at the cashier,\r\neveryone knows his/her height , and the heights of the other people in\r\nthe queue. Each of them keeps in mind number how many people who are\r\ntaller than him/her and stand in queue in front of him.After a while the\r\ncashier has a lunch break and the people in the queue seat on the chairs\r\nin the waiting room in a random order.When the lunch break was over, it\r\nturned out that nobody can remember the exact order of the people in the\r\nqueue, but everyone remembers his number .Your task is to restore the\r\norder in which the people stood in the queue if it is possible. There\r\nmay be several acceptable orders, but you need to find any of them.\r\nAlso, you need to print a possible set of numbers the heights of people\r\nin the queue, so that the numbers are correct.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\n#include <string>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <utility>\n#include <iostream>\n#include <sstream>\n#include <algorithm>\n#include <iterator>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair< int, int > PRII;\ntypedef pair< double ,double > PRDD;\ntypedef vector< string > VS;\ntypedef vector< int > VI;\n\n#define Size(a) ((int)a.size())\n#define sqr(x) ((x)*(x))\n#define lowbit(x) ((x)&(-(x)))\n\n#define x first\n#define y second\n#define p_b push_back\n#define m_p make_pair\n#define oo 1000000000\n#define eps 1e-12\nconst double pi = acos(-1.0);\n\n#define maxn 3000 + 10\n\nint n;\nstruct Peo\n{\n\tstring s;\n\tint a,b;\n}p[maxn];\n\ninline bool cmp( Peo i, Peo j ) { return i.a < j.a; }\n\nint main()\n{\n    int i,j;\n    \n\tcin>>n;\n\tfor( i = 1 ; i <= n ; ++i )\n\t\tcin>>p[i].s>>p[i].a;\n\tsort(p+1,p+n+1,cmp);\n\t\n\tfor( i = 1 ; i <= n ; ++i )\n\t\t{\n\t\t\tif( p[i].a < i )\n\t\t\t\t{\n\t\t\t\t\tfor( j = 1 ; j < i ; ++j )\n\t\t\t\t\t\tif( p[j].b >= i-p[i].a )\n\t\t\t\t\t\t\t++p[j].b;\n\t\t\t\t\tp[i].b = i-p[i].a;\n\t\t\t\t}\n\t\t\telse break;\n\t\t}\n\tif( i > n )\n\t\t{\n\t\t\tfor( i = 1 ; i <= n ; ++i )\n\t\t\t\tcout<<p[i].s<<' '<<p[i].b<<endl;\n\t\t}\n\telse cout<<-1<<endl;\n\t\t\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Queue.json",
    "editorial_link": "https://codeforces.com//blog/entry/3571",
    "editorial": "Let's sort the pairs (namei, ai) by ascending of ai. If there is an index i: 0???i?<?n that ai?>?i, then answer is \"-1\". Otherwise the answer exists. We will iterate through the array of sorted pairs from left to right with supporting of vector of results res. Let on the current iteration ai?=?n?-?i, then we must transfer the current man in the position ai. It can be done in C++ with one line: res.insert(res.begin() + a[i], man); "
}