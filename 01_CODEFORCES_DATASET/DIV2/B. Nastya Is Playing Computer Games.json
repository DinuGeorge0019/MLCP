{
    "link": "https://codeforces.com//contest/1136/problem/B",
    "problemId": "311121",
    "problem_idx": "B",
    "shortId": "1136B",
    "contest_number": "1136",
    "problem_submissions": {
        "E": [
            51189467,
            51191046,
            51188149,
            51188855,
            51190741,
            51191408,
            51191033,
            51190850,
            51194968,
            51193904,
            51191352,
            51194243,
            51193372,
            51194410,
            51195041,
            51186939,
            51301458,
            51187400,
            108142946
        ],
        "D": [
            51180882,
            51177336,
            51181079,
            51182192,
            51180429,
            51179730,
            51184359,
            51186400,
            51182377,
            51185059,
            51181346,
            51187131,
            51180821,
            51187135,
            51188443,
            51182185,
            51181190,
            51180808,
            51185600
        ],
        "C": [
            51175111,
            51174280,
            51177685,
            51177311,
            51177103,
            51175422,
            51178344,
            51175375,
            51179187,
            51176703,
            51175880,
            51179438,
            51181887,
            51178846,
            51181563,
            51198833,
            51176953,
            51176740,
            51179104
        ],
        "B": [
            51173283,
            51172239,
            51175677,
            51174542,
            51172486,
            51175496,
            51178841,
            51174659,
            51174225,
            51173330,
            51175893,
            51182729,
            51176296,
            51176824,
            51173811,
            51174832,
            51175088,
            51177269
        ],
        "A": [
            51171549,
            51171474,
            51171656,
            51171563,
            51171471,
            51172689,
            51176507,
            51172194,
            51172348,
            51171636,
            51172774,
            51183297,
            51171952,
            51174150,
            51171613,
            51171562,
            51173429,
            51171702
        ]
    },
    "name": "B. Nastya Is Playing Computer Games",
    "statement": "Finished her homework, Nastya decided to play computer games. Passing\r\nlevels one by one, Nastya eventually faced a problem. Her mission is to\r\nleave a room, where a lot of monsters live, as quickly as possible.There\r\nare n manholes in the room which are situated on one line, but,\r\nunfortunately, all the manholes are closed, and there is one stone on\r\nevery manhole. There is exactly one coin under every manhole, and to win\r\nthe game Nastya should pick all the coins. Initially Nastya stands near\r\nthe k-th manhole from the left. She is thinking what to do.In one turn,\r\nNastya can do one of the following: if there is at least one stone on\r\nthe manhole Nastya stands near, throw exactly one stone from it onto any\r\nother manhole (yes, Nastya is strong). go to a neighboring manhole; if\r\nthere are no stones on the manhole Nastya stays near, she can open it\r\nand pick the coin from it. After it she must close the manhole\r\nimmediately (it doesn\u2019t require additional moves). Nastya can leave the\r\nroom when she picks all the coins. Monsters are everywhere, so you need\r\nto compute the minimum number of moves Nastya has to make to pick all\r\nthe coins.Note one time more that Nastya can open a manhole only when\r\nthere are no stones onto it.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint N, K;\nint main()\n{\n  scanf(\"%d\", &N);\n  scanf(\"%d\", &K);\n  printf(\"%d\\n\", 3*N+min(N-K, K-1));\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Nastya Is Playing Computer Games.json",
    "editorial_link": "https://codeforces.com/blog/entry/65905",
    "editorial": "Note that in any case we will open hatches. Also, initial position of\r\nstones is : ( - the number of stones on the i-th hatch ).After any\r\npermutation of stones we will have permutation of numbers : So, to open\r\nhatch with stones, we need at least movements. So, at all, we need at\r\nleast movements(1). To get into all the hatches we need at least\r\nmovements.(since we can only go to the neighboring). So, at all, answer\r\nis : .\r\n"
}