{
    "link": "https://codeforces.com//contest/181/problem/B",
    "problemId": "1237",
    "problem_idx": "B",
    "shortId": "181B",
    "contest_number": "181",
    "problem_submissions": {
        "E": [
            1590113,
            1590937,
            1590679,
            1590013,
            1589120,
            1589907,
            1592216,
            1592384,
            1590755
        ],
        "D": [
            1589155,
            1588722,
            1590996,
            1588173,
            1588742,
            1591468,
            1589039,
            1589783,
            1589665,
            1589895,
            1589654,
            1589997,
            1590444,
            1590515
        ],
        "C": [
            1587940,
            1589199,
            1588760,
            1587377,
            1587624,
            1588135,
            1587859,
            1588331,
            1587782,
            1587761,
            1587961,
            1587963,
            1588400,
            1588067,
            1588525,
            1588209,
            1588624
        ],
        "B": [
            1586840,
            1586866,
            1587707,
            1586377,
            1586530,
            1586858,
            1586846,
            1587063,
            1586738,
            1586718,
            1586968,
            1587093,
            1586831,
            1587067,
            1587085,
            1587398,
            1587045
        ],
        "A": [
            1586352,
            1587002,
            1586481,
            1586332,
            1586340,
            1586462,
            1586515,
            1586430,
            1586388,
            1586402,
            1586351,
            1586368,
            1586685,
            1586466,
            1586482,
            1586638,
            1586389
        ]
    },
    "name": "B. Number of Triplets",
    "statement": "You are given points on a plane. All points are different.Find the\r\nnumber of different groups of three points such that point is the middle\r\nof segment . The groups of three points are considered unordered, that\r\nis, if point is the middle of segment , then groups and are considered\r\nthe same.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n\n#define pb push_back\n\ntypedef unsigned int uint;\ntypedef long long i64;\ntypedef unsigned long long ui64;\n\nconst int intINF=999999999;\nconst i64 i64INF=99999999999999999ll;\nconst double doubleINF=9999999999.;\n\nusing namespace std;\n\nstruct dot{int x,y;};\n\ndot d[3033];\nbool is[2011][2011];\nint n;\n\nint abs(int a){\n\tif(a<0) a*=-1;\n\treturn a;\n}\n\nbool check(int i,int j){\n\tint x1=d[i].x,x2=d[j].x,y1=d[i].y,y2=d[j].y;\n\tint dx=x1+x2,dy=y1+y2;\n\tif(dx%2==1 || dy%2==1) return false;\n\tdx/=2;\n\tdy/=2;\n\treturn is[dx][dy];\n}\n\nint main(){\n\tint cx,cy;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&cx,&cy);\n\t\tcx+=1001; cy+=1001;\n\t\tis[cx][cy]=true;\n\t\td[i].x=cx;\n\t\td[i].y=cy;\n\t}\n\tint ct=0;\n\tfor(int i=1;i<n;i++)\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tif(check(i,j)) ct++;\n\tprintf(\"%d\\n\",ct);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "brute force"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Number of Triplets.json",
    "editorial_link": "https://codeforces.com//blog/entry/4372",
    "editorial": "You can see that for every two points from triplet (for example, for A and C) you can find place of the third point. So you can find number of requred triplets just inerate over all pairs of points and check middle point between points in every pair.\n\nHow to fast check position? You can add 1000 for all coordinates (you can see that this operation doesn't change the answer) and mark them in the 2-dimensional boolean array 2001?2001. So you can check every position for point in O(1) time.\n\nObtained solution works in O(n2)."
}