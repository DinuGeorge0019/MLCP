{
    "link": "https://codeforces.com//contest/1732/problem/A",
    "problemId": "1601554",
    "problem_idx": "A",
    "shortId": "1732A",
    "contest_number": "1732",
    "problem_submissions": {
        "A": [
            177780757,
            177610358,
            177608551,
            177606643,
            177607169,
            177610084,
            177606577,
            177608412,
            177606634,
            177606927,
            177606608,
            177607362,
            177606772,
            177606726,
            177606713,
            177607069,
            177607097,
            177611108,
            177606918,
            177704415,
            177608226,
            177608992
        ],
        "E": [
            177657016,
            177656202,
            177633902,
            177640667,
            177803227,
            177634482,
            219606714,
            177713292,
            205728264
        ],
        "D2": [
            177641910,
            177631345,
            177624639,
            177622507,
            177657720,
            177627306,
            177634600,
            177636897,
            177705044,
            177639536,
            177633383,
            177633472,
            177633356,
            177632157,
            177640421,
            177640870,
            177713072,
            177632770,
            177633150,
            177631372,
            177704515,
            177639496,
            177628055
        ],
        "C2": [
            177632291,
            177641962,
            177622438,
            177615256,
            177628405,
            177620951,
            177620108,
            177616118,
            177614696,
            177620919,
            177623972,
            177616635,
            177637052,
            177635166,
            177620867,
            178222629,
            177623840,
            177623959,
            177628626,
            177704465,
            177632045,
            177631184
        ],
        "D1": [
            177621374,
            177621523,
            177609368,
            177617748,
            177635005,
            177615122,
            177622111,
            177619777,
            177625112,
            177625655,
            177620912,
            177619034,
            177613806,
            177616102,
            177629698,
            177628519,
            177632466,
            177625833,
            177704487,
            177616074,
            177626081
        ],
        "C1": [
            177616773,
            177634647,
            177613208,
            177615318,
            177628507,
            177619693,
            177620176,
            177616207,
            177614603,
            177613000,
            177624015,
            177616698,
            177626783,
            177614045,
            177620826,
            177623767,
            177623763,
            177621443,
            177704454,
            177618806,
            177621758
        ],
        "B": [
            177611173,
            177612224,
            177608250,
            177608561,
            177614708,
            177608123,
            177608457,
            177614546,
            177608888,
            177607945,
            177608753,
            177607801,
            177610965,
            177607589,
            177608533,
            177609886,
            177611017,
            177610279,
            177704436,
            177611009,
            177609323
        ]
    },
    "name": "A. Bestie",
    "statement": "You are given an array a consisting of n integers a_1, a_2,\r\nldots, a_n. Friends asked you to make the greatest common divisor (GCD)\r\nof all numbers in the array equal to 1. In one operation, you can do the\r\nfollowing: Select an arbitrary index in the array 1\r\nleq i\r\nleq n; Make a_i =\r\ngcd(a_i, i), where\r\ngcd(x, y) denotes the GCD of integers x and y. The cost of such an\r\noperation is n - i + 1.You need to find the minimum total cost of\r\noperations we need to perform so that the GCD of the all array numbers\r\nbecomes equal to 1.\r\n",
    "solutions": [
        "#include<cmath>\n#include<cstdio>\n#include<bitset>\n#include<iostream>\n#include<algorithm>\n#include<queue> \n#include<cstring>\n#include<set>\n#include<vector>\n#include<map>\n#include<ctime>\n#include<unordered_map>\nusing namespace std;\n#define LL long long\n#define pp pair<int,int>\n#define ull unsigned long long\nnamespace IO{\n\tconst int sz=1<<22;\n\tchar a[sz+5],b[sz+5],*p1=a,*p2=a,*t=b,p[105];\n\tinline char gc(){\n\t//\treturn p1==p2?(p2=(p1=a)+fread(a,1,sz,stdin),p1==p2?EOF:*p1++):*p1++;\n\t\treturn getchar();\n\t}\n\ttemplate<class T> void gi(T& x){\n\t\tx=0; int f=1;char c=gc();\n\t\tif(c=='-')f=-1;\n\t\tfor(;c<'0'||c>'9';c=gc())if(c=='-')f=-1;\n\t\tfor(;c>='0'&&c<='9';c=gc())\n\t\t\tx=x*10+(c-'0');\n\t\tx=x*f;\n\t}\n\tinline void flush(){fwrite(b,1,t-b,stdout),t=b; }\n\tinline void pc(char x){*t++=x; if(t-b==sz) flush(); }\n\ttemplate<class T> void pi(T x,char c='\\n'){\n\t\tif(x<0)pc('-'),x=-x;\n\t\tif(x==0) pc('0'); int t=0;\n\t\tfor(;x;x/=10) p[++t]=x%10+'0';\n\t\tfor(;t;--t) pc(p[t]); pc(c);\n\t}\n\tstruct F{~F(){flush();}}f; \n}\nusing IO::gi;\nusing IO::pi;\nusing IO::pc;\nconst int mod=998244353;\ninline int add(int x,int y){\n\treturn x+y>=mod?x+y-mod:x+y;\n}\ninline int dec(int x,int y){\n\treturn x-y<0?x-y+mod:x-y;\n}\nint qkpow(int a,int b){\n\tint ans=1,base=a%mod;\n\twhile(b){\n\t\tif(b&1)ans=1ll*ans*base%mod;\n\t\tbase=1ll*base*base%mod;\n\t\tb>>=1;\n\t}\n\treturn ans;\n}\nint fac[10000005],inv[10000005],Invn[600005];\ninline int C(int n,int m){\n\tif(n<m||m<0)return 0;\n\treturn 1ll*fac[n]*inv[m]%mod*inv[n-m]%mod;\n}\nvoid init_C(int n){\n\tfac[0]=1;\n\tfor(int i=1;i<=n;i++)fac[i]=1ll*fac[i-1]*i%mod; \n\tinv[0]=1;\n\tinv[n]=qkpow(fac[n],mod-2);\n\tfor(int i=n-1;i>=1;i--)inv[i]=1ll*inv[i+1]*(i+1)%mod;\n\tInvn[0]=Invn[1]=1;\n\tfor(int i=1;i<=200000;i++)Invn[i]=(LL)(mod-mod/i)*Invn[mod%i]%mod;\n}  \nint t,n,a[25],res,dp[25],b[25];\nbool vis[25];\nsigned main(){\n\tsrand(time(0));\n\tgi(t);\n\twhile(t--){\n\t\tgi(n);\n\t\tint fk=0;\n\t\tfor(int i=1;i<=n;i++)gi(a[i]),b[i]=__gcd(i,a[i]),fk=__gcd(fk,a[i]);\n\t\tif(fk==1){\n\t\t\tpi(0,'\\n');\n\t\t\tcontinue;\n\t\t}\n\t\tres=1e9;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=n;j++)dp[j]=1e9;\n\t\t\tdp[__gcd(a[i],i)]=n-i+1;\n\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\tif(j==i)continue;\n\t\t\t\tfor(int k=1;k<=n;k++){\n\t\t\t\t\tdp[__gcd(b[j],k)]=min(dp[__gcd(b[j],k)],dp[k]+n-j+1);\n\t\t\t\t\tdp[__gcd(a[j],k)]=min(dp[__gcd(a[j],k)],dp[k]);\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\t\t\tres=min(res,dp[1]);\n\t\t}\n\t\tpi(res,'\\n');\n\t}\n\treturn 0;\n} \n/*\n错误的，偏激的，极右翼的，非马恩主义的，女权的，失败的，人民日报的，乐的！ \n文明之美看东方\n*/"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Bestie.json",
    "editorial_link": "https://codeforces.com//blog/entry/108327",
    "editorial": "Letâs make an important observation: for any value of . Moreover,\r\nchoosing and are the cheapest operations. From this we can conclude that\r\nthe answer is .Let be the of all numbers in the array. Then we have the\r\nfollowing cases: If , then the operation can be omitted and the answer\r\nis , Otherwise, letâs try the cheapest operation . If , then the answer\r\nis . Otherwise, letâs try the next cheapest operation, ie . If , then\r\nthe answer is . Otherwise, the answer is , since .\r\n",
    "hint": []
}