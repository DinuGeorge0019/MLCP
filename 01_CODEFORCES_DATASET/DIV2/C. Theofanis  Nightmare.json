{
    "link": "https://codeforces.com//contest/1903/problem/C",
    "problemId": "2355504",
    "problem_idx": "C",
    "shortId": "1903C",
    "contest_number": "1903",
    "problem_submissions": {
        "D2": [
            235128331,
            235435764,
            235183865,
            235116126,
            235121557,
            235122165,
            236143935,
            235115553,
            235129873,
            235119268
        ],
        "F": [
            235111543,
            235102179,
            235105725,
            235099949,
            235124718,
            235126382,
            235187626,
            235129442,
            235218441,
            235126934,
            235133564,
            235146171,
            235141771,
            235179210
        ],
        "E": [
            235106076,
            235104135,
            235115833,
            235114935,
            235102473,
            235112204,
            235107850,
            235103854,
            235111843,
            235109842,
            235115868,
            235124408,
            235114753,
            235126753,
            235108387,
            235107433,
            235107971,
            235105219,
            235108510,
            235108333
        ],
        "D1": [
            235093312,
            235109270,
            235095674,
            235117999,
            235091603,
            235099696,
            235100348,
            235094032,
            235098578,
            235098148,
            235119995,
            235115692,
            235105537,
            235119353,
            235094232,
            235095613,
            235096813,
            235097844,
            235096074,
            235099176
        ],
        "C": [
            235088892,
            235089084,
            235089891,
            235103743,
            235087836,
            235093791,
            235088528,
            235088785,
            235092085,
            235091882,
            235086000,
            235089517,
            235099201,
            235093455,
            235087482,
            235090537,
            235090823,
            235091561,
            235089639,
            235091936
        ],
        "B": [
            235086528,
            235084790,
            235086716,
            235102627,
            235086465,
            235090208,
            235086073,
            235088901,
            235087776,
            235087683,
            235089557,
            235084538,
            235096155,
            235090241,
            235085240,
            235087001,
            235086944,
            235087486,
            235086654,
            235088684
        ],
        "A": [
            235083574,
            235084421,
            235082280,
            235100671,
            235083954,
            235085469,
            235082350,
            235089029,
            235082379,
            235083014,
            235084518,
            235090802,
            235083842,
            235083352,
            235082144,
            235082627,
            235082396,
            235082150,
            235082134,
            235082717
        ]
    },
    "name": "C. Theofanis  Nightmare",
    "statement": "Theofanis easily gets obsessed with problems before going to sleep and\r\noften has nightmares about them. To deal with his obsession he visited\r\nhis doctor, Dr. Emix.In his latest nightmare, he has an array a of size\r\nn and wants to divide it into non-empty subarrays^{\r\ndagger} such that every element is in exactly one of the subarrays.For\r\nexample, the array [1,-3,7,-6,2,5] can be divided to [1] [-3,7] [-6,2]\r\n[5]. The Cypriot value of such division is equal to\r\nSigma_{i=1}^{k} i\r\ncdot\r\nmathrm{sum}_i where k is the number of subarrays that we divided the\r\narray into and\r\nmathrm{sum}_i is the sum of the i-th subarray.The Cypriot value of this\r\ndivision of the array [1] [-3,7] [-6,2] [5] = 1\r\ncdot 1 + 2\r\ncdot (-3 + 7) + 3\r\ncdot (-6 + 2) + 4\r\ncdot 5 = 17. Theofanis is wondering what is the Cypriot value of any\r\ndivision of the array.^{\r\ndagger} An array b is a subarray of an array a if b can be obtained from\r\na by deletion of several (possibly, zero or all) elements from the\r\nbeginning and several (possibly, zero or all) elements from the end. In\r\nparticular, an array is a subarray of itself.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(false), cin.tie(0);\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        vector <long long> a(n);\n        long long ans = 0;\n        for (int i = 0; i < n; ++i) {\n            cin >> a[i];\n            ans += (i + 1) * a[i];\n        }\n        long long sum = 0;\n        for (int i = n - 1; ~i; --i) {\n            sum += a[i];\n            if (i && sum < 0) {\n                ans -= sum;\n            }\n        }\n        cout << ans << '\\n';\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Theofanis  Nightmare.json",
    "editorial_link": "https://codeforces.com//blog/entry/122820",
    "editorial": "Let be the suffix sum of the array (from the position to the ). sum of\r\nwhere is the leftmost element of the subarray.Definitely, and we can\r\ntake any other we want (at most once). So we start with and for every we\r\nadd if it is positive.We can easily see that this greedy works.\r\n",
    "hint": [
        "Hint Think of suffixes."
    ]
}