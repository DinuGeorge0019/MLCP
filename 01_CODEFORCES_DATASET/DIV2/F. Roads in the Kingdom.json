{"link": "https://codeforces.com//contest/835/problem/F", "problemId": "116351", "problem_idx": "F", "shortId": "835F", "contest_number": "835", "problem_submissions": {"D": [29372323, 29063139, 29065486, 29070406, 29071972, 29065004, 29066901, 29072296, 29065942, 29065319, 29066211, 29066423, 29075382, 29067277, 29065713, 29073319, 29071645, 29059686], "F": [29082635, 29069949, 29070481, 29064958, 29071364, 29065236, 29070446, 29064892, 29066866, 29074301, 29064205, 29065410], "E": [29073719, 29074800, 29065648, 29071559, 29118023, 29074000, 29070288, 29074317, 29074268, 29072935, 29075101, 29066717], "C": [29058240, 29062830, 29058737, 29063335, 29056792, 29060472, 29066295, 29062534, 29061132, 29058860, 29063690, 29065693, 29064050, 29057954, 29069770, 29060762, 29065225, 29063124, 29064200, 29068485], "B": [29056834, 29060334, 29054848, 29057576, 29053644, 29056903, 29057508, 29057673, 29056074, 29075847, 29059991, 29061445, 29056492, 29073726, 29059387, 29100665, 29056240, 29055742, 29057065, 29080041, 29054530], "A": [29052216, 29052753, 29051567, 29054419, 29051774, 29054501, 29055498, 29051558, 29052865, 29055926, 29056006, 29052148, 29051882, 29054461, 29085374, 29052881, 29053437, 29053701, 29066515, 29051895]}, "name": "F. Roads in the Kingdom", "statement": "In the Kingdom K., there are towns numbered with integers from to . The\r\ntowns are connected by bi-directional roads numbered with integers from\r\nto . The -th road connects the towns and and its length is . There is no\r\nmore than one road between two towns. Also, there are no roads that\r\nconnect the towns with itself.Let\u2019s call the inconvenience of the roads\r\nthe maximum of the shortest distances between all pairs of towns.Because\r\nof lack of money, it was decided to close down one of the roads so that\r\nafter its removal it is still possible to reach any town from any other.\r\nYou have to find the minimum possible inconvenience of the roads after\r\nclosing down one of the roads.\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\n#include<utility>\n#include<list>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nstruct uni\n{\n\tint f[200010];\n\tint find(int x)\n\t{\n\t\treturn f[x]==x?x:f[x]=find(f[x]);\n\t}\n\tvoid merge(int x,int y)\n\t{\n\t\tf[find(x)]=find(y);\n\t}\n};\nuni un;\nlist<pii> l[200010];\nll dp[200010];\nint f[200010];\nint d[200010];\nint fsum[200010];\nint vis[200010];\nll dfs(int x,int fa,int dep,int sum2)\n{\n\tfsum[x]=sum2;\n\td[x]=dep;\n\tll s=0;\n\tf[x]=fa;\n\tdp[x]=0;\n\tfor(auto v:l[x])\n\t\tif(v.first!=fa&&!vis[v.first])\n\t\t{\n\t\t\ts=max(s,dfs(v.first,x,dep+1,v.second));\n\t\t\ts=max(s,dp[x]+dp[v.first]+v.second);\n\t\t\tdp[x]=max(dp[x],dp[v.first]+v.second);\n\t\t}\n\treturn s;\n}\nint a1[200010];\nint a2[200010];\nint cnt1,cnt2;\nll presum1[200010];\nll presum2[200010];\nll pref[200010];\nll suff[200010];\nll premax[200010];\nll sufmax[200010];\nll f1[200010];\nll f2[200010];\nint main()\n{\n//\tfreopen(\"f.in\",\"r\",stdin);\n//\tfreopen(\"f.out\",\"w\",stdout);\n\tmemset(vis,0,sizeof vis);\n\tint n;\n\tscanf(\"%d\",&n);\n\tint x,y,z;\n\tint i;\n\tfor(i=1;i<=n;i++)\n\t\tun.f[i]=i;\n\tint sx,sy,sz;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(un.find(x)!=un.find(y))\n\t\t{\n\t\t\tl[x].push_back(pii(y,z));\n\t\t\tl[y].push_back(pii(x,z));\n\t\t\tun.merge(x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsx=x;\n\t\t\tsy=y;\n\t\t\tsz=z;\n\t\t}\n\t}\n\tll ans=dfs(1,0,1,0);\n\tll ans2=0;\n\tcnt1=cnt2=0;\n\tint last=0;\n\twhile(sx!=sy)\n\t{\n\t\tif(d[sx]>d[sy])\n\t\t{\n\t\t\ta1[++cnt1]=sx;\n\t\t\tpresum1[cnt1]=last;\n\t\t\tlast=fsum[sx];\n\t\t\tsx=f[sx];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta2[++cnt2]=sy;\n\t\t\tpresum2[cnt2]=fsum[sy];\n\t\t\tsy=f[sy];\n\t\t}\n\t}\n\ta1[++cnt1]=sx;\n\tpresum1[cnt1]=last;\n\twhile(cnt2)\n\t{\n\t\tcnt1++;\n\t\ta1[cnt1]=a2[cnt2];\n\t\tpresum1[cnt1]=presum2[cnt2];\n\t\tcnt2--;\n\t}\n\tfor(i=2;i<=cnt1;i++)\n\t\tpresum1[i]+=presum1[i-1];\n\tfor(i=1;i<=cnt1;i++)\n\t\tvis[a1[i]]=1;\n\tll sum=presum1[cnt1];\n\tfor(i=1;i<=cnt1;i++)\n\t{\n\t\tll ans3=dfs(a1[i],0,1,0);\n\t\tans2=max(ans2,ans3);\n\t\tf1[i]=presum1[i]+dp[a1[i]];\n\t\tf2[i]=sum-presum1[i]+dp[a1[i]];\n\t}\n\tfor(i=2;i<=cnt1;i++)\n\t\tf1[i]=max(f1[i],f1[i-1]);\n\tfor(i=cnt1-1;i>=1;i--)\n\t\tf2[i]=max(f2[i],f2[i+1]);\n\tpremax[0]=sufmax[cnt1+1]=0;\n\tpref[0]=suff[cnt1+1]=0;\n\tpresum1[0]=0;\n\tpresum1[cnt1+1]=presum1[cnt1];\n\tfor(i=1;i<=cnt1;i++)\n\t{\n\t\tpremax[i]=max(premax[i-1],pref[i-1]+dp[a1[i]]+presum1[i]-presum1[i-1]);\n\t\tpref[i]=max(dp[a1[i]],pref[i-1]+presum1[i]-presum1[i-1]);\n\t}\n\tfor(i=cnt1;i>=1;i--)\n\t{\n\t\tsufmax[i]=max(sufmax[i+1],suff[i+1]+dp[a1[i]]+presum1[i+1]-presum1[i]);\n\t\tsuff[i]=max(dp[a1[i]],suff[i+1]+presum1[i+1]-presum1[i]);\n\t}\n\tfor(i=1;i<cnt1;i++)\n\t{\n\t\tll s=f1[i]+f2[i+1]+sz;\n\t\ts=max(s,ans2);\n\t\ts=max(s,max(premax[i],sufmax[i+1]));\n\t\tans=min(ans,s);\n\t}\n\tprintf(\"%I64d\\n\",ans);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["dfs and similar", "dp", "graphs", "trees"], "dificulty": "2500", "interactive": false}