{
    "link": "https://codeforces.com//contest/263/problem/A",
    "problemId": "2516",
    "problem_idx": "A",
    "shortId": "263A",
    "contest_number": "263",
    "problem_submissions": {
        "E": [
            2943196
        ],
        "D": [
            2942145,
            2939985,
            2942208,
            2939952,
            2940748,
            2942993,
            2943370,
            2941259,
            2941637,
            2940304,
            2943228,
            2941800,
            2941304,
            2944161,
            2943666,
            2944368,
            2940892
        ],
        "C": [
            2940759,
            2941829,
            2940936,
            2942500,
            2943328,
            2941933,
            2942288,
            2943440,
            2943805,
            2944431,
            2942111,
            2943776,
            2944668,
            2943093,
            2943041,
            2942906,
            2944522
        ],
        "B": [
            2938515,
            2938111,
            2937699,
            2937858,
            2938311,
            2938172,
            2938572,
            2938277,
            2938614,
            2941034,
            2937866,
            2938119,
            2938506,
            2938610,
            2938586,
            2938823,
            2938384
        ],
        "A": [
            2937160,
            2937166,
            2936927,
            2936979,
            2936967,
            2936966,
            2936959,
            2936975,
            2937475,
            2941215,
            2938221,
            2937216,
            2937223,
            2937302,
            2937515,
            2937451,
            2937077
        ]
    },
    "name": "A. Beautiful Matrix",
    "statement": "You’ve got a matrix, consisting of zeroes and a single number one. Let’s\r\nindex the matrix rows by numbers from to from top to bottom, let’s index\r\nthe matrix columns by numbers from to from left to right. In one move,\r\nyou are allowed to apply one of the two following transformations to the\r\nmatrix: Swap two neighboring matrix rows, that is, rows with indexes and\r\nfor some integer . Swap two neighboring matrix columns, that is, columns\r\nwith indexes and for some integer . You think that a matrix looks , if\r\nthe single number one of the matrix is located in its middle (in the\r\ncell that is on the intersection of the third row and the third column).\r\nCount the minimum number of moves needed to make the matrix beautiful.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <map>\n\nint mm[10][10], ans;\n\nint abs(int a) {return a>0 ? a : -a;}\n\nint main() {\n    for(int i=0; i<5; i++)\n        for(int j=0; j<5; j++) {\n            scanf(\"%d\", &mm[i][j]);\n            if(mm[i][j] == 1) {\n                ans += abs(i-2);\n                ans += abs(j-2);\n            }\n        }\n    printf(\"%d\\n\", ans);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Beautiful Matrix.json",
    "editorial_link": "https://codeforces.com//blog/entry/6419",
    "editorial": "If the single is located on the intersection of the -th row and the -th\r\ncolumn (1-based numeration), then the answer is .\r\n",
    "hint": []
}