{"link": "https://codeforces.com//contest/745/problem/A", "problemId": "85234", "problem_idx": "A", "shortId": "745A", "contest_number": "745", "problem_submissions": {"D": [23063628, 23061434, 23062278, 23062946, 23063952, 23062953, 23063684, 23065227, 23067508, 23064054, 23066325, 23064778, 23065417, 23065640, 23065940, 23064035, 23066189, 23064933, 23065850], "C": [23058754, 23056208, 23058146, 23057537, 23056194, 23058075, 23057431, 23056700, 23056696, 23059037, 23057208, 23057100, 23059888, 23057785, 23058711, 23057786, 23057804, 23058775, 23060465, 23060269], "B": [23054534, 23053936, 23055906, 23053616, 23057561, 59539483, 23055581, 23054327, 23058797, 23055722, 23054071, 23052962, 23055965, 23054973, 23055010, 23060679, 23060284, 23055704, 23055472, 23055306], "A": [23052643, 23052117, 23054108, 23052198, 23052470, 23052835, 23052386, 23052148, 23052356, 23052891, 23052103, 23052050, 23052345, 23052453, 23052723, 23054138, 23052447, 23052434], "E": [23177019, 25241753, 23067030, 23140409]}, "name": "A. Hongcow Learns the Cyclic Shift", "statement": "Hongcow is learning to spell! One day, his teacher gives him a word that\r\nhe needs to learn to spell. Being a dutiful student, he immediately\r\nlearns how to spell the word.Hongcow has decided to try to make new\r\nwords from this one. He starts by taking the word he just learned how to\r\nspell, and moves the last character of the word to the beginning of the\r\nword. He calls this a . He can apply cyclic shift many times. For\r\nexample, consecutively applying cyclic shift operation to the word\r\n\"abracadabra\" Hongcow will get words \"aabracadabr\", \"raabracadab\" and so\r\non.Hongcow is now wondering how many distinct words he can generate by\r\ndoing the cyclic shift arbitrarily many times. The initial string is\r\nalso counted.\r\n", "solutions": ["#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <queue>\n#include <set>\n#include <string>\n#include <vector>\n\n#define FOR(i,n) for(int i=0;i<(n);++i)\n#define FORU(i,j,k) for(int i=(j);i<=(k);++i)\n#define FORD(i,j,k) for(int i=(j);i>=(k);--i)\n\nusing namespace std;\n\nusing lli = long long int;\nusing pll = pair<lli, lli>;\n\nconst long long int oo = 1000*1000*1000;\n\nstruct Coord\n{\n\tint x, y;\n\tCoord(int x = 0, int y = 0) : x(x), y(y) {}\n\tCoord operator + (const Coord& droite) const\n\t{\n\t\treturn Coord(x + droite.x, y + droite.y);\n\t}\n};\n\n\nint main()\n{\n\tchar buf[100];\n\tscanf(\" %s\", buf);\n\tstring s = buf;\n\tint r = 1;\n\tFORU(i, 1, (int)s.size()-1)\n\t{\n\t\tbool same = true;\n\t\tFOR(j, (int)s.size())\n\t\t\tsame &= s[j] == s[(i+j)%s.size()];\n\t\tif(same)\n\t\t\tbreak;\n\t\t++r;\n\t}\n\tprintf(\"%d\\n\", r);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "900", "interactive": false}