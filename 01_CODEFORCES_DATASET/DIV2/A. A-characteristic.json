{
    "link": "https://codeforces.com//contest/1823/problem/A",
    "problemId": "1896867",
    "problem_idx": "A",
    "shortId": "1823A",
    "contest_number": "1823",
    "problem_submissions": {
        "E": [
            203705839,
            203701788,
            203710907,
            203711770,
            203705371,
            203702158,
            203705164,
            203708687,
            203695617,
            203698015,
            203713863,
            203711164,
            203711208
        ],
        "F": [
            203698273,
            203688371,
            203699854,
            203692525,
            203713776,
            203706591,
            203701681,
            203697250,
            203707004,
            203714464,
            203718741,
            203709649,
            204276537,
            203715624
        ],
        "D": [
            203690544,
            203695164,
            203688855,
            203701895,
            203696407,
            203691855,
            203694127,
            203710546,
            203714159,
            203700668,
            203695441,
            203690745,
            203703946,
            203707611,
            203710099,
            203694539,
            203701580,
            203697921,
            203699365
        ],
        "C": [
            203682587,
            203678999,
            203681052,
            203684144,
            203687732,
            203680914,
            203689997,
            203682944,
            203686588,
            203690248,
            203682397,
            203683673,
            203689305,
            203682640,
            203682923,
            203682065,
            203686779,
            203685407,
            203684445,
            203683205
        ],
        "B": [
            203677458,
            203684522,
            203677423,
            203681465,
            203680710,
            203678118,
            203686689,
            203678181,
            203679545,
            203680940,
            203678605,
            203678733,
            203683292,
            203678419,
            203679073,
            203679634,
            203680902,
            203679216,
            203679313
        ],
        "A": [
            203676393,
            203676826,
            203676383,
            203676665,
            203678720,
            203676331,
            203678496,
            203676540,
            203676948,
            203676909,
            203676591,
            203676707,
            203676528,
            203676629,
            203676389,
            203676483,
            203678253,
            203677369,
            203678056
        ]
    },
    "name": "A. A-characteristic",
    "statement": "Consider an array a_1, a_2,\r\ndots, a_n consisting of numbers 1 and -1. Define A-characteristic of\r\nthis array as a number of pairs of indices 1\r\nle i < j\r\nle n, such that a_i\r\ncdot a_j = 1.Find any array a with given length n with A-characteristic\r\nequal to the given value k.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nusing pii=pair<int,int>;\n\n#define all(a) a.begin(),a.end()\n#define pb push_back\n#define sz(a) ((int)a.size())\n\nconst int N=200005;\n\nint n,k;\n\nvoid ldc(){\n    cin >> n >> k;\n    for(int i=0; i<=n; ++i) if(i*(i-1)/2+(n-i)*(n-i-1)/2==k){\n        cout << \"YES\\n\";\n        for(int j=0; j<i; ++j) cout << \"1 \";\n        for(int j=i; j<n; ++j) cout << \"-1 \";\n        cout << \"\\n\";\n        return;\n    }\n    cout << \"NO\\n\";\n}\n\nsigned main(){\n    ios_base::sync_with_stdio(0),cin.tie(0);\n    int t;\n    cin >> t;\n    while(t--) ldc();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. A-characteristic.json",
    "editorial_link": "https://codeforces.com//blog/entry/115465",
    "editorial": "Note that the -characteristic depends only on the number of -s. Let the\r\nnumber of -s be equal to , then the number of -s is equal to , and the\r\n-characteristic is equal to .Let\u00e2\u0080\u0099s iterate over all from to , and check\r\nif there is such that . Then print numbers and numbers .\r\n"
}