{
    "link": "https://codeforces.com//contest/1561/problem/A",
    "problemId": "1088956",
    "problem_idx": "A",
    "shortId": "1561A",
    "contest_number": "1561",
    "problem_submissions": {
        "F": [
            126904536,
            126901655,
            126903407,
            126897889,
            126905462,
            126895857,
            126909746,
            126868411
        ],
        "E": [
            126872829,
            126873450,
            126873472,
            126876837,
            126887119,
            126925237,
            126873365,
            126880329,
            126880730,
            126881569,
            126878334,
            126883106,
            126884943,
            126885452,
            126887344,
            126884906,
            126885650,
            126888199,
            126863450
        ],
        "C": [
            126869012,
            126865542,
            126864086,
            126863127,
            126863122,
            126861060,
            126868974,
            126853568,
            126857674,
            126857569,
            126854957,
            126857844,
            126858666,
            126860889,
            126860513,
            126857734,
            126864125,
            126867660,
            126866693
        ],
        "D1": [
            126861759,
            126863688,
            126864717,
            126869692,
            126872900,
            126868199,
            126862491,
            126866683,
            126868762,
            126864055,
            126863339,
            126863270,
            126867571,
            126865653,
            126863522,
            126870959,
            126872615,
            126860538,
            126862556
        ],
        "D2": [
            126861568,
            126863750,
            126868373,
            126869562,
            126876457,
            126868351,
            126862413,
            126873746,
            126868674,
            126867473,
            126864201,
            126863508,
            126868989,
            126866379,
            126880112,
            126871782,
            126872752,
            126861102,
            126877754
        ],
        "B": [
            126856962,
            126852931,
            126853927,
            126857335,
            126862047,
            126855473,
            126854073,
            126848963,
            126854204,
            126852816,
            126866896,
            126854673,
            126855023,
            126857298,
            126855876,
            126863677,
            126859086,
            126871391,
            126876744
        ],
        "A": [
            126847903,
            126848403,
            126847412,
            126849843,
            126849112,
            126848036,
            126848332,
            126847281,
            126847584,
            126847566,
            126847516,
            126847717,
            126847410,
            126847430,
            126850448,
            126848322,
            126849200,
            126856163,
            126853136
        ]
    },
    "name": "A. Simply Strange Sort",
    "statement": "You have a permutation: an array a = [a_1, a_2,\r\nldots, a_n] of distinct integers from 1 to n. The length of the\r\npermutation n is odd.Consider the following algorithm of sorting the\r\npermutation in increasing order.A helper procedure of the algorithm,\r\nf(i), takes a single argument i (1\r\nle i\r\nle n-1) and does the following. If a_i > a_{i+1}, the values of a_i and\r\na_{i+1} are exchanged. Otherwise, the permutation doesn\u2019t change.The\r\nalgorithm consists of iterations, numbered with consecutive integers\r\nstarting with 1. On the i-th iteration, the algorithm does the\r\nfollowing: if i is odd, call f(1), f(3),\r\nldots, f(n - 2); if i is even, call f(2), f(4),\r\nldots, f(n - 1). It can be proven that after a finite number of\r\niterations the permutation will be sorted in increasing order.After how\r\nmany iterations will this happen for the first time?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint n,a[1005];\nvoid Solve()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;;++i)\n\t{\n\t\tfor(int j=2;j<=n;++j)\n\t\t{\n\t\t\tif(a[j]<a[j-1])\tgoto fail;\n\t\t}\n\t\tprintf(\"%d\\n\",i-1);\n\t\tbreak;\n\t\tfail:;\n\t\tif(i&1)\n\t\t{\n\t\t\tfor(int j=1;j<=n;j+=2)\n\t\t\t{\n\t\t\t\tif(j+1>n)\tcontinue;\n\t\t\t\tif(a[j]>a[j+1])\tswap(a[j],a[j+1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int j=2;j<=n;j+=2)\n\t\t\t{\n\t\t\t\tif(j+1>n)\tcontinue;\n\t\t\t\tif(a[j]>a[j+1])\tswap(a[j],a[j+1]);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0)\tSolve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Simply Strange Sort.json",
    "editorial_link": "https://codeforces.com//blog/entry/94216",
    "editorial": "The described sorting algorithm is similar to Odd-even sort.In this\r\nproblem, it\u00e2\u0080\u0099s enough to carefully implement the process described in the\r\nproblem statement. Here is one sample implementation in C++:To estimate\r\nthe complexity of this solution, we need to know the maximum number of\r\niterations required to sort a permutation of length . It turns out that\r\nthis number is equal to exactly , thus the complexity of the algorithm\r\nis . This is intuitive because the algorithm looks similar to bubble\r\nsort that requires iterations too, or you can directly check that\r\nsorting requires iterations and reason that \"more sorted\" sequences\r\ncan\u00e2\u0080\u0099t require more iterations than \"less sorted\" sequences, and is\r\nnaturally the \"least sorted\" sequence of them all. For a formal proof\r\nsee e.g. the linked Wikipedia page. The proof also follows from the\r\neditorial of problem F in Div. 1. If you have a simpler proof, please\r\nshare in comments!\r\n"
}