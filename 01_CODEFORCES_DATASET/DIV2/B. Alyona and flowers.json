{
    "link": "https://codeforces.com//contest/740/problem/B",
    "problemId": "81528",
    "problem_idx": "B",
    "shortId": "740B",
    "contest_number": "740",
    "problem_submissions": {
        "E": [
            22446990,
            22448474,
            22447966,
            22448057,
            22445073,
            22450140
        ],
        "D": [
            22439412,
            22439501,
            22441405,
            22442158,
            22441228,
            22442043,
            22444396,
            22443003,
            22443858,
            22440389,
            22438383,
            22443141,
            22440987,
            22434772,
            22440005,
            22441561,
            22440585,
            22443581,
            22437799,
            22440799
        ],
        "C": [
            22434901,
            22433582,
            22438379,
            22436692,
            22431072,
            22432796,
            22434051,
            22436772,
            22434191,
            22433939,
            22440329,
            22437240,
            22438204,
            22444420,
            22434561,
            22436539,
            22433220,
            22434158,
            22437987
        ],
        "B": [
            22430518,
            22430263,
            22434039,
            22433558,
            22429147,
            22430035,
            22430933,
            22430825,
            22428254,
            22429750,
            22432572,
            22434667,
            22438582,
            22431092,
            22433538,
            22429194,
            22431254,
            22430546,
            22430025
        ],
        "A": [
            22428386,
            22434382,
            22429601,
            22432121,
            22428085,
            22439358,
            22428434,
            22428332,
            22430743,
            22428904,
            22430234,
            22432401,
            22436992,
            22429501,
            22430090,
            22427921,
            22428402,
            22428280
        ]
    },
    "name": "B. Alyona and flowers",
    "statement": "Little Alyona is celebrating Happy Birthday! Her mother has an array of\r\nflowers. Each flower has some mood, the mood of -th flower is . The mood\r\ncan be positive, zero or negative.Let’s define a subarray as a segment\r\nof consecutive flowers. The mother suggested some set of subarrays.\r\nAlyona wants to choose several of the subarrays suggested by her mother.\r\nAfter that, each of the flowers will add to the girl’s happiness its\r\nmood multiplied by the number of chosen subarrays the flower is in.For\r\nexample, consider the case when the mother has flowers, and their moods\r\nare equal to . Suppose the mother suggested subarrays , , , . Then if\r\nthe girl chooses the third and the fourth subarrays then: the first\r\nflower adds to the girl’s happiness, because he is in one of chosen\r\nsubarrays, the second flower adds , because he is in one of chosen\r\nsubarrays, the third flower adds , because he is in two of chosen\r\nsubarrays, the fourth flower adds , because he is in two of chosen\r\nsubarrays, the fifth flower adds , because he is in no chosen subarrays.\r\nThus, in total is added to the girl’s happiness. Alyona wants to choose\r\nsuch subarrays from those suggested by the mother that the value added\r\nto her happiness would be as large as possible. Help her do this!Alyona\r\ncan choose any number of the subarrays, even or all suggested by her\r\nmother.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std; \n\nconst int N=3500;\nconst int Mod=1e9+7;\n\nlong long a[N],f[N],ans;\nint n,m,l[N],r[N];\n\nint main() {\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tfor(int i=1;i<=m;i++) {\n\t\tcin>>l[i]>>r[i];\n\t\tfor(int j=l[i];j<=r[i];j++) f[i]+=a[j];\n\t\tif(f[i]>0) ans+=f[i];\n\t}\n\tcout<<ans;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Alyona and flowers.json",
    "editorial_link": "https://codeforces.com//blog/entry/48582",
    "editorial": "If you restate the problem, it is clear that you need to take sub-arrays\r\nthat have positive sum.\r\n",
    "hint": []
}