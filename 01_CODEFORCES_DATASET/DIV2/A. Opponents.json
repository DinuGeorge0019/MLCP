{"link": "https://codeforces.com//contest/688/problem/A", "problemId": "63905", "problem_idx": "A", "shortId": "688A", "contest_number": "688", "problem_submissions": {"E": [18798101, 18796724, 18797231, 18798974, 18799540, 18801395, 18802783, 18810711, 18809719, 18801431, 18803825, 18802677, 18803257, 18800733, 18802066, 18803323, 18803755, 18803508, 18805435, 18805332], "D": [18794251, 18793642, 18792480, 18793770, 18795849, 18798326, 18794352, 18809463, 18809360, 18809030, 18793977, 18797699, 18797400, 18801049, 18802910, 18798453, 18798000, 18798601, 18798398, 18797731, 18799630], "C": [18793128, 18791291, 18793167, 18791852, 18788953, 18790786, 18792131, 18796089, 18794724, 18793607, 18792460, 18789743, 18795539, 18794192, 18793703, 18794069, 18795590, 18793984], "B": [18787495, 18787231, 18789682, 18788356, 18790758, 18787367, 18786760, 18786756, 18789463, 18788573, 18788713, 18787120, 18790658, 18788353, 18788699, 18790793, 18786776, 18789835], "A": [18786938, 18786787, 18787620, 18787066, 18791713, 18786819, 18787191, 18788288, 18788193, 18787025, 18786883, 18786790, 18787732, 18786915, 18788140, 18791164, 18789687, 18788126]}, "name": "A. Opponents", "statement": "Arya has opponents in the school. Each day he will fight with all\r\nopponents who are present this day. His opponents have some fighting\r\nplan that guarantees they will win, but implementing this plan requires\r\npresence of them all. That means if one day at least one of Arya\u2019s\r\nopponents is absent at the school, then Arya will beat all present\r\nopponents. Otherwise, if all opponents are present, then they will beat\r\nArya.For each opponent Arya knows his schedule whether or not he is\r\ngoing to present on each particular day. Tell him the maximum number of\r\ndays that he will beat all present opponents.Note, that if some day\r\nthere are no opponents present, Arya still considers he beats all the\r\npresent opponents.\r\n", "solutions": ["// VSCF.cpp : Defines the entry point for the console application.\n//\n#include <unordered_map>\n#include <iomanip>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <iterator>\n#include <string>\n#include <vector>\n#include <set>\n#include <deque>\n#include <map>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\n#define MP make_pair\n#define FOR(v,p,k) for(int v=p;v<=k;++v)\n#define FORD(v,p,k) for(int v=p;v>=k;--v)\n#define REP(i,n) for(int i=0;i<(n);++i)\n#define VAR(v,i) __typeof(i) v=(i)\n#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)\n#define PB push_back\n#define ST first\n#define ND second\n#define SIZE(x) (int)x.size()\n#define ALL(c) c.begin(),c.end()\n\nint main() {\n\tint n, d;\n\tcin >> n >> d;\n\tvector<string> inp(d);\n\tREP(i, d) {\n\t\tcin >> inp[i];\n\t}\n\tvector<bool> ok(d);\n\tREP(i, d) {\n\t\tREP(j, n) {\n\t\t\tif (inp[i][j] == '0') {\n\t\t\t\tok[i] = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tint co = 0;\n\tint maxCo = 0;\n\tREP(i, d) {\n\t\tif (ok[i]) {\n\t\t\tco++;\n\t\t\tmaxCo = max(co, maxCo);\n\t\t} else {\n\t\t\tco = 0;\n\t\t}\n\t}\n\tcout << maxCo;\n\treturn 0;\n}\n\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "800", "interactive": false}