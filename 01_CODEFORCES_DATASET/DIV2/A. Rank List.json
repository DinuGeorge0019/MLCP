{
    "link": "https://codeforces.com//contest/166/problem/A",
    "problemId": "1039",
    "problem_idx": "A",
    "shortId": "166A",
    "contest_number": "166",
    "problem_submissions": {
        "D": [
            1396659,
            1395820,
            1401592,
            1396051,
            1397210
        ],
        "B": [
            1395005,
            1394804,
            1392115,
            1394417,
            1395521,
            1396164,
            1392917,
            1395627,
            1396717,
            1394631,
            1395100,
            1394589,
            1396975,
            1397293
        ],
        "C": [
            1392257,
            1391396,
            1392030,
            1393877,
            1393945,
            1392242,
            1390459,
            1391422,
            1391954,
            1395935,
            1394755,
            1392498,
            1394730,
            1392841,
            1393241,
            1392725
        ],
        "E": [
            1390755,
            1392062,
            1391036,
            1395303,
            1394970,
            1391365,
            1391505,
            1392099,
            1390858,
            1394891,
            1391571,
            1391330,
            1391965,
            1393022,
            1397588,
            1391462,
            1390747
        ],
        "A": [
            1389902,
            1389901,
            1390096,
            1390092,
            1390420,
            1390228,
            1392273,
            1389894,
            1390237,
            1390485,
            1391136,
            1389957,
            1390738,
            1389907,
            1389972,
            1389815,
            1389969
        ]
    },
    "name": "A. Rank List",
    "statement": "Another programming contest is over. You got hold of the contest’s final\r\nresults table. The table has the following data. For each team we are\r\nshown two numbers: the number of problems and the total penalty time.\r\nHowever, for no team we are shown its final place.You know the rules of\r\ncomparing the results of two given teams very well. Let’s say that team\r\nsolved problems with total penalty time and team solved problems with\r\ntotal penalty time . Team gets a higher place than team in the end, if\r\nit either solved more problems on the contest, or solved the same number\r\nof problems but in less total time. In other words, team gets a higher\r\nplace than team in the final results’ table if either , or and . It is\r\nconsidered that the teams that solve the same number of problems with\r\nthe same penalty time share all corresponding places. More formally,\r\nlet’s say there is a group of teams that solved the same number of\r\nproblems with the same penalty time. Let’s also say that teams performed\r\nbetter than the teams from this group. In this case all teams from the\r\ngroup share places , , , . The teams that performed worse than the teams\r\nfrom this group, get their places in the results table starting from the\r\n-th place.Your task is to count what number of teams from the given list\r\nshared the -th place.\r\n",
    "solutions": [
        "#pragma comment(linker, \"/stack:64000000\")\n#include <algorithm>\n#include <iostream>\n#include <cassert>\n#include <climits>\n#include <utility>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <memory.h>\n#include <vector>\n#include <bitset>\n#include <string>\n#include <deque>\n#include <queue>\n#include <ctime>\n#include <set>\n#include <map>\n#include <deque>\n#include <stack>\n#include <cmath>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define ford(i, n) for (int i = int(n) - 1; i >= 0; i--)\n#define for1(i, n) for (int i = 1; i <= int(n); i++)\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\n#define all(a) (a).begin(), (a).end()\n#define sz(a) int((a).size())\n#define pb push_back\n#define pii pair <int, int>\n#define vi vector <int>\n#define mp make_pair\n\ntemplate <typename X> inline X abs (const X &a) {return a < 0? -a: a;}\ntemplate <typename X> inline X sqr (const X &a) {return a * a;}\n\nconst int INF = INT_MAX / 2;\nconst ll INF64 = LLONG_MAX / 2LL;\nconst ld EPS = 1E-9, PI = 3.1415926535897932384626433832795;\n\nconst int N = 50 + 13;\n\ninline bool cmp (const pii &a, const pii &b)\n{\n    if (a.first != b.first)\n        return a.first > b.first;\n\n    return a.second < b.second;\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"rt\", stdin);\n    freopen(\"output.txt\", \"wt\", stdout);\n#endif\n\n    int n, m;\n    pii a[N];\n    \n    cin >> n >> m;\n\n    forn (i, n)\n        scanf (\"%d%d\", &a[i].first, &a[i].second);\n\n    sort (a, a + n, cmp);\n    m--;\n\n    int cnt = 0;\n\n    forn (i, n)\n        if (a[i] == a[m])\n            cnt++;\n\n    cout << cnt << endl;\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "implementation",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Rank List.json",
    "editorial_link": "https://codeforces.com//blog/entry/4173",
    "editorial": "This is simple straight-forward problem you were asked to sort the teams\r\nwith the following comparator: () or ( and ). After that you can split\r\nthe teams into groups with equal results and find the group which shares\r\nthe -th place. Many coders for some reason used wrong comparator: they\r\nsorted teams with equal number of problems by descending of time. Such\r\nsubmits accidentally passed pretests but get WA 13.\r\n",
    "hint": []
}