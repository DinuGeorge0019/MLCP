{
    "link": "https://codeforces.com//contest/1100/problem/A",
    "problemId": "281739",
    "problem_idx": "A",
    "shortId": "1100A",
    "contest_number": "1100",
    "problem_submissions": {
        "D": [
            48353320,
            48357025,
            48358665,
            48352439,
            48485627,
            48356511,
            48354584,
            48367255,
            48355872,
            48356938,
            48418676,
            48367598,
            48366911,
            48360912
        ],
        "E": [
            48350143,
            48346134,
            48343035,
            48344468,
            48345510,
            48344044,
            48355215,
            48356334,
            48347647,
            48367496,
            48345429,
            48350647,
            48345628,
            48345908,
            48337155,
            48369088,
            48368217,
            48368175,
            48346637
        ],
        "F": [
            48345973,
            48351415,
            48352189,
            48350710,
            48349016,
            48346778,
            48348725,
            48353766,
            48349571,
            58874033,
            48356957,
            48346827,
            48367535,
            48349001
        ],
        "C": [
            48336896,
            48335321,
            48334130,
            48334390,
            48335310,
            48344018,
            48335734,
            48342199,
            48338272,
            48337047,
            48341951,
            48335611,
            48336047,
            48332446,
            48337175,
            48367539,
            48338679,
            48338717
        ],
        "B": [
            48334048,
            48332782,
            48332647,
            48331840,
            48351673,
            48332494,
            48337726,
            48333602,
            48340544,
            48335461,
            48333231,
            48335841,
            48335239,
            48333836,
            48331660,
            48334686,
            48373723,
            48367780,
            48340073,
            48333386
        ],
        "A": [
            48332192,
            48331699,
            48331636,
            48331355,
            48331447,
            48334124,
            48331785,
            48335827,
            48332710,
            48331483,
            48333294,
            48331582,
            48332077,
            48331359,
            48331604,
            48367585,
            48333354,
            48331926
        ]
    },
    "name": "A. Roman and Browser",
    "statement": "This morning, Roman woke up and opened the browser with n opened tabs\r\nnumbered from 1 to n. There are two kinds of tabs: those with the\r\ninformation required for the test and those with social network sites.\r\nRoman decided that there are too many tabs open so he wants to close\r\nsome of them.He decided to accomplish this by closing every k-th (2\r\nleq k\r\nleq n - 1) tab. Only then he will decide whether he wants to study for\r\nthe test or to chat on the social networks. Formally, Roman will choose\r\none tab (let its number be b) and then close all tabs with numbers c =\r\nb + i\r\ncdot k that satisfy the following condition: 1\r\nleq c\r\nleq n and i is an integer (it may be positive, negative or zero).For\r\nexample, if k = 3, n = 14 and Roman chooses b = 8, then he will close\r\ntabs with numbers 2, 5, 8, 11 and 14.After closing the tabs Roman will\r\ncalculate the amount of remaining tabs with the information for the test\r\n(let\u2019s denote it e) and the amount of remaining social network tabs (s).\r\nHelp Roman to calculate the maximal absolute value of the difference of\r\nthose values |e - s| so that it would be easy to decide what to do next.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define MAXN 100005\n#define INF 1000000000\n#define MOD 1000000007\n#define F first\n#define S second\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\nint n,k,a[MAXN];\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    int s0=0,s1=0;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(a[i]==1) s0++; else s1++;\n    }\n    int ans=0;\n    for(int i=1;i<=k;i++)\n    {\n        int cnt0=0,cnt1=0;\n        if(a[i]==1) cnt0++; else cnt1++;\n        for(int j=i+k;j<=n;j+=k) if(a[j]==1) cnt0++; else cnt1++;\n        ans=max(ans,abs(s0-cnt0-s1+cnt1));\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Roman and Browser.json",
    "editorial_link": "https://codeforces.com//blog/entry/64545",
    "editorial": "The constraints in this task allowed us to simply iterate over the\r\nclosed tab and check the answer, but we can solve it more quickly\r\ncalculate the sum for each value modulo and count the total sum for the\r\nwhole array. After that, you just need to go through the module tab\r\nnumbers that we delete, and update the answer.Complexity or .\r\n"
}