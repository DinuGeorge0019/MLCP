{"link": "https://codeforces.com//contest/486/problem/C", "problemId": "17061", "problem_idx": "C", "shortId": "486C", "contest_number": "486", "problem_submissions": {"C": [8656712, 8654869, 8655277, 8661715, 8659367, 8661623, 8671659, 8658387, 44544902, 8655041, 8655195, 8655046, 8655532, 8655723, 8654982, 8655530, 8654402, 8657095, 8655223, 8663823, 8658911], "D": [8656322, 8653249, 8657902, 8655199, 8657521, 8656772, 8655987, 8654471, 8762125, 8656998, 8658007, 8658299, 8659044, 8659007, 8659117, 8660760, 8660451, 8663779], "A": [8652840, 8649416, 8649905, 8649569, 8649694, 8650271, 8649886, 8649533, 8650061, 8649465, 8650144, 8650093, 8650370, 8649662, 8650038, 8650934, 8649593, 8649948, 8650270, 8663811, 8649707], "B": [8652668, 8652141, 8652012, 8652630, 8653907, 8652325, 8651841, 8653366, 8651435, 8652387, 8652466, 8652574, 8652046, 8653190, 8652712, 8651972, 8656481, 8651946, 8663812, 8652791], "E": [8651853, 8654712, 8659740, 8659484, 8661000, 8661038, 8654891, 8659823, 8952883, 8658117, 8661158, 8666251, 8659593, 8663820, 8660769]}, "name": "C. Palindrome Transformation", "statement": "Nam is playing with a string on his computer. The string consists of\r\nlowercase English letters. It is meaningless, so Nam decided to make the\r\nstring more beautiful, that is to make it be a palindrome by using 4\r\narrow keys: left, right, up, down.There is a cursor pointing at some\r\nsymbol of the string. Suppose that cursor is at position (, the string\r\nuses 1-based indexing) now. Left and right arrow keys are used to move\r\ncursor around the string. The string is cyclic, that means that when Nam\r\npresses left arrow key, the cursor will move to position if or to the\r\nend of the string (i. e. position ) otherwise. The same holds when he\r\npresses the right arrow key (if , the cursor appears at the beginning of\r\nthe string).When Nam presses up arrow key, the letter which the text\r\ncursor is pointing to will change to the next letter in English alphabet\r\n(assuming that alphabet is also cyclic, i. e. after \u201d follows \u201d). The\r\nsame holds when he presses the down arrow key.Initially, the text cursor\r\nis at position . Because Nam has a lot homework to do, he wants to\r\ncomplete this as fast as possible. Can you help him by calculating the\r\nminimum number of arrow keys presses to make the string to be a\r\npalindrome?\r\n", "solutions": ["#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define maxn 100010\n#define each(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)\nusing namespace std;\ntypedef long long LL;\nint n,m;\nchar str[maxn];\nint work()\n{\n    m=min(m,n-m+1);\n    int ans=0,l,r;\n    for(l=1;l<=n&&str[l]==str[n-l+1];++l);\n    if(l>n)\n        return 0;\n    for(r=n/2;str[r]==str[n-r+1];--r);\n    ans=min(abs(l-m),abs(r-m))+r-l;\n    for(int i=m;i<=n;++i)\n        if(str[i]!=str[n-i+1])\n        {\n            ans+=min(abs(str[i]-str[n-i+1]),26-abs(str[i]-str[n-i+1]));\n            str[i]=str[n-i+1];\n        }\n    return ans;\n}\nint main()\n{\n    scanf(\"%d %d %s\",&n,&m,str+1);\n    printf(\"%d\\n\",work());\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "implementation"], "dificulty": "1700", "interactive": false}