{"link": "https://codeforces.com//contest/862/problem/E", "problemId": "123161", "problem_idx": "E", "shortId": "862E", "contest_number": "862", "problem_submissions": {"F": [30522146], "E": [30515524, 30514981, 30514016, 30514863, 30521757, 30513966, 30514334, 30520725, 30516565, 30519106, 30520786, 30520302, 30519855, 30521281, 30521147, 30521254, 30521944, 30521635, 30520751], "C": [30514106, 30508600, 30509568, 30508140, 30506918, 30515950, 30507825, 30509973, 30520060, 30513375, 30510462, 30514508, 30513811, 30512130, 30512019, 30511796, 30511858, 30510871, 30512321], "D": [30510386, 30511427, 30518392, 30512215, 30515491, 30512095, 30520485, 30514131, 30513495, 30515366, 30516105, 30512969, 30517047, 30515613, 30516506, 30516739, 30517091, 30515520], "B": [30503649, 30504269, 30503848, 30503359, 30502486, 30503263, 30503865, 30504630, 30505338, 30505127, 30506532, 30504918, 30504595, 30505318, 30506615, 30505351, 30507736, 30506138, 30506809], "A": [30502233, 30502672, 30502339, 30502484, 30502166, 30502202, 30502311, 30502278, 30502286, 30502588, 30504719, 30504828, 30502367, 30502429, 30504564, 30502776, 30503501, 30505382]}, "name": "E. Mahmoud and Ehab and the function", "statement": "Dr. Evil is interested in math and functions, so he gave Mahmoud and\r\nEhab array of length and array of length . He introduced a function\r\nwhich is defined for integers , which satisfy . Suppose, . Then . More\r\nformally, . Dr. Evil wants Mahmoud and Ehab to calculate the minimum\r\nvalue of this function over all valid . They found it a bit easy, so Dr.\r\nEvil made their task harder. He will give them update queries. During\r\neach update they should add an integer to all elements in in range i.e.\r\nthey should add to and then they should calculate the minimum value of\r\nfor all valid .Please help Mahmoud and Ehab.\r\n", "solutions": ["#include <cstdio>\n#include <algorithm>\n#include <set>\nint N, M, Q, a[100001], b[100001];\nlong long sb[2][100001], SA, SB[100001];\nstd::set < long long > S;\nlong long Ans()\n{\n\tauto it = S.lower_bound(SA);\n\tif (it == S.end())\n\t\treturn SA - *--it;\n\tlong long __ = *it - SA;\n\treturn std::min(__, (it == S.begin() ? 1LL << 60 : SA - *--it));\n}\nint main()\n{\n\tscanf(\"%d%d%d\", &N, &M, &Q);\n\tfor (int i = 1; i <= N; i++)\n\t{\n\t\tscanf(\"%d\", a + i);\n\t\tif (i & 1)\n\t\t\tSA += a[i];\n\t\telse\n\t\t\tSA -= a[i];\n\t}\n\tfor (int i = 1; i <= M; i++)\n\t{\n\t\tscanf(\"%d\", b + i);\n\t\tsb[0][i] = sb[0][i - 1];\n\t\tsb[1][i] = sb[1][i - 1];\n\t\tsb[i & 1][i] += b[i];\n\t}\n\tfor (int i = 0; i <= M - N; i++)\n\t{\n\t\tSB[i] = sb[0][i + N] - sb[0][i] - sb[1][i + N] + sb[1][i];\n\t\tif (!(i & 1))\n\t\t\tSB[i] = -SB[i];\n\t\tS.insert(SB[i]);\n\t}\n\tprintf(\"%lld\\n\", Ans());\n\twhile (Q--)\n\t{\n\t\tint l, r, w;\n\t\tscanf(\"%d%d%d\", &l, &r, &w);\n\t\tif ((l + r) % 2 == 0)\n\t\t{\n\t\t\tif (l & 1)\n\t\t\t\tSA += w;\n\t\t\telse\n\t\t\t\tSA -= w;\n\t\t}\n\t\tprintf(\"%lld\\n\", Ans());\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "sortings"], "dificulty": "2100", "interactive": false}