{"link": "https://codeforces.com//contest/551/problem/B", "problemId": "29253", "problem_idx": "B", "shortId": "551B", "contest_number": "551", "problem_submissions": {"E": [11555073, 11556189, 11556267, 12093920, 12093908, 12093899, 12093877, 11569219, 12075099, 11560541, 11974261], "C": [11550228, 11551507, 11551274, 11549626, 11554425, 11552178, 11551280, 11551429, 11550037, 11552051, 11552542, 11553869, 11554092, 11551179, 11554624, 11555215, 11554114, 11556563], "B": [11547200, 11548697, 11548210, 11548298, 11557853, 11549187, 11548320, 11548758, 11553975, 11549363, 11548545, 11548081, 11548144, 11549688, 11551583, 11555068, 11550330, 11549557, 11552446, 11549314], "A": [11546166, 11546483, 11546960, 11546195, 11546251, 11547284, 11546221, 11546416, 11546211, 11546383, 11546301, 11546208, 11546276, 11546409, 11547548, 11546344, 11547064, 11546598, 11546207, 11546571], "D": [11557988, 11557349, 11552518, 11560739, 11558020, 11557476, 11555146, 11555685, 11602898, 11557308, 11561475]}, "name": "B. ZgukistringZ", "statement": "Professor GukiZ doesn\u2019t accept string as they are. He likes to swap some\r\nletters in string to obtain a new one.GukiZ has strings , , and . He\r\nwants to obtain string by swapping some letters in , so that should\r\ncontain as many non-overlapping substrings equal either to or as\r\npossible. Substring of string is a string formed by consecutive segment\r\nof characters from . Two substrings of string overlap if there is\r\nposition in string occupied by both of them.GukiZ was disappointed\r\nbecause none of his students managed to solve the problem. Can you help\r\nthem and find one of possible strings ?\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n\n#define pb push_back\n#define mp make_pair\n#define LL long long\n#define LD long double\n#define maxlongint 2147483647\n\nusing namespace std;\n\nconst int inf = 999999999;\nconst int mod = 1000000007;\n\ninline int Getint()\n{\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\tint ret = 0;\n\twhile (ch >= '0' && ch <= '9') ret = ret * 10 + ch - '0', ch = getchar();\n\treturn ret;\n}\n\nchar c0[100010], c1[100010], c2[100010];\nint a[30], b[30], c[30];\n\nint main()\n{\n\tscanf(\"%s\", c0 + 1);\n\tscanf(\"%s\", c1 + 1);\n\tscanf(\"%s\", c2 + 1);\n\tint len0 = strlen(c0 + 1), len1 = strlen(c1 + 1), len2 = strlen(c2 + 1);\n\tfor (int i = 1; i <= len0; i++) a[c0[i] - 96]++;\n\tfor (int i = 1; i <= len1; i++) b[c1[i] - 96]++;\n\tfor (int i = 1; i <= len2; i++) c[c2[i] - 96]++;\n\tint p = 0, q = 0;\n\tfor (int i = 0; ; i++)\n\t{\n\t\tint ls = inf;\n\t\tbool flag = true;\n\t\tfor (int j = 1; j <= 26; j++)\n\t\t{\n\t\t\tif (a[j] - b[j] * i < 0) {flag = false; break;}\n\t\t\tif (c[j]) ls = min(ls, (a[j] - b[j] * i) / c[j]);\n\t\t}\n\t\tif (!flag) break;\n\t\tif (i + ls > p + q) p = i, q = ls;\n\t}\n\tfor (int i = 1; i <= p; i++) for (int j = 1; j <= len1; j++) printf(\"%c\", c1[j]);\n\tfor (int i = 1; i <= q; i++) for (int j = 1; j <= len2; j++) printf(\"%c\", c2[j]);\n\tfor (int i = 1; i <= 26; i++) for (int j = 1; j <= a[i] - b[i] * p - c[i] * q; j++) printf(\"%c\", i + 96);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "dificulty": "1800", "interactive": false}