{"link": "https://codeforces.com//contest/194/problem/D", "problemId": "1412", "problem_idx": "D", "shortId": "194D", "contest_number": "194", "problem_submissions": {"B": [1764935, 1755068, 1937285, 1754608, 1754131, 1755380, 1755240, 1754857, 1755369, 1755173, 1755703, 1755481, 1755578, 1755103, 1755650, 1756121, 1755226, 1755274, 1755017], "A": [1764930, 1754050, 1937280, 1937278, 1753889, 1753888, 1754404, 1754253, 1753991, 1754353, 1753971, 1753959, 1753901, 1754292, 1754000, 1754355, 1754106, 1754010, 1754049, 1753941], "E": [1760518, 1763067, 1760520], "D": [1758849, 1757587, 1845330, 1759194, 1759982, 1763977, 1760187, 1760559, 1765401, 1768899, 1759233], "C": [1756942, 1756172, 1756826, 1757346, 1758198, 1758195, 1758670, 3530327, 1758792, 1757336, 1757355, 1757313, 1758027, 1757904, 1757515, 1756672]}, "name": "D. Xor", "statement": "John Doe has four arrays: , , , and . Each array consists of integers.\r\nElements of all arrays are indexed starting from . Array is a\r\npermutation of integers to .John invented a game for his friends and\r\nhimself. Initially a player is given array . The player must\r\nconsecutively execute exactly operations on . You are permitted to\r\nexecute the following operations: Operation 1: For each change into .\r\nExpression means applying the operation of a bitwise xor to numbers and\r\n. The given operation exists in all modern programming languages, for\r\nexample, in language and it is marked as \"^\", in as \"xor\". Operation 2:\r\nFor each change into . When this operation is executed, all changes are\r\nmade at the same time. After all operations are applied, the number of\r\npoints the player gets is determined by the formula . John wants to find\r\nout what maximum number of points a player can win in his game. Help\r\nhim.\r\n", "solutions": ["#include<algorithm>\n#include<cstdio>\n#include<iostream>\n#include<string>\n#include<vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX_N = 30;\nconst int MAX_U = 30;\n\nint N, U, R;\nll a[MAX_U + 1][MAX_N];\nint b[MAX_N];\nint k[MAX_N];\nint p[MAX_N];\n\ninline ll Test(int u) {\n  ll r = 0;\n  for(int n = 0; n < N; ++n)\n    r += a[u][n] * k[n];\n  return r;\n}\n\nll Go(int u, bool last_xor) {\n  ll maxi = -1e18;\n  if((U - u) % 2 == 0)\n    maxi = Test(u);\n  if(u == U)\n    return maxi;\n  if(!last_xor)\n    {\n      for(int n = 0; n < N; ++n)\n        a[u+1][n] = a[u][n] ^ b[n];\n      maxi = max(maxi, Go(u + 1, true));\n    }\n  for(int n = 0; n < N; ++n)\n    a[u+1][n] = a[u][p[n] - 1] + R;\n  maxi = max(maxi, Go(u + 1, false));\n  return maxi;\n}\n\nint main() {\n  cin >> N >> U >> R;\n  for(int n = 0; n < N; ++n)\n    cin >> a[0][n];\n  for(int n = 0; n < N; ++n)\n    cin >> b[n];\n  for(int n = 0; n < N; ++n)\n    cin >> k[n];\n  for(int n = 0; n < N; ++n)\n    cin >> p[n];\n\n  cout << Go(0, false) << endl;\n}\n"], "input": "", "output": "", "tags": [], "dificulty": "2000", "interactive": false}