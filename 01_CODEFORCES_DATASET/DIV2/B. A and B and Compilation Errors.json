{
    "link": "https://codeforces.com//contest/519/problem/B",
    "problemId": "23224",
    "problem_idx": "B",
    "shortId": "519B",
    "contest_number": "519",
    "problem_submissions": {
        "E": [
            10073402,
            10073826,
            10071435,
            10075682,
            10073508,
            10076499,
            10076691,
            10077686,
            10078395,
            10078558,
            10077889,
            10071597,
            10078230,
            10079725,
            10079205,
            10080058,
            10080571,
            10081897,
            10077792,
            10077601
        ],
        "B": [
            10068822,
            10066495,
            10066094,
            10071522,
            10065688,
            10067197,
            10068098,
            10065513,
            10067032,
            10066771,
            10065927,
            10073256,
            10064342,
            10066337,
            10068191,
            10068245,
            10065978,
            10064399,
            10070061,
            10067255
        ],
        "A": [
            10067760,
            10065092,
            10070229,
            10067607,
            10065441,
            10066194,
            10064523,
            10065142,
            10067859,
            10064294,
            10074313,
            10075152,
            10065080,
            10075511,
            10064659,
            10064877,
            10064769,
            10067836,
            10065055
        ],
        "D": [
            10065946,
            10069869,
            10068018,
            10068104,
            10075209,
            10071298,
            10070153,
            10071171,
            10068423,
            10070885,
            10071374,
            10076292,
            10070706,
            10072961,
            10071572,
            10075243,
            10072547,
            10071425,
            10078247,
            10079828
        ],
        "C": [
            10064224,
            10067438,
            10064240,
            10065614,
            10064567,
            10068407,
            10064386,
            10066890,
            10064235,
            10064221,
            10067480,
            10072542,
            10066908,
            10064218,
            10069397,
            10066796,
            10066694,
            10065658,
            10065115,
            10068337
        ]
    },
    "name": "B. A and B and Compilation Errors",
    "statement": "B loves to debug his code. But before he runs the solution and starts\r\ndebugging, he has to first compile the code.Initially, the compiler\r\ndisplayed compilation errors, each of them is represented as a positive\r\ninteger. After some effort, B managed to fix some mistake and then\r\nanother one mistake.However, despite the fact that B is sure that he\r\ncorrected the two errors, he can not understand exactly what compilation\r\nerrors disappeared the compiler of the language which B uses shows\r\nerrors in the new order every time! B is sure that unlike many other\r\nprogramming languages, compilation errors for his programming language\r\ndo not depend on each other, that is, if you correct one error, the set\r\nof other error does not change.Can you help B find out exactly what two\r\nerrors he corrected?\r\n",
    "solutions": [
        "#include<iostream>\n#include<fstream>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<cstring>\n#include<queue>\n#include<map>\n#include<set>\n#include<algorithm>\n#include<iomanip>\n#include<bitset>\nusing namespace std;\n\nconst int N = 100100;\n\nint n, a[3][N];\nset<int> s;\n\nint main() {\n    int i, j;\n    //freopen(\"ttt\", \"r\", stdin);\n\n    cin >> n;\n\n    for(i = 0; i < 3; ++i) {\n        for(j = 1; j <= n - i; ++j)\n            scanf(\"%d\", &a[i][j]);\n        sort(a[i] + 1, a[i] + n - i + 1);\n    }\n\n    for(i = 1; i <= n; ++i)\n    if(a[0][i] != a[1][i]) {\n        cout << a[0][i] << \"\\n\";\n        break;\n    }\n\n    for(i = 1; i < n; ++i)\n    if(a[1][i] != a[2][i]) {\n        cout << a[1][i] << \"\\n\";\n        break;\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. A and B and Compilation Errors.json",
    "editorial_link": "https://codeforces.com/blog/entry/16687",
    "editorial": "In this problem you were given three arrays. Second array is the same as the first array without one element, third array is the same as second array without first element. You were asked to find deleted elements.\n\nSolution: I'll describe easiest solution for this problem: Let's denote a as sum of all elements of first array, b as sum of all elements of second array and c as sum of all elements of third array. Then answer is a?-?b and b?-?c\n\nThere are also some other solutions for this problem which use map, xor, etc."
}