{"link": "https://codeforces.com//contest/854/problem/D", "problemId": "121096", "problem_idx": "D", "shortId": "854D", "contest_number": "854", "problem_submissions": {"E": [30148890, 30158025, 30153207, 30152099, 30153347, 30153605, 30153960, 30156519, 30155338, 30152255, 30155374, 30156465, 30154492, 30155027, 30148559, 30154341, 30150107, 30159302, 30147585, 30149154], "D": [30145685, 30142579, 30146315, 30147771, 30145357, 30143469, 30147555, 30149225, 30160358, 30148581, 30148332, 30147340, 30151054, 30154650, 30153132, 30141029, 30169028, 30157758, 30157493, 30145363, 30157424, 30143188], "C": [30138936, 30136736, 30141613, 30138597, 30141883, 30137426, 30140011, 30142683, 30144635, 30142411, 30142409, 30142369, 30142517, 30150426, 30151674, 30137870, 30138345, 30140659, 30136856, 30172754, 30148019], "B": [30137227, 30133256, 30139063, 30133886, 30139922, 30134279, 30135422, 30135809, 30140613, 30136252, 30139573, 30137665, 30140693, 30154807, 30155358, 30135403, 30136178, 30140207, 30133289, 30134600], "A": [30136803, 30131896, 30136932, 30132115, 30139440, 30132166, 30132064, 30131930, 30132413, 30132484, 30133433, 30131987, 30139438, 30153559, 30131806, 30133316, 30132007, 30137844, 30131966, 30135700]}, "name": "D. Jury Meeting", "statement": "Country of Metropolia is holding Olympiad of Metrpolises soon. It mean\r\nthat all jury members of the olympiad should meet together in Metropolis\r\n(the capital of the country) for the problem preparation process.There\r\nare cities consecutively numbered from to . City is Metropolis that is\r\nthe meeting point for all jury members. For each city from to there is\r\nexactly one jury member living there. Olympiad preparation is a long and\r\ndemanding process that requires days of work. For all of these days each\r\nof the jury members should be present in Metropolis to be able to work\r\non problems.You know the flight schedule in the country (jury members\r\nconsider themselves important enough to only use flights for\r\ntransportation). All flights in Metropolia are either going to\r\nMetropolis or out of Metropolis. There are no night flights in\r\nMetropolia, or in the other words, plane always takes off at the same\r\nday it arrives. On his arrival day and departure day jury member is not\r\nable to discuss the olympiad. All flights in Megapolia depart and arrive\r\nat the same day.Gather everybody for days in the capital is a hard\r\nobjective, doing that while spending the minimum possible money is even\r\nharder. Nevertheless, your task is to arrange the cheapest way to bring\r\nall of the jury members to Metrpolis, so that they can work together for\r\ndays and then send them back to their home cities. Cost of the\r\narrangement is defined as a total cost of tickets for all used flights.\r\nIt is allowed for jury member to stay in Metropolis for more than days.\r\n", "solutions": ["#include<bits/stdc++.h>\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double lf;\ntypedef long double llf;\ntypedef std::pair<int,int> pii;\n\n#define xx first\n#define yy second\n\ntemplate<typename T> inline T max(T a,T b){return a>b?a:b;}\ntemplate<typename T> inline T min(T a,T b){return a<b?a:b;}\ntemplate<typename T> inline T abs(T a){return a>0?a:-a;}\ntemplate<typename T> inline bool repr(T &a,T b){return a<b?a=b,1:0;}\ntemplate<typename T> inline bool repl(T &a,T b){return a>b?a=b,1:0;}\ntemplate<typename T> inline T gcd(T a,T b){T t;if(a<b){while(a){t=a;a=b%a;b=t;}return b;}else{while(b){t=b;b=a%b;a=t;}return a;}}\ntemplate<typename T> inline T sqr(T x){return x*x;}\n#define mp(a,b) std::make_pair(a,b)\n#define pb push_back\n#define I inline\n#define mset(a,b) memset(a,b,sizeof(a))\n#define mcpy(a,b) memcpy(a,b,sizeof(a))\n\n#define fo0(i,n) for(int i=0,i##end=n;i<i##end;i++)\n#define fo1(i,n) for(int i=1,i##end=n;i<=i##end;i++)\n#define fo(i,a,b) for(int i=a,i##end=b;i<=i##end;i++)\n#define fd0(i,n) for(int i=(n)-1;~i;i--)\n#define fd1(i,n) for(int i=n;i;i--)\n#define fd(i,a,b) for(int i=a,i##end=b;i>=i##end;i--)\n#define foe(i,x)for(__typeof(x.end())i=x.begin();i!=x.end();++i)\n\nstruct Cg{I char operator()(){return getchar();}};\nstruct Cp{I void operator()(char x){putchar(x);}};\n#define OP operator\n#define RT return *this;\n#define RX x=0;char t=P();while((t<'0'||t>'9')&&t!='-')t=P();bool f=0;\\\nif(t=='-')t=P(),f=1;x=t-'0';for(t=P();t>='0'&&t<='9';t=P())x=x*10+t-'0'\n#define RL if(t=='.'){lf u=0.1;for(t=P();t>='0'&&t<='9';t=P(),u*=0.1)x+=u*(t-'0');}if(f)x=-x\n#define RU x=0;char t=P();while(t<'0'||t>'9')t=P();x=t-'0';for(t=P();t>='0'&&t<='9';t=P())x=x*10+t-'0'\n#define TR *this,x;return x;\nI bool IS(char x){return x==10||x==13||x==' ';}template<typename T>struct Fr{T P;I Fr&OP,(int &x)\n{RX;if(f)x=-x;RT}I OP int(){int x;TR}I Fr&OP,(ll &x){RX;if(f)x=-x;RT}I OP ll(){ll x;TR}I Fr&OP,(char &x)\n{for(x=P();IS(x);x=P());RT}I OP char(){char x;TR}I Fr&OP,(char *x){char t=P();for(;IS(t);t=P());if(~t){for(;!IS\n(t)&&~t;t=P())*x++=t;}*x++=0;RT}I Fr&OP,(lf &x){RX;RL;RT}I OP lf(){lf x;TR}I Fr&OP,(llf &x){RX;RL;RT}I OP llf()\n{llf x;TR}I Fr&OP,(uint &x){RU;RT}I OP uint(){uint x;TR}I Fr&OP,(ull &x){RU;RT}I OP ull(){ull x;TR}};Fr<Cg>in;\n#define WI(S) if(x){if(x<0)P('-'),x=-x;char s[S],c=0;while(x)s[c++]=x%10+'0',x/=10;while(c--)P(s[c]);}else P('0')\n#define WL if(y){lf t=0.5;for(int i=y;i--;)t*=0.1;if(x>=0)x+=t;else x-=t,P('-');*this,(ll)(abs(x));P('.');if(x<0)\\\nx=-x;while(y--){x*=10;x-=floor(x*0.1)*10;P(((int)x)%10+'0');}}else if(x>=0)*this,(ll)(x+0.5);else *this,(ll)(x-0.5);\n#define WU(S) if(x){char s[S],c=0;while(x)s[c++]=x%10+'0',x/=10;while(c--)P(s[c]);}else P('0')\ntemplate<typename T>struct Fw{T P;I Fw&OP,(int x){WI(10);RT}I Fw&OP()(int x){WI(10);RT}I Fw&OP,(uint x){WU(10);RT}\nI Fw&OP()(uint x){WU(10);RT}I Fw&OP,(ll x){WI(19);RT}I Fw&OP()(ll x){WI(19);RT}I Fw&OP,(ull x){WU(20);RT}I Fw&OP()\n(ull x){WU(20);RT}I Fw&OP,(char x){P(x);RT}I Fw&OP()(char x){P(x);RT}I Fw&OP,(const char *x){while(*x)P(*x++);RT}\nI Fw&OP()(const char *x){while(*x)P(*x++);RT}I Fw&OP()(lf x,int y){WL;RT}I Fw&OP()(llf x,int y){WL;RT}};Fw<Cp>out;\n\nconst int N=100007,inf=1e9;\nconst ll lnf=1e18;\n\nstruct data\n{\n\tint d,p,v,o;\n\tinline bool operator<(const data&v)const\n\t{\n\t\treturn d<v.d;\n\t}\n}t[N];\n\nint n,m,K,f[N];\nll l[N],r[N];\n\nint main()\n{\n\tin,n,m,K;\n\tfo0(i,m)\n\t{\n\t\tint d,x,y,v;\n\t\tin,d,x,y,v;\n\t\tif(y==0)t[i]=(data){d,x,v,1};\n\t\telse t[i]=(data){d,y,v,2};\n\t}\n\tstd::sort(t,t+m);\n\tfo1(i,n)f[i]=inf;\n\tll tmp=(ll)inf*n;\n\tint rem=n;\n\tfo0(i,m)\n\t{\n\t\tif(t[i].o==1)\n\t\t{\n\t\t\tif(f[t[i].p]==inf)rem--;\n\t\t\tif(f[t[i].p]>t[i].v)\n\t\t\t{\n\t\t\t\ttmp-=f[t[i].p]-t[i].v;\n\t\t\t\tf[t[i].p]=t[i].v;\n\t\t\t}\n\t\t}\n\t\tif(rem)l[i]=lnf;\n\t\telse l[i]=tmp;\n\t}\n\tfo1(i,n)f[i]=inf;\n\ttmp=(ll)inf*n;\n\trem=n;\n\tfd0(i,m)\n\t{\n\t\tif(t[i].o==2)\n\t\t{\n\t\t\tif(f[t[i].p]==inf)rem--;\n\t\t\tif(f[t[i].p]>t[i].v)\n\t\t\t{\n\t\t\t\ttmp-=f[t[i].p]-t[i].v;\n\t\t\t\tf[t[i].p]=t[i].v;\n\t\t\t}\n\t\t}\n\t\tif(rem)r[i]=lnf;\n\t\telse r[i]=tmp;\n\t}\n\tll ans=lnf;\n\tfor(int i=0,j=0;i<m;i++)\n\t{\n\t\tfor(;j<m&&t[j+1].d+K<t[i].d;j++);\n\t\tif(t[j].d+K<t[i].d)repl(ans,l[j]+r[i]);\n\t}\n\tif(ans==lnf)ans=-1;\n\tout,ans,'\\n';\n}"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1800", "interactive": false}