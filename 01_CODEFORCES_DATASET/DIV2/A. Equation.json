{
    "link": "https://codeforces.com//contest/1269/problem/A",
    "problemId": "499887",
    "problem_idx": "A",
    "shortId": "1269A",
    "contest_number": "1269",
    "problem_submissions": {
        "C": [
            67352706,
            67342506,
            67340660,
            67342809,
            67344956,
            67331477,
            67339107,
            67340486,
            67338149,
            67340091,
            67338156,
            67347782,
            67341549,
            67341600,
            67342294,
            67342344,
            67342829,
            67330241
        ],
        "E": [
            67349858,
            67364589,
            67368127,
            67360428,
            67362487,
            67407644,
            67361816,
            68037838
        ],
        "D": [
            67339478,
            67353948,
            67348917,
            67364550,
            67364311,
            67334215,
            67340431,
            67341741,
            67338198,
            67342873,
            67348426,
            67348708,
            67343994,
            67344243,
            67344039,
            67350135,
            67345192,
            67346296,
            67343602
        ],
        "B": [
            67337312,
            67377870,
            67335347,
            67345749,
            67336939,
            67340567,
            67339027,
            67334414,
            67335423,
            67344354,
            67335379,
            67396814,
            67341834,
            67332604,
            67337610,
            67338071,
            67337253,
            67332987,
            67335282,
            67336511,
            67345383
        ],
        "A": [
            67331771,
            67329729,
            67330308,
            67335502,
            67337021,
            67336156,
            67329958,
            67329769,
            67338898,
            67330168,
            67396807,
            67337525,
            67329686,
            67329755,
            67331194,
            67331352,
            67329912,
            67329806,
            67330184,
            67340611
        ]
    },
    "name": "A. Equation",
    "statement": "Letâ€™s call a positive integer if it has at least one divisor other than\r\n1 and itself. For example: the following numbers are composite: 1024, 4,\r\n6, 9; the following numbers are not composite: 13, 1, 2, 3, 37. You are\r\ngiven a positive integer n. Find two composite integers a,b such that\r\na-b=n.It can be proven that solution always exists.\r\n",
    "solutions": [
        "//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx2\")\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\n#define pb push_back\n#define F first\n#define S second\n#define ll long long\n#define ull unsigned long long\n#define ld long double\n#define mp make_pair\n//#define sqr(x) (x) * (x)\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nbool f(int x)\n{\n    bool s = false;\n    for(int i = 2; i * i <= x && !s; ++i)\n    {\n        if (x % i == 0) s = true;\n    }\n    return s;\n}\n\nint main()\n{\n#ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif // LOCAL\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    int n;\n    cin >> n;\n    int i = 2;\n    while(true)\n    {\n        while(!f(i)) ++i;\n        if (f(i + n))\n        {\n            cout << i + n << ' ' << i;\n            return 0;\n        }\n        ++i;\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Equation.json",
    "editorial_link": "https://codeforces.com//blog/entry/72358",
    "editorial": "Print 9n\n and 8n\n.",
    "hint": []
}