{
    "link": "https://codeforces.com//contest/272/problem/A",
    "problemId": "2622",
    "problem_idx": "A",
    "shortId": "272A",
    "contest_number": "272",
    "problem_submissions": {
        "E": [
            3118319,
            3118237,
            3120547,
            3121598,
            3118047,
            21764880,
            3234980
        ],
        "D": [
            3116079,
            3119680,
            3119390,
            3118061,
            3123255,
            3116398,
            3118778,
            3119626,
            3118105,
            3119321,
            3118815,
            3120080,
            3120415,
            3120111,
            3119541
        ],
        "C": [
            3113880,
            3114625,
            3115575,
            3120690,
            3121462,
            3114256,
            3115381,
            3116832,
            3115695,
            3116067,
            3115638,
            3116593,
            3113387,
            3116789,
            3116062
        ],
        "B": [
            3112843,
            3112738,
            3113998,
            3114242,
            3113384,
            3112383,
            3113900,
            3114125,
            3113347,
            3113096,
            3113583,
            3113472,
            3112484,
            3113317,
            3114065
        ],
        "A": [
            3112197,
            3112187,
            3112490,
            3114499,
            3112321,
            3112173,
            3112427,
            3112555,
            3113875,
            3112252,
            3112599,
            3112277,
            3112185,
            3114082,
            3112780
        ]
    },
    "name": "A. Dima and Friends",
    "statement": "Dima and his friends have been playing hide and seek at Dima\u2019s place all\r\nnight. As a result, Dima\u2019s place got messy. In the morning they decided\r\nthat they need to clean the place.To decide who exactly would clean the\r\napartment, the friends want to play a counting-out game. First, all the\r\nguys stand in a circle, and then each of them shows some number of\r\nfingers on one hand (one to five), and then the boys count in a circle,\r\nstarting from Dima, the number of people, respective to the total number\r\nof fingers shown. The person on who the countdown stops will clean the\r\napartment.For example, if Dima and one of his friends played hide and\r\nseek, and fingers were shown during the counting-out, then Dima would\r\nclean the place. If there were or say, fingers shown, then his friend\r\nwould clean the place.Dima knows how many fingers each of his friends\r\nwill show during the counting-out. Now he is interested in the number of\r\nways to show some number of fingers on one hand (one to five), so that\r\nhe did not have to clean the place. Help Dima.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<algorithm>\n#include<cassert>\n#include<ctime>\nusing namespace std;\n\n#define rep(i,n) for(int i = 0; i < (int)n; i++)\n#define FOR(i,n,m) for(int i = (int)n; i <= (int)m; i++)\n#define FOD(i,n,m) for(int i = (int)n; i >= (int)m; i--)\n\ntypedef long long i64;\ntypedef pair<int, int> PI;\n\n#define sz(v) ((i64)(v).size())\n#define all(v) (v).begin(),(v).end()\n#define bit(n) (1LL<<(i64)(n))\n#define each(i,v) for(__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)\n\n#define PB push_back\n#define MP make_pair\n#define X first\n#define Y second\n\ntemplate<class T> void fmax(T &a, T b) { if (a < b) a = b; }\ntemplate<class T> void fmin(T &a, T b) { if (a > b) a = b; }\n\nint main() {\n\tint s = 0, n, x, ans = 0;\n\tcin >> n;\n\trep(i,n) cin >> x, s += x;\n\tFOR(i,1,5) ans += (i + s) % (n + 1) != 1;\n\tcout << ans << endl;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Dima and Friends.json",
    "editorial_link": "https://codeforces.com//blog/entry/6625",
    "editorial": "We will bruteforce number of fingers that will be show Dima, then if\r\ntotal sum of fingers = 1 modulo (n+1), Dima will clean the room. So we\r\nshould increase answer if the remaining part after division by (n+1) is\r\nnot 1.\r\n"
}