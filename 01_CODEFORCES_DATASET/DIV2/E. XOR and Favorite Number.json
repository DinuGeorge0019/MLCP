{
    "link": "https://codeforces.com//contest/617/problem/E",
    "problemId": "46107",
    "problem_idx": "E",
    "shortId": "617E",
    "contest_number": "617",
    "problem_submissions": {
        "B": [
            15525292,
            15520241,
            15520782,
            15519093,
            15520541,
            15518993,
            15520816,
            15520328,
            15522323,
            15519740,
            15519199,
            15519236,
            15522269,
            15520061,
            15520921,
            15520553,
            15521134
        ],
        "E": [
            15524504,
            15533637,
            15536969,
            15529659,
            15535325,
            15529489,
            15527806,
            15532273,
            19715009,
            15542654,
            15534610,
            15534856,
            53538378,
            15532458
        ],
        "D": [
            15522122,
            15524102,
            15527458,
            15532675,
            15531424,
            15537486,
            15523234,
            15528078,
            15529838,
            15539257,
            15526873,
            15536074,
            15530391,
            15531537,
            15525866,
            15527771,
            15525195,
            15535593
        ],
        "A": [
            15518850,
            15516543,
            15516542,
            15517397,
            15516883,
            15518022,
            15517052,
            15517168,
            15516689,
            15517881,
            15517750,
            15516596,
            15516595,
            15516666,
            15516591,
            15517486,
            15517447,
            15518711
        ],
        "C": [
            15527346,
            15535776,
            15522904,
            15520819,
            15525590,
            15541637,
            15525965,
            15525876,
            15534504,
            15523565,
            15522950,
            15532930,
            15526671,
            15524426,
            15522962,
            15532766
        ]
    },
    "name": "E. XOR and Favorite Number",
    "statement": "Bob has a favorite number and of length . Now he asks you to answer\r\nqueries. Each query is given by a pair and and asks you to count the\r\nnumber of pairs of integers and , such that and the xor of the numbers\r\nis equal to .\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<memory.h>\n#include<map>\n#include<set>\n#include<queue>\n#include<list>\n#include<sstream>\n#include<cstring>\n#define mp make_pair\n#define pb push_back      \n#define F first\n#define S second\n#define SS stringstream\n#define sqr(x) ((x)*(x))\n#define m0(x) memset(x,0,sizeof(x))\n#define m1(x) memset(x,63,sizeof(x))\n#define CC(x) cout << (x) << endl\n#define pw(x) (1ll<<(x))\n#define buli(x) __builtin_popcountll(x)\n#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)\n#define M 2222222\n#define N 222222\n#define C 333\n\n#define TASK \"1\"\n\nusing namespace std;\ntypedef pair<int,int> pt;\n\npair<pt, int> q[N];\nlong long ans[N];\nint a[N], b[N];\nint cnt[M];\n\nbool cmp(pair<pt, int> a, pair<pt, int> b) {\n    if (a.F.F / C != b.F.F / C) return a.F.F / C < b.F.F / C;\n    return a.F.S < b.F.S;\n}\n\nint main(){\n//  freopen(TASK\".in\",\"r\",stdin);   \n//  freopen(TASK\".out\",\"w\",stdout);\n    int n, m, k;\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i = 0; i < n; i++) scanf(\"%d\", a + i);\n    b[0] = 0;\n    for (int i = 1; i <= n; i++) b[i] = b[i - 1] ^ a[i - 1];\n    for (int i = 0; i < m; i++) {\n        scanf(\"%d%d\", &q[i].F.F, &q[i].F.S);\n        --q[i].F.F;\n        q[i].S = i;\n    }\n    sort(q, q + m, cmp);\n    int l = 0;\n    int r = -1;\n    long long cur = 0;\n    for (int i = 0; i < m; i++) {\n        while (r < q[i].F.S) {\n            cur += cnt[b[++r] ^ k];\n            cnt[b[r]]++;\n        }\n        while (l > q[i].F.F) {\n            cur += cnt[b[--l] ^ k];\n            cnt[b[l]]++;\n        }\n        while (r > q[i].F.S) {\n            cnt[b[r]]--;\n            cur -= cnt[b[r--] ^ k];\n        }\n        while (l < q[i].F.F) {\n            cnt[b[l]]--;\n            cur -= cnt[b[l++] ^ k];\n        }\n        ans[q[i].S] = cur;\n    }\n    for (int i = 0; i < m; i++) printf(\"%lld\\n\", ans[i]);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. XOR and Favorite Number.json",
    "editorial_link": "https://codeforces.com//blog/entry/22971",
    "editorial": "We have array . Let\u00e2\u0080\u0099s calculate array (, ). Xor of subarray equals to .\r\nSo query (l, r) is counting number of pairs , () . Let we know answer\r\nfor query (l, r) and know for all count of in . We can update in O(1)\r\nanswer and if we move left or right border of query on 1. So we can\r\nsolve problem offline in with sqrt-decomposion (Mo\u00e2\u0080\u0099s algorithm).\r\nSolution 15550846\r\n"
}