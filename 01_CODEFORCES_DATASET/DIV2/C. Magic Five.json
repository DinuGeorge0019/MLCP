{"link": "https://codeforces.com//contest/327/problem/C", "problemId": "3285", "problem_idx": "C", "shortId": "327C", "contest_number": "327", "problem_submissions": {"E": [4017313, 4017507, 4018772, 4017910, 4019268, 4023331, 4015900, 4017838, 4016759, 4027441, 4022024, 4019276], "C": [4014970, 4014797, 4014725, 4014945, 4015808, 4013334, 4014670, 4013527, 4014594, 4014368, 4014192, 4014033, 4014334, 4014505, 4015890, 4015156, 4015704], "D": [4014693, 4016265, 4015556, 4017918, 4018611, 4017193, 4015911, 4016489, 4016642, 4016033, 4016317, 4016734, 4016607, 4017683, 4017510], "A": [4012718, 4011428, 4014213, 4012212, 4011845, 4011264, 4011546, 4011299, 4011577, 4011527, 4011323, 4011508, 4011858, 4011904, 4011582, 4012111, 4011772], "B": [4011621, 4012593, 4012805, 4012674, 4012463, 4011873, 4012480, 4011682, 4012186, 4012474, 4011938, 4011986, 4012535, 4012626, 4012279, 4012988, 4012431]}, "name": "C. Magic Five", "statement": "There is a long plate containing digits. Iahub wants to delete some\r\ndigits (possibly none, but he is not allowed to delete all the digits)\r\nto form his \"magic number\" on the plate, a number that is divisible by .\r\nNote that, the resulting number may contain leading zeros.Now Iahub\r\nwants to count the number of ways he can obtain magic number, modulo ().\r\nTwo ways are different, if the set of deleted positions in differs.Look\r\nat the input part of the statement, is given in a special form.\r\n", "solutions": ["#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<time.h>\n#include<math.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=100005;\ntypedef long long ll;//int ll;\nconst ll P=1000000007;\nnamespace Matrix{\n\ttemplate<size_t Size>\n\tstruct matrix{\n\t\tll key[Size][Size];\n\t\tvoid clear(){memset(key,0,sizeof(key));}\n\t\tvoid print()const{\n\t\t\tfor (int i=0;i<Size;++i)\n\t\t\t\tfor (int j=0;j<Size;++j)\n\t\t\t\t\tprintf(\"%d%c\",(int)key[i][j],j+1==Size?'\\n':' ');\n\t\t}\n\t\tll det(){\n\t\t\tif (P==1)return 0;\n\t\t\tfor (int i=0;i<Size;++i)\n\t\t\t\tfor (int j=0;j<Size;++j)key[i][j]%=P;\n\t\t\tll ans=1;\n\t\t\tfor (int i=0;i<Size;++i){\n\t\t\t\tfor (int j=i+1;j<Size;++j)while (key[j][i]){\n\t\t\t\t\tll t=key[i][i]/key[j][i];\n\t\t\t\t\tfor (int k=i;k<Size;++k)\n\t\t\t\t\t\tkey[i][k]=(key[j][k]*-t+key[i][k])%P;\n\t\t\t\t\tfor (int k=i;k<Size;++k)\n\t\t\t\t\t\t{ll tmp=key[i][k];key[i][k]=key[j][k];key[j][k]=tmp;}\n\t\t\t\t\tans=-ans;\n\t\t\t\t}\n\t\t\t\tif (key[i][i]==0)return 0;\n\t\t\t\tans=ans*key[i][i]%P;\n\t\t\t}\n\t\t\treturn (ans+P)%P;\n\t\t}\n\t\tll* operator [](int x){return key[x];}\n\t};\n\ttemplate<size_t Size>\n\tconst matrix<Size>& operator +(const matrix<Size> &a,const matrix<Size> &b){\n\t\tstatic matrix<Size> T;T.clear();\n\t\tfor (int i=0;i<Size;++i)\n\t\t\tfor (int j=0;j<Size;++j)T.key[i][j]=(a.key[i][j]+b.key[i][j])%P;\n\t\treturn T;\n\t}\n\ttemplate<size_t Size>\n\tconst matrix<Size>& operator -(const matrix<Size> &a,const matrix<Size> &b){\n\t\tstatic matrix<Size> T;T.clear();\n\t\tfor (int i=0;i<Size;++i)\n\t\t\tfor (int j=0;j<Size;++j)T.key[i][j]=(a.key[i][j]-b.key[i][j])%P;\n\t\treturn T;\n\t}\n\ttemplate<size_t Size>\n\tconst matrix<Size>& operator *(const matrix<Size> &a,const matrix<Size> &b){  //dangerous\n\t\tstatic matrix<Size> T;T.clear();\n\t\tfor (int k=0;k<Size;++k)\n\t\t\tfor (int i=0;i<Size;++i)\n\t\t\t\tfor (int j=0;j<Size;++j)\n\t\t\t\t\tT.key[i][j]+=a.key[i][k]*b.key[k][j];\n\t\tfor (int i=0;i<Size;++i)\n\t\t\tfor (int j=0;j<Size;++j)T.key[i][j]%=P;\n\t\treturn T;\n\t}\n\ttemplate<size_t Size>\n\tmatrix<Size> pow(const matrix<Size> &x,ll y){\n\t\tstatic matrix<Size> res,tmp;tmp=x;\n\t\tmemset(res.key,0,sizeof(res.key));\n\t\tfor (int i=0;i<Size;++i)res.key[i][i]=1;\n\t\twhile (y){\n\t\t\tif (y&1)res=res*tmp;\n\t\t\ttmp=tmp*tmp;y>>=1;\n\t\t}\n\t\treturn res;\n\t}\n};\nusing Matrix::matrix;\nmatrix<2> a,b;\nchar s[N];int k;\nint main()\n{\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tscanf(\"%s%d\",s,&k);int n=strlen(s),sum=0,now=1;\n\tfor (int i=0;i<n;++i){\n\t\tif (s[i]=='0'||s[i]=='5')sum=(sum+now)%P;\n\t\tnow=now*2%P;\n\t}\n\tsum=(sum%P+P)%P;\n\t//printf(\"%d\\n\",sum);\n\tb[0][0]=1;\n\ta[0][0]=now;a[0][1]=1;\n\ta[1][0]=0;a[1][1]=1;\n\tb=b*pow(a,k);\n\tb[0][1]=(b[0][1]*sum%P+P)%P;\n\tprintf(\"%d\\n\",b[0][1]);\n\t//system(\"pause\");for (;;);\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["combinatorics", "math"], "dificulty": "1700", "interactive": false}