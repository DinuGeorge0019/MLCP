{"link": "https://codeforces.com//contest/994/problem/D", "problemId": "190662", "problem_idx": "D", "shortId": "994D", "contest_number": "994", "problem_submissions": {"F": [39313692, 39315581, 95930723, 39333904], "D": [39298471, 39300217, 39307900, 39306172, 39303222, 39306617, 39330421, 39308869, 39310792, 39309655, 39306797, 39316533, 39305772, 39310407, 39314015, 39300951, 39309805, 39302653, 39303950, 39306436], "B": [39294915, 39295275, 39295676, 39295849, 39296984, 39296665, 39296958, 39296174, 39296249, 39295589, 39295750, 39299723, 39296783, 39298775, 39295093, 39296348, 39296369, 39296067, 39296627], "A": [39292025, 39292170, 39292210, 39296891, 39292448, 39292868, 39293213, 39292353, 39294071, 39292079, 39292190, 39292131, 39292850, 39293045, 39292213, 39293330, 39292422, 39292084], "C": [39312207, 39297429, 39302694, 39300203, 39302994, 39301715, 39301431, 39300472, 39302324, 39299468, 39310028, 39306138, 39303929, 39297727, 39301261, 39298603, 39300542], "E": [39305109, 39304789, 39310854, 39313649, 39313461, 39330509, 39311502, 39313415, 39314951, 39309721, 39313040, 39314741, 39315937, 39307951]}, "name": "D. Open Communication", "statement": "Two participants are each given a pair of distinct numbers from 1 to 9\r\nsuch that there\u2019s exactly one number that is present in both pairs. They\r\nwant to figure out the number that matches by using a communication\r\nchannel you have access to without revealing it to you.Both participants\r\ncommunicated to each other a set of pairs of numbers, that includes the\r\npair given to them. Each pair in the communicated sets comprises two\r\ndifferent numbers.Determine if you can with certainty deduce the common\r\nnumber, or if you can determine with certainty that both participants\r\nknow the number but you do not.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair <int, int> pii; \nint sim (pii a, pii b){\n    return (a.first==b.first)+(a.first==b.second)+(a.second==b.first)+(a.second==b.second);\n}\nint get (pii a, pii b){\n    if (a.first==b.first||a.first==b.second)return a.first;\n    return a.second; \n}\nint main(){\n    ios_base::sync_with_stdio(0);\n    int a, b; cin >> a >> b; \n    vector <pii> x1, x2; \n    for (int i=0; i<a; i++){\n        int c, d; cin >> c >> d; \n        x1.push_back(pii(c, d)); \n    }\n    for (int i=0; i<b; i++){\n        int c,d; cin >> c >> d; \n        x2.push_back(pii(c, d)); \n    }\n    map<int,int>lul; \n    for (pii i : x1){\n        for (pii j : x2){\n            if (sim(i,j)==1){\n                lul[get(i,j)]++; \n            }   \n        }\n    }\n    int cnter=0, ans=-1; \n    for (int i=1; i<=9; i++){\n        if (lul[i]){\n            cnter+=1; ans=i; \n        }\n    }\n    if (cnter == 1){\n        cout << ans << '\\n'; return 0; \n    }\n    for (pii i : x1){\n        map<int,int>lol; \n        for (pii j : x2){\n            if (sim(i,j)==1)lol[get(i,j)]++; \n        }\n        if (lol.size()>1){\n            cout<<-1<<'\\n'; return 0; \n        }\n    }\n    for (pii i : x2){\n        map<int,int>lol; \n        for (pii j : x1){\n            if (sim(i,j)==1)lol[get(i,j)]++; \n        }\n        if (lol.size()>1){\n            cout<<-1<<'\\n'; return 0; \n        }\n    }\n    cout << 0 << '\\n';\n    return 0;\n}"], "input": "", "output": "", "tags": ["bitmasks"], "dificulty": "1900", "interactive": false}