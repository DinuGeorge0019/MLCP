{"link": "https://codeforces.com//contest/224/problem/E", "problemId": "1795", "problem_idx": "E", "shortId": "224E", "contest_number": "224", "problem_submissions": {"E": [2198165, 2196819, 2198259, 2236128, 2197194, 2200952, 2199765, 2195540, 2194183, 2196229], "C": [2195830, 2191477, 2193694, 2193617, 2194313, 2194223, 2191815, 2195143, 2193986, 2195829, 2195362], "D": [2194352, 2195373, 2196141, 2197876, 2197375, 2196987, 2196590, 2197417, 2196810, 2194187], "B": [2190018, 2189879, 2191189, 2191665, 2190694, 2191086, 2195134, 2190875, 2194168, 2191594, 2190136, 2191734, 2190832, 2194600, 2190752, 2190993], "A": [2189231, 2189100, 2189357, 2190553, 2189190, 2189439, 2189115, 2189932, 2190812, 2189456, 2189202, 2189505, 2195692, 2189110, 2189926, 2189167]}, "name": "E. Partial Sums", "statement": "You\u2019ve got an array , consisting of integers. The array elements are\r\nindexed from 1 to . Let\u2019s determine a two step operation like that:\r\nFirst we build by the array an array of partial sums, consisting of\r\nelements. Element number () of array equals . The operation means that\r\nwe take the remainder of the division of number by number . Then we\r\nwrite the contents of the array to the array . Element number () of the\r\narray becomes the -th element of the array (). You task is to find array\r\nafter exactly described operations are applied.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cassert>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n\n#define Eo(x) {cerr << #x << \" = \" << (x) << endl;}\n#define E(x) {cerr << #x << \" = \" << (x) << ' ';}\n\nusing namespace std;\n\nconst int mod = 1000000000+7;\n\nint64_t fpow(int64_t x, int64_t e){\n\tint64_t res = 1;\n\twhile (e){\n\t\tif (e&1){\n\t\t\tres *= x;\n\t\t\tres %= mod;\n\t\t}\n\t\tx *= x;\n\t\tx %= mod;\n\t\te >>= 1;\n\t}\n\treturn res;\n}\n\nint64_t mydiv(int64_t x, int64_t y){\n\tint64_t res = x * fpow(y, mod-2);\n\treturn res%mod;\n}\n\nint64_t getC(int64_t a, int64_t b){\n\tint64_t res = 1;\n\tfor (int64_t i=1; i<=b; ++i){\n\t\tres *= (a-b+i);\n\t\tres %= mod;\n\t\tres = mydiv(res, i);\n\t}\n\treturn res;\n}\n\nconst int N = 2048;\nint ar[N];\nint64_t res[N];\nint n, k;\nint64_t C[N];\n\nint main(){\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i=0; i<n; ++i) scanf(\"%d\", ar+i);\n\n\tif (k==0){\n\t\tfor (int i=0; i<n; ++i) printf(\"%d \", ar[i]);\n\t\tprintf(\"\\n\");\n\t\treturn 0;\n\t}\n\n\tfor (int i=0; i<n; ++i){\n\t\tC[i] = getC(k-1+i, i);\n\t}\n\n\tfor (int i=0; i<n; ++i){\n\t\tres[i] = 0;\n\t\tfor (int j=0; j<=i; ++j){\n\t\t\tres[i] += ar[j]*C[i-j];\n\t\t\tres[i] %= mod;\n\t\t}\n\t}\n\n\tfor (int i=0; i<n; ++i) printf(\"%d \", int(res[i]));\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "math", "number theory"], "dificulty": "1900", "interactive": false}