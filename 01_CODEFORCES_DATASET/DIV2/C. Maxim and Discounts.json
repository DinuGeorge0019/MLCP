{
    "link": "https://codeforces.com//contest/262/problem/C",
    "problemId": "2508",
    "problem_idx": "C",
    "shortId": "262C",
    "contest_number": "262",
    "problem_submissions": {
        "E": [
            2917574,
            2919991,
            2920217
        ],
        "C": [
            2915597,
            2915456,
            2915755,
            2915133,
            2915067,
            2914439,
            2920021,
            2916661,
            2917064,
            2914971,
            2916258,
            2915804,
            2915424,
            2916306,
            2915632,
            2920899
        ],
        "B": [
            2912801,
            2913308,
            2913727,
            2913223,
            2912896,
            2915860,
            2912738,
            2913934,
            2914694,
            2913939,
            2914490,
            2913702,
            2913690,
            2913451,
            2913711,
            2912803
        ],
        "A": [
            2911759,
            2911860,
            2912304,
            2911748,
            2911806,
            2914884,
            2911799,
            2911959,
            2912048,
            2914184,
            2912000,
            2911981,
            2911895,
            2911859,
            2912010,
            2911726
        ],
        "D": [
            2918906,
            2919971,
            2920564,
            2920441,
            2919464,
            2920502,
            2920612,
            2918080
        ]
    },
    "name": "C. Maxim and Discounts",
    "statement": "Maxim always goes to the supermarket on Sundays. Today the supermarket\r\nhas a special offer of discount systems.There are types of discounts. We\r\nassume that the discounts are indexed from 1 to . To use the discount\r\nnumber , the customer takes a special basket, where he puts exactly\r\nitems he buys. Under the terms of the discount system, in addition to\r\nthe items in the cart the customer can receive at most two items from\r\nthe supermarket for free. The number of the \"free items\" (0, 1 or 2) to\r\ngive is selected by the customer. The only condition imposed on the\r\nselected \"free items\" is as follows: each of them mustnâ€™t be more\r\nexpensive than the cheapest item out of the items in the cart.Maxim now\r\nneeds to buy items in the shop. Count the minimum sum of money that\r\nMaxim needs to buy them, if he use the discount system optimally\r\nwell.Please assume that the supermarket has enough carts for any\r\nactions. Maxim can use the same discount multiple times. Of course,\r\nMaxim can buy items without any discounts.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n,x,d,i,ans;\nint a[100010];\nvoid Qsort(int l,int r)\n{\n\tint i=l,j=r,x=a[(l+r)>>1],t;\n\twhile(i<=j)\n\t{\n\t\twhile(a[i]<x) i++;\n\t\twhile(x<a[j]) j--;\n\t\tif(i<=j)\n\t\t{\n\t\t\tt=a[i]; a[i]=a[j]; a[j]=t;\n\t\t\ti++,j--;\n\t\t}\n\t}\n\tif(l<j) Qsort(l,j);\n\tif(i<r) Qsort(i,r);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\td=100010;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(x<d) d=x;\n\t}\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tQsort(1,n);\n\twhile(n>0)\n\t{\n\t\tfor(i=n;(i>=n-d+1)&&i;i--)\n\t\t\tans+=a[i];\n\t\tn-=(d+2);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Maxim and Discounts.json",
    "editorial_link": "https://codeforces.com//blog/entry/6398",
    "editorial": "Ofcourse the most optimal way is to use discount with minimal q_i. We will sort our numbers and will go from the end to begin of the array. We will by use our discount as soon as it will be possible. It's not hard to see that we will buy all the items with numbers I (zero-numeration from the end of the sorted array) such, that I%(q+2)<q.\n",
    "hint": []
}