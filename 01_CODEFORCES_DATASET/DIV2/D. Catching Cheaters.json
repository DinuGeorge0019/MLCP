{
    "link": "https://codeforces.com//contest/1447/problem/D",
    "problemId": "797265",
    "problem_idx": "D",
    "shortId": "1447D",
    "contest_number": "1447",
    "problem_submissions": {
        "F1": [
            98482074,
            98493054,
            99700638,
            99700288,
            98507770,
            98535197
        ],
        "E": [
            98471672,
            98487762,
            98462641,
            98467656,
            98474856,
            98475468,
            98466748,
            98471089,
            98474335,
            98473016,
            98472819,
            98475501,
            98476100,
            98473152,
            98480927,
            98480063,
            98483273,
            98472232,
            98484816
        ],
        "D": [
            98465943,
            98460161,
            98460032,
            98460272,
            98457345,
            98456392,
            98459724,
            98462491,
            98458555,
            98456607,
            98463156,
            98464783,
            98463338,
            98468636,
            98460203,
            98469147,
            98464911,
            98463572,
            98466107
        ],
        "C": [
            98461616,
            98454149,
            98456198,
            98455102,
            98451609,
            98450909,
            98449636,
            98454179,
            98454951,
            98450139,
            98456033,
            98456615,
            98452367,
            98462699,
            98462915,
            98451741,
            98459164,
            98457799,
            98456088
        ],
        "B": [
            98459424,
            98448840,
            98451090,
            98683205,
            98449593,
            98453136,
            98446655,
            98474948,
            98449629,
            98450999,
            98461566,
            98449722,
            98448167,
            106347351,
            98672986,
            98448001,
            98455222,
            98451056,
            98457032,
            98449675,
            98477349,
            98451673
        ],
        "A": [
            98453484,
            98445641,
            98444797,
            98683165,
            98445393,
            98446357,
            98444563,
            98446885,
            98447224,
            98445951,
            98458580,
            98444650,
            98444710,
            135934878,
            135934648,
            135925416,
            135925369,
            135925314,
            135925279,
            135925096,
            135925047,
            135924862,
            135924832,
            135924797,
            135924764,
            135924707,
            135924661,
            135924602,
            135924566,
            135924526,
            135924432,
            135924298,
            135924179,
            106344775,
            98672850,
            98445798,
            98445995,
            98446080,
            98454545,
            98452405,
            98445713,
            98447399
        ],
        "F2": [
            100134501,
            99704090
        ]
    },
    "name": "D. Catching Cheaters",
    "statement": "You are given two strings A and B representing essays of two students\r\nwho are suspected cheaters. For any two strings C, D we define their\r\nsimilarity score S(C,D) as 4\r\ncdot LCS(C,D) - |C| - |D|, where LCS(C,D) denotes the length of the\r\nLongest Common of strings C and D. You believe that only some part of\r\nthe essays could have been copied, therefore youâ€™re interested in their\r\n.Calculate the maximal similarity score over all pairs of substrings.\r\nMore formally, output maximal S(C, D) over all pairs (C, D), where C is\r\nsome substring of A, and D is some substring of B. If X is a string, |X|\r\ndenotes its length.A string a is a of a string b if a can be obtained\r\nfrom b by deletion of several (possibly, zero or all) characters from\r\nthe beginning and several (possibly, zero or all) characters from the\r\nend.A string a is a of a string b if a can be obtained from b by\r\ndeletion of several (possibly, zero or all) characters. Pay attention to\r\nthe difference between the and , as they both appear in the problem\r\nstatement. You may wish to read the Wikipedia page about the Longest\r\nCommon Subsequence problem.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nchar A[5010],B[5010];\nint N, M;\nint f[5010][5010];\n\nint main() {\n    scanf(\"%d%d\",&N,&M);\n    scanf(\"%s\", A + 1);\n    scanf(\"%s\", B + 1);\n    int ans = 0;\n    for (int i=1;i<=N;i++) {\n        for (int j=1;j<=M;j++) {\n            f[i][j] = max(f[i - 1][j] - 1, f[i][j - 1] - 1);\n            if (A[i] == B[j]) {\n                f[i][j] = max(f[i][j], f[i - 1][j - 1] + 2);\n                f[i][j] = max(f[i][j], 2);\n            }\n            ans = max(ans, f[i][j]);\n        }\n    }\n    printf(\"%d\\n\",ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy",
        "strings"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Catching Cheaters.json",
    "editorial_link": "https://codeforces.com//blog/entry/82067",
    "editorial": "Key observationIf a substring has a negative score, we can throw it away\r\nand start from scratch.\r\n",
    "hint": [
        "Hint This is a dynamic programming problem. Recall the DP calculating the Longest Common Substring for two strings. What similarities are there in our setup, and what differs?"
    ]
}