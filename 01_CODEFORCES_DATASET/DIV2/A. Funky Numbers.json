{"link": "https://codeforces.com//contest/192/problem/A", "problemId": "1355", "problem_idx": "A", "shortId": "192A", "contest_number": "192", "problem_submissions": {"E": [1730427, 1729827, 1729169, 1737343, 1730835, 1730060, 1730937, 1729815, 1729714, 1730328, 1742732, 1730184, 1806477, 1737169, 1737156], "D": [1728885, 1728181, 1729939, 1729209, 1730875, 1729431, 1730793, 1731274, 1729104, 1729076, 1729834, 1729950, 1730041, 1729892, 1730175, 1729978], "C": [1727437, 1727181, 1730368, 1727614, 1728967, 1728425, 1726946, 1730464, 1727937, 1727660, 1727585, 1727616, 1727725, 1727798, 1727968, 1728394, 1728325, 1727926], "B": [1726501, 1725823, 1726206, 1726346, 1727073, 1726253, 1725853, 1726712, 1726473, 1726128, 1725769, 1726259, 1726326, 1726262, 1726409, 1726302, 1726871, 1726862], "A": [1725727, 1725470, 1725578, 1725407, 1725501, 1731382, 2807333, 1731777, 1742258, 1725639, 1725724, 1725378, 1725587, 1725709, 1730327, 1725718, 1725838, 1725740, 1725684]}, "name": "A. Funky Numbers", "statement": "As you very well know, this year\u2019s funkiest numbers are so called\r\ntriangular numbers (that is, integers that are representable as , where\r\nis some positive integer), and the coolest numbers are those that are\r\nrepresentable as a sum of two triangular numbers.A well-known hipster\r\nAndrew adores everything funky and cool but unfortunately, he isn\u2019t good\r\nat maths. Given number , help him define whether this number can be\r\nrepresented by a sum of two triangular numbers (not necessarily\r\ndifferent)!\r\n", "solutions": ["#include<algorithm>\n#include<cassert>\n#include<complex>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<set>\n#include<sstream>\n#include<stack>\n#include<string>\n#include<vector>\n#define FOR(i,a,b) for(int i=(a);i<=(b);++i)\n#define FORD(i,a,b) for(int i=(a);i>=(b);--i)\n#define REP(i,n) for(int i=0;i<(n);++i)\n#define fup FOR\n#define fdo FORD\n#define VAR(v,i) __typeof(i) v=(i)\n#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)\n#define ALL(x) (x).begin(),(x).end()\n#define SIZE(x) ((int)(x).size())\n#define siz SIZE\n#define CLR memset((x),0,sizeof (x))\n#define PB push_back\n#define MP make_pair\n#define FI first\n#define SE second\n#define SQR(a) ((a)*(a))\n\n#define DEBUG 1\n#define debug(x) {if(DEBUG) cerr << #x << \" = \" << x << endl;}\n#define debugv(x) {if(DEBUG) {cerr << #x << \" = \"; FORE(it,(x)) cerr << *it << \" . \"; cerr  <<endl;}}\n\nusing namespace std;\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int,int> PII;\ntypedef vector<int> VI;\ntypedef VI vi;\ntypedef LL lli;\n\nconst int inf = 1000000000;\n\nbool is_triang(long long x) {\n    long double s = sqrt(2*x);\n    LL f = floor(s);\n    LL g = 1+f;\n    if (f > 1 && f*(f-1) == 2*x) return true;\n    if (g > 1 && g*(g-1) == 2*x) return true;\n    return false;\n}\n\nint main() {\n    int nn;\n    scanf(\"%d\", &nn);\n    long long n = nn;\n    for (int i = 1; ;++i) {\n        long long t = i*(i+1)/2;\n        if (t > n) break;\n        if (is_triang(n-t)) {\n            printf(\"YES\\n\");\n            return 0;\n        }\n    } \n    printf(\"NO\\n\");\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "brute force", "implementation"], "dificulty": "1300", "interactive": false}