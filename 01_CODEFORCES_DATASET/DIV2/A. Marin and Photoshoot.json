{
    "link": "https://codeforces.com//contest/1658/problem/A",
    "problemId": "1344622",
    "problem_idx": "A",
    "shortId": "1658A",
    "contest_number": "1658",
    "problem_submissions": {
        "E": [
            151138530,
            151146869,
            151142274,
            151156891,
            151144475,
            151131245,
            151198774,
            151154302,
            151144731,
            151157692,
            151159508,
            151140462,
            151148647,
            151219181,
            151219025,
            151218886,
            151218748,
            151155148,
            152719328,
            151158378,
            151155247,
            151203772,
            151170614,
            151170291,
            151155048
        ],
        "F": [
            151130100,
            151137469,
            151160433,
            151144944,
            151156580,
            151159798,
            151232291,
            151153413,
            151160992,
            151158393,
            151217808,
            152719401,
            151235290,
            152865004
        ],
        "D2": [
            151123118,
            151134040,
            151133854,
            151166091,
            151125130,
            151122133,
            151139222,
            151137227,
            151134065,
            151132282,
            151133698,
            151133407,
            151162997,
            151131356,
            151134494,
            151138728,
            151139132,
            151136153,
            151141865
        ],
        "D1": [
            151120822,
            151134118,
            151121251,
            151137456,
            151136457,
            151124968,
            151116539,
            151125380,
            151137042,
            151133981,
            151132184,
            151133795,
            151129157,
            151129385,
            151111426,
            151134591,
            151138886,
            151137815,
            151136213,
            151141775
        ],
        "C": [
            151112073,
            151128253,
            151116864,
            151133478,
            151123922,
            151138412,
            151133817,
            151115900,
            151129938,
            151123515,
            151127137,
            151121616,
            151119175,
            151124585,
            151140674,
            151128907,
            151118670,
            151122285,
            151130110,
            151124708
        ],
        "A": [
            151108745,
            151108766,
            151108093,
            151108539,
            151109707,
            151108138,
            151108257,
            151108228,
            151115578,
            151108352,
            151109887,
            151109318,
            151108285,
            151118389,
            151117355,
            151113770,
            151108678,
            151108356,
            151114275,
            151108304
        ],
        "B": [
            151108090,
            151111195,
            151109084,
            151117990,
            151113182,
            151110666,
            151109661,
            151112815,
            151110325,
            151119421,
            151112382,
            151112621,
            151125884,
            151123923,
            151121603,
            151111889,
            151111865,
            151121448,
            151110901
        ]
    },
    "name": "A. Marin and Photoshoot",
    "statement": "Today, Marin is at a cosplay exhibition and is preparing for a group\r\nphotoshoot!For the group picture, the cosplayers form a horizontal line.\r\nA group picture is considered if for every contiguous segment of at\r\nleast 2 cosplayers, the number of males does not exceed the number of\r\nfemales (obviously).Currently, the line has n cosplayers which can be\r\ndescribed by a binary string s. The i-th cosplayer is male if s_i = 0\r\nand female if s_i = 1. To ensure that the line is , you can invite some\r\nadditional cosplayers (possibly zero) to join the line at any position.\r\nYou can\u2019t remove any cosplayer from the line.Marin wants to know the\r\nminimum number of cosplayers you need to invite so that the group\r\npicture of all the cosplayers is . She can\u2019t do this on her own, so\r\nshe\u2019s asking you for help. Can you help her?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define mod 998244353\n#define int long long \nusing namespace std;\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tstring a;\n\t\tint n;\n\t\tcin >> n >> a;\n\t\tint ans=0;\n\t\tfor(int i=1;i<a.size();i++)\n\t\t{\n\t\t\tif(a[i]=='0'&&a[i-1]=='0')\n\t\t\t\tans+=2;\n\t\t}\n\t\tfor(int i=2;i<a.size();i++)\n\t\t{\n\t\t\tif(a[i]=='0'&&a[i-2]=='0'&&a[i-1]!='0')\n\t\t\t\tans++;\n\t\t}\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Marin and Photoshoot.json",
    "editorial_link": "https://codeforces.com//blog/entry/101302",
    "editorial": "TutorialIt is easy to see, in a beautiful picture, there must be at\r\nleast female cosplayers between consecutive male cosplayers. It is also\r\nthe sufficient condition, as if there are male cosplayers in a\r\nsubsegment, there are at least for all .\r\n"
}