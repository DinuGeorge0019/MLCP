{
    "link": "https://codeforces.com//contest/675/problem/B",
    "problemId": "60389",
    "problem_idx": "B",
    "shortId": "675B",
    "contest_number": "675",
    "problem_submissions": {
        "E": [
            17948562,
            17949439,
            17951477,
            17952621,
            17953457,
            17950428,
            17953529,
            17947770,
            17951235,
            17951895,
            17951367,
            17951619,
            17948510,
            17952736,
            17951724
        ],
        "C": [
            17943932,
            17938689,
            17941522,
            17944729,
            17944175,
            17953098,
            17943056,
            17944846,
            17947374,
            17939953,
            17962657,
            17966235,
            17954725,
            17940735,
            17941726,
            22255966,
            17952634,
            17944646,
            17957135
        ],
        "D": [
            17942614,
            17940890,
            17945507,
            17947894,
            17948215,
            17945745,
            17947110,
            17948235,
            17945049,
            17945728,
            17947720,
            17940113,
            17945095,
            17943288,
            17943504,
            17946575,
            17949945,
            17942674,
            17945705,
            17947663
        ],
        "B": [
            17938759,
            17936066,
            17938993,
            17938420,
            17938948,
            17938583,
            17948981,
            17937018,
            17940037,
            17964516,
            17938191,
            17942540,
            17939538,
            17937369,
            17937220,
            17939353,
            17954945,
            17936753,
            17939065,
            17939668
        ],
        "A": [
            17936166,
            17934371,
            17935192,
            17936993,
            17935281,
            17935512,
            17947868,
            17934798,
            17935340,
            17934655,
            17934645,
            17943337,
            17937162,
            17934833,
            17935029,
            17935291,
            17934716,
            17934453,
            17934986,
            17937083
        ]
    },
    "name": "B. Restoring Painting",
    "statement": "Vasya works as a watchman in the gallery. Unfortunately, one of the most\r\nexpensive paintings was stolen while he was on duty. He doesn’t want to\r\nbe fired, so he has to quickly restore the painting. He remembers some\r\nfacts about it. The painting is a square , each cell contains a single\r\ninteger from to , and different cells may contain either different or\r\nequal integers. The sum of integers in each of four squares is equal to\r\nthe sum of integers in the top left square . Four elements , , and are\r\nknown and are located as shown on the picture below. Help Vasya find out\r\nthe number of distinct squares the satisfy all the conditions above.\r\nNote, that this number may be equal to , meaning Vasya remembers\r\nsomething wrong.Two squares are considered to be different, if there\r\nexists a cell that contains two different integers in different squares.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\n    //freopen(\"a.in\", \"r\", stdin);\n    //freopen(\"a.out\", \"w\", stdout);\n    ll n, a, b, c, d, ans = 0;\n    cin >> n >> a >> b >> c >> d;\n    for (int i = 1; i <= n; i++)\n    {\n        ll x1, x2, x3, x4, x5;\n        x1 = i;\n        x2 = x1 + b - c;\n        x4 = x1 + a - d;\n        x5 = x4 + b - c;\n        int cnt = 0;\n        if (x1 >= 1 && x1 <= n) cnt++;\n        if (x2 >= 1 && x2 <= n) cnt++;\n        if (x4 >= 1 && x4 <= n) cnt++;\n        if (x5 >= 1 && x5 <= n) cnt++;\n        if (cnt == 4) ans++;\n    }\n    cout << ans * n;\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Restoring Painting.json",
    "editorial_link": "https://codeforces.com//blog/entry/44902",
    "editorial": "x a y b m c z d w Number in the center may be any from 1 to because\r\nnumber in the center belongs to all subsquares . So, letâs find answer\r\nwith fixed number in the center and then multiply answer by . Letâs\r\niterate over all possible . Sums of each subsquare are the same so and .\r\nSimilarly, and . This square is legal if . We should just check it. Also\r\nwe can solve this problem in . Code\r\n",
    "hint": []
}