{"link": "https://codeforces.com//contest/1080/problem/E", "problemId": "260447", "problem_idx": "E", "shortId": "1080E", "contest_number": "1080", "problem_submissions": {"F": [46161976, 46162778, 46160192, 46159146, 46160650, 46161330, 46177225, 46181279, 46177040, 46159242, 46165879, 46244094], "E": [46159833, 46158289, 46156414, 46159947, 46162060, 46170130, 46156194, 46160134, 46157810, 46160983, 46162313, 46162730, 46268200, 46162883, 46161436, 46165893, 46162523, 46157004, 46162154], "D": [46156149, 46155986, 46154022, 46155513, 46158228, 46156068, 46156726, 46159618, 46156456, 46155088, 46157318, 46173998, 46159164, 46155242, 46156719, 46155734, 46161044, 46159764], "C": [46152444, 46149941, 46152568, 46150576, 46153451, 46151555, 46151650, 46150697, 46153316, 46152202, 46153935, 46150267, 46152022, 46151720, 46151339, 46154831, 46152462, 46152573, 46153346, 46152817], "B": [46149045, 46145345, 46149235, 46146926, 46149668, 46147319, 46152091, 46147240, 46146639, 46147840, 46147532, 46146841, 46147485, 46146840, 46146905, 46150391, 46147300, 46147235, 46147802, 46148682], "A": [46146332, 46144961, 46147960, 46145347, 46146629, 46145256, 46151812, 46146189, 46145164, 46147556, 46144974, 46145039, 46145991, 46145058, 46145185, 46149238, 46145401, 46145176, 46145572, 46145659]}, "name": "E. Sonya and Matrix Beauty", "statement": "Sonya had a birthday recently. She was presented with the matrix of size\r\nn\r\ntimes m and consist of lowercase Latin letters. We assume that the rows\r\nare numbered by integers from 1 to n from bottom to top, and the columns\r\nare numbered from 1 to m from left to right. Let\u2019s call a submatrix\r\n(i_1, j_1, i_2, j_2) (1\r\nleq i_1\r\nleq i_2\r\nleq n; 1\r\nleq j_1\r\nleq j_2\r\nleq m) elements a_{ij} of this matrix, such that i_1\r\nleq i\r\nleq i_2 and j_1\r\nleq j\r\nleq j_2. Sonya states that a submatrix is beautiful if we can reorder\r\nthe characters in each (not in column) so that all of this submatrix\r\nform palidroms. Let\u2019s recall that a string is called palindrome if it\r\nreads the same from left to right and from right to left. For example,\r\nstrings abacaba, bcaacb, a are palindromes while strings abca, acbba, ab\r\nare not.Help Sonya to find the number of beautiful submatrixes.\r\nSubmatrixes are different if there is an element that belongs to only\r\none submatrix.\r\n", "solutions": ["#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\n\nconst int N = 300;\n\nchar A[N][N];\nint n, m, B[N], C[N];\nint p[N], c[N][26];\n\nbool ck(int i, int j) {\n  if (C[i] != C[j]) return false;\n  if (i == j) return true;\n  for (int k = 0; k < 26; ++k)\n    if (c[i][k] != c[j][k]) return false;\n  return true;\n}\n\nint get() {\n  p[0] = 1;\n  int mx = 1, id = 0, k = 2 * n - 1, ans = C[0] >= 0;\n  for (int i = 1; i < k; ++i) {\n    int i0 = i / 2, i1 = (i + 1) / 2;\n    if (mx > i1) p[i] = std::min(mx - i1, p[2 * id - i]);\n    else p[i] = 0;\n    if (mx <= i1 || mx - i1 <= p[2 * id - i])\n      while (i0 - p[i] >= 0 && i1 + p[i] < n && ck(i0 - p[i], i1 + p[i])) ++p[i];\n    if (i1 + p[i] > mx) mx = i1 + p[i], id = i;\n    if (C[i1] >= 0) ans += p[i];\n  }\n  return ans;\n}\n\nint main(){\n  scanf(\"%d%d\", &n, &m);\n  LL ans = 0;\n  for (int i = 0; i < n; ++i) scanf(\"%s\", A[i]);\n  for (int l = 0; l < m; ++l) {\n    memset(B, 0, sizeof B);\n    memset(c, 0, sizeof c);\n    for (int r = l; r < m; ++r) {\n      for (int i = 0; i < n; ++i) {\n        B[i] ^= 1 << (A[i][r] - 'a');\n        C[i] = B[i] & (B[i] - 1) ? -i-1 : B[i];\n        ++c[i][A[i][r] - 'a'];\n      }\n      int k = get();\n      //printf(\"%d %d %d\\n\", l, r, k);\n      ans += k;\n    }\n  }\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}"], "input": "", "output": "", "tags": ["strings"], "dificulty": "2400", "interactive": false}