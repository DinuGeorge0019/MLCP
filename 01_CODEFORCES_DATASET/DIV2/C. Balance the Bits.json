{"link": "https://codeforces.com//contest/1504/problem/C", "problemId": "945465", "problem_idx": "C", "shortId": "1504C", "contest_number": "1504", "problem_submissions": {"F": [111935045], "E": [111919537, 111908818, 111915476, 111922174, 111919354, 111912277, 111926667, 111933626, 111923368, 111927972, 111922895, 111929837, 111918921, 111930705, 111931199, 111927831, 111933167, 111936231, 111927723], "D": [111903831, 111898035, 111906622, 111906753, 111900341, 111920726, 111905882, 111889202, 111908288, 111906401, 111899954, 111909419, 111914558, 111906091, 111907496, 111910516, 111906791, 111899242, 111913796], "C": [111894612, 111888998, 111897074, 111891045, 111894960, 111894678, 111893967, 111898677, 111898779, 111894676, 111891710, 111887088, 111899272, 111894062, 111898183, 111901135, 111896065, 111907589, 111899883], "B": [111886123, 111877937, 111882311, 111876691, 111883851, 111877415, 111875995, 111877870, 111879515, 111885430, 111904265, 111879266, 111878112, 111883768, 111877486, 111882773, 111887115, 111878394, 111891154], "A": [111877837, 111872895, 111873662, 111872585, 111875452, 111883020, 111872169, 111872988, 111873021, 111873751, 111907400, 111872188, 111872713, 111872621, 111882814, 111875730, 111872954, 111872953, 111883462]}, "name": "C. Balance the Bits", "statement": "A sequence of brackets is called balanced if one can turn it into a\r\nvalid math expression by adding characters \u201d and \u201d. For example,\r\nsequences \u201d, \u201d, and \u201d are balanced, while \u201d, \u201d, and \u201d are not.You are\r\ngiven a binary string s of length n. Construct two balanced bracket\r\nsequences a and b of length n such that for all 1\r\nle i\r\nle n: if s_i=1, then a_i=b_i if s_i=0, then a_i\r\nne b_i If it is impossible, you should report about it.\r\n", "solutions": ["#include<bits/stdc++.h>\n\n#define fo(i,a,b) for(int i=a;i<=b;i++)\n#define fd(i,a,b) for(int i=a;i>=b;i--)\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef double db;\n\nint get(){\n    char ch;\n    while(ch=getchar(),(ch<'0'||ch>'9')&&ch!='-');\n    if (ch=='-'){\n        int s=0;\n        while(ch=getchar(),ch>='0'&&ch<='9')s=s*10+ch-'0';\n        return -s;\n    }\n    int s=ch-'0';\n    while(ch=getchar(),ch>='0'&&ch<='9')s=s*10+ch-'0';\n    return s;\n}\n\nconst int N = 2e5+5;\n\nint n;\nchar s[N],a[N],b[N];\n\nint main(){\n    for(int T=get();T;T--){\n        n=get();\n        scanf(\"%s\",s+1);\n        int cnt=0;\n        fo(i,1,n)if (s[i]=='0')cnt++;\n        if (s[1]!='1'||s[n]!='1'||cnt%2==1||n%2==1){\n            printf(\"NO\\n\");\n            continue;\n        }\n        int cnt1=0,cnt0=0;\n        fo(i,1,n){\n            if (s[i]=='1'){\n                if (i==1)a[i]=b[i]='(';\n                else if (i==n) a[i]=b[i]=')';\n                else{\n                    cnt1++;\n                    if (cnt1%2)a[i]=b[i]='(';\n                    else a[i]=b[i]=')';\n                }\n            }\n            else{\n                cnt0++;\n                if (cnt0%2)a[i]='(',b[i]=')';\n                else a[i]=')',b[i]='(';\n            }\n        }\n        a[n+1]=b[n+1]='\\n';\n        printf(\"YES\\n\");\n        fo(i,1,n)putchar(a[i]);putchar('\\n');\n        fo(i,1,n)putchar(b[i]);putchar('\\n');\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "greedy"], "dificulty": "1600", "interactive": false}