{
    "link": "https://codeforces.com//contest/540/problem/A",
    "problemId": "26986",
    "problem_idx": "A",
    "shortId": "540A",
    "contest_number": "540",
    "problem_submissions": {
        "E": [
            10950082,
            10942556,
            10951035,
            10952383,
            10951664,
            10948964,
            10952277,
            10951669,
            10951944,
            10983800,
            10953155,
            11577591,
            10950708,
            10959502,
            10959369,
            10949750,
            10950320,
            10951075,
            10955881,
            10955706,
            10948813
        ],
        "D": [
            10947922,
            10944160,
            10947124,
            10947070,
            10947798,
            10941308,
            10948944,
            10944336,
            10946886,
            10946947,
            10949570,
            10959819,
            10950615,
            10948080,
            10945713,
            10950893,
            10948099,
            10946895,
            10951818
        ],
        "C": [
            10944700,
            10945032,
            10944296,
            10945350,
            10951612,
            10946322,
            10949663,
            10954145,
            10962540,
            10944690,
            10944805,
            10959319,
            10950587,
            10948967,
            10953843,
            10947752,
            10960817,
            10948058,
            10945550
        ],
        "B": [
            10942652,
            10942383,
            10948312,
            10942705,
            10949878,
            10942945,
            10950444,
            10942965,
            10962010,
            10943162,
            10942463,
            10958996,
            10943265,
            10953368,
            10944155,
            10957408,
            10953391,
            10944270,
            10952996
        ],
        "A": [
            10940515,
            10940359,
            10941183,
            10940296,
            10949371,
            10940424,
            10950781,
            10940505,
            10961698,
            10940642,
            10940766,
            10947479,
            10940747,
            10940350,
            10941583,
            10943114,
            10940385,
            10940561,
            10940442
        ]
    },
    "name": "A. Combination Lock",
    "statement": "Scrooge McDuck keeps his most treasured savings in a home safe with a\r\ncombination lock. Each time he wants to put there the treasures that\r\nhe\u2019s earned fair and square, he has to open the lock. The combination\r\nlock is represented by rotating disks with digits from 0 to 9 written on\r\nthem. Scrooge McDuck has to turn some disks so that the combination of\r\ndigits on the disks forms a secret combination. In one move, he can\r\nrotate one disk one digit forwards or backwards. In particular, in one\r\nmove he can go from digit 0 to digit 9 and vice versa. What minimum\r\nnumber of actions does he need for that?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define sz(x) int((x).size())\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int,int> PII;\ntypedef std::pair<ll,ll> PLL;\n\ntemplate<class T> inline T pr(T x) { return --x; }\ntemplate<class T> inline T nx(T x) { return ++x; }\n\nconst int maxn = 1010;\nint n;\nchar a[maxn],b[maxn];\n\nint main() {\n    int i,j,k,t,tt,T,Test;\n    scanf(\"%d\",&n);\n    int ans = 0;\n    scanf(\"%s%s\",a+1,b+1);\n    for (i=1; i<=n; ++i) {\n        t = a[i]-'0'; tt = b[i]-'0';\n        t = abs(t-tt);\n        ans += min(t,10-t);\n    }\n    printf(\"%d\\n\",ans);\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Combination Lock.json",
    "editorial_link": "https://codeforces.com//blog/entry/17643",
    "editorial": "For every symbol we should determine how to rotate the disk. This can be\r\ndone either by formula: or even by the two for cycles: in both\r\ndirections.\r\n"
}