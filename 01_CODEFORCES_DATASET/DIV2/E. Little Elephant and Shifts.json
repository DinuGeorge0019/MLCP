{
    "link": "https://codeforces.com//contest/221/problem/E",
    "problemId": "1626",
    "problem_idx": "E",
    "shortId": "221E",
    "contest_number": "221",
    "problem_submissions": {
        "E": [
            3205051,
            2092800,
            2086150,
            2086057,
            2087298,
            2087155,
            2087149,
            2087018,
            2086854,
            2086766,
            2084177,
            85197769
        ],
        "D": [
            2077623,
            2076297,
            2081220,
            2080200,
            2077733,
            2077945,
            2078661,
            2078764,
            2079390,
            2078475,
            2078957,
            2078857,
            2079767,
            2079126,
            2080238,
            2080763,
            2080984
        ],
        "C": [
            2075002,
            2086554,
            2073629,
            2075934,
            2074814,
            2076079,
            2073608,
            2075600,
            2075194,
            2075398,
            2074548,
            2075699,
            2076113,
            2076291,
            2077149,
            2075454,
            2074363,
            2076715
        ],
        "B": [
            2074170,
            2074163,
            2072750,
            2073391,
            2074703,
            2076060,
            2073836,
            2074637,
            2073703,
            2073926,
            2074911,
            2074503,
            2075040,
            2074940,
            2073942,
            2073661,
            2075809
        ],
        "A": [
            2072835,
            2074357,
            2073486,
            2074025,
            2073249,
            2073912,
            2072457,
            2073442,
            2072552,
            2072801,
            2072681,
            2073490,
            2073385,
            2074053,
            2072948,
            2072853,
            2073301
        ]
    },
    "name": "E. Little Elephant and Shifts",
    "statement": "The Little Elephant has two permutations and of length , consisting of\r\nnumbers from 1 to , inclusive. Let’s denote the -th element of the\r\npermutation as , the -th element of the permutation as .The between\r\npermutations and is the minimum absolute value of the difference between\r\nthe positions of the occurrences of some number in and in . More\r\nformally, it’s such minimum , that .A number of permutation consisting\r\nfrom elements is a permutation . Overall a permutation has cyclic\r\nshifts.The Little Elephant wonders, for all cyclic shifts of permutation\r\n, what is the distance between the cyclic shift and permutation ?\r\n",
    "solutions": [
        "#include <functional>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <queue>\n\nusing namespace std;\n\nconst int inf = 1000000000;\n\ntypedef pair<int, int> PII;\n\nint a[100000], b[100000], value[100000], locA[100000], locB[100000], sign[100000];\nvector<int> change[100000];\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i ++) scanf(\"%d\", &a[i]);\n\tfor (int i = 0; i < n; i ++) scanf(\"%d\", &b[i]);\n\t\n\tpriority_queue< PII, vector<PII>, greater<PII> > plus, minus;\n\tfor (int i = 0; i < n; i ++) {\n\t\ta[i] --;\n\t\tb[i] --;\n\t\tlocA[a[i]] = i;\n\t\tlocB[b[i]] = i;\n\t}\n\tfor (int i = 0; i < n; i ++) {\n\t\tint x = a[i];\n\t\tvalue[x] = abs(i - locB[x]);\n\t\tif (locB[x] < i) {\n\t\t\tsign[x] = 1;\n\t\t\tplus.push(make_pair(value[x], x));\n\t\t\tchange[locB[x] + n - i].push_back(x);\n\t\t} else {\n\t\t\tsign[x] = -1;\n\t\t\tminus.push(make_pair(value[x], x));\n\t\t\tchange[locB[x] - i].push_back(x);\n\t\t}\n\t\tchange[i].push_back(b[i]);\n\t}\n\t\n\tfor (int i = 0; i < n; i ++) {\n\t\twhile (! plus.empty()) {\n\t\t\tPII tmp = plus.top();\n\t\t\tint x = tmp.second;\n\t\t\tif (tmp.first + i == abs((locB[x] - i + n) % n - locA[x]) && sign[x] == 1) break;\n\t\t\tplus.pop();\n\t\t}\n\t\twhile (! minus.empty()) {\n\t\t\tPII tmp = minus.top();\n\t\t\tint x = tmp.second;\n\t\t\tif (tmp.first - i == abs((locB[x] - i + n) % n - locA[x]) && sign[x] == -1) break;\n\t\t\tminus.pop();\n\t\t}\n\t\tint t1 = plus.empty() ? inf : plus.top().first + i;\n\t\tint t2 = minus.empty() ? inf : minus.top().first - i;\n\t\tprintf(\"%d\\n\", min(t1, t2));\n\t\tfor (int j = 0; j < change[i].size(); j ++) {\n\t\t\tint x = change[i][j];\n\t\t\tsign[x] *= -1;\n\t\t\tvalue[x] = abs((locB[x] - (i + 1) + n) % n - locA[x]);\n\t\t\tif (sign[x] == 1) {\n\t\t\t\tplus.push(make_pair(value[x] - (i + 1), x));\n\t\t\t} else {\n\t\t\t\tminus.push(make_pair(value[x] + (i + 1), x));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Little Elephant and Shifts.json",
    "editorial_link": "https://codeforces.com//blog/entry/5177",
    "editorial": null
}