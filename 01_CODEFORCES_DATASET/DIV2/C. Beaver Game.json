{"link": "https://codeforces.com//contest/78/problem/C", "problemId": "419", "problem_idx": "C", "shortId": "78C", "contest_number": "78", "problem_submissions": {"E": [412000, 412857], "B": [409412, 410003, 409464, 409485, 409229, 409391, 409709, 409646, 409243, 409557, 410163, 409775, 409340, 409369, 410560], "A": [408793, 408783, 408965, 408822, 408787, 408815, 408846, 408809, 408863, 408801, 409486, 410948, 408932, 408926, 409703], "C": [410868, 412693, 410900, 410229, 410280, 410434, 410827, 410485, 410919, 411104, 410723, 411342, 411575, 412006], "D": [411731]}, "name": "C. Beaver Game", "statement": "Two beavers, Timur and Marsel, play the following game.There are logs,\r\neach of exactly meters in length. The beavers move in turns. For each\r\nmove a beaver chooses a log and gnaws it into some number (more than\r\none) of parts, the length of each one is expressed by an integer and is\r\nno less than meters. Each resulting part is also a log which can be\r\ngnawed in future by any beaver. The beaver that can\u2019t make a move loses.\r\nThus, the other beaver wins.Timur makes the first move. The players play\r\nin the optimal way. Determine the winner.\r\n", "solutions": ["/*\n * Author: fatboy_cw\n * Created Time:  2011/4/27 23:40:47\n * File Name: C.cpp\n */\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n#define SZ(v) ((int)(v).size())\n\ntypedef long long lint;\n\nint main() {\n    lint n,m,k;\n    cin>>n>>m>>k;\n    bool flag=false;\n    for(lint i=1;i*i<=m;i++){\n        if(m%i==0){\n            if(i>=k && m/i>1){\n                flag=true;\n                break;\n            }\n            if(m/i>=k && i>1){\n                flag=true;\n                break;\n            }\n        }\n    }\n    if(!flag){\n        printf(\"Marsel\\n\");\n    }\n    else{\n        if(n%2==1){\n            printf(\"Timur\\n\");\n        }\n        else{\n            printf(\"Marsel\\n\");\n        }\n    }\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["dp", "games", "number theory"], "dificulty": "2000", "interactive": false}