{"link": "https://codeforces.com//contest/1720/problem/C", "problemId": "1512384", "problem_idx": "C", "shortId": "1720C", "contest_number": "1720", "problem_submissions": {"E": [168846777, 168840544, 168827050, 168859240, 168862248, 168861844, 168862010, 168825889, 168916027, 168877554, 168901697, 168883239], "D2": [168835694, 168850679, 168839552, 168830934, 168845483, 168843478, 168832795, 168821250, 168836283, 168852109, 168831844, 168842245, 168839190, 168846298, 168842200, 168837729, 168842524], "D1": [168824858, 168826632, 168839665, 168830830, 168827889, 168830140, 168824710, 168836162, 168821401, 168836396, 168823758, 168831963, 168842466, 168825766, 168831343, 168842031, 168837590, 168842611], "C": [168811322, 168813329, 168842584, 168815215, 168819795, 168819474, 168819456, 168850754, 168812287, 168814430, 168814760, 168822741, 168815241, 168811935, 168821777, 168817839, 168814181, 168823921, 168820025], "A": [168809810, 168807059, 168846238, 168808208, 168810706, 168809379, 168807927, 168854111, 168807247, 168807149, 168808346, 168808021, 168807215, 168848108, 168807353, 168808693, 168807411, 168807295, 168808471], "B": [168807225, 168807985, 168844246, 168809736, 168814160, 168814167, 168862630, 168852491, 168808670, 168808487, 168810496, 168816414, 168815954, 168809438, 168816039, 168810273, 168810419, 168815510, 168813227]}, "name": "C. Corners", "statement": "You are given a matrix consisting of n rows and m columns. Each cell of\r\nthis matrix contains 0 or 1.Let\u2019s call a square of size 2\r\ntimes 2 without one corner cell an L-shape figure. In one operation you\r\ncan take one L-shape figure, with at least one cell containing 1 and\r\nreplace all numbers in it with zeroes.Find the number of operations that\r\nyou can do with the given matrix.\r\n", "solutions": ["//\u8fd9\u56de\u53ea\u82b1\u4e86114514min\u5c31\u6253\u5b8c\u4e86\u3002\n//\u771f\u597d\u3002\u8bb0\u5f97\u591a\u624b\u9020\u51e0\u7ec4\u3002ACM\u62cd\u4ec0\u4e48\u62cd\u3002 \n#include \"bits/stdc++.h\"\nusing namespace std;\ntemplate<typename typC,typename typD> istream &operator>>(istream &cin,pair<typC,typD> &a) { return cin>>a.first>>a.second; }\ntemplate<typename typC> istream &operator>>(istream &cin,vector<typC> &a) { for (auto &x:a) cin>>x; return cin; }\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const pair<typC,typD> &a) { return cout<<a.first<<' '<<a.second; }\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const vector<pair<typC,typD>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\ntemplate<typename typC> ostream &operator<<(ostream &cout,const vector<typC> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\ntemplate<typename typC> bool cmin(typC &x,const typC &y) { if (x>y) { x=y; return 1; } return 0; }\ntemplate<typename typC> bool cmax(typC &x,const typC &y) { if (x<y) { x=y; return 1; } return 0; }\n#if !defined(ONLINE_JUDGE)&&defined(LOCAL)\n#include \"my_header\\debug.h\"\n#else\n#define dbg(...) ;\n#define dbgn(...) ;\n#endif\ntypedef unsigned int ui;\ntypedef long long ll;\n#define all(x) (x).begin(),(x).end()\n// void inc(ui &x,const ui &y) { if ((x+=y)>=p) x-=p; }\n// void dec(ui &x,const ui &y) { if ((x+=p-y)>=p) x-=p; }\nconst int N=1e6+5;\nint main()\n{\n\tios::sync_with_stdio(0); cin.tie(0);\n\tcout<<setiosflags(ios::fixed)<<setprecision(15);\n\tint T; cin>>T;\n\twhile (T--)\n\t{\n\t\tint n,m,i,j,mn=1e9;\n\t\tcin>>n>>m;\n\t\tvector<string> a(n);\n\t\tfor (auto &s:a) cin>>s;\n\t\tint r=0;\n\t\tfor (auto &s:a) for (auto &c:s) c-='0';\n\t\tfor (i=0; i<n; i++) for (j=0; j<m; j++) r+=a[i][j];\n\t\tfor (i=1; i<n; i++) for (j=1; j<m; j++)\n\t\t{\n\t\t\tvector<int> c={a[i-1][j-1],a[i][j],a[i-1][j],a[i][j-1]};\n\t\t\tsort(all(c));\n\t\t\tmn=min(mn,c[0]+c[1]+c[2]);\n\t\t}\n\t\tcout<<max(r-max(mn,1)+1,0)<<'\\n';\n\t}\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "1200", "interactive": false}