{"link": "https://codeforces.com//contest/1401/problem/E", "problemId": "704917", "problem_idx": "E", "shortId": "1401E", "contest_number": "1401", "problem_submissions": {"E": [90589999, 90578154, 90605920, 90584030, 90594969, 90593911, 90572580, 90599304, 90615088, 90675249, 90605781, 90590132, 90599391, 90594214, 90758857, 90645951, 90601216], "F": [90580393, 90597215, 90579684, 90610107, 90603479, 90603116, 90603512, 90617786, 90601646, 90675259, 90613571, 90583132, 90589402, 90594866, 90604055, 90620941, 90598510, 90646625], "D": [90560258, 90565538, 90550432, 90567225, 90569423, 90571869, 90587693, 90567049, 90578884, 90577112, 90563897, 90566957, 90557267, 90573179, 90565326, 90564972, 90565503, 90568268, 90571582], "C": [90551509, 90552981, 90554787, 90547352, 90555070, 90559549, 90607672, 90556632, 90562455, 90568524, 90549734, 90553714, 90548534, 90548686, 90550222, 90543917, 90550988, 90557805, 90555836], "B": [90546499, 90547295, 90558760, 90542536, 90550631, 90551851, 90549294, 90545681, 90553940, 90549432, 90563346, 90548659, 90544907, 90558972, 90545692, 90550414, 90545438, 90550179, 90547970], "A": [90541721, 90542770, 90541219, 90541087, 90544810, 90561361, 90543645, 90541402, 90544925, 90541955, 90542350, 90543732, 90541094, 90542063, 90541725, 90541822, 90542174, 90542376, 90542708]}, "name": "E. Divide Square", "statement": "There is a square of size 10^6\r\ntimes 10^6 on the coordinate plane with four points (0, 0), (0, 10^6),\r\n(10^6, 0), and (10^6, 10^6) as its vertices.You are going to draw\r\nsegments on the plane. All segments are either horizontal or vertical\r\nand .Now you are wondering how many pieces this square divides into\r\nafter drawing all segments. Write a program calculating the number of\r\npieces of the square.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nconst int MAX=1e6;\nint n, m, ft[MAX+2];\nvpi ev1[MAX+1], ev2[MAX+1];\nll ans=1;\n\nvoid upd(int i, int x) {\n\tfor(i++; i<MAX+2; i += i&-i) {\n\t\tft[i] += x;\n\t}\n}\n\nll qry(int i) {\n\tll a=0;\n\tfor(; i>0; i -= i&-i) {\n\t\ta += ft[i];\n\t}\n\treturn a;\n}\n\nint main() {\n\tios::sync_with_stdio(0); cin.tie(0);\n\n\tcin >> n >> m;\n\n\tfor(int i=0; i<n; i++) {\n\t\tint y, l, r;\n\t\tcin >> y >> l >> r;\n\t\tev1[y].pb(mp(l, 1));\n\t\tev1[y].pb(mp(r+1, -1));\n\t\tif(l==0 && r==MAX) {\n\t\t\t++ans;\n\t\t}\n\t}\n\tfor(int i=0; i<m; i++) {\n\t\tint x, l, r;\n\t\tcin >> x >> l >> r;\n\t\tev2[r].pb(mp(x, 1));\n\t\tif(l>0) {\n\t\t\tev2[l-1].pb(mp(x, -1));\n\t\t}\n\t\tif(l==0 && r==MAX) {\n\t\t\t++ans;\n\t\t}\n\t}\n\n\tfor(int i=0; i<=MAX; i++) {\n\t\tfor(pi p : ev1[i]) {\n\t\t\tupd(p.f, p.s);\n\t\t}\n\t\tfor(pi p : ev2[i]) {\n\t\t\tans += qry(p.f+1)*p.s;\n\t\t}\n\t}\n\n\tcout << ans;\n\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "geometry", "implementation", "sortings"], "dificulty": "2400", "interactive": false}