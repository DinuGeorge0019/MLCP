{
    "link": "https://codeforces.com//contest/488/problem/C",
    "problemId": "17755",
    "problem_idx": "C",
    "shortId": "488C",
    "contest_number": "488",
    "problem_submissions": {
        "C": [
            8789721,
            8784968,
            8786503,
            8785444,
            8787030,
            8788326,
            8788622,
            8789526,
            8783088,
            8788042,
            8841638,
            8787428,
            8789969,
            8785172,
            8783549,
            8795032,
            8792817,
            8792769,
            8792766,
            8790912,
            8784523
        ],
        "D": [
            8787031,
            8860157,
            8845738,
            8846448
        ],
        "B": [
            8783651,
            8783456,
            8782128,
            8783172,
            8783387,
            8783484,
            8784283,
            8784001,
            8789951,
            8782906,
            8841826,
            8810063,
            8784023,
            8785144,
            8782367,
            8790893,
            8785527
        ],
        "A": [
            8777414,
            8777482,
            8778085,
            8777878,
            8777654,
            8777074,
            8779752,
            8777889,
            8778928,
            8778120,
            8841586,
            8778590,
            8782174,
            8791718,
            8778710,
            8778067,
            8777724
        ],
        "E": [
            8862060,
            8861159
        ]
    },
    "name": "C. Fight the Monster",
    "statement": "A monster is attacking the Cyberland!Master Yang, a braver, is going to\r\nbeat the monster. Yang and the monster each have 3 attributes: hitpoints\r\n(), offensive power () and defensive power ().During the battle, every\r\nsecond the monster’s HP decrease by , while Yang’s HP decreases by ,\r\nwhere index denotes Master Yang and index denotes monster. Both\r\ndecreases happen simultaneously Once monster’s and the same time Master\r\nYang’s , Master Yang wins.Master Yang can buy attributes from the magic\r\nshop of Cyberland: bitcoins per , bitcoins per , and bitcoins per .Now\r\nMaster Yang wants to know the minimum number of bitcoins he can spend in\r\norder to win.\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_WARNINGS\n#if 1\n#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <iomanip>\n#include <sstream>\n#include <numeric>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <cstdlib>\n#include <cassert>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <ctime>\n#include <list>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int> pii;\n\nconst LD eps = 1e-9;\nconst LD pi = acos(-1.0);\nconst LL inf = 1e+9;\n\n#define mp make_pair\n#define pb push_back\n#define X first\n#define Y second\n\n#define dbg(x) { cerr << #x << \" = \" << x << endl; }\n\n// extended template\n#pragma comment(linker, \"/STACK:36777216\")\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\n#define forn(i, n) for (int i = 0; i < n; ++i)\n#define all(a) (a).begin(), (a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n\ntemplate<typename T> istream & operator >> (istream &, vector<T> &);\ntemplate<typename T> ostream & operator << (ostream &, const vector<T> &);\n\n#define START clock_t _clock = clock();\n#define END cerr << endl << \"time: \" << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;\n\n#define NAME \"problem\"\n\nvoid solve(){\n    int a[2][3];\n    int b[3];\n    for (int i = 0; i < 2; i++)\n    for (int j = 0; j < 3; j++)\n        cin >> a[i][j];\n    cin >> b[0] >> b[1] >> b[2];\n\n    const int oo = 1000000000;\n\n    int res = oo;\n    for (int i = 0; i <= 10000; i++){\n        for (int j = 0; j <= 200; j++){\n            for (int k = 0; k <= 200; k++){\n                if (i * b[0] + j * b[1] + k * b[2] > res) continue;\n\n                int x = a[0][0] + i, y = a[0][1] + j, z = a[0][2] + k;\n\n                int k1;\n                if (a[1][1] <= z) k1 = oo;  // mos kills young\n                else{\n                    k1 = x / (a[1][1] - z);\n                    if (x % (a[1][1] - z) != 0) k1++;\n                }\n                \n                k1--;\n                if (LL(k1) * (y - a[1][2]) >= a[1][0]){\n                    res = min(res, i * b[0] + j * b[1] + k * b[2]);\n                    //cout << i << \" \" << j << \" \" << k << endl;\n                }\n            }\n        }\n    }\n\n    cout << res << endl;\n}\n\nint main()\n{\n    // freopen(NAME \".in\", \"r\", stdin); freopen(NAME \".out\", \"w\", stdout);\n     //freopen(\"input.txt\", \"r\", stdin); // freopen(\"output.txt\", \"w\", stdout);\n\n    solve();\n\n    return 0;\n}\n/*******************************************\n*******************************************/\n\ntemplate<typename T> istream & operator >> (istream &is, vector<T> &v)\n{\n    forn(i, v.size())\n        is >> v[i];\n    return is;\n}\ntemplate<typename T> ostream & operator << (ostream &os, const vector<T> &v)\n{\n    forn(i, v.size())\n        os << v[i] << \" \";\n    return os;\n}\n#endif"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Fight the Monster.json",
    "editorial_link": "https://codeforces.com/blog/entry/14832",
    "editorial": "It is no use to make Yang's ATK > HP_M + DEF_M (Yang already can beat it in a second). And it's no use to make Yang's DEF > ATK_M (it cannot deal any damage to him).\n\nAs a result, Yang's final ATK will not exceed 200, and final DEF will not exceed 100. So just enumerate final ATK from ATK_Y to 200, final DEF from DEF_Y to 100.\n\nWith final ATK and DEF known, you can calculate how long the battle will last, then calculate HP loss. You can easily find the gold you spend, and then find the optimal answer.",
    "hint": []
}