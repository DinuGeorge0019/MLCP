{"link": "https://codeforces.com//contest/265/problem/D", "problemId": "2524", "problem_idx": "D", "shortId": "265D", "contest_number": "265", "problem_submissions": {"E": [2970019, 2969814, 2971806, 2972492, 2972772, 2970736], "D": [2968205, 2967708, 2967237, 2968473, 2967999, 2967756, 2971736, 2969158, 2969904, 2966908, 2968608, 2970666, 2968760, 2968451, 2969659, 2966606, 2966951], "B": [2967771, 2964317, 2964787, 2965276, 2964902, 2964309, 2965378, 2964669, 3347348, 2965826, 2967252, 2965239, 2965920, 2965167, 2966106, 2964904, 2964503, 2964762], "A": [2964815, 2963268, 2963454, 2963256, 2963422, 2963233, 2963728, 2963215, 3347333, 2964025, 2963259, 2963495, 2963155, 2963704, 2964004, 2965452, 2963951, 2963523], "C": [2966018, 2965716, 2966720, 2966022, 2965227, 2966717, 2966330, 2966665, 2964777, 2966177, 2966801, 2966556, 2966845, 2967129, 2965425]}, "name": "D. Good Sequences", "statement": "Squirrel Liss is interested in sequences. She also has preferences of\r\nintegers. She thinks integers are .Now she is interested in good\r\nsequences. A sequence is called if it satisfies the following three\r\nconditions: The sequence is strictly increasing, i.e. for each . No two\r\nadjacent elements are coprime, i.e. for each (where denotes the greatest\r\ncommon divisor of the integers and ). All elements of the sequence are\r\ngood integers. Find the length of the longest good sequence.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 200000;\n\nint n;\nint a[MAXN];\nint f[MAXN];\n\nint main()\n{\n\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint tmp = 1;\n\t\tfor(int j = 1; j * j <= a[i]; j++)\n\t\tif (a[i] % j == 0)\n\t\t{\n\t\t\tif (j != 1) tmp = max(tmp, f[j] + 1);\n\t\t\tif (a[i] / j != 1) tmp = max(tmp, f[a[i] / j] + 1);\n\t\t}\n\t\tfor(int j = 1; j * j <= a[i]; j++)\n\t\tif (a[i] % j == 0)\n\t\t{\n\t\t\tf[j] = max(f[j], tmp);\n\t\t\tf[a[i] / j] = max(f[a[i] / j], tmp);\n\t\t}\n\t}\n\tint ans = 0;\n\tfor(int i = 1; i <= 100000; i++)\n\t\tans = max(ans, f[i]);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "number theory"], "dificulty": "1500", "interactive": false}