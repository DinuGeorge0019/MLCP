{"link": "https://codeforces.com//contest/1694/problem/B", "problemId": "1430895", "problem_idx": "B", "shortId": "1694B", "contest_number": "1694", "problem_submissions": {"E": [160856186, 160866174, 160873008, 160869335, 160868951, 160877330, 160898676, 160877174, 160875442, 160876502, 160879470, 160875237, 160876355, 160882396, 160879879, 160879629, 160876481, 160881373, 160884964, 160881275], "D": [160848272, 160842517, 160849905, 160853063, 160857057, 160853921, 160854624, 160847127, 160845187, 160855341, 160850688, 160860686, 160857001, 160853657, 160862452, 160862852, 160864038, 160855376, 160858063], "C": [160836570, 160829494, 160839678, 160844593, 160847177, 160836731, 160843728, 160843693, 160838092, 160845965, 160845179, 160854286, 160843446, 160844276, 160856430, 160857207, 160844960, 160846963, 160849978], "B": [160832238, 160835941, 160831844, 160834416, 160835663, 160829339, 160834030, 160840102, 160851072, 160836730, 160864814, 160845534, 160830377, 160835010, 160833897, 160845509, 160927414, 160837907, 160860824, 160841779], "A": [160832046, 160833611, 160826245, 160824355, 160825264, 160825514, 160825648, 160826360, 160852110, 160825530, 160855429, 160829525, 160824626, 160825478, 160825695, 160824627, 160922182, 160921765, 160830254, 160825318, 160825557], "F": [160914915]}, "name": "B. Paranoid String", "statement": "Let\u2019s call a binary string T of length m indexed from 1 to m if we can\r\nobtain a string of length 1 by performing the following two kinds of\r\noperations m-1 times in any order : Select any substring of T that is\r\nequal to , and then replace it with . Select any substring of T that is\r\nequal to , and then replace it with .For example, if T = , we can select\r\nthe substring [T_2T_3] and perform the first operation. So we obtain T =\r\n.You are given a binary string S of length n indexed from 1 to n. Find\r\nthe number of pairs of integers (l, r) 1\r\nle l\r\nle r\r\nle n such that S[l\r\nldots r] (the substring of S from l to r) is a string.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\ntemplate <typename Fun>\nstruct y_combinator {\n    const Fun fun;\n\n    explicit y_combinator(const Fun&& fun) : fun(std::forward<const Fun>(fun)) {}\n\n    template <typename... Args>\n    auto operator()(Args&&... args) const {\n        return fun(std::ref(*this), std::forward<Args>(args)...);\n    }\n};\n\nvoid solve() {\n    int n;\n    cin >> n;\n    string s;\n    cin >> s;\n    long long ans = n;\n    for (int i = 1; i < n; ++i) {\n        if (s[i] != s[i - 1]) {\n            ans += i;\n        }\n    }\n    cout << ans << '\\n';\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1200", "interactive": false}