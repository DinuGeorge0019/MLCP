{
    "link": "https://codeforces.com//contest/1113/problem/B",
    "problemId": "298876",
    "problem_idx": "B",
    "shortId": "1113B",
    "contest_number": "1113",
    "problem_submissions": {
        "F": [
            50029851,
            50027404,
            50030339,
            50026081,
            50014660,
            50035333,
            50257257,
            50070723
        ],
        "D": [
            50015277,
            50015205,
            50019421,
            50031452,
            50020920,
            50013311,
            50007178,
            50013937,
            50012791,
            50015938,
            50016802,
            50014200,
            50015657,
            50016776,
            50016469,
            50014925,
            50016276,
            50015341,
            50015398
        ],
        "C": [
            50010380,
            50008887,
            50014758,
            50003958,
            50029468,
            50007583,
            50010331,
            50007640,
            50007298,
            50006708,
            50007662,
            50010852,
            50007580,
            50008735,
            50006693,
            50008307,
            50010428,
            50010877,
            50010398
        ],
        "B": [
            50004482,
            50004900,
            50004055,
            50027451,
            50003687,
            50003644,
            50004759,
            50003919,
            50003186,
            50003543,
            50006686,
            50003830,
            50004035,
            50003831,
            50006011,
            50005003,
            50007355,
            50002185
        ],
        "A": [
            50001104,
            50002099,
            50000353,
            49999666,
            49999994,
            50004913,
            49999638,
            49999959,
            49999704,
            50000171,
            50001843,
            49999533,
            50000757,
            49999734,
            50002770,
            50000200,
            50002464,
            49999515
        ]
    },
    "name": "B. Sasha and Magnetic Machines",
    "statement": "One day Sasha visited the farmer 2D and his famous magnetic farm. On\r\nthis farm, the crop grows due to the influence of a special magnetic\r\nfield. Maintaining of the magnetic field is provided by n machines, and\r\nthe power of the i-th machine is a_i. This year 2D decided to cultivate\r\na new culture, but what exactly he didn’t say. For the successful growth\r\nof the new culture, it is necessary to slightly change the powers of the\r\nmachines. 2D can choose an arbitrary integer x, then choose one machine\r\nand reduce the power of its machine by x times, and at the same time\r\nincrease the power of one another machine by x times (powers of all the\r\nmachines must stay ). Note that he may not do that if he wants. More\r\nformally, 2D can choose two such indices i and j, and one integer x such\r\nthat x is a divisor of a_i, and change powers as following: a_i =\r\nfrac{a_i}{x}, a_j = a_j\r\ncdot xSasha is very curious, that’s why he wants to calculate the total\r\npower the farmer can reach. There are too many machines, and Sasha can’t\r\ncope with computations, help him!\r\n",
    "solutions": [
        "#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nint n, a[50000];\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin >> n;\n    for (int i = 0; i < n; i++) cin >> a[i];\n    sort(a, a+n);\n\n    int sum = 0;\n    for (int i = 0; i < n; i++) sum += a[i];\n\n    int sol = sum;\n    for (int i = 1; i < n; i++) {\n        for (int d = 2; d <= a[i]; d++) {\n            if(a[i] % d != 0) continue;\n            sol = min(sol, sum-a[0]-a[i] + d*a[0] + a[i]/d);\n        }\n    }\n    cout << sol << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sasha and Magnetic Machines.json",
    "editorial_link": "https://codeforces.com//blog/entry/65295",
    "editorial": "First notice that if we divide some number by , then to get the minimal\r\nsum, it is optimal to multiply by the smallest number in the array. So\r\nnow precalculate the sum of the initial array and the minimal , then you\r\ncan check all possible for every , and choose the best variant. So the\r\ncomplexity is .\r\n",
    "hint": []
}