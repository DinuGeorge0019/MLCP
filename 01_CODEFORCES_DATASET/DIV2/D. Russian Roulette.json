{"link": "https://codeforces.com//contest/104/problem/D", "problemId": "550", "problem_idx": "D", "shortId": "104D", "contest_number": "104", "problem_submissions": {"E": [594572, 595447, 594514, 593423, 594676, 594292, 594547], "C": [591857, 591809, 591800, 592033, 590961, 15833664, 592207, 591755, 592040, 591871, 591464, 592241, 593499, 592011, 592711, 594849], "D": [593368, 592821, 593272, 594806, 593597, 594364, 594478, 594691, 596431, 595141, 594573, 592760], "B": [590511, 590167, 590267, 590358, 590770, 590604, 591136, 590892, 591094, 590607, 590251, 590834, 590212, 591386, 590970], "A": [589657, 589353, 589356, 589622, 590590, 589788, 589796, 590775, 590074, 589669, 589302, 590025, 589306, 590532, 589463]}, "name": "D. Russian Roulette", "statement": "After all the events in Orlando we all know, Sasha and Roma decided to\r\nfind out who is still the team\u2019s biggest loser. Thankfully, Masha found\r\nsomewhere a revolver with a rotating cylinder of bullet slots able to\r\ncontain exactly bullets, now the boys have a chance to resolve the\r\nproblem once and for all. Sasha selects any out of slots he wishes and\r\nputs bullets there. Roma spins the cylinder so that every of possible\r\ncylinder\u2019s shifts is equiprobable. Then the game starts, the players\r\ntake turns, Sasha starts: he puts the gun to his head and shoots. If\r\nthere was no bullet in front of the trigger, the cylinder shifts by one\r\nposition and the weapon is given to Roma for make the same move. The\r\ngame continues until someone is shot, the survivor is the winner. Sasha\r\ndoes not want to lose, so he must choose slots for bullets in such a way\r\nas to minimize the probability of its own loss. Of all the possible\r\nvariant he wants to select the lexicographically minimal one, where an\r\nempty slot is lexicographically less than a charged one. More formally,\r\nthe cylinder of bullet slots able to contain bullets can be represented\r\nas a string of characters. Exactly of them are \"\" (charged slots) and\r\nthe others are \"\" (uncharged slots). Let us describe the process of a\r\nshot. Suppose that the trigger is in front of the first character of the\r\nstring (the first slot). If a shot doesn\u2019t kill anyone and the cylinder\r\nshifts, then the string shifts left. So the first character becomes the\r\nlast one, the second character becomes the first one, and so on. But the\r\ntrigger doesn\u2019t move. It will be in front of the first character of the\r\nresulting string.Among all the strings that give the minimal probability\r\nof loss, Sasha choose the lexicographically minimal one. According to\r\nthis very string, he charges the gun. You have to help Sasha to charge\r\nthe gun. For that, each query must be answered: is there a bullet in the\r\npositions ?\r\n", "solutions": ["#include <stdio.h>\n#include <string.h>\n\ntypedef long long ll;\n\nll n,t2,p,t1,x;\n\nint main()\n{\n    while(scanf(\"%I64d%I64d%I64d\",&n,&t2,&p)==3)\n    {\n        t1=n-t2;\n        for(int i=0;i<p;i++)\n        {\n            scanf(\"%I64d\",&x);\n            if (t1==t2)\n            {\n                if (x&1) putchar('.');\n                else putchar('X');\n            } else\n            if (t1<t2)\n            {\n                if (x<2*t1&&(x&1)) putchar('.');\n                else putchar('X');\n            }  else\n            {\n                if (t2==1)\n                {\n                    if (x==n) putchar('X');\n                    else putchar('.');\n                } else\n                if (t2==0) putchar('.');\n                else\n                {\n                    ll p=(t1-t2);\n                    if (p&1)\n                    {\n                        p=t1-t2+1;\n                        if (x==n) putchar('X'); else\n                        if (x<=p) putchar('.'); else\n                        {\n                            x-=p;\n                            if (x&1) putchar('.');\n                            else putchar('X');\n                        }\n                    } else\n                    {\n                        p=t1-t2;\n                        if (x<=p) putchar('.');else\n                        {\n                            x-=p;\n                            if (x&1) putchar('.');\n                            else putchar('X');\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "1900", "interactive": false}