{
    "link": "https://codeforces.com//contest/670/problem/A",
    "problemId": "59594",
    "problem_idx": "A",
    "shortId": "670A",
    "contest_number": "670",
    "problem_submissions": {
        "F": [
            17735920,
            17741947,
            17739838,
            17742147,
            17741489,
            17740480,
            17741509,
            17743043,
            17743802,
            17744174,
            17746158,
            17745379,
            17739547,
            17746721,
            17747076,
            17746214,
            17747355
        ],
        "E": [
            17730040,
            17731049,
            17733744,
            17731207,
            17733203,
            17735292,
            17734256,
            17735578,
            17734020,
            17735429,
            17736141,
            17737288,
            17746918,
            17736320,
            17739029,
            17736027,
            17737111
        ],
        "D2": [
            17725965,
            17728400,
            17727768,
            17728149,
            17727724,
            17733032,
            17727187,
            17728319,
            17727989,
            17724612,
            17728413,
            17731488,
            17730289,
            17730390,
            17731393,
            17765595,
            17733213
        ],
        "D1": [
            17725487,
            17728299,
            17727727,
            17728284,
            17727707,
            17732932,
            17727240,
            17728389,
            17728203,
            17724671,
            17728521,
            17731440,
            17730058,
            17729637,
            17731489,
            17727320,
            17732424
        ],
        "C": [
            17723024,
            17725897,
            17729270,
            17725892,
            17727606,
            17730842,
            17728142,
            17726419,
            17724258,
            17726720,
            17725246,
            17726826,
            17726494,
            17725465,
            17727248,
            17724877,
            17734108
        ],
        "B": [
            17721571,
            17724028,
            17723559,
            17722726,
            17722823,
            17729499,
            17722138,
            17722709,
            17722944,
            17727742,
            17722740,
            17724595,
            17723615,
            17722288,
            17723917,
            17722833,
            17723125
        ],
        "A": [
            17720663,
            17721845,
            17721356,
            17721364,
            17721787,
            17728607,
            17720913,
            17721102,
            17720788,
            17729012,
            17721057,
            17721708,
            17721392,
            17721888,
            17720937,
            17721414
        ]
    },
    "name": "A. Holidays",
    "statement": "On the planet Mars a year lasts exactly days (there are no leap years on\r\nMars). But Martians have the same weeks as earthlings 5 work days and\r\nthen 2 days off. Your task is to determine the minimum possible and the\r\nmaximum possible number of days off per year on Mars.\r\n",
    "solutions": [
        "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <fstream>\n#include <cstdlib>\n#include <numeric>\n#include <iomanip>\n#include <cstdio>\n#include <cstring>\n#include <cassert>\n#include <vector>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <ctime>\n#include <set>\n#include <map>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate <typename T>\nT nextInt() {\n    T x = 0, p = 1;\n    char ch;\n    do { ch = getchar(); } while(ch <= ' ');\n    if (ch == '-') {\n        p = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9') {\n        x = x * 10 + (ch - '0');\n        ch = getchar();\n    }\n    return x * p;\n}\n\nconst int maxN = (int)1e5 + 10;\nconst int maxL = 17;\nconst int INF = (int)1e9;\nconst int mod = (int)1e9 + 7;\nconst ll LLINF = (ll)1e18;\n\nint main() {\n\n  //  freopen(\"input.txt\", \"r\", stdin);\n   // freopen(\"output.txt\", \"w\", stdout);\n\n    int n;\n    cin >> n;\n    int mx = 0, mn = INF;\n    for (int i = 0; i < 7; ++i) {\n        int a = 0;\n        for (int j = 0; j < n; ++j) {\n            if ((i + j) % 7 >= 5) a++;\n        }\n        mx = max(mx, a);\n        mn = min(mn, a);\n    }\n    cout << mn << ' ' << mx << '\\n';\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Holidays.json",
    "editorial_link": "https://codeforces.com//blog/entry/44715",
    "editorial": "There are many ways to solve this problem. Letâs talk about one of them.\r\nAt first we need to write a function, which takes the start day of the\r\nyear and calculate the number of days off in such year. To make it letâs\r\niterate on the days of the year and will check every day is it day off\r\nor no. It is easy to show that if the first day of the year equals to\r\nthe first day of the week (i.e. this day is Monday) in this year will be\r\nminimum possible number of the days off. If the first day of the year\r\nequals to the first day off of the week (i.e. this day is Saturday) in\r\nthis year will be maximum possible number of the days off.\r\n",
    "hint": []
}