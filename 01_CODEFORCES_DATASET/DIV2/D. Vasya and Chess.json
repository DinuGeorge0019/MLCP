{
    "link": "https://codeforces.com//contest/493/problem/D",
    "problemId": "18745",
    "problem_idx": "D",
    "shortId": "493D",
    "contest_number": "493",
    "problem_submissions": {
        "D": [
            8962830,
            8955808,
            8962303,
            8964364,
            8960751,
            8962225,
            8960844,
            8962975,
            8967369,
            8959886,
            8960455,
            8962054,
            8964729,
            8965627,
            8960251,
            8964827,
            8965332
        ],
        "C": [
            8959569,
            8958613,
            8959499,
            8962173,
            8964601,
            8955815,
            8960873,
            8959250,
            8961260,
            8963716,
            8955238,
            8958453,
            8960180,
            8956138,
            8963664,
            8959424,
            8955895,
            8957865
        ],
        "B": [
            8956674,
            8960162,
            8957216,
            8957307,
            8961901,
            8964843,
            8957724,
            8955497,
            8959210,
            8958869,
            8958459,
            8960046,
            8957270,
            8962744,
            8958746,
            8956007,
            8956632,
            8962594
        ],
        "A": [
            8954713,
            8961765,
            8955431,
            8957905,
            8957496,
            8961409,
            8956078,
            8954483,
            8954560,
            8956624,
            8982686,
            8954617,
            8955736,
            8959987,
            8955670,
            8968662,
            8954641,
            8955068
        ],
        "E": [
            8978921,
            8981489,
            8968299,
            8997367
        ]
    },
    "name": "D. Vasya and Chess",
    "statement": "Vasya decided to learn to play chess. Classic chess doesn\u2019t seem\r\ninteresting to him, so he plays his own sort of chess.The queen is the\r\npiece that captures all squares on its vertical, horizontal and diagonal\r\nlines. If the cell is located on the same vertical, horizontal or\r\ndiagonal line with queen, and the cell contains a piece of the enemy\r\ncolor, the queen is able to move to this square. After that the enemy\u2019s\r\npiece is removed from the board. The queen cannot move to a cell\r\ncontaining an enemy piece if there is some other piece between it and\r\nthe queen. There is an chessboard. We\u2019ll denote a cell on the\r\nintersection of the -th row and -th column as . The square contains the\r\nwhite queen and the square contains the black queen. All other squares\r\ncontain green pawns that don\u2019t belong to anyone.The players move in\r\nturns. The player that moves first plays for the white queen, his\r\nopponent plays for the black queen.On each move the player has to\r\ncapture some piece with his queen (that is, move to a square that\r\ncontains either a green pawn or the enemy queen). The player loses if\r\neither he cannot capture any piece during his move or the opponent took\r\nhis queen during the previous move. Help Vasya determine who wins if\r\nboth players play with an optimal strategy on the board .\r\n",
    "solutions": [
        "#include<iostream>\n#include<string.h>\n#include<vector>\n#include<algorithm>\n#include<iomanip>\n#include<map>\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin>>n;\n    if(n % 2 == 0)\n    {\n        cout<<\"white\"<<endl;\n        cout<<\"1 2\"<<endl;\n    }\n    else\n    {\n        cout<<\"black\"<<endl;\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "games",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Vasya and Chess.json",
    "editorial_link": "https://codeforces.com//blog/entry/14985",
    "editorial": "If n is odd, then black can win white doing all the moves symetric by\r\nthe central line. Else white can win putting his queen on (1,2) (which\r\nis the lexicographicly smallest place) and play symetricly never using\r\nthe first row.\r\n"
}