{
    "link": "https://codeforces.com//contest/265/problem/C",
    "problemId": "2523",
    "problem_idx": "C",
    "shortId": "265C",
    "contest_number": "265",
    "problem_submissions": {
        "E": [
            2970019,
            2969814,
            2971806,
            2972492,
            2972772,
            2970736
        ],
        "D": [
            2968205,
            2967708,
            2967237,
            2968473,
            2967999,
            2967756,
            2971736,
            2969158,
            2969904,
            2966908,
            2968608,
            2970666,
            2968760,
            2968451,
            2969659,
            2966606,
            2966951
        ],
        "B": [
            2967771,
            2964317,
            2964787,
            2965276,
            2964902,
            2964309,
            2965378,
            2964669,
            3347348,
            2965826,
            2967252,
            2965239,
            2965920,
            2965167,
            2966106,
            2964904,
            2964503,
            2964762
        ],
        "A": [
            2964815,
            2963268,
            2963454,
            2963256,
            2963422,
            2963233,
            2963728,
            2963215,
            3347333,
            2964025,
            2963259,
            2963495,
            2963155,
            2963704,
            2964004,
            2965452,
            2963951,
            2963523
        ],
        "C": [
            2966018,
            2965716,
            2966720,
            2966022,
            2965227,
            2966717,
            2966330,
            2966665,
            2964777,
            2966177,
            2966801,
            2966556,
            2966845,
            2967129,
            2965425
        ]
    },
    "name": "C. Escape from Stones",
    "statement": "Squirrel Liss lived in a forest peacefully, but unexpected trouble\r\nhappens. Stones fall from a mountain. Initially Squirrel Liss occupies\r\nan interval . Next, stones will fall and Liss will escape from the\r\nstones. The stones are numbered from 1 to in order.The stones always\r\nfall to the center of Liss’s interval. When Liss occupies the interval\r\nand a stone falls to , she will escape to the left or to the right. If\r\nshe escapes to the left, her new interval will be . If she escapes to\r\nthe right, her new interval will be .You are given a string of length .\r\nIf the -th character of is \"\" or \"\", when the -th stone falls Liss will\r\nescape to the left or to the right, respectively. Find the sequence of\r\nstones’ numbers from left to right after all the stones falls.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <map>\n#include <queue>\n#include <set>\n#define DBLE 1e-8\n#define PI 3.1415926535898\n#define INF 1000000000\n#define MAXN 1000010\nusing namespace std;\nstruct _node\n{\n    int id;\n    _node *pre,*nex;\n}no[MAXN];\nchar str[MAXN];\nint main()\n{\n    int l=0,r=MAXN-1,mid;\n    _node *head=new _node(),*en=new _node(),*now;\n    head->nex=en;\n    en->pre=head;\n    now=head;\n    scanf(\"%s\",str);\n    for(int i=0;str[i];++i)\n    {\n        no[i].id=i+1;\n        no[i].nex=now->nex;\n        now->nex->pre=&no[i];\n        now->nex=&no[i];\n        no[i].pre=now;\n        if(str[i]=='r')\n            now=now->nex;\n    }\n    for(head=head->nex;head!=en;head=head->nex)\n        printf(\"%d\\n\",head->id);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Escape from Stones.json",
    "editorial_link": "https://codeforces.com//blog/entry/6478",
    "editorial": "In this problem, there are many simple algorithms which works in O(n). One of them (which I intended) is following:\n\nYou should prepare 2 vectors. If s[i]?=?'l', you should push i to the first vector, and if s[i]?=?'r', you should push i to the second vector. Finally, you should print the integers in the second vector by default order, after that, you should print the integers in the first vector in the reverse order.\n\nThis algorithm works because if Liss divides an interval into two intervals A and B and she enters A, she will never enter B.",
    "hint": []
}