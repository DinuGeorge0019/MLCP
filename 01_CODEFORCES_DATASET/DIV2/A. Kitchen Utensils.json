{
    "link": "https://codeforces.com//contest/1079/problem/A",
    "problemId": "257671",
    "problem_idx": "A",
    "shortId": "1079A",
    "contest_number": "1079",
    "problem_submissions": {
        "E": [
            45934267,
            45936636,
            45941806,
            45937565,
            45939333,
            45937199,
            45940743,
            45942158,
            45941402,
            46104036,
            45963146,
            45940904,
            45946313
        ],
        "D": [
            45931502,
            45929943,
            45928202,
            45933972,
            45932585,
            45928454,
            45926585,
            45928651,
            45928898,
            45928856,
            45930400,
            45930743,
            45929548,
            45929551,
            45931333,
            45929717,
            45931175,
            45930151,
            45933096
        ],
        "C": [
            45927571,
            45925544,
            45925366,
            45932689,
            45926037,
            45924078,
            45924314,
            45925482,
            45926594,
            45925976,
            45921399,
            45924312,
            45926518,
            45925797,
            45924767,
            45926026,
            45925780,
            45927583,
            45925054
        ],
        "B": [
            45922164,
            45922160,
            45923256,
            45930687,
            45951085,
            45921961,
            45921919,
            45922366,
            45922028,
            45923115,
            45924050,
            45922108,
            45922170,
            45923305,
            45921946,
            45922922,
            45922642,
            45922803,
            45922288
        ],
        "A": [
            45920252,
            45920257,
            45923913,
            45925594,
            45920970,
            45920420,
            45920504,
            45920483,
            45920269,
            45921357,
            45926632,
            45920349,
            45920289,
            45920409,
            45920196,
            45920480,
            45920373,
            45920574,
            45920303
        ],
        "F": [
            46007936,
            46007802,
            46007752,
            45995791,
            45995576,
            45995489,
            45995039,
            45994859,
            45992076
        ],
        "G": [
            45942230
        ]
    },
    "name": "A. Kitchen Utensils",
    "statement": "The kingâ€™s birthday dinner was attended by k guests. The dinner was\r\nquite a success: every person has eaten several dishes (though the\r\nnumber of dishes was the same for every person) and every dish was\r\nserved alongside with a new set of kitchen utensils.All types of\r\nutensils in the kingdom are numbered from 1 to 100. It is known that\r\nevery set of utensils is the same and consist of different types of\r\nutensils, although every particular type may appear in the set at most\r\nonce. For example, a valid set of utensils can be composed of one fork,\r\none spoon and one knife.After the dinner was over and the guests were\r\ndismissed, the king wondered what minimum possible number of utensils\r\ncould be stolen. Unfortunately, the king has forgotten how many dishes\r\nhave been served for every guest but he knows the list of all the\r\nutensils left after the dinner. Your task is to find the minimum\r\npossible number of stolen utensils.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint a[(int)2e5];\nint main()\n{\n    int n, k;\n    cin >> n >> k;\n    int mx = 0;\n    for(int  i = 1;i <= n; i++)\n    {\n        int x;\n        cin >> x;\n        a[x]++;\n        mx = max(mx, a[x]);\n    }\n    int ans = 0;\n    mx = (mx + k - 1) / k;\n   // cout<<ans\n    for(int i = 1;i <= 100; i++)\n    {\n        if(a[i] != 0)\n        {\n            ans += mx*k - a[i];\n        }\n    }\n    cout<<ans;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Kitchen Utensils.json",
    "editorial_link": "https://codeforces.com//blog/entry/63324",
    "editorial": null,
    "hint": []
}