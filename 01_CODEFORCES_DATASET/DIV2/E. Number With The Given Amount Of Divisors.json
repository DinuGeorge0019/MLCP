{"link": "https://codeforces.com//contest/27/problem/E", "problemId": "128", "problem_idx": "E", "shortId": "27E", "contest_number": "27", "problem_submissions": {"C": [118523, 117811, 117814, 117821, 1202654, 117657, 117499, 119957, 117700, 119337, 118774, 118192, 117772, 118123], "E": [118273, 118684, 118448, 118559, 118059, 118536, 119960, 118988, 119040, 119271, 119970], "D": [117934, 118098, 118656, 118879, 117613, 118207, 119959, 118542, 118353, 118733, 121675, 118883], "B": [117350, 117487, 117442, 117491, 117370, 117796, 119955, 117513, 117473, 118282, 119741, 117496, 117464, 117783], "A": [117113, 117117, 117183, 117189, 117387, 117134, 117129, 119954, 117122, 117228, 117819, 117165, 117139, 117252]}, "name": "E. Number With The Given Amount Of Divisors", "statement": "Given the number , find the smallest positive integer which has exactly\r\ndivisors. It is guaranteed that for the given the answer will not exceed\r\n.\r\n", "solutions": ["#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<map>\n#include<vector>\n#include<list>\n#include<set>\n#include<queue>\n#include<cassert>\n#include<sstream>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define LET(x,a) \t__typeof(a) x(a)\n#define IFOR(i,a,b) \tfor(LET(i,a);i!=(b);++i)\n#define EACH(it,v)  \tIFOR(it,v.begin(),v.end())\n#define FOR(i,a,b)  \tfor(int i=(int)(a) ; i < (int)(b);++i)\n#define REP(i,n) \tFOR(i,0,n)\n#define PB\t\tpush_back\n#define MP \t\tmake_pair\n#define EPS\t\t1e-9\n#define INF 2000000000\n\ntypedef vector<int>\tVI;\ntypedef long long\tLL;\ntypedef pair<int,int>\tPI;\n\nLL min1;\nLL primes[]={2,3,5,7,11,13,17,19,23,29,31,37};\nvector<LL> factors;\n\nvoid solve(int n,int lastIndex,LL cur,int index){\n\tif(cur>min1||cur<0)return;\n\tif(n==1){\n\t\tmin1 = cur;\n\t\treturn;\n\t}\n\tLL curPrime = primes[index];\n\tfor(int i = lastIndex;i>=0;i--){\n\t\tif(n%factors[i]==0){\n\t\t\tLL newCur = cur;\t\n\t\t\tREP(j,factors[i]-1){\n\t\t\t\tnewCur*=curPrime;\n\t\t\t\tif(newCur>min1)break;\n\t\t\t}\n\t\t\tsolve(n/factors[i],i,newCur,index+1);\n\t\t}\n\t}\n\treturn;\n}\n\nint main(){\n\tLL n;cin>>n;\n\tmin1 = 1;\n\tLL tmp = n;\n\tVI div;\n\tfor(int i=2;i<=tmp;i++){\n\t\twhile(tmp%i==0){\n\t\t\ttmp/=i;\n\t\t\tdiv.PB(i);\n\t\t}\n\t}\n\tfor(int i = div.size()-1;i>=0;i--){\n\t\tint  p = div[i];\n\t\tLL mul = primes[div.size()-1-i],cur=1;\n\t\tREP(j,p-1)cur*=mul;\n\t\tmin1*=cur;\n\t}\n\tfactors.clear();\n\tFOR(i,2,64)if(n%i==0){\n\t\tfactors.PB(i);\n\t}\n\tsolve(n,factors.size()-1,1,0);\n\tcout<<min1<<endl;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "number theory"], "dificulty": "2000", "interactive": false}