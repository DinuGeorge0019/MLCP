{"link": "https://codeforces.com//contest/984/problem/B", "problemId": "183245", "problem_idx": "B", "shortId": "984B", "contest_number": "984", "problem_submissions": {"E": [38295174, 38292597, 38295542, 38294481, 38296992, 38308491, 38286876, 38291550, 38301305, 38295842, 38311834], "D": [38281653, 38286328, 38283274, 38285186, 38284520, 38278363, 38278548, 38283233, 38283814, 38283258, 38285731, 38282701, 38285537, 38283857, 38282865, 38284924, 38285935, 38282839, 38284166, 38284994], "C": [38277813, 38279909, 38280385, 38282567, 38284026, 38308575, 38279256, 38278014, 38280019, 38281587, 38278990, 38279032, 38276778, 38279263, 38279837, 38280121, 38280838, 38281513, 38280422], "B": [38277482, 38274043, 38276214, 38275539, 38274804, 38273916, 38280569, 38275485, 38274790, 38277380, 38303710, 38274483, 38273269, 38279129, 38273211, 38274320, 38274282, 38275265, 38276184, 38276792], "A": [38274250, 38270894, 38271892, 38271406, 38271964, 38270942, 38279477, 38271611, 38271008, 38273380, 38271243, 38272415, 38270860, 38271217, 38270890, 38271184, 38271009, 38271766, 38274300, 38271231]}, "name": "B. Minesweeper", "statement": "One day Alex decided to remember childhood when computers were not too\r\npowerful and lots of people played only default games. Alex enjoyed\r\nplaying Minesweeper that time. He imagined that he saved world from\r\nbombs planted by terrorists, but he rarely won.Alex has grown up since\r\nthen, so he easily wins the most difficult levels. This quickly bored\r\nhim, and he thought: what if the computer gave him invalid fields in the\r\nchildhood and Alex could not win because of it?He needs your help to\r\ncheck it.A Minesweeper field is a rectangle n\r\ntimes m, where each cell is either empty, or contains a digit from 1 to\r\n8, or a bomb. The field is valid if for each cell: if there is a digit k\r\nin the cell, then exactly k neighboring cells have bombs. if the cell is\r\nempty, then all neighboring cells have no bombs. Two cells are neighbors\r\nif they have a common side or a corner (i. e. a cell has at most 8\r\nneighboring cells).\r\n", "solutions": ["#include <bits/stdc++.h>\n/*    .___.\n     /     \\\n    | O _ O |\n    /  \\_/  \\\n  .' /     \\ `.\n / _|       |_ \\\n(_/ |       | \\_)\n    \\       /\n   __\\_>-<_/__\n   ~;/     \\;~     */\n\n\n#define float double\n#define debug(x) (cerr << #x << \": \" << (x) << endl)\n\n#define int long long\n\ntypedef long long ll;\n\nusing namespace std;\n\nint n, m;\nvector<string> field;\n\nint countBombs(int r, int c) {\n    int result = 0;\n    if (r > 0 && c > 0 && field[r-1][c-1] == '*') result++;\n    if (r > 0 && field[r-1][c] == '*') result++;\n    if (r > 0 && c < m-1 && field[r-1][c+1] == '*') result++;\n    if (c > 0 && field[r][c-1] == '*') result++;\n    if (c < m-1 && field[r][c+1] == '*') result++;\n    if (r < n-1 && c > 0 && field[r+1][c-1] == '*') result++;\n    if (r < n-1 && field[r+1][c] == '*') result++;\n    if (r < n-1 && r < m-1 && field[r+1][c+1] == '*') result++;\n    return result;\n}\n\nint32_t main() {\n    cin >> n >> m;\n    string row;\n    for (int i = 0; i < n; i++) {\n        cin >> row;\n        field.push_back(row);\n    }\n    for (int r = 0; r < n; r++) {\n        for (int c = 0; c < m; c++) {\n            if (field[r][c] == '.') {\n                if (countBombs(r, c) != 0) {\n                    cout << \"NO\\n\"; return 0;\n                }\n            } else if (field[r][c] == '*') {\n\n            } else {\n                if (countBombs(r, c) != field[r][c] - '0') {\n                    cout << \"NO\\n\"; return 0;\n                }\n            }\n        }\n    }\n    cout << \"YES\\n\";\n}"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1100", "interactive": false}