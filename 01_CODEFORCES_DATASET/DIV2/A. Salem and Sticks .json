{
    "link": "https://codeforces.com//contest/1105/problem/A",
    "problemId": "284894",
    "problem_idx": "A",
    "shortId": "1105A",
    "contest_number": "1105",
    "problem_submissions": {
        "E": [
            48620322,
            48620801,
            48627331,
            48625937,
            48626240,
            48621486,
            48622249,
            48628056,
            48633102,
            48628188,
            48631669,
            48628460,
            48634987,
            48628398,
            48633326,
            48655121,
            48633590,
            48617721,
            48626954,
            48628874,
            48630576
        ],
        "D": [
            48616818,
            48615146,
            48617750,
            48616118,
            48617724,
            48622970,
            48619041,
            48619086,
            48622750,
            48620456,
            48624388,
            48621628,
            48623556,
            48621076,
            48620990,
            48622287,
            48622764,
            48624162,
            48623494,
            48618308
        ],
        "C": [
            48610690,
            48610244,
            48611290,
            48612291,
            48612786,
            48613707,
            48615573,
            48612747,
            48614232,
            48613816,
            48615442,
            48612205,
            48616806,
            48617252,
            48615059,
            48613686,
            48623666,
            48614080,
            48615466,
            48612894
        ],
        "B": [
            48609141,
            48608646,
            48609160,
            48610767,
            48610712,
            48609901,
            48611122,
            48609473,
            48610473,
            48609258,
            48611792,
            48609717,
            48612036,
            48610022,
            48609557,
            48611005,
            48624281,
            48610791,
            48613028,
            48610193
        ],
        "A": [
            48608469,
            48608122,
            48608173,
            48608145,
            48608339,
            48608495,
            48609263,
            48608223,
            48608574,
            48608192,
            48608757,
            48608186,
            48608633,
            48608202,
            48608401,
            48608383,
            48625139,
            48608354,
            48609689,
            48608198
        ]
    },
    "name": "A. Salem and Sticks ",
    "statement": "Salem gave you n sticks with integer positive lengths a_1, a_2,\r\nldots, a_n.For every stick, you can change its length to any other\r\npositive integer length (that is, either shrink or stretch it). The cost\r\nof changing the stick\u2019s length from a to b is |a - b|, where |x| means\r\nthe absolute value of x.A stick length a_i is called for some integer t\r\nif |a_i - t|\r\nle 1.Salem asks you to change the lengths of some sticks (possibly all\r\nor none), such that all sticks\u2019 lengths are almost good for some\r\npositive integer t and the total cost of changing is minimum possible.\r\nThe value of t is not fixed in advance and you can choose it as any\r\npositive integer. As an answer, print the value of t and the minimum\r\ncost. If there are multiple optimal choices for t, print any of them.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define SZ(x) ((int)x.size())\n#define FOR(i,a,b) for (int i=a;i<=b;++i)\n#define FORD(i,a,b) for (int i=a;i>=b;--i)\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int,int> pa;\ntypedef vector<int> vec;\nvoid getint(int &v){\n    char ch,fu=0;\n    for(ch='*'; (ch<'0'||ch>'9')&&ch!='-'; ch=getchar());\n    if(ch=='-') fu=1, ch=getchar();\n    for(v=0; ch>='0'&&ch<='9'; ch=getchar()) v=v*10+ch-'0';\n    if(fu) v=-v;\n}\nconst int INF=1e9+10;\nint ans,t,n,ANS,a[500010];\nint main(){\n//\tfreopen(\"t.in\",\"r\",stdin);\n//\tfreopen(\"t.out\",\"w\",stdout);\n\tcin>>n;\n\tFOR(i,1,n) getint(a[i]);\n\tANS=INF;\n\tFOR(i,1,200){\n\t\tt=0;\n\t\tFOR(j,1,n)\n\t\t\tif (a[j]<i-1) t+=i-1-a[j];\n\t\t\telse if (a[j]>i+1) t+=a[j]-i-1;\n\t\tif (t<ANS){\n\t\t\tans=i;\n\t\t\tANS=t;\n\t\t}\n\t}\n\tcout<<ans<<' '<<ANS<<endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Salem and Sticks .json",
    "editorial_link": "https://codeforces.com//blog/entry/64664",
    "editorial": "Firstly, we must find the value of and it can easily proven that is less\r\nthan or equal to , so we can iterate over all possible value of from to\r\nand calculate the cost of making all the sticks almost good for that\r\n.That works in .\r\n"
}