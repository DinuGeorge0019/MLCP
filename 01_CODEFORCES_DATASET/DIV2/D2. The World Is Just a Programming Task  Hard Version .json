{"link": "https://codeforces.com//contest/1248/problem/D2", "problemId": "445266", "problem_idx": "D2", "shortId": "1248D2", "contest_number": "1248", "problem_submissions": {"D1": [62994883, 62993569, 62992994, 62997000, 62994405, 62997123, 62999879, 62995062, 63003271, 63000150, 62999671, 62994350, 62998586, 63000530, 62992886, 63075982, 63072868, 62991824, 63006771], "F": [62993845, 62998618, 63004376, 63001516, 63005145, 63007254, 63006725, 63065814, 63007421, 63002656, 63007898, 63005627, 63007696, 63008967, 63006462, 63004460, 63011504, 63004125, 63006964], "E": [62985708, 63073739, 63003347, 63018519, 63004851], "B": [62982231, 62980110, 62981055, 62979292, 62979961, 62980992, 62979799, 62981220, 62982692, 62978096, 62982064, 62982362, 62978497, 62981072, 62981976, 62984594, 63075956, 62980955, 62980611, 62983563, 62990769], "A": [62979317, 62977969, 62978225, 62977588, 62977692, 62977600, 62977679, 62978301, 62980908, 62977684, 62981014, 62982770, 62977469, 62977721, 62977859, 62979794, 63075933, 62977868, 62980509, 62980376, 62988720], "C": [62977501, 62984679, 62987113, 62992373, 62990888, 62990326, 62991798, 62987434, 62987346, 62987305, 62995225, 62994509, 63000614, 62991483, 62996125, 63009114, 62993964, 62985766, 62994340, 62987126], "D2": [63072452, 63005552]}, "name": "D2. The World Is Just a Programming Task  Hard Version ", "statement": "This is a harder version of the problem. In this version, n\r\nle 300\r\n,000.Vasya is an experienced developer of programming competitions\u2019\r\nproblems. As all great minds at some time, Vasya faced a creative\r\ncrisis. To improve the situation, Petya gifted him a string consisting\r\nof opening and closing brackets only. Petya believes, that the beauty of\r\nthe bracket string is a number of its cyclical shifts, which form a\r\ncorrect bracket sequence.To digress from his problems, Vasya decided to\r\nselect two positions of the string () and swap characters located at\r\nthis positions with each other. Vasya will apply this operation exactly\r\nonce. He is curious what is the maximum possible beauty he can achieve\r\nthis way. Please help him.We remind that bracket sequence s is called\r\ncorrect if: s is empty; s is equal to \"t\", where t is correct bracket\r\nsequence; s is equal to t_1 t_2, i.e. concatenation of t_1 and t_2,\r\nwhere t_1 and t_2 are correct bracket sequences. For example, \"\", \"\" are\r\ncorrect, while \"\" and \"\" are not.The cyclical shift of the string s of\r\nlength n by k (0\r\nleq k < n) is a string formed by a concatenation of the last k symbols\r\nof the string s with the first n - k symbols of string s. For example,\r\nthe cyclical shift of string \"\" by 2 equals \"\".Cyclical shifts i and j\r\nare considered different, if i\r\nne j.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nconst int N=3e5+5;\ntypedef int arr[N];\nint n,sL=1,sR=1,Mid,Min,Num,Top,Ans;\narr L,R,fa,stk,Cnt;\nchar c[N],s[N];\nint main(){\n\t#ifndef ONLINE_JUDGE\n\t\tfile(\"s\");\n\t#endif\n\tscanf(\"%d\\n\",&n);gets(c+1);\n\tfp(i,1,n){\n\t\tc[i]=='('?++Top:--Top;\n\t\tif(Top<Min)Min=Top,Mid=i;\n\t}\n\tif(Top)return puts(\"0\\n1 1\"),0;\n\tfp(i,Mid+1,n)s[i-Mid]=c[i];\n\tfp(i,1,Mid-1)s[i+n-Mid]=c[i];\n\tfp(i,1,n)\n\t\tif(s[i]=='(')stk[++Top]=++Num,L[Num]=i;\n\t\telse R[stk[Top]]=i,fa[stk[Top]]=stk[Top-1],++Cnt[stk[--Top]];\n\tAns=Cnt[0];\n\tfp(i,1,Num)\n\t\tif(Cnt[i]+1>Ans&&!fa[i])Ans=Cnt[i]+1,sL=L[i],sR=R[i];\n\t\telse if(Cnt[0]+Cnt[i]+1>Ans&&fa[i]&&!fa[fa[i]])Ans=Cnt[0]+Cnt[i]+1,sL=L[i],sR=R[i];\n\t(sL+=Mid)>n?sL-=n:0,(sR+=Mid)>n?sR-=n:0;\n\tprintf(\"%d\\n%d %d\",Ans,sL,sR);\nreturn 0;\n}"], "input": "", "output": "", "tags": [], "dificulty": "2500", "interactive": false}