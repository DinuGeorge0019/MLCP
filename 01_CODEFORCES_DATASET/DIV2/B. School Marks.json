{
    "link": "https://codeforces.com//contest/540/problem/B",
    "problemId": "26987",
    "problem_idx": "B",
    "shortId": "540B",
    "contest_number": "540",
    "problem_submissions": {
        "E": [
            10950082,
            10942556,
            10951035,
            10952383,
            10951664,
            10948964,
            10952277,
            10951669,
            10951944,
            10983800,
            10953155,
            11577591,
            10950708,
            10959502,
            10959369,
            10949750,
            10950320,
            10951075,
            10955881,
            10955706,
            10948813
        ],
        "D": [
            10947922,
            10944160,
            10947124,
            10947070,
            10947798,
            10941308,
            10948944,
            10944336,
            10946886,
            10946947,
            10949570,
            10959819,
            10950615,
            10948080,
            10945713,
            10950893,
            10948099,
            10946895,
            10951818
        ],
        "C": [
            10944700,
            10945032,
            10944296,
            10945350,
            10951612,
            10946322,
            10949663,
            10954145,
            10962540,
            10944690,
            10944805,
            10959319,
            10950587,
            10948967,
            10953843,
            10947752,
            10960817,
            10948058,
            10945550
        ],
        "B": [
            10942652,
            10942383,
            10948312,
            10942705,
            10949878,
            10942945,
            10950444,
            10942965,
            10962010,
            10943162,
            10942463,
            10958996,
            10943265,
            10953368,
            10944155,
            10957408,
            10953391,
            10944270,
            10952996
        ],
        "A": [
            10940515,
            10940359,
            10941183,
            10940296,
            10949371,
            10940424,
            10950781,
            10940505,
            10961698,
            10940642,
            10940766,
            10947479,
            10940747,
            10940350,
            10941583,
            10943114,
            10940385,
            10940561,
            10940442
        ]
    },
    "name": "B. School Marks",
    "statement": "Little Vova studies programming in an elite school. Vova and his\r\nclassmates are supposed to write progress tests, for each test they will\r\nget a mark from 1 to . Vova is very smart and he can write every test\r\nfor any mark, but he doesn’t want to stand out from the crowd too much.\r\nIf the sum of his marks for all tests exceeds value , then his\r\nclassmates notice how smart he is and start distracting him asking to\r\nlet them copy his homework. And if the median of his marks will be lower\r\nthan points , then his mom will decide that he gets too many bad marks\r\nand forbid him to play computer games.Vova has already wrote tests and\r\ngot marks . He doesn’t want to get into the first or the second\r\nsituation described above and now he needs to determine which marks he\r\nneeds to get for the remaining tests. Help him do that.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define sz(x) int((x).size())\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int,int> PII;\ntypedef std::pair<ll,ll> PLL;\n\ntemplate<class T> inline T pr(T x) { return --x; }\ntemplate<class T> inline T nx(T x) { return ++x; }\n\nconst int maxn = 1010;\nint n,K,p,x,y,cnt,c1,cy,a[maxn],sum;\n\nint main() {\n    int i,j,k,t,tt,T,Test;\n    scanf(\"%d%d%d%d%d\",&n,&K,&p,&x,&y);\n    for (i=1; i<=K; ++i) {\n        scanf(\"%d\",a+i);\n        if (a[i]<y) ++cnt;\n        sum += a[i];\n    }\n    if (cnt<=n/2) {\n        c1 = min(n/2-cnt,n-K);\n        cy = n-c1-K;\n        sum += c1 + cy*y;\n        if (sum>x) { puts(\"-1\"); return 0; }\n        for (i=1; i<=c1; ++i) printf(\"%d \",1);\n        for (i=1; i<=cy; ++i) printf(\"%d \",y);\n        puts(\"\");\n    }\n    else puts(\"-1\");\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. School Marks.json",
    "editorial_link": "https://codeforces.com//blog/entry/17643",
    "editorial": "First count the number of marks that are less than . If there are more\r\nthan such marks, we canât satisfy the second condition (about the\r\nmedian), and the answer is -1. Otherwise we can get exactly such number\r\nof marks so that the total number of marks greater than or equal to is\r\nat least (maybe itâs already satisfied). This is the required action for\r\nsatisfying the second condition. Now, in order not to break the first\r\ncondition, get the remaining marks as lower as possible all ones and\r\ncheck the sum of the marks. If it is greater than , the answer is -1,\r\notherwise the correct answer is found.\r\n",
    "hint": []
}