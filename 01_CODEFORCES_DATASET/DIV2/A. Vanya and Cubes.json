{
    "link": "https://codeforces.com//contest/492/problem/A",
    "problemId": "18578",
    "problem_idx": "A",
    "shortId": "492A",
    "contest_number": "492",
    "problem_submissions": {
        "E": [
            8915457,
            8914122,
            8917715,
            8916047,
            8917757,
            8918412,
            8917582,
            8919910,
            8913733,
            8945734,
            8945423,
            8920886,
            8919366,
            8920260,
            8919133,
            8920397,
            8919187,
            8920806,
            8919539,
            8921077,
            8921934
        ],
        "D": [
            8913356,
            8916465,
            8913564,
            8914628,
            8914266,
            8914408,
            8912061,
            8910632,
            8918767,
            8913344,
            8915638,
            8916135,
            8916766,
            8916438,
            8915220,
            8915286,
            8916886,
            8917454,
            8917739
        ],
        "C": [
            8910624,
            8909838,
            8909601,
            8912252,
            8910611,
            8911186,
            8915041,
            8908530,
            8914611,
            8909295,
            8911918,
            8910132,
            8911301,
            8912842,
            8912861,
            8911663,
            8913142,
            8910971,
            8913262
        ],
        "B": [
            8909381,
            8908208,
            8907647,
            8910262,
            8907261,
            8908893,
            8907645,
            8912930,
            8915032,
            8907902,
            8908202,
            8908416,
            8909315,
            8911481,
            8909898,
            8910269,
            8911619,
            8909443,
            8908929
        ],
        "A": [
            8907155,
            8907045,
            8906595,
            8906893,
            8906486,
            8907388,
            8907233,
            8911410,
            8914766,
            8906823,
            8906863,
            8906683,
            8907275,
            8906710,
            8907951,
            8907412,
            8909735,
            8907384,
            8907309
        ]
    },
    "name": "A. Vanya and Cubes",
    "statement": "Vanya got cubes. He decided to build a pyramid from them. Vanya wants to\r\nbuild the pyramid as follows: the top level of the pyramid must consist\r\nof cube, the second level must consist of cubes, the third level must\r\nhave cubes, and so on. Thus, the -th level of the pyramid must have\r\ncubes.Vanya wants to know what is the maximum height of the pyramid that\r\nhe can make using the given cubes.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint f[200] = {}, p[200] = {};\n\tfor(int i = 1 ; i < 200 ; i++){\n\t\tf[i] = i + f[i-1];\n\t\tp[i] = f[i] + p[i-1];\n\n\t}\n\tint n;\n\tcin >> n;\n\tcout << upper_bound(p, p+200, n) - p - 1<< endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Vanya and Cubes.json",
    "editorial_link": "https://codeforces.com/blog/entry/14957",
    "editorial": "In fact need to do what is asked in the statement. We need to find in a\r\ncycle the maximum height , counting, how many blocks must be in -th row\r\nand adding these values to the result. Iterate until the result is not\r\ngreater than . Jury\u00e2\u0080\u0099s solution: 8924831\r\n"
}