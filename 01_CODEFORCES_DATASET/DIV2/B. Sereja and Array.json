{
    "link": "https://codeforces.com//contest/315/problem/B",
    "problemId": "3134",
    "problem_idx": "B",
    "shortId": "315B",
    "contest_number": "315",
    "problem_submissions": {
        "D": [
            3839378,
            3835996,
            3836633,
            3840727,
            3839410,
            3842603,
            3840070,
            3842376,
            3840954,
            3840951,
            3847146,
            3854666
        ],
        "E": [
            3839105,
            3840643,
            3838934,
            3841894,
            3842575,
            3854729
        ],
        "B": [
            3836129,
            3832463,
            3834203,
            3833545,
            3833336,
            3831852,
            3833749,
            3835799,
            3831777,
            3842650,
            3835295,
            3833206,
            3833365,
            3834515,
            3835102,
            3833302,
            3834530
        ],
        "A": [
            3834029,
            3831727,
            3832271,
            3832136,
            3837854,
            3833804,
            3832476,
            3842652,
            3833993,
            3832140,
            3847870,
            3832027,
            3839153,
            3831978,
            3832841
        ],
        "C": [
            3834613,
            3839057,
            3836478,
            3837667,
            3841764,
            3835892,
            3840284,
            3834922,
            3842622,
            3841180,
            3838323,
            3835768,
            3836939,
            3838736,
            3837885,
            3839838
        ]
    },
    "name": "B. Sereja and Array",
    "statement": "Sereja has got an array, consisting of integers, . Sereja is an active\r\nboy, so he is now going to complete operations. Each operation will have\r\none of the three forms: Make -th array element equal to . In other\r\nwords, perform the assignment . Increase each array element by . In\r\nother words, perform assignments . Take a piece of paper and write out\r\nthe -th array element. That is, the element . Help Sereja, complete all\r\nhis operations.\r\n",
    "solutions": [
        "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<functional>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nconst int Riven=100000+500;\nstruct RVe{\n    int L,R;\n    int add;\n    int value;\n    RVe *oianweor,*mnohuo;\n};\nRVe RVePool[Riven<<4]={0};\nRVe *mouq=RVePool;\nRVe *NewNode()\n{\n    return mouq++;\n}\nRVe *root=NULL;\nvoid BuildTree(RVe *&root,int l,int r)\n{\n    root=NewNode();\n    root->L=l;\n    root->R=r;\n    root->add=0;\n    root->value=0;\n    if(l==r)\n    {\n        cin>>root->value;\n        return;\n    }\n    int mid=(l+r)>>1;\n    BuildTree(root->oianweor,l,mid);\n    BuildTree(root->mnohuo,mid+1,r);\n}\nvoid PushDown(RVe *root)\n{\n    root->oianweor->add+=root->add;\n    root->mnohuo->add+=root->add;\n    root->add=0;\n}\nvoid update(RVe *root,int &P,int &V)\n{\n    if(root->L==root->R && root->L==P)\n    {\n        root->add=0;\n        root->value=V;\n        return ;\n    }\n    PushDown(root);\n    int mid=(root->L+root->R)>>1;\n    if(P<=mid)\n        update(root->oianweor,P,V);\n    else\n        update(root->mnohuo,P,V);\n}\nint query(RVe *root,int &P)\n{\n    if(root->L==root->R && root->L==P)\n    {\n        root->value+=root->add;\n        root->add=0;\n        return root->value;\n    }\n    PushDown(root);\n    int mid=(root->L+root->R)>>1;\n    if(P<=mid)\n        return query(root->oianweor,P);\n    else\n        return query(root->mnohuo,P);\n}\nint n,m;\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    BuildTree(root,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        int o,a,b;\n        cin>>o;\n        if(o==3)\n        {\n            cin>>a;\n            cout<<query(root,a)<<endl;\n        }\n        if(o==2)\n        {\n            cin>>a;\n            root->add+=a;\n        }\n        if(o==1)\n        {\n            cin>>a>>b;\n            update(root,a,b);\n        }\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sereja and Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/7905",
    "editorial": "We will support all of the elements in the array, but also we will supprt additionally variable add: how much to add to all the elements. Then to add some value to every element we simply increase the add. In the derivation we deduce the value of the array element + add. When you update the item we put to a value, value that you need to put minus the current value of add.\n",
    "hint": []
}