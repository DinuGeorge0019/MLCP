{"link": "https://codeforces.com//contest/1182/problem/C", "problemId": "356988", "problem_idx": "C", "shortId": "1182C", "contest_number": "1182", "problem_submissions": {"D": [55455650, 55586970, 55459316, 55455659, 55458949, 55453924, 55478512, 55482188, 55498428, 55481213, 55567538, 55453786], "E": [55450747, 55461164, 55449899, 55449075, 55460684, 55454104, 55453180, 55453677, 55453916, 55451090, 55454249, 55453623, 55476218, 55446106, 55449885, 55454784, 55483027, 55456083, 55457367, 55456526], "A": [55445533, 55434238, 55434241, 55436061, 55434955, 55434411, 55437033, 55434181, 55435131, 55435071, 55434914, 55434583, 55476206, 55434538, 55436427, 55434458, 55434180, 55434233, 55434292, 55434474], "B": [55445010, 55437924, 55440985, 55440064, 55439189, 55438618, 55443275, 55439911, 55437513, 55438913, 55441336, 55438725, 55438778, 55476210, 55439290, 55442014, 55440569, 55438740, 55438330, 55438657, 55438254], "C": [55442056, 55444294, 55448723, 55461519, 55444763, 55447324, 55449390, 55446594, 55444945, 55447149, 55449216, 55447861, 55449136, 55476215, 55459225, 55455453, 55447166, 55483042, 55444199, 55447099, 55446909, 55445149], "F": [55479857]}, "name": "C. Beautiful Lyrics", "statement": "You are given n words, each of which consists of lowercase alphabet\r\nletters. Each word one vowel. You are going to choose some of the given\r\nwords and make as many beautiful lyrics as possible.Each consists of two\r\nlines. Each consists of two words separated by whitespace. A lyric is if\r\nand only if it satisfies all conditions below. The number of vowels in\r\nthe first word of the first line is the same as the number of vowels in\r\nthe first word of the second line. The number of vowels in the second\r\nword of the first line is the same as the number of vowels in the second\r\nword of the second line. The last vowel of the first line is the same as\r\nthe last vowel of the second line. Note that there may be consonants\r\nafter the vowel. Also, letters \"\", \"\", \"\", \"\", and \"\" are vowels. Note\r\nthat \"\" is vowel.For example of a beautiful lyric, \"\" \"\" is a beautiful\r\nlyric because there are two vowels each in \"\" and \"\", four vowels each\r\nin \"\" and \"\" (keep in mind that \"\" is not a vowel), and the last vowel\r\nof each line is \"\".For example of a not beautiful lyric, \"\"\"\" is not a\r\nbeautiful lyric because \"\" and \"\" don\u2019t have same number of vowels and\r\nthe last vowels of two lines are different (\"\" in the first and \"\" in\r\nthe second).How many beautiful lyrics can you write from given words?\r\nNote that you cannot use a word more times than it is given to you. For\r\nexample, if a word is given three times, you can use it at most three\r\ntimes.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpii;\ntypedef map<int,int> mii;\n#define itr iterator\nchar _s[2222222],*s[1111111];\nint v[333];\nstruct P{int i,tl,cc,used;}op[111111];\nint cop;\ninline bool operator<(const P&a,const P&b)\n{\n\tif(a.used>b.used)return 1;\n\tif(a.used<b.used)return 0;\n\tif(a.cc<b.cc)return 1;\n\tif(a.cc>b.cc)return 0;\n\treturn a.tl<b.tl;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tv['a']=1;\n\tv['e']=2;\n\tv['i']=3;\n\tv['o']=4;\n\tv['u']=5;\n\ts[1]=_s;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%s\",s[i]);\n\t\tint m=strlen(s[i]);\n\t\ts[i+1]=s[i]+m+3;\n\t\tint cc=0,tl=0;\n\t\tfor(int j=0;j<m;++j)\n\t\t{\n\t\t\tif(v[s[i][j]])\n\t\t\t{\n\t\t\t\t++cc;\n\t\t\t\ttl=v[s[i][j]];\n\t\t\t}\n\t\t}\n\t\top[cop++]=(P){i,tl,cc,0};\n\t}\n\tsort(op,op+cop);\n\tint cp=0;\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tif(op[i].cc==op[i+1].cc&&op[i].tl==op[i+1].tl&&!op[i].used)\n\t\t{\n\t\t\top[i].used=2;\n\t\t\top[i+1].used=2;\n\t\t\t++cp;\n\t\t}\n\t}\n\tint res=cp;\n\tsort(op,op+cop);\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tif(op[i].cc==op[i+1].cc&&!op[i].used&&!op[i+1].used)\n\t\t{\n\t\t\top[i].used=1;\n\t\t\top[i+1].used=1;\n\t\t\t++cp;\n\t\t}\n\t}\n\tsort(op,op+cop);\n\tif(cp/2<res)res=cp/2;\n\tprintf(\"%d\\n\",res);\n\tfor(int i=0,j=0;j<res;i+=2,++j)\n\t{\n\t\tprintf(\"%s %s\\n%s %s\\n\",s[op[cp*2-i-1].i],s[op[i].i],s[op[cp*2-i-2].i],s[op[i+1].i]);\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "greedy", "strings"], "dificulty": "1700", "interactive": false}