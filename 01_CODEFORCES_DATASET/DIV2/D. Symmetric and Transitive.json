{"link": "https://codeforces.com//contest/569/problem/D", "problemId": "32821", "problem_idx": "D", "shortId": "569D", "contest_number": "569", "problem_submissions": {"D": [12451165, 12450616, 12452619, 12451748, 12454058, 12454055, 12450824, 12453344, 12454125, 12453492, 12454982, 12450355, 12453319, 12453118, 12454807, 12450557], "C": [12447555, 12447440, 12446286, 12450609, 12448754, 12448371, 12453497, 12447557, 12449573, 12449507, 12448199, 12455359, 12451752, 12451437, 12449926, 12443375], "B": [12442888, 12442303, 12443400, 12442960, 12443569, 12443790, 12444489, 12442625, 12444998, 12444217, 12444002, 12441907, 12445343, 12445895, 12447002, 12451661], "A": [12441876, 12443235, 12441599, 12441719, 12442173, 12441720, 12442545, 12449386, 12443416, 12441622, 12442046, 12443321, 12443414, 12441491, 12442970]}, "name": "D. Symmetric and Transitive", "statement": "Little Johnny has recently learned about set theory. Now he is studying\r\nbinary relations. You\u2019ve probably heard the term \"equivalence relation\".\r\nThese relations are very important in many areas of mathematics. For\r\nexample, the equality of the two numbers is an equivalence relation.A\r\nset of pairs of elements of some set is called a binary relation on set\r\n. For two elements and of the set we say that they are in relation , if\r\npair , in this case we use a notation .Binary relation is , if: It is\r\nreflexive (for any it is true that ); It is symmetric (for any , it is\r\ntrue that if , then ); It is transitive (if and , than ).Little Johnny\r\nis not completely a fool and he noticed that the first condition is not\r\nnecessary! Here is his \"proof\":Take any two elements, and . If , then\r\n(according to property (2)), which means (according to property\r\n(3)).It\u2019s very simple, isn\u2019t it? However, you noticed that Johnny\u2019s\r\n\"proof\" is wrong, and decided to show him a lot of examples that prove\r\nhim wrong.Here\u2019s your task: count the number of binary relations over a\r\nset of size such that they are symmetric, transitive, but not an\r\nequivalence relations (i.e. they are not reflexive).Since their number\r\nmay be very large (not , according to Little Johnny), print the\r\nremainder of integer division of this number by .\r\n", "solutions": ["/* In the name of Allah */\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int max_n=4e3+5;\n\nlong long c[max_n][max_n];\nlong long mod= 1e9+7;\nlong long p2[max_n];\nlong long f[max_n];\nint main()\n{\n    int n;\n    cin >> n;\n    for(int i=1;i<max_n;i++)\n    {\n        c[0][i]=1;\n        c[i][i]=1;\n        for(int j=1;j<i;j++)\n            c[j][i]=(c[j-1][i-1]+c[j][i-1])%mod;\n    }\n    for(int i=1;i<max_n;i++)\n        p2[i]=(2*p2[i-1]+1)%mod;\n    f[0]=1;\n    f[1]=0;\n    for(int i=2;i<max_n;i++)\n        for(int j=i-2;j>=0;j--)\n            f[i]=(f[i]+c[i-j-1][i-1]*f[j])%mod;\n    long long ans=0;\n    long long id;\n    for(int i=1;i<=n;i++)\n    {\n        ans=(ans+((c[i][n]*p2[i])%mod)*f[n-i])%mod;\n    }\n    cout<< ans;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "math"], "dificulty": "1900", "interactive": false}