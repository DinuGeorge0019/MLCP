{
    "link": "https://codeforces.com//contest/1106/problem/A",
    "problemId": "290930",
    "problem_idx": "A",
    "shortId": "1106A",
    "contest_number": "1106",
    "problem_submissions": {
        "F": [
            49265817,
            49264923,
            49266558,
            49269257,
            49271213,
            49272184,
            49272969,
            49267903,
            49273554,
            49895559,
            49298045,
            49263114,
            49273336,
            49274102,
            49274867,
            49300428,
            49276394,
            49277229,
            49269016,
            49266937,
            49277423,
            49277280,
            49269846
        ],
        "E": [
            49261808,
            49267815,
            49266852,
            49261526,
            49261539,
            49258516,
            49262159,
            49269184,
            49261973,
            49895562,
            49273364,
            49263914,
            49261370,
            49261525,
            49300401,
            49261737,
            49261915,
            49273907,
            49276075,
            49262981,
            49266273,
            49276021
        ],
        "B": [
            49257277,
            49252209,
            49248876,
            49251236,
            49256788,
            49251411,
            49251144,
            49255473,
            49251954,
            49895487,
            49263583,
            49254902,
            49252783,
            49253845,
            49300101,
            49250570,
            49252035,
            49259947,
            49251497,
            49253887,
            49260721,
            49251319
        ],
        "D": [
            49252880,
            49254281,
            49252504,
            49255122,
            49251697,
            49253429,
            49254193,
            49257749,
            49255378,
            49895514,
            49296674,
            49250135,
            49257979,
            49256084,
            49256833,
            49300300,
            49255435,
            49255524,
            49255367,
            49255410,
            49258191,
            49255067,
            49255106
        ],
        "C": [
            49249200,
            49252258,
            49250171,
            49253405,
            49249251,
            49247144,
            49252242,
            49250452,
            49253463,
            49895495,
            49252232,
            49249038,
            49255058,
            49255040,
            49300208,
            49300199,
            49252907,
            49253665,
            49252133,
            49253357,
            49255807,
            49250684,
            49253071
        ],
        "A": [
            49246544,
            49245865,
            49245896,
            49246235,
            49246566,
            49245858,
            49246274,
            49248820,
            49246242,
            49895480,
            49249300,
            49246352,
            49247004,
            49246275,
            49300057,
            49300056,
            49246548,
            49246161,
            49246888,
            49246017,
            49246734,
            49261784,
            49245817
        ]
    },
    "name": "A. Lunar New Year and Cross Counting",
    "statement": "This matrix M of size n\r\ntimes n contains only ” and ” (without quotes). The element in the i-th\r\nrow and the j-th column (i, j) is defined as M(i, j), where 1\r\nleq i, j\r\nleq n. We define a appearing in the i-th row and the j-th column (1 < i,\r\nj < n) if and only if M(i, j) = M(i - 1, j - 1) = M(i - 1, j + 1) =\r\nM(i + 1, j - 1) = M(i + 1, j + 1) = ”.The following figure illustrates a\r\ncross appearing at position (2, 2) in a 3\r\ntimes 3 matrix. X.X.X.X.X Your task is to find out the number of in the\r\ngiven matrix M. Two are different if and only if they appear in\r\ndifferent rows or columns.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 550;\nchar s[N][N];\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> s[i] + 1;\n\tint cn = 0;\n\tfor (int i = 2; i < n; i++)\n\t\tfor (int j = 2; j < n; j++) {\n\t\t\tif (s[i][j] == 'X' && s[i - 1][j - 1] == 'X' && s[i - 1][j + 1] == 'X' && s[i + 1][j - 1] == 'X' && s[i + 1][j + 1] == 'X') cn++;\n\t\t}\n\tcout << cn << endl;\t\t\n\treturn 0;\n}\n\t"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Lunar New Year and Cross Counting.json",
    "editorial_link": "https://codeforces.com/blog/entry/64928",
    "editorial": "The solution is simple: Just check if can appear in every positions. Two\r\nnesting for-loops will be enough to solve this problem.\r\n",
    "hint": []
}