{"link": "https://codeforces.com//contest/1820/problem/A", "problemId": "1880609", "problem_idx": "A", "shortId": "1820A", "contest_number": "1820", "problem_submissions": {"E": [202221495, 202224197, 202223650, 202221055, 202211278, 202210773, 202210525, 202392193, 202234544, 202241741], "D": [202204493, 202203834, 202204941, 202200357, 202224521, 202196714, 202201649, 202201288, 202205548, 202208808, 202207552, 202206152, 202208768, 202210206, 202204088, 202209173, 202204193, 202208143], "C": [202188210, 202190438, 202191871, 202204067, 202186370, 202194680, 202193928, 202184998, 202190422, 202190852, 202188780, 202191686, 202189589, 202189497, 202191313, 202189933, 202193203, 202191781, 202192559, 202193037], "B": [202184059, 202186314, 202188694, 202185290, 202181971, 202185877, 202195824, 202184988, 202186184, 202184424, 202184282, 202185384, 202184368, 202185406, 202183611, 202187273, 202187259, 202188101, 202186319], "A": [202181070, 202181088, 202184573, 202180673, 202180868, 202181103, 202180754, 202181157, 202181299, 202180503, 202180966, 202180804, 202180777, 202180572, 202180527, 202180589, 202182901, 202184035, 202181508], "F": [202489739, 202420015]}, "name": "A. Yura s New Name", "statement": "After holding one team contest, boy Yura got very tired and wanted to\r\nchange his life and move to Japan. In honor of such a change, Yura\r\nchanged his name to something nice.Fascinated by this idea he already\r\nthought up a name s consisting only of characters \"\" and \"\". But there\u2019s\r\na problem Yura likes smiley faces \"\" and \"\". Therefore any character of\r\nthe name must be a part of at least one such smiley. Note that only the\r\ncharacters of the name can be a smiley face.More formally, consider all\r\noccurrences of the strings \"\" and \"\" in the string s. Then all such\r\noccurrences must cover the whole string s, possibly with intersections.\r\nFor example, in the string \"\" the characters at positions 3,4,9,10 and\r\n11 are not contained inside any smileys, and the other characters at\r\npositions 1,2,5,6,7 and 8 are contained inside smileys.In one operation\r\nJura can insert one of the characters \"\" and \"\" into his name s (you can\r\ninsert it at any position in the string). He asks you to tell him the\r\nminimum number of operations you need to do to make the name fit Yura\u2019s\r\ncriteria.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define FOR(i, n) for (int (i) = 0; (i) < (n); (i)++)\n#define FORI(i, a, b) for (int (i) = (a); (i) < (b); (i)++)\n \nmt19937 rnd(time(0));\n\n#define ll long long\n#define vi vector<int>\n#define vvi vector<vector<int> >\n#define endl '\\n'\n\n#define mp(m, n) make_pair((m), (n))\n \ntemplate<typename T>\nvoid read(vector<T> &t) {FOR(i, t.size()) {cin >> t[i];}}\ntemplate<typename T> string tostring(T a) { istringstream sin; sin >> a; return sin.str(); }\n \n// #define DEBUG\n \n#ifdef DEBUG\ntemplate<typename T>\nvoid _debug(string s, T x) {\n    cerr << s << \":\";\n    for (auto it = x.begin(); it != x.end(); ++it) {\n        cerr << \" \" << *it;\n    }\n    cerr << endl;\n}\n \ntemplate<typename T, typename K>\nvoid _debug(string s, unordered_map<T, K> x) {\n    cerr << s << \":\";\n    for (auto it = x.begin(); it != x.end(); ++it) {\n        cerr << \" \" << it->first << \":\" << it->second;\n    }\n    cerr << endl;\n}\n\ntemplate<typename T, typename K>\nvoid _debug(string s, map<T, K> x) {\n    cerr << s << \":\";\n    for (auto it = x.begin(); it != x.end(); ++it) {\n        cerr << \" \" << it->first << \":\" << it->second;\n    }\n    cerr << endl;\n}\n \ntemplate<typename T, typename K>\nvoid _debug(string s, set<T, K> x) {\n    cerr << s << \":\";\n    for (auto it = x.begin(); it != x.end(); ++it) {\n        cerr << \" \" << *it;\n    }\n    cerr << endl;\n}\n \ntemplate<typename T, typename K>\nvoid _debug(string s, vector<pair<T, K> > x) {\n    cerr << s << \":\";\n    for (auto it = x.begin(); it != x.end(); ++it) {\n        cerr << \" \" << it->first << \",\" << it->second;\n    }\n    cerr << endl;\n}\n\ntemplate<typename T, typename K>\nvoid _debug(string s, pair<T, K> x) {\n    cerr << s << \": \" << x.first << \",\" << x.second << endl;\n}\n \nvoid _debug(string s, int x) {\n    cerr << s << \": \" << x << endl;\n}\nvoid _debug(string s, long long x) {\n    cerr << s << \": \" << x << endl;\n}\nvoid _debug(string s, double x) {\n    cerr << s << \": \" << x << endl;\n}\nvoid _debug(string s, string x) {\n    cerr << s << \": \" << x << endl;\n}\nvoid _debug(string s, char x) {\n    cerr << s << \": \" << x << endl;\n}\nvoid _debug(string s, size_t x) {\n    cerr << s << \": \" << x << endl;\n}\nvoid _debug(string s, bool x) {\n    cerr << s << \": \" << x << endl;\n}\n \n#define debug(x) _debug(#x, (x))\n#else\n#define debug(x)\n#endif\n \n#define db debug\n\ntemplate <class T>\nvoid print(vector<T> &v) {\n    for (int i = 0; i < v.size(); i++) {\n        cout << v[i];\n        if (i == v.size() - 1) {\n            cout << endl;\n        } else {\n            cout << \" \";\n        }\n    }\n}\n\nvoid solve();\n \nvoid pre_init();\n\nint main() {\n    ios_base::sync_with_stdio(false); std::cin.tie(0);\n    pre_init();\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n    cerr<<\"Time:\"<<1000*((double)clock())/(double)CLOCKS_PER_SEC<<\"ms\\n\"; \n}\n \nvoid pre_init() {}\n\nvoid solve() {\n    string s;\n    cin >> s;\n    string s1;\n    int ans = 0;\n    if (s[0] == '_') {\n        s1 = \"^\";\n        ans++;\n    }\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == '_' && s1.back() == '_') {\n            s1 += '^';\n        }\n        s1 += s[i];\n    }\n    if (s1.size() == 1) s1 += '^';\n    if (s1.back() == '_') s1 += '^';\n    debug(s1);\n    cout << s1.size() - s.size() << endl;\n}"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "800", "interactive": false}