{"link": "https://codeforces.com//contest/222/problem/B", "problemId": "1637", "problem_idx": "B", "shortId": "222B", "contest_number": "222", "problem_submissions": {"E": [2114302, 2112427, 2113769, 2118198, 2113138, 2117211, 2116587, 2116925, 2112376, 2112549, 2117600, 2115393, 2116550, 2112090, 2117599, 2114599, 2113354, 2115001, 2116489, 2115394], "D": [2113640, 2115490, 2114107, 2114475, 2116493, 2113562, 2117592, 2115503, 2114322, 2113844, 2115759, 2116789, 2117762, 2114698, 2116546, 2115578, 2112252, 2113514, 2111962, 2114392], "C": [2112582, 2114175, 2116212, 2112540, 2115296, 2116020, 2113930, 2113022, 2117883, 2118828, 2118364, 2128042, 2114721, 2135487], "B": [2110124, 2110976, 2110362, 2110813, 2111132, 2110340, 2110934, 2114259, 2110860, 2110665, 2111315, 2113871, 2110626, 2110122, 2112637, 2111026, 2115073, 2109978, 2113250, 2110096], "A": [2109295, 2109423, 2109374, 2109339, 2110128, 2109729, 2109986, 2117404, 2109976, 2109443, 2111894, 2111710, 2109696, 2115927, 2111503, 2109885, 2115483, 2109309, 2111536, 2109416]}, "name": "B. Cosmic Tables", "statement": "The Free Meteor Association (FMA) has got a problem: as meteors are\r\nmoving, the Universal Cosmic Descriptive Humorous Program (UCDHP) needs\r\nto add a special module that would analyze this movement. UCDHP stores\r\nsome secret information about meteors as an table with integers in its\r\ncells. The order of meteors in the Universe is changing. That\u2019s why the\r\nmain UCDHP module receives the following queries: The query to swap two\r\ntable rows; The query to swap two table columns; The query to obtain a\r\nsecret number in a particular table cell. As the main UCDHP module is\r\ncritical, writing the functional of working with the table has been\r\ncommissioned to you.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <map>\n#include <vector>\n\nusing namespace std;\n\nint r[ 1001 ], c[ 1001 ], rh[ 1001 ], ch[ 1001 ];\nint a[ 1001 ][ 1001 ];\n\nint main( )\n{\n\tint n, m, x, y, i, j, q, t;\n\tchar cmd[ 2 ];\n\tscanf(\"%d%d%d\", &n, &m, &q);\n\tfor ( i = 0; i < n; i++ )\n\t\tfor ( j = 0; j < m; j++ )\n\t\t\tscanf(\"%d\", &a[ i ][ j ]);\n\tfor ( i = 0; i < n; i++ )\n\t\tr[ i ] = rh[ i ] = i;\n\tfor ( i = 0; i < m; i++ )\n\t\tc[ i ] = ch[ i ] = i;\n\twhile ( q-- )\n\t{\n\t\tscanf(\"%s%d%d\", cmd, &x, &y); x--; y--;\n\t\tif ( cmd[ 0 ] == 'c' )\n\t\t{\n\t\t\tt = c[ x ];\n\t\t\tc[ x ] = c[ y ];\n\t\t\tc[ y ] = t;\n\t\t}\n\t\tif ( cmd[ 0 ] == 'r' )\n\t\t{\n\t\t\tt = r[ x ];\n\t\t\tr[ x ] = r[ y ];\n\t\t\tr[ y ] = t;\n\t\t}\n\t\tif ( cmd[ 0 ] == 'g' )\n\t\t\tprintf(\"%d\\n\", a[ r[ x ] ][ c[ y ] ]);\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "implementation"], "dificulty": "1300", "interactive": false}