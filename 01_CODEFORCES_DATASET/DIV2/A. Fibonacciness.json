{
    "link": "https://codeforces.com//contest/2060/problem/A",
    "problemId": "3147466",
    "problem_idx": "A",
    "shortId": "2060A",
    "contest_number": "2060",
    "problem_submissions": {
        "G": [
            301873530,
            301859046,
            301852803,
            301886996,
            301829945,
            301884074,
            301865362,
            301944483,
            301877663
        ],
        "F": [
            301809977,
            301827952,
            301788384,
            301831904,
            301878286,
            301872767,
            301850953,
            301874252,
            301811774,
            301816800,
            301831940,
            301815743,
            301889712,
            301854030,
            301836262,
            301832755,
            301848647,
            301843962,
            301841616,
            301902407
        ],
        "E": [
            301780977,
            301790293,
            301841004,
            301786821,
            301854824,
            301815095,
            301816295,
            301758990,
            301799665,
            301795284,
            301801086,
            301920235,
            301889573,
            301794741,
            301799175,
            301804483,
            301807413,
            301794652,
            301768541
        ],
        "D": [
            301771562,
            301772155,
            301822748,
            301775745,
            301785461,
            301801939,
            301852011,
            301776457,
            301782878,
            301769755,
            301787487,
            301917787,
            301889434,
            301776569,
            301786371,
            301790878,
            301764610,
            301773754,
            301756989
        ],
        "C": [
            301748633,
            301761322,
            301773736,
            301772188,
            301769620,
            301776760,
            301770890,
            301782439,
            301749719,
            301754417,
            301759048,
            301774305,
            301916945,
            301889316,
            301755362,
            301775118,
            301772704,
            301748352,
            301760800,
            301753236
        ],
        "B": [
            301746021,
            301755202,
            301761527,
            301755925,
            301795537,
            301759408,
            301745641,
            301745397,
            301750029,
            301750098,
            301915984,
            301888995,
            301750358,
            301751304,
            301755984,
            301781169,
            301750274,
            301748735
        ],
        "A": [
            301739564,
            301739279,
            301761253,
            301738865,
            301749974,
            301743163,
            301743222,
            301739250,
            301739375,
            301743095,
            301739024,
            301915381,
            301888689,
            301739666,
            301739726,
            301746215,
            301745343,
            301738637,
            301738767
        ]
    },
    "editorial_link": "https://codeforces.com/blog/entry/138342",
    "editorial": "We can notice that the possible values of a3\n ranges from ?99\n to 200\n. Thus, we can iterate over all values of a3\n from ?99\n to 200\n, and for each value, compute the Fibonacciness of the sequence. The maximal of all these values gives the solution to the problem.",
    "name": "A. Fibonacciness",
    "statement": "There is an array of 5 integers. Initially, you only know\r\na_1,a_2,a_4,a_5. You may set a_3 to any positive integer, negative\r\ninteger, or zero. The of the array is the number of integers i (1\r\nleq i\r\nleq 3) such that a_{i+2}=a_i+a_{i+1}. Find the maximum over all integer\r\nvalues of a_3.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;\u00a0int main(){    ios::sync_with_stdio(false);    cin.tie(nullptr);\u00a0    int t;    cin >> t;    while(t--){        long long a1, a2, a4, a5;        cin >> a1 >> a2 >> a4 >> a5;\u00a0        // Collect candidate values for a3        vector<long long> candidates;        candidates.push_back(a1 + a2);      // for c1        candidates.push_back(a4 - a2);      // for c2        candidates.push_back(a5 - a4);      // for c3        // for c2 & c3 simultaneously (if it is an integer)        if( (a5 - a2) % 2 == 0 ){            candidates.push_back((a5 - a2)/2);        }\u00a0        int answer = 0;        // Check each candidate        for(long long a3 : candidates){            int count = 0;            // c1: a3 == a1 + a2            if(a3 == a1 + a2) ++count;            // c2: a4 == a2 + a3            if(a4 == a2 + a3) ++count;            // c3: a5 == a3 + a4            if(a5 == a3 + a4) ++count;            answer = max(answer, count);        }\u00a0        cout << answer << \"\\n\";    }\u00a0    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Fibonacciness.json"
}