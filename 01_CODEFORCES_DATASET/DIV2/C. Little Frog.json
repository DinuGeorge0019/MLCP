{"link": "https://codeforces.com//contest/53/problem/C", "problemId": "279", "problem_idx": "C", "shortId": "53C", "contest_number": "53", "problem_submissions": {"D": [239021, 239193, 238722, 239346, 239182, 239848, 239737, 238790, 238737, 238732, 238838, 238854, 238943, 239423], "C": [238660, 238284, 238456, 239097, 238366, 238317, 238648, 238222, 238274, 238168, 238487, 238198, 238286, 238820], "B": [238516, 238801, 239508, 238926, 239954, 239467, 238856, 240487, 241511, 239803], "A": [237956, 237921, 237848, 238380, 239531, 242667, 237923, 237920, 237851, 237863, 237845, 237871, 237932, 237861, 237905], "E": [267303, 243881]}, "name": "C. Little Frog", "statement": "Once upon a time a little frog whose name was Vasya decided to travel\r\naround his home swamp. Overall there are mounds on the swamp, located on\r\none line. The distance between the neighboring mounds is one meter.\r\nVasya wants to visit all the mounds in one day; besides, he wants to\r\nvisit each one exactly once. For that he makes a route plan, to decide\r\nthe order in which to jump on the mounds. Vasya can pick any mound as\r\nthe first one. He thinks it boring to jump two times at the same\r\ndistance. That\u2019s why he wants any two jumps on his route to have\r\ndifferent lengths. Help Vasya the Frog and make the plan for him.\r\n", "solutions": ["#pragma comment(linker,\"/stack:67108864\")\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <sstream>\n#include <fstream>\n#include <climits>\n#include <cfloat>\n#include <functional>\n#include <ctime>\n#include <numeric>\n#include <cstdlib>\n#include <cctype>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <utility>\n#include <bitset>\n#include <string>\n#include <list>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <typeinfo>\n#include <cassert>\n#include <ctime>\n\nusing namespace std;\n\n#define forn(i,n) for(int i=0;i<int(n);++i)\n#define forn1(i,n) for(int i=1;i<=int(n);++i)\n#define ford(i,n) for(int i=int(n)-1;i>=0;--i)\n#define ford1(i,n) for(int i=int(n);i>0;--i)\n#define foran(i,l,r) for(int i=int(l);i<int(r);++i)\n\n#define X first\n#define Y second\n#define mp make_pair\n#define pb push_back\n#define sqr(x) (x)*(x)\n#define all(v) (v).begin(),(v).end()\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair <ld ,ld > pt;\n\nconst ld EPS=1e-9;\nconst ld PI=3.1415926535897932384626433832795;\n\nconst int INF=1000*1000*1000;\nconst int CF=1;\n\nint main()\n{\n    if(!CF) freopen(\"input.txt\",\"r\",stdin);\n    //freopen(\"output.txt\",\"w\",stdout);\n    int n;\n    cin >>n;\n    deque <int> d;\n    vector <int> v;\n    forn(i,n) \n    {\n        d.push_back(i+1);\n    }\n    while(d.size()>1)\n    {\n        v.push_back(d.front());\n        d.pop_front();\n        v.push_back(d.back());\n        d.pop_back();\n    }\n    if(!d.empty()) v.push_back(d.front());\n    forn(i,n) \n    {\n        cout <<v[i];\n        if(i<n-1) cout <<\" \";\n    }\n    cout <<endl;\n    return 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms"], "dificulty": "1200", "interactive": false}