{
    "link": "https://codeforces.com//contest/1877/problem/A",
    "problemId": "2251952",
    "problem_idx": "A",
    "shortId": "1877A",
    "contest_number": "1877",
    "problem_submissions": {
        "F": [
            227174558,
            227466890,
            227293603,
            227329252
        ],
        "E": [
            227163070,
            227145733,
            227144090,
            227153972,
            227157518,
            227156560,
            227163724,
            227161365,
            227162255,
            227162229,
            227160325,
            227160791,
            227163873,
            227162598,
            227166392,
            227166841,
            227158401,
            227162185,
            227162372
        ],
        "D": [
            227138699,
            227131389,
            227129888,
            227134099,
            227129112,
            227133071,
            227133077,
            227144267,
            227136086,
            227139472,
            227138655,
            227139596,
            227138226,
            227141861,
            227140431,
            227137088,
            227140648,
            227146399,
            227136902
        ],
        "C": [
            227133414,
            227127308,
            227127530,
            227125282,
            227126156,
            227610507,
            227128623,
            227127297,
            227125856,
            227127429,
            227131821,
            227132500,
            227131322,
            227128501,
            227133505,
            227132343,
            227131403,
            227133386,
            227133010,
            227130729
        ],
        "B": [
            227128215,
            227121053,
            227122944,
            227120105,
            227119973,
            227121777,
            227121712,
            227120149,
            227123349,
            227121082,
            227122657,
            227123511,
            227122887,
            227123130,
            227122430,
            227122300,
            227131461,
            227125290,
            227124467
        ],
        "A": [
            227124912,
            227116905,
            227115298,
            227115060,
            227115015,
            227610458,
            227116248,
            227116367,
            227115306,
            227116532,
            227115007,
            227115508,
            227115261,
            227115583,
            227117792,
            227115925,
            227115499,
            227117913,
            227116538,
            227116495
        ]
    },
    "name": "A. Goals of Victory",
    "statement": "There are n teams in a football tournament. Each pair of teams match up\r\nonce. After every match, Pak Chanek receives two integers as the result\r\nof the match, the number of goals the two teams score during the match.\r\nThe efficiency of a team is equal to the total number of goals the team\r\nscores in each of its matches minus the total number of goals scored by\r\nthe opponent in each of its matches.After the tournament ends, Pak\r\nDengklek counts the efficiency of every team. Turns out that he forgot\r\nabout the efficiency of one of the teams. Given the efficiency of n-1\r\nteams a_1,a_2,a_3,\r\nldots,a_{n-1}. What is the efficiency of the missing team? It can be\r\nshown that the efficiency of the missing team can be uniquely\r\ndetermined.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define int long long \nusing namespace std;\nconst int INF=1e6+5;\nint n,a[INF];\nvoid solve(){\n\tcin>>n;int sum=0;\n\tfor (int i=1;i<n;i++) cin>>a[i],sum+=a[i];\n\tcout<<-sum<<\"\\n\";\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tint t=0;cin>>t;\n\twhile (t--) solve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Goals of Victory.json",
    "editorial_link": "https://codeforces.com//blog/entry/121200",
    "editorial": "Notice that each goal increases the efficiency of the team that scores\r\nby . But it also simultaneously decreases the efficiency of the opposite\r\nteam by . This means, if we maintain the sum of efficiency for all\r\nteams, each goal does not change the sum. Therefore, the sum must be .In\r\norder to make the sum to be , the efficiency of the missing team must be\r\nequal to the sum of efficiency of the other teams, multiplied by .Time\r\ncomplexity for each test case:\r\n"
}