{"link": "https://codeforces.com//contest/1219/problem/C", "problemId": "412344", "problem_idx": "C", "shortId": "1219C", "contest_number": "1219", "problem_submissions": {"I": [60646525], "G": [60642032], "C": [60637618], "D": [60636167], "A": [], "B": []}, "name": "C. Periodic integer number", "statement": "Alice became interested in periods of integer numbers. We say positive X\r\ninteger number is periodic with length L if there exists positive\r\ninteger number P with L digits such that X can be written as PPPP P. For\r\nexample:X = 123123123 is periodic number with length L = 3 and L = 9X =\r\n42424242 is periodic number with length L = 2,L = 4 and L = 8X = 12345\r\nis periodic number with length L = 5For given positive period length L\r\nand positive integer number A, Alice wants to find smallest integer\r\nnumber X strictly greater than A that is periodic with length L.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nint L;\nstring A;\n\nstring add(){\n    int lst_nine = L;\n    for(int i=L-1;i>=0;i--){\n        if (A[i] - '9' == 0){\n            lst_nine = i;\n        }else{\n            break;\n        }\n    }\n    if(lst_nine==L){\n        A[L-1] = A[L-1] + 1;\n        return A.substr(0, L);\n    }\n    if(lst_nine==0){\n        // indicate need one more copy\n        return A.substr(0, L) + \"0\";\n    }\n    A[lst_nine-1] = A[lst_nine-1] + 1;\n    for(int i=lst_nine;i<L;i++){\n        A[i] = '0';\n    }\n    return A.substr(0,L);\n}\nstring form(){\n    string res = \"1\";\n    for(int i=0;i<L-1;i++){\n        res += \"0\";\n    }\n    return res;\n}\nint main(void){\n    cin >> L;\n    cin >> A;\n    if(A.length()%L!=0){\n        string ans = \"\";\n        int copy = A.length()/L + 1;\n        string res = form();\n        for(int i=0;i<copy;i++){\n            ans += res;\n        }\n        cout << ans << endl;\n        return 0;\n    }\n    // before trying add, try exact\n    bool mk=false;\n    for(int i=0;i<A.length();i++){\n        if(A[i] < A[i%L]){\n            mk = true;\n            break;\n        }\n        if (A[i] > A[i%L]){\n            break;\n        }\n    }\n    string res;\n    if(mk){\n        string ans = \"\";\n        res = A.substr(0,L);\n        int copy = A.length()/L;\n        for(int i=0;i<copy;i++){\n            ans += res;\n        }\n        cout << ans << endl;\n        return 0;\n    }\n\n    res = add();\n    if(res.length()>L){\n        string ans = \"\";\n        int copy = A.length()/L + 1;\n        res = form();\n        for(int i=0;i<copy;i++){\n            ans += res;\n        }\n        cout << ans << endl;\n        return 0;\n    }else{\n        string ans = \"\";\n        int copy = A.length()/L;\n        for(int i=0;i<copy;i++){\n            ans += res;\n        }\n        cout << ans << endl;\n        return 0;\n    }\n}"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1700", "interactive": false}