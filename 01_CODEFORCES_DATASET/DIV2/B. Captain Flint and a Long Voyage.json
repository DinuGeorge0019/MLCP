{
    "link": "https://codeforces.com//contest/1388/problem/B",
    "problemId": "686567",
    "problem_idx": "B",
    "shortId": "1388B",
    "contest_number": "1388",
    "problem_submissions": {
        "E": [
            88517531,
            88530891,
            88517600,
            88523055,
            88559408,
            88542097
        ],
        "C": [
            88495900,
            88476175,
            88487310,
            88473716,
            88465503,
            88475038,
            88476262,
            88491274,
            88495411,
            88490211,
            88478175,
            88476725,
            88481845,
            88482918,
            88481225,
            88495504,
            88478995,
            88495759,
            88479604,
            88484795
        ],
        "D": [
            88480866,
            88490926,
            88497401,
            88487086,
            88484181,
            88486444,
            88489488,
            88473157,
            98881770,
            88482199,
            88475588,
            88491188,
            88488173,
            88491949,
            88494949,
            88491042,
            88480887,
            88497356,
            88482729,
            88496957,
            88493773
        ],
        "B": [
            88462054,
            88457078,
            88466301,
            88459212,
            88468622,
            88456432,
            88454997,
            88458888,
            88464610,
            88464365,
            88460797,
            88461431,
            88459743,
            88458713,
            88465245,
            88463298,
            88463309,
            88464312,
            88458653,
            88460565
        ],
        "A": [
            88452967,
            88450708,
            88455876,
            88453483,
            88454243,
            88450256,
            88459790,
            88452559,
            88453995,
            88452985,
            88451474,
            88453407,
            88450218,
            88453612,
            88453949,
            88452546,
            88454306,
            88453052,
            88449709,
            88452291
        ]
    },
    "name": "B. Captain Flint and a Long Voyage",
    "statement": "In the beginning, uncle Bogdan wrote on a board a positive integer x\r\nconsisting of n digits. After that, he wiped out x and wrote integer k\r\ninstead, which was the concatenation of binary representations of digits\r\nx consists of (without leading zeroes). For example, let x = 729, then k\r\n= 111101001 (since 7 = 111, 2 = 10, 9 = 1001).After some time, uncle\r\nBogdan understood that he doesn\u2019t know what to do with k and asked Denis\r\nto help. Denis decided to wipe last n digits of k and named the new\r\nnumber as r.As a result, Denis proposed to find such integer x of length\r\nn that r (as number) is maximum possible. If there are multiple valid x\r\nthen Denis is interested in the minimum one.All crew members, including\r\ncaptain Flint himself, easily solved the task. All, except cabin boy\r\nKostya, who was too drunk to think straight. But what about you?Note: in\r\nthis task, we compare integers (x or k) as numbers (despite what\r\nrepresentations they are written in), so 729 < 1999 or 111 < 1000.\r\n",
    "solutions": [
        "#pragma GCC optimize(\"O3\")\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<functional>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<set>\n#include<map>\nusing namespace std;\n#define MOD 1000000007\n#define f(i,n) for(int i=0;i<int(n);i++)\n#define N 200000\n\n\nint main() {\n\tint a[N];\n\tf(i, N)a[i] = 0;\n\tint n, k, t;\n\tint x, y, z;\n\tlong long s, ans;\n\tbool v = true;\n\tans = 0;\n\tscanf(\"%d\", &t);\n\tf(tt, t) {\n\t\tscanf(\"%d\", &n);\n\t\tk = (n + 3) / 4;\n\t\tf(i, n - k)printf(\"9\");\n\t\tf(i, k)printf(\"8\");\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Captain Flint and a Long Voyage.json",
    "editorial_link": "https://codeforces.com//blog/entry/80828",
    "editorial": "Statement: This is so, because if contains digits , which in their\r\nbinary notation are shorter than digits , then the number written on the\r\nboard, and therefore the number (obtained by removing the last digits of\r\nthe number ) will be shorter than if you use only the digits and , which\r\nmeans it will not be the maximum possible.Statement: Obviously, the more\r\n, the more and . Therefore, to maximize , must be . However, due to the\r\nfact that is without the last digits, at the end of the number it is\r\npossible to replace a certain number of digits with so that will still\r\nbe the maximum possible.Statement: and . We can see that the binary\r\nnotations of the digits and are long and differ in the last\r\ndigit.Suppose the suffix of a number consists of digits . Then the\r\nmaximum is achieved if at least digits are removed from the end of . By\r\nthe condition of the problem, exactly digits are removed, which means\r\nand then .Complexity: .\r\n"
}