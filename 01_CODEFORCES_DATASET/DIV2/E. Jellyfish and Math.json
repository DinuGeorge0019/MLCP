{"link": "https://codeforces.com//contest/1875/problem/E", "problemId": "2236822", "problem_idx": "E", "shortId": "1875E", "contest_number": "1875", "problem_submissions": {"E": [226007719, 225981502, 225997077, 226024812, 226185388], "G": [225993602, 226090450], "F": [225971818, 226006439, 226020128, 226050711, 225991779, 225996607, 226001082, 226008955, 226036106, 226011936, 226022791, 225995919, 226047877, 226038835, 226042165, 226041500, 226073814, 226044458, 226057628, 226055233], "D": [225942990, 225945406, 225967656, 225971005, 225948214, 225965867, 225965428, 226166990, 225970035, 225966878, 225985894, 225988437, 225968095, 225971454, 225977691, 226097811, 225987379, 225979524, 225966823, 225974445, 225980563], "C": [225939447, 225939555, 225947158, 225965943, 225943124, 225946690, 225948786, 226166742, 225977924, 225959112, 225979842, 225969180, 225983960, 225947912, 225967709, 226097802, 225947425, 225963735, 225961969, 225959306, 225971328], "B": [225926540, 225961576, 225976303, 226005705, 225926794, 225939253, 225942474, 225938657, 225940294, 225948707, 225962038, 225978973, 225941566, 225960227, 225968949, 225945531, 225926701, 225941384, 225964167], "A": [225922227, 225921742, 225921601, 225922250, 225922542, 225921535, 225921818, 225921875, 225922229, 225922177, 225923351, 225970588, 225921694, 225925214, 226097785, 225924482, 225921598, 225921501, 225922602, 225947031]}, "name": "E. Jellyfish and Math", "statement": "Jellyfish is given the non-negative integers a, b, c, d and m. Initially\r\n(x,y)=(a,b). Jellyfish wants to do several operations so that\r\n(x,y)=(c,d).For each operation, she can do one of the following: x := x\r\n,\r\n&\r\n,y, x := x\r\n,|\r\n,y, y := x\r\noplus y, y := y\r\noplus m. Here\r\n& denotes the bitwise AND operation, | denotes the bitwise OR operation\r\nand\r\noplus denotes the bitwise XOR operation.Now Jellyfish asks you for the\r\nminimum number of operations such that (x,y)=(c,d).\r\n", "solutions": ["#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\nconst int P=0x3f3f3f3f;\nint p5[9];\nvector<vector<int> >Nxtsta;\nvector<int>ans;\nvoid dfs(int pos, int val, int pp)\n{\n    if (pos == 8) { if (pp!=8)for (int p = 1; p <= 4; p++)ans[val] = min(ans[val], ans[val - p * p5[pp]]); return; }\n    else for (int i = 0; i < 4; i++)dfs(pos + 1, val + i * p5[pos], pp); dfs(pos + 1, val + 4 * p5[pos], min(pp, pos));\n}\nvoid precal()\n{\n    p5[0] = 1; for (int i = 1; i <= 8; i++)p5[i] = p5[i - 1] * 5;\n    ans.resize(p5[8],P);Nxtsta.resize(p5[8], vector<int>(4, 0));\n    for (int i = 0; i < p5[8]; i++)for (int e = 0, val = i; e < 8; e++, val /= 5)\n    {\n        int v = val % 5;\n        Nxtsta[i][0] += p5[e] * (v == 2 ? 0 : v); Nxtsta[i][1] += p5[e] * (v == 1 ? 3 : v);\n        Nxtsta[i][2] += p5[e] * (v > 1 ? 5 - v : v); Nxtsta[i][3] += p5[e] * (e > 3 ? v ^ 1 : v);\n    }\n    int o = 0; for (int i = 0; i < 8; i++)o += p5[i] * (i % 4); ans[o] = 0;\n    queue<int>Q; Q.push(o); while (!Q.empty())\n    {\n        int x = Q.front(), xt = ans[x] + 1; Q.pop();\n        for (int i = 0; i < 4; i++) { int k = Nxtsta[x][i]; if (ans[k] > xt)ans[k] = xt,Q.push(k); }\n    }\n    dfs(0, 0, 8);\n}\nvoid solve()\n{\n    vector<int>des(8, 4); bool jud = 0;\n    int a, b, c, d, m; cin >> a >> b >> c >> d >> m;\n    for (int i = 0; i < 30; i++, a >>= 1, b >>= 1, c >>= 1, d >>= 1, m >>= 1)\n    {\n        int S = ((a & 1) << 1) ^ (b & 1) ^ ((m & 1) << 2), E = ((c & 1) << 1) ^ (d & 1);\n        if (des[S] != 4 && des[S] != E)jud = 1;des[S] = E;\n    }\n    if (jud) { cout << \"-1\\n\"; return; }\n    int v = 0; for (int i = 0; i < 8; i++)v += p5[i] * des[i];\n    ans[v] == P ? cout << \"-1\\n\" : cout << ans[v] << '\\n';\n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);precal();\n    int t = 1; cin >> t;\n    while (t--)solve();\n}"], "input": "", "output": "", "tags": ["bitmasks", "dfs and similar", "dp", "graphs"], "dificulty": "2400", "interactive": false}