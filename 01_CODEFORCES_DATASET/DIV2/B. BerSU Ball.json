{
    "link": "https://codeforces.com//contest/489/problem/B",
    "problemId": "17497",
    "problem_idx": "B",
    "shortId": "489B",
    "contest_number": "489",
    "problem_submissions": {
        "D": [
            13589038,
            8724316,
            8726296,
            8731189,
            8726766,
            8726894,
            8728465,
            8728477,
            8727759,
            8725875,
            8727494,
            8730275,
            8733738,
            8729954,
            8730137,
            8724674,
            8731839,
            8731752,
            8732051
        ],
        "C": [
            13588891,
            8721795,
            8727951,
            8723822,
            8724371,
            8723499,
            8726577,
            8723991,
            8722965,
            8723091,
            8724636,
            8726610,
            8730038,
            8726232,
            8725795,
            8724261,
            8722941,
            8722633,
            8723063
        ],
        "B": [
            13588813,
            8720541,
            8728807,
            8721401,
            8766675,
            8722756,
            8720717,
            8724885,
            8720855,
            8720680,
            8720515,
            8720936,
            8722566,
            8728071,
            8723662,
            8722124,
            8737370,
            8720146,
            8720599,
            8721787
        ],
        "A": [
            13588752,
            8742614,
            8729605,
            8720536,
            8720304,
            8719407,
            8720112,
            8719631,
            8724692,
            8719911,
            8719459,
            8720699,
            8726238,
            8722578,
            8720190,
            8721547,
            8726214,
            8726620,
            8726619
        ],
        "E": [
            8736947,
            11503343,
            8742532,
            8742434,
            8742318,
            8742303,
            8742271,
            8737226
        ],
        "F": [
            8731272,
            8723125,
            8728205,
            8732102,
            8733456,
            8733048,
            8733546,
            8733373,
            8736588,
            8734709,
            8733680,
            8724458,
            8733867,
            8734049,
            8727708,
            8736377,
            8736466,
            8736428
        ]
    },
    "name": "B. BerSU Ball",
    "statement": "The Berland State University is hosting a ballroom dance in celebration\r\nof its 100500-th anniversary! boys and girls are already busy rehearsing\r\nwaltz, minuet, polonaise and quadrille moves.We know that several\r\nboy&girl pairs are going to be invited to the ball. However, the\r\npartners\u2019 dancing skill in each pair must differ by at most one.For each\r\nboy, we know his dancing skills. Similarly, for each girl we know her\r\ndancing skills. Write a code that can determine the largest possible\r\nnumber of pairs that can be formed from boys and girls.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nconst int MAX = 100 + 10;\nint a[MAX], b[MAX];\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 0 ; i < n ;i++)\n        scanf(\"%d\", &a[i]);\n    int m;\n    scanf(\"%d\", &m);\n    for(int i = 0 ; i < m ; i++){\n        scanf(\"%d\", &b[i]);\n    }\n    sort(a, a+n);\n    sort(b, b+m);\n    int i = 0, j = 0, ans = 0;\n    while(i < n && j < m){\n        if(abs(a[i] - b[j]) <= 1){\n            i++,j++,ans++;\n        }else if(a[i] < b[j]) i++;\n        else j++;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dp",
        "graph matchings",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. BerSU Ball.json",
    "editorial_link": "https://codeforces.com//blog/entry/14741",
    "editorial": "There are about 100500 ways to solve the problem. You can find maximal\r\nmatching in a bipartite graph boys-girls, write dynamic programming or\r\njust use greedy approach. Let\u00e2\u0080\u0099s sort boys and girls by skill. If boy\r\nwith lowest skill can be matched, it is good idea to match him. It can\u00e2\u0080\u0099t\r\nreduce answer size. Use girl with lowest skill to match. So you can use\r\ncode like:\r\n"
}