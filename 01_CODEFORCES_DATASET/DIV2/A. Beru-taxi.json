{
    "link": "https://codeforces.com//contest/706/problem/A",
    "problemId": "67823",
    "problem_idx": "A",
    "shortId": "706A",
    "contest_number": "706",
    "problem_submissions": {
        "E": [
            19799529,
            19800838,
            19810264,
            19807034,
            19808760,
            19810186,
            19809764,
            19810982,
            42752321,
            19890390
        ],
        "D": [
            19795131,
            19799946,
            19797593,
            19799580,
            19801146,
            19799501,
            19800720,
            19806755,
            19799727,
            19799523,
            19798394,
            19805457,
            19796720,
            19793832,
            19796068,
            19798051,
            19789927,
            19797413,
            19794752
        ],
        "A": [
            19791014,
            19788257,
            19788261,
            19788398,
            19788631,
            19795699,
            19789638,
            19788479,
            19790007,
            19788321,
            22026404,
            19788020,
            19788193,
            19794916,
            19789488,
            19788710,
            19789070,
            19787924,
            19796256,
            19788143,
            19787877
        ],
        "B": [
            19790153,
            19790384,
            19790346,
            19790838,
            19791017,
            19794646,
            19792418,
            19790625,
            19790161,
            19819586,
            19789302,
            19789044,
            19789558,
            19793530,
            19791526,
            19790679,
            19790349,
            19789192,
            19797239,
            19789505,
            19788555
        ],
        "C": [
            19789161,
            19797823,
            19794469,
            19797199,
            19794627,
            19792093,
            19795449,
            19794172,
            19793513,
            19795984,
            19792686,
            19793115,
            19791330,
            19794797,
            19799019,
            19794092,
            19793736,
            19795359,
            19793400,
            19794380
        ]
    },
    "name": "A. Beru-taxi",
    "statement": "Vasiliy lives at point of the coordinate plane. He is hurrying up to\r\nwork so he wants to get out of his house as soon as possible. New app\r\nsuggested available Beru-taxi nearby. The -th taxi is located at point\r\nand moves with a speed . Consider that each of drivers will move\r\ndirectly to Vasiliy and with a maximum possible speed. Compute the\r\nminimum time when Vasiliy will get in any of Beru-taxi cars.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <ctime>\n#include <cctype>\n#include <cassert>\n#define rep(i, a, n) for(int i = a; i < n; ++ i)\n#define rev_rep(i, a, n) for(int i = (int) n - 1; i >= a; -- i)\n#define clr(a, h) memset(a, (h), sizeof(a))\n#define transfer(a, h) memcpy(a, (h), sizeof (a))\n#define foreach(e, x) for(__typeof(x.begin()) e = x.begin(); e != x.end(); ++ e)\n#define all(x) x.begin(), x.end()\n#define SZ(x) (int(x.size()))\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define de(x) cerr << #x << \"=\" << x << endl\n#define two(x) (1 << (x))\n#define twoL(x) (1ll << (x))\nusing namespace std;\n\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int , int> pi;\ntypedef pair< int , pi> pii;\n\nconst int INF = ~0U >> 1;\nconst int Mod = int(1e9) + 7;\n\ninline void addMod(int &x, int y) {\n\tx += y;\n\tif (x >= Mod) x -= Mod;\n}\n\ninline int powMod(int a, int x) {\n\tint ret = 1;\n\tfor (; x; x >>= 1, a = 1ll * a * a % Mod)\n\t\tif (x & 1) ret = 1ll * ret * a % Mod;\n\treturn ret;\n}\n\nint a, b, x, y, v, n;\nint main() {\n\tscanf(\"%d%d\", &a, &b);\n\tdouble ans = 1e10;\n\tscanf(\"%d\", &n);\n\trep(i, 0, n) {\n\t\tscanf(\"%d%d%d\", &x, &y, &v);\n\t\tdouble d = sqrt((x - a) * (x - a) + (y - b) * (y - b)) / v;\n\t\tans = min(ans, d);\n\t}\n\tprintf(\"%.10f\\n\", ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "geometry",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Beru-taxi.json",
    "editorial_link": "https://codeforces.com//blog/entry/46510",
    "editorial": "We know that time=distance/speed. For each car we should find timei, than if it is less than answer we should update it.\n"
}