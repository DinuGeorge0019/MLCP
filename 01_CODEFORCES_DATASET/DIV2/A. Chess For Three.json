{
    "link": "https://codeforces.com//contest/1973/problem/A",
    "problemId": "2652010",
    "problem_idx": "A",
    "shortId": "1973A",
    "contest_number": "1973",
    "problem_submissions": {
        "F": [
            261463251,
            261436494,
            261787514
        ],
        "D": [
            261394881,
            261402242,
            261380949,
            261382024,
            261382530,
            261387010,
            261390196,
            261382271,
            261387986,
            261384447,
            261402787,
            261386421,
            261427816,
            261407792,
            261395337,
            261376975,
            261379252,
            261380684,
            261382950
        ],
        "E": [
            261381347,
            261382046,
            261401618,
            261402013,
            261401999,
            261406109,
            261402299,
            261407866,
            261402896,
            261405986,
            261394102,
            261405366,
            261389878,
            261408472,
            261404774,
            261590660
        ],
        "C": [
            261360567,
            261360988,
            261363426,
            261364691,
            261354543,
            261360787,
            261363933,
            261369573,
            261365792,
            261367077,
            261359236,
            261367488,
            261357141,
            261374894,
            261387975,
            261359851,
            261363374,
            261357155
        ],
        "B": [
            261348324,
            261350288,
            261353838,
            261351331,
            261349040,
            261350145,
            261349881,
            261347862,
            261350513,
            261350776,
            261350235,
            261356753,
            261350384,
            261354721,
            261390204,
            261350344,
            261351974,
            261347066
        ],
        "A": [
            261346207,
            261346661,
            261348023,
            288952169,
            261346140,
            261346181,
            261346010,
            261346089,
            261345101,
            261344789,
            261344990,
            261346630,
            261346138,
            261346691,
            261348987,
            261391373,
            261346139,
            261346040,
            261349777
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129556",
    "editorial": "Solution:After each round, sum of players\u00e2\u0080\u0099 scores increases by 2, so if\r\nthe sum is odd, answer is . Now, as the hints suggest, you can try all\r\npossible combinations of , and with three for-loops and check for each\r\ncombination whether it could result in scores , and . Specifically, it\r\nmust hold that , and the same two conditions for and analogously. Now\r\nyou can find the biggest value of + + over all valid choices and print\r\nit as the answer.The time complexity is .Implementation in Python:\r\n261998440 Bonus:There exists an solution with simpler implementation.\r\nClaim: The answer is min(,). Let\u00e2\u0080\u0099s prove this: if , then it\u00e2\u0080\u0099s possible\r\nthat players and played and draws with player , after which there can\u00e2\u0080\u0099t\r\nhappen any additional draws in the game. if , that means , so player can\r\nfirst play draws with player . Note, that if sum is even, then will also\r\nbe even, so player can play draws with each of players and , thus adding\r\nup his score to exactly . Finally, players and can play draws anong\r\nthem, after which their scores become and respectively. Thus, it is\r\npossible that all rounds played ended with draws, making answer equal to\r\n.Implementation in C++: 261998652\r\n",
    "name": "A. Chess For Three",
    "statement": "Three friends gathered to play a few games of chess together.In every\r\ngame, two of them play against each other. The winner gets 2 points\r\nwhile the loser gets 0, and in case of a draw, both players get 1 point\r\neach. Note that the same pair of players could have played any\r\nnon-negative number of times (possibly zero). It is also possible that\r\nno games were played at all. You\u2019ve been told that their scores after\r\nall the games were played were p_1, p_2 and p_3. Additionally, it is\r\nguaranteed that p_1\r\nleq p_2\r\nleq p_3 holds.Find the maximum number of draws that could have happened\r\nand print it. If there isn\u2019t any way to obtain p_1, p_2 and p_3 as a\r\nresult of a non-negative number of games between the three players,\r\nprint -1 instead.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;int main(){    int T,a[3];scanf(\"%d\",&T);while(T--){        scanf(\"%d%d%d\",&a[0],&a[1],&a[2]);        if(!((a[0]+a[1]+a[2])&1)){            int ans=0;            while(a[1]&&a[2])                a[1]--,a[2]--,sort(a,a+3),ans++;            printf(\"%d\\n\",ans);        }        else puts(\"-1\");    }    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Chess For Three.json"
}