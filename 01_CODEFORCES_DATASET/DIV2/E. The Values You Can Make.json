{
    "link": "https://codeforces.com//contest/688/problem/E",
    "problemId": "63909",
    "problem_idx": "E",
    "shortId": "688E",
    "contest_number": "688",
    "problem_submissions": {
        "E": [
            18798101,
            18796724,
            18797231,
            18798974,
            18799540,
            18801395,
            18802783,
            18810711,
            18809719,
            18801431,
            18803825,
            18802677,
            18803257,
            18800733,
            18802066,
            18803323,
            18803755,
            18803508,
            18805435,
            18805332
        ],
        "D": [
            18794251,
            18793642,
            18792480,
            18793770,
            18795849,
            18798326,
            18794352,
            18809463,
            18809360,
            18809030,
            18793977,
            18797699,
            18797400,
            18801049,
            18802910,
            18798453,
            18798000,
            18798601,
            18798398,
            18797731,
            18799630
        ],
        "C": [
            18793128,
            18791291,
            18793167,
            18791852,
            18788953,
            18790786,
            18792131,
            18796089,
            18794724,
            18793607,
            18792460,
            18789743,
            18795539,
            18794192,
            18793703,
            18794069,
            18795590,
            18793984
        ],
        "B": [
            18787495,
            18787231,
            18789682,
            18788356,
            18790758,
            18787367,
            18786760,
            18786756,
            18789463,
            18788573,
            18788713,
            18787120,
            18790658,
            18788353,
            18788699,
            18790793,
            18786776,
            18789835
        ],
        "A": [
            18786938,
            18786787,
            18787620,
            18787066,
            18791713,
            18786819,
            18787191,
            18788288,
            18788193,
            18787025,
            18786883,
            18786790,
            18787732,
            18786915,
            18788140,
            18791164,
            18789687,
            18788126
        ]
    },
    "name": "E. The Values You Can Make",
    "statement": "Pari wants to buy an expensive chocolate from Arya. She has coins, the\r\nvalue of the -th coin is . The price of the chocolate is , so Pari will\r\ntake a subset of her coins with sum equal to and give it to Arya.Looking\r\nat her coins, a question came to her mind: after giving the coins to\r\nArya, what values does Arya can make with them? She is jealous and she\r\ndoesn\u2019t want Arya to make a lot of values. So she wants to know all the\r\nvalues , such that Arya will be able to make using some subset of coins\r\nwith the sum .Formally, Pari wants to know the values such that there\r\nexists a subset of coins with the sum such that some subset of this\r\nsubset has the sum , i.e. there is exists some way to pay for the\r\nchocolate, such that Arya will be able to make the sum using these\r\ncoins.\r\n",
    "solutions": [
        "// VSCF.cpp : Defines the entry point for the console application.\n//\n#include <bitset>\n#include <iomanip>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <iterator>\n#include <string>\n#include <vector>\n#include <set>\n#include <deque>\n#include <map>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\n#define MP make_pair\n#define FOR(v,p,k) for(int v=p;v<=k;++v)\n#define FORD(v,p,k) for(int v=p;v>=k;--v)\n#define REP(i,n) for(int i=0;i<(n);++i)\n#define VAR(v,i) __typeof(i) v=(i)\n#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)\n#define PB push_back\n#define ST first\n#define ND second\n#define SIZE(x) (int)x.size()\n#define ALL(c) c.begin(),c.end()\ntypedef long double LD;\n#define int long long\n\n\n#undef int\nint main() {\n#define int long long\n\tios_base::sync_with_stdio(0);\n\tint n, k;\n\tcin >> n >> k;\n\tvector<int> inp(n);\n\tvector<bitset<501>> dyn(501);\n\tdyn[0][0] = 1;\n\tREP(i, n) {\n\t\tcin >> inp[i];\n\t\tint l = inp[i];\n\t\tFORD(j, 500 - l , 0){\n\t\t\tbitset<501> nbit = dyn[j];\n\t\t\tREP(k, 500 - l + 1) {\n\t\t\t\tif (dyn[j][k]) {\n\t\t\t\t\tnbit[k + l] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdyn[j + l] = dyn[j + l] | nbit;\n\t\t}\n\t}\n\tvector<int> ans;\n\tREP(i, 501) {\n\t\tif (dyn[k][i]) {\n\t\t\tans.push_back(i);\n\t\t}\n\t}\n\tcout << ans.size()<<\"\\n\";\n\tfor (int el : ans) {\n\t\tcout << el << \" \";\n\t}\n\n\treturn 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. The Values You Can Make.json",
    "editorial_link": "https://codeforces.com//blog/entry/45770",
    "editorial": "Hint\nUse dynamic programming.\n\nSolution\nLet dpi,?j,?k be true if and only if there exists a subset of the first i coins with sum j, that has a subset with sum k. There are 3 cases to handle:\n\nThe i-th coin is not used in the subsets.\nThe i-th coin is used in the subset to make j, but it's not used in the subset of this subset.\nThe i-th coin is used in both subsets.\nSo dpi,?j,?k is equal to dpi?-?1,?j,?k OR dpi?-?1,?j?-?ci,?k OR dpi?-?1,?j?-?ci,?k?-?ci."
}