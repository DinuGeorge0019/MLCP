{
    "link": "https://codeforces.com//contest/723/problem/C",
    "problemId": "74119",
    "problem_idx": "C",
    "shortId": "723C",
    "contest_number": "723",
    "problem_submissions": {
        "F": [
            21155697,
            21154113,
            21155933,
            21154904,
            21149973,
            21159426,
            21152095,
            21153693,
            21156752,
            21154148,
            21155446,
            21158512,
            21156719,
            21157841,
            63684195,
            21157428,
            21156472,
            21165079
        ],
        "D": [
            21145243,
            21158845,
            21147482,
            21142220,
            21145053,
            21143706,
            21144743,
            21145722,
            21163140,
            21144768,
            21147552,
            21144060,
            21144166,
            21146675,
            21148374,
            21147946,
            21149603,
            21146889,
            21147955,
            21145653
        ],
        "E": [
            21142890,
            21148616,
            21159045,
            21149920,
            21158556,
            21150731,
            21180051,
            21153029,
            21177875,
            21161980,
            21155864,
            21154968,
            21148045
        ],
        "C": [
            21140474,
            21141296,
            21140148,
            21162108,
            21142166,
            21146292,
            21147879,
            21142862,
            21142174,
            21148589,
            21144499,
            21141215,
            21141347,
            21144291,
            21144339,
            21143781,
            21144417,
            21143640,
            21144289,
            21142493
        ],
        "B": [
            21138785,
            21138330,
            21144052,
            21141269,
            21138610,
            21139747,
            21138581,
            21138753,
            21138976,
            21139782,
            21142236,
            21137955,
            21139130,
            21139752,
            21139693,
            21141265,
            21138488,
            21140188,
            21156231
        ],
        "A": [
            21135605,
            21135289,
            21141496,
            21135525,
            21135366,
            21137068,
            21135345,
            21136036,
            21135454,
            21135984,
            21136355,
            21135335,
            21136286,
            21136540,
            21136310,
            21138762,
            21135363,
            21135712,
            21156449
        ]
    },
    "name": "C. Polycarp at the Radio",
    "statement": "Polycarp is a music editor at the radio station. He received a playlist\r\nfor tomorrow, that can be represented as a sequence , where is a band,\r\nwhich performs the -th song. Polycarp likes bands with the numbers from\r\nto , but he doesnâ€™t really like others. We define as the number of songs\r\nthe group is going to perform tomorrow. Polycarp wants to change the\r\nplaylist in such a way that the minimum among the numbers will be as\r\nlarge as possible.Find this maximum possible value of the minimum among\r\nthe (), and the minimum number of changes in the playlist Polycarp needs\r\nto make to achieve it. One change in the playlist is a replacement of\r\nthe performer of the -th song with any other group.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nconst int N(2222);\nint cnt[N], a[N];\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint ans1(n / m);\n\tfor(int i(0); i < n; i++) {\n\t\tcin >> a[i];\n\t\tif(a[i] <= m) {\n\t\t\tcnt[a[i]]++;\n\t\t}\n\t}\n\tint ans2(0);\n\tfor(int i(0); i < n; i++) {\n\t\tif(a[i] > m || a[i] <= m && cnt[a[i]] > ans1) {\n\t\t\tfor(int j(1); j <= m; j++) {\n\t\t\t\tif(cnt[j] < ans1) {\n\t\t\t\t\tif(a[i] <= m) {\n\t\t\t\t\t\tcnt[a[i]]--;\n\t\t\t\t\t}\n\t\t\t\t\ta[i] = j;\n\t\t\t\t\tcnt[j] ++;\n\t\t\t\t\tans2++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d %d\\n\", ans1, ans2);\n\tfor(int i(0); i < n; i++) {\n\t\tprintf(\"%d%c\", a[i], i == n - 1 ? '\\n' : ' ');\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Polycarp at the Radio.json",
    "editorial_link": "https://codeforces.com//blog/entry/47502",
    "editorial": "It is easy to understand that we always can get the maximum value of the\r\nminimum of the values which equals to . So, we need to make vector which\r\nwill store positions of the given array in which we will change values.\r\nAt first it is all positions of the given array, in which the values are\r\nmore than . Then we need to store for all from 1 to in vectors the\r\npositions of the given array, in which the bands equal to . Then for\r\nevery vector, which size is more than we need to add tje first elements\r\nin the vector , where is the size of the vector . After that we need to\r\niterate through the numbers of bands from 1 to . If is less than we need\r\nto take regular positions from the vector and change the values in this\r\npositions to . In the same time we need to count the number of changes\r\nin the playlist.\r\n",
    "hint": []
}