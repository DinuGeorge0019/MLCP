{
    "link": "https://codeforces.com//contest/2003/problem/B",
    "problemId": "2836626",
    "problem_idx": "B",
    "shortId": "2003B",
    "contest_number": "2003",
    "problem_submissions": {
        "E2": [
            278341707,
            278455104,
            278330622,
            278179988,
            278257072,
            278360261,
            278589270
        ],
        "E1": [
            278142159,
            278142843,
            278147621,
            278145820,
            278139445,
            278118163,
            278284773,
            278152908,
            278522597
        ],
        "D2": [
            278115632,
            278124223,
            278116119,
            278123063,
            278131280,
            278090274,
            278184104,
            278101954,
            278115622,
            278113440,
            278105822,
            278109507,
            278111408,
            278106372,
            278109910,
            278114958,
            278113518,
            278109092
        ],
        "D1": [
            278092613,
            278095057,
            278099358,
            278106267,
            278123018,
            278076086,
            278136646,
            278080662,
            278086676,
            278089029,
            278091347,
            278090118,
            278085289,
            278096196,
            278091226,
            278088309,
            278092415,
            278094460
        ],
        "C": [
            278073298,
            278084142,
            278084204,
            278091216,
            278102032,
            278059873,
            278062388,
            278064696,
            278066407,
            278065300,
            278076163,
            278064469,
            278071045,
            278077312,
            278070267,
            278068388,
            278071776,
            278071322
        ],
        "B": [
            278057061,
            278062158,
            278060356,
            278059818,
            278072173,
            278051522,
            278051239,
            278054673,
            278056246,
            278057857,
            278063310,
            278056133,
            278051957,
            278062245,
            278058767,
            278054937,
            278067356,
            278063368
        ],
        "A": [
            278051014,
            278054951,
            278054980,
            278049465,
            278052299,
            278047930,
            278047962,
            278049334,
            278049908,
            278052979,
            278052705,
            278049194,
            278048004,
            278057248,
            278049244,
            278048425,
            278067001,
            278049077
        ],
        "F": [
            283415067,
            278185607,
            278644931
        ]
    },
    "editorial_link": "https://codeforces.com/blog/entry/132953",
    "editorial": "The problem can be rephrased as follows: the first player can remove a\r\nnumber adjacent to a larger number, while the second player can remove a\r\nnumber adjacent to a smaller number.To maximize the value of the last\r\nremaining number, in the -th round of the first playerâs moves, he will\r\nremove the -th smallest number in the sequence, and this is always\r\nachievable. Similarly, in the -th round of the second playerâs moves, he\r\nwill remove the -th largest number.Thus, the answer is the -th smallest\r\nnumber in the original sequence.Time complexity: per test case.\r\n",
    "name": "B. Turtle and Piggy Are Playing a Game 2",
    "statement": "Turtle and Piggy are playing a game on a sequence. They are given a\r\nsequence a_1, a_2,\r\nldots, a_n, and Turtle goes first. Turtle and Piggy alternate in turns\r\n(so, Turtle does the first turn, Piggy does the second, Turtle does the\r\nthird, etc.).The game goes as follows: Let the current length of the\r\nsequence be m. If m = 1, the game ends. If the game does not end and\r\nit’s Turtle’s turn, then Turtle must choose an integer i such that 1\r\nle i\r\nle m - 1, set a_i to\r\nmax(a_i, a_{i + 1}), and remove a_{i + 1}. If the game does not end and\r\nit’s Piggy’s turn, then Piggy must choose an integer i such that 1\r\nle i\r\nle m - 1, set a_i to\r\nmin(a_i, a_{i + 1}), and remove a_{i + 1}. Turtle wants to the value of\r\na_1 in the end, while Piggy wants to the value of a_1 in the end. Find\r\nthe value of a_1 in the end if both players play optimally.You can refer\r\nto notes for further clarification.\r\n",
    "solutions": [
        "#include <bits/stdc++.h> #define ranges std::ranges#define views std::views using u32 = unsigned;using i64 = long long;using u64 = unsigned long long; using pii = std::pair<int, int>;using a3 = std::array<int, 3>;using a4 = std::array<int, 4>; const int N = 1e6;const int MAXN = 1e6 + 10;const int inf = 1e9;// const int mod = 1e9 + 7;const int mod = 998244353; void solve() {    int n;std::cin >> n;    std::vector<int> a(n);    for (int& x : a)std::cin >> x;    ranges::sort(a);    std::cout << a[n / 2];} signed main() {    std::ios::sync_with_stdio(false);    std::cin.tie(0), std::cout.tie(0);    int t;std::cin >> t;    while (t--) {        solve();        std::cout << '\\n';    }    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "greedy",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Turtle and Piggy Are Playing a Game 2.json",
    "hint": [
        "Hint Try to rephrase the operations of both players."
    ]
}