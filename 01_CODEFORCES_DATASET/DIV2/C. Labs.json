{
    "link": "https://codeforces.com//contest/1236/problem/C",
    "problemId": "442395",
    "problem_idx": "C",
    "shortId": "1236C",
    "contest_number": "1236",
    "problem_submissions": {
        "F": [
            62811108
        ],
        "E": [
            62897948,
            62812842,
            62804306,
            62804069,
            62813891,
            62807146,
            62814095,
            62805221,
            62811322,
            62812238,
            62805891,
            62807935,
            62864987,
            62832474
        ],
        "D": [
            62802950,
            62812650,
            62812836,
            62802625,
            62815190,
            62803700,
            62813698,
            62812781,
            62814654,
            62821887,
            62803442,
            62805006,
            62803249,
            62804002,
            62802909,
            62805902,
            62806423
        ],
        "C": [
            62792622,
            62791071,
            62789610,
            62791879,
            62789897,
            62794126,
            62795764,
            62792967,
            62790282,
            62793895,
            62789462,
            62790719,
            62789824,
            62786960,
            62793187,
            62790332,
            62791408,
            62792941
        ],
        "B": [
            62786209,
            62787426,
            62787186,
            62788924,
            62792966,
            62790776,
            62793499,
            62788719,
            62790312,
            62785414,
            62786772,
            62787247,
            62786648,
            62784848,
            62788974,
            62787295,
            62787730,
            62787714
        ],
        "A": [
            62784582,
            62784627,
            62784321,
            62785968,
            62783805,
            62784292,
            62799939,
            62784596,
            62785095,
            62790291,
            62784662,
            62784215,
            62784012,
            62783846,
            62784720,
            62784658,
            62784976,
            62784753
        ]
    },
    "name": "C. Labs",
    "statement": "In order to do some research, n^2 labs are built on different heights of\r\na mountain. Let\u2019s enumerate them with integers from 1 to n^2, such that\r\nthe lab with the number 1 is at the lowest place, the lab with the\r\nnumber 2 is at the second-lowest place,\r\nldots, the lab with the number n^2 is at the highest place.To transport\r\nwater between the labs, pipes are built between every pair of labs. A\r\npipe can transport at most one unit of water at a time from the lab with\r\nthe number u to the lab with the number v if u > v.Now the labs need to\r\nbe divided into n groups, each group should contain exactly n labs. The\r\nlabs from different groups can transport water to each other. The sum of\r\nunits of water that can be sent from a group A to a group B is equal to\r\nthe number of pairs of labs (u, v) such that the lab with the number u\r\nis from the group A, the lab with the number v is from the group B and\r\nu > v. Let\u2019s denote this value as f(A,B) (i.e. f(A,B) is the sum of\r\nunits of water that can be sent from a group A to a group B).For\r\nexample, if n=3 and there are 3 groups X, Y and Z: X =\r\n{1, 5, 6\r\n}, Y =\r\n{2, 4, 9\r\n} and Z =\r\n{3, 7, 8\r\n}. In this case, the values of f are equal to: f(X,Y)=4 because of 5\r\nrightarrow 2, 5\r\nrightarrow 4, 6\r\nrightarrow 2, 6\r\nrightarrow 4, f(X,Z)=2 because of 5\r\nrightarrow 3, 6\r\nrightarrow 3, f(Y,X)=5 because of 2\r\nrightarrow 1, 4\r\nrightarrow 1, 9\r\nrightarrow 1, 9\r\nrightarrow 5, 9\r\nrightarrow 6, f(Y,Z)=4 because of 4\r\nrightarrow 3, 9\r\nrightarrow 3, 9\r\nrightarrow 7, 9\r\nrightarrow 8, f(Z,X)=7 because of 3\r\nrightarrow 1, 7\r\nrightarrow 1, 7\r\nrightarrow 5, 7\r\nrightarrow 6, 8\r\nrightarrow 1, 8\r\nrightarrow 5, 8\r\nrightarrow 6, f(Z,Y)=5 because of 3\r\nrightarrow 2, 7\r\nrightarrow 2, 7\r\nrightarrow 4, 8\r\nrightarrow 2, 8\r\nrightarrow 4. Please, divide labs into n groups with size n, such that\r\nthe value\r\nmin f(A,B) over all possible pairs of groups A and B (A\r\nneq B) is .In other words, divide labs into n groups with size n, such\r\nthat minimum number of the sum of units of water that can be transported\r\nfrom a group A to a group B for every pair of different groups A and B\r\n(A\r\nneq B) as big as possible.Note, that the example above doesn\u2019t\r\ndemonstrate an optimal division, but it demonstrates how to calculate\r\nthe values f for some division.If there are many optimal divisions, you\r\ncan find any.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl '\\n'\ntypedef long long ll;\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int n;\n    cin >> n;\n    vector<vector<int>> res(n,vector<int>(n));\n    int pos = 1;\n    for(int j = 0; j < n; ++j) {\n        for(int i = 0; i < n; ++i) {\n            res[i][j] = pos++;\n        }\n    }\n    for(int i = 0; i*2 < n; ++i) {\n        for(int j = 1; j < n; j+=2) {\n            swap(res[i][j], res[n-i-1][j]);\n        }\n    }\n    for(int i = 0; i < n; ++i) {\n        for(int j = 0; j < n; ++j) {\n            cout << res[i][j] << ' ';\n        }\n        cout << endl;\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Labs.json",
    "editorial_link": "https://codeforces.com/blog/entry/70654",
    "editorial": "The maximum number is .It can be proved we cannot find a larger answer.\r\nThere is pipes between any two groups. So the valid pairs of the minimum\r\nof them does not exceed .Then we try to find a way to achieve the\r\nmaximum. We find if we put the first lab in the first group, the second\r\none to the second group ... the -th one to the -th group. Then put the\r\n-th one in the -th group, the -th one in the -th group ... the -th one\r\nto the first group. And then again use the method for the -th to the -th\r\nlab. if is odd, then we will only use the previous half of the method.\r\n"
}