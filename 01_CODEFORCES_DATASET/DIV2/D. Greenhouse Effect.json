{
    "link": "https://codeforces.com//contest/270/problem/D",
    "problemId": "2575",
    "problem_idx": "D",
    "shortId": "270D",
    "contest_number": "270",
    "problem_submissions": {
        "E": [
            3056054,
            3058059,
            3068984,
            3080996
        ],
        "D": [
            3050127,
            3055561,
            3050397,
            3049548,
            3052822,
            3053009,
            3054445,
            3053861,
            3054191,
            3055863,
            3055631,
            3055839,
            3055560,
            3054894,
            3056305,
            3055011,
            3055694,
            3057529
        ],
        "B": [
            3048641,
            3045871,
            3045836,
            3047541,
            3048502,
            3048657,
            3047926,
            3048630,
            3048541,
            3047300,
            3048508,
            3046687,
            3050138,
            3050574,
            3048964,
            3050600,
            3048557,
            3052052
        ],
        "C": [
            3047282,
            3051469,
            3048138,
            3054706,
            3050612,
            3051213,
            3050203,
            3052136,
            3050827,
            3049962,
            3053006,
            3051668,
            3051745,
            3053806,
            3052573,
            3052416,
            3053557,
            3053872,
            3049732
        ],
        "A": [
            3045411,
            3045427,
            3045431,
            3045729,
            3045456,
            3045883,
            3045584,
            3046227,
            3045772,
            3045573,
            3046141,
            3045605,
            3046597,
            3045891,
            3046067,
            3045859,
            3045602,
            3045847
        ]
    },
    "name": "D. Greenhouse Effect",
    "statement": "Emuskald is an avid horticulturist and owns the world’s longest\r\ngreenhouse it is effectively infinite in length.Over the years Emuskald\r\nhas cultivated plants in his greenhouse, of different plant species\r\nnumbered from 1 to . His greenhouse is very narrow and can be viewed as\r\nan infinite line, with each plant occupying a single point on that\r\nline.Emuskald has discovered that each species thrives at a different\r\ntemperature, so he wants to arrange borders that would divide the\r\ngreenhouse into sections numbered from 1 to from left to right with each\r\nsection housing a single species. He is free to place the borders, but\r\nin the end all of the -th species plants must reside in -th section from\r\nthe left.Of course, it is not always possible to place the borders in\r\nsuch way, so Emuskald needs to replant some of his plants. He can remove\r\neach plant from its position and place it anywhere in the greenhouse (at\r\nreal coordinate) with no plant already in it. Since replanting is a lot\r\nof stress for the plants, help Emuskald find the minimum number of\r\nplants he has to replant to be able to place the borders.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\n#include<string.h>\n#include<stdlib.h>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define fr(i,n) for(int i=0;i<n;i++)\n#define fo(i,n) for(int i=1;i<=n;i++)\n#define fe(i,n) for(__typeof(n.begin()) i=n.begin();i!=n.end();i++)\nint f[2][5020],a[5020],b[5020];\nint n,m;\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d%*lf\",a+i),b[i]=a[i];\n\tsort(b,b+n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmemset(f[i&1],0,sizeof f[0]);\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tf[i&1][j]=max(f[i-1&1][j],f[i&1][j-1]);\n\t\t\tif(a[i-1]==b[j-1])\n\t\t\t\tf[i&1][j]=max(f[i&1][j],f[i-1&1][j-1]+1);\n\t\t}\n\t}\n\tprintf(\"%d\",n-f[n&1][n]);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Greenhouse Effect.json",
    "editorial_link": "https://codeforces.com//blog/entry/6596",
    "editorial": "Problem\nThere are n points on the line, each of type from 1 to m. We can freely divide the line into m?-?1 intervals and replace some points so each point with type i is inside the i-th interval numbered 1 to m from left to right. We must find the minimum number of points to replace.\n\nSolution\nFirst, observe that the coordinates dont matter: only the order of the points is important. Let there be some number of points we can replace to achieve the good arrangement. Then all the other points remain in their positions, so their values must be in increasing order from left to right. Then we must find the maximum number of points that can remain in their positions, which is the longest non-decreasing subsequence of types in the input. If it is of length l, the answer is n?-?l.\n\nIn this problem it was enough to implement a quadratic solution. We count dp[i][j]  the length of the longest non-decreasing subsequence on prefix [1;i], with element of type j being the last in subsequence. The transition is as follows:\n\n\nFor easy implementation, we can maintain only array dp[j], and skip the second case.",
    "hint": []
}