{
    "link": "https://codeforces.com//contest/186/problem/B",
    "problemId": "1301",
    "problem_idx": "B",
    "shortId": "186B",
    "contest_number": "186",
    "problem_submissions": {
        "D": [
            1657681,
            1658478,
            1656134,
            1656097,
            1657605,
            1659081,
            1658217,
            1658577,
            1659087,
            1658093,
            1659907,
            1657753,
            1657771
        ],
        "C": [
            1655799,
            1653949,
            1653888,
            1657215,
            1655683,
            1655498,
            1655423,
            1655364,
            1655532,
            1656312,
            1653963,
            1656181,
            1656606
        ],
        "B": [
            1653853,
            1656964,
            1654766,
            1653590,
            1654394,
            1654508,
            1654124,
            1654630,
            1654138,
            1654956,
            1655681,
            1654707,
            1655746
        ],
        "A": [
            1652799,
            1654670,
            80621352,
            1653218,
            1656209,
            1652847,
            1653532,
            1652921,
            1653307,
            1652998,
            1653644,
            1654799,
            1652900,
            1654903
        ],
        "E": [
            4391221
        ]
    },
    "name": "B. Growing Mushrooms",
    "statement": "Each year in the castle of Dwarven King there is a competition in\r\ngrowing mushrooms among the dwarves. The competition is one of the most\r\nprestigious ones, and the winner gets a wooden salad bowl. This year\u2019s\r\nevent brought together the best mushroom growers from around the world,\r\nso we had to slightly change the rules so that the event gets more\r\ninteresting to watch.Each mushroom grower has a mushroom that he will\r\ngrow on the competition. Under the new rules, the competition consists\r\nof two parts. The first part lasts seconds and the second part lasts\r\nseconds. The first and the second part are separated by a little\r\nbreak.After the starting whistle the first part of the contest starts,\r\nand all mushroom growers start growing mushrooms at once, each at his\r\nindividual speed of meters per second. After seconds, the mushroom\r\ngrowers stop growing mushrooms and go to have a break. During the break,\r\nfor unexplained reasons, the growth of all mushrooms is reduced by\r\npercent. After the break the second part of the contest starts and all\r\nmushrooms growers at the same time continue to grow mushrooms, each at\r\nhis individual speed of meters per second. After a seconds after the end\r\nof the break, the competition ends. Note that the speeds before and\r\nafter the break may vary.Before the match dwarf Pasha learned from all\r\nparticipants, what two speeds they have chosen. However, the\r\nparticipants did not want to disclose to him all their strategy and\r\ntherefore, did not say in what order they will be using these speeds.\r\nThat is, if a participant chose speeds and , then there are two\r\nstrategies: he either uses speed before the break and speed after it, or\r\nvice versa.Dwarf Pasha really wants to win the totalizer. He knows that\r\neach participant chooses the strategy that maximizes the height of the\r\nmushroom. Help Dwarf Pasha make the final table of competition\r\nresults.The participants are sorted in the result table by the mushroom\r\nheight (the participants with higher mushrooms follow earlier in the\r\ntable). In case of equal mushroom heights, the participants are sorted\r\nby their numbers (the participants with a smaller number follow\r\nearlier).\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <memory.h>\n#include <string>\n#include <set>\n#include <map>\n#include <queue>\nusing namespace std;\n#define forn(i,n) for(int i=0;i<(n);++i)\n#define forv(i,v) forn(i,(int)(v).size())\n#define iinf 1000000000\n#define linf 1000000000000000000LL\n#define dinf 1e200\n#define all(v) (v).begin(),(v).end()\n#define pb push_back\n#define mp make_pair\n#define lng long long\n#define eps 1e-11\n#define EQ(a,b) (fabs((a)-(b))<eps)\n#define SQ(a) ((a)*(a))\n#define PI 3.14159265359\n#define index asdindex\n#define FI first\n#define SE second\n#define prev asdprev\n#define ends asdends\n#define PII pair<int,int> \n#define X first\n#define Y second\n#define mset(a,b) memset(a,b,sizeof(a))\n\n\n\n\nlng v1[1010], v2[1010];\n\npair<lng, int> heights[1010];\n\nlng grow(lng v1, lng v2,  lng t1, lng t2, lng k){\n    lng res = t1*v1;\n    res=res/100*(100-k);\n    res+=v2*t2;\n    return res;\n}\n\nint main(){\n#ifdef __ASD__\n    freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n    //ios::sync_with_stdio(false);\n    int n;\n    lng t1, t2, k;\n    cin >> n >> t1 >> t2 >> k;\n\n    forn(i,n){\n        cin >> v1[i] >> v2[i];\n        v1[i]*=100;\n        v2[i]*=100;\n        heights[i] = mp(-max(grow(v1[i], v2[i], t1, t2, k), grow(v2[i], v1[i], t1, t2, k)), i);\n    }\n    sort(heights, heights+n);\n    for(int i=0;i<n;++i){\n        heights[i].first*=-1;\n        cout << heights[i].second+1;\n        cout <<\" \";\n        cout << heights[i].first/100;\n        cout <<\".\";\n        printf(\"%02d\\n\", (int)(heights[i].first%100));\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Growing Mushrooms.json",
    "editorial_link": "https://codeforces.com//blog/entry/4488",
    "editorial": "We can see, that we can do all in integers, because k is integer number of percent.\nFor each dwarf we should find his optimal strategy \u0097 to check 2 strategies with speed.\nWe should sort them."
}