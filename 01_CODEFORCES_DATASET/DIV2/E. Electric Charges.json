{
    "link": "https://codeforces.com//contest/624/problem/E",
    "problemId": "47310",
    "problem_idx": "E",
    "shortId": "624E",
    "contest_number": "624",
    "problem_submissions": {
        "D": [
            15806940,
            15809834,
            15815500,
            15815488,
            15808308,
            15806499,
            15822402,
            15822389
        ],
        "C": [
            15799916,
            15800393,
            15799101,
            15798526,
            15798053,
            15812078,
            15803640,
            15799590,
            15811141,
            15805884,
            15804773,
            15807212,
            15803919,
            15798110,
            15802924,
            15800928,
            15805592
        ],
        "B": [
            15793209,
            15795799,
            15793505,
            15792793,
            15792808,
            15793962,
            15793304,
            15801141,
            15793770,
            15794743,
            15794904,
            15792647,
            15795417,
            15795148,
            15800662,
            15793795,
            15793891,
            15802098
        ],
        "A": [
            15791761,
            15792375,
            15792429,
            15819369,
            15791753,
            15791811,
            15792573,
            15791726,
            15792066,
            15792762,
            15792462,
            15791748,
            15792983,
            15792030,
            15791890,
            15791871,
            15791850,
            15792535
        ],
        "E": [
            15845804,
            15845576,
            15805460
        ]
    },
    "name": "E. Electric Charges",
    "statement": "Programmer Sasha is a student at MIPT (Moscow Institute of Physics and\r\nTechnology) and he needs to make a laboratory work to pass his finals.A\r\nlaboratory unit is a plane with standard coordinate axes marked on it.\r\nPhysicists from Moscow Institute of Physics and Technology charged the\r\naxes by large electric charges: axis is positive and axis is\r\nnegative.Experienced laboratory worker marked points with integer\r\ncoordinates on the plane and stopped the time. Sasha should use \"atomic\r\ntweezers\" to place elementary particles in these points. He has an\r\nunlimited number of electrons (negatively charged elementary particles)\r\nand protons (positively charged elementary particles). He can put either\r\nan electron or a proton at each marked point. As soon as all marked\r\npoints are filled with particles, laboratory worker will turn on the\r\ntime again and the particles will come in motion and after some time\r\nthey will stabilize in equilibrium. The objective of the laboratory work\r\nis to arrange the particles in such a way, that the diameter of the\r\nresulting state (the maximum distance between the pairs of points of the\r\nset) is as small as possible.Since Sasha is a programmer, he naively\r\nthinks that all the particles will simply \"fall\" into their projections\r\non the corresponding axes: electrons will fall on axis , while protons\r\nwill fall on axis . As we are programmers too, we will consider the same\r\nmodel as Sasha. That is, a As the laboratory has high background\r\nradiation and Sasha takes care of his laptop, he did not take it with\r\nhim, and now he canâ€™t write a program that computes the minimum possible\r\ndiameter of the resulting set. Therefore, you will have to do it for\r\nhim.Print a of the minimum possible diameter of the set.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <utility>\n#include <algorithm>\n\ntypedef long long ll;\n\nconst int N = 100100;\n\nstd::pair<int, int> a[N], pref[N], suf[N];\nint n;\n\nint min(int a, int b) { return a < b ? a : b; }\nint max(int a, int b) { return a > b ? a : b; }\nll min(ll a, ll b) { return a < b ? a : b; }\nll max(ll a, ll b) { return a > b ? a : b; }\nll sqr(ll x) { return x * x; }\n\nstd::pair<int, int> getP(int x, int y)\n{\n    if (x == 0 && y == n - 1)\n        return {0, 0};\n    return x > 0 ? y < n - 1 ? std::pair<int, int>(min(pref[x - 1].first, suf[y + 1].first), max(pref[x - 1].second, suf[y + 1].second)) : pref[x - 1] : suf[y + 1];\n}\n\nll diam2(int x, int y)\n{\n    auto p = getP(x, y);\n    return max(sqr(p.second - p.first), max(sqr(a[y].first - a[x].first), max(sqr(p.first) + sqr(a[x].first), max(sqr(p.first) + sqr(a[y].first), max(sqr(p.second) + sqr(a[x].first), sqr(p.second) + sqr(a[y].first))))));\n}\n\nbool check(ll len2)\n{\n    int k = 0;\n    for (int i = 0; i < n; ++i)\n    {\n        while (k < n - 1 && sqr(a[k + 1].first - a[i].first) <= len2)\n            ++k;\n        if (diam2(i, k) <= len2)\n            return true;\n    }\n    return false;\n}\n\nll solve()\n{\n    std::sort(a, a + n);\n    pref[0] = {a[0].second, a[0].second};\n    for (int i = 1; i < n; ++i)\n        pref[i] = {min(a[i].second, pref[i - 1].first), max(a[i].second, pref[i - 1].second)};\n    suf[n - 1] = {a[n - 1].second, a[n - 1].second};\n    for (int i = n - 2; i >= 0; --i)\n        suf[i] = {min(a[i].second, suf[i + 1].first), max(a[i].second, suf[i + 1].second)};\n\n    ll s = sqr(a[n - 1].first - a[0].first);\n    int y = n - 1;\n    for (int i = 0; i < n; ++i)\n    {\n        while (sqr(a[y].first) > sqr(a[i].first)) --y;\n        int l = i, r = y;\n        while (l < r)\n        {\n            int t = (l + r + 1) / 2;\n            auto p = getP(i, t);\n            ll d1 = sqr(a[i].first - a[t].first);\n            ll d2 = sqr(a[i].first) + max(sqr(p.first), sqr(p.second));\n            if (d1 <= d2)\n                l = t;\n            else\n                r = t - 1;\n        }\n        s = min(s, diam2(i, l));\n    }\n\n    ll l = 0, r = 1e18;\n    while (l < r)\n    {\n        ll t = (l + r) / 2;\n        if (check(t))\n            r = t;\n        else\n            l = t + 1;\n    }\n    return min(s, l);\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i)\n        scanf(\"%d%d\", &a[i].first, &a[i].second);\n\n\n    ll r = 1e18;\n    for (int it = 0; it < 4; ++it)\n    {\n        if (it & 1)\n            for (int i = 0; i < n; ++i)\n                a[i].first = -a[i].first;\n        if (it == 2)\n            for (int i = 0; i < n; ++i)\n                std::swap(a[i].first, a[i].second);\n        r = min(r, solve());\n    }\n\n    printf(\"%I64d\\n\", r);\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Electric Charges.json",
    "editorial_link": "https://codeforces.com//blog/entry/23278",
    "editorial": null,
    "hint": []
}