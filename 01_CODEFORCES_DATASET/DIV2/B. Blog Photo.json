{"link": "https://codeforces.com//contest/53/problem/B", "problemId": "277", "problem_idx": "B", "shortId": "53B", "contest_number": "53", "problem_submissions": {"D": [239021, 239193, 238722, 239346, 239182, 239848, 239737, 238790, 238737, 238732, 238838, 238854, 238943, 239423], "C": [238660, 238284, 238456, 239097, 238366, 238317, 238648, 238222, 238274, 238168, 238487, 238198, 238286, 238820], "B": [238516, 238801, 239508, 238926, 239954, 239467, 238856, 240487, 241511, 239803], "A": [237956, 237921, 237848, 238380, 239531, 242667, 237923, 237920, 237851, 237863, 237845, 237871, 237932, 237861, 237905], "E": [267303, 243881]}, "name": "B. Blog Photo", "statement": "One popular blog site edits the uploaded photos like this. It cuts a\r\nrectangular area out of them so that the ratio of height to width (i.e.\r\nthe quotient) can vary from 0.8 to 1.25 inclusively. Besides, at least\r\none side of the cut area should have a size, equal to some power of\r\nnumber 2 ( for some integer ). If those rules don\u2019t indicate the size of\r\nthe cut are clearly, then the way with which the cut part possesses the\r\nlargest area is chosen. Of course, both sides of the cut area should be\r\ninteger. If there are several answers to this problem, you should choose\r\nthe answer with the maximal height.\r\n", "solutions": ["#pragma comment(linker,\"/stack:67108864\")\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <sstream>\n#include <fstream>\n#include <climits>\n#include <cfloat>\n#include <functional>\n#include <ctime>\n#include <numeric>\n#include <cstdlib>\n#include <cctype>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <utility>\n#include <bitset>\n#include <string>\n#include <list>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <typeinfo>\n#include <cassert>\n#include <ctime>\n\nusing namespace std;\n\n#define forn(i,n) for(int i=0;i<int(n);++i)\n#define forn1(i,n) for(int i=1;i<=int(n);++i)\n#define ford(i,n) for(int i=int(n)-1;i>=0;--i)\n#define ford1(i,n) for(int i=int(n);i>0;--i)\n#define foran(i,l,r) for(int i=int(l);i<int(r);++i)\n\n#define X first\n#define Y second\n#define mp make_pair\n#define pb push_back\n#define sqr(x) (x)*(x)\n#define all(v) (v).begin(),(v).end()\n\ntypedef long double ld;\ntypedef long long ll;\ntypedef pair <ld ,ld > pt;\n\nconst ld EPS=1e-9;\nconst ld PI=3.1415926535897932384626433832795;\n\nconst int INF=1000*1000*1000;\nconst int CF=1;\n\nint main()\n{\n    if(!CF) freopen(\"input.txt\",\"r\",stdin);\n    //freopen(\"output.txt\",\"w\",stdout);\n    ll h,w;\n    cin >>h >>w;\n    vector <ll> p;\n    ll t=1;\n    while(t<=max(h,w))\n    {       \n        p.push_back(t);\n        t*=2;\n    }\n    vector <pair<ll,pair<ll,ll> >> ans;\n    forn(i,p.size())\n    {\n        if(w<p[i]) break;\n        if(h<0.8*p[i]) break;\n        ans.push_back(mp(min(h,ll(1.25*p[i]))*p[i],mp(min(h,ll(1.25*p[i])),p[i])));\n    }\n    forn(i,p.size())\n    {\n        if(h<p[i]) break;\n        if(w<0.8*p[i]) break;\n        ans.push_back(mp(p[i]*min(w,ll(1.25*p[i])),mp(p[i],min(w,ll(1.25*p[i])))));\n    }\n    sort(all(ans));\n    cout <<ans.back().second.first <<\" \" <<ans.back().second.second<<endl;\n    return 0;\n}"], "input": "", "output": "", "tags": ["binary search", "implementation"], "dificulty": "1700", "interactive": false}