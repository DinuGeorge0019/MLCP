{"link": "https://codeforces.com//contest/1484/problem/F", "problemId": "931269", "problem_idx": "F", "shortId": "1484F", "contest_number": "1484", "problem_submissions": {"F": [110657532, 110661405, 110668413, 110665063, 110667584, 110693226, 110689740, 110699242, 110689519, 110729936], "E": [110652520, 110652573, 110656142, 110659865, 110659655, 110638421, 110657125, 110656123, 110656364, 110659863, 110649695, 110648134, 110661585, 110638998, 110667069, 110662656, 110665042, 110662940, 110667246, 110664847], "D": [110648415, 110645978, 110649799, 110651144, 110649241, 110642542, 110646537, 110651979, 110643535, 110649770, 110657613, 110654803, 110657052, 110642182, 110653908, 110653309, 110651762, 110658162, 110653592, 110654689], "C": [110640873, 110642187, 110633376, 110636572, 110644279, 110636058, 110637281, 110637639, 110639537, 110639114, 110634672, 110661474, 110641726, 110639210, 110640003, 110642952, 110644966, 110648405, 110643573, 110647774], "B": [110632955, 110638515, 110644328, 110642323, 110639199, 110633637, 110635087, 110632899, 110632555, 110636089, 110632943, 110635814, 110637169, 110730778, 110636805, 110637796, 110637626, 110638325, 110638006, 110641086], "A": [110627328, 110628878, 110637469, 110632147, 110630333, 110627835, 110626002, 110626585, 110625791, 110627648, 110626340, 110627768, 110629720, 110626163, 110628247, 110631925, 110627992, 110627111, 110625876, 110626130]}, "name": "F. Useful Edges", "statement": "You are given a weighted undirected graph on n vertices along with q\r\ntriples (u, v, l), where in each triple u and v are vertices and l is a\r\npositive integer. An edge e is called if there is at least one triple\r\n(u, v, l) and a path (not necessarily simple) with the following\r\nproperties: u and v are the endpoints of this path, e is one of the\r\nedges of this path, the sum of weights of all edges on this path doesn\u2019t\r\nexceed l. Please print the number of useful edges in this graph.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define R register\n#define N 605\n#define ll long long\n\nconst ll inf=1e18;//\nstruct stu{\n\tint v;\n\tll l;\n\t\n\tstu(){}\n\tstu(int vv,ll lr){v=vv,l=lr;}\n};\n\nstd::vector<stu> vec[N];\nll dis[N][N];\nint FR[N*N],TO[N*N],n,m;\nll W[N*N]; //\u51b2\u51b2\u51b2\nll cfy[N];\nbool bj[N*N];\n\nint main(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(R int i=n;i;--i) dis[i][i]=0;\n\tfor(R int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&FR[i],&TO[i],&W[i]);\n\t\tdis[FR[i]][TO[i]]=std::min(dis[FR[i]][TO[i]],W[i]);\n\t\tdis[TO[i]][FR[i]]=std::min(dis[TO[i]][FR[i]],W[i]);\n\t}\n\tfor(R int k=1;k<=n;++k)\n\t\tfor(R int i=1;i<=n;++i)\n\t\t\tfor(R int j=1;j<=n;++j) dis[i][j]=std::min(dis[i][j],dis[i][k]+dis[k][j]);\n\tR int qq;\n\tscanf(\"%d\",&qq);\n\twhile(qq-- >0){\n\t\tR int uu,vv;R ll lr;\n\t\tscanf(\"%d%d%lld\",&uu,&vv,&lr);\n\t\tvec[uu].push_back(stu(vv,lr));\n\t\tvec[vv].push_back(stu(uu,lr));\n\t}\n\tfor(R int u=1;u<=n;++u){\n\t\tfor(R int v=1;v<=n;++v) cfy[v]=-inf;\n\t\tR int qwq=vec[u].size();\n\t\tfor(R int i=0;i<qwq;++i){\n\t\t\tR int v=vec[u][i].v;\n\t\t\tR ll l=vec[u][i].l;\n\t\t\tfor(R int y=1;y<=n;++y) //\u590d\u6742\u5ea6\u4e0a\u5929\u4e86\n\t\t\t{\n\t\t\t\tcfy[y]=std::max(cfy[y],l-dis[v][y]);\n\t\t\t}\n\t\t}\n\t\tfor(R int i=1;i<=m;++i){\n\t\t\tR int x=FR[i],y=TO[i];\n\t\t\tR ll e=W[i];\n\t\t\tif(dis[u][x]+e<=cfy[y]){\n\t\t\t\tbj[i] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tR int ans=0;\n\tfor(R int i=1;i<=m;++i) if(bj[i]) ++ans;\n\tstd::cout<<ans << '\\n';\n}"], "input": "", "output": "", "tags": ["brute force", "graphs", "shortest paths"], "dificulty": "2400", "interactive": false}