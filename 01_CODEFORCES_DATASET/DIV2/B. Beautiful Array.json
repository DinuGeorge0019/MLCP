{
    "link": "https://codeforces.com//contest/1715/problem/B",
    "problemId": "1513950",
    "problem_idx": "B",
    "shortId": "1715B",
    "contest_number": "1715",
    "problem_submissions": {
        "F": [
            169148274,
            169155365,
            169130889,
            169155985,
            169108945,
            169574810,
            169163231,
            169141940,
            169196708
        ],
        "E": [
            169127780,
            169131038,
            169118368,
            169119601,
            169121517,
            169134266,
            169131152,
            169132329,
            169132606,
            169133682,
            169162968,
            169135131,
            169132730,
            169135556,
            169141593,
            169136787,
            169114950,
            169142196,
            169141933,
            169141598
        ],
        "D": [
            169113859,
            169112143,
            169123073,
            169198160,
            169109801,
            169126906,
            169218994,
            169116160,
            169193819,
            169119863,
            169123507,
            169122322,
            169117695,
            169108158,
            169121681,
            169123192,
            169123408,
            169275333,
            169121118,
            169125621,
            169118823,
            169120372,
            169123621,
            169124629
        ],
        "C": [
            169107451,
            169103179,
            169137078,
            169101370,
            169129288,
            169102686,
            169112899,
            169107306,
            169108346,
            169113649,
            169121461,
            169112477,
            169108680,
            169197238,
            169116719,
            169112431,
            169195068,
            169118011,
            169144372,
            169114599,
            169111934,
            169113718
        ],
        "B": [
            169102135,
            169098162,
            169135707,
            169097670,
            169093858,
            169101514,
            169098876,
            169101987,
            169101035,
            169096282,
            169099222,
            169103628,
            169099009,
            169100124,
            169100205,
            169104726,
            169103909,
            169104946,
            169099294
        ],
        "A": [
            169092934,
            169092062,
            169134952,
            169093933,
            169091995,
            169093151,
            169092986,
            169094481,
            169092501,
            169092283,
            169092715,
            169094922,
            169093338,
            169093831,
            169094306,
            169125908,
            169096348,
            169096156,
            169094226
        ]
    },
    "name": "B. Beautiful Array",
    "statement": "Stanley defines the beauty of an array a of length n, which contains ,\r\nas follows:\r\nsum\r\nlimits_{i = 1}^{n}\r\nleft\r\nlfloor\r\nfrac{a_{i}}{k}\r\nright\r\nrfloor, which means that we divide each element by k, round it down, and\r\nsum up the resulting values.Stanley told Sam the integer k and asked him\r\nto find an array a of n non-negative integers, such that the beauty is\r\nequal to b and the sum of elements is equal to s. Help Sam find any of\r\nthe arrays satisfying the conditions above.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline int in(){\n\tint x;\n\tscanf(\"%d\",&x);\n\treturn x;\n}\ntypedef long long ll;\nint n,k,b;\nll s;\nll a[100005];\nvoid solve(){\n\tn=in(),k=in(),b=in();scanf(\"%lld\",&s);\n\tfor(int i=1;i<=n;i++)a[i]=0;\n\ta[1]=(ll)k*b;s-=a[1];\n\tif(s<0){\n\t\tputs(\"-1\");\n\t\treturn;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tll v=min((ll)k-1,s);\n\t\ts-=v;a[i]+=v;\t\n\t}\n\tif(s!=0){\n\t\tputs(\"-1\");\n\t\treturn;\t\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%lld \",a[i]),a[i]=0;\n\tputs(\"\");\n}\nint main(){\n\tint t=in();\n\twhile(t--)solve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Beautiful Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/104261",
    "editorial": "To start with, the sum of the numbers in the array cannot be less, than\r\n(where is the number by which we divide, and is beauty ())It is\r\nimportant, that . Let\u00e2\u0080\u0099s assume that is not true. Consider the sum of\r\ndivisible parts of numbers in the array: it obviously does not exceed ,\r\nthus the sum of remainders is at least , which means, that at least one\r\nof the numbers\u00e2\u0080\u0099 remainders is , which is impossible by definition of the\r\nremainder.That way we got the criteria for the existence of the answer:\r\n.If there does exist an answer, then we can use the following algorithm:\r\nAssign to any of the cells of the array. Iterate over all the cells\r\n(including the cell from the previous item) and add to the current cell,\r\nwhere is the current sum of the elements.\r\n"
}