{
    "link": "https://codeforces.com//contest/1778/problem/B",
    "problemId": "1760987",
    "problem_idx": "B",
    "shortId": "1778B",
    "contest_number": "1778",
    "problem_submissions": {
        "F": [
            191602138,
            191602532,
            191585447,
            191594114,
            191608712,
            191599535,
            191655210,
            191599057,
            191639606,
            191639396,
            194532248,
            191803468
        ],
        "E": [
            191585870,
            191584814,
            191630281,
            191592729,
            191585095,
            191596251,
            191595141,
            191596106,
            191592952,
            191595620,
            191594841,
            191592544,
            191599842,
            192093615,
            191596381,
            191597065,
            191595454
        ],
        "D": [
            191578502,
            191573421,
            191565024,
            191574576,
            191564042,
            191573088,
            191575933,
            191584703,
            191563224,
            191573409,
            191579570,
            191582926,
            191579755,
            191563101,
            191580474,
            191576462,
            192093593,
            191580965,
            191580785,
            191581424
        ],
        "C": [
            191564515,
            191569583,
            191570422,
            191567662,
            191567630,
            191565698,
            191566998,
            191565471,
            191569851,
            191564933,
            191565678,
            191572047,
            191565438,
            191575434,
            191578186,
            191570415,
            192093564,
            191571887,
            191568771,
            191569498
        ],
        "B": [
            191559138,
            191557434,
            191555391,
            191555255,
            191553335,
            191555438,
            191554286,
            191555414,
            191559515,
            191556063,
            191555690,
            191562726,
            191558781,
            191582547,
            191561046,
            191559475,
            192093542,
            191562296,
            191558152,
            191563075
        ],
        "A": [
            191546307,
            191548742,
            191545919,
            191546220,
            191545819,
            191546256,
            191546020,
            191545963,
            191558184,
            191545949,
            191545987,
            191550651,
            191554728,
            191565464,
            191546734,
            191548201,
            192093519,
            191547332,
            191546175,
            191551024
        ]
    },
    "name": "B. The Forbidden Permutation",
    "statement": "You are given a permutation p of length n, an array of m integers a_1,\r\na_2,\r\nldots, a_m (1\r\nle a_i\r\nle n), and an integer d.Let\r\nmathrm{pos}(x) be the index of x in the permutation p. The array a is if\r\nmathrm{pos}(a_{i}) <\r\nmathrm{pos}(a_{i + 1})\r\nle\r\nmathrm{pos}(a_{i}) + d for all 1\r\nle i < m. For example, with the permutation p = [4, 2, 1, 3, 6, 5] and d\r\n= 2: a = [2, 3, 6] is a not array. a = [2, 6, 5] is because\r\nmathrm{pos}(a_1) = 2,\r\nmathrm{pos}(a_2) = 5, so the condition\r\nmathrm{pos}(a_2)\r\nle\r\nmathrm{pos}(a_1) + d is not satisfied. a = [1, 6, 3] is because\r\nmathrm{pos}(a_2) = 5,\r\nmathrm{pos}(a_3) = 4, so the condition\r\nmathrm{pos}(a_2) <\r\nmathrm{pos}(a_3) is not satisfied. In one move, you can swap two\r\nadjacent elements of the permutation p. What is the minimum number of\r\nmoves needed such that the array a becomes ? It can be shown that there\r\nalways exists a sequence of moves so that the array a becomes .A\r\npermutation is an array consisting of n distinct integers from 1 to n in\r\narbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2]\r\nis not a permutation (2 appears twice in the array) and [1,3,4] is also\r\nnot a permutation (n=3, but there is 4 in the array).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define F first\n#define S second\n//inline int fastpow(int x, int y){\n//\tint z=1;\n//\tfor (; y; y>>=1,x=1ll*x*x%mod)\n//\t\tif (y&1) z=1ll*z*x%mod;\n//\treturn z;\n//}\nint T,n,m,d,a[200005],p[200005],pos[200005];\nint main(){\n\tfor (cin>>T; T; T--){\n\t\tscanf(\"%d%d%d\",&n,&m,&d);\n\t\tfor (int i=1; i<=n; i++) scanf(\"%d\",&p[i]),pos[p[i]]=i;\n\t\tfor (int i=1; i<=m; i++) scanf(\"%d\",&a[i]);\n\t\tint ans=1e9;\n\t\tfor (int i=1; i<m; i++){\n\t\t\tif (pos[a[i+1]]<pos[a[i]] || pos[a[i+1]]>pos[a[i]]+d) ans=0;\n\t\t\telse {\n\t\t\t\tans=min(ans,pos[a[i+1]]-pos[a[i]]);\n\t\t\t\tif (d+2<=n) ans=min(ans,d-(pos[a[i+1]]-pos[a[i]]-1));\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. The Forbidden Permutation.json",
    "editorial_link": "https://codeforces.com//blog/entry/112149",
    "editorial": "If the array is , the answer is obviously . Now, how can we optimally\r\ntransform a array to a array? Let, we are on the index and , . If we\r\nobserve carefully, we will find that there are basically two cases that\r\nwill make the array : Move and in the permutation in such a way that\r\nbecomes greater than . To do that, in the permutation , we can swap to\r\nthe left and to the right. The total number of swaps needed is . We need\r\nto check if there is enough space to the left of and to the right of to\r\nperform the needed number of swaps. Move and in the permutation in such\r\na way that becomes smaller than . To do that, In the permutation , we\r\ncan simply swap to the left until the condition is satisfied. The number\r\nof swaps needed is . For each , calculate the minimum number of swaps\r\nneeded among these two cases. The minimum number of swaps among all will\r\nbe the desired answer.Time complexity: In each test case,\r\n"
}