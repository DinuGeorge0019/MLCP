{
    "link": "https://codeforces.com//contest/586/problem/B",
    "problemId": "37959",
    "problem_idx": "B",
    "shortId": "586B",
    "contest_number": "586",
    "problem_submissions": {
        "E": [
            13567845,
            13568877,
            13567853,
            13571593,
            13562355,
            13570559,
            13579749,
            13567129,
            13570139
        ],
        "D": [
            13563971,
            13564646,
            13563820,
            13563849,
            13568951,
            13565926,
            13563286,
            13563128,
            13565918,
            13569000,
            13562593,
            13568454,
            13565954,
            13567393,
            13563819,
            13565909,
            13564075,
            13560941,
            13564537
        ],
        "B": [
            13561164,
            13559370,
            13561077,
            13558098,
            13558769,
            13558957,
            13558122,
            13557083,
            13558517,
            13557741,
            13558248,
            13560292,
            13558220,
            13559476,
            13561469,
            13562240,
            13557548,
            13564661,
            13557987
        ],
        "C": [
            13559947,
            13561510,
            13560077,
            13560242,
            13565430,
            13561001,
            13561323,
            13561803,
            13560466,
            13563719,
            13560353,
            13561394,
            13595712,
            13558752,
            13585345,
            13584852
        ],
        "A": [
            13555951,
            13556306,
            13555953,
            13556124,
            13556417,
            13555955,
            13556118,
            13555916,
            13556066,
            13556106,
            13556370,
            13556409,
            13556782,
            13556040,
            13560781,
            13556168,
            13565723,
            13556286
        ],
        "F": [
            13577881,
            13572057,
            13572184,
            13570880,
            13588219,
            13595048,
            13570334,
            13571136,
            13601061
        ]
    },
    "name": "B. Laurenty and Shop",
    "statement": "A little boy Laurenty has been playing his favourite game for quite a\r\nwhile and is now very hungry. The boy wants to make sausage and cheese\r\nsandwiches, but first, he needs to buy a sausage and some cheese.The\r\ntown where Laurenty lives in is not large. The houses in it are located\r\nin two rows, houses in each row. Laurenty lives in the very last house\r\nof the second row. The only shop in town is placed in the first house of\r\nthe first row.The first and second rows are separated with the main\r\navenue of the city. The adjacent houses of one row are separated by\r\nstreets.Each crosswalk of a street or an avenue has some traffic lights.\r\nIn order to cross the street, you need to press a button on the traffic\r\nlight, wait for a while for the green light and cross the street.\r\nDifferent traffic lights can have different waiting time.The traffic\r\nlight on the crosswalk from the -th house of the -th row to the -th\r\nhouse of the same row has waiting time equal to (). For the traffic\r\nlight on the crossing from the -th house of one row to the -th house of\r\nanother row the waiting time equals (). The city doesn’t have any other\r\ncrossings.The boy wants to get to the store, buy the products and go\r\nback. The main avenue of the city is wide enough, so the boy wants to\r\ncross it on the way to the store and on the way back home. The boy would\r\nget bored if he had to walk the same way again, so he wants the way home\r\nto be different from the way to the store in at least one crossing. Help\r\nLaurenty determine the minimum total time he needs to wait at the\r\ncrossroads.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <algorithm>\n\nconst int INF = ~0u >> 2;\nconst int MAXN = 10001;\n\nint n, a[3][MAXN], b[MAXN];\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 2; i <= n; i++) {\n\t\tscanf(\"%d\", a[1] + i);\n\t\ta[1][i] += a[1][i - 1];\n\t}\n\tfor (int i = 2; i <= n; i++) {\n\t\tscanf(\"%d\", a[2] + i);\n\t\ta[2][i] += a[2][i - 1];\n\t}\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", b + i);\n\tint answer = INF;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j < i; j++) {\n\t\t\tint tmp = a[1][i] + a[1][j];\n\t\t\ttmp += a[2][n] - a[2][j] + a[2][n] - a[2][i];\n\t\t\ttmp += b[i] + b[j];\n\t\t\tanswer = std::min(answer, tmp);\n\t\t}\n\tprintf(\"%d\\n\", answer);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Laurenty and Shop.json",
    "editorial_link": "https://codeforces.com//blog/entry/20898",
    "editorial": "The problem has been prepared by Oleg_Smirnov. Letâs call some path th\r\nif we start it by going times left, then we cross the prospect and go\r\nleft times again. Let be equal to the time we should wait on traffic\r\nlights while following -th path. If we consider any way from the shop to\r\nhome, it is equal (but reversed) to only path from home to the shop,\r\nmeaning that we need to find two distinct paths from home to the shop.\r\nSo the answer to the problem is the sum of the smallest and the second\r\nsmallest values among . One could easily calculate using calculated , so\r\ncould be found in one for cycle. If we will consider only two minimum\r\nvalues among , solution complexity will be . Complexity: .\r\n",
    "hint": []
}