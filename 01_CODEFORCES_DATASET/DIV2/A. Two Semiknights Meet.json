{
    "link": "https://codeforces.com//contest/362/problem/A",
    "problemId": "3969",
    "problem_idx": "A",
    "shortId": "362A",
    "contest_number": "362",
    "problem_submissions": {
        "D": [
            5106574,
            5109805,
            5108707,
            5110095,
            5109823,
            5107984,
            5114349,
            5146913
        ],
        "C": [
            5103024,
            5102004,
            5102280,
            5104232,
            5104539,
            5104677,
            5106034,
            5103492,
            5106177,
            5103173,
            5110444,
            5105776,
            5106214,
            5105579,
            5106217,
            5104642
        ],
        "A": [
            5100714,
            5100012,
            5099653,
            5099996,
            5099930,
            5099251,
            5099198,
            5105643,
            5100062,
            5106330,
            5099189,
            5101295,
            5100008,
            5100185,
            5101540,
            5101308
        ],
        "B": [
            5099807,
            5109634,
            5098724,
            5099026,
            5100692,
            5100418,
            5100315,
            5100379,
            5098852,
            5099011,
            5103916,
            5100105,
            5100650,
            5101467,
            5105783,
            5102571,
            5102169
        ],
        "E": [
            5106815,
            5107748,
            5110196
        ]
    },
    "name": "A. Two Semiknights Meet",
    "statement": "A boy Petya loves chess very much. He even came up with a chess piece of\r\nhis own, a semiknight. The semiknight can move in any of these four\r\ndirections: squares forward and squares to the right, squares forward\r\nand squares to the left, squares backward and to the right and squares\r\nbackward and to the left. Naturally, the semiknight cannot move beyond\r\nthe limits of the chessboard.Petya put two semiknights on a standard\r\nchessboard. Petya simultaneously moves with both semiknights. The\r\nsquares are rather large, so after some move the semiknights can meet,\r\nthat is, they can end up in the same square. After the meeting the\r\nsemiknights can move on, so it is possible that they meet again. Petya\r\nwonders if there is such sequence of moves when the semiknights meet.\r\nPetya considers some squares bad. That is, they do not suit for the\r\nmeeting. The semiknights can move through these squares but their\r\nmeetings in these squares don’t count.Petya prepared multiple chess\r\nboards. Help Petya find out whether the semiknights can meet on some\r\ngood square for each board.Please see the test case analysis.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <list>\n#include <map>\n#include <set>\n#include <stdlib.h>\n#include <sstream>\n#include <assert.h>\n#include <complex>\n\n#include <time.h>\n#pragma comment(linker, \"/STACK:20000000\")\n\n#define fr(i,a,b) for(int i=(int)(a);i<=(int)(b);i++)\n#define fd(i,a,b) for(int i=(int)(a);i>=(int)(b);i--)\n#define mp make_pair\n#define pb push_back\n#define ll long long\n\nusing namespace std;\n\nint ri(){int x;scanf(\"%d\",&x);return x;}\nll rll(){ll x;scanf(\"%lld\",&x);return x;}\n\nint dx[] = {2,2,-2,-2};\nint dy[] = {2,-2,2,-2};\n\nint used[3][10][10];\n\nvoid solve()\n{\n\tint test = ri();\n\tfr(testin,1,test)\n\t{\n\t\tmemset(used,0,sizeof(used));\n\t\tvector<string> mas;\n\t\tfr(i,0,7)\n\t\t{\n\t\t\tstring s;\n\t\t\tcin >> s;\n\t\t\tmas.pb(s);\n\t\t}\n\t\tint cnt = 0;\n\t\tvector<pair<int,int> > omg;\n\t\tfr(i,0,7)\n\t\t{\n\t\t\tfr(j,0,7)\n\t\t\t\tif (mas[i][j] == 'K')\n\t\t\t\t{\n\t\t\t\t\tomg.pb(mp(i,j));\n\t\t\t\t\t\n\t\t\t\t\tcnt++;\n\t\t\t\t\tused[cnt][i][j] = 1;\n\t\t\t\t\tqueue<pair<int,int> > st;\n\t\t\t\t\tst.push(mp(i,j));\n\t\t\t\t\twhile(!st.empty())\n\t\t\t\t\t{\n\t\t\t\t\t\tint x = st.front().first;\n\t\t\t\t\t\tint y = st.front().second;\n\t\t\t\t\t\tst.pop();\n\t\t\t\t\t\tfr(k,0,3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint xx = x + dx[k],yy = y + dy[k];\n\t\t\t\t\t\t\tif (xx >= 0 && xx < 8 && yy >= 0 && yy < 8 && !used[cnt][xx][yy])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tused[cnt][xx][yy] = used[cnt][x][y] + 1;\n\t\t\t\t\t\t\t\tst.push(mp(xx,yy));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t}\n\t\tbool yes = false;\n\t\tfr(i,0,7)\n\t\t\tfr(j,0,7)\n\t\t\tif (used[1][i][j] && used[2][i][j] && ((used[1][i][j] % 2) == (used[2][i][j]%2)) &&  mas[i][j] !='#')\n\t\t\t\t{\n\t\t\t\t\tyes = true;\n\t\t\t\t}\n\t\t//int cnt = abs(omg[0].first - omg[1].first) + abs(omg[1].second - omg[0].second);\n\t\tif (yes)\n\t\t\tcout << \"YES\" << endl;\n\t\telse\n\t\t\tcout << \"NO\" << endl;\n\t}\n}\n\nint main()\n{\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"C:/Users/CleRIC/Desktop/Универ/acm.timus.ru/input.txt\",\"rt\",stdin);\n\t\tfreopen(\"C:/Users/CleRIC/Desktop/Универ/acm.timus.ru/output.txt\",\"wt\",stdout);\n\t#else\n\t\t//freopen(\"cubroot.in\",\"rt\",stdin);\n\t\t//freopen(\"cubroot.out\",\"wt\",stdout);\n\t#endif\n\n\tsolve();\n\n\t#ifndef ONLINE_JUDGE\n\t\tprintf(\"\\n\\ntime-%.3lf\",clock()*1e-3);\n\t#endif\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Two Semiknights Meet.json",
    "editorial_link": "https://codeforces.com//blog/entry/9584",
    "editorial": "Autors have proposed different solutions. One can notice that if\r\nsemiknights did not have a meeting after first step (it is not necessary\r\nthey have a meeting in \"good\" square), they will not meet at all. This\r\nfact appears from board size and possible semiknightâs moves. As the\r\ninitial semiknightâs squares are considered good for the meeting the\r\nsemiknights have arrived to the one square and then they move together\r\nto one of the initial squares and meeting will count.\r\n",
    "hint": []
}