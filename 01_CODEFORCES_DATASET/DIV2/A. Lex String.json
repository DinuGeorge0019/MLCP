{"link": "https://codeforces.com//contest/1689/problem/A", "problemId": "1426168", "problem_idx": "A", "shortId": "1689A", "contest_number": "1689", "problem_submissions": {"E": [160112065, 160122128, 160125790, 160125174, 160129572, 160129585, 160131786, 160198613, 160135003, 160132850, 160130305, 160129724, 160130309, 160134699, 160132208, 160134730, 160133947, 160135624, 160132845], "D": [160105444, 160106619, 160103165, 160105284, 160109476, 160111661, 160111580, 160114903, 160117754, 160223912, 160117858, 160115373, 160119358, 160119569, 160110447, 160119288, 160122102, 160117625, 160122103], "C": [160101725, 160101027, 160100377, 160100502, 160102947, 160104518, 160104470, 160103940, 160105751, 160106384, 160109439, 160101319, 160107036, 160099160, 160109505, 160110151, 160109766, 160109925], "B": [160095106, 160095099, 160095692, 160094546, 160098042, 160100154, 160098117, 160097987, 160101496, 160099759, 160105755, 160095146, 160101519, 160094285, 160105059, 160102238, 160103140, 160102070], "A": [160093939, 160093596, 160093753, 160097601, 160094503, 160096047, 160095876, 160093955, 160095035, 160094694, 160102269, 160093545, 160098465, 160096387, 160095131, 160099800, 160098054, 160096796]}, "name": "A. Lex String", "statement": "Recently, Kuznecov has found two strings, a and b, of lengths n and m\r\nrespectively. They consist of lowercase English letters and . Let\r\nanother string c be initially empty. Kuznecov can do the following two\r\ntypes of operations: Choose any character from the string a, remove it\r\nfrom a, and add it to the end of c. Choose any character from the string\r\nb, remove it from b, and add it to the end of c. But, he can not do more\r\nthan k operations of the same type in a row. He must perform operations\r\nuntil either a or b becomes empty. What is the lexicographically\r\nsmallest possible value of c after he finishes?A string x is\r\nlexicographically smaller than a string y if and only if one of the\r\nfollowing holds: x is a prefix of y, but x\r\nneq y; in the first position where x and y differ, the string x has a\r\nletter that appears earlier in the alphabet than the corresponding\r\nletter in y.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint T, n, m, k;\n\nint main() {\n    ios::sync_with_stdio(false); cin.tie(0);\n    cin >> T;\n    while (T--) {\n        string a, b, ans;\n        cin >> n >> m >> k >> a >> b;\n        auto solve = [&](string &a) {\n            for (int i = 0; i < a.length(); i++) {\n                for (int j = 0; j + 1 < a.length(); j++) {\n                    if (a[j] > a[j + 1]) swap(a[j], a[j + 1]);\n                }\n            }\n        };\n        solve(a); solve(b);\n        int i = 0, j = 0, cnt = 0, d = -1;\n        while (i < a.length() && j < b.length()) {\n            int o = 1;\n            if ((d == 1 && cnt == k) || ((d != 0 || cnt != k) && (a[i] < b[j]))) o = 0;\n            if (o == d) ++cnt;\n            else d = o, cnt = 1;\n            if (o == 0) ans = ans + a[i], ++i;\n            else ans = ans + b[j], ++j;\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "greedy", "implementation", "sortings", "two pointers"], "dificulty": "800", "interactive": false}