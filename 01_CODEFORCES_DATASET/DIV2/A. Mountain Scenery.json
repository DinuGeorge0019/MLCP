{"link": "https://codeforces.com//contest/218/problem/A", "problemId": "1602", "problem_idx": "A", "shortId": "218A", "contest_number": "218", "problem_submissions": {"A": [2028997, 2030227, 2025031, 2023765, 2025778, 2023917, 2029081, 2023851, 2023845, 2024188, 2023869, 2024364, 2024261, 2023609, 2024507, 2024842, 2024515, 2024643, 2025004, 2024115], "B": [2028813, 2025859, 2024728, 2025181, 2025174, 2028767, 2024807, 2024938, 2025059, 2025512, 2025303, 2025424, 2024591, 2025144, 2027115, 2026214, 2030523, 2024374, 2025288], "D": [2028228, 2028076, 2028096, 2028561, 2028483, 2028471, 2029257, 2029154, 2029165, 2029185, 2029136, 2029276, 2029497, 2029486, 2028924, 2029787, 2028899], "C": [2024163, 2023867, 2025504, 2024348, 2026143, 2024315, 2025600, 2025742, 2025843, 2026651, 2026604, 2026297, 2025597, 2026207, 2026007, 2026046, 2026139, 2026389], "E": [2032581, 2031030]}, "name": "A. Mountain Scenery", "statement": "Little Bolek has found a picture with mountain peaks painted on it. The\r\npainted peaks are represented by a non-closed polyline, consisting of\r\nsegments. The segments go through points with coordinates , , , , with\r\nthe -th segment connecting the point and the point . For any even the\r\nfollowing condition holds: and . We shall call a vertex of a polyline\r\nwith an even coordinate a . Bolek fancied a little mischief. He chose\r\nexactly mountain peaks, rubbed out the segments that went through those\r\npeaks and increased each peak\u2019s height by one (that is, he increased the\r\ncoordinate of the corresponding points). Then he painted the missing\r\nsegments to get a new picture of mountain peaks. Let us denote the\r\npoints through which the new polyline passes on Bolek\u2019s new picture as ,\r\n, , .Given Bolek\u2019s final picture, restore the initial one.\r\n", "solutions": ["/*\n * =====================================================================================\n *\n *         Author:  KissBuaa.DS(AC)\n *        Company:  BUAA-ACMICPC-Group\n *\n * =====================================================================================\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//#include <stdbool.h>\n#include <math.h>\n#define LL long long\n#define CLR(x) memset(x,0,sizeof(x))\n#define typec double\n#define sqr(x) ((x)*(x))\n#define abs(x) ((x)<0?(-(x)):(x))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define max(a,b) ((a)>(b)?(a):(b))\n#define PI acos(-1.0)\n#define lowbit(x) ((x)&(-(x)))\n#define lson l , m , rt << 1\n#define rson m + 1 , r , rt << 1 | 1\n#define inf 100000000\n//For C++\n#include <cctype>\n#include <algorithm>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <list>\n#include <iostream>\nusing namespace std;\nconst double eps=1e-10;\nint dblcmp(typec d) {\n    if (fabs(d)<eps)\n       return 0;\n    return (d>0)?1:-1;\n}\nint n,m,T;\nconst int N=1000;\nint a[N],p;\nint main(){\n    cin>>n>>m;\n    for (int i=0;i<2*n+1;++i)\n        cin>>a[i];\n    p=0;\n    for(int i=0;i<2*n+1;++i)\n        if (a[i]>a[p]) p=i;\n    p=a[p];\n    while(m){\n        for (int i=0;i<2*n+1 && m;++i){\n            if(!(i&1)) continue;\n            if (a[i] && (i==0 || a[i-1]<a[i]-1) && (i==2*n || a[i]-1>a[i+1])){\n                m--;\n                a[i]--;\n            }\n        }\n    }\n    for (int i=0;i<2*n+1;++i){\n        if (i) printf(\" \");\n        printf(\"%d\",a[i]);\n    }\n    printf(\"\\n\");\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "implementation"], "dificulty": "1100", "interactive": false}