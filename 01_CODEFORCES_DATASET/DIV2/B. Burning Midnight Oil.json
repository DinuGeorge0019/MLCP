{
    "link": "https://codeforces.com//contest/165/problem/B",
    "problemId": "1013",
    "problem_idx": "B",
    "shortId": "165B",
    "contest_number": "165",
    "problem_submissions": {
        "D": [
            1366499,
            1366969,
            1365112,
            1367097,
            1366684,
            1365807,
            1365962,
            1368726,
            1367643,
            1365427,
            1364667,
            1370595,
            1385240
        ],
        "E": [
            1364192,
            1364774,
            1367313,
            1365367,
            1364379,
            1368630,
            1368754,
            1367792,
            1368549,
            1365271,
            1364231,
            1368793,
            1367116,
            2473344,
            1366372,
            1367247,
            1366533,
            1367425
        ],
        "C": [
            1362928,
            1363517,
            1362594,
            1363696,
            1366879,
            1362613,
            1362246,
            1363281,
            1364362,
            1363392,
            1367553,
            1369077,
            1364690,
            2473167,
            2473156,
            1362666,
            1363958,
            1364223,
            1365162,
            1365345
        ],
        "B": [
            1362163,
            1362376,
            1365799,
            1362605,
            1362500,
            1363337,
            1362770,
            1362069,
            1363813,
            1363948,
            1362915,
            1369003,
            1362557,
            2473004,
            2473001,
            2472997,
            1362110,
            1362242,
            1362516,
            1363280,
            1362708
        ],
        "A": [
            1361696,
            1361752,
            1362836,
            1361758,
            1361587,
            1361647,
            1361570,
            1361606,
            1362825,
            1365691,
            1361805,
            1362263,
            1361965,
            2472978,
            2472975,
            2472970,
            1361665,
            1361602,
            1361734,
            1362468,
            1361751
        ]
    },
    "name": "B. Burning Midnight Oil",
    "statement": "One day a highly important task was commissioned to Vasya writing a\r\nprogram in a night. The program consists of lines of code. Vasya is\r\nalready exhausted, so he works like that: first he writes lines of code,\r\ndrinks a cup of tea, then he writes as much as lines, drinks another cup\r\nof tea, then he writes lines and so on: , , , ...The expression is\r\nregarded as the integral part from dividing number by number .The moment\r\nthe current value equals 0, Vasya immediately falls asleep and he wakes\r\nup only in the morning, when the program should already be\r\nfinished.Vasya is wondering, what minimum allowable value can take to\r\nlet him write than lines of code before he falls asleep.\r\n",
    "solutions": [
        "#include <vector>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cmath>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <string>\n#include <cassert>\n\nusing namespace std;\n\n//----------------------zjut_DD for Topcoder-------------------------------\ntypedef long long LL;\ntypedef pair<int,int> PII;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\n#define PB push_back\n#define MP make_pair\n#define ff first\n#define ss second\n#define two(w) (1<<(w))\n#define test(x,w) (x&two(w))\n#define sz(v) (int)v.size()\n#define all(c) c.begin(),c.end() \n#define clr(buf,val) memset(buf,val,sizeof(buf))\n#define rep(i,l,r) for(int i=(l);i<(r);i++)\n#define repv(i,v)  for(int i=0;i<(int)v.size();i++)\n#define repi(it,c) for(typeof(c.begin()) it=c.begin();it!=c.end();++it)\n//------------------------------------------------------------------------\n\n\nint main(){\n\tint n, k;\n\twhile( cin>>n>>k ){\n\t\tint l=0, r=n;\n\t\twhile( l+1<r ){\n\t\t\tint mid=(l+r)/2;\n\t\t\tLL sum=0, M=1;\n\t\t\twhile( true ){\n\t\t\t\tsum+=mid/M;\n\t\t\t\tif( mid/M==0 ) break;\n\t\t\t\tM*=k;\n\t\t\t}\n\t\t\tif( sum>=n ) r=mid;\n\t\t\telse l=mid;\n\t\t}\n\t\tcout<<r<<endl;\n\t}\n}\n\n\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "implementation"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Burning Midnight Oil.json",
    "editorial_link": "https://codeforces.com//blog/entry/4124",
    "editorial": "This problem can be solved using binary search for the answer.\r\nobviously, if number is an answer than every number is also the answer,\r\nbecause the number of written lines of code could only become more. To\r\ncheck some number you can use formula given in the problem, because it\r\nwill have less than positive elements. The complexity is .\r\n",
    "hint": []
}