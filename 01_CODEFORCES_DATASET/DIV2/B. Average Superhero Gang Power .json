{
    "link": "https://codeforces.com//contest/1111/problem/B",
    "problemId": "292518",
    "problem_idx": "B",
    "shortId": "1111B",
    "contest_number": "1111",
    "problem_submissions": {
        "D": [
            49422912,
            49426608,
            49445983,
            49428765,
            49430406,
            49429665,
            49436958
        ],
        "C": [
            49409497,
            49410558,
            49410163,
            49418920,
            49410172,
            49413606,
            49411915,
            49417203,
            49413501,
            49413738,
            49417020,
            49443919,
            49443886,
            49417049,
            49414103,
            49415090,
            49412459,
            49414253,
            49415380,
            49421248,
            49439899,
            49413981
        ],
        "B": [
            49406849,
            49405440,
            49407099,
            49408763,
            49406563,
            49408463,
            49406490,
            49408964,
            49408646,
            49408980,
            49405550,
            49418102,
            49454731,
            49438417,
            49408744,
            49409042,
            49407957,
            49421603,
            49407686,
            49409374,
            49409345
        ],
        "A": [
            49402871,
            49402831,
            49403748,
            49403927,
            49403205,
            49402975,
            49402985,
            49410269,
            49405415,
            49404207,
            49402972,
            49402894,
            49402944,
            49404497,
            49403455,
            49404512,
            49404416,
            49403696,
            49403984
        ],
        "E": [
            49501912
        ]
    },
    "name": "B. Average Superhero Gang Power ",
    "statement": "Every superhero has been given a power value by the Felicity Committee.\r\nThe avengers crew wants to maximize the average power of the superheroes\r\nin their team by performing certain operations.Initially, there are n\r\nsuperheroes in avengers team having powers a_1, a_2,\r\nldots, a_n, respectively. In one operation, they can remove one\r\nsuperhero from their team (if there are at least two) or they can\r\nincrease the power of a superhero by 1. They can do at most m\r\noperations. Also, on a particular superhero at most k operations can be\r\ndone.Can you help the avengers team to maximize the average power of\r\ntheir crew?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n \n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define endl \"\\n\"\n#define ll long long\n\nint32_t main()\n{\n\tIOS;\n\tint n, k, m;\n\tcin >> n >> k >> m;\n\tdouble a[n];\n\tfor(int i=0; i<n; ++i)\n\t\tcin >> a[i];\n\tsort(a, a+n);\n\tdouble ans=0, s=0;\n\tfor(int i=0; i<n; ++i) {\n\t\ts+=a[n-1-i];\n\t\tif(m-n+i+1>=0)\n\t\t\tans=max(ans, (s+min(m-n+i+1ll, (ll)(i+1)*k))/(double)(i+1));\n\t}\n\tcout << fixed << setprecision(9) << ans;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Average Superhero Gang Power .json",
    "editorial_link": "https://codeforces.com//blog/entry/64989",
    "editorial": "If we want to remove an element to increase the average it should be the\r\nsmallest element in our current set. For each deletion, operation is\r\nused. Lets try finding = maximum average by deleting smallest elements.\r\nIf we delete elements, then for the remaining elements the maximum\r\nincrease can be since operations can be now at max used, and at one\r\nparticular index at most operations can be done.So ( sum of largest )\r\nelements The sum of largest terms can be computed using prefix sums.max\r\nover all from to The min condition comes because there is no use of\r\ndeleting all elements, and the number of deletions is limited by the\r\nmaximum number of operations possible.\r\n"
}