{"link": "https://codeforces.com//contest/448/problem/E", "problemId": "11520", "problem_idx": "E", "shortId": "448E", "contest_number": "448", "problem_submissions": {"B": [7132360, 7126812, 7131705, 7128126, 7126975, 7130368, 7133849, 7126556, 7137379, 7128333, 7127308, 7138326, 7127246, 7126908, 7126783, 7127446, 7129637], "A": [7131281, 7124641, 7124604, 7125918, 7124627, 7138197, 7130895, 7124806, 7126069, 7130700, 7124540, 7137566, 7124981, 7125197, 7124518, 7124798, 7124709], "E": [7130571, 7134588, 7144432, 7133164, 7135434, 7135739, 7134555, 7135492, 7137501, 7137792, 7136520, 7138444, 7137089, 7135078, 7144128, 7138750], "C": [7127523, 7128095, 7131570, 7129889, 7129858, 7136406, 7126752, 7135156, 7136170, 7132158, 7130231, 7128623, 7134636, 7130788, 7130040, 7131300, 7133349, 7129026], "D": [7125339, 7129364, 7128228, 7132669, 7131873, 7129212, 7129065, 7128867, 7128240, 7130235, 7125766, 7129601, 7132488, 7131074, 7132807, 7131262, 7131953, 7129050, 7133299]}, "name": "E. Divisors", "statement": "Bizon the Champion isn\u2019t just friendly, he also is a rigorous\r\ncoder.Let\u2019s define function , where is a sequence of integers. Function\r\nreturns the following sequence: first all divisors of go in the\r\nincreasing order, then all divisors of go in the increasing order, and\r\nso on till the last element of sequence . For example, .Let\u2019s determine\r\nthe sequence , for integer : ( is a sequence consisting of a single\r\nnumber ), . For example, at we get , , .Given the numbers and , find the\r\nsequence . As the answer can be rather large, find only the first\r\nelements of this sequence.\r\n", "solutions": ["#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#define int64 long long\n#define N 8500\n#define inf 100000\n#define For(i,x,y) for (i=x;i<=y;i++)\nusing namespace std;\nint i,j,k,len;\nshort b[N][N];\nint64 n,m,a[N];\nvoid dfs(int x,int cen) {\n\tif (!len) return;\n\tif (x==1||cen==m) {\n\t\tprintf(\"%I64d \",a[x]);\n\t\tlen--;\n\t\treturn;\n\t}\n\tint i;\n\tfor (i=1;i<=*b[x]&&len;i++) dfs(b[x][i],cen+1);\n}\nint main() {\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tfor (i=1;1ll*i*i<=n;i++) if (n%i==0) a[++k]=i;\n\tfor (;i;i--) if (n%i==0&&1ll*i*i<n) a[++k]=n/i;\n\tFor(i,1,k) {\n\t\tFor(j,1,i) if (a[i]%a[j]==0) b[i][++*b[i]]=j;\n\t}\n\tlen=inf;\n\tdfs(k,0);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dfs and similar", "implementation", "number theory"], "dificulty": "2200", "interactive": false}