{"link": "https://codeforces.com//contest/1768/problem/B", "problemId": "1720619", "problem_idx": "B", "shortId": "1768B", "contest_number": "1768", "problem_submissions": {"D": [204982953, 188071247, 188067925, 188068130, 188070945, 188072940, 188074516, 188075810, 188085152, 188074579, 188073456, 188074101, 188082385, 188164225, 188089006, 188069736, 188081987, 188082522, 188078305, 188078232, 188080797], "F": [188116348, 188135822, 188160798, 188176131, 188168385], "E": [188083790, 188076616, 188084542, 188083977, 188085068, 188090588, 188090979, 188080120, 188090253, 188095827, 188095081, 188082638, 188089969, 188164249, 188075544, 188101242, 188092147, 188102271, 188100942, 188097984], "C": [188076017, 188062341, 188060907, 188066248, 188067691, 188065722, 188067475, 188070114, 188066780, 188064718, 188068797, 188076939, 188164202, 188081893, 188163969, 188059068, 188075112, 188075686, 188069461, 188068577, 188075836], "B": [188057634, 188051968, 188049872, 188053488, 188055902, 188055318, 188053420, 188056521, 188052830, 188053386, 188052891, 188065110, 188164191, 188059182, 188051170, 188056859, 188053279, 188061154, 188058286], "A": [188047123, 188046830, 188047332, 188048108, 188047085, 188046543, 188047234, 188050361, 188047575, 188046807, 188046596, 188059906, 188164162, 188047560, 188046948, 188050516, 188048920, 188047550, 188060898, 188051639]}, "name": "B. Quick Sort", "statement": "You are given a permutation^\r\ndagger p of length n and a positive integer k\r\nle n.In one operation, you: Choose k elements p_{i_1}, p_{i_2},\r\nldots, p_{i_k}. Remove them and then add them sorted in increasing order\r\nto the end of the permutation. For example, if p = [2,5,1,3,4] and k = 2\r\nand you choose 5 and 3 as the elements for the operation, then [2,\r\ncolor{red}{5}, 1,\r\ncolor{red}{3}, 4]\r\nrightarrow [2, 1, 4,\r\ncolor{red}{3},\r\ncolor{red}{5}].Find the minimum number of operations needed to sort the\r\npermutation in increasing order. It can be proven that it is always\r\npossible to do so.^\r\ndagger A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray).\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n#define ri int\n#define DEBUG(k...) fprintf(stderr,k)\ntypedef long long ll;\ntemplate<class T>inline bool ckmax(T &x,const T &y){return x<y?x=y,true:false;}\ntemplate<class T>inline bool ckmin(T &x,const T &y){return x>y?x=y,true:false;}\ntemplate<class T>inline void clear(T *arr,int siz,int val=0){memset(arr,val,sizeof(T)*(siz+1));}\nconst int maxn=2e5+10;\nint a[maxn],b[maxn],len,m,n,t_case;\nint main(){\n\tscanf(\"%d\",&t_case);\n\twhile(t_case--){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tlen=0;\n\t\tfor(ri i=1;i<=n;++i){\n\t\t\tscanf(\"%d\",a+i);\n\t\t\tif(a[i]==len+1)++len;\n\t\t}\n\t\tprintf(\"%d\\n\",(n-len+m-1)/m);\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["greedy", "math"], "dificulty": "900", "interactive": false}