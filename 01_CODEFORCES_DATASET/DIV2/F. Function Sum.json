{
    "link": "https://codeforces.com//contest/1731/problem/F",
    "problemId": "1711456",
    "problem_idx": "F",
    "shortId": "1731F",
    "contest_number": "1731",
    "problem_submissions": {
        "F": [
            186914595,
            186916746,
            188609637,
            186918241,
            186915978,
            186924114,
            186923167,
            186928435,
            186940850,
            186934089,
            186928158,
            186942000,
            186931590,
            186939314,
            186931829,
            186925046,
            187042657,
            186976314,
            186961335,
            186947151,
            186935943,
            186943841,
            186947800,
            187100429,
            186936912
        ],
        "E": [
            186902388,
            186907542,
            188609583,
            186907228,
            186922877,
            186908811,
            186913909,
            186909533,
            186905298,
            186914796,
            186914318,
            186909008,
            186915275,
            186912330,
            186916821,
            186935842,
            186913227,
            186922201,
            186915075,
            186915635,
            186916449
        ],
        "D": [
            186894672,
            186898337,
            188609534,
            186899725,
            186899215,
            186903320,
            186903576,
            186904113,
            186896689,
            186902110,
            186905198,
            186902394,
            186905223,
            186904629,
            186906063,
            186899445,
            186905463,
            186908692,
            186911370,
            186906776,
            186904962
        ],
        "C": [
            186891713,
            186894904,
            188609500,
            186897483,
            186895982,
            186900151,
            186899934,
            186901212,
            186894367,
            186897519,
            186898993,
            186897615,
            186900357,
            186899391,
            186902000,
            186905696,
            186894285,
            186902878,
            186897844,
            186898614,
            186901628
        ],
        "B": [
            186886340,
            186890465,
            188609426,
            186888165,
            186892347,
            186894409,
            186892290,
            186893227,
            186887848,
            186893176,
            186892310,
            186890495,
            186892951,
            186895205,
            186908452,
            186891159,
            186900599,
            186895520,
            186894487,
            186892361,
            186896199
        ],
        "A": [
            186884556,
            186884624,
            188609361,
            186884628,
            186886996,
            186885867,
            186884614,
            186885171,
            186884576,
            186884932,
            186885049,
            186884957,
            186885253,
            186885130,
            186885370,
            186887288,
            186885246,
            186886527,
            186884899,
            186885189,
            186885071
        ]
    },
    "name": "F. Function Sum",
    "statement": "Suppose you have an integer array a_1, a_2,\r\ndots, a_n.Let\r\noperatorname{lsl}(i) be the number of indices j (1\r\nle j < i) such that a_j < a_i.Analogically, let\r\noperatorname{grr}(i) be the number of indices j (i < j\r\nle n) such that a_j > a_i.Let’s name position i in the array a if\r\noperatorname{lsl}(i) <\r\noperatorname{grr}(i).Finally, let’s define a function f on array a f(a)\r\nas the of all a_i such that i is in a.Given two integers n and k, find\r\nthe sum of f(a) over all arrays a of size n such that 1\r\nleq a_i\r\nleq k for all 1\r\nleq i\r\nleq n modulo 998\r\n,244\r\n,353.\r\n",
    "solutions": [
        "//这回只花了114514min就打完了。\n//真好。记得多手造几组。ACM拍什么拍。 \n#include \"bits/stdc++.h\"\nusing namespace std;\ntemplate<typename typC,typename typD> istream &operator>>(istream &cin,pair<typC,typD> &a) { return cin>>a.first>>a.second; }\ntemplate<typename typC> istream &operator>>(istream &cin,vector<typC> &a) { for (auto &x:a) cin>>x; return cin; }\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const pair<typC,typD> &a) { return cout<<a.first<<' '<<a.second; }\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const vector<pair<typC,typD>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\ntemplate<typename typC> ostream &operator<<(ostream &cout,const vector<typC> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\ntemplate<typename typC,typename typD> bool cmin(typC &x,const typD &y) { if (x>y) { x=y; return 1; } return 0; }\ntemplate<typename typC,typename typD> bool cmax(typC &x,const typD &y) { if (x<y) { x=y; return 1; } return 0; }\ntemplate<typename typC> vector<typC> range(typC l,typC r,typC step=1) { assert(step>0); int n=(r-l+step-1)/step,i; vector<typC> res(n); for (i=0; i<n; i++) res[i]=l+step*i; return res; }\n#if !defined(ONLINE_JUDGE)&&defined(LOCAL)\n#include \"my_header\\debug.h\"\n#else\n#define dbg(...) ;\n#define dbgn(...) ;\n#endif\ntypedef unsigned int ui;\ntypedef unsigned long long ll;\n#define all(x) (x).begin(),(x).end()\nnamespace _fac\n{\n\ttypedef unsigned int ui;\n\ttypedef unsigned long long ll;\n\tconst int N=1e6+2;\n\tconst ll p=998244353;\n\tll fac[N];\n\tll ifac[N];\n\tll inv[N];\n\tll ksm(ll x,int y)\n\t{\n\t\tll r=1;\n\t\twhile (y)\n\t\t{\n\t\t\tif (y&1) r=(ll)r*x%p;\n\t\t\tx=(ll)x*x%p;\n\t\t\ty>>=1;\n\t\t}\n\t\treturn r;\n\t}\n\tll C(int n,int m)\n\t{\n\t\tif (n<m||m<0) return 0;\n\t\treturn (ll)fac[n]*ifac[m]%p*ifac[n-m]%p;\n\t}\n\tvoid init_fac()\n\t{\n\t\tint i;\n\t\tfac[0]=1;\n\t\tfor (i=1; i<N; i++) fac[i]=(ll)fac[i-1]*i%p;\n\n\t\tifac[N-1]=ksm(fac[N-1],p-2);\n\t\tfor (i=N-1; i; i--) ifac[i-1]=(ll)ifac[i]*i%p;\n\n\t\tll x; inv[1]=1;\n\t\tfor (i=2; i<N; i++)\n\t\t{\n\t\t\tx=p/i;\n\t\t\tinv[i]=(ll)x*(p-inv[p-x*i])%p;\n\t\t}\n\t}\n}\nusing _fac::init_fac; using _fac::fac; using _fac::ifac; using _fac::inv;\nusing _fac::ksm; using _fac::C; using _fac::p;\ntemplate<typename T1,typename T2> void inc(T1 &x,const T2 &y) { if ((x+=y)>=p) x-=p; }\n// template<typename T1,typename T2> void dec(T1 &x,const T2 &y) { if ((x+=p-y)>=p) x-=p; }\nconst int N=1e6+5;\nll f(ll *a,ll n,ll m)//这种写法不包含0处取值，n是值，m-1是次数，至少需要 m 项\n{\n\tif (n<=m) return a[n];\n\tstatic ll inv[N],l[N],r[N],ifac[N];\n\tint i;\n\tifac[0]=inv[1]=1;\n\tfor (i=2; i<=m; i++) inv[i]=p-(ll)p/i*inv[p%i]%p;\n\tfor (i=1; i<=m; i++) ifac[i]=(ll)ifac[i-1]*inv[i]%p;//以上可以预跑\n\tll ans=0,rr=0;\n\tl[0]=1; r[m+1]=1;\n\tfor (i=1; i<m; i++) l[i]=(ll)l[i-1]*(n-i)%p;\n\tfor (i=m; i; i--) r[i]=(ll)r[i+1]*(n-i)%p;\n\tfor (i=1; i<=m; i++)\n\t{\n\t\tif ((m^i)&1) rr=p-a[i]; else rr=a[i];\n\t\tans=(ans+(ll)rr*ifac[i-1]%p*ifac[m-i]%p*l[i-1]%p*r[i+1])%p;\n\t}\n\treturn ans;\n}\nint main()\n{\n\tios::sync_with_stdio(0); cin.tie(0);\n\tcout<<fixed<<setprecision(15);\n\tinit_fac();\n\tint n,m,i,j,k,l;\n\tcin>>n>>m;\n\tll r=0;\n\tconst int N=n+2;\n\tvector<ll> res(N+1);\n\tfor (i=1; i<=n; i++) for (j=0; j<i; j++) for (k=j+1; k<=n-i; k++) for (l=1; l<=N; l++)\n\t{\n\t\tres[l]=(res[l]+(ll)l*C(i-1,j)%p*ksm(l-1,j)%p*ksm(m-l+1,i-j-1)%p*C(n-i,k)%p*ksm(m-l,k)%p*ksm(l,n-i-k))%p;\n\t}\n\tfor (i=2; i<=N; i++) inc(res[i],res[i-1]);\n\tcout<<f(res.data(),m,N)<<endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "fft",
        "math"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\F. Function Sum.json",
    "editorial_link": "https://codeforces.com//blog/entry/110630",
    "editorial": "Letâs try to write a brute force solution of this using combinatorics.\r\nLetâs say that now we will try to see that in how many permutations this\r\nis contributing towards the answer. Using combinatorics, it can be\r\ncalculated as .Here represents and y represents .Let be a polynomial\r\nwhose degree will be . And now our answer will be .Now, we can evaluate\r\nthis polynomial for smaller values (by brute force) and will use the\r\ntechnique of polynomial interpolation to find the answer.\r\n",
    "hint": []
}