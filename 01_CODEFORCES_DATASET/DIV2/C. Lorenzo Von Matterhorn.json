{"link": "https://codeforces.com//contest/697/problem/C", "problemId": "65176", "problem_idx": "C", "shortId": "697C", "contest_number": "697", "problem_submissions": {"C": [19125110, 19119489, 19115272, 19120784, 19120358, 19121611, 19126423, 19120555, 19121257, 19119720, 19124669, 19118290, 19123580, 19123345, 19122737, 19115954, 19121052, 19121218], "E": [19122529, 19128431, 19129328, 19128568, 19122012, 19131082, 19131216, 19131999, 19129938, 19131814, 19130868, 19130697, 19131810, 19129659, 19128578, 19132416], "D": [19120706, 19118022, 19122001, 19123039, 19123280, 19123177, 19124026, 19133711, 19129326, 19124900, 19124469, 19135107, 19135081, 19134986, 19134844, 19134818, 19134786, 19125750, 19126098, 19126640, 19125926, 19127387, 19126729, 19124071, 19125133, 19126884], "B": [19115236, 19122038, 19115614, 19117710, 19115812, 19115890, 19117501, 19117067, 19116748, 19116047, 19119950, 19118136, 19119352, 19135966, 19141445, 19130167], "A": [19111990, 19120635, 19112000, 19111957, 19112038, 19111973, 19115290, 19112119, 19111989, 19112683, 19113904, 19113940, 19113380, 19111958, 19112326, 19112540], "F": [19129833, 19132590, 19155674]}, "name": "C. Lorenzo Von Matterhorn", "statement": "Barney lives in NYC. NYC has infinite number of intersections numbered\r\nwith positive integers starting from 1. There exists a bidirectional\r\nroad between intersections and and another road between and for every\r\npositive integer . You can clearly see that there exists a unique\r\nshortest path between any two intersections. Initially anyone can pass\r\nany road for free. But since SlapsGiving is ahead of us, there will\r\nconsecutive events happen soon. There are two types of events:1.\r\nGovernment makes a new rule. A rule can be denoted by integers , and .\r\nAs the result of this action, the passing fee of all roads on the\r\nshortest path from to increases by dollars. 2. Barney starts moving from\r\nsome intersection and goes to intersection where there\u2019s a girl he wants\r\nto cuddle (using his fake name Lorenzo Von Matterhorn). He always uses\r\nthe shortest path (visiting minimum number of intersections or roads)\r\nbetween two intersections.Government needs your calculations. For each\r\ntime Barney goes to cuddle a girl, you need to tell the government how\r\nmuch money he should pay (sum of passing fee of all roads he passes).\r\n", "solutions": ["//wait darn\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nbool cnct(long long a, long long b)\n{\n    while(b>a)\n        b/=2;\n    if(a==b)\n        return true;\n    else\n        return false;\n}\n\nlong long maxcn(long long a, long long b)\n{\n    while(!cnct(a,b))\n    {\n        a/=2;\n    }\n    return a;\n}\n\nint main()\n{\n    map<long long, long long>m;\n\n    long long price;\n    int numev;\n    cin >> numev;\n\n    int type;\n    long long a;\n    long long b;\n    long long add;\n    long long meet;\n\n    while(numev > 0)\n    {\n        numev--;\n        price = 0;\n\n        cin >> type;\n        if(type == 1)\n        {\n            cin >> a >> b >> add;\n\n            meet = maxcn(a,b);\n            while(b!=meet)\n            {\n                m[b] += add;\n                b/=2;\n            }\n            while(a != meet)\n            {\n                m[a] += add;\n                a/=2;\n            }\n        }\n        if(type == 2)\n        {\n            cin >> a >> b;\n            meet  = maxcn(a,b);\n            price = 0;\n            while(b != meet)\n            {\n                price += m[b];\n                b/=2;\n            }\n            while(a!=meet)\n            {\n                price += m[a];\n                a/=2;\n            }\n            cout << price << endl;\n        }\n    }\n\n}\n\n"], "input": "", "output": "", "tags": ["brute force", "data structures", "implementation", "trees"], "dificulty": "1500", "interactive": false}