{
    "link": "https://codeforces.com//contest/279/problem/A",
    "problemId": "2701",
    "problem_idx": "A",
    "shortId": "279A",
    "contest_number": "279",
    "problem_submissions": {
        "D": [
            3249313,
            3247594,
            3244905,
            3249853,
            3249691,
            3249081,
            3250467,
            3250451,
            3250359,
            3474157
        ],
        "E": [
            3244979,
            3247752,
            3238796,
            3241502,
            3241802,
            3249970,
            3248144,
            3243573,
            3243340,
            3243108,
            3244030,
            3244923,
            3240469,
            3247041,
            3244724,
            3242537,
            3242804,
            3247622
        ],
        "C": [
            3242350,
            3240214,
            3241436,
            3243563,
            3243315,
            3242680,
            3242006,
            3239324,
            3241143,
            3241800,
            3242584,
            3244958,
            3240145,
            3241851,
            3245710,
            3247069,
            3242483
        ],
        "A": [
            3240766,
            3242016,
            3239749,
            3239283,
            3250054,
            3239155,
            3241094,
            3244109,
            3239779,
            3240700,
            3243000,
            3238846,
            3246020,
            3239320,
            3239919,
            3240334
        ],
        "B": [
            3238919,
            3240626,
            3239249,
            3238903,
            3240194,
            3239523,
            3239885,
            3242187,
            3239867,
            3240726,
            3239001,
            3243481,
            3239120,
            3239326,
            3240278,
            3240808,
            3239300
        ]
    },
    "name": "A. Point on Spiral",
    "statement": "Valera the horse lives on a plane. The Cartesian coordinate system is\r\ndefined on this plane. Also an infinite spiral is painted on the plane.\r\nThe spiral consists of segments: and so on. Thus, this infinite spiral\r\npasses through each integer point of the plane.Valera the horse lives on\r\nthe plane at coordinates . He wants to walk along the spiral to point .\r\nValera the horse has four legs, so he finds turning very difficult.\r\nCount how many times he will have to turn if he goes along a spiral from\r\npoint to point .\r\n",
    "solutions": [
        "#include <iostream>\n#include <string>\n#include <string.h>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <ctime>\n#include <cmath>\n#include <stdio.h>\n#include <set>\n#include <map>\n#include <stack>\n#include <fstream>\n#include <list>\n\n#define SZ(a) (int(a.size()))\n#define MEM(a, val) memset(a, val, sizeof(a))\n#define MP(a, b) make_pair(a, b)\n#define PB(a) push_back(a)\n#define ALL(a) a.begin(), a.end()\n#define REP(i, n) for(int (i) = 0; (i) < (n); ++(i))\n#define FOR(i, a, b) for(int (i) = (a); (i) <= (b); ++(i))\n#define SQR(a) ((a) * (a))\n\ntypedef unsigned long long ULL;\ntypedef long long LL;\ntypedef long double dbl;\n\nusing namespace std;\n\nconst int nmax = 201;\nconst int up = 101;\n\nint mat[nmax + 4][nmax + 4];\n\nconst int ui[] = {0, -1, 0, 1};\nconst int uj[] = {-1, 0, 1, 0};\n\nint main()\n{\n // freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\n  MEM(mat, -1);\n  FOR(i, 1, nmax)\n      FOR(j, 1, nmax)\n        mat[i][j] = 0;\n\n  int i = nmax, j = nmax;\n  int k = 0;\n  int val = -1;\n  for (int step = 0; step < nmax * nmax; ++step) {\n      \n      int ni = i + ui[k];\n      int nj = j + uj[k];\n\n      if (mat[ni][nj] != 0 && (i != up || j != up)) {\n          --val;\n          k = (k + 1) % 4;\n      }\n      mat[i][j] = val;\n      i += ui[k];\n      j += uj[k];\n  }\n\n /* for (int i = up - 2; i <= up + 2; ++i, cout << endl)\n      for (int j = up - 2; j <= up + 2; ++j)\n          cout << mat[i][j] << \" \" ;\n          */\n  int ii, jj;\n  cin >> jj >> ii;\n  cout << mat[nmax - (ii + up) + 1][jj + up] - mat[up][up] << endl;\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "geometry",
        "implementation"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Point on Spiral.json",
    "editorial_link": "https://codeforces.com//blog/entry/95148",
    "editorial": "Since constraints are small, you can just simulate the whole process,\r\nbut I\u00e2\u0080\u0099ll explain an solution. Let\u00e2\u0080\u0099s look at the path Now it\u00e2\u0080\u0099s easy to\r\nsee that the plane can be divided into four parts And then we can\r\ncalculate answer for each part separately, just be careful with borders.\r\nFor example, for the right part the answer is . Code\r\n"
}