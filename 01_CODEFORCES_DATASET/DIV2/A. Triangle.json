{"link": "https://codeforces.com//contest/18/problem/A", "problemId": "82", "problem_idx": "A", "shortId": "18A", "contest_number": "18", "problem_submissions": {"E": [81065, 81306, 80765, 81264, 81531, 81749, 81052, 81910, 82769, 83595, 82917, 82903, 83429, 82503, 82497, 82370, 470419], "D": [80763, 80489, 81776, 80347, 81284, 81376, 81320, 81622, 81610], "B": [80357, 80881, 79919, 80575, 80236, 80254, 80116, 80063, 80223, 83594, 80352, 80834, 80541, 80588, 81110, 80898, 82232, 81439], "C": [79922, 80066, 79784, 80695, 79953, 79859, 80277, 80229, 79880, 79798, 79989, 80024, 79954, 80323, 79676, 79918], "A": [79794, 79576, 79652, 79640, 79646, 79718, 79820, 79725, 79739, 79651, 79729, 79883, 79745, 80732, 80006, 79782]}, "name": "A. Triangle", "statement": "At a geometry lesson Bob learnt that a triangle is called right-angled\r\nif it is nondegenerate and one of its angles is right. Bob decided to\r\ndraw such a triangle immediately: on a sheet of paper he drew three\r\npoints with integer coordinates, and joined them with segments of\r\nstraight lines, then he showed the triangle to Peter. Peter said that\r\nBob\u2019s triangle is not right-angled, but is right-angled: the triangle\r\nitself is not right-angled, but it is possible to move one of the points\r\nexactly by distance 1 so, that all the coordinates remain integer, and\r\nthe triangle become right-angled. Bob asks you to help him and find out\r\nif Peter tricks him. By the given coordinates of the triangle you should\r\nfind out if it is right-angled, almost right-angled, or neither of\r\nthese.\r\n", "solutions": ["#define _CRT_SECURE_NO_WARNINGS\n\n#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <functional>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <ctime>\n#include <cassert>\n#include <queue>\n#include <stack>\n#include <cstdarg>\n\nusing namespace std;\n\n#define TASKNAME \"f\"\n#define pb push_back\n#define mp make_pair\n#define first fi\n#define second se\n#define forn(i, n) for (int i=0; i<(int)n; i++)\n#define all(a) a.begin(), a.end()\n\ntypedef long double ldb;\ntypedef long long lld;\ntypedef unsigned long long uld;\ntypedef vector<int> vi;\ntypedef complex<double> cd;\n\ndouble const eps=1e-9;\nldb const epsl=1e-9;\nint const inf=0x3fffffff;\nint const infu=0x7fffffff;\nlld const infl=0x3fffffffffffffffLL;\nuld const inful=0x7fffffffffffffffLL;\ntemplate <class T>\ninline T sqr(const T &a) {\n    return a*a;\n}\nint X[3], Y[3], x[3], y[3];\nbool vp(int x1, int y1, int x2, int y2) {\n    return (x1*x1+y1*y1) && (x2*x2+y2*y2) && !(x1*x2+y1*y2);    \n}\n\n\nint main () {\n//  freopen (TASKNAME\".in\", \"r\", stdin);\n//  freopen (TASKNAME\".out\", \"w\", stdout);\n    forn(i,3)\n        cin >> x[i] >> y[i];\n    for (int i=0; i<3; i++)\n        for (int j=0; j<3; j++)\n            for (int k=0; k<3; k++)\n                if (i!=j && j!=k && i!=k && vp(x[j]-x[i], y[j]-y[i], x[k]-x[i], y[k]-y[i])) {\n                    cout << \"RIGHT\\n\";\n                    return 0;\n                }\n    for (int q=0; q<3; q++)\n        for (int dx=-1; dx<=1; dx++)\n            for (int dy=-1; dy<=1; dy++) \n                if (abs(dx)+abs(dy)==1) {\n                    for (int p=0; p<3; p++)\n                        X[p]=x[p], Y[p]=y[p];\n                    X[q]=x[q]+dx, Y[q]=y[q]+dy;\n                    for (int i=0; i<3; i++)\n                        for (int j=0; j<3; j++)\n                            for (int k=0; k<3; k++)\n                                if (i!=j && j!=k && i!=k && vp(X[j]-X[i], Y[j]-Y[i], X[k]-X[i], Y[k]-Y[i])) {\n                                    cout << \"ALMOST\\n\";\n                                    return 0;\n                                }\n                }\n    cout << \"NEITHER\\n\";\n    return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "geometry"], "dificulty": "1500", "interactive": false}