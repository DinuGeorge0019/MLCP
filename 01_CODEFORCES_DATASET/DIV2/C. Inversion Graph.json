{"link": "https://codeforces.com//contest/1638/problem/C", "problemId": "1297617", "problem_idx": "C", "shortId": "1638C", "contest_number": "1638", "problem_submissions": {"E": [146394309, 146388037, 146392264, 146392799, 146383148, 146391230, 146412303, 146401025, 146403078, 146402136, 179550421, 146406748, 146402980, 146407733, 146480267, 146392395, 146416198, 146408751, 146407567, 146399245, 146416242, 146413814], "D": [146373961, 146380846, 146385038, 146375477, 146392500, 146381733, 146401310, 146378870, 146384454, 146387386, 146387880, 146390053, 146382176, 146480222, 146406431, 146388651, 146388267, 146392625, 146412206, 146374640, 146389515], "C": [146366299, 146372352, 146371729, 146367670, 146366106, 146373666, 146370507, 146365761, 146370642, 146376834, 146376510, 146371594, 146370051, 146480186, 146375503, 146369319, 146374946, 146378437, 146373206, 146367076, 146373277], "B": [146362311, 146363442, 146362707, 146365725, 146364605, 146363885, 146366228, 146383066, 146364746, 146368584, 146368423, 146367380, 146366091, 146480117, 146369102, 146364936, 146367883, 146370547, 146366764, 146364119, 146368017], "A": [146361810, 146361860, 146361937, 146362725, 146362534, 146362379, 146363944, 146381318, 146362119, 146362820, 146362493, 146479991, 146363108, 146363259, 146480100, 146363531, 146362617, 146363968, 146362163, 146363256, 146362105, 146365613], "F": [154464206, 146479912, 146613983, 146474726, 146640126]}, "name": "C. Inversion Graph", "statement": "You are given a permutation p_1, p_2,\r\ndots, p_n. Then, an undirected graph is constructed in the following\r\nway: add an edge between vertices i, j such that i < j if and only if\r\np_i > p_j. Your task is to count the number of connected components in\r\nthis graph.Two vertices u and v belong to the same connected component\r\nif and only if there is at least one path along edges connecting u and\r\nv.A permutation is an array consisting of n distinct integers from 1 to\r\nn in arbitrary order. For example, [2,3,1,5,4] is a permutation, but\r\n[1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4]\r\nis also not a permutation (n=3 but there is 4 in the array).\r\n", "solutions": ["// Author: wlzhouzhuan\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,l,r) for(int i=(l);i<=(r);i++)\n#define per(i,l,r) for(int i=(l);i>=(r);i--)\n#define ll long long\n#define ull unsigned long long\n#define pii pair<int,int>\n#define mset(s,t) memset(s,t,sizeof(s))\n#define mcpy(s,t) memcpy(s,t,sizeof(t))\n#define SZ(x) ((int)x.size())\n#define pb push_back\n#define eb emplace_back\n#define fir first\n#define sec second\n\ntemplate<class T1,class T2>bool ckmax(T1 &a,T2 b){if(a<b)return a=b,1;else return 0;}\ntemplate<class T1,class T2>bool ckmin(T1 &a,T2 b){if(a>b)return a=b,1;else return 0;}\n\ninline int read(){\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch))f|=ch=='-',ch=getchar();\n\twhile(isdigit(ch))x=10*x+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\ntemplate<typename T>void print(T x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<typename T>void print(T x,char ch){\n\tprint(x),putchar(ch);\n}\n\nconst int N=1000005;\n\nint p[N],pre[N],suf[N];\nvoid solve(){\n\tint n=read();\n\trep(i,1,n){\n\t\tp[i]=read();\n\t\tpre[i]=max(pre[i-1],p[i]);\n\t}\n\tsuf[n+1]=1e9;\n\tper(i,n,1){\n\t\tsuf[i]=min(suf[i+1],p[i]);\n\t}\n\tint ans=1;\n\trep(i,1,n-1){\n\t\tif(pre[i]<suf[i+1]){\n\t\t\tans++;\n\t\t}\n\t}\n\tprint(ans,'\\n');\n}\n\nint main(){\n\tint T=read();\n\twhile(T--)solve();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dsu", "graphs", "math"], "dificulty": "1300", "interactive": false}