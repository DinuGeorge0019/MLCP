{"link": "https://codeforces.com//contest/1244/problem/F", "problemId": "438885", "problem_idx": "F", "shortId": "1244F", "contest_number": "1244", "problem_submissions": {"E": [62487832, 62480584, 62471612, 62475861, 62486535, 62479379, 62488595, 62479897, 62486004, 62494290, 62482838, 62489756, 62484611, 62499649, 62484119, 62485010, 62484457, 62485159, 62483197], "D": [62485326, 62477683, 62472795, 62474275, 62479070, 62488986, 62484645, 62476151, 62481028, 62481710, 62472497, 62492732, 62480440, 62477599, 62480225, 62481677, 62477177, 62480820, 62477275], "G": [62480107, 62491796, 62483655, 62495208, 62499859, 62498484, 62497339, 62483129, 62500589, 62490894, 62499284, 62480915, 62501144, 62496112, 62574872, 62510517], "F": [62476907, 62486766, 62497660, 62497231, 62492999, 62493234, 62492928, 62488841, 62496876, 62489625, 62495061, 62486153, 62494792, 62489424, 62493134, 62492962, 62496077, 62497856, 62496551], "C": [62471680, 62473970, 62477877, 62474334, 62473816, 62473208, 62512963, 62473668, 62477041, 62495125, 62513108, 62474572, 62476360, 62471677, 62473875, 62478860], "B": [62467959, 62468158, 62464148, 62469867, 62471265, 62468289, 62470934, 62468364, 62468024, 62466207, 62466240, 62496223, 62469290, 62471104, 62469292, 62469059, 62467915, 62469090, 62470225], "A": [62466123, 62464793, 62464086, 62466602, 62465923, 62464447, 62464989, 62659829, 62464905, 62464254, 62465585, 62464807, 62497112, 62464806, 62468732, 62464268, 62464707, 62464160, 62464768, 62464533]}, "name": "F. Chips", "statement": "There are n chips arranged in a circle, numbered from 1 to n. Initially\r\neach chip has black or white color. Then k iterations occur. During each\r\niteration the chips change their colors according to the following\r\nrules. For each chip i, three chips are considered: chip i itself and\r\ntwo its neighbours. If the number of white chips among these three is\r\ngreater than the number of black chips among these three chips, then the\r\nchip i becomes white. Otherwise, the chip i becomes black. Note that for\r\neach i from 2 to (n - 1) two neighbouring chips have numbers (i - 1) and\r\n(i + 1). The neighbours for the chip i = 1 are n and 2. The neighbours\r\nof i = n are (n - 1) and 1.The following picture describes one iteration\r\nwith n = 6. The chips 1, 3 and 4 are initially black, and the chips 2, 5\r\nand 6 are white. After the iteration 2, 3 and 4 become black, and 1, 5\r\nand 6 become white. Your task is to determine the color of each chip\r\nafter k iterations.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\nint n, k;\nchar s[2000010];\nint a[2000010];\nvector<int> q;\ninline void check(int x, int rnd) {\n    if(a[x]) return;\n    a[x] = rnd;\n    int now = s[x];\n    if(rnd & 1) now = 'W' + 'B' - now;\n    int last = (x - 1 + n) % n, nxt = (x + 1) % n;\n    if((a[last] && a[last] != rnd) && (a[nxt] && a[nxt] != rnd)) s[x] = now;\n    else if(a[last] && (a[last] != rnd)) s[x] = s[last];\n    else s[x] = s[nxt];\n    q.push_back(x);\n}\nint main() {\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", s);\n    for(int i = 0; i < n; i++) {\n        if(s[i] == s[(i - 1 + n) % n] || s[i] == s[(i + 1) % n]) a[i] = -1, q.push_back(i);\n    }\n    for(int i = 1; i <= k; i++) {\n        if(q.empty()) break;\n        vector<int> tmp = q;\n        q.clear();\n        for(auto j : tmp) {\n            check((j - 1 + n) % n, i);\n            check((j + 1) % n, i);\n        }\n    }\n    for(int i = 0; i < n; i++) {\n        if(a[i] == 0 && (k % 2)) s[i] = 'W' + 'B' - s[i];\n    }\n    return puts(s), 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "implementation"], "dificulty": "2300", "interactive": false}