{
    "link": "https://codeforces.com//contest/289/problem/C",
    "problemId": "2798",
    "problem_idx": "C",
    "shortId": "289C",
    "contest_number": "289",
    "problem_submissions": {
        "E": [
            3459146,
            3463369,
            3460609,
            3460604,
            3462555,
            3461006,
            3461728,
            3461588,
            3461307,
            3460025,
            3462334,
            3462779,
            3463498,
            3460536,
            3463551,
            3464172,
            3462631,
            3462960
        ],
        "C": [
            3456054,
            3456066,
            3455021,
            3459797,
            3456042,
            3453824,
            3456655,
            3457204,
            3455279,
            3456988,
            3457381,
            3458050,
            3457221,
            3457801,
            3454599,
            3456362,
            3455735,
            3456889
        ],
        "D": [
            3455963,
            3460496,
            3459068,
            3458621,
            3459481,
            3457268,
            3459857,
            3459925,
            3458097,
            3462947,
            3458331,
            3459472,
            3461935,
            3462472,
            3461241,
            3459422,
            3461116,
            3460679
        ],
        "B": [
            3455203,
            3455368,
            3453821,
            3457116,
            3455086,
            3458732,
            3455817,
            3455593,
            3459615,
            3455651,
            3454891,
            3455252,
            3455908,
            3456410,
            3456449,
            3455178,
            3457543,
            3454105
        ],
        "A": [
            3453433,
            3454495,
            3453333,
            3454660,
            3453910,
            3459883,
            3453757,
            3454123,
            3463162,
            3453754,
            3453562,
            3453866,
            3458954,
            3453377,
            3453432,
            3456188,
            3456399
        ]
    },
    "name": "C. Polo the Penguin and Strings",
    "statement": "Little penguin Polo adores strings. But most of all he adores strings of\r\nlength .One day he wanted to find a string that meets the following\r\nconditions: The string consists of lowercase English letters (that is,\r\nthe string’s length equals ), exactly of these letters are distinct. No\r\ntwo neighbouring letters of a string coincide; that is, if we represent\r\na string as , then the following inequality holds, . Among all strings\r\nthat meet points 1 and 2, the required string is lexicographically\r\nsmallest. Help him find such string or state that such string doesn’t\r\nexist.String is than string , if either and , or there is such number ,\r\nthat and . The characters of the strings are compared by their ASCII\r\ncodes.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,k;\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tif (k==1) \n\t{\n\t\tif (n==1) puts(\"a\");\n\t\telse puts(\"-1\");\n\t\treturn 0;\n\t}\n\tif (k>n) \n\t\treturn puts(\"-1\"),0;\n\tfor (int i=0;i<n-k+2;i++) \n\t\tputchar(i&1?'b':'a');\n\tfor (int i=2;i<k;i++)\n\t\tputchar('a'+i);\n\tputs(\"\");\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Polo the Penguin and Strings.json",
    "editorial_link": "https://codeforces.com//blog/entry/7241",
    "editorial": "Solution. To solve this problem we need to find out some contruction of resulting string. But first of all, we need find out when there is no result. Obviously, if k?>?n, there is not result  you cannot build string of length n with more than n characters. Another one case is when k?=?1 and n?>?1  there is no answer in that case also.\n\nConsider that k?=?2. It's really easy to see that answer for such case is a string of form abababab.... To construct string for k?>?2 you need to add some extra characters  c,?d,?e.... To make string lexicographically smallest, you need to add that characters as close to the end as we can. And the best bet here is abbabab...abacdefgh.... So, we need just to add characters c,?d,?e,?f... (i. e. k?-?2 characters from c) to the end of the string.",
    "hint": []
}