{
    "link": "https://codeforces.com//contest/714/problem/E",
    "problemId": "71344",
    "problem_idx": "E",
    "shortId": "714E",
    "contest_number": "714",
    "problem_submissions": {
        "D": [
            20590320,
            20583180,
            20585303,
            20591178,
            20598481,
            20603112,
            20603107,
            20591657,
            20607398,
            20594965
        ],
        "E": [
            20583639,
            20591013,
            20594645,
            20595036,
            20594100,
            20588546,
            20589480,
            20591788,
            20590582,
            20590355,
            20591414,
            20592977,
            20591323,
            20595335,
            20593848,
            20593101,
            20594938,
            20593282
        ],
        "C": [
            20581597,
            20576253,
            20580207,
            20579112,
            20581726,
            20579957,
            20581444,
            20580430,
            20584899,
            20580286,
            20587146,
            20580603,
            20583085,
            20584188,
            20580648,
            20582009,
            20574786,
            20581508,
            20603553,
            20603507,
            20587376,
            20575278
        ],
        "B": [
            20575974,
            20573949,
            20572686,
            20574205,
            20575669,
            20574973,
            20577284,
            20574274,
            20576588,
            20584157,
            20576158,
            20574917,
            20576728,
            20573716,
            20575150,
            20576582,
            20572425,
            20574534,
            20578364,
            20572180
        ],
        "A": [
            20572717,
            20571323,
            20571430,
            20572051,
            20572511,
            20571569,
            20573550,
            20571884,
            20571837,
            20577675,
            20571701,
            20571878,
            20578985,
            20571577,
            20572052,
            20571803,
            20571360,
            20572597,
            20575524,
            20571322
        ]
    },
    "name": "E. Sonya and Problem Wihtout a Legend",
    "statement": "Sonya was unable to think of a story for this problem, so here comes the\r\nformal description.You are given the array containing positive integers.\r\nAt one turn you can pick any element and increase or decrease it by .\r\nThe goal is the make the array strictly increasing by making the minimum\r\npossible number of operations. You are allowed to change elements in any\r\nway, they can become negative or equal to .\r\n",
    "solutions": [
        "#include<cstdio>\n#include<algorithm>\n#define MAXN 3010\nusing namespace std;\nlong long v[MAXN],aux[MAXN],solution[MAXN];\nlong long modul(long long x){\n    if(x<0)\n        return -x;\n    return x;\n}\nint main(){\n    //freopen(\"tema.in\",\"r\",stdin);\n    //freopen(\"tema.out\",\"w\",stdout);\n    int n,i,j,position;\n    long long k,sum=0,current,minim;\n    scanf(\"%d\",&n);\n    k=1;\n    for(i=1;i<=n;i++){\n        scanf(\"%I64d\",&v[i]);\n        v[i]=v[i]-(i-1)*k;\n        aux[i]=v[i];\n    }\n    sort(aux+1,aux+n+1);\n    for(i=1;i<=n;i++){\n        solution[i]=aux[n];\n        sum+=modul(solution[i]-v[i]);\n    }\n    for(i=n-1;i>=1;i--){\n        current=sum;\n        minim=sum;\n        for(j=1;j<=n;j++){\n            current-=modul(solution[j]-v[j]);\n            current+=modul(aux[i]-v[j]);\n            if(current<minim){\n                minim=current;\n                position=j;\n            }\n        }\n        if(minim<sum){\n            sum=minim;\n            for(j=1;j<=position;j++)\n                solution[j]=aux[i];\n        }\n    }\n    printf(\"%I64d\",sum);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "flows",
        "sortings"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Sonya and Problem Wihtout a Legend.json",
    "editorial_link": "https://codeforces.com//blog/entry/47094",
    "editorial": "Lets first solve easier problem. Given an array of number what it is minimal amount of operations (?+?1 to element, ?-?1 to element) to make all numbers in array equal? We need to solve this problem for each prefix. Optimal solution would be making all numbers equal to median value of the prefix (middle element in sorted list). For this problem we can simply use two heaps and insert element in right one (removing elements from inserted if need) to keep heaps equal and fit the constraint max_value(Heap1) ??? min_value(Heap2).\n\nNow lets solve harder problem. What is minimal amount of operations (?+?1 to element, ?-?1 to element) to make array be arithmetics progression with step 1? We can just reduce number ai in array by value i and will receive previous problem.\n\nFinally we have original problem. Dpi \u0097 answer for prefix ending in i, i.e. number of operations to make prefix of first i elements in increasing order. Also for each i will remember minimal last number in resulting sequence. For each i will bruteforce value j (i?>?j) and calculate answer for j if [i?+?1, j] if arithmetics progression with step 1. Also we need to assume if median value in [i?+?1, j] is lower than minimal value at i than we cannot update answer for j by answer for i."
}