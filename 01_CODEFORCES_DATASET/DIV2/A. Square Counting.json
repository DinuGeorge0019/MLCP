{
    "link": "https://codeforces.com//contest/1646/problem/A",
    "problemId": "1316352",
    "problem_idx": "A",
    "shortId": "1646A",
    "contest_number": "1646",
    "problem_submissions": {
        "F": [
            148377331,
            148376552,
            148380191,
            148408003,
            148407985,
            148407958,
            148625107,
            148397512,
            148614447,
            148385636
        ],
        "E": [
            148347130,
            148358632,
            148360488,
            148333996,
            148354021,
            148353992,
            148359437,
            148353904,
            148361106,
            148406239,
            148363543,
            148355954,
            148360552,
            148359820,
            148358320,
            148361452,
            148368263,
            148351309,
            148353801,
            148370230,
            148352778
        ],
        "D": [
            148336483,
            148341281,
            148366316,
            148319892,
            148345041,
            148346482,
            148342901,
            148349102,
            148343090,
            148339630,
            148343423,
            148345651,
            148350280,
            148350345,
            148349930,
            148341422,
            148364204,
            148362633,
            148344691,
            148349044
        ],
        "C": [
            148310953,
            148326110,
            148330270,
            148306601,
            148323665,
            148325840,
            148321586,
            148311486,
            148322407,
            148317336,
            148321327,
            148327478,
            148321394,
            148325846,
            148315684,
            148317105,
            148328227,
            148404981,
            148319824,
            148313542,
            148332408
        ],
        "B": [
            148304866,
            148306819,
            148315665,
            148302178,
            148310613,
            148314947,
            148310473,
            148304347,
            148306865,
            148309180,
            148307122,
            148311855,
            148309145,
            148315243,
            148304621,
            148305987,
            148317489,
            148404248,
            148306430,
            148304810,
            148327258
        ],
        "A": [
            148300689,
            148300631,
            148308492,
            148300540,
            148301834,
            148303727,
            148301684,
            148300721,
            148300698,
            148302427,
            148311861,
            148301382,
            148301011,
            148301721,
            148300651,
            148301177,
            148301822,
            148404175,
            148300747,
            148300552,
            148302531
        ]
    },
    "name": "A. Square Counting",
    "statement": "Luis has a sequence of n+1 integers a_1, a_2,\r\nldots, a_{n+1}. For each i = 1, 2,\r\nldots, n+1 it is guaranteed that 0\r\nleq a_i < n, or a_i=n^2. He has calculated the sum of all the elements\r\nof the sequence, and called this value s. Luis has lost his sequence,\r\nbut he remembers the values of n and s. Can you find the number of\r\nelements in the sequence that are equal to n^2?We can show that the\r\nanswer is unique under the given constraints.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nint main() {\n    cin.tie(nullptr)->sync_with_stdio(false);\n    cout << fixed << setprecision(20);\n    int t;\n    for (cin >> t; t; t -= 1) {\n        LL n, s;\n        cin >> n >> s;\n        cout << s / (n * n) << \"\\n\";\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Square Counting.json",
    "editorial_link": "https://codeforces.com//blog/entry/100584",
    "editorial": "Let the number of elements in the sequence equal to be and let the sum\r\nof all other numbers be . Then, . If an element of the sequence is not\r\nequal to , then its value is at most is . There are numbers in the\r\nsequence, so . Thus, , which is the value we want to find. So, to solve\r\nthe problem it is enough to compute the value of .Intended complexity:\r\nper test case.\r\n"
}