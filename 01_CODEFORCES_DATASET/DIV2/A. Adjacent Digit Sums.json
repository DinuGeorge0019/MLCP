{
    "link": "https://codeforces.com//contest/2067/problem/A",
    "problemId": "3199295",
    "problem_idx": "A",
    "shortId": "2067A",
    "contest_number": "2067",
    "problem_submissions": {
        "F": [
            305685907,
            305692347,
            305698935,
            305692774,
            305676497,
            305698856,
            306077498,
            305705678,
            305756151,
            305704889
        ],
        "E": [
            305658599,
            305672236,
            305683533,
            305683773,
            305656801,
            305645614,
            305696470,
            305667416,
            305664383,
            305673487,
            305670822,
            305677487,
            305670853,
            305673781,
            305671527,
            305669540,
            305677992,
            305669569
        ],
        "D": [
            305649366,
            305681166,
            305653626,
            305674453,
            305643643,
            305729660,
            305688166,
            305650701,
            305653886,
            305650207,
            305654910,
            305651908,
            305655288,
            305746455,
            305655141,
            305660113,
            305659896,
            305656329,
            305714910,
            305658443
        ],
        "C": [
            305636369,
            305648878,
            305666557,
            305665235,
            305625887,
            305647363,
            305654112,
            305631231,
            305632643,
            305629967,
            305634943,
            305636497,
            305638128,
            305637135,
            305643511,
            305643488,
            305640674,
            305635570
        ],
        "B": [
            305619994,
            305628659,
            305625583,
            305654171,
            305618751,
            305619632,
            305656230,
            305622837,
            305619493,
            305623632,
            305626730,
            305624964,
            305625007,
            305622467,
            305622926,
            305630860,
            305620471,
            305624035
        ],
        "A": [
            305614513,
            305615491,
            305614195,
            305613169,
            305612940,
            305612785,
            305651426,
            305615731,
            305613408,
            305616051,
            305615564,
            305614161,
            305613236,
            305614353,
            305613295,
            305614069,
            305612838,
            305613240
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/139415?locale=en",
    "editorial": "Letâ€™s look at the last digit of the number n. If it is not equal to 9,\r\nthen in the number n+1, this last digit will be increased by 1, while\r\nthe rest of the number will remain unchanged. Thus, for such n, we have\r\nS(n+1) = S(n) + 1.In general, if the number n ends with k consecutive\r\ndigits of 9, then it turns out that S(n+1) = S(n) + 1 - 9k, since all\r\nthese 9s will be replaced by 0s after adding one to the number\r\nn.Therefore, if there does not exist an integer k\r\ngeq 0 such that y = x + 1 - 9k, then the answer is definitely No.\r\nOtherwise, it is easy to see that the answer is definitely Yes.One of\r\nthe suitable numbers is: n =\r\nunderbrace{11\r\nldots 1}_{x-9k}\r\nunderbrace{99\r\nldots 9}_{k}. Then, S(n) = x - 9k + 9k = x.And n + 1 =\r\nunderbrace{11\r\nldots 1}_{x-9k-1}2\r\nunderbrace{00\r\nldots 0}_{k}. Thus, S(n+1) = x - 9k - 1 + 2 = x + 1 - 9k.Therefore, to\r\nsolve the problem, we need to check whether the number\r\nfrac{x + 1 - y}{9} is an integer and non-negative.\r\n",
    "name": "A. Adjacent Digit Sums",
    "statement": "You are given two numbers x, y. You need to determine if there exists an\r\ninteger n such that S(n) = x, S(n + 1) = y.Here, S(a) denotes the sum of\r\nthe digits of the number a in the decimal numeral system.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Adjacent Digit Sums.json",
    "hint": []
}