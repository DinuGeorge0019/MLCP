{
    "link": "https://codeforces.com//contest/669/problem/A",
    "problemId": "57065",
    "problem_idx": "A",
    "shortId": "669A",
    "contest_number": "669",
    "problem_submissions": {
        "E": [
            17491512,
            17491017,
            19750171,
            17501056,
            17493518,
            17492061,
            17493713,
            17493393,
            17493817,
            17492979,
            17493371,
            17493114,
            17495492,
            17494782,
            17494292,
            17495191,
            17493974,
            17493836,
            17494124
        ],
        "D": [
            17488668,
            17488489,
            17486897,
            17489357,
            17489309,
            17489532,
            17490586,
            17488952,
            17490577,
            17490565,
            17488280,
            17489742,
            18583027,
            18583013,
            17490428,
            17487352,
            17490248,
            17491103,
            17491769
        ],
        "C": [
            17485441,
            17485907,
            17484920,
            17487516,
            17486088,
            17486618,
            17486621,
            17484945,
            17488083,
            17486963,
            17486429,
            17487871,
            17486801,
            17486397,
            17488132,
            17485146,
            17486999
        ],
        "B": [
            17482906,
            17484441,
            17482918,
            17484173,
            17483561,
            17483294,
            17484370,
            17485567,
            17486297,
            17482984,
            17483079,
            17484306,
            17484088,
            17483002,
            17484517,
            17483240,
            17484521
        ],
        "A": [
            17481725,
            17483043,
            17482128,
            17482178,
            17481873,
            17482008,
            17481996,
            17485818,
            17482048,
            17481645,
            17481657,
            17481965,
            17482978,
            17481666,
            17483249,
            17481910,
            17482894
        ]
    },
    "name": "A. Little Artem and Presents",
    "statement": "Little Artem got stones on his birthday and now wants to give some of\r\nthem to Masha. He knows that Masha cares more about the fact of\r\nreceiving the present, rather than the value of that present, so he\r\nwants to give her stones as many times as possible. However, Masha\r\nremembers the last present she received, so Artem can\u2019t give her the\r\nsame number of stones twice in a row. For example, he can give her\r\nstones, then stone, then again stones, but he can\u2019t give her stones and\r\nthen again stones right after that.How many times can Artem give\r\npresents to Masha?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define REP(i, n) for(int i = 0;i < n;++i)\n#define FOR(i, a, b) for(int i = a;i < b;++i)\n#define pb push_back\n#define X first\n#define Y second\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<int, int> ii;\n\nint main() {\n\tint x;\n\tscanf(\"%d\", &x);\n\tprintf(\"%d\\n\", (x / 3) * 2 + int(x % 3 != 0));\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Little Artem and Presents.json",
    "editorial_link": "https://codeforces.com//blog/entry/44538",
    "editorial": "It is obvious that we need to make sequence of moves like: 1, 2, 1, 2, ...\n\nSo the answer is 2 * n / 3. After that we have either 0, 1 or 2 stones left. If we have 0, we are done, otherwise we have 1 or 2 left, so we only can give 1 more stone.\n\nFinal formula is: (2 * n) / 3 + (n % 3 != 0 ? 1 : 0);"
}