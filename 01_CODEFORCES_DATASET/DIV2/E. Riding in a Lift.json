{"link": "https://codeforces.com//contest/479/problem/E", "problemId": "15737", "problem_idx": "E", "shortId": "479E", "contest_number": "479", "problem_submissions": {"A": [8309900, 8302126, 8303586, 8301931, 8301886, 8303454, 8302426, 8303355, 8302448, 8301877, 8303309, 8302705, 8301884, 8303259, 8303414, 8319050, 8314132, 8301946, 8520832], "E": [8309056, 8311803, 8312909, 8313438, 8316084, 8316020, 8313424, 8327786, 8315963, 8317334, 8309253, 8316559, 8315476, 8316804, 8316031, 8315095, 8316251, 8315450, 8317290, 8312971, 8313774], "D": [8307373, 8309115, 8309669, 8309141, 8311118, 8310810, 8314426, 8309794, 8310784, 8315457, 8313129, 8315683, 8314350, 8316993, 8315739, 8312498, 8311921, 8333608, 8316306], "C": [8305195, 8306485, 8306619, 8305446, 8306856, 8306836, 8308389, 8306838, 8306950, 8305838, 8307233, 8304436, 8308183, 8305296, 8304427, 8304574, 8306220, 8306521, 8306064, 8305718], "B": [8304577, 8305140, 8304920, 8353901, 8304212, 8303937, 8306178, 8306010, 8306262, 8305338, 8304463, 8306364, 8309399, 8307051, 8303801, 8309094, 8310340, 8304911, 8313716, 8303910, 8520830]}, "name": "E. Riding in a Lift", "statement": "Imagine that you are in a building that has exactly floors. You can move\r\nbetween the floors in a lift. Let\u2019s number the floors from bottom to top\r\nwith integers from to . Now you\u2019re on the floor number . You are very\r\nbored, so you want to take the lift. Floor number has a secret lab, the\r\nentry is forbidden. However, you already are in the mood and decide to\r\nmake consecutive trips in the lift.Let us suppose that at the moment you\r\nare on the floor number (initially, you were on floor ). For another\r\ntrip between floors you choose some floor with number () and the lift\r\ntravels to this floor. As you cannot visit floor with the secret lab,\r\nyou decided that the distance from the current floor to the chosen must\r\nbe strictly less than the distance from the current floor to floor with\r\nthe secret lab. Formally, it means that the following inequation must\r\nfulfill: . After the lift successfully transports you to floor , you\r\nwrite down number in your notepad.Your task is to find the number of\r\ndistinct number sequences that you could have written in the notebook as\r\nthe result of trips in the lift. As the sought number of trips can be\r\nrather large, find the remainder after dividing the number by ().\r\n", "solutions": ["#include<iostream>\n#include<algorithm>\n#include<cstdlib>\n#include<cstdio>\n#include<set>\n#include<map>\n#include<cstring>\n#define rep(i,a,b) for (int i=a;i<=b;++i)\n#define dep(i,a,b) for (int i=a;i>=b;--i)\n#define For(i,u) for (int i=H[u];i;i=nxt[i])\n#define re(i,x) for (i=x.begin();i!=x.end();++i)\n#define mp make_pair\n#define pb push_back\n#define mod 1000000007\n#define N 5005\n#define X first\n#define Y second\nusing namespace std;\ntemplate<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};\ntemplate<class T> inline void read(T&x,T&y){read(x);read(y);}\ntemplate<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}\ntypedef long long ll;\ntypedef pair<int,int> pii;\n//head\nint n,a,b,dp[N][N],k;\nint main() {\n    read(n,a,b);read(k);\n    dp[0][a]=1;rep(i,0,k-1)  {\n        rep(j,1,n) if(dp[i][j]){\n            int len=abs(j-b)-1,l=max(1,j-len),r=min(n,j+len);\n            dp[i+1][l]=(dp[i+1][l]+dp[i][j])%mod;\n            dp[i+1][j]=(dp[i+1][j]-dp[i][j]+mod)%mod;\n            dp[i+1][j+1]=(dp[i+1][j+1]+dp[i][j])%mod;\n            dp[i+1][r+1]=(dp[i+1][r+1]-dp[i][j]+mod)%mod;\n        }\n        rep(j,1,n)dp[i+1][j]=(dp[i+1][j]+dp[i+1][j-1])%mod;\n    }\n    int ans=0;\n    rep(i,1,n)ans=(ans+dp[k][i])%mod;\n    printf(\"%d\\n\",ans);\n    return 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp"], "dificulty": "1900", "interactive": false}