{
    "link": "https://codeforces.com//contest/834/problem/C",
    "problemId": "116226",
    "problem_idx": "C",
    "shortId": "834C",
    "contest_number": "834",
    "problem_submissions": {
        "A": [
            29008155,
            28994281,
            28993223,
            28993383,
            28993299,
            28998453,
            28993114,
            29004117,
            28996516,
            28993649,
            28993425,
            28992926,
            28993510,
            28995590,
            28994499,
            28992928,
            28997910,
            28993023,
            28993758,
            28994961
        ],
        "B": [
            29006607,
            28994310,
            28996695,
            28995339,
            28995566,
            28997950,
            28994742,
            29001213,
            28994365,
            28997334,
            28993196,
            28996141,
            28998138,
            28998574,
            28996986,
            28993597,
            29001178,
            28994781,
            28995788,
            28998348
        ],
        "D": [
            29003125,
            29012205,
            29010300,
            29010636,
            29106415,
            29106137,
            29011585,
            29009751,
            29011863,
            29014000,
            29030352,
            29012705,
            29015197,
            29012485,
            29012573,
            29017014,
            29013068,
            29016244,
            29027664,
            29015960,
            29015461,
            29013386,
            32498451,
            29017312,
            29015875
        ],
        "C": [
            28993611,
            28993624,
            29000277,
            29001499,
            29003185,
            29003274,
            29002460,
            28995797,
            29001808,
            29003104,
            29004949,
            29000425,
            29000467,
            29008986,
            29000566,
            29367098,
            29002153,
            29002279,
            29005747,
            29003864,
            29006871
        ],
        "E": [
            29044757,
            29044567
        ]
    },
    "name": "C. The Meaningless Game",
    "statement": "Slastyona and her loyal dog Pushok are playing a meaningless that is\r\nindeed very interesting.The consists of multiple . Its rules are very\r\nsimple: in each round, a natural number is chosen. Then, the one who\r\nsays (or barks) it faster than the other wins the . After that, the\r\nwinner\u2019s score is multiplied by , and the loser\u2019s score is multiplied by\r\n. In the beginning of the , both Slastyona and Pushok have scores equal\r\nto one.Unfortunately, Slastyona had lost her notepad where the history\r\nof all was recorded. She managed to recall the final results for each\r\ngames, though, but all of her memories of them are vague. Help Slastyona\r\nverify their correctness, or, to put it another way, for each given pair\r\nof scores determine whether it was possible for a game to finish with\r\nsuch result or not.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\nusing vi = vector<int>;\nusing db = double;\n#define pb push_back\n#define fir first\n#define sec second\n\nint main() {\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tll A, B;\n\t\tscanf(\"%lld%lld\", &A, &B);\n\t\tll ab = cbrt((long double)A * B);\n\t\tll a = A / ab;\n\t\tll b = B / ab;\n\t\tputs(a * a * b == A && a * b * b == B ? \"Yes\" : \"No\");\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. The Meaningless Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/53567",
    "editorial": "none (maybe binary search).Let denote the product of the set of numbers\r\nsaid by Slastyona, and denote the product of the set of numbers barked\r\nby Pushok (in case one of the sets is empty the corresponding product is\r\nassumed to be equal to one).Then, we can reformulate the problem in a\r\nfollowing way: we need to find such and that the following holds: We can\r\nalready see a slow way to solve the problem. It is based on assumption\r\nthat if , then and , so we can just enumerate all possible values of\r\n.Unfortunately, we have as much as games. So we need to find a more\r\nefficient solution.Note that , and (let us denote the cubic root as ).\r\nWe can then easily find the required values: We only need to check\r\nwhether is a perfect cube and divides and . (or if binary search was\r\nused to find the cubic root).\r\n"
}