{"link": "https://codeforces.com//contest/1828/problem/C", "problemId": "1922404", "problem_idx": "C", "shortId": "1828C", "contest_number": "1828", "problem_submissions": {"E": [205928976, 205900019, 205882115, 205895924, 205892096, 205891436, 205893344], "F": [205895469], "D2": [205889438, 205883240, 205883734, 205896618, 206159170, 205894825, 205895793, 205893893, 205897477, 227549028, 205896300], "D1": [205878026, 205883337, 205866040, 205882122, 205875506, 205886552, 205886122, 205895740, 205872312, 205897439, 227549130, 205896247, 205864334, 205871289, 205871040, 205870968, 205880756, 205879364], "C": [205856261, 205854711, 205855088, 205857693, 205852246, 205857010, 205863890, 205863938, 205866888, 205861344, 205875792, 205859789, 205857545, 205862873, 205854617, 205857622, 205861133, 205854364, 205855992, 205858999], "B": [205851848, 205854227, 205848826, 205865189, 205847163, 205851029, 205851540, 205857305, 205865622, 205851306, 205878139, 205854556, 205860197, 205853496, 205849725, 205848581, 205854845, 205849749, 205849027, 205848392], "A": [205844206, 205843332, 205843301, 205858624, 205843073, 205843188, 205845089, 205849854, 205854254, 205843004, 205878944, 205844207, 205862200, 205845877, 205843927, 205843783, 205843659, 205846739, 205843197, 205843308]}, "name": "C. Counting Orders", "statement": "You are given two arrays a and b each consisting of n integers. All\r\nelements of a are pairwise distinct.Find the number of ways to reorder a\r\nsuch that a_i > b_i for all 1\r\nle i\r\nle n, modulo 10^9 + 7.Two ways of reordering are considered different if\r\nthe resulting arrays are different.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, d, u) for(int i = d; i <= u; ++i)\n#define dep(i, u, d) for(int i = u; i >= d; --i)\n#define cep(n) while(n--)\n#define gep(i, a) for(int i = firs[a]; i; i = neig[i])\nint ured() {\n\tint re = 0;\n\tchar ch;\n\tdo {\n\t\tch = getchar();\n\t} while('9' < ch || ch < '0');\n\tdo {\n\t\tre = re * 10 + (ch ^ '0');\n\t} while('0' <= (ch = getchar()) && ch <= '9');\n\treturn re;\n}\nvoid uwit(int da) {\n\tint ch[21], cn = 0;\n\tdo {\n\t\tch[++cn] = da - da / 10 * 10;\n\t} while(da /= 10);\n\tdo {\n\t\tputchar('0' ^ ch[cn]);\n\t} while(--cn);\n}\nconst int _maxn = 200011, _mods = 1000000007;\nint t, n, a[_maxn], b[_maxn], atpo, rans;\nint main() {\n\tt = ured();\n\tcep(t) {\n\t\tn = ured();\n\t\trep(i, 1, n) {\n\t\t\ta[i] = ured();\n\t\t}\n\t\trep(i, 1, n) {\n\t\t\tb[i] = ured();\n\t\t}\n\t\tsort(a + 1, a + n + 1), sort(b + 1, b + n + 1), atpo = n, rans = 1;\n\t\tdep(i, n, 1) {\n\t\t\twhile(atpo >= 1 && a[atpo] > b[i]) {\n\t\t\t\t--atpo;\n\t\t\t}\n\t\t\trans = 1ll * rans * ((n - atpo) - (n - i)) % _mods;\n\t\t}\n\t\tuwit(rans), putchar('\\n');\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["binary search", "combinatorics", "sortings"], "dificulty": "1100", "interactive": false}