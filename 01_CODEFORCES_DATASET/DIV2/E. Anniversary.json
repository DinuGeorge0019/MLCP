{
    "link": "https://codeforces.com//contest/227/problem/E",
    "problemId": "1851",
    "problem_idx": "E",
    "shortId": "227E",
    "contest_number": "227",
    "problem_submissions": {
        "E": [
            2244819
        ],
        "D": [
            2241285,
            2242789,
            2243651,
            2244494,
            2243976,
            2245494,
            2243333,
            2241816,
            2243438,
            2243253,
            2243591,
            2242751,
            2243506,
            2242179,
            2244374,
            2241750,
            2242474
        ],
        "C": [
            2239263,
            2240482,
            2239762,
            2242318,
            2239042,
            2240039,
            2244041,
            2239823,
            2241928,
            2239774,
            2240494,
            2241415,
            2240378,
            2239721,
            2241369,
            2239346,
            2243306,
            2238534
        ],
        "B": [
            2238261,
            2239265,
            2238668,
            2237700,
            2237709,
            2238241,
            2238220,
            2238145,
            2238505,
            2238087,
            2238895,
            2238677,
            2239004,
            2238928,
            2237401,
            2238043,
            2239611,
            2237944
        ],
        "A": [
            2237402,
            2238048,
            2237808,
            2237346,
            2237343,
            2240757,
            2237508,
            2237496,
            2237858,
            2237476,
            2237431,
            2237540,
            2237592,
            2241472,
            2243917,
            2237478,
            2237575
        ]
    },
    "name": "E. Anniversary",
    "statement": "There are less than 60 years left till the 900-th birthday anniversary\r\nof a famous Italian mathematician Leonardo Fibonacci. Of course, such\r\nimportant anniversary needs much preparations.Dima is sure that it\u2019ll be\r\ngreat to learn to solve the following problem by the Big Day: You\u2019re\r\ngiven a set , consisting of numbers , , , , ; let\u2019s consider all its\r\n-element subsets; for each such subset let\u2019s find the largest common\r\ndivisor of Fibonacci numbers with indexes, determined by the subset\r\nelements. Among all found common divisors, Dima is interested in the\r\nlargest one.Dima asked to remind you that Fibonacci numbers are elements\r\nof a numeric sequence, where , , for .Dima has more than half a century\r\nahead to solve the given task, but you only have two hours. Count the\r\nresidue from dividing the sought largest common divisor by .\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nlong long md;\nlong long a[5000000];\n\nvoid mul(long long a[2][2],long long b[2][2],long long c[2][2])\n{\n    long long d[2][2];\n    int i,j,k;\n    \n    memset(d,0,sizeof(d));\n    for (i=0;i<2;i++)\n    {\n        for (j=0;j<2;j++)\n        {\n            for (k=0;k<2;k++)\n            {\n                d[i][j]+=(a[i][k]*b[k][j])%md;\n                d[i][j]%=md;\n            }\n        }\n    }\n    for (i=0;i<2;i++)\n        for (j=0;j<2;j++)\n            c[i][j]=d[i][j];\n    return;\n}\n\nint fib(long long x)\n{\n    long long top, d[200],m1[2][2],m[2][2];\n    int i;\n    top=-1;\n    while (x>0)\n    {\n        top++;\n        d[top]=x%2;\n        x=x/2;\n    }\n    m1[0][0]=1;m1[0][1]=1;\n    m1[1][0]=1;m1[1][1]=0;\n    m[0][0]=1;m[0][1]=0;\n    m[1][0]=0;m[1][1]=1;\n    for (i=top;i>=0;i--)\n    {\n        mul(m,m,m);\n        if (d[i]==1) mul(m,m1,m);\n    }\n    return m[1][0];\n}\n        \nint main()\n{\n    \n    long long l,r,kk;\n    long long i,j,k,s;\n    cin>>md>>l>>r>>kk;\n    \n    i=1;\n    while (i*i<=r)\n    {\n        a[i-1]=i;\n        i++;\n    }\n \n    k=i;\n    for (j=1;j<=i;j++)\n    {\n        a[k-1]=r/j;\n        k++;\n    }\n    k--;\n\n    sort(a,a+k);\n    for (i=k-1;i>=0;i--)\n    {\n        s=r/a[i]-(l-1)/a[i];\n        if (s>=kk)\n        {\n            break;\n        }\n    }\n\n    cout<<fib(a[i])<<endl;\n    return 0;\n}\n    \n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "matrices",
        "number theory"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Anniversary.json",
    "editorial_link": "https://codeforces.com/blog/entry/5378",
    "editorial": "At first, let\u00e2\u0080\u0099s prove the statement: . Let\u00e2\u0080\u0099s express using and . We\u00e2\u0080\u0099ll\r\nget the formula: , which is easy to prove by induction. Then use the\r\nderived formula and notice, that . Now you are to notice an analogy with\r\nEuclidean algorithm and to understand, that we\u00e2\u0080\u0099ve got necessary equality\r\nfor of two Fibonacci numbers. So, our current task is to find in the\r\ngiven set subset of (or at least of ) elements with maximal possible .\r\nTo be exactly, to find this . Let the answer be equal to . Then (1) must\r\nbe true. Notice, that for each summand from left part of inequality\r\nsegments exist, in which its value is constant. Moreover, we can find\r\nall these segments and values in . To be more precise, we are intersted\r\nin such , that in the point value of at least one summand changes\r\n(obviously, increases). There are also such values. Go over all of them\r\nand try to use each of them as the answer (i.e., check inequality (1)\r\nfor each of them), and choose maximum from all satisfying numbers. The\r\nanswer always exists, as is true for any input. So, we\u00e2\u0080\u0099ve found index of\r\nrequired Fibonacci number. The number itself can be calculated by matrix\r\nexponentiation. Implementation Complexity .\r\n"
}