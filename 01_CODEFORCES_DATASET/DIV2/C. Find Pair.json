{"link": "https://codeforces.com//contest/160/problem/C", "problemId": "976", "problem_idx": "C", "shortId": "160C", "contest_number": "160", "problem_submissions": {"E": [1302014, 1301400, 1301723, 1307282, 1307281], "C": [1300399, 1296100, 1297834, 1296838, 1295835, 1299587, 1298372, 1299856, 1297589, 1298396, 1305413, 1299188, 1297999, 1298453, 1300558, 1297702], "D": [1298476, 1301798, 1300820, 1302679, 1303700, 1303100, 1312626, 1301986, 1302012], "B": [1295207, 1297802, 1295947, 1295135, 1302419, 1297089, 1295596, 1298115, 1295467, 1296000, 1296940, 1295692, 1296028, 1296085, 1296588, 1295245], "A": [1294660, 1294871, 1294936, 1294584, 1302018, 1295798, 1294840, 1294601, 1294792, 1295753, 1294780, 1294924, 1351569, 1294961, 1294857, 1295932]}, "name": "C. Find Pair", "statement": "You\u2019ve got another problem dealing with arrays. Let\u2019s consider an\r\narbitrary sequence containing (not necessarily different) integers , ,\r\n..., . We are interested in all possible pairs of numbers (, ), (). In\r\nother words, let\u2019s consider all pairs of numbers, picked from the given\r\narray.For example, in sequence are pairs of numbers: .Let\u2019s sort all\r\nresulting pairs lexicographically by non-decreasing. Let us remind you\r\nthat pair (, ) is than pair (, ) only if either < , or = and < .Then the\r\nsequence, mentioned above, will be sorted like that: Let\u2019s number all\r\nthe pair in the sorted list from to . Your task is formulated like this:\r\nyou should find the -th pair in the ordered list of all possible pairs\r\nof the array you\u2019ve been given.\r\n", "solutions": ["/*\n * c.cpp\n *\n *  Created on: 2012-3-6\n *      Author: mac\n */\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <climits>\n#include <numeric>\n#include <vector>\n#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)\n#define REP(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\ntypedef long long ll;\n\nint main() {\n\tint n;\n\tll k;\n\tcin >> n >> k;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tsort(a.begin(), a.end());\n\tfor (int i = 0, j; i < n; i = j) {\n\t\tfor (j = i; j < n && a[j] == a[i]; ++j)\n\t\t\t;\n\t\tif (k > (ll) (j - i) * n) {\n\t\t\tk -= (ll) (j - i) * n;\n\t\t\tcontinue;\n\t\t}\n\t\tfor (int l = 0; l < n; ++l) {\n\t\t\tif (k <= (j - i)) {\n\t\t\t\tcout << a[i] << \" \" << a[l] << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tk -= j - i;\n\t\t}\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "math", "sortings"], "dificulty": "1700", "interactive": false}