{"link": "https://codeforces.com//contest/670/problem/C", "problemId": "59596", "problem_idx": "C", "shortId": "670C", "contest_number": "670", "problem_submissions": {"F": [17735920, 17741947, 17739838, 17742147, 17741489, 17740480, 17741509, 17743043, 17743802, 17744174, 17746158, 17745379, 17739547, 17746721, 17747076, 17746214, 17747355], "E": [17730040, 17731049, 17733744, 17731207, 17733203, 17735292, 17734256, 17735578, 17734020, 17735429, 17736141, 17737288, 17746918, 17736320, 17739029, 17736027, 17737111], "D2": [17725965, 17728400, 17727768, 17728149, 17727724, 17733032, 17727187, 17728319, 17727989, 17724612, 17728413, 17731488, 17730289, 17730390, 17731393, 17765595, 17733213], "D1": [17725487, 17728299, 17727727, 17728284, 17727707, 17732932, 17727240, 17728389, 17728203, 17724671, 17728521, 17731440, 17730058, 17729637, 17731489, 17727320, 17732424], "C": [17723024, 17725897, 17729270, 17725892, 17727606, 17730842, 17728142, 17726419, 17724258, 17726720, 17725246, 17726826, 17726494, 17725465, 17727248, 17724877, 17734108], "B": [17721571, 17724028, 17723559, 17722726, 17722823, 17729499, 17722138, 17722709, 17722944, 17727742, 17722740, 17724595, 17723615, 17722288, 17723917, 17722833, 17723125], "A": [17720663, 17721845, 17721356, 17721364, 17721787, 17728607, 17720913, 17721102, 17720788, 17729012, 17721057, 17721708, 17721392, 17721888, 17720937, 17721414]}, "name": "C. Cinema", "statement": "Moscow is hosting a major international conference, which is attended by\r\nscientists from different countries. Each of the scientists knows\r\nexactly one language. For convenience, we enumerate all languages of the\r\nworld with integers from to .In the evening after the conference, all\r\nscientists decided to go to the cinema. There are movies in the cinema\r\nthey came to. Each of the movies is characterized by two numbers the\r\nindex of audio language and the index of subtitles language. The\r\nscientist, who came to the movie, will be if he knows the audio language\r\nof the movie, will be if he knows the language of subtitles and will be\r\nif he does not know neither one nor the other (note that the audio\r\nlanguage and the subtitles language for each movie are always\r\ndifferent). Scientists decided to go together to the same movie. You\r\nhave to help them choose the movie, such that the number of very pleased\r\nscientists is maximum possible. If there are several such movies, select\r\namong them one that will maximize the number of almost satisfied\r\nscientists.\r\n", "solutions": ["#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <fstream>\n#include <cstdlib>\n#include <numeric>\n#include <iomanip>\n#include <cstdio>\n#include <cstring>\n#include <cassert>\n#include <vector>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <ctime>\n#include <set>\n#include <map>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate <typename T>\nT nextInt() {\n    T x = 0, p = 1;\n    char ch;\n    do { ch = getchar(); } while(ch <= ' ');\n    if (ch == '-') {\n        p = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9') {\n        x = x * 10 + (ch - '0');\n        ch = getchar();\n    }\n    return x * p;\n}\n\nconst int maxN = (int)1e5 + 10;\nconst int maxL = 17;\nconst int INF = (int)1e9;\nconst int mod = (int)1e9 + 7;\nconst ll LLINF = (ll)1e18;\n\n\n    map <int, int> a;\n\nint get(int x) {\n    if(a.count(x)) return a[x];\n    return 0;\n}\n\nint main() {\n\n    //freopen(\"input.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n    ios_base::sync_with_stdio(0);\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        int x;\n        cin >> x;\n        a[x]++;\n    }\n    int m;\n    cin >> m;\n    vector <int> b(m);\n    vector <int> c(m);\n    for (int i = 0; i< m; ++i) {\n        cin >> b[i];\n    }\n    for (int i =0; i < m; ++i) {\n        cin >> c[i];\n    }\n\n    pair <int, int> v = make_pair(-1, -1);\n    int idx  = -1;\n    for (int i = 0; i< m; ++i) {\n        pair <int, int> cur = make_pair(get(b[i]), get(c[i]));\n        if (cur > v) {\n            v = cur;\n            idx = i + 1;\n        }\n    }\n    cout << idx << '\\n';\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "sortings"], "dificulty": "1300", "interactive": false}