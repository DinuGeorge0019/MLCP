{
    "link": "https://codeforces.com//contest/1467/problem/B",
    "problemId": "858753",
    "problem_idx": "B",
    "shortId": "1467B",
    "contest_number": "1467",
    "problem_submissions": {
        "A": [
            103781028,
            103732975,
            103789355,
            103727649,
            103776107,
            103728134,
            103733285,
            103731503,
            103734108,
            103745618,
            103776057,
            103728589,
            103737241,
            103730063,
            103728536,
            103782858,
            103740519,
            103780744,
            103730125,
            103733429
        ],
        "B": [
            103776223,
            103763378,
            103735716,
            103743111,
            103753392,
            103747731,
            103744698,
            103825399,
            103745451,
            103752738,
            103745778,
            103769242,
            103752112,
            103747036,
            103750474,
            103751826,
            103737251,
            103751660,
            103806893,
            103752900,
            103749089
        ],
        "C": [
            103771486,
            103780246,
            103746693,
            103766971,
            103761062,
            103800886,
            103767932,
            103776708,
            103770869,
            103762101,
            103786323,
            103768958,
            103786670,
            103776678,
            103772104,
            103785995,
            103773040,
            103799284,
            103805177,
            103785884
        ],
        "D": [
            103764796,
            103781468,
            103759529,
            103758056,
            103768367,
            103763856,
            103774343,
            103763817,
            103781960,
            103777881,
            103743423,
            103779264,
            103772933,
            103764332,
            103785499,
            103746072,
            103785798,
            103785854,
            103759639,
            103785071
        ],
        "E": [
            103749029,
            103758281,
            103840304,
            103785768,
            103786917,
            103785220,
            103779762,
            103798134,
            103802685,
            103796217,
            103804930,
            103797788,
            103804889,
            103803175,
            103801192,
            103810505,
            103804335,
            103855637,
            103803060,
            103803658,
            103762986,
            103795272,
            103809021
        ]
    },
    "name": "B. Hills And Valleys",
    "statement": "You are given a sequence of n integers a_1, a_2, ..., a_n. Let us call\r\nan index j (2\r\nle j\r\nle {{n-1}}) a if a_j > a_{{j+1}} and a_j > a_{{j-1}}; and let us call it\r\na if a_j < a_{{j+1}} and a_j < a_{{j-1}}.Let us define the of a sequence\r\nas the sum of the number of hills and the number of valleys in the\r\nsequence. You can change integer in the sequence to any number that you\r\nwant, or let the sequence remain unchanged. What is the minimum that you\r\ncan achieve?\r\n",
    "solutions": [
        "// author: xay5421\n// created: Fri Jan  8 23:28:21 2021\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\nusing namespace std;\nconst int N=300005;\nint T,n,ans,res,a[N],b[N];\nvoid up(int k1){\n\tif(k1<1||k1>n)return;\n\tans-=b[k1];\n\tb[k1]=k1>=2&&k1<=n-1&&((a[k1]>a[k1-1]&&a[k1]>a[k1+1])||(a[k1]<a[k1-1]&&a[k1]<a[k1+1]));\n\tans+=b[k1];\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n);\n\t\tans=0,res=n;\n\t\trep(i,1,n)scanf(\"%d\",&a[i]),b[i]=0;\n\t\trep(i,1,n)up(i);\n\t\tres=min(res,ans);\n\t\trep(i,1,n){\n\t\t\tint t=a[i];\n\t\t\tif(i>1){\n\t\t\t\ta[i]=a[i-1];\n\t\t\t\tup(i),up(i-1),up(i+1);\n\t\t\t\tres=min(res,ans);\n\t\t\t}\n\t\t\tif(i<n){\n\t\t\t\ta[i]=a[i+1];\n\t\t\t\tup(i),up(i-1),up(i+1);\n\t\t\t\tres=min(res,ans);\n\t\t\t}\n\t\t\ta[i]=t,up(i),up(i-1),up(i+1);\n\t\t}\n\t\tprintf(\"%d\\n\",res);\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Hills And Valleys.json",
    "editorial_link": "https://codeforces.com//blog/entry/86566",
    "editorial": "Changing the value of affects the hill/valley status of only elements .\r\nWe claim that it is optimal to change to either or for valid .Let be a\r\nvalue of such that the number of hills/valleys among elements is\r\nminimised. Now, if , we can set without changing any non-hill/non-valley\r\nelement to a hill/valley. Similarly, if we can set . Hence proved.The\r\nfinal solution is as follows. Precompute the number of hills and valleys\r\nin the original array. Then, for every valid index , calculate the\r\nchange in the number of hills/valleys of the elements on setting and and\r\nupdate the minimum answer accordingly.\r\n"
}