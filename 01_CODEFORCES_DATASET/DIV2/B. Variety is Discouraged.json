{
    "link": "https://codeforces.com//contest/2064/problem/B",
    "problemId": "3209694",
    "problem_idx": "B",
    "shortId": "2064B",
    "contest_number": "2064",
    "problem_submissions": {
        "F": [
            306407892,
            306425196,
            306377965,
            306528822,
            306420583,
            306436938,
            306464619,
            306464611,
            306464596,
            306421840,
            306436020,
            306431617
        ],
        "E": [
            306390714,
            306398471,
            306384310,
            306394422,
            306398127,
            306399878,
            306406503,
            306383184,
            306400855,
            306401726,
            306402720,
            306406500,
            306407308,
            306407643
        ],
        "D": [
            306371870,
            306386641,
            306395969,
            306366170,
            306368905,
            306376156,
            306376541,
            306371606,
            306373885,
            306397500,
            306381946,
            306383232,
            306376685,
            306374721,
            306378738,
            306378728,
            306379129
        ],
        "C": [
            306354396,
            306362052,
            306353937,
            306355169,
            306355714,
            306353717,
            306358223,
            306359445,
            306355168,
            306369168,
            306356490,
            306351942,
            306356412,
            306355663,
            306365036,
            306361215,
            306362138
        ],
        "B": [
            306350175,
            306351645,
            306349804,
            306350391,
            306352487,
            306349346,
            306350952,
            306351840,
            306351364,
            306350764,
            306349120,
            306348178,
            306353114,
            306350171,
            306353103,
            306355161,
            306356448
        ],
        "A": [
            306345365,
            306345586,
            306346094,
            306345382,
            306344838,
            306344890,
            306345366,
            306345254,
            306346099,
            306344812,
            306345138,
            306344813,
            306347979,
            306345325,
            306346230,
            306349362
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/138912",
    "editorial": "SolutionThe first thing to notice is that if we remove an element from\r\nthen our score will never increase. Because removing one element will\r\ncause to decrease by and will decrease by at most and so the will never\r\nincrease. This means that we should be trying to removing the longest\r\nsubarray which does not decrease our score.We can see that removing any\r\nelement which only occurs once in will never decrease our score, and\r\nthat removing any element which occurs more than once will always\r\ndecrease our score. Thus we should try to find the longest subarray of\r\nelements which only have occurrence in and this will be the answer. This\r\ncan be calculated with a single loop in .\r\n",
    "name": "B. Variety is Discouraged",
    "statement": "Define the score of an arbitrary array b to be the length of b minus the\r\nnumber of distinct elements in b. For example: The score of [1, 2, 2, 4]\r\nis 1, as it has length 4 and only 3 distinct elements (1, 2, 4). The\r\nscore of [1, 1, 1] is 2, as it has length 3 and only 1 distinct element\r\n(1). The empty array has a score of 0. You have an array a. You need to\r\nremove some contiguous subarray from a once.More formally, you can do\r\nthe following once: pick two integers l, r where 1\r\nle l\r\nle r\r\nle n, and delete the contiguous subarray [a_l,\r\nldots,a_r] from a (that is, replace a with [a_1,\r\nldots,a_{l - 1},a_{r + 1},\r\nldots,a_n]). Output an operation such that the score of a is ; if there\r\nare multiple answers, output one that the final length of a after the\r\noperation. If there are still multiple answers, you may output any of\r\nthem.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "two pointers"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Variety is Discouraged.json",
    "hint": []
}