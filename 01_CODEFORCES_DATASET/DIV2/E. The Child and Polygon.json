{"link": "https://codeforces.com//contest/437/problem/E", "problemId": "9962", "problem_idx": "E", "shortId": "437E", "contest_number": "437", "problem_submissions": {"D": [6768714, 6769219, 6770597, 6770872, 6770582, 6781618, 6771775, 6770670, 6770715, 6769181, 6771878, 6771390, 6772290, 6772185, 6772074, 6773126, 6775142, 6772502, 6772965], "C": [6767394, 6768027, 6768255, 6768551, 6769557, 6781619, 6767953, 6767610, 6769516, 6767838, 6769685, 6768603, 6768216, 6769376, 6770139, 6769862, 6768685, 6770746], "B": [6766890, 6767081, 6767380, 6767693, 6768412, 6781613, 6767171, 6768398, 6767388, 6767578, 6769683, 6769218, 6768117, 6768608, 6767962, 6770162, 6769331], "A": [6765797, 6766130, 6766338, 6766075, 6766175, 6781609, 6766174, 6768415, 6766417, 6774089, 6765946, 6766895, 6767187, 6766894, 6767293, 6771080, 6766764, 6766124], "E": [6781616]}, "name": "E. The Child and Polygon", "statement": "This time our child has a simple polygon. He has to find the number of\r\nways to split the polygon into non-degenerate triangles, each way must\r\nsatisfy the following requirements: each vertex of each triangle is one\r\nof the polygon vertex; each side of the polygon must be the side of\r\nexactly one triangle; the area of intersection of every two triangles\r\nequals to zero, and the sum of all areas of triangles equals to the area\r\nof the polygon; each triangle must be completely inside the polygon; .\r\nThe picture below depicts an example of a correct splitting. Please,\r\nhelp the child. Calculate the described number of ways modulo for him.\r\n", "solutions": ["#include <cstdlib>  \n#include <cctype>  \n#include <cstring>  \n#include <cstdio>  \n#include <cmath>  \n#include <algorithm>  \n#include <vector>  \n#include <string>  \n#include <iostream>  \n#include <sstream>  \n#include <map>  \n#include <set>  \n#include <queue>  \n#include <stack>  \n#include <fstream>  \n#include <numeric>  \n#include <iomanip>  \n#include <bitset>  \n#include <list>  \n#include <stdexcept>  \n#include <functional>  \n#include <utility>  \n#include <ctime>  \nusing namespace std;  \n  \n#define PB push_back  \n#define MP make_pair  \n  \n#define REP0(i, n) for (int i = 0; i < n; i++)\n#define REP1(i, n) for (int i = 1; i <= n; i++)\n#define REP(i, l, r) for (int i = l; i <= r; i++)\n#define RP(i, r, l) for (int i = r; i >= l; i--)\n#define FORE(i, x) for (int i = fi[x]; i != -1; i = e[i].n)\n\ntypedef vector < int > VI;  \ntypedef vector < string > VS;  \ntypedef vector < double > VD;  \ntypedef long long LL;\ntypedef long double ld;\ntypedef pair < int, int > PII;\n#define MAX_N 210\n#define P 1000000007\n\nLL s[MAX_N][MAX_N];\nbool in[MAX_N][MAX_N][MAX_N];\nint xi[MAX_N], yi[MAX_N], f[MAX_N][MAX_N], n;\n\nint go(int x) { return x % n == 0 ? n : x % n; }\ninline LL det(int a, int b, int c)\n{ return 1LL * (xi[a] - xi[c]) * (yi[b] - yi[c]) - 1LL * (yi[a] - yi[c]) * (xi[b] - xi[c]); }\ninline LL mabs(LL x) { return x > 0 ? x : -x; }\n\nint main(void)\n{\n //   freopen (\"input.txt\", \"r\", stdin);\n//    freopen (\"output.txt\", \"w\", stdout);\n    scanf (\"%d\", &n);\n    REP1(i, n) scanf (\"%d%d\", xi + i, yi + i);\n    REP1(i, n) REP(j, i, n) REP(p, i + 1, j - 1) s[i][j] += det(p, p + 1, i);\n    REP1(i, n) REP1(j, i - 1)\n        for (int k = go(i + 1); k != j; k = go(k + 1)) s[i][j] += det(go(k), go(k + 1), i);\n    //\u5224\u65ad\u591a\u8fb9\u5f62\u4e09\u89d2\u5f62\u662f\u5426\u51fa\u754c \n    REP1(i, n) REP(j, i + 1, n) REP(k, j + 1, n)\n    {\n        LL t = det(j, k, i);\n        if (mabs(t) + mabs(s[i][j]) + mabs(s[j][k]) + mabs(s[k][i]) == mabs(s[1][n]) && t)\n           in[i][j][k] = true;\n    }\n    REP1(i, n) f[i][i + 1] = 1;\n    RP(i, n, 1) REP(j, i + 1, n) REP(k, i + 1, j - 1)\n      if (in[i][k][j]) f[i][j] = (f[i][j] + 1LL * f[i][k] * f[k][j]) % P;\n    printf (\"%d\\n\", f[1][n]);\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "geometry"], "dificulty": "2500", "interactive": false}