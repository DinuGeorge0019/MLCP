{
    "link": "https://codeforces.com//contest/602/problem/D",
    "problemId": "41467",
    "problem_idx": "D",
    "shortId": "602D",
    "contest_number": "602",
    "problem_submissions": {
        "E": [
            14454223,
            14454299,
            14456209,
            14454133,
            14461507,
            14454782,
            14462716,
            14558697
        ],
        "D": [
            14451210,
            14452436,
            14450199,
            14451643,
            14452168,
            14452516,
            14457831,
            14457388,
            14453117,
            14453359,
            14453097,
            14453665,
            14453691,
            14453322,
            14456227,
            14455000,
            14454509,
            14455343,
            14455630
        ],
        "C": [
            14448038,
            14449533,
            14448113,
            14448523,
            14448134,
            14447896,
            14448656,
            14449600,
            14448895,
            14449603,
            14449182,
            14448402,
            14448301,
            14447808,
            14450369,
            14450695,
            14450052,
            14450000
        ],
        "B": [
            14446256,
            14444626,
            14444299,
            14445958,
            14445416,
            14445768,
            14446515,
            14445706,
            14447944,
            14446601,
            14447890,
            14447097,
            14446293,
            14446165,
            14445203,
            14446223,
            14448026,
            14446486,
            14446647
        ],
        "A": [
            14443980,
            14443071,
            14443212,
            14443069,
            14443890,
            14443977,
            14443958,
            14444049,
            14443188,
            14443469,
            14443711,
            14447134,
            14443794,
            14443478,
            14443179,
            14443500,
            14444026,
            14444059
        ]
    },
    "name": "D. Lipshitz Sequence",
    "statement": "A function is called Lipschitz continuous if there is a real constant\r\nsuch that the inequality holds for all . We’ll deal with a more...\r\ndiscrete version of this term.For an array , we define it’s Lipschitz\r\nconstant as follows: if , if , over all In other words, is the smallest\r\nnon-negative integer such that holds for all .You are given an array of\r\nsize and queries of the form . For each query, consider the subarray ;\r\ndetermine the sum of Lipschitz constants of of .\r\n",
    "solutions": [
        "#include <iostream>\n#include <algorithm>\n#include <set>\n#include <cmath>\n\nusing namespace std;\n\nint n, q;\nint a[110000];\npair<int, int> order[110000];\nint X[110];\nint Y[110];\nlong long ans[110];\n\nint main() {\n    cin >> n >> q;\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    for (int i = 0; i < n - 1; i++) {\n        order[i] = make_pair(abs(a[i + 1] - a[i]), i);\n    }\n    for (int i = 0; i < q; i++) {\n        cin >> X[i] >> Y[i];\n        X[i]--;\n        Y[i]--;\n    }\n    sort(order, order + n - 1);\n    reverse(order, order + n - 1);\n    set<int> st;\n    st.insert(-1);\n    st.insert(n - 1);\n    for (int i = 0; i < n - 1; i++) {\n        int p = order[i].second;\n        int r = *st.lower_bound(p);\n        int l = *(--st.lower_bound(p));\n        st.insert(p);\n        // l + 1 ~ p\n        // p + 1 ~ r\n        int x, y;\n        for (int j = 0; j < q; j++) {\n            x = min(Y[j], p) - max(X[j], l + 1) + 1;\n            x = max(x, 0);\n            y = min(Y[j], r) - max(X[j], p + 1) + 1;\n            y = max(y, 0);\n            ans[j] += 1LL * x * y * order[i].first;\n        }\n    }\n    for (int i = 0; i < q; i++) {\n        cout << ans[i] << endl;\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Lipshitz Sequence.json",
    "editorial_link": "https://codeforces.com//blog/entry/21755",
    "editorial": "Forget about the ceiling function. Draw points (i,?A[i]) and lines between them  what's the Lipschitz constant geometrically?",
    "hint": []
}