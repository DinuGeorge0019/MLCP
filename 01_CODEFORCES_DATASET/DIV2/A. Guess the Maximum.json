{
    "link": "https://codeforces.com//contest/1979/problem/A",
    "problemId": "2684279",
    "problem_idx": "A",
    "shortId": "1979A",
    "contest_number": "1979",
    "problem_submissions": {
        "F": [
            264479061,
            264488646,
            264505247,
            264595233,
            264619291
        ],
        "E": [
            264463709,
            264456182,
            264454663,
            264460110,
            264469235,
            264463422,
            264466790,
            264478578,
            264473477,
            264470909,
            264471670,
            264477459,
            264475074,
            264468357,
            264475963,
            264472031,
            264477800,
            264475608,
            264472217
        ],
        "D": [
            264443096,
            264466698,
            264438605,
            264433389,
            264436848,
            264441621,
            264445629,
            264439468,
            264443494,
            264448547,
            264437284,
            264438609,
            264445824,
            264448565,
            264448792,
            264448782,
            264436980,
            264445527,
            264444587
        ],
        "C": [
            264426913,
            264419354,
            264425968,
            264424857,
            264419880,
            264427385,
            264428474,
            264417768,
            264426268,
            264426216,
            264426191,
            264428203,
            264424558,
            264432779,
            264423537,
            264427769,
            264423741,
            264426473,
            264428054
        ],
        "B": [
            264418439,
            264411481,
            264417433,
            264418710,
            264412854,
            264416785,
            264417289,
            264409596,
            264415411,
            264416480,
            264411733,
            264416203,
            264418002,
            264418445,
            264413144,
            264415814,
            264415134,
            264412074,
            264419017
        ],
        "A": [
            264409604,
            264408727,
            264409156,
            264412898,
            264408950,
            264409241,
            264410321,
            264408352,
            264408494,
            264408922,
            264408390,
            264408516,
            264410187,
            264409625,
            264408487,
            264409057,
            264408498,
            264408238,
            264408615
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130213",
    "editorial": "SolutionLet be the maximum among the numbers . Notice that there always\r\nexists such that and or . Therefore, we can assume that Bob always\r\nchooses the pair of numbers and () as and .Therefore you need to\r\nconsider the maximums in pairs of adjacent elements and take the minimum\r\namong them. Let be the found minimum, then it is obvious that the answer\r\nis equal to .\r\n",
    "name": "A. Guess the Maximum",
    "statement": "Alice and Bob came up with a rather strange game. They have an array of\r\nintegers a_1, a_2,\r\nldots, a_n. Alice chooses a certain integer k and tells it to Bob, then\r\nthe following happens: Bob chooses two integers i and j (1\r\nle i < j\r\nle n), and then finds the maximum among the integers a_i, a_{i + 1},\r\nldots, a_j; If the obtained maximum is than k, Alice wins, otherwise Bob\r\nwins. Help Alice find the maximum k at which she is guaranteed to win.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;#define ll long long#define MP make_pairmt19937 rnd(time(0));const int MAXN=5e5+5;int n,a[MAXN];void solve(){\tcin>>n;\tfor(int i=1;i<=n;i++) cin>>a[i];\tint ans=1e9;\tfor(int i=1;i<n;i++) ans=min(ans,max(a[i],a[i+1]));\tcout<<ans-1<<'\\n';}int main(){\tios::sync_with_stdio(false);\t// freopen(\"Otomachi_Una.in\",\"r\",stdin);\t// freopen(\"Otomachi_Una.out\",\"w\",stdout);\tint _;cin>>_;\twhile(_--) solve();\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Guess the Maximum.json",
    "hint": []
}