{
    "link": "https://codeforces.com//contest/174/problem/E",
    "problemId": "1100",
    "problem_idx": "E",
    "shortId": "174E",
    "contest_number": "174",
    "problem_submissions": {
        "B": [
            1503930,
            1499525,
            1499538,
            1500205,
            1499258,
            1499768,
            1501357,
            1499457,
            1503985,
            1505557,
            1499961,
            1499234,
            1500331
        ],
        "D": [
            1503363,
            1501621,
            1502127,
            1503092,
            1503245,
            1503411,
            1501894,
            1503085,
            1501903,
            1500001,
            1503531,
            1501616,
            1502373,
            1502070,
            1502395,
            1502564,
            1503108
        ],
        "C": [
            1503107,
            1508292,
            1501371,
            1501282,
            1500969,
            1500926,
            1499876,
            1501802,
            1501230,
            1502044,
            1502361,
            1504842,
            1501563,
            1501111,
            1501734,
            1502012
        ],
        "A": [
            1501910,
            1498466,
            1498355,
            1498723,
            1498298,
            1498576,
            1498366,
            1498300,
            1498312,
            1502389,
            1498657,
            1498399,
            1498335,
            1498390,
            1499307,
            1498408,
            1498327,
            1498514
        ],
        "E": [
            1499649,
            1502782,
            1505549,
            1505680,
            1505679,
            1505670,
            1505552
        ]
    },
    "name": "E. Ancient Berland Hieroglyphs",
    "statement": "Polycarpus enjoys studying Berland hieroglyphs. Once Polycarp got hold\r\nof two ancient Berland pictures, on each of which was drawn a circle of\r\nhieroglyphs. We know that no hieroglyph occurs twice in either the first\r\nor the second circle (but in can occur once in each of them).Polycarpus\r\nwants to save these pictures on his laptop, but the problem is, laptops\r\ndo not allow to write hieroglyphs circles. So Polycarp had to break each\r\ncircle and write down all of its hieroglyphs in a clockwise order in one\r\nline. A line obtained from the first circle will be called , and the\r\nline obtained from the second one will be called .There are quite many\r\nways to break hieroglyphic circles, so Polycarpus chooses the method,\r\nthat makes the length of the largest substring of string , which occurs\r\nas a subsequence in string , maximum.Help Polycarpus find the maximum\r\npossible length of the desired substring (subsequence) if the first and\r\nthe second circles are broken optimally.The of string is the number of\r\ncharacters in it. If we denote the length of string as , we can write\r\nthe string as .A of is a non-empty string (). For example, \"\" and \"\" are\r\nsubstrings of \"\", while \"\" is not. A of is a non-empty string (). For\r\nexample, \"\" is a subsequence of \"\".\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include <string>\n#include<set>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<list>\nusing namespace std;\n\nconst int sz = 1000001;\nint a[sz], b[sz], wh[sz], ans = 0;\nlist<int> c;\nbool Next = 0;\n\nvoid add(int i)\n{\n    c.push_back(i);\n    if (c.front() > i)\n        Next = 1;\n}\n\nbool good(int t)\n{\n    return c.empty() || !Next && (t > c.back() || t < c.front()) || Next && t < c.front() && t > c.back();\n}\n\nvoid solve(int i)\n{\n    int t = wh[a[i]];\n    if (t == 0)\n    {\n        Next = 0;\n        c.clear();\n        return;\n    }\n    else\n        t--;\n\n    while (!good(t))\n    {\n        int u = c.front();\n        c.pop_front();\n        if (c.empty() || u > c.front())\n            Next = 0;\n    }\n\n    add(t);\n    ans = max(ans, (int)c.size());\n}\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n        freopen(\"input.txt\", \"rt\", stdin);\n        freopen(\"output.txt\", \"wt\", stdout);\n    #endif\n\n    int n, m;\n    cin >> n >> m;\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n    for (int i = 0; i < m; i++)\n    {\n        scanf(\"%d\", &b[i]);\n        wh[b[i]] = i + 1;\n    }\n\n    \n    for (int i = 0; i < n; i++)\n        solve(i);\n    for (int i = 0; i < n; i++)\n        solve(i);\n\n    cout << ans;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Ancient Berland Hieroglyphs.json",
    "editorial_link": "https://codeforces.com//blog/entry/4303",
    "editorial": null,
    "hint": []
}