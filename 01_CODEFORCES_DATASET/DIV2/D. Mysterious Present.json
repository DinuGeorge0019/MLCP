{"link": "https://codeforces.com//contest/4/problem/D", "problemId": "16", "problem_idx": "D", "shortId": "4D", "contest_number": "4", "problem_submissions": {"D": [16890, 16860, 16849, 17129, 16971, 17073, 17153, 17175, 17097, 17267, 17067, 17412, 17271, 17255], "C": [16625, 16725, 16822, 16792, 16812, 16858, 17049, 16872, 16645, 16659, 16689, 16489, 16697], "B": [16507, 16612, 16517, 16648, 16691, 16693, 16557, 16549, 16506, 16484, 16577, 16739, 16582], "A": [16265, 16268, 16274, 16389, 16519, 16367, 16272, 16229, 16259, 16251, 16333, 16311, 16286]}, "name": "D. Mysterious Present", "statement": "Peter decided to wish happy birthday to his friend from Australia and\r\nsend him a card. To make his present more mysterious, he decided to make\r\na . Chain here is such a sequence of envelopes = {}, where the width and\r\nthe height of the -th envelope is strictly higher than the width and the\r\nheight of the -th envelope respectively. Chain size is the number of\r\nenvelopes in the chain. Peter wants to make the chain of the maximum\r\nsize from the envelopes he has, the chain should be such, that he\u2019ll be\r\nable to put a card into it. The card fits into the chain if its width\r\nand height is lower than the width and the height of the smallest\r\nenvelope in the chain respectively. It\u2019s forbidden to turn the card and\r\nthe envelopes. Peter has very many envelopes and very little time, this\r\nhard task is entrusted to you.\r\n", "solutions": ["#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <math.h>\n#include <stdio.h>\n#include <cstring>\n#include <vector>\n#include <map>\n#include <string>\n#include <set>\n#include <sstream>\n\n#define FOR(i,a,b) for(int i = a; i <= b; i++) \n#define DOWN(i,a,b) for(int i = a; i >= b; i--)\n#define FORV(i,a) for(typeof(a.begin()) i = a.begin(); i != a.end(); i++)\n#define FR(i,a) for(int i = 0; i < a; i++)\n#define REP(i,a) for(int i = 0; i < a; i++)\n#define Rep(i,a) for(int i = 0; i < a; i++)\n#define For(i,a,b) for(int i = a; i <= b; i++)\n\n#define sqr(x) (x)*(x)\n#define dout debug && cout \n#define next(i,n) ((i == n) ? 1 : i + 1)   //1..n\n#define prev(i,n) ((i == 1) ? n : i - 1)   //1..n\n#define ll long long\n#define ull unsigned long long\n/* CONSTANT  */\n#define oo 1000000002\n/* DEBUGGING */\nbool debug = false;\n/* MAIN PROGRAM */\n\nusing namespace std;\nint a[10000],b[10000],kq[10003];\nint n,H,W,m = 0,f[10004],Trace[10004];\nstruct pt\n{\n    int x,y,cs;\n};\npt p[10003];\n\nbool cmp(pt i,pt j)\n{\n    return (i.x < j.x || (i.x == j.x && i.y > j.y));\n}\nint main()\n{ \n    cin >> n >> W >> H;\n    int x,y;\n    FOR(i,1,n)\n    {\n        cin >> x >> y;\n        if (x > W && y > H)\n        {\n            p[++m].x = x;\n            p[m].y = y;\n            p[m].cs = i;\n        }\n    }\n    if (m == 0)\n    {\n        cout << \"0\";\n        return 0;\n    }\n    sort(p+1,p+m+1,cmp);\n    int res = 0,pos;\n    FOR(i,1,m)\n    {\n        f[i] = 1;\n        FOR(j,1,i-1)\n        if (p[i].y > p[j].y && f[i] < f[j] + 1) \n        {\n            f[i] = f[j] + 1;\n            Trace[i] = j;\n        }\n        if (res < f[i])\n        {\n            res = f[i];\n            pos = i;\n        }\n    }\n    int i = pos;\n    cout << res << endl;\n    kq[res] = p[i].cs;\n    DOWN(j,res-1,1)\n    {\n        i = Trace[i];\n        kq[j] = p[i].cs;\n    }\n    FOR(i,1,res) cout << kq[i] << \" \";\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["dp", "sortings"], "dificulty": "1700", "interactive": false}