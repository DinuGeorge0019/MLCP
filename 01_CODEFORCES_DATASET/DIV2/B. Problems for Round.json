{"link": "https://codeforces.com//contest/673/problem/B", "problemId": "59807", "problem_idx": "B", "shortId": "673B", "contest_number": "673", "problem_submissions": {"E": [17790544, 17790298, 17792643, 17795142, 17797198, 17796072, 17796678, 17794290, 17802948, 18498821, 18454059, 18453934, 18453804, 27208468, 17814502, 17814492, 17810486], "A": [17785371, 17780028, 17783006, 17781229, 17780841, 17781392, 17781436, 17783310, 17780077, 17780098, 17783943, 17780241, 17780697, 17780142, 17780713, 17780906, 17780033, 17782963, 17780095, 17780488], "D": [17784968, 17784163, 17787638, 17787311, 17788261, 17790516, 17791783, 17788147, 17787202, 17788591, 17787856, 17787228, 17787665, 17788331, 17788505, 17790808, 17791801, 17789992, 17788978, 17790173], "B": [17783887, 17780728, 17785147, 17782968, 17783327, 17784516, 17785052, 17786520, 17783375, 17784877, 17782865, 17784125, 17784706, 17782517, 17784194, 17786784, 17781561, 17784108, 17784745, 17783935], "C": [17780670, 17782033, 17785575, 17788307, 17784829, 17786955, 17787316, 17789788, 17784945, 17782021, 17781157, 17785332, 17782835, 17785106, 17786557, 17783986, 17790134, 17785539, 17783083, 17786914], "F": [17799743]}, "name": "B. Problems for Round", "statement": "There are problems prepared for the next Codeforces round. They are\r\narranged in ascending order by their difficulty, and no two problems\r\nhave the same difficulty. Moreover, there are pairs of similar problems.\r\nAuthors want to split problems between two division according to the\r\nfollowing rules: Problemset of each division should be non-empty. Each\r\nproblem should be used in exactly one division (yes, it is unusual\r\nrequirement). Each problem used in division 1 should be harder than any\r\nproblem used in division 2. If two problems are similar, they should be\r\nused in different divisions. Your goal is count the number of ways to\r\nsplit problem between two divisions and satisfy all the rules. Two ways\r\nto split problems are considered to be different if there is at least\r\none problem that belongs to division 1 in one of them and to division 2\r\nin the other.Note, that the relation of similarity transitive. That is,\r\nif problem is similar to problem and problem is similar to problem , it\r\ndoesn\u2019t follow that is similar to .\r\n", "solutions": ["#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <memory.h>\n#include <math.h>\n#include <assert.h>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <algorithm>\n#include <string>\n#include <functional>\n#include <vector>\n#include <numeric>\n#include <deque>\n#include <utility>\n#include <bitset>\n#include <limits.h>\n#include <iostream>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long llu;\ntypedef double lf;\ntypedef unsigned int uint;\ntypedef long double llf;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int N_ = 100500;\nconst int M_ = 100500;\n\nint N, M;\nvector<int> gph[N_];\n\nvector<int> A, B;\n\nint main() {\n\tscanf(\"%d%d\", &N, &M);\n\tfor(int e = 1; e <= M; e++) {\n\t\tint u, v; scanf(\"%d%d\", &u, &v);\n\t\tif(u > v) swap(u, v);\n\t\tA.push_back(u); B.push_back(v);\n\t}\n\n\tif(M == 0) {\n\t\tprintf(\"%d\\n\", N-1);\n\t}else {\n\t\tint a = *max_element(A.begin(), A.end());\n\t\tint b = *min_element(B.begin(), B.end());\n\t\tprintf(\"%d\\n\", max(0, b-a));\t\n\t}\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "1300", "interactive": false}