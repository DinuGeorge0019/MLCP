{
    "link": "https://codeforces.com//contest/299/problem/E",
    "problemId": "2895",
    "problem_idx": "E",
    "shortId": "299E",
    "contest_number": "299",
    "problem_submissions": {
        "E": [
            3605814,
            3606062,
            3606807,
            3606793,
            3606966,
            3606745,
            3606438,
            3609554
        ],
        "C": [
            3604035,
            3603784,
            3603782,
            3603736,
            3604628,
            3604920,
            3603414,
            3603334,
            3603157,
            3603654,
            3603737,
            3604749,
            3603386,
            3603560,
            3603362,
            3603363,
            3603600,
            3602836
        ],
        "B": [
            3602158,
            3602245,
            3602145,
            3602426,
            3602977,
            3603984,
            3601603,
            3602069,
            3603193,
            3602012,
            3602461,
            3602235,
            3601937,
            3601885,
            3602054,
            3602242,
            3602249,
            3602180,
            3601769
        ],
        "A": [
            3601569,
            3601528,
            3601578,
            3601667,
            3601919,
            3601657,
            3601525,
            3601619,
            3601530,
            3601590,
            3601580,
            3601595,
            3601574,
            3601531,
            3601593,
            3601778,
            3601702,
            3603276
        ],
        "D": []
    },
    "name": "E. Cube Problem",
    "statement": "Yaroslav, Andrey and Roman love playing cubes. Sometimes they get\r\ntogether and play cubes for hours and hours! Today they got together\r\nagain and they are playing cubes. Yaroslav took unit cubes and composed\r\nthem into an cube, Andrey made a cube and Roman made a cube. After that\r\nthe game was finished and the guys left. But later, Vitaly entered the\r\nroom. He saw the cubes and wanted to make a cube as well. But what size\r\nshould the cube be? Of course it should be a large cube with the side of\r\nlength . Besides, Vitaly decided to decompose the cubes built by\r\nYaroslav, Andrey and Roman and compose his own large cube out of them.\r\nHowever, it turned out that the unit cubes he got from destroying the\r\nthree cubes just weren’t enough to make a large cube. We know that\r\nVitaly was short of exactly cubes. Vitaly got upset, demolished\r\neverything and left. As he was leaving, he met Petya and told him that\r\nthere had been three cubes in the room and that he needed another unit\r\ncubes to make his own large cube.Petya entered the room and saw the\r\nmessily scattered cubes. He wanted to make it neat and orderly again.\r\nBut he only knows that there had been three cubes, made of small unit\r\ncubes and that Vitaly needed more unit cubes to make a large one! Help\r\nPetya understand, how many ways of sizes , , are there to restore\r\nYaroslav’s, Andrey’s and Roman’s cubes.\r\n",
    "solutions": [
        "//include\n//------------------------------------------\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <queue>\n#include <climits>\nusing namespace std;\n\n//conversion\n//------------------------------------------\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\n\n//math\n//-------------------------------------------\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\n//typedef\n//------------------------------------------\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int, int> P;\ntypedef long long ll;\n\n//container util\n//------------------------------------------\n#define ALL(a)  (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define SZ(a) int((a).size())\n#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define SORT(c) sort((c).begin(),(c).end())\n#define fi first\n#define se second\n\n//repetition\n//------------------------------------------\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  FOR(i,0,n)\n#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\n//constant\n//--------------------------------------------\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\nconst int dx[] = {-1,1,0,0};\nconst int dy[] = {0,0,1,-1};\n\n//clear memory\n#define CLR(a) memset((a), 0 ,sizeof(a))\n\n//debug\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nll ans;\nll n;\nvector<ll> vec;\n\nvoid pr(){\n    for(ll i = 1; i * i <= n; ++i) if(n % i == 0) vec.pb(i);\n}\n\n\nint main(){\n    cin >> n;\n    if(n % 3){\n\tcout << \"0\\n\";\n\treturn 0;\n    }\n    n /= 3;\n    pr();\n    rep(i, vec.size()){\n\tll v = vec[i];\n\tll d = n / v;\n\tfor(int j = vec.size() - 1; j >= 0; --j){\n\t    if(d % vec[j]) continue;\n\t    ll p = d / vec[j];\n\t    if(v + vec[j] <= p) break;\n\t    if((v + vec[j] + p) % 2 == 0 && v + p > vec[j] && vec[j] + p > v){\n\t\tans++;\n\t    }\n\t}\n    }\n    /*\n    for(ll i = 1; i * i <= n; ++i){\n\tif(n % i) continue;\n\tll d = n / i;\n\tfor(ll j = 1; j * j <= n; ++j){\n\t    if(d % j) continue;\n\t    ll p = d / j;\n\t    if(i + j <= p) continue;\n\t    if((i + j + p) % 2 == 0){\n\t\tans++;\n\t    }\n\t}\n    }*/\n    cout << ans << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Cube Problem.json",
    "editorial_link": "https://codeforces.com/blog/entry/7516",
    "editorial": "After reading the problem statement one can understand that all we need\r\nis to calculate the number of positive integer solutions of equation: .\r\nThe key observation is: , after that simply calculate all divisors of\r\nand then first go over all , such that then go over all , such that and\r\nthen determine , such that . After that we need to solve the system and\r\nfind out how many solutions it adds.\r\n"
}