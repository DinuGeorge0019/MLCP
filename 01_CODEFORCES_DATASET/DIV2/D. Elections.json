{
    "link": "https://codeforces.com//contest/1978/problem/D",
    "problemId": "2700158",
    "problem_idx": "D",
    "shortId": "1978D",
    "contest_number": "1978",
    "problem_submissions": {
        "F": [
            266015924,
            266018575,
            266024125,
            266033740,
            266028083,
            266027710,
            266028585,
            266024095,
            266036440,
            266033576,
            266029665,
            266036412,
            266041436,
            266041844,
            266041967,
            266882750,
            266351108,
            266110975,
            266088026,
            266087920,
            266023524,
            266033401,
            266035217,
            266036624
        ],
        "E": [
            266000524,
            266001801,
            266009793,
            266004105,
            266012414,
            266016063,
            266008012,
            266015249,
            266006615,
            266014173,
            266017400,
            266020084,
            266012817,
            266011255,
            266015571,
            266032339,
            266012543,
            266023085,
            266019516
        ],
        "D": [
            265990967,
            265994660,
            265992821,
            265990827,
            266000702,
            266003653,
            265990714,
            266008157,
            265992101,
            265998993,
            266001887,
            266000172,
            266003373,
            265994305,
            266006281,
            266003246,
            266004799,
            266008989
        ],
        "C": [
            265985379,
            265985354,
            265985444,
            265986444,
            265986598,
            265993956,
            265998241,
            265999992,
            265986085,
            265988153,
            265994441,
            265990408,
            265984296,
            265987378,
            265999490,
            265992981,
            265996795,
            266000530
        ],
        "B": [
            265978142,
            265979065,
            265980009,
            265978941,
            265978322,
            265980965,
            265981356,
            265979492,
            265980232,
            265978357,
            265984882,
            265979643,
            265979302,
            265980231,
            265980858,
            265979553,
            265982486,
            265984445
        ],
        "A": [
            265974530,
            265975393,
            265974727,
            265975783,
            265974454,
            265975693,
            265975843,
            265974877,
            265974450,
            265974422,
            265984603,
            265974317,
            265974305,
            265975484,
            265974419,
            265975133,
            265977387,
            265984150
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130527",
    "editorial": "Notice that if candidate does not win initially (when no one is\r\nremoved), then for their victory, we must definitely remove all\r\ncandidates with numbers less than . Because if someone remains unremoved\r\nwith a number less than , then the votes for candidate will not\r\nincrease, and the maximum number of votes for someone else will not\r\ndecrease.Letâs find the winner of the election initially, for them the\r\nanswer is , for all other candidates we need to remove all people with\r\nnumbers less than .But sometimes these removals alone may not be enough,\r\nso we need to additionally remove several candidates so that their fansâ\r\nvotes go to us.Notice that then it is enough to remove only one\r\ncandidate with the maximum , then we will definitely win, so the answer\r\nfor candidate is either , or , or .So we end up with a solution which\r\nworks in .\r\n",
    "name": "D. Elections",
    "statement": "Elections are taking place in Berland. There are n candidates\r\nparticipating in the elections, numbered from 1 to n. The i-th candidate\r\nhas a_i fans who will vote for him. Additionally, there are c people who\r\nare undecided about their favorite candidate, let’s call them .\r\nUndecided people will vote for the candidate with the lowest number.The\r\ncandidate who receives the maximum number of votes wins the elections,\r\nand if multiple candidates receive the same maximum number of votes, the\r\ncandidate with the lowest number among them wins.You found these\r\nelections too boring and predictable, so you decided to exclude some\r\ncandidates from them. If you do not allow candidate number i to\r\nparticipate in the elections, all a_i of his fans will become undecided,\r\nand will vote for the candidate with the lowest number.You are curious\r\nto find, for each i from 1 to n, the minimum number of candidates that\r\nneed to be excluded from the elections for candidate number i to win the\r\nelections.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std;#define ll long long#define MP make_pairmt19937 rnd(time(0));const int MAXN=2e5+5;int n,c;ll a[MAXN],mx[MAXN];void solve(){\tcin>>n>>c;\tfor(int i=1;i<=n;i++) cin>>a[i];\ta[1]+=c;\tmx[n]=a[n];\tfor(int i=n-1;i>=1;i--) mx[i]=max(mx[i+1],a[i]);\tint win=1;\tfor(int i=1;i<=n;i++) if(a[i]>a[win]) win=i;\tfor(int i=1;i<=n;i++){\t\tif(i==win) cout<<0<<\" \\n\"[i==n];\t\telse if(a[i]>=mx[i]) cout<<i-1<<\" \\n\"[i==n];\t\telse cout<<i<<\" \\n\"[i==n];\t\ta[i+1]+=a[i];\t}\treturn;}int main(){\tios::sync_with_stdio(false);\t// freopen(\"Otomachi_Una.in\",\"r\",stdin);\t// freopen(\"Otomachi_Una.out\",\"w\",stdout);\tint _;cin>>_;\twhile(_--) solve();\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Elections.json",
    "hint": []
}