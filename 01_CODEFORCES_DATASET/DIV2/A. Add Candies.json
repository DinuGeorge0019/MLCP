{
    "link": "https://codeforces.com//contest/1447/problem/A",
    "problemId": "797262",
    "problem_idx": "A",
    "shortId": "1447A",
    "contest_number": "1447",
    "problem_submissions": {
        "F1": [
            98482074,
            98493054,
            99700638,
            99700288,
            98507770,
            98535197
        ],
        "E": [
            98471672,
            98487762,
            98462641,
            98467656,
            98474856,
            98475468,
            98466748,
            98471089,
            98474335,
            98473016,
            98472819,
            98475501,
            98476100,
            98473152,
            98480927,
            98480063,
            98483273,
            98472232,
            98484816
        ],
        "D": [
            98465943,
            98460161,
            98460032,
            98460272,
            98457345,
            98456392,
            98459724,
            98462491,
            98458555,
            98456607,
            98463156,
            98464783,
            98463338,
            98468636,
            98460203,
            98469147,
            98464911,
            98463572,
            98466107
        ],
        "C": [
            98461616,
            98454149,
            98456198,
            98455102,
            98451609,
            98450909,
            98449636,
            98454179,
            98454951,
            98450139,
            98456033,
            98456615,
            98452367,
            98462699,
            98462915,
            98451741,
            98459164,
            98457799,
            98456088
        ],
        "B": [
            98459424,
            98448840,
            98451090,
            98683205,
            98449593,
            98453136,
            98446655,
            98474948,
            98449629,
            98450999,
            98461566,
            98449722,
            98448167,
            106347351,
            98672986,
            98448001,
            98455222,
            98451056,
            98457032,
            98449675,
            98477349,
            98451673
        ],
        "A": [
            98453484,
            98445641,
            98444797,
            98683165,
            98445393,
            98446357,
            98444563,
            98446885,
            98447224,
            98445951,
            98458580,
            98444650,
            98444710,
            135934878,
            135934648,
            135925416,
            135925369,
            135925314,
            135925279,
            135925096,
            135925047,
            135924862,
            135924832,
            135924797,
            135924764,
            135924707,
            135924661,
            135924602,
            135924566,
            135924526,
            135924432,
            135924298,
            135924179,
            106344775,
            98672850,
            98445798,
            98445995,
            98446080,
            98454545,
            98452405,
            98445713,
            98447399
        ],
        "F2": [
            100134501,
            99704090
        ]
    },
    "name": "A. Add Candies",
    "statement": "There are n bags with candies, initially the i-th bag contains i\r\ncandies. You want all the bags to contain an equal amount of candies in\r\nthe end. To achieve this, you will: Choose m such that 1\r\nle m\r\nle 1000Perform m operations. In the j-th operation, you will pick one\r\nbag and add j candies to all bags apart from the chosen one.Your goal is\r\nto find a valid sequence of operations after which all the bags will\r\ncontain an equal amount of candies. It can be proved that for the given\r\nconstraints such a sequence always exists.You have to minimize m.If\r\nthere are several valid sequences, you can output .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nint main() {\n    int T;\n    scanf(\"%d\",&T);\n    while(T--) {\n        int N;\n        scanf(\"%d\",&N);\n        printf(\"%d\\n\",N);\n        for (int i=1;i<=N;i++) {\n            printf(\"%d%c\",i,\" \\n\"[i==N]);\n        }\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Add Candies.json",
    "editorial_link": "https://codeforces.com//blog/entry/82067",
    "editorial": "Tiny hintWeâre only interested in differences between the elements. Is\r\nthere another way to express the operation?\r\n",
    "hint": [
        "Hint The operation in the -th turn is equivalent to selecting one element and subtracting from it."
    ]
}