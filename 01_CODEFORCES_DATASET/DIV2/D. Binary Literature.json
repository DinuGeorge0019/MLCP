{"link": "https://codeforces.com//contest/1509/problem/D", "problemId": "958790", "problem_idx": "D", "shortId": "1509D", "contest_number": "1509", "problem_submissions": {"F": [113256937, 113452435, 113285395], "E": [113232874, 113219267, 113224061, 113223560, 113233730, 113226238, 113242617, 113234728, 113229028, 113234613, 113236691, 113233309, 113237999, 113236924, 113234998, 113244661, 113248199, 113294044, 113242554, 113241170, 113238407], "D": [113221122, 113205083, 113211524, 113212503, 113218682, 113218702, 113210079, 113222981, 113224859, 113213502, 113222656, 113222165, 113224508, 113227361, 113205851, 113214932, 113213501, 113214642, 113227110, 113229498], "C": [113210555, 113197246, 113200376, 113200962, 113204903, 113197040, 113198240, 113210183, 113210598, 113200328, 113196898, 113203900, 113204261, 113210665, 113209464, 113204447, 113203994, 113206401, 113202494, 113202048], "B": [113194717, 113193937, 113192191, 113190108, 113198761, 113232450, 113190578, 113195766, 113197868, 113220965, 113207035, 113194479, 113196536, 113224188, 113200860, 113198840, 113198891, 113192926, 113195317], "A": [113186426, 113184937, 113185796, 113185053, 113185023, 113184968, 113185012, 113185414, 113185256, 113188852, 113200720, 113185467, 113185688, 113212116, 113186288, 113188479, 113188850, 113184903, 113188945]}, "name": "D. Binary Literature", "statement": "A bitstring is a string that contains only the characters and .Koyomi\r\nKanou is working hard towards her dream of becoming a writer. To\r\npractice, she decided to participate in the . The writing prompt for the\r\ncontest consists of three bitstrings of length 2n. A valid novel for the\r\ncontest is a bitstring of length at most 3n that contains of the three\r\ngiven strings as subsequences.Koyomi has just received the three prompt\r\nstrings from the contest organizers. Help her write a valid novel for\r\nthe contest.A string a is a subsequence of a string b if a can be\r\nobtained from b by deletion of several (possibly, zero) characters.\r\n", "solutions": ["#include <ctime>\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx\")\n#pragma warning(disable : 4996)\n#include <algorithm>\n#include <cstdint>\n#include <iostream>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <functional>\n#include <utility>\n#include <numeric>\n#include <cmath>\n#include <set>\n#include <iterator>\n#include <vector>\n#include <queue>\n#include <math.h>\n#include <cassert>\n#include <unordered_map>\n\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\nusing ull = unsigned long long;\n\n#define int long long\n#define F first\n#define S second\n#define all(v) v.begin(), v.end()\n#define rall(v) v.rbegin(), v.rend()\n#define len(s) (int)(s).size()\n// #define endl '\\n'\n\n\ninline void accell() {\n    cin.tie(0);\n    cout.tie(0);\n    ios_base::sync_with_stdio(0);\n}\n\ntemplate<class T> ostream& operator<< (ostream& out, const pair<int, int>&X) {\n    out << X.first << ' ' << X.second << endl;\n    return out;\n}\n\ntemplate<class T> ostream& operator<< (ostream& out, const vector<T> &X) {\n    for (const auto& it : X)\n        out << it << ' ';\n    return out;\n}\ntemplate<class T> ostream& operator<< (ostream& out, const set<T> &X) {\n    for (const auto& it : X)\n        out << it << ' ';\n    return out;\n}\ntemplate<class T> void dbg(const T &X) {\n    cerr << \"DEBUG: \" << \": \";\n    cerr << X << endl;\n}\nconst int mod = 1e9 + 7;\nconst int N = 1e5 + 5;\n\n\nsigned main() {\n    accell();\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        string a[3];\n        for (int i = 0; i < 3; ++i)\n            cin >> a[i];\n        string x, y;\n        char mx = '0';\n        for (int i = 0; i < 3; ++i) {\n            for (int j = i + 1; j < 3; ++j) {\n                if (count(all(a[i]), '1') >= n && count(all(a[j]), '1') >= n) {\n                    x = a[i];\n                    y = a[j];\n                    mx = '1';\n                }\n                if (count(all(a[i]), '0') >= n && count(all(a[j]), '0') >= n) {\n                    x = a[i];\n                    y = a[j];\n                    mx = '0';\n                }\n            }\n        }\n        int l = 0;\n        int r = 0;\n        string ans = \"\";\n        while (l < 2 * n || r < 2 * n) {\n            if (l == 2 * n) {\n                ans += y[r];\n                ++r;\n                continue;\n            }\n            if (r == 2 * n) {\n                ans += x[l];\n                ++l;\n                continue;\n            }\n            if (x[l] == y[r]) {\n                ans += x[l];\n                ++l;\n                ++r;\n                continue;\n            }\n            if (x[l] == mx) {\n                ans += y[r];\n                ++r;\n                continue;\n            }\n            if (x[l] != mx) {\n                ans += x[l];\n                ++l;\n                continue;\n            }\n        }\n        while (ans.size() < 3 * n) ans += \"0\";\n        cout << ans << '\\n';\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "strings", "two pointers"], "dificulty": "1900", "interactive": false}