{
    "link": "https://codeforces.com//contest/1928/problem/C",
    "problemId": "2471775",
    "problem_idx": "C",
    "shortId": "1928C",
    "contest_number": "1928",
    "problem_submissions": {
        "F": [
            245849503,
            245993896
        ],
        "E": [
            245824555,
            245829499,
            245832784,
            245834485,
            245833902,
            245835921,
            245834370,
            245835347,
            245835219,
            245878440,
            245832600,
            245836538,
            245836332,
            245838032,
            245837628,
            245837711,
            245841209,
            245841102,
            245837376
        ],
        "D": [
            245815421,
            245816606,
            245823987,
            245822097,
            245824145,
            245822460,
            245824462,
            245825936,
            245821079,
            245821563,
            245828692,
            245822407,
            245826293,
            245826843,
            245826081,
            245825495,
            245820103,
            245826303,
            245826059
        ],
        "C": [
            245806250,
            245805820,
            245813391,
            245810753,
            245811757,
            245812438,
            245811596,
            245812971,
            245811199,
            245809118,
            245814024,
            245811562,
            245813546,
            245818219,
            245816512,
            245809891,
            245812032,
            245816988
        ],
        "B": [
            245796420,
            245797249,
            245798962,
            245800253,
            245800069,
            245802494,
            245798634,
            245800445,
            245804185,
            245802239,
            245797030,
            245802272,
            245799479,
            245799473,
            245800524,
            245801423,
            245801226,
            245803227
        ],
        "A": [
            245794304,
            245796660,
            245795167,
            245796391,
            245796735,
            245797061,
            245794273,
            245795174,
            245794810,
            245794175,
            245794231,
            245794283,
            245796446,
            245794415,
            245795633,
            245796529,
            245795529,
            245797383
        ]
    },
    "name": "C. Physical Education Lesson",
    "statement": "In a well-known school, a physical education lesson took place. As\r\nusual, everyone was lined up and asked to settle in \"the first k-th\"\r\nposition.As is known, settling in \"the first k-th\" position occurs as\r\nfollows: the first k people have numbers 1, 2, 3,\r\nldots, k, the next k - 2 people have numbers k - 1, k - 2,\r\nldots, 2, the next k people have numbers 1, 2, 3,\r\nldots, k, and so on. Thus, the settling repeats every 2k - 2 positions.\r\nExamples of settling are given in the \"Note\" section.The boy Vasya\r\nconstantly forgets everything. For example, he forgot the number k\r\ndescribed above. But he remembers the position he occupied in the line,\r\nas well as the number he received during the settling. Help Vasya\r\nunderstand how many natural numbers k fit under the given\r\nconstraints.Note that the settling exists if and only if k > 1. In\r\nparticular, this means that the settling for k = 1.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nint main() {\n        std::cin.tie(nullptr)->sync_with_stdio(false);\n\n        int t;\n        std::cin >> t;\n        while (t--) {\n                int n, x;\n                std::cin >> n >> x;\n                std::set<int> st;\n                for (int i = 1; i * i <= n - x; ++i) {\n                        if ((n - x) % i == 0) {\n                                st.insert((n - x) / i);\n                                st.insert(i);\n                        }\n                }\n                for (int i = 1; i * i <= n - 2 + x; ++i) {\n                        if ((n - 2 + x) % i == 0) {\n                                st.insert((n - 2 + x) / i);\n                                st.insert(i);\n                        }\n                }\n                st.erase(1);\n                std::set<int> qq;\n                for (auto i : st) if (i % 2 == 0 && x <= (i + 2) / 2) qq.insert((i + 2) / 2);\n                // for (auto i : qq) std::cout << i << ' ';\n                //         std::cout << std::endl;\n                std::cout << qq.size() << '\\n';\n        }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Physical Education Lesson.json",
    "editorial_link": "https://codeforces.com//blog/entry/125740",
    "editorial": "SolutionAll numbers repeat every positions. If the boy Vasya\u00e2\u0080\u0099s number is\r\ncalculated to be , then it can be at positions of the form , or , for\r\nsome non-negative . This is true for all , except for and \u00c2\u00a0\u00e2\u0080\u0094 for these\r\nvalues, there is only one option left.Let\u00e2\u0080\u0099s fix one of the options, the\r\nsecond one will be analogous. We need to find how many different values\r\nof satisfy the equation , for some non-negative . It is not difficult to\r\nsee that this holds if and only if is divisible by . Therefore, it is\r\nnecessary to find the number of\r\ntextbf{even} divisors of the number . To consider the second case, it is\r\nnecessary to proceed similarly with the number . The solution\u00e2\u0080\u0099s\r\ncomplexity:\r\n"
}