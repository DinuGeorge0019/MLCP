{
    "link": "https://codeforces.com//contest/1594/problem/E1",
    "problemId": "1135638",
    "problem_idx": "E1",
    "shortId": "1594E1",
    "contest_number": "1594",
    "problem_submissions": {
        "E2": [
            131201431,
            131189862,
            131190731,
            131204830,
            131335383,
            131226398,
            131198152,
            131201638,
            131204894,
            131232694,
            131217147,
            131214481,
            131205202,
            131197222,
            131203076,
            131208236,
            131224943,
            131226297,
            131228207,
            131205596
        ],
        "F": [
            131193546,
            131198168,
            131204819,
            131191276,
            131194027,
            131211385,
            131209381,
            131214118,
            131206895,
            131201547,
            131217018,
            131226069,
            131219283,
            131221051,
            131209964,
            131207271,
            131214277,
            131238575,
            131228401,
            131201592
        ],
        "E1": [
            131181296,
            131181310,
            131181914,
            131185896,
            131188245,
            131188013,
            131187848,
            131190323,
            131191597,
            131193172,
            131188008,
            131187198,
            131191256,
            131191508,
            131193161,
            131216105,
            131192871,
            131192806,
            131193863
        ],
        "C": [
            131178489,
            131175224,
            131175277,
            131176811,
            131175035,
            131178056,
            131178928,
            131176905,
            131179134,
            131182174,
            131176234,
            131176202,
            131182167,
            131177472,
            131233310,
            131183523,
            131183173,
            131182656,
            131183921,
            131177712
        ],
        "D": [
            131177404,
            131179044,
            131177912,
            131183480,
            131185907,
            131184631,
            131184408,
            131188052,
            131189056,
            131189293,
            131184453,
            131184011,
            131187702,
            131188002,
            131190262,
            131189525,
            131200165,
            131190411,
            131188282
        ],
        "A": [
            131171410,
            131170689,
            131170400,
            131171742,
            131170602,
            131170026,
            131170772,
            131172659,
            131172422,
            131172236,
            131170874,
            131170513,
            131172774,
            131170479,
            131173618,
            131170466,
            131175176,
            131176321,
            131170181
        ],
        "B": [
            131170592,
            131172208,
            131170486,
            131173477,
            131172222,
            131172615,
            131174348,
            131174291,
            131175520,
            131179615,
            131172910,
            131172727,
            131175758,
            131172405,
            131179739,
            131172566,
            131179352,
            131177990,
            131173135
        ]
    },
    "name": "E1. Rubik s Cube Coloring  easy version ",
    "statement": "Theofanis is starving, and he wants to eat his favorite food, sheftalia.\r\nHowever, he should first finish his homework. Can you help him with this\r\nproblem?You have a binary tree of 2^k - 1 nodes a binary tree where all\r\nvertices i from 1 to 2^{k - 1} - 1 have exactly two children: vertices\r\n2i and 2i + 1. Vertices from 2^{k - 1} to 2^k - 1 don\u2019t have any\r\nchildren. You want to color its vertices with the 6 Rubik\u2019s cube colors\r\n(White, Green, Red, Blue, Orange and Yellow).Let\u2019s call a coloring when\r\nall edges connect nodes with colors that are sides in the Rubik\u2019s cube.\r\nMore formally: a white node can be neighboring with white and yellow\r\nnodes; a yellow node can be neighboring with white and yellow nodes; a\r\ngreen node can be neighboring with green and blue nodes; a blue node can\r\nbe neighboring with green and blue nodes; a red node can be neighboring\r\nwith red and orange nodes; an orange node can be neighboring with red\r\nand orange nodes; You want to calculate the number of the good colorings\r\nof the binary tree. Two colorings are considered different if at least\r\none node is colored with a different color.The answer may be too large,\r\nso output the answer modulo 10^9+7.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\nint n,fla[400400]; \nchar s[300300]; \nconst int mod=1e9+7; \nint fpw(int x,int k,int p) {\n    int ret=1;\n    while (k) {\n        if (k&1) ret=1ll*ret*x%p; \n        x=1ll*x*x%p; k>>=1; \n    }\n    return ret; \n}\nvoid solve() {\n    int n;\n    cin>>n;\n    int q=fpw(2,n,mod-1);\n    q=(q-2)%(mod-1); q=(q+mod-1)%(mod-1);\n    cout<<1ll*fpw(4,q,mod)*6%mod; \n}\nint main() {\n    int T; T=1; \n    // scanf(\"%d\",&T);\n    while (T--) {\n        solve(); \n    }\n    return 0; \n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E1. Rubik s Cube Coloring  easy version .json",
    "editorial_link": "https://codeforces.com//blog/entry/95525",
    "editorial": "You have choices for the first node and for each other node. Thus, the\r\nanswer is .\r\n"
}