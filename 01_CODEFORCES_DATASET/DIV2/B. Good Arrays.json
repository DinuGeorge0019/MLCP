{
    "link": "https://codeforces.com//contest/1856/problem/B",
    "problemId": "2145353",
    "problem_idx": "B",
    "shortId": "1856B",
    "contest_number": "1856",
    "problem_submissions": {
        "E2": [
            217327108,
            217341724,
            217337731,
            217337437,
            217412216,
            217338400,
            217336393,
            217345459,
            217391033,
            217321012,
            217492472,
            217488570,
            217325278,
            217439292,
            217437989,
            217363475,
            217446369,
            217445127,
            217406790
        ],
        "D": [
            217299783,
            217294842,
            217318244,
            217319013,
            217306383,
            217302272,
            217316304,
            217332681,
            217344634,
            217306374,
            217314009,
            217314765,
            217312837,
            217302425,
            217303810,
            217314415,
            217312870,
            217318456,
            217300443,
            217400494,
            217316669
        ],
        "E1": [
            217289515,
            217306137,
            217300615,
            217308752,
            217314014,
            217319703,
            217297854,
            217321288,
            217321307,
            217290094,
            217290570,
            217296889,
            217296429,
            217312238,
            217311348,
            217286339,
            217297816,
            217298120,
            217312665,
            217400516,
            217300470
        ],
        "C": [
            217279950,
            217281231,
            217291934,
            217287003,
            217296034,
            217283292,
            217292390,
            217290232,
            217308894,
            217275596,
            217275048,
            217281202,
            217279491,
            217289317,
            217288630,
            217298170,
            217285184,
            217287913,
            217284586,
            217400474,
            217290893
        ],
        "B": [
            217269320,
            217271397,
            217269501,
            217272164,
            217281399,
            217274759,
            217266730,
            217267264,
            217269590,
            217284481,
            217268556,
            217268444,
            217267764,
            217270460,
            217268264,
            217272318,
            217272448,
            217269161,
            217271865,
            217400507,
            217272774
        ],
        "A": [
            217264730,
            217266241,
            217264910,
            217266955,
            217265330,
            217267424,
            217264736,
            217264718,
            217265900,
            217267758,
            217264795,
            217265478,
            217264842,
            217265458,
            217264741,
            217264735,
            217265053,
            217264661,
            217265267,
            217400456,
            217266136
        ]
    },
    "name": "B. Good Arrays",
    "statement": "You are given an array of integers a of length n.Let’s call an array of\r\nintegers b of length n if: a_i\r\nneq b_i for i from 1 to n, a_1 + a_2 +\r\nldots + a_n = b_1 + b_2 +\r\nldots + b_n. Does a good array exist?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define ld long double\n#define ll long long int\n#define st first\n#define nd second\n#define pb push_back\n#define pii pair<int,int>\n#define mp make_pair\n\nusing namespace std;\n\n\nconst int N = 1e5 + 5;\nll a[N];\nll b[N];\nint n;\n\nvoid solve(){\n    cin >> n;\n    ll s = 0;\n    ll ms = 0;\n    bool can = false;\n    for(int i=1;i<=n;i++){\n        cin >> a[i];\n        if(a[i] == 1) b[i] = 2;\n        else b[i] = 1;\n        s += a[i];\n        ms += b[i];\n        if(b[i] == 2) can = true;\n    }\n    if(n == 1){\n        cout << \"NO\" << \"\\n\";\n        return;\n    }\n    if(ms <= s){\n        if(ms <= s - 2 || can || ms == s){\n            cout << \"YES\" << \"\\n\";\n            return;\n        }\n    }\n    cout << \"NO\" << \"\\n\";\n}\n\nint main(){\n    ios_base::sync_with_stdio(0); cin.tie(0);\n\n    int tt = 1;\n    cin >> tt;\n    while(tt--) solve();\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Good Arrays.json",
    "editorial_link": "https://codeforces.com//blog/entry/119058",
    "editorial": "Suppose didnât have to consist of only positive integers. Then, one\r\nsimple strategy would be to to decrease each of by and increase by .\r\nExcept for , when it is impossible to get a good array.When has to\r\nconsist of only positive integers, we canât decrease elements that are\r\nequal to . But to make , we also have to increase them by at least . Let\r\nbe the number of elements in that are equal to . To not change the sum\r\nof the array, we have to decrease the other elements by at least . For\r\nthis to be possible, their sum must be equal to at least , since each of\r\nthe elements must remain positive. So, has to be equal to at least .So,\r\nif , a good array doesnât exist. If , a good array also doesnât\r\nexist.Now suppose and . We will prove that if this is the case, a good\r\narray must exist.If , we increase all by and decrease elements that are\r\nby and apply the simple strategy described above for the other elements\r\n, so in this case, a good array exists.If , we increase all by and\r\ndecrease each element by at least , so holds for all , so in this case,\r\na good array also exists.Complexity:\r\n",
    "hint": [
        "Hint 1 Consider the case separately.",
        "Hint 2 Count the number of elements equal to .",
        "Hint 3 Find the sum of the array.",
        "Hint 4 When there are a lot of elements equal to and the sum is not very big, the answer is no."
    ]
}