{
    "link": "https://codeforces.com//contest/1143/problem/D",
    "problemId": "322169",
    "problem_idx": "D",
    "shortId": "1143D",
    "contest_number": "1143",
    "problem_submissions": {
        "F": [
            52053740,
            52050934,
            52050482,
            52062719,
            52055575,
            52054357,
            52076504
        ],
        "E": [
            52046060,
            52048486,
            52043358,
            52058930,
            52058895,
            52049207,
            55234591,
            52050524,
            52048224,
            52050760,
            52051220,
            52053112,
            52050926,
            52052963,
            52050945,
            52050663,
            52053672,
            52036984,
            52045903,
            52047555,
            52045657
        ],
        "D": [
            52040246,
            52046189,
            52043627,
            52047099,
            52042762,
            52041339,
            52043500,
            52043687,
            52042595,
            52044385,
            52045161,
            52053326,
            52047450,
            52055219,
            52044406,
            52056142
        ],
        "C": [
            52036464,
            52037535,
            52035451,
            52038786,
            52041257,
            52036692,
            52038846,
            52038521,
            52038180,
            52037738,
            52037545,
            52038495,
            52044091,
            52038551,
            52042781,
            52055743,
            52055719,
            52040142,
            52039670,
            52037936,
            52038436,
            52040034
        ],
        "B": [
            52033342,
            52033709,
            52032791,
            52033130,
            52035639,
            52033900,
            52034782,
            52034155,
            52034558,
            52034491,
            52039225,
            52034867,
            52038126,
            52034618,
            52038019,
            52033785,
            52033506,
            52033683,
            52034719,
            52033623
        ],
        "A": [
            52030926,
            52030199,
            52030454,
            52030456,
            52032409,
            52030129,
            52032198,
            52031102,
            52031072,
            52030448,
            52032154,
            52030694,
            52034881,
            52030728,
            52032731,
            52030521,
            52030424,
            52030417,
            52030138,
            52030163
        ]
    },
    "name": "D. The Beatles",
    "statement": "Recently a Golden Circle of Beetlovers was found in Byteland. It is a\r\ncircle route going through n\r\ncdot k cities. The cities are numerated from 1 to n\r\ncdot k, the distance between the neighboring cities is exactly 1\r\nkm.Sergey does not like beetles, he loves burgers. Fortunately for him,\r\nthere are n fast food restaurants on the circle, they are located in the\r\n1-st, the (k + 1)-st, the (2k + 1)-st, and so on, the ((n-1)k + 1)-st\r\ncities, i.e. the distance between the neighboring cities with fast food\r\nrestaurants is k km.Sergey began his journey at some city s and traveled\r\nalong the circle, making stops at cities each l km (l > 0), until he\r\nstopped in s once again. Sergey then forgot numbers s and l, but he\r\nremembers that the distance from the city s to the nearest fast food\r\nrestaurant was a km, and the distance from the city he stopped at after\r\ntraveling the first l km from s to the nearest fast food restaurant was\r\nb km. Sergey always traveled in the same direction along the circle, but\r\nwhen he calculated distances to the restaurants, he considered both\r\ndirections.Now Sergey is interested in two integers. The first integer x\r\nis the minimum number of stops (excluding the first) Sergey could have\r\ndone before returning to s. The second integer y is the maximum number\r\nof stops (excluding the first) Sergey could have done before returning\r\nto s.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nll n,k,a,b,mx,mn;\nll gcd(ll a,ll b){\n\tif (b==0)return a;\n\treturn gcd(b,a%b);\n}\nll Abs(ll x){return x<0?-x:x;}\nvoid calc(ll a,ll b){\n\tfor (;b<n*k;b+=k){\n\t\tll dis=Abs(a-b);\n\t\tif (dis==0)continue;\n\t\tll st=n*k/gcd(n*k,dis);\n\t\tmx=max(mx,st);\n\t\tmn=min(mn,st);\n\t}\t\n}\nint main(){\n\tcin>>n>>k>>a>>b;\n\tmx=1,mn=n*k;\n\tif (a==b)mn=1;\n\tcalc(a,b);\n\tcalc(k-a,b);\n\tcalc(a,k-b);\n\tcalc(k-a,k-b);\n\tcout<<mn<<' '<<mx<<endl;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. The Beatles.json",
    "editorial_link": "https://codeforces.com//blog/entry/66301",
    "editorial": "Let's assume that we know the length of the jump, and it is equal to l\n. Then, in order to be back at the starting point, Sergey will need to make exactly n?k/gcd(n?k,l)\n moves, where gcd\n is the greatest common divider.\n\nLet l=kx+c\n, where c\n and x\n are non-negative integers. So, if we know a\n and b\n, than c\n can only take 4\n values: ((a+b)%c,(a?b)%c,(b?a)%c,(?a?b)%c)\n, where %c\n means modulo c\n. It is clear that only x<n\n can be considered. Then we iterate over all the 4n\n variants of the pair (x,c)\n, and for each we find the number of moves to the starting point. The minimum and maximum of the resulting numbers will be the answer."
}