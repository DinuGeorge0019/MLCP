{"link": "https://codeforces.com//contest/84/problem/B", "problemId": "438", "problem_idx": "B", "shortId": "84B", "contest_number": "84", "problem_submissions": {"E": [452627, 449024, 452609], "D": [450400, 451453, 450260, 451049, 453042, 452087, 451115, 451601, 451359, 451092, 451134, 451165, 450005, 451055], "C": [447706, 448885, 448694, 448914, 451302, 448275, 448059, 448906, 449306, 449387, 449576, 449309, 449347, 449955, 451170, 448806], "B": [446645, 447856, 447405, 447553, 453022, 447491, 447046, 447993, 447247, 447674, 447584, 447304, 447460, 447841, 447050, 447119], "A": [446385, 57312850, 57312533, 44578621, 6030624, 2567513, 2498001, 2426190, 2072252, 1715370, 1214658, 447192, 447016, 446945, 446434, 446701, 446518, 447430, 446507, 446885, 446463, 446570, 446769, 447019, 446386, 446513]}, "name": "B. Magical Array", "statement": "Valera absolutely accidentally got a piece of ancient parchment on which\r\nan array of numbers was written. He immediately thought that the numbers\r\nin this array were not random. As a result of extensive research Valera\r\nworked out a wonderful property that a magical array should have: an\r\narray is defined as magic if its .He decided to share this outstanding\r\ndiscovery with you, but he asks you for help in return. Despite the\r\ntremendous intelligence and wit, Valera counts very badly and so you\r\nwill have to complete his work. All you have to do is count the number\r\nof magical subarrays of the original array of numbers, written on the\r\nparchment. Subarray is defined as .\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <ctime>\n#include <iomanip>\n#include <cstdlib>\nusing namespace std;\n\nlong long last, now, res, n, c;\nint main()\n{\n    cin >> n;\n    last = -1000000001;\n    for(int i = 0; i < n; i++)\n    {\n        cin >> now;\n        if(now != last)\n        {\n            c = 1;\n        }else   c++;\n        res += c;\n        last = now;\n    }\n    cout << res;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "implementation"], "dificulty": "1300", "interactive": false}