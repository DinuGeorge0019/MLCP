{
    "link": "https://codeforces.com//contest/1325/problem/D",
    "problemId": "561456",
    "problem_idx": "D",
    "shortId": "1325D",
    "contest_number": "1325",
    "problem_submissions": {
        "E": [
            73269401,
            73332152,
            73299753,
            73395378,
            73360091,
            73360008
        ],
        "F": [
            73248978,
            73251409,
            73254927,
            73256076,
            73255610,
            73257423,
            73262364,
            73259512,
            73356282,
            73356144,
            73263300,
            73263158,
            73261258,
            73265350,
            73262400,
            73265312,
            73263991,
            73268889,
            73270937
        ],
        "D": [
            73244100,
            73243574,
            73240330,
            73242761,
            73241884,
            73241409,
            73246071,
            73252259,
            73251009,
            73248948,
            73245139,
            73243278,
            73250903,
            73243449,
            73248645,
            73246841,
            73242067
        ],
        "C": [
            73236055,
            73236410,
            73233326,
            73229143,
            73233805,
            73246561,
            73234913,
            73236946,
            73236155,
            73241716,
            73237967,
            73239330,
            73240506,
            73236929,
            73231917,
            73233819,
            73237479
        ],
        "B": [
            73227966,
            73225855,
            73227806,
            73223000,
            73224291,
            73227411,
            73226586,
            73225151,
            73229505,
            73230477,
            73228144,
            73229165,
            73230081,
            73251563,
            73223597,
            73227071,
            73225379
        ],
        "A": [
            73222798,
            73222976,
            73224188,
            73222275,
            73222466,
            73223833,
            73222584,
            73222533,
            73226908,
            73225662,
            73224126,
            73224793,
            73228118,
            73227876,
            73225812,
            73222400,
            73222615
        ]
    },
    "name": "D. Ehab the Xorcist",
    "statement": "Given 2 integers u and v, find the shortest array such that bitwise-xor\r\nof its elements is u, and the sum of its elements is v.\r\n",
    "solutions": [
        "///BE NAME KHODA\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define S second\n#define F first\n#define int long long\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int maxn = 3e5+10;\nconst int mod = 1e9+7;\nconst ll inf = 1e18+10;\n\nll n, m, x, s;\nll cnt[70];\n\nsigned main()\n{\n    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\n    cin>> x >> s;\n    if(x % 2 != s % 2) return cout<< -1, 0;\n    if(x > s) return cout<< -1, 0;\n\n    if(x == 0 && s == 0)\n        return cout<< 0, 0;\n\n    int X = x, S = s;\n    if(x == s)\n    {\n        cout<< 1 <<\"\\n\"<< x;\n        return 0;\n    }\n\n    /// 2\n    for(int i = 0; i < 60; i++)\n        if(x&(1ll<<i))\n            s -= (1ll<<i);\n        else\n          cnt[i+1] = 1;\n\n    bool T = 1;\n    for(int i = 0; i < 60; i++)\n        if((s & (1ll<<i)) && !cnt[i])\n            T = 0;\n\n    if(T)\n    {\n        cout<< 2 <<\"\\n\";\n        int a = x, b = 0;\n        for(int i = 0; i < 60; i++)\n            if(s & (1ll<<i))\n            {\n                a += (1ll<<(i-1));\n                b += (1ll<<(i-1));\n            }\n        cout<< a <<\" \"<< b;\n        return 0;\n    }\n\n    x = X, s = S;\n    int a = x, b = 0, c = 0;\n    s -= x;\n    for(int i = 0; i < 60; i++)\n        if(s & (1ll<<i))\n        {\n            b += (1ll<<(i-1));\n            c += (1ll<<(i-1));\n        }\n    cout<< 3 <<\"\\n\"<< a <<\" \"<< b <<\" \"<< c;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Ehab the Xorcist.json",
    "editorial_link": "https://codeforces.com//blog/entry/74235",
    "editorial": "First, let\u00e2\u0080\u0099s look at some special cases. If or and have different\r\nparities, there\u00e2\u0080\u0099s no array. If , the answer is an empty array. If , the\r\nanswer is . Now, the length is at least 2. Let . The array satisfies the\r\nconditions, so the length is at most 3. We just need to figure out\r\nwhether there\u00e2\u0080\u0099s a pair of number and . Such that and . Notice that &, so\r\nwe know that & (surprise surprise.) The benefit of getting rid of and\r\nlooking at & instead is that we can look at and bit by bit. If has a one\r\nin some bit, and must both have ones, so must have a 0. If has a zero,\r\nthere are absolutely no limitation on . So, if there\u00e2\u0080\u0099s a bit where both\r\nand have a one, that is to say if &, you can\u00e2\u0080\u0099t find such and , and the\r\nlength will be 3. Otherwise, & which means , so the array works. Can you\r\nsee how this array was constructed? We took which more obviously works\r\nand merged the first 2 elements, benefiting from the fact that &. Code\r\nlink: https://pastebin.com/7XuMk1v8 First AC: qdai0815\r\n"
}