{"link": "https://codeforces.com//contest/1255/problem/E1", "problemId": "475557", "problem_idx": "E1", "shortId": "1255E1", "contest_number": "1255", "problem_submissions": {"E1": [65376345, 65362349, 65379019, 65379231, 65381365, 65366418, 65380019, 65372166, 65377390, 65381751, 65383634, 65381490, 65380093, 65389225, 65369401, 65379688, 65378584, 65380932, 65379653, 65385144], "E2": [65376264, 65385821, 65381572, 65386523, 65384540, 65381279, 65389375, 65384984, 65389091, 65691059, 65704614, 65451948], "F": [65375779, 65385211, 65388490, 65389131, 65387550, 65391223, 65696815, 65727810, 65496537], "D": [65370945, 65376492, 65370356, 65373732, 65376315, 65359238, 65370229, 65377454, 65373608, 65377110, 65372789, 65372691, 65369056, 65377955, 65368879, 65372201, 65375025, 65360545, 65373196], "C": [65364209, 65367561, 65365185, 65370379, 65369180, 65375282, 65364624, 65368566, 65367696, 65368791, 65366250, 65385810, 65363445, 65364504, 65364341, 65366891, 65364298, 65372266, 65367337], "B": [65357074, 65365610, 65356532, 65359436, 65360660, 65362219, 65358616, 65357121, 65358490, 65360944, 65360793, 65359110, 65357689, 65359084, 65357670, 65361106, 65357886, 65367149, 65358881], "A": [65352414, 65792669, 65360046, 65351993, 65354820, 65353062, 65354583, 65352997, 65351826, 65353043, 65356292, 65352153, 65352035, 65353191, 65353105, 65351942, 65353378, 65352978, 65362432, 65354867]}, "name": "E1. Send Boxes to Alice  Easy Version ", "statement": "Christmas is coming, and our protagonist, Bob, is preparing a\r\nspectacular present for his long-time best friend Alice. This year, he\r\ndecides to prepare n boxes of chocolate, numbered from 1 to n.\r\nInitially, the i-th box contains a_i chocolate pieces.Since Bob is a\r\ntypical nice guy, he will not send Alice n empty boxes. In other words,\r\n. Since Alice dislikes coprime sets, she will be happy only if there\r\nexists some integer k > 1 such that the number of pieces in each box is\r\ndivisible by k. Note that Alice won\u2019t mind if there exists some empty\r\nboxes. Charlie, Alice\u2019s boyfriend, also is Bob\u2019s second best friend, so\r\nhe decides to help Bob by rearranging the chocolate pieces. In one\r\nsecond, Charlie can pick up a piece in box i and put it into either box\r\ni-1 or box i+1 (if such boxes exist). Of course, he wants to help his\r\nfriend as quickly as possible. Therefore, he asks you to calculate the\r\nminimum number of seconds he would need to make Alice happy.\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define ii pair<int, int>\n#define lli long long int\n#define ll pair<lli, lli>\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n\nusing namespace std;\n\nlli n, inf = 1000000000000000000, pref[1000005], memo[1000005][5], prima;\n\nlli dp(lli kotak, lli status) {\n\tlli now = (pref[kotak] - pref[kotak - 1]), last = (pref[kotak - 1] % prima), ret = inf;\n\tif (kotak == n)\n\t\treturn 0;\n\tif (memo[kotak][status] != -1)\n\t\treturn memo[kotak][status];\n\tif (status == 1)\n\t\tnow += last;\n\telse if (status == 2)\n\t\tnow -= (prima - last);\n\tif (now % prima == 0)\n\t\tret = dp(kotak + 1, 0);\n\telse if (now < 0)\n\t\tret = dp(kotak + 1, 2) - now;\n\telse {\n\t\tnow %= prima;\n\t\tret = dp(kotak + 1, 1) + now;\n\t\tret = min(ret, dp(kotak + 1, 2) + (prima - now));\n\t}\n\tmemo[kotak][status] = ret;\n\treturn ret;\n}\n\nint main() {\n\tlli cnt = 0, sum = 0, akar, faktor[15], ans;\n\tscanf(\"%lld\", &n);\n\tpref[0] = 0;\n\tfor (lli i = 1; i <= n; i++) {\n\t\tscanf(\"%lld\", &pref[i]);\n\t\tsum += pref[i];\n\t\tpref[i] += pref[i - 1];\n\t}\n\tif (sum == 1) {\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\takar = sqrt(sum);\n\tfor (lli i = 2; i <= akar; i++)\n\t\tif (sum % i == 0) {\n\t\t\tfaktor[cnt++] = i;\n\t\t\twhile (sum % i == 0)\n\t\t\t\tsum /= i;\n\t\t\takar = sqrt(sum);\n\t\t}\n\tif (sum > 1)\n\t\tfaktor[cnt++] = sum;\n\tans = inf;\n\tfor (lli i = 0; i < cnt; i++) {\n\t\tprima = faktor[i];\n\t\tmemset(memo, -1, sizeof memo);\n\t\tans = min(ans, dp(1, 0));\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["greedy", "math", "number theory"], "dificulty": "1800", "interactive": false}