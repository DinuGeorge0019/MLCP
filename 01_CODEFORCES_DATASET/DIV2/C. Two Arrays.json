{"link": "https://codeforces.com//contest/1589/problem/C", "problemId": "1186198", "problem_idx": "C", "shortId": "1589C", "contest_number": "1589", "problem_submissions": {"F": [135392401, 135383659, 135613163, 136073664, 136061292], "A": [135375124, 135343090, 135343827, 135343075, 135344151, 135347290, 135347165, 135342903, 135346750, 135343453, 135344492, 135344059, 135383305, 135346270, 135343510, 135389951, 135347174, 135344135, 135344697, 135345131], "B": [135373165, 135350018, 135350022, 135361256, 135347559, 135355629, 135351622, 135348865, 135351792, 135350073, 135347389, 135345202, 135388137, 135356455, 135347142, 135353182, 135350595, 135348956, 135346782], "E": [135366850, 135380426, 135378894, 135377065, 135387081, 135379118, 135387473, 135388354, 135387609, 135390750, 135374822, 135380067, 135366481, 135412322, 135387828, 135373661, 135373029, 135375843], "D": [135353894, 135387455, 135356345, 135358960, 135370454, 135364511, 135368677, 135363277, 135359493, 135367483, 135392033, 135389301, 135377180, 135364477, 135360697, 135371907, 135375411, 135482600], "C": [135344934, 135351797, 135347327, 135352110, 135350833, 135347466, 135354024, 135346228, 135353727, 135346489, 135352889, 135347193, 135347207, 135347187, 135349483, 135346265, 135355770, 135353671, 135357934, 135349393]}, "name": "C. Two Arrays", "statement": "You are given two arrays of integers a_1, a_2,\r\nldots, a_n and b_1, b_2,\r\nldots, b_n.Let\u2019s define a transformation of the array a: Choose any\r\nnon-negative integer k such that 0\r\nle k\r\nle n. Choose k distinct array indices 1\r\nle i_1 < i_2 <\r\nldots < i_k\r\nle n. Add 1 to each of a_{i_1}, a_{i_2},\r\nldots, a_{i_k}, all other elements of array a remain unchanged. Permute\r\nthe elements of array a in any order. Is it possible to perform some\r\ntransformation of the array a , so that the resulting array is equal to\r\nb?\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n\tint x=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0') {if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=105;\nint p[N],a[N],b[N],n,vis[N];\nbool dfs(int u) {\n\tif(vis[u])return 0;\n\tvis[u]=1;\n\tfor(int i=1;i<=n;++i)\n\t\tif((b[i]==a[u]||b[i]==a[u]+1)&&(!p[i]||dfs(p[i]))) {\n\t\t\tp[i]=u;\n\t\t\treturn 1;\n\t\t}\n\treturn 0;\n}\nvoid work() {\n\tn=read();\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tfor(int i=1;i<=n;++i)b[i]=read();\n\tint res=0;\n\tmemset(p,0,sizeof(p));\n\tfor(int i=1;i<=n;++i) {\n\t\tmemset(vis,0,sizeof(vis));\n\t\tres+=dfs(i);\n\t}\n\tif(res==n)printf(\"YES\\n\");\n\telse printf(\"NO\\n\");\n}\nint main() {\n\tint T=read();\n\twhile(T--)work();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["greedy", "math", "sortings"], "dificulty": "900", "interactive": false}