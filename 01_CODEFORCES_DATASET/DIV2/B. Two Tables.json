{
    "link": "https://codeforces.com//contest/228/problem/B",
    "problemId": "1856",
    "problem_idx": "B",
    "shortId": "228B",
    "contest_number": "228",
    "problem_submissions": {
        "D": [
            2261902,
            2260756,
            2262084,
            2263037,
            2262295,
            2262513,
            2267122
        ],
        "E": [
            2260963,
            2258057,
            2257897,
            2258974,
            2259887,
            2261215,
            2260752,
            2260117,
            2260870,
            2262062,
            2262069,
            2259543,
            2261908,
            2259655,
            2259999,
            2259991,
            2260321,
            2260196,
            2260295
        ],
        "C": [
            2260163,
            2263333,
            2260878,
            2261707,
            2259668,
            2261949,
            2262461,
            2260423,
            2262627,
            2261069,
            2261515,
            2272185
        ],
        "B": [
            2257986,
            2258545,
            2258475,
            2257641,
            2258627,
            2257501,
            2258104,
            2259075,
            2257831,
            2258346,
            2258655,
            2258262,
            2258816,
            2257667,
            2258656,
            2258407,
            2259171,
            2258869
        ],
        "A": [
            2256975,
            2258646,
            2256552,
            2256842,
            2256376,
            2256560,
            2257820,
            2256816,
            2256677,
            2257146,
            2256648,
            2257004,
            2256374,
            2256749,
            2256802,
            2257128,
            2257247,
            2257318
        ]
    },
    "name": "B. Two Tables",
    "statement": "You’ve got two rectangular tables with sizes and cells. The tables\r\nconsist of zeroes and ones. We will consider the rows and columns of\r\nboth tables indexed starting from 1. Then we will define the element of\r\nthe first table, located at the intersection of the -th row and the -th\r\ncolumn, as ; we will define the element of the second table, located at\r\nthe intersection of the -th row and the -th column, as . We will call\r\nthe pair of integers a of the second table relative to the first one.\r\nWe’ll call the of the shift value:where the variables take only such\r\nvalues, in which the expression makes sense. More formally, inequalities\r\nmust hold. If there are no values of variables , that satisfy the given\r\ninequalities, the value of the sum is considered equal to 0. Your task\r\nis to find the shift with the maximum overlap factor among all possible\r\nshifts.\r\n",
    "solutions": [
        "// AntiFate\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <string>\n#include <set>\n#include <map>\nusing namespace std;\ntypedef long long ll;\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define fab(i,a,b) for(int i=(a);i<=(b);++i)\n#define fba(i,b,a) for(int i=(b);i>=(a);--i)\n#define clr(a) memset(a,0,sizeof(a))\n#define fec(i,a) for(__typeof((a).end())i=(a).begin();i!=(a).end();++i)\n#define fpc(i,j,v) for(int i=a[v],j;j=to[i],i;i=nx[i])\n\n#define N 55\n\nchar a[N][N], b[N][N];\nint n, m, p, q;\n\nint main()\n{\n    scanf(\"%d%d\\n\", &n, &m);\n    rep(i, n)\n        gets(a[i+1]+1);\n    \n    scanf(\"%d%d\\n\", &p, &q);\n    rep(i, p)\n        gets(b[i+1]+1);\n    \n    int xx = 0, yy = 0, ans = 0;\n    fab(x,-(n+p), n+p)\n        fab(y,-(m+q), m+q)\n        {\n            int ret = 0;\n        fab(i,1,n) if (x+i>=1 && x+i<=p)\n        fab(j,1,m) if (y+j>=1 && y+j<=q)\n        if(a[i][j]==b[x+i][y+j] && a[i][j]=='1')\n            ++ret;\n        if(ret > ans)\n        {\n            ans = ret;\n            xx=x;\n            yy=y;\n        }\n        }\n        \n    cout << xx << \" \" << yy << endl;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Two Tables.json",
    "editorial_link": "https://codeforces.com//blog/entry/5404",
    "editorial": "In this problem you should carefully consider every shift , count the\r\nanswer and find the maximum value. The complexity of solution is .\r\n",
    "hint": []
}