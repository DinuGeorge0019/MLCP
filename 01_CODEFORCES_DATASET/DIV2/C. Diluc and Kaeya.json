{"link": "https://codeforces.com//contest/1536/problem/C", "problemId": "1007471", "problem_idx": "C", "shortId": "1536C", "contest_number": "1536", "problem_submissions": {"E": [118631124, 118614939, 118616967, 118624386, 118627719, 118635620, 118636863, 118621534, 118623141, 118619496, 118630371, 118626916, 118634340, 118635235, 118626014, 118625912, 118631232, 118724771, 118637508, 118632134, 118634841], "F": [118625791, 118638866, 118613437, 118637695, 118644936, 118650446, 118647459, 118663966, 118711352, 118653882, 118654218, 118882357], "C": [118608971, 118600883, 118628209, 118608554, 118608052, 118619465, 118622898, 118607847, 118602584, 118598176, 118609484, 118609006, 118618271, 118606277, 118606392, 118620701, 118612692, 118724743, 118612675, 118612583, 118612872], "D": [118608031, 118607288, 118623947, 118617513, 118619773, 118632284, 118632215, 118614859, 118617552, 118601113, 118616452, 118622152, 118614133, 118620886, 118617343, 118616486, 118624441, 118724752, 118620219, 118627264, 118625159], "B": [118602956, 118599083, 118634218, 118612957, 118602526, 118613641, 118606813, 118602130, 118599340, 118630482, 118605942, 118604400, 118601413, 118601634, 118600081, 118601184, 118602824, 118724734, 118602945, 118605239, 118604772], "A": [118598232, 118597991, 118635775, 118598107, 118598184, 118601999, 118598235, 118599189, 118598143, 118622748, 118598451, 118598128, 118598114, 118598284, 118598026, 118597979, 118598563, 118724715, 118598620, 118599178, 118598920]}, "name": "C. Diluc and Kaeya", "statement": "This time, the brothers are dealing with a strange piece of wood marked\r\nwith their names. This plank of wood can be represented as a string of n\r\ncharacters. Each character is either a or a . You want to make some\r\nnumber of cuts (possibly 0) on this string, partitioning it into several\r\ncontiguous pieces, each with length at least 1. Both brothers act with\r\ndignity, so they want to split the wood as evenly as possible. They want\r\nto know the maximum number of pieces you can split the wood into such\r\nthat the ratios of the number of occurrences of to the number of\r\noccurrences of in each chunk are the same.Kaeya, the curious thinker, is\r\ninterested in the solution for multiple scenarios. He wants to know the\r\nanswer for every of the given string. Help him to solve this problem!For\r\na string we define a ratio as a:b where appears in it a times, and\r\nappears b times. Note that a or b can equal 0, but not both. Ratios a:b\r\nand c:d are considered equal if and only if a\r\ncdot d = b\r\ncdot c. For example, for the string the ratio will be 3:0, for 2:1, for\r\n1:2, and for 2:4. Note that the ratios of the latter two strings are\r\nequal to each other, but they are not equal to the ratios of the first\r\ntwo strings.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define P pair<int,int>\nusing namespace std;\nconst int N=5e5+5;\nint n,c1,c2,lp;\nchar s[N];\nmap<P,int> mp;\nint read()\n{\n\tint res=0,fl=0; char a=getchar();\n\twhile(a<'0'||a>'9') fl|=a=='-',a=getchar();\n\twhile(a>='0'&&a<='9') res=res*10+a-'0',a=getchar();\n\treturn fl? -res:res;\n}\nint gcd(int x,int y) {return y? gcd(y,x%y):x;}\nint main()\n{\n\tint i,j,li,tt=read();\n\twhile(tt--)\n\t{\n\t\tmp.clear(),scanf(\"%d%s\",&n,s+1);\n\t\tfor(i=1,c1=c2=0;i<=n;i++)\n\t\t{\n\t\t\ts[i]=='D'? c1++:c2++;\n\t\t\tlp=gcd(c1,c2),j=c1/lp,li=c2/lp;\n\t\t\tcout<<(++mp[P(j,li)])<<' ';\n\t\t}\n\t\tcout<<'\\n';\n\t}\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dp", "hashing", "number theory"], "dificulty": "1500", "interactive": false}