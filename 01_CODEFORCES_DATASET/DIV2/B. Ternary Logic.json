{"link": "https://codeforces.com//contest/136/problem/B", "problemId": "712", "problem_idx": "B", "shortId": "136B", "contest_number": "136", "problem_submissions": {"E": [4394426, 943854, 943936, 944323, 942300, 944776, 945031, 945743, 945579, 943842, 945887, 945798, 944859, 946578, 946396, 953971, 945988, 946489, 946047, 946492], "D": [4394420, 941362, 941671, 941559, 943130, 942400, 942793, 942153, 943644, 945052, 943026, 942548, 943366, 942578, 942783, 953962, 941992, 943393, 943910, 943675], "C": [4394416, 939617, 939576, 940002, 940871, 939754, 940568, 940141, 939502, 940571, 940454, 938936, 944319, 940526, 940778, 953940, 940564, 940613, 939789, 941664], "B": [4394414, 939135, 938999, 938581, 939003, 938910, 939376, 938682, 939008, 939286, 939655, 939717, 940678, 939297, 939444, 953946, 940051, 939328, 938861, 939640], "A": [4394413, 937874, 938097, 937644, 938221, 937662, 937689, 937544, 937564, 938024, 938080, 940085, 937732, 938256, 937668, 953939, 938564, 938136, 937850, 80618210, 937975]}, "name": "B. Ternary Logic", "statement": "Little Petya very much likes computers. Recently he has received a new\r\n\"Ternatron IV\" as a gift from his mother. Unlike other modern computers,\r\n\"Ternatron IV\" operates with ternary and not binary logic. Petya\r\nimmediately wondered how the operation is performed on this computer\r\n(and whether there is anything like it).It turned out that the operation\r\ndoes exist (however, it is called ) and it works like this. Suppose that\r\nwe need to calculate the value of the expression . Both numbers and are\r\nwritten in the ternary notation one under the other one ( under ). If\r\nthey have a different number of digits, then leading zeroes are added to\r\nthe shorter number until the lengths are the same. Then the numbers are\r\nsummed together digit by digit. The result of summing each two digits is\r\ncalculated modulo 3. Note that there is no carry between digits (i. e.\r\nduring this operation the digits aren\u2019t transferred). For example:\r\n.Petya wrote numbers and on a piece of paper. Help him find such number\r\n, that . If there are several such numbers, print the smallest one.\r\n", "solutions": ["//Done by Grey Matter\n//Fet per Ferran Alet\n\n#include<iostream>\n#include<cmath>\n#include<iomanip>\n#include<vector>\n#include<map>\n#include<queue>\n#include<fstream>\n#include<algorithm>\n#include<string>\n#include<stack>\n#include<numeric>\n#include<set>\n#include<sstream>\n#include<list>\n\n#define INF 2147483647\n#define LINF 1000000000000000000LL\n#define EPS 1e-9\n#define debug(x) cerr << #x << \" = \" << x << endl\n#define FOR(x,y) for(int x=0;x<y;x++)\n#define FORU(x,y) for(int x=1;x<=y;x++)\nusing namespace std;\n\n\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<bool> VB;\ntypedef vector<VB> VVB;\ntypedef vector<string> VS;\ntypedef map<int,int> MII;\ntypedef MII::iterator iMII;\n\nint main(){\n//ios_base::sync_with_stdio(false);\n    long long a,b;\n    while(cin>>a>>b){\n        string s,st;\n        while(a){\n            s+=char('0'+a%3);\n            a/=3;\n        }\n        while(b){\n            st+=char('0'+b%3);\n            b/=3;\n        }\n        while(s.size()<st.size()) s+=\"0\";\n        while(s.size()>st.size()) st+=\"0\";\n        string ss;\n        FOR(i,s.size()){\n            ss+=char('0'+(st[i]-'0'+12-s[i]+'0')%3);\n        }\n        long long cont=1;\n        long long  res=0;\n        FOR(i,ss.size()){\n            res+=(ss[i]-'0')*cont;\n            cont*=3;\n        }\n        cout<<res<<endl;\n    }\n}\n"], "input": "", "output": "", "tags": ["implementation", "math"], "dificulty": "1100", "interactive": false}