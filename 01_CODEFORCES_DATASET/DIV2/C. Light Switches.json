{
    "link": "https://codeforces.com//contest/1993/problem/C",
    "problemId": "2795983",
    "problem_idx": "C",
    "shortId": "1993C",
    "contest_number": "1993",
    "problem_submissions": {
        "C": [
            274402188,
            274358757,
            274374996,
            274374747,
            274368652,
            274357644,
            274365562,
            274356432,
            274379356,
            274367132,
            274372055,
            274371076,
            274363983,
            274370693,
            274369864,
            274367679,
            274363345,
            274405366,
            274364436
        ],
        "B": [
            274397223,
            274346884,
            274361191,
            274359127,
            274350863,
            274346370,
            274355668,
            274347298,
            274365588,
            274350765,
            274364310,
            274350846,
            274352824,
            274355191,
            274352816,
            274350915,
            274351222,
            274395841,
            274351441
        ],
        "A": [
            274391220,
            274335769,
            274358967,
            274335712,
            274338856,
            274337195,
            274340094,
            274335737,
            274356689,
            274336110,
            274349520,
            274336792,
            274342378,
            274342208,
            274335539,
            274352863,
            274335926,
            274386754,
            274342173
        ],
        "D": [
            274387898,
            274378476,
            274479687,
            274386087,
            274394516,
            274379793,
            274384145,
            274380644,
            274383004,
            274432739,
            274365274,
            274383568,
            274381874,
            274380805,
            274387445,
            274383605,
            274390133,
            275106936,
            274388789,
            274469604,
            274391022,
            274416385,
            274388682
        ],
        "E": [
            274380482,
            274416572,
            274415942,
            274406977,
            274400748,
            275106863,
            274409594,
            281997956,
            274569827
        ],
        "F2": [
            274361444,
            274397454,
            274414076,
            274417256,
            274415219,
            276095739,
            274383447
        ],
        "F1": [
            274349830,
            274385685,
            274402182,
            274415340,
            274413779,
            274417154,
            274400648,
            274391762,
            274403361,
            274395449,
            274405171,
            274404884,
            274415155,
            274426602,
            274426556,
            274426256,
            274400601,
            274403335,
            274384119,
            274407161
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/132185",
    "editorial": "SolutionAs soon as a chip is installed, it changes the lightâs status\r\nevery minutes. Letâs first list the segments of the moments when a light\r\nis on if we install a chip at moment : Have you seen the pattern yet?\r\nApparently each segment in the list (except the first one) is actually\r\nthe segment before it, shifted by minutes. This also means that if we\r\ndivide by and take the remainder at both ends of each segment, all these\r\nsegments become equal. With that, letâs call the segment of the -th\r\nchip.Our problem is thus simplified to: find the smallest integer such\r\nthat: appears in every segments of all chips. In order to satisfy the\r\nfirst condition, it seems if we figure out some that satisfy the second\r\ncondition, we may come up with: Next, in order for a segment to contain\r\n, this inequality must be satisfied: . This is because a light is on\r\nonly for at most minutes (before it gets turned off), so it must come\r\nnot long before the moment . Letâs call the number of chips that has ,\r\nthen in order for all lights to be on at moment , the condition is: This\r\nidea can be implemented using two-pointer technique, that traverse all\r\nfrom to . As there can be many possible values of , we only take one\r\nthat produces with minimum value. Be careful when handling signs in\r\nproblems with modules to avoid unnecessary errors.Time complexity: .\r\n",
    "name": "C. Light Switches",
    "statement": "There is an apartment consisting of n rooms, each with its light .To\r\ncontrol the lights in these rooms, the owner of the apartment decided to\r\ninstall chips in the rooms so that each room has exactly one chip, and\r\nthe chips are installed at different times. Specifically, these times\r\nare represented by the array a_1, a_2,\r\nldots, a_n, where a_i is the time (in minutes) at which a chip is\r\ninstalled in the i-th room.As soon as a chip is installed, it changes\r\nthe room’s light status every k minutes it turns on the light for k\r\nminutes, then turns it off for the next k minutes, then turns it back on\r\nfor the next k minutes, and so on. In other words, the light status is\r\nchanged by the chip at minute a_i, a_i + k, a_i + 2k, a_i + 3k,\r\nldots for the i-th room.What is the earliest moment when all rooms in\r\nthe apartment have their lights turned on?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>#define pb push_back#define sz(a) ((int)a.size())#define re return#define all(a) a.begin(),a.end()#define rept(i,a,b) for(int i=(a);i<(b);i++)#define rep(i,a) rept(i,0,a)#define vi vector<int>#define pii pair<int,int>#define F first#define S second#define de(x) cout<<#x<<\"=\"<<x<<\"\\n\";#define int long long#define il inline#define db double#define ld long dbusing namespace std;const int MOD=998244353,INF=1000000000000000000;template<typename T>inline void Mx(T &a,T b){a=max(a,b);}template<typename T>inline void Mi(T &a,T b){a=min(a,b);}void FILEIO(string s){\tfreopen((s+\".in\").c_str(),\"r\",stdin);\tfreopen((s+\".out\").c_str(),\"w\",stdout);}void run(){\tint n,p;\tcin>>n>>p;\tvi v(n);\trep(i,n)cin>>v[i];\tsort(all(v));\tint mx=v.back();\tint cl=mx,cr=mx+p-1;\trep(i,n){\t\tint cx=(mx-v[i])/(p*2)*(p*2)+v[i];\t\tif(cx+p<=mx)Mx(cl,cx+p*2);\t\telse Mi(cr,cx+p-1);\t}\tif(cl<=cr)cout<<cl<<\"\\n\";\telse cout<<\"-1\\n\";}signed main(){\tios::sync_with_stdio(0);\tcin.tie(0);cout.tie(0);\tint T=1;\tcin>>T;\twhile(T--)\t\trun();\tre 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Light Switches.json",
    "hint": [
        "Hint 1 Try to find the segments of moments when a light is on.",
        "Hint 2 Select this segment from each light. The answer should be the intersection of all of them."
    ]
}