{
    "link": "https://codeforces.com//contest/1649/problem/D",
    "problemId": "1318586",
    "problem_idx": "D",
    "shortId": "1649D",
    "contest_number": "1649",
    "problem_submissions": {
        "E": [
            148570405,
            148567587,
            148573812,
            148564341,
            148576426,
            148573557,
            148575813,
            148579228,
            148575906,
            148578716,
            148579271,
            148582328,
            148662355,
            148583368,
            148578883,
            148582802,
            148585418,
            148586818,
            148585982,
            148581078,
            148612161,
            148588539
        ],
        "D": [
            148557933,
            148560820,
            148562956,
            148546618,
            148566533,
            148563719,
            148566682,
            148565430,
            148568037,
            148566184,
            148563368,
            148567438,
            148563519,
            148569228,
            148568798,
            148555841,
            148568207,
            148564278,
            148570230,
            148612195,
            148612000,
            148565213
        ],
        "C": [
            148552699,
            148553185,
            148557085,
            148565920,
            148554169,
            148559874,
            148558298,
            148559324,
            148560060,
            148552010,
            148557966,
            148557845,
            148558319,
            148563597,
            148559134,
            148551291,
            148559957,
            148557540,
            148559934,
            148557341
        ],
        "B": [
            148549340,
            148547930,
            148551996,
            148570058,
            148544445,
            148556309,
            148549430,
            148554177,
            148555299,
            148555535,
            148553000,
            148547200,
            148552578,
            148554529,
            148552354,
            148559155,
            148554077,
            149225497,
            148573979,
            148552460,
            148550780
        ],
        "A": [
            148541954,
            148570044,
            148542065,
            148571095,
            148541611,
            148544925,
            148541660,
            148544973,
            148544958,
            148558109,
            148541535,
            148542135,
            148541834,
            148556570,
            148541907,
            148561936,
            148542732,
            149225451,
            148543259,
            148541552,
            148544161
        ],
        "F": [
            148802496,
            148696109,
            148694405
        ]
    },
    "name": "D. Integral Array",
    "statement": "You are given an array a of n positive integers numbered from 1 to n.\r\nLet\u2019s call an array if for any two, not necessarily different, numbers x\r\nand y from this array, x\r\nge y, the number\r\nleft\r\nlfloor\r\nfrac{x}{y}\r\nright\r\nrfloor (x divided by y with rounding down) is also in this array.You are\r\nguaranteed that all numbers in a do not exceed c. Your task is to check\r\nwhether this array is integral.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n\n#ifndef ONLINE_JUDGE\n#include \"debug.h\"\n#else\n#define deb(...) 4\n#endif\n\nsigned main()\n{\n\tios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tint n,c;\n\t\tcin>>n>>c;\n\t\tvector<int>pre(c+1);\n\t\tvector<bool>vis(c+1,false);\n\t\tfor(int i=0;i<n;i++){\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tvis[x]=true;\n\t\t\tpre[x]++;\n\t\t}\n\t\tfor(int i=1;i<=c;i++) pre[i]+=pre[i-1];\n\t\tbool p=true;\n\t\tfor(int i=2;i<=c;i++){\n\t\t\tif(vis[i]){\n\t\t\t\tfor(int j=1;i*j<=c;j++){\n\t\t\t\t\tint l=i*j;\n\t\t\t\t\tint r=i*(j+1)-1;\n\t\t\t\t\tr=min(r,c);\n\t\t\t\t\tint tot=pre[r]-pre[l-1];\n\t\t\t\t\tif(tot&&!vis[j]) p=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(p) cout<<\"Yes\\n\";\n\t\telse cout<<\"No\\n\";\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math",
        "sortings"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Integral Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/100592",
    "editorial": "Let's consider x,y?a\n and r?a\n. If y?r?x<y?(r+1)\n then ?xy?=r\n, but r\n is not in a\n, so the answer is \"No\". Let's suggest that y\n and r\n are already given. We can check if there exists such x?a\n from the mentioned segment in O(1)\n. It is done by considering array cntx\n \u0097 the amount of occurrences of x\n in a\n, and prefix sums for that array. Now we only need to run this check for each r\n and y\n. To do that we can iterate through all r?a\n and y?a\n in increasing order. If r?y>c\n then there is definitely no such x\n so we can consider the next r\n. This optimization speeds up the process and makes the whole solution work in O(ClogC)\n."
}