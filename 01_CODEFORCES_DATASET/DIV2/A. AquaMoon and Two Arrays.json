{"link": "https://codeforces.com//contest/1546/problem/A", "problemId": "1042724", "problem_idx": "A", "shortId": "1546A", "contest_number": "1546", "problem_submissions": {"E": [122125227, 122124148], "D": [122105872, 122107863, 122096889, 122095603, 122105333, 122096936, 122095472, 122118686, 122098923, 122101207, 122099148, 122104914, 122098428, 122104640, 122105136, 122100488, 122105772, 122099537, 122110448], "B": [122090097, 122085108, 122076540, 122081488, 122082915, 122087734, 122082809, 122086822, 122082800, 122087773, 122082175, 122080119, 122083530, 122081814, 122079226, 122091795, 122081873, 122092861, 122090128], "A": [122086851, 122077567, 122075663, 122076476, 122076552, 122078623, 122076889, 122078972, 122076287, 122076026, 122077753, 122076449, 122078299, 122077156, 122075823, 122076339, 122075922, 122080175, 122215627, 122079018], "C": [122093146, 122079907, 122085065, 122080664, 122088293, 122092424, 122089139, 122082548, 122092063, 122084125, 122087870, 122085723, 122081465, 122087209, 122087382, 122088738, 122085153]}, "name": "A. AquaMoon and Two Arrays", "statement": "AquaMoon and Cirno are playing an interesting game with arrays. Cirno\r\nhas prepared two arrays a and b, both consist of n non-negative\r\nintegers. AquaMoon can perform the following operation an arbitrary\r\nnumber of times (possibly zero): She chooses two indices i and j (1\r\nle i, j\r\nle n), then decreases the i-th element of array a by 1, and increases\r\nthe j-th element of array a by 1. The resulting values at i-th and j-th\r\nindex of array a are a_i - 1 and a_j + 1, respectively. Each element of\r\narray a . If i = j this operation doesn\u2019t change the array a. AquaMoon\r\nwants to make some operations to make arrays a and b equal. Two arrays a\r\nand b are considered equal if and only if a_i = b_i for all 1\r\nleq i\r\nleq n.Help AquaMoon to find a sequence of operations that will solve her\r\nproblem or find, that it is impossible to make arrays a and b\r\nequal.Please note, that you the number of operations.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define x first\n#define y second\n#define pb push_back\n#define all(v) v.begin(),v.end()\n#pragma gcc optimize(\"O3\")\n#pragma gcc optimize(\"Ofast\") \n#pragma gcc optimize(\"unroll-loops\")\nusing namespace std;\nconst int INF = 1e9;\nconst int TMX = 1 << 18;\nconst long long llINF = 1e16;\nconst long long mod = 1e9+7;\nconst long long hashmod = 100003;\nconst int MAXN = 100000;\nconst int MAXM = 1000000;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair <int,int> pi;\ntypedef pair <ll,ll> pl;\ntypedef vector <int> vec;\ntypedef vector <pi> vecpi;\ntypedef long long ll;\nint n;\nint a[105],b[105];\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int T; cin >> T;\n    while(T--) {\n        cin >> n;\n        for(int i = 1;i <= n;i++) {\n            cin >> a[i];\n        }\n        for(int i = 1;i <= n;i++) {\n            cin >> b[i];\n        }\n        vec v,v2;\n        for(int i = 1;i <= n;i++) {\n            for(int j = 1;j <= a[i]-b[i];j++) v.pb(i);\n            for(int j = 1;j <= b[i]-a[i];j++) v2.pb(i);\n        }\n        if(v.size() != v2.size()) {\n            cout << \"-1\\n\";\n            continue;\n        }\n        cout << v.size() << '\\n';\n        for(int i = 0;i < v.size();i++) {\n            cout << v[i] << ' ' << v2[i] << '\\n';\n        }\n    }\n}"], "input": "", "output": "", "tags": ["brute force", "greedy"], "dificulty": "800", "interactive": false}