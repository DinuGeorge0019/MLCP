{
    "link": "https://codeforces.com//contest/918/problem/B",
    "problemId": "151493",
    "problem_idx": "B",
    "shortId": "918B",
    "contest_number": "918",
    "problem_submissions": {
        "D": [
            34674216,
            34676112,
            34673508,
            34668068,
            34677841,
            34677199,
            34677332,
            34677732,
            34674284,
            34676764,
            34679239,
            34678391,
            34678589,
            34677462,
            34676960,
            34679127,
            34678913,
            34675354,
            34679183
        ],
        "B": [
            34670440,
            34667518,
            34666861,
            34670421,
            34670264,
            34667471,
            34666401,
            34668510,
            34667116,
            34668380,
            34668100,
            34668007,
            34668333,
            34667912,
            34667438,
            34673764,
            34668108,
            34668574,
            34670180
        ],
        "C": [
            34669065,
            34673271,
            34676492,
            34678621,
            34673223,
            34674841,
            34674142,
            34672405,
            34678982,
            34671931,
            34673671,
            34675775,
            34673964,
            34675892,
            34678000,
            34670923,
            34676125,
            34680026,
            34675452
        ],
        "A": [
            34664697,
            34665015,
            34664848,
            34664663,
            34664707,
            34665222,
            34664674,
            34665219,
            34664947,
            34672513,
            34664938,
            34664735,
            34665446,
            34664882,
            34665035,
            34672321,
            34665406,
            34664826,
            34666801
        ],
        "E": [
            34687078,
            34688168,
            34687900,
            34687853
        ]
    },
    "name": "B. Radio Station",
    "statement": "As the guys fried the radio station facilities, the school principal\r\ngave them tasks as a punishment. Dustin’s task was to add comments to\r\nnginx configuration for school’s website. The school has servers. Each\r\nserver has a name and an ip (names aren’t necessarily unique, but ips\r\nare). Dustin knows the ip and name of each server. For simplicity, we’ll\r\nassume that an nginx command is of form \"\" where is a string consisting\r\nof English lowercase letter only, and is the ip of one of school\r\nservers. Each ip is of form \"\" where , , and are non-negative integers\r\nless than or equal to (with no leading zeros). The nginx configuration\r\nfile Dustin has to add comments to has commands. Nobody ever memorizes\r\nthe ips of servers, so to understand the configuration better, Dustin\r\nhas to comment the name of server that the ip belongs to at the end of\r\neach line (after each command). More formally, if a line is \"\" Dustin\r\nhas to replace it with \"\" where is the name of the server with ip equal\r\nto .Dustin doesn’t know anything about nginx, so he panicked again and\r\nhis friends asked you to do his task for him.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\n#define F first\n#define S second\n\nmap<string, string> mp;\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n, m;\n\tcin >> n >> m;\n\twhile (n--) {\n\t\tstring a, b;\n\t\tcin >> a >> b;\n\t\tmp[b] = a;\n\t}\n\twhile (m--){\n\t\tstring a, b; cin >> a >> b;\n\t\tstring c = b;\n\t\tc.pop_back();\n\t\tcout << a << \" \" << b << \" #\" << mp[c] << \"\\n\";\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Radio Station.json",
    "editorial_link": "https://codeforces.com/blog/entry/57420",
    "editorial": "Save the names and ips of the servers. Then for each command find the\r\nserver in and print its name.Total time complexity:\r\n",
    "hint": []
}