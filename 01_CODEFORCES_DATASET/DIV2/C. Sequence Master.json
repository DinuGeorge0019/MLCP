{
    "link": "https://codeforces.com//contest/1806/problem/C",
    "problemId": "1836408",
    "problem_idx": "C",
    "shortId": "1806C",
    "contest_number": "1806",
    "problem_submissions": {
        "F2": [
            197973089,
            198042031,
            198041907
        ],
        "F1": [
            197947040,
            197980157,
            198042001,
            198041678
        ],
        "C": [
            197937230,
            197916115,
            197928489,
            197944944,
            197938210,
            197926089,
            197926689,
            197929494,
            197933106,
            197948564,
            197926881,
            197937572,
            197932222,
            197941848,
            199801603,
            197957943,
            197942490,
            197930745,
            197946610,
            197928372,
            197924952
        ],
        "E": [
            197933006,
            197929125,
            197915365,
            197935988,
            197962774,
            197948774,
            197963264,
            197949722,
            197943372,
            197943303,
            197949562,
            197950582,
            197950806,
            240170072,
            197967439,
            199801822,
            199801762,
            197952145,
            197987791,
            197987740,
            197972228,
            201450127,
            197970212,
            197959737,
            197938806,
            197943810
        ],
        "B": [
            197912589,
            197908884,
            197909602,
            197911369,
            197910208,
            197914190,
            197910559,
            197911156,
            197917129,
            197921982,
            197914483,
            197917557,
            197912987,
            197915302,
            197915210,
            197914864,
            197912863,
            197911859,
            197911664,
            197911113
        ],
        "A": [
            197912419,
            197906490,
            197911639,
            197906984,
            197907218,
            197908571,
            197907286,
            197906740,
            197907744,
            197907020,
            197928349,
            197908011,
            197912765,
            197906883,
            197908367,
            197906657,
            197906703,
            197906672,
            197907002,
            197906587
        ],
        "D": [
            197942295,
            197971270,
            197966565,
            197946069,
            197958331,
            197952013,
            197968711,
            197966060,
            197967070,
            197965611,
            197969051,
            197967288,
            197953250,
            199801511,
            197971493,
            197965795,
            197972473,
            197971611,
            198035510,
            198035241
        ]
    },
    "name": "C. Sequence Master",
    "statement": "For some positive integer m, YunQian considers an array q of 2m\r\n(possibly negative) integers , if and only if for every possible\r\nsubsequence of q that has length m, the product of the m elements in the\r\nsubsequence is equal to the sum of the m elements that are in the\r\nsubsequence. Formally, let U=\r\n{1,2,\r\nldots,2m\r\n}. For all sets S\r\nsubseteq U such that |S|=m,\r\nprod\r\nlimits_{i\r\nin S} q_i =\r\nsum\r\nlimits_{i\r\nin U\r\nsetminus S} q_i.Define the between two arrays a and b both of length k\r\nto be\r\nsum\r\nlimits_{i=1}^k|a_i-b_i|.You are given a positive integer n and an array\r\np of 2n integers.Find the minimum distance between p and q over all good\r\narrays q of length 2n. It can be shown for all positive integers n, at\r\nleast one good array exists. Note that you are to construct the array q\r\nthat achieves this minimum distance.\r\n",
    "solutions": [
        "// Problem: C. Sequence Master\n// Contest: Codeforces - Codeforces Round 858 (Div. 2)\n// URL: https://codeforces.com/contest/1806/problem/C\n// Memory Limit: 1024 MB\n// Time Limit: 1000 ms\n\n#include<bits/stdc++.h>\n#define poly vector<int>\n#define IOS ios::sync_with_stdio(false)\n#define ll long long\n#define mp make_pair\n#define mt make_tuple\n#define pa pair < int,int >\n#define fi first\n#define se second\n#define inf 1e18\n#define mod 998244353\n#define int ll\n#define N 400005\nusing namespace std;\nint n,a[N];\nvoid BellaKira()\n{\n\tcin>>n;\n\t\tint ans=0,ans1=0;\n\t\tfor (int i=1;i<=2*n;i++)\n\t\t\tcin>>a[i],ans+=abs(a[i]);\n\t\tsort(a+1,a+2*n+1,[&](int x,int y)\n\t\t{\n\t\t\treturn abs(x-n)-abs(x+1)<abs(y-n)-abs(y+1);\n\t\t});\n\t\tfor (int i=2;i<=2*n;i++) ans1+=abs(a[i]+1);\n\t\tans1+=abs(a[1]-n);\n\t\t// cout<<\"!\"<<a[1]<<'\\n';\n\t// cout<<\"!!!\"<<ans<<\" \"<<ans1<<'\\n';\n\tif (n==2)\n\t{\n\t\tint ans2=0;\n\t\tfor (int i=1;i<=2*n;i++)\n\t\t\tans2+=abs(a[i]-2);\n\t\tcout<<min({ans,ans1,ans2})<<'\\n';\n\t\treturn;\n\t}\n\tif (n==1)\n\t{\n\t\tcout<<abs(a[1]-a[2])<<'\\n';\n\t\treturn;\n\t}\n\tif (n%2==0) cout<<min(ans,ans1)<<'\\n';\n\telse  cout<<ans<<'\\n';\n}\nsigned main()\n{\n\tIOS;cin.tie(0); \n\tint T=1;\n\tcin>>T;\n\twhile (T--)\n\t{\n\t\tBellaKira();\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Sequence Master.json",
    "editorial_link": "https://codeforces.com//blog/entry/114048",
    "editorial": "Hint 1: The number of good sequences is small.Hint 2: Consider two\r\ncases: all elements in are (not) equal.In case that all elements in are\r\nequal, we have . The integer solutions to this equation is , or .In the\r\nother case, we can see that the constraints are strong, so let\u00e2\u0080\u0099s list\r\nsome equations to find good sequences, using the property that not all\r\nelements are equal.Let be such a good sequence. WLOG . Then we\r\nhave:Substract from :Since , there must be .Similarly, for each exactly\r\nnumbers in , their product will be , which leads to . Therefore, we have\r\n, which leads to and .Bringing it back to , we have .Since , we know\r\n.The only solution is . Q.E.D.Back to the problem. For the first case,\r\nit is easy to calculate the distance. For the second case, let , the\r\nanswer is .\r\n"
}