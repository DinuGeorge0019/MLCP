{
    "link": "https://codeforces.com//contest/1058/problem/A",
    "problemId": "223733",
    "problem_idx": "A",
    "shortId": "1058A",
    "contest_number": "1058",
    "problem_submissions": {
        "F": [
            43329652,
            43322741,
            43327075,
            43339320,
            43397318
        ],
        "E": [
            43317169,
            43335127,
            43311536,
            43318971,
            43319046,
            43349236,
            43325041,
            43322181,
            43322626,
            43309860,
            43322794,
            43327406,
            43321904,
            43323656,
            43323747,
            43323713,
            43316209,
            43327281,
            43327505
        ],
        "B": [
            43314909,
            43299015,
            43298589,
            43304743,
            43300553,
            43310414,
            43301962,
            43300188,
            43303702,
            43317695,
            43301396,
            43299393,
            43301629,
            43300037,
            43301041,
            43302979,
            43330380,
            43303019,
            43303281
        ],
        "C": [
            43311113,
            43302266,
            43300372,
            43301786,
            43303858,
            43309140,
            43303996,
            43302098,
            43308312,
            43301537,
            43306280,
            43302496,
            43303833,
            43303884,
            43307063,
            43311748,
            43303475,
            43307737,
            43305316
        ],
        "D": [
            43306998,
            43306866,
            43307236,
            43307768,
            43312416,
            43307189,
            43309783,
            43309198,
            43312128,
            43330363,
            43309334,
            43310807,
            43315529,
            43315808,
            43314759,
            43307976,
            43322616,
            43315377,
            43313629
        ],
        "A": [
            43304464,
            43296152,
            43295312,
            43296932,
            43295838,
            43311418,
            43296719,
            43295347,
            43301760,
            43297317,
            43296398,
            43295888,
            43295686,
            43295956,
            43297191,
            43296417,
            43297679,
            43297174,
            43295748
        ]
    },
    "name": "A. In Search of an Easy Problem",
    "statement": "When preparing a tournament, Codeforces coordinators try treir best to\r\nmake the first problem as easy as possible. This time the coordinator\r\nhad chosen some problem and asked n people about their opinions. Each\r\nperson answered whether this problem is easy or hard.If at least one of\r\nthese n people has answered that the problem is hard, the coordinator\r\ndecides to change the problem. For the given responses, check if the\r\nproblem is easy enough.\r\n",
    "solutions": [
        "//Williams Wu\n/*#include <EGE.h> //��ͼͷ�ļ�\n#define SHOW_CONSOLE*/\n/*#include <cstdio> //��������/�������\n#include <iostream> //����������/���\n#include <algorithm> //STLͨ���㷨\n#include <cmath> //������ѧ����\n#include <cstdlib> //������������ڴ���亯��\n#include <cstring> //�ַ�������\n#include <string> //�ַ�����\n#include <ctime> //�������ʱ��ĺ���*/\n/*#include <bitset> //STLλ������\n#include <cstype> //�ַ�����\n#include <cerrno> //���������\n#include <complex> //������\n#include <clocale> //���屾�ػ�����\n#include <deque> //STL˫�˶�������\n#include <exception> //�쳣������\n#include <fstream> //�ļ�����/���\n#include <functional> //STL�������㺯��(���������)\n#include <limits> //�����������������ֵ����\n#include <listt> //STL�����б�����\n#include <mapp> //STLӳ������\n#include <iomanip> //����������/���\n#include <ios> //��������/���֧��\n#include <iosfwd> //����/���ϵͳʹ�õ�ǰ������\n#include <istream> //����������\n#include <ostream> //���������\n#include <queue> //STL��������\n#include <sett> //STL��������\n#include <sstream> //�����ַ�������\n#include <stackk> //STL��ջ����\n#include <stdexcept> //��׼�쳣��\n#include <streambuf> //�ײ�����/���֧��\n#include <utility> //STLͨ��ģ����\n#include <vector> //STL��̬��������\n#include <cwchar.h> //���ַ���������/���\n#include <cwctype.h> //���ַ�����*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(u,v,nxt) for(int u=(v);(u)<=(nxt);(u)++)\n#define rep_(u,v,nxt) for(int u=(v);(u)<(nxt);(u)++)\n#define repf(u,v,nxt) for(int u=(v);(u)>=(nxt);(u)--)\n#define repf_(u,v,nxt) for(int u=(v);(u)>(nxt);(u)--)\n#define inf 0x3f3f3f3f  //0x7fffffff\n#define cle(u) memset(u,0,sizeof(u))\n#define clemin(u) memset(u,-1,sizeof(u))\n#define clemax(u) memset(u,0x3f,sizeof(u))  //127\nconst double PI=3.14159265358979323846264338327950288419716939937510;\nconst double E=2.7182818284590452353602874713526624977572470936999596;\nconst double eps=0.000000001;\ntypedef long long LL;\ninline int max(int u,int v){return u>v?u:v;}\ninline int min(int u,int v){return u<v?u:v;}\ninline LL gcd(LL u,LL v){return v?gcd(v,u%v):u;}\n///////////////////////optimize//////////////////////////\ntemplate <typename T>\ninline void read(T& u){char id;u=0;bool used=0;id=getchar();\nwhile(id>'9'||id<'0'){if(id=='-')used=1;id=getchar();}\nwhile((id<='9'&&id>='0')){u=u*10+id-'0';id=getchar();}if(used)u*=-1;}\ntemplate <typename T>\ninline void read(T& u,T& v){read(u);read(v);}\ntemplate <typename T>\ninline void read(T& u,T& v,T& tmp){read(u);read(v);read(tmp);}\n/////////////////variables&functions/////////////////////\n\nbool flag=0;\n\nint main() \n{\n    int n;\n    read(n);\n    rep(i,1,n) \n    {\n        int x;\n        read(x);\n        if(x) flag=1;\n    }\n    if(flag) puts(\"HARD\");\n        else puts(\"EASY\");\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. In Search of an Easy Problem.json",
    "editorial_link": "https://codeforces.com/blog/entry/62013",
    "editorial": "Find maxi=1..n(answeri)\n, if it's equal to 1\n then answer is HARD, otherwise  EASY.",
    "hint": []
}