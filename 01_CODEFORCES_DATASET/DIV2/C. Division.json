{
    "link": "https://codeforces.com//contest/1445/problem/C",
    "problemId": "781571",
    "problem_idx": "C",
    "shortId": "1445C",
    "contest_number": "1445",
    "problem_submissions": {
        "E": [
            97343040,
            97347277,
            97348912,
            97344656,
            97407907,
            97407463,
            97396524,
            97362947
        ],
        "D": [
            97324855,
            97333286,
            97329900,
            97353075,
            97316397,
            97323647,
            97321827,
            97324812,
            97326864,
            97321949,
            97323009,
            97324550,
            97322776,
            97326841,
            97328860,
            97326229,
            97319935,
            97330188,
            97323548,
            97329039
        ],
        "C": [
            97312030,
            97308145,
            97319441,
            97322210,
            97306404,
            97316438,
            97309851,
            97318138,
            97312463,
            97315342,
            97319473,
            97318075,
            97315769,
            97319997,
            97316782,
            97317725,
            97311982,
            97316093,
            97319226,
            97318708
        ],
        "B": [
            97307314,
            97314537,
            97310817,
            97314466,
            97321532,
            97307574,
            97325592,
            97309083,
            97515487,
            97306672,
            97309337,
            97315410,
            97313589,
            97311259,
            97309216,
            97310018,
            97309275,
            97322041,
            97310083,
            97315384,
            97310291
        ],
        "A": [
            97303713,
            97309415,
            97303791,
            97305897,
            97308405,
            97303339,
            97304268,
            97303286,
            97515476,
            97303210,
            97303136,
            97304841,
            97305580,
            97303766,
            97303232,
            97303901,
            97303416,
            97315951,
            97303601,
            97303529,
            97303495
        ]
    },
    "name": "C. Division",
    "statement": "Oleg\u2019s favorite subjects are History and Math, and his favorite branch\r\nof mathematics is division.To improve his division skills, Oleg came up\r\nwith t pairs of integers p_i and q_i and for each pair decided to find\r\nthe integer x_i, such that: p_i is divisible by x_i; x_i is not\r\ndivisible by q_i. Oleg is really good at division and managed to find\r\nall the answers quickly, how about you?\r\n",
    "solutions": [
        "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <iomanip>\n#include <cassert>\n#include <cstring>\n#include <sstream>\n#include <numeric>\n#include <cstdio>\n#include <bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair <int, int> pii;\n\n#define int ll\n\n#define pb push_back\n#define F first\n#define S second\n#define _sz(x) ((int)x.size())\n\nint T;\n\nint p, q;\n\nint32_t main()\n{\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\n    cin >> T;\n\n    while (T--) {\n        cin >> p >> q;\n\n        if (p % q) {\n            cout << p << '\\n';\n            continue;\n        }\n\n        vector <pii> vec;\n\n        for (int x = 2; x * x <= q; x++) {\n            if (q % x) continue;\n        \n            int cnt = 0;\n            while (q % x == 0) q /= x, cnt++;\n\n            vec.pb({x, cnt});\n        }\n\n        if (q > 1) vec.pb({q, 1});\n\n        int ans = 1;\n        for (pii X : vec) {\n            int x = X.F, cnt = X.S;\n\n            int cpy = p;\n\n            while (cpy % x == 0) cpy /= x;\n\n            for (int i = 0; i < cnt - 1; i++) cpy *= x;\n\n            ans = max(ans, cpy);\n        }\n\n        cout << ans << '\\n';\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Division.json",
    "editorial_link": "https://codeforces.com//blog/entry/84248",
    "editorial": "Let y=p/x\n. Let's assume, that there exists prime a\n, such that a\n divides y\n, but q\n is not divisible by a\n. Then we can multiply x\n and a\n and the result will still divide p\n, but will not be divisible by q\n. So for maximal x\n there is no such a\n.\n\nLet's assume, that there are two primes a\n and b\n, such that they both divide y\n, and both divide q\n. Because q\n is not divisible by x\n, there exists some prime c\n (c\n can be equal to a\n or b\n), such that number of occurrences of c\n in x\n is less than number of occurrences of c\n in q\n. One of a\n and b\n is not equal to c\n, so if we will multiply x\n and such number, the result will not be divisible by q\n. So for maximal x\n there are no such a\n and b\n.\n\nThat means that x=p/\n(power of some primal divisor of q\n). So to find maximal x\n, we have to find all prime divisors of q\n (we have to factorise q\n for it in time O(q?)\n) and for each of them divide p\n by it until result is not divisible by q\n. That will be all our candidates for greatest x\n. We will do all of that in time O(q?+logq?logp)\n."
}