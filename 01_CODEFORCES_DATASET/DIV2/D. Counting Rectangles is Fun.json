{
    "link": "https://codeforces.com//contest/373/problem/D",
    "problemId": "4180",
    "problem_idx": "D",
    "shortId": "373D",
    "contest_number": "373",
    "problem_submissions": {
        "B": [
            5429569,
            5424746,
            5426227,
            5425475,
            5422342,
            5425081,
            5426099,
            5425032,
            5425412,
            5436342,
            5426611,
            5423163,
            5423178,
            5425228
        ],
        "A": [
            5424943,
            5421235,
            5422611,
            5422595,
            5433909,
            5421126,
            5421160,
            5429834,
            5421622,
            5425841,
            5421003,
            5421386,
            5421391,
            5421143,
            5421194,
            5421261,
            5421350
        ],
        "C": [
            5424210,
            5422375,
            5423370,
            5427068,
            5424824,
            5427055,
            5423334,
            5430375,
            5422559,
            5425280,
            5426953,
            5423867,
            5424356,
            5424874,
            5424522,
            5427759,
            5426510,
            5427253
        ],
        "D": [
            5423101,
            5430116,
            5431564,
            5429533,
            5429205,
            5429913,
            5431205,
            5429336,
            5429567
        ],
        "E": [
            5431047,
            5431253,
            5445684,
            5431420,
            5431441
        ]
    },
    "name": "D. Counting Rectangles is Fun",
    "statement": "There is an rectangular grid, each cell of the grid contains a single\r\ninteger: zero or one. Let’s call the cell on the -th row and the -th\r\ncolumn as .Let’s define a \"rectangle\" as four integers . Rectangle\r\ndenotes a set of cells of the grid . Let’s define a \"good rectangle\" as\r\na rectangle that includes only the cells with zeros.You should answer\r\nthe following queries: calculate the number of good rectangles all of\r\nwhich cells are in the given rectangle.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int maxN = 40 + 5;\n\nint a[maxN][maxN], col[maxN][maxN];\nint cnt[maxN][maxN][maxN][maxN];\nint N, M, Q;\n\nvoid init()\n{\n\tscanf(\"%d%d%d\", &N, &M, &Q);\n\tfor (int i = 1; i <= N; ++i) {\n\t\tchar s[maxN];\n\t\tscanf(\"%s\", s);\n\t\tfor (int j = 1; j <= M; ++j) {\n\t\t\ta[i][j] = (s[j - 1] == '1');\n\t\t\tcol[i][j] = col[i - 1][j] + a[i][j];\n\t\t}\n\t}\n}\n\nvoid prepare()\n{\n\tfor (int u = 1; u <= N; ++u)\n\t\tfor (int d = u; d <= N; ++d)\n\t\t\tfor (int l = 1; l <= M; ++l) {\n\t\t\t\tint tmp = 0;\n\t\t\t\tfor (int r = l; r <= M; ++r) {\n\t\t\t\t\tif (col[d][r] - col[u - 1][r]) tmp = 0;\n\t\t\t\t\telse ++tmp;\n\t\t\t\t\tcnt[u][d][l][r] = cnt[u][d][l][r - 1] + tmp;\n//\t\t\t\t\tprintf(\"%d %d %d %d %d\\n\", u, d, l, r, cnt[u][d][l][r]);\n\t\t\t\t}\n\t\t\t}\n}\n\nvoid answer()\n{\n\twhile (Q--) {\n\t\tint u, d, l, r;\n\t\tscanf(\"%d%d%d%d\", &u, &l, &d, &r);\n\t\tint ans = 0;\n\t\tfor (int i = u; i <= d; ++i)\n\t\t\tfor (int j = i; j <= d; ++j)\n\t\t\t\tans += cnt[i][j][l][r];\n\t\tprintf(\"%d\\n\", ans);\n\t}\n}\n\nint main()\n{\n\tinit();\n\tprepare();\n\tanswer();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Counting Rectangles is Fun.json",
    "editorial_link": "https://codeforces.com//blog/entry/9944",
    "editorial": "We can precalculate all rectangles, in O(N^2M^2) with using consecutive\r\nsums for 2D. And then we use 4D consecutive sums, we can answer the\r\nqueries. The time conplexity is O(N^2M^2+Q). my solution:\r\nhttp://ideone.com/QOjwse\r\n"
}