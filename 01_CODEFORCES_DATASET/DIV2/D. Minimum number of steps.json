{"link": "https://codeforces.com//contest/805/problem/D", "problemId": "105169", "problem_idx": "D", "shortId": "805D", "contest_number": "805", "problem_submissions": {"E": [26857780, 26856750, 26858111, 26857063, 26859139, 26856888, 26859899, 26860928, 26861436, 26860967, 26859459, 26858902, 26861950, 26859019, 26862819, 26861493], "D": [26844331, 26843852, 26846709, 26847271, 26843712, 26849970, 26845256, 26850183, 26849852, 26846814, 26846907, 26847537, 26851958, 26850830, 26850561, 26852120, 26848761, 26850340, 26852553, 26854400], "C": [26841586, 26841442, 26843378, 26841793, 26849729, 26843226, 26842851, 26847163, 26844593, 26844046, 26842105, 26844673, 26843379, 26843951, 26848871, 26841493, 26842855, 26845699, 26846895, 26847872], "B": [26839792, 26840934, 26840059, 26841075, 26840279, 26839383, 26840491, 26847999, 26841324, 26839809, 26839811, 26839925, 26840626, 26839840, 26840234, 26839411, 26840270, 26846558, 26843910, 26843501], "A": [26837425, 26838400, 26837402, 26838568, 26837965, 26837187, 26849788, 26839799, 26839327, 26837458, 26837278, 26846404, 26837755, 26840946, 26838306, 26837294, 26837665, 26859742, 26839927, 26841184], "F": [26862002, 26862152, 27206248, 35743638, 26862813, 26870973, 26870602]}, "name": "D. Minimum number of steps", "statement": "We have a string of letters \u201d and \u201d. We want to perform some operations\r\non it. On each step we choose one of substrings \"\" in the string and\r\nreplace it with the string \"\". If we have no \"\" as a substring, our job\r\nis done. Print the minimum number of steps we should perform to make our\r\njob done modulo .The string \"\" appears as a substring if there is a\r\nletter \u201d right after the letter \u201d somewhere in the string.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <map>\n#include <cstdlib>\n#include <cmath>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <stack>\n#include <queue>\n#include <utility>\n#include <bitset>\n#define fi first\n#define se second\n#define mkp make_pair\n#define pb push_back\n#define rep(i,a,b) for (int i=(a);i<(b);i++)\n#define per(i,b,a) for (int i=(b)-1;i>=(a);i--)\n#define REP(i,a,b) for (int i=(a);i<=(b);i++)\n#define PER(i,b,a) for (int i=(b);i>=(a);i--)\nusing namespace std;\ntypedef long long LL;\n\nconst int INF = 0x3f3f3f3f;\n\nconst int MAXN = 1000005; // 1e6;\nchar a[MAXN];\nint n;\nconst int MOD = 1e9+7;\nLL ans = 0;\nLL b = 0;\nint main()\n{\n        cin>>a;\n        n = strlen(a);\n        for (int i = n-1; i >= 0; i--)\n        {\n                if (a[i]=='b') b = (b+1)%MOD;\n                if (a[i]=='a') ans = (ans+b)%MOD, b = (b<<1) %MOD;\n        }\n        cout<<ans<<endl;\n}\n"], "input": "", "output": "", "tags": ["combinatorics"], "dificulty": "1400", "interactive": false}