{"link": "https://codeforces.com//contest/1838/problem/E", "problemId": "1951238", "problem_idx": "E", "shortId": "1838E", "contest_number": "1838", "problem_submissions": {"E": [208486336, 208494772, 208495329, 208495228, 208504838, 208502550, 208502081, 208506624, 208501784, 208497568, 208484754, 208502274, 208506982, 208508861, 208509587], "D": [208474393, 208472020, 208475917, 208474806, 208470276, 208484610, 208476486, 208481947, 208484438, 208492182, 208509562, 208485512, 208497675, 208502977, 208488728, 208469550, 208477928, 208461571], "C": [208459822, 208460902, 208460156, 208459254, 208459677, 208455873, 208462517, 208452784, 208459736, 208463220, 208467092, 208460581, 208458526, 208468810, 208477568, 208454310, 208448256, 208470265], "B": [208453654, 208447995, 208452616, 208450470, 208449926, 208446381, 208454035, 208446799, 208444336, 208450882, 208456322, 208448611, 208449662, 208456059, 208462080, 208447155, 208442110, 208452374], "A": [208438767, 208438058, 208439478, 208435532, 208440850, 208437783, 208437196, 208435664, 208435519, 208435964, 208439335, 208440976, 208441596, 208440802, 208440409, 208436085, 208439210, 208439722], "F": [209584777, 208548659]}, "name": "E. Count Supersequences", "statement": "You are given an array a of n integers, where all elements a_i lie in\r\nthe range [1, k]. How many different arrays b of m integers, where all\r\nelements b_i lie in the range [1, k], contain a as a subsequence? Two\r\narrays are considered different if they differ in at least one\r\nposition.A sequence x is a subsequence of a sequence y if x can be\r\nobtained from y by the deletion of several (possibly, zero or all)\r\nelements.Since the answer may be large, print it modulo 10^9 + 7.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\nconstexpr ll MOD = 1e9+7;\n\nll bp(ll a, int b) {\n    ll c = 1;\n    for (; b > 0; b /= 2) {\n        if (b & 1) {\n            c *= a; c %= MOD;\n        }\n        a *= a; a %= MOD;\n    }\n    return c;\n}\n\nll inv(ll a) {\n    return bp(a, MOD-2);\n}\n\nll mod(ll a) {\n    return (a%MOD+MOD)%MOD;\n}\n\nint main() {\n    int t; cin>>t;\n    for (int ti = 0; ti < t; ++ti) {\n        int n,m,k; cin>>n>>m>>k;\n        for (int i = 0; i < n; ++i) {\n            int a; cin>>a;\n        }\n        ll ans = bp(k,m);\n        ll c = 1, p = bp(k-1,m);\n        for (int i = 0; i < n; ++i) {\n            ans = mod(ans-c*p);\n            c = c*(m-i)%MOD*inv(i+1)%MOD;\n            p *= inv(k-1); p %= MOD;\n        }\n        cout << ans << \"\\n\";\n    }\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "dp", "math"], "dificulty": "2500", "interactive": false}