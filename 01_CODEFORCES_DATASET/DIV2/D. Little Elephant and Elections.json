{"link": "https://codeforces.com//contest/259/problem/D", "problemId": "2440", "problem_idx": "D", "shortId": "259D", "contest_number": "259", "problem_submissions": {"E": [2813039, 2816939, 2814909, 4167338, 4137723], "C": [2809858, 2808871, 2809902, 2809737, 2809898, 2810009, 2809632, 2810402, 2809449, 2811265, 2809553, 2810721, 2809373, 2809260, 2807799, 2811480, 2809146, 2809912, 2810184], "B": [2809426, 2810084, 2809284, 2809125, 2809325, 2811095, 2809244, 2811116, 2808962, 2810591, 2810202, 2810095, 2808730, 2808863, 2809270, 2809527, 2808652, 2809415, 2809855], "A": [2807976, 2808177, 2807683, 2807618, 2807679, 2807891, 2807707, 2807642, 2807614, 2809094, 2808555, 2808299, 2807492, 2807537, 2808474, 2807922, 2807557, 2808322, 2807778], "D": [2812836, 2813225, 2814117, 2813559, 2813985, 2814364, 2814925, 2813998, 2814354, 2814825, 2816069, 2815431, 2815253, 2815318, 2815331, 2814947]}, "name": "D. Little Elephant and Elections", "statement": "There have recently been elections in the zoo. Overall there were main\r\npolitical parties: one of them is the Little Elephant Political Party,\r\nother parties have less catchy names.Political parties find their number\r\nin the ballot highly important. Overall there are possible numbers: .\r\nEach of these parties is going to be assigned in some way to exactly one\r\nnumber, at that, two distinct parties cannot receive the same number.The\r\nLittle Elephant Political Party members believe in the lucky digits and\r\n. They want to evaluate their chances in the elections. For that, they\r\nneed to find out, how many correct assignments are there, such that the\r\nnumber of lucky digits in the Little Elephant Political Party ballot\r\nnumber is strictly larger than the total number of lucky digits in the\r\nballot numbers of 6 other parties. Help the Little Elephant Political\r\nParty, calculate this number. As the answer can be rather large, print\r\nthe remainder from dividing it by .\r\n", "solutions": ["#include<stdio.h>\n#include<string.h>\n#include<ctype.h>\n#include<stdlib.h>\n#include<cmath>\n#include<assert.h>\n\n#define FO(i,s,e,p) for(int i=(s);i<(e);i+=p)\n#define FOD(i,s,e,p) for(int i=(s);i>(e);i-=p)\n\n\n#define FOR(i,s,e) FO(i,s,e,1)\n#define FORE(i,s,e) FOR(i,s,e+1)\n#define FORD(i,s,e) FOD(i,s,e,1)\n#define FORDE(i,s,e) FORD(i,s,e-1)\n\n#define ALL(i,s) for(__typeof((s).begin()) i=(s).begin();i!=(s).end();i++)\n\n#define MEM(tab,fill) memset(tab,fill,sizeof(tab))\n\n#include<iostream>\n#include<set>\n#include<vector>\n#include<string>\n#include<sstream>\n#include<stack>\n#include<queue>\n#include<algorithm>\n#include<utility>\n#include<bitset>\n#include<map>\n\nusing namespace std;\n#define ll long long\n#define inf ((1<<30)-1)\n#define deb(a) cout<<#a<<\" \"<<a<<endl\n#define pb push_back\n#define mp make_pair\n\n#define llu unsigned long long\n#define PI pair<ll,ll>\nint c[10];\nll dps[13][13];\n\n\n\nvector<int> dpf(ll n)\n{\n    dps[0][0]=1;\n    FORE(len,1,9)\n    FORE(dig,0,9)\n    FOR(luck,0,len)\n    dps[len][luck+c[dig]]+=dps[len-1][luck];\n\n\n    vector<int> vv;\n    while(n) vv.pb(n%10),n/=10;\n    vector<int> ret(10);\n\n    int sm=0;\n    FORDE(len,vv.size()-1,0){\n        FOR(dig,0,vv[len])\n        FORE(luck,0,len)\n            ret[luck+sm+c[dig]]+=dps[len][luck];\n        sm+=c[vv[len]];\n    }\n\n    ret[sm]++;\n    ret[0]--;\n    return ret;\n\n}\n\nvector<int> v;\nvoid solve(ll num)\n{\n    v=dpf(num);\n   // ALL(i,v) cout<<*i<<' ';\n}\nll res=0;\nint ass[10];\nint sum=0;\n#define MOD 1000000007\nvoid comp()\n{\n    ll prome=0;\n    FORE(i,sum+1,9) prome+=v[i];\n\n    FORE(i,0,sum){\n        int pep=ass[i];\n        ll rame=1;\n\n        ll sul=v[i];\n        FOR(x,0,pep) rame*=sul,sul--,rame%=MOD;\n        prome*=rame;\n        prome%=MOD;\n    }\n    res+=prome;\n    res%=MOD;\n\n\n}\n\n\nvoid fun(int dep)\n{\n    if(dep==0){\n        comp();\n        return;\n    }\n\n    FORE(i,0,9)\n    {\n        if(sum+i>8) break;\n        if(v[i]==ass[i]) continue;\n\n        ass[i]++;\n        sum+=i;\n\n        fun(dep-1);\n        sum-=i;\n        ass[i]--;\n    }\n}\n\nint main()\n{\n   // freopen(\"C:\\\\a\",\"r\",stdin);\n    c[4]=c[7]=1;\n    ll n;cin>>n;\n    solve(n);\n\n    fun(6);\n    cout<<res;\n\n\n\n\n\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "combinatorics", "dp", "math"], "dificulty": "1900", "interactive": false}