{"link": "https://codeforces.com//contest/216/problem/C", "problemId": "1599", "problem_idx": "C", "shortId": "216C", "contest_number": "216", "problem_submissions": {"E": [2009676, 2007456, 2010925, 2011846, 2010767, 2013186, 2012062, 2014949, 2013666, 2046735, 2013517], "D": [2008985, 2008016, 2009087, 2009267, 2009116, 2010292, 2010461, 2009515, 2010965, 2010788, 2008354, 2011910, 2011812, 2010997, 2011635, 2010429, 2010591], "C": [2008196, 2010650, 2010398, 2010245, 2009928, 2008042, 2009220, 2212789, 2010921, 2010250, 2009530, 2011922, 2009776, 2011084, 2009565, 2010436, 2011686, 2009858], "B": [2007383, 2008222, 2006806, 2008461, 2008911, 2011583, 2007848, 2008640, 2008312, 2007798, 2007852, 2009984, 2009151, 2011696, 2009696, 2009222, 2012291], "A": [2006576, 2008320, 2007244, 2007015, 2006474, 2492889, 2492882, 2006494, 2006484, 2006601, 2007349, 2006728, 2006555, 2006564, 2007269, 2006768, 2007828, 2006557, 2007513]}, "name": "C. Hiring Staff", "statement": "A new Berland businessman Vitaly is going to open a household\r\nappliances\u2019 store. All he\u2019s got to do now is to hire the staff.The store\r\nwill work seven days a week, but not around the clock. Every day at\r\nleast people must work in the store.Berland has a law that determines\r\nthe order of working days and non-working days. Namely, each employee\r\nmust work for exactly consecutive days, then rest for exactly days, then\r\nwork for more days and rest for more, and so on. Vitaly doesn\u2019t want to\r\nbreak the law. Fortunately, there is a loophole: the law comes into\r\nforce on the day when the employee is hired. For example, if an employee\r\nis hired on day , then he should work on days , , and so on. Day can be\r\nchosen arbitrarily by Vitaly.There is one more thing: the key to the\r\nstore. Berland law prohibits making copies of keys, so there is only one\r\nkey. Vitaly is planning to entrust the key to the store employees. At\r\nthe same time on each day the key must be with an employee who works\r\nthat day otherwise on this day no one can get inside the store. During\r\nthe day the key holder can give the key to another employee, if he also\r\nworks that day. The key will handed to the first hired employee at his\r\nfirst working day.Each employee has to be paid salary. Therefore, Vitaly\r\nwants to hire as few employees as possible provided that the store can\r\noperate normally on each day from to infinity. In other words, on each\r\nday with index from to infinity, the store must have at least working\r\nemployees, and one of the working employees should have the key to the\r\nstore.Help Vitaly and determine the minimum required number of\r\nemployees, as well as days on which they should be hired.\r\n", "solutions": ["#include <vector> \n#include <list> \n#include <map> \n#include <set> \n#include <deque> \n#include <vector> \n#include <list> \n#include <map> \n#include <set> \n#include <deque> \n#include <queue> \n#include <stack> \n#include <bitset> \n#include <algorithm> \n#include <functional> \n#include <numeric> \n#include <utility> \n#include <sstream> \n#include <iostream> \n#include <iomanip> \n#include <cstdio> \n#include <cmath> \n#include <cstdlib> \n#include <cctype> \n#include <string> \n#include <cstring> \n#include <ctime> \n\nusing namespace std;\n\nint main()\n{\n  int i,m,n,k,st;\n  vector<int> a;\n  scanf(\"%d%d%d\",&n,&m,&k);\n  a.clear();\n  st=0;\n  for (i=0;i<n+m;i++)\n  {\n    while (a.size()-st<k)\n      a.push_back(i+1);\n    while ((st<a.size())&&(i+2-a[st]>=n)) st++;\n    if (st==a.size()) a.push_back(i+1);\n  }\n  printf(\"%d\\n\",a.size());\n  for (i=0;i<a.size();i++)\n  {\n    if (i!=0) printf(\" \");\n    printf(\"%d\",a[i]);\n  }\n  printf(\"\\n\");\n}\n"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1800", "interactive": false}