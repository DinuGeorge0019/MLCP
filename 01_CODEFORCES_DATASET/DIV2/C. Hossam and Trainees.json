{
    "link": "https://codeforces.com//contest/1771/problem/C",
    "problemId": "1688879",
    "problem_idx": "C",
    "shortId": "1771C",
    "contest_number": "1771",
    "problem_submissions": {
        "E": [
            184786252,
            184768319,
            184791269,
            184791695,
            184799239,
            184789827,
            184804872,
            184797015,
            184779796,
            184780579,
            184774488,
            184784737,
            184789324,
            184905669
        ],
        "F": [
            184767458,
            184789428,
            184776697,
            184780762,
            184768498,
            184799203,
            184750590,
            184788854,
            184819486,
            184733731,
            184782224,
            184765553,
            184837754,
            184787637,
            184786087,
            184781451,
            186375922,
            184885288,
            184793012
        ],
        "D": [
            184754420,
            184746285,
            184751879,
            184767199,
            184796187,
            184770689,
            184788363,
            184741723,
            184762124,
            184781810,
            184734475,
            184771306,
            184784877,
            184767214,
            184757752,
            184754682,
            184762986,
            184732202,
            184885253,
            184786038
        ],
        "C": [
            184742304,
            184730753,
            184731670,
            184750562,
            184746404,
            184744176,
            184732056,
            186784755,
            186783506,
            185248092,
            184831291,
            184725362,
            184737633,
            184749397,
            184807012,
            184806808,
            184806589,
            184806495,
            184750795,
            184733621,
            184739758,
            184731026,
            184753323,
            184736577,
            184746147,
            184753799,
            184885221,
            184836201,
            184744786,
            184740528
        ],
        "B": [
            184723301,
            184725456,
            184722508,
            184735259,
            184724915,
            184727876,
            184722523,
            184720717,
            184727802,
            184728402,
            184761586,
            184727553,
            184722898,
            184733183,
            184726202,
            184743742,
            184729968,
            184744730,
            184885179,
            184732333
        ],
        "A": [
            184718639,
            184717667,
            184718126,
            184729979,
            184719322,
            184720803,
            184717674,
            184717800,
            184721090,
            184719864,
            184753140,
            184718839,
            184717731,
            184725439,
            184718841,
            184718297,
            184718595,
            184738977,
            184885137,
            184718315
        ]
    },
    "name": "C. Hossam and Trainees",
    "statement": "Hossam has n trainees. He assigned a number a_i for the i-th trainee. A\r\npair of the i-th and j-th (i\r\nneq j) trainees is called successful if there is an integer x (x\r\ngeq 2), such that x divides a_i, and x divides a_j.Hossam wants to know\r\nif there is a successful pair of trainees.Hossam is very tired now, so\r\nhe asks you for your help!\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define ll long long\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define sz(x) (int)(x).size()\nusing namespace std;\n\n// вправо, вниз, влево, вверх\nint dx[] = {0, 1, 0, -1};\nint dy[] = {1, 0, -1, 0};\n\n// ход конем\n//int dx[] = {-2, -1, 1, 2, 2, 1, -1, -2};\n//int dy[] = {1, 2, 2, 1, -1, -2, -2, -1};\n\nmt19937 rnd(chrono::system_clock::now().time_since_epoch().count());\nmt19937_64 rnd64(chrono::system_clock::now().time_since_epoch().count());\nint rndInteger (int l, int r) {\n    return uniform_int_distribution<int> (l, r)(rnd);\n}\n\nconst int MOD = (int) 998244353;\nconst int N = (int) 1e5 + 7;\n\nvector<int> primes;\nint used[N];\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    for (int i = 2; i < N; ++i) {\n        if(!used[i]) {\n            primes.push_back(i);\n            for (int j = i; j < N; j += i)\n                used[j] = 1;\n        }\n    }\n\n    int T;\n    cin >> T;\n    while(T--) {\n        int n;\n        cin >> n;\n        vector<int> a(n);\n        for (auto &e : a) cin >> e;\n        sort(a.begin(), a.end());\n\n        int ptr = 0;\n        while(ptr < n && a[ptr] == 1) ++ptr;\n        if(ptr >= n - 1) {\n            cout << \"NO\\n\";\n            continue;\n        }\n        bool good = false;\n        for (int i = ptr + 1; i < n; ++i) {\n            if(a[i] == a[i-1])\n                good = true;\n        }\n        set<int> s;\n        int cnt = 0;\n        for (int i = ptr; i < n && good == false; ++i) {\n            int x = a[i];\n            for (int p : primes) {\n                if(p * p > x) break;\n                if(x % p == 0) {\n                    ++cnt;\n                    s.insert(p);\n                    if(sz(s) != cnt) {\n                        good = true;\n                        break;\n                    }\n\n                    while(x % p == 0) x /= p;\n                }\n            }\n            \n            if(x > 1) {\n                ++cnt;\n                s.insert(x);\n                if(sz(s) != cnt) {\n                    good = true;\n                    break;\n                }\n            }\n        }\n\n        if(good) {\n            cout << \"YES\\n\";\n        } else {\n            cout << \"NO\\n\";\n        }\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Hossam and Trainees.json",
    "editorial_link": "https://codeforces.com//blog/entry/110092",
    "editorial": "If exists such that divides and divides then exists prime number such\r\nthat and divides . We can choose any prime divisor of .So, letâs\r\nfactorize all numbers and check, if two of them divides one prime\r\nnumber. We can use default factorization, and it will be . Itâs too\r\nlong, so just calculate prime numbers and check if divides this numbers.\r\nIt will be - fast enouth.\r\n",
    "hint": []
}