{
    "link": "https://codeforces.com//contest/1734/problem/A",
    "problemId": "1552468",
    "problem_idx": "A",
    "shortId": "1734A",
    "contest_number": "1734",
    "problem_submissions": {
        "F": [
            173185632,
            175218475,
            173190546,
            173191658,
            173196355,
            173188817,
            173202455,
            173187697,
            173194085,
            173183123,
            173202233,
            173182648,
            173206619,
            173206031,
            173205548,
            173214371,
            173208785,
            173211522,
            173212671,
            173216120,
            173216610
        ],
        "E": [
            173175699,
            173166069,
            173180507,
            173192080,
            173179852,
            173184971,
            173197330,
            173182409,
            173189641,
            173194573,
            173204944,
            173179755,
            173194867,
            173195446,
            173190898,
            173195535,
            173185614,
            173194125,
            173192157,
            173195124
        ],
        "D": [
            173172113,
            173184362,
            173173933,
            173177548,
            173199975,
            173194507,
            173189936,
            173202354,
            173195516,
            173191220,
            173189692,
            173195961,
            173190592,
            173192533,
            173179112,
            173186768,
            173197574,
            173186962,
            173186353,
            173189234
        ],
        "C": [
            173171420,
            173173245,
            173168676,
            173179830,
            173175634,
            173167876,
            173187173,
            173175996,
            173196980,
            173169255,
            173195772,
            173170163,
            173177695,
            173173390,
            173174005,
            173175329,
            173173990,
            173179546,
            173179107,
            173169662
        ],
        "B": [
            173169227,
            173171175,
            173193336,
            173168846,
            173171766,
            173171866,
            173178703,
            173171564,
            173199117,
            173175233,
            173193770,
            173167986,
            173174104,
            173170609,
            173170567,
            173169827,
            173173815,
            173175076,
            173172718,
            173176884
        ],
        "A": [
            173165060,
            173168188,
            173166559,
            173165334,
            173167696,
            173173794,
            173167259,
            173167875,
            173200226,
            173178050,
            173191224,
            173165056,
            173168611,
            173165867,
            173165345,
            173165147,
            173168349,
            173167419,
            173166169,
            173173512
        ]
    },
    "name": "A. Select Three Sticks",
    "statement": "You are given n sticks with positive integral length a_1, a_2,\r\nldots, a_n.You can perform the following operation any number of times\r\n(possibly zero): choose one stick, then either increase or decrease its\r\nlength by 1. After each operation, all sticks should have positive\r\nlengths. What is the minimum number of operations that you have to\r\nperform such that it is possible to select three of the n sticks and use\r\nthem without breaking to form an ?An is a triangle where all of its\r\nthree sides have the same length.\r\n",
    "solutions": [
        "// Problem: A. Select Three Sticks\n// Contest: Codeforces Round #822 (Div. 2)\n// URL: https://codeforces.com/contest/1734/problem/A\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//author: wuge with noi2022 cu\n//https://www.luogu.com.cn/team/48234\n#include<bits/stdc++.h>\nusing namespace std;\n#define M998 const int mod=998244353\n#define M197 const int mod=1e9+7\n#define int long long\n#define genshin getchar\n#define impact isdigit\ninline int read()\n{\n     int shaya=0,wugecu=1;//5 spaces\n  char cirno_9=genshin();//2 spaces\n        while(!impact(cirno_9))//8 spaces\n  {if(cirno_9=='-')wugecu=-1;cirno_9=genshin();}//2 spaces\n  while(impact(cirno_9)) shaya=shaya*10+cirno_9-'0',cirno_9=genshin();//2 spaces\n return shaya*wugecu;//1 space\n}\nint a[1000003];\nvoid Meyi()\n{\n\tint n=read();\n\tfor(int i=1; i<=n; ++i) a[i]=read();\n\tsort(a+1,a+n+1);\n\tint aa=1e18;\n\tfor(int i=3; i<=n; ++i)\n\t{\n\t\taa=min(a[i-1]-a[i-2]+a[i]-a[i-1],aa);\n\t}\n\tprintf(\"%lld\\n\",aa);\n}\nsigned main()\n{\n\tint miHoYo=read();\n\twhile(miHoYo--) Meyi();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Select Three Sticks.json",
    "editorial_link": "https://codeforces.com//blog/entry/107231",
    "editorial": "We first sort the array in non-decreasing order. Denote the indices of\r\nthe elements that we choose from to be , , and , where , and the final\r\nvalue (after performing the operations) of the concerned elements to be\r\n. The minimum required number of operations is then . It is well-known\r\nthat such expression attains its minimum value when is the median of , ,\r\nand . Since the array has already been sorted, it is best to assign to\r\nbe . Our expression then becomes . We would like to minimize the value\r\nof , which implies should be as small as possible since is sorted. It is\r\nclear that taking would minimize the value of the expression. Similarly,\r\nwe can show that we can take to minimize the value of the expression.\r\nTherefore, the only possible values of the triplets are of the form for\r\npositive integers , and we can iterate through all such triplets and\r\nfind the best one. The time complexity is per case due to sorting. Code\r\nin C++\r\n"
}