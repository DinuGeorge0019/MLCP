{
    "link": "https://codeforces.com//contest/447/problem/A",
    "problemId": "11394",
    "problem_idx": "A",
    "shortId": "447A",
    "contest_number": "447",
    "problem_submissions": {
        "E": [
            7084046,
            7087165,
            7086012,
            7107031,
            7088335
        ],
        "D": [
            7080732,
            7079815,
            7083822,
            7083834,
            7085600,
            7097008,
            7086688,
            7084686,
            7086053,
            7083895,
            7086461,
            7089129,
            7088930,
            7089222,
            7089284,
            7087016,
            7089423
        ],
        "C": [
            7078096,
            7076875,
            7077066,
            7078076,
            7077877,
            7079534,
            7081397,
            7082455,
            7080387,
            7085378,
            7082941,
            7079168,
            7082968,
            7081821,
            7082878,
            7082053,
            7087589,
            7079590
        ],
        "B": [
            7076707,
            7075254,
            7075472,
            7076218,
            7075554,
            7075342,
            7077508,
            7076837,
            7076067,
            7075642,
            7075896,
            7082177,
            7078872,
            7077244,
            7076799,
            7078894,
            7077501,
            7076959
        ],
        "A": [
            7074384,
            7074446,
            7074355,
            7074389,
            7074552,
            7074411,
            7075432,
            7075052,
            7074452,
            7074502,
            7074400,
            7080033,
            7075081,
            7075723,
            7074815,
            7076200,
            7075918,
            7075090
        ]
    },
    "name": "A. DZY Loves Hash",
    "statement": "DZY has a hash table with buckets, numbered from to . He wants to insert\r\nnumbers, in the order they are given, into the hash table. For the -th\r\nnumber , DZY will put it into the bucket numbered , where is the hash\r\nfunction. In this problem we will assume, that . Operation denotes\r\ntaking a remainder after division by .However, each bucket can contain\r\nno more than one element. If DZY wants to insert an number into a bucket\r\nwhich is already filled, we say a \"conflict\" happens. Suppose the first\r\nconflict happens right after the -th insertion, you should output . If\r\nno conflict happens, just output .\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nchar ch;\n\nvoid read(int &x)\n{\n\tx=0;\n\tch=getchar();\n\twhile (ch<=32) ch=getchar();\n\twhile (ch>32) x=x*10+ch-48,ch=getchar();\n}\n\nint a[1000];\n\nint main()\n{\n\tint p,n;\n\tread(p);read(n);\n\tint i;\n\tfor (i=1;i<=n;i++) {\n\t\tint x;\n\t\tread(x);\n\t\tif (++a[x%p]>1) break;\n\t}\n\tif (i<=n) {\n\t\tprintf(\"%d\\n\",i);\n\t} else {\n\t\tputs(\"-1\");\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. DZY Loves Hash.json",
    "editorial_link": "https://codeforces.com//blog/entry/13036",
    "editorial": "We just need an array to store the numbers inserted and check whether a\r\nconflict happens. Itâs easy.\r\n",
    "hint": []
}