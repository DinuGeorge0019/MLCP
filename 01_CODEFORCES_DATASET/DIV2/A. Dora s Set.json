{
    "link": "https://codeforces.com//contest/2007/problem/A",
    "problemId": "2843727",
    "problem_idx": "A",
    "shortId": "2007A",
    "contest_number": "2007",
    "problem_submissions": {
        "F": [
            278829889,
            278836909,
            278834397,
            278833574,
            278834465,
            278838066,
            278835361,
            278842334,
            278824105,
            278831692,
            278838908,
            278836968,
            278839548,
            278831301,
            278823086,
            278840296,
            278841111,
            278842601
        ],
        "E": [
            278819100,
            278812531,
            278814740,
            278819903,
            278822295,
            278825462,
            278818230,
            278822054,
            278840929,
            278825485,
            278828447,
            278833891,
            278799229,
            278838138,
            278839019,
            278828512,
            278831250,
            278831388,
            278817583,
            278815781
        ],
        "D": [
            278799468,
            278799575,
            278803157,
            278799799,
            278806603,
            278804232,
            278798668,
            278803495,
            278817444,
            278796667,
            278805268,
            278809906,
            278809488,
            278817233,
            278829523,
            278808086,
            278804865,
            278814312,
            278803553,
            278802384
        ],
        "C": [
            278780728,
            278781086,
            278788227,
            278789504,
            278792493,
            278790375,
            278787480,
            278788281,
            278794086,
            278818650,
            278789734,
            278788169,
            278787429,
            278793363,
            278793381,
            278800135,
            278810824,
            278793278,
            278788023,
            278790440
        ],
        "B": [
            278776959,
            278776203,
            278777907,
            278784810,
            278782747,
            278782953,
            278836748,
            278778704,
            278778803,
            278775898,
            278785508,
            278778671,
            278810717,
            278784596,
            278792140,
            278786468,
            278796546,
            278777191,
            278777412,
            278786342
        ],
        "A": [
            278773744,
            278773692,
            278774098,
            278774399,
            278775464,
            278777680,
            278775772,
            278775250,
            278773819,
            278773814,
            278774248,
            278884949,
            278773664,
            278780595,
            278777213,
            278780108,
            278778288,
            278781544,
            278774028,
            278774012,
            278778642
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/133382",
    "editorial": "In a pair of there are at least two odd integers and at most one even\r\ninteger. Thatâs because if two even integers occur at the same time,\r\ntheir will be at least .Itâs optimal to make full use of the odd\r\nintegers, so we try to choose two odd integers in a pair. In fact, this\r\nis always possible. Note that two consecutive odd integers always have ,\r\nand consecutive integers also have , so we can choose three consecutive\r\nintegers in the form of . We can see that this is always optimal.\r\nTherefore, the answer is: the result of dividing the number of odd\r\nnumbers in by and rounding down.The time complexity is: or .\r\n",
    "name": "A. Dora s Set",
    "statement": "Dora has a set s containing integers. In the beginning, she will put all\r\nintegers in [l, r] into the set s. That is, an integer x is initially\r\ncontained in the set if and only if l\r\nleq x\r\nleq r. Then she allows you to perform the following operations: Select\r\nthree integers a, b, and c from the set s, such that\r\ngcd(a, b) =\r\ngcd(b, c) =\r\ngcd(a, c) = 1^\r\ndagger. Then, remove these three integers from the set s. What is the\r\nmaximum number of operations you can perform?^\r\ndaggerRecall that\r\ngcd(x, y) means the greatest common divisor of integers x and y.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std; int main() {\tios::sync_with_stdio(0);\tcin.tie(0); cout.tie(0);\tint T;\tfor (cin >> T; T; T--) {\t\tint l, r; cin >> l >> r;\t\tint ct = (r + 1) / 2 - l / 2;\t\tcout << ct / 2 << '\\n';\t}\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Dora s Set.json",
    "hint": [
        "Hint 1 How many odd integers are there in a pair ? Answer At least 2.",
        "Hint 2 It's always better to put exactly odd integers and exactly even integer in one pair of . Is there a way to always choose optimal ?",
        "Hint 3 Try consecutive integers."
    ]
}