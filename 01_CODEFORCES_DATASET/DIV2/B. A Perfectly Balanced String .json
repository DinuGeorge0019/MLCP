{"link": "https://codeforces.com//contest/1673/problem/B", "problemId": "1385664", "problem_idx": "B", "shortId": "1673B", "contest_number": "1673", "problem_submissions": {"E": [155426965, 155417061, 155442389, 155435971, 155444716, 155445002, 155444871, 155514328, 155514309, 155514225, 155443263, 155444297, 155443581, 155433854], "F": [155419208, 155424822, 155430193, 155426235, 155421394, 155428770, 155436120, 155468393, 155433714, 155432038, 155436911, 155434672, 155436663, 155437291, 155437403, 155444380, 155421502, 155466705, 155436336], "D": [155415117, 155435345, 155420108, 155439489, 155431441, 155419630, 155415726, 155421120, 155422405, 155419806, 155421729, 155424346, 155424705, 155419720, 155443639, 155434940, 155418827, 155423765], "C": [155404978, 155404876, 155407310, 155404678, 155403723, 155410318, 155407177, 155407649, 155410425, 155412404, 155411432, 155412241, 155405106, 155408638, 155409170, 155443684, 155416480, 155405320, 155408554], "B": [155402768, 155402072, 155401370, 155411423, 155405962, 155405267, 155404158, 155402546, 155402518, 155406241, 155407263, 155417097, 155402117, 155403200, 155414493, 155417214, 155402941, 155413813], "A": [155398139, 155398122, 155398102, 155398465, 155398314, 155398797, 155398162, 155398613, 155398972, 155398376, 155400350, 155398178, 155398450, 155400124, 155418014, 155398258, 155398425]}, "name": "B. A Perfectly Balanced String ", "statement": "Let\u2019s call a string s perfectly balanced if for all possible triplets\r\n(t,u,v) such that t is a non-empty substring of s and u and v are\r\ncharacters present in s, the difference between the frequencies of u and\r\nv in t is not more than 1.For example, the strings \"\" and \"\" are\r\nperfectly balanced but \"\" is not because for the triplet (\"\",\u201d,\u201d), the\r\ncondition is not satisfied.You are given a string s consisting of\r\nlowercase English letters only. Your task is to determine whether s is\r\nperfectly balanced or not.A string b is called a substring of another\r\nstring a if b can be obtained by deleting some characters (possibly 0)\r\nfrom the start and some characters (possibly 0) from the end of a.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,l,r) for(int i=(l);i<=(r);i++)\n#define per(i,l,r) for(int i=(l);i>=(r);i--)\n#define ll long long\n#define ull unsigned long long\n#define pii pair<int,int>\n#define mset(s,t) memset(s,t,sizeof(s))\n#define mcpy(s,t) memcpy(s,t,sizeof(t))\n#define SZ(x) ((int)x.size())\n#define pb push_back\n#define eb emplace_back\n#define fir first\n#define sec second\n\ntemplate<class T1,class T2>bool ckmax(T1 &a,T2 b){if(a<b)return a=b,1;else return 0;}\ntemplate<class T1,class T2>bool ckmin(T1 &a,T2 b){if(a>b)return a=b,1;else return 0;}\n\ninline int read(){\n    int x=0,f=0;char ch=getchar();\n    while(!isdigit(ch))f|=ch=='-',ch=getchar();\n    while(isdigit(ch))x=10*x+ch-'0',ch=getchar();\n    return f?-x:x;\n}\ntemplate<typename T>void print(T x){\n    if(x<0)putchar('-'),x=-x;\n    if(x>=10)print(x/10);\n    putchar(x%10+'0');\n}\ntemplate<typename T>void print(T x,char ch){\n    print(x),putchar(ch);\n}\n\nconst int N=200005;\n\nvector<int> pt[26];\nchar a[N];\nint n;\n\nvoid solve(){\n    scanf(\"%s\",a+1);\n    n=strlen(a+1);\n    for(int i=0;i<26;i++)pt[i].clear();\n    for(int i=1;i<=n;i++)pt[a[i]-'a'].pb(i);\n    for(int x=0;x<26;x++)if(SZ(pt[x])){\n        for(int y=x+1;y<26;y++)if(SZ(pt[y])){\n            int i=0,j=0;\n            int now=0,mx=0,mn=0;\n            while(i<SZ(pt[x])||j<SZ(pt[y])){\n                if(i<SZ(pt[x])&&(j==SZ(pt[y])||pt[x][i]<pt[y][j])){\n                    i++;\n                    now++;\n                }else{\n                    j++;\n                    now--;\n                }\n                ckmax(mx,now),ckmin(mn,now);\n            }\n            if(mx-mn>1){\n                puts(\"NO\");\n                return;\n            }\n        }\n    }\n    puts(\"YES\");\n}\n\nint main(){\n    int T=read();\n    while(T--)solve();\n    return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "greedy", "strings"], "dificulty": "1100", "interactive": false}