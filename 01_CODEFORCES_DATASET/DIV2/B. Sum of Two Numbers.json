{
    "link": "https://codeforces.com//contest/1788/problem/B",
    "problemId": "1767772",
    "problem_idx": "B",
    "shortId": "1788B",
    "contest_number": "1788",
    "problem_submissions": {
        "F": [
            192929323,
            192944697,
            192947972,
            192947585,
            192932378,
            192933439,
            192954011,
            193003406,
            192956724,
            192960550,
            192961107,
            192951794,
            192975658,
            193004734,
            193000099,
            192953392,
            192971360,
            193157814,
            192925320
        ],
        "E": [
            192914791,
            192927615,
            192927556,
            192934590,
            192889260,
            192914229,
            192917631,
            192924823,
            192930869,
            192943768,
            192931128,
            192903797,
            192921531,
            193004713,
            192925760,
            192927056,
            192925608,
            192917135,
            192939766,
            192904744
        ],
        "D": [
            192905122,
            192919739,
            192914784,
            192910155,
            192955552,
            192927341,
            192930171,
            192916598,
            192938656,
            192928104,
            192958419,
            192917109,
            192914086,
            193004704,
            192914561,
            192936729,
            192911543,
            192926368,
            192906600
        ],
        "C": [
            192896754,
            192903243,
            192891543,
            192895173,
            192914614,
            192879823,
            192902740,
            192906894,
            192909558,
            192922632,
            192887922,
            192904823,
            193004689,
            192890036,
            192896137,
            192904090,
            192893814,
            192946267
        ],
        "B": [
            192885653,
            192880984,
            192883005,
            192891309,
            192902865,
            192884638,
            192883772,
            192879778,
            192880217,
            192885391,
            192892745,
            192885295,
            192888862,
            193004678,
            192878668,
            192883423,
            192882746,
            192889266,
            192878522,
            192940441
        ],
        "A": [
            192874357,
            192874502,
            192872686,
            192876928,
            192873442,
            192872154,
            192872535,
            192873765,
            192873755,
            192872250,
            192873788,
            192879133,
            193004648,
            192872439,
            192874189,
            192873135,
            192877988,
            192872696,
            192938096
        ]
    },
    "name": "B. Sum of Two Numbers",
    "statement": "The sum of digits of a non-negative integer a is the result of summing\r\nup its digits together when written in the decimal system. For example,\r\nthe sum of digits of 123 is 6 and the sum of digits of 10 is 1. In a\r\nformal way, the sum of digits of\r\ndisplaystyle a=\r\nsum_{i=0}^{\r\ninfty} a_i\r\ncdot 10^i, where 0\r\nleq a_i\r\nleq 9, is defined as\r\ndisplaystyle\r\nsum_{i=0}^{\r\ninfty}{a_i}.Given an integer n, find two non-negative integers x and y\r\nwhich satisfy the following conditions. x+y=n, and the sum of digits of\r\nx and the sum of digits of y differ by at most 1. It can be shown that\r\nsuch x and y always exist.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline int in(){\n    int x;\n    scanf(\"%d\",&x);\n    return x;\n}\nvoid solve(){\n    int n=in();\n    int x=0,y=0,c0=0,c1=0,pw=1;\n    while(n){\n        int p=n%10;\n        if(p%2==0)x+=p/2*pw,y+=p/2*pw;\n        else{\n            if(c0<=c1){\n                c0++,x+=(p/2+1)*pw,y+=p/2*pw;\n            }else{\n                c1++,y+=(p/2+1)*pw,x+=p/2*pw;\n            }\n        }\n        n/=10,pw*=10;\n    }\n    cout<<x<<' '<<y<<endl;\n}\nint main(){\n    int T=in();\n    while(T--)solve();\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "probabilities"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Sum of Two Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/112584",
    "editorial": "Let\u00e2\u0080\u0099s assume that there is no carry while adding and . Denote , , in\r\ndecimal system. The condition can be changed as the following\r\ncondition.- for all . - Sum of and sum of should differ by at most .If\r\nis even, let . Otherwise, let and be or . By alternating between and ,\r\nwe can satisfy the condition where sum of and sum of differ by at most\r\n.There is an alternative solution. If is even, divide it into (). If\r\nremainder of divided by is not , divide it into (). If remainder of\r\ndivided by is , recursively find an answer for which is () and the\r\nanswer will be () or () depending on what number has a bigger sum of\r\ndigits.The following solution has a countertest.1. Trying to find and by\r\nbruteforce from (). 2. Trying to find and by bruteforce from ()A\r\nsolution that randomly finds () passes.\r\n"
}