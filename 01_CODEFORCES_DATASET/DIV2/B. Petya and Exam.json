{"link": "https://codeforces.com//contest/832/problem/B", "problemId": "115518", "problem_idx": "B", "shortId": "832B", "contest_number": "832", "problem_submissions": {"C": [28850414, 28839556, 28849218, 28970707, 28860425, 28882532], "B": [28842559, 28832195, 28832637, 28833745, 28835678, 28833935, 28833416, 28838017, 28839620, 28834185, 28834397, 28835866, 28831820, 28836424, 28834235, 28834452, 28834561, 28834258], "E": [28840011, 28847209, 28846202, 28846322, 28851079, 28847674, 28848843, 28861574, 29694590], "D": [28833290, 28844072, 28839533, 28841064, 28839461, 28842570, 28835402, 28843358, 28835918, 28834140, 28836636, 28838484, 28838783, 28839031, 28841097, 28844392, 28841838, 28840397, 28840613, 28840691], "A": [28827596, 28827231, 28829917, 28828126, 28828610, 28830168, 28827850, 28827000, 28836168, 28827377, 28826850, 28827715, 28827016, 28827260, 28826966, 28827167, 28828034, 28826934, 28827600]}, "name": "B. Petya and Exam", "statement": "It\u2019s hard times now. Today Petya needs to score 100 points on\r\nInformatics exam. The tasks seem easy to Petya, but he thinks he lacks\r\ntime to finish them all, so he asks you to help with one..There is a\r\nglob pattern in the statements (a string consisting of lowercase English\r\nletters, characters \"\" and \"\"). It is known that character \"\" occurs in\r\nthe pattern.Also, query strings are given, it is required to determine\r\nfor each of them if the pattern matches it or not.Everything seemed easy\r\nto Petya, but then he discovered that .A pattern matches a string if it\r\nis possible to replace each character \"\" with one lowercase English\r\nletter, and the character \"\" (if there is one) with any, including\r\nempty, string of lowercase English letters, so that the resulting string\r\nis the same as the given string.The good letters are given to Petya. All\r\nthe others are bad.\r\n", "solutions": ["#include<stdio.h>\n#include<string.h>\n\nint isgood[26]; char gd[30], wild[101010]; int wcn, asix=-1;\nchar str[101010]; int len;\n\nint match(){\n\tif(asix < 0){\n\t\tif(len != wcn) return 0;\n\t\tfor(int i=0; i<len; i++){\n\t\t\tif(wild[i] == '?' && !isgood[str[i]-'a']) return 0;\n\t\t\tif(wild[i] != '?' && str[i]!=wild[i]) return 0;\n\t\t}\n\t\treturn 1;\n\t}\n\tif(len < wcn-1) return 0;\n\tfor(int i=0; i<asix; i++){\n\t\tif(wild[i] == '?' && !isgood[str[i]-'a']) return 0;\n\t\tif(wild[i] != '?' && str[i]!=wild[i]) return 0;\n\t}\n\tfor(int i=asix+1; i<wcn; i++){\n\t\tint j = len-1 - (wcn-1 - i);\n\t\tif(wild[i] == '?' && !isgood[str[j]-'a']) return 0;\n\t\tif(wild[i] != '?' && str[j]!=wild[i]) return 0;\n\t}\n\tfor(int i=asix; i<len-1 - (wcn-1 - (asix+1)); i++){\n\t\tif(isgood[str[i]-'a']) return 0;\n\t}\n\treturn 1;\n}\n\nint main(){\n\tscanf(\"%s\\n%s\", gd, wild); wcn = strlen(wild);\n\tfor(int i=0; gd[i]; i++) isgood[gd[i]-'a']=1;\n\tfor(int i=0; i<wcn; i++){\n\t\tif(wild[i] == '*') asix = i;\n\t}\n\tint Q;\n\tfor(scanf(\"%d\",&Q); Q--;){\n\t\tscanf(\"\\n%s\", str); len=strlen(str);\n\t\tputs(match() ? \"YES\" : \"NO\");\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1600", "interactive": false}