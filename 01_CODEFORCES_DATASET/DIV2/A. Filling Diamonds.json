{
    "link": "https://codeforces.com//contest/1339/problem/A",
    "problemId": "590526",
    "problem_idx": "A",
    "shortId": "1339A",
    "contest_number": "1339",
    "problem_submissions": {
        "E": [
            76376836,
            76387473,
            76384887,
            76379831,
            76388585,
            76390578,
            76396660,
            76387000,
            76387243,
            76398417,
            76396262,
            76393298,
            76399344,
            76397428,
            76394900,
            76392890,
            76397397
        ],
        "D": [
            76366206,
            76361616,
            76361489,
            76362609,
            76370115,
            76368889,
            76363614,
            76372647,
            76369118,
            76367884,
            76374852,
            76373935,
            76373663,
            76374136,
            76369373,
            76371535,
            76374633
        ],
        "C": [
            76348562,
            76344606,
            76350287,
            76349364,
            76346531,
            76351575,
            76343954,
            76360371,
            76355938,
            76349819,
            76351779,
            76350689,
            76348249,
            76354286,
            76352877,
            76346445,
            76346553
        ],
        "B": [
            76343501,
            76338131,
            76337793,
            76336924,
            76339593,
            76343198,
            76337765,
            76339336,
            76344314,
            76341691,
            76343582,
            76339210,
            76341443,
            76348496,
            76344625,
            76338360,
            76339452
        ],
        "A": [
            76339423,
            76333974,
            76334483,
            76333757,
            76334414,
            76335125,
            76333704,
            76335982,
            76335394,
            76336250,
            76335663,
            76334669,
            76335712,
            76339115,
            76336582,
            76353895,
            76335154
        ]
    },
    "name": "A. Filling Diamonds",
    "statement": "You have integer n. Calculate how many ways are there to fully cover\r\nbelt-like area of 4n-2 triangles with diamond shapes. Diamond shape\r\nconsists of two triangles. You can move, rotate or flip the shape, but\r\nyou cannot scale it. 2 coverings are different if some 2 triangles are\r\ncovered by the same diamond shape in one of them and by different\r\ndiamond shapes in the other one.Please look at pictures below for better\r\nunderstanding. On the left you can see the diamond shape you will use,\r\nand on the right you can see the area you want to fill. These are the\r\nfigures of the area you want to fill for n = 1, 2, 3, 4. You have to\r\nanswer t independent test cases.\r\n",
    "solutions": [
        "ï»¿#include<bits/stdc++.h>\n#include <array>\nusing namespace std;\nusing ULL = unsigned long long;\nusing UL = unsigned;\nusing LL = long long;\n#define rep(i, n) for(UL i = 0; i < (n); i++)\n\ntemplate<class Ty>\nusing passive_queue = priority_queue<Ty, vector<Ty>, greater<Ty>>;\n\nstruct Problem {\n\n\tvoid Solve() {\n\t\tUL Q; cin >> Q;\n\t\trep(i, Q) {\n\t\t\tUL N; cin >> N;\n\t\t\tcout << N << endl;\n\t\t}\n\t}\n\n\tProblem();\n};\nint main() {\n\tunique_ptr<Problem> p(new Problem());\n\tp->Solve();\n\treturn 0;\n}\nProblem::Problem() {\n\tcout << fixed << setprecision(10);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Filling Diamonds.json",
    "editorial_link": "https://codeforces.com//blog/entry/75913",
    "editorial": "The key observation of this problem is, wherever you put vertical\r\ndiamond at some point, all other places are uniquely placed by\r\nhorizontal diamonds like picture below. There are places you can put\r\nvertical diamond, so answer is for each test case.\r\n",
    "hint": []
}