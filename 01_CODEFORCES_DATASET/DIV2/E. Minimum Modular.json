{"link": "https://codeforces.com//contest/304/problem/E", "problemId": "2992", "problem_idx": "E", "shortId": "304E", "contest_number": "304", "problem_submissions": {"E": [3710988, 3969346, 3717245], "C": [3707907, 3707880, 3707375, 3708064, 3708230, 3707930, 3708271, 3707829, 3708408, 3708102, 3708024, 3708702, 3708560, 3707747, 3708435, 3708042, 3709902, 3708391], "B": [3707009, 3706928, 3706552, 3707725, 3706556, 3707415, 3707167, 3707382, 3707745, 3707406, 3707596, 3710142, 3707441, 3707495, 3707044], "A": [3706218, 3706352, 3706086, 3706215, 3706825, 3706168, 3706228, 3706531, 3706529, 3706177, 3706714, 3706908, 3972383, 3972353, 3972349, 3972342, 3706303, 3706339, 3707915, 3706673, 3706201, 3706866], "D": [3709528, 3708826, 3709122, 3710924, 3709477, 3709474, 3709569, 3709435, 3709766, 3709473, 3709794, 3709959, 3709120, 3710109, 3709844, 3709284, 3710737]}, "name": "E. Minimum Modular", "statement": "You have been given distinct integers . You can remove at most of them.\r\nFind the minimum modular , so that for every pair of the remaining\r\nintegers , the following unequality holds: .\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#define MaxN 1000010\n#define MaxNode 14000010\nusing namespace std;\nstruct state{\n    int u,v;\n}sta[MaxNode];\nint N,K,Total;\nint aa[MaxN],prep[MaxNode],head[MaxN],f[MaxN],nowpoi[MaxN],nowTotal,ret,maxi;\nint cntt[MaxN];\nbool UsedPoi[MaxN],iss[MaxN];\nint Abs(int a){return a>0?a:-a;}\nint find(int x){return f[x]==x?f[x]:f[x]=find(f[x]);}\nint main(){\n    int i,j,k;\n    scanf(\"%d%d\",&N,&K);\n    for(i=1;i<=N;++i){\n        scanf(\"%d\",&aa[i]);\n        if(aa[i]>maxi)\n            maxi=aa[i];\n    }\n    ++maxi;\n    for(i=1;i<=N;++i){\n        for(j=1;j<=N;++j){\n            int dd=Abs(aa[i]-aa[j]);\n            if(!iss[dd]){\n                ++cntt[dd];\n                iss[dd]=1;\n            }\n        }\n        for(j=1;j<=N;++j){\n            int dd=Abs(aa[i]-aa[j]);\n            iss[dd]=0;\n        }\n    }\n    for(i=1;i<=N;++i){\n        for(j=i+1;j<=N;++j){\n            int dd=Abs(aa[i]-aa[j]);\n            sta[++Total].u=i;sta[Total].v=j;\n            prep[Total]=head[dd];\n            head[dd]=Total;\n        }\n    }\n    for(i=1;i<=N;++i)\n        f[i]=i;\n    int nowflag=0;\n    for(i=1;i<=maxi;++i){\n        nowTotal=0;\n        ret=0;\n        nowflag=0;\n        for(j=1;j*i<=maxi;++j){\n            if(cntt[j*i]>2*K){\n                nowflag=1;\n                break;\n            }\n            for(k=head[j*i];k;k=prep[k]){\n                if(find(sta[k].u)!=find(sta[k].v)){\n                    f[find(sta[k].u)]=find(sta[k].v);\n                    --ret;\n                }\n                if(!UsedPoi[sta[k].u]){\n                    ++ret;\n                    UsedPoi[sta[k].u]=1;\n                    nowpoi[++nowTotal]=sta[k].u;\n                }\n                if(!UsedPoi[sta[k].v]){\n                    ++ret;\n                    UsedPoi[sta[k].v]=1;\n                    nowpoi[++nowTotal]=sta[k].v;\n                }\n                if(nowTotal>2*K){\n                    nowflag=1;\n                    break;\n                }\n            }\n        }\n        for(j=1;j<=nowTotal;++j){\n            f[nowpoi[j]]=nowpoi[j];\n            UsedPoi[nowpoi[j]]=0;\n        }\n        if(nowTotal-ret<=K&&(!nowflag)){\n            printf(\"%d\\n\",i);\n            return 0;\n        }\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["graphs", "math", "number theory"], "dificulty": "2400", "interactive": false}