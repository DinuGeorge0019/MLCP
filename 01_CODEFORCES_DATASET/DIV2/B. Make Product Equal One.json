{
    "link": "https://codeforces.com//contest/1206/problem/B",
    "problemId": "390604",
    "problem_idx": "B",
    "shortId": "1206B",
    "contest_number": "1206",
    "problem_submissions": {
        "E": [
            59039805,
            59036400,
            59045379,
            59047524,
            59061157,
            59038336,
            59098032
        ],
        "D": [
            59025954,
            59041661,
            59045740,
            59034406,
            59022167,
            59028235,
            59026731,
            59020676,
            59024989,
            59028222,
            59026919,
            59119609,
            59027379,
            59028274,
            59026956,
            59027397,
            59024272,
            59026921,
            59027483,
            59030980
        ],
        "C": [
            59011466,
            59030604,
            59014696,
            59020664,
            59011212,
            59015302,
            59007726,
            59013014,
            59014421,
            59011545,
            59013350,
            59012812,
            59015649,
            59015519,
            59018230,
            59019306,
            59015315,
            59013410,
            59013599,
            59015972
        ],
        "B": [
            59004708,
            59042916,
            59007475,
            59009856,
            59005675,
            59005365,
            59003891,
            59005761,
            59008869,
            59005044,
            59005517,
            59007045,
            59004938,
            59005819,
            59066728,
            59009485,
            59006550,
            59008990,
            59005654,
            59005940,
            59006088
        ],
        "A": [
            59001296,
            59043245,
            59001405,
            59010625,
            59001679,
            59001121,
            59001149,
            59003026,
            59003048,
            59001270,
            59001447,
            59001759,
            59001966,
            59002120,
            59066711,
            59002946,
            59001221,
            59005963,
            59002062,
            59004823,
            59001151
        ],
        "F": [
            59027482,
            59114990,
            59100319
        ]
    },
    "name": "B. Make Product Equal One",
    "statement": "You are given n numbers a_1, a_2,\r\ndots, a_n. With a cost of one coin you can perform the following\r\noperation:Choose one of these numbers and add or subtract 1 from it.In\r\nparticular, we can apply this operation to the same number several\r\ntimes.We want to make the product of all these numbers equal to 1, in\r\nother words, we want a_1\r\ncdot a_2\r\ndots\r\ncdot a_n = 1. For example, for n = 3 and numbers [1, -3, 0] we can make\r\nproduct equal to 1 in 3 coins: add 1 to second element, add 1 to second\r\nelement again, subtract 1 from third element, so that array becomes [1,\r\n-1, -1]. And 1\r\ncdot (-1)\r\ncdot (-1) = 1.What is the minimum cost we will have to pay to do that?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nlong long ans=0; int n;\nint main(){\n\tint res=1; bool ok=0;\n\tscanf(\"%d\",&n);\n\tfor (int i=1,x;i<=n;++i){\n\t\tscanf(\"%d\",&x);\n\t\tif (x>=1) ans+=x-1;\n\t\telse if (x<=-1) ans+=(-1-x),res*=-1;\n\t\telse if (!x) ans++,ok=1;\n\t}\n\tif (ok || res==1) printf(\"%I64d\\n\",ans);\n\telse printf(\"%lld\\n\",ans+2);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Make Product Equal One.json",
    "editorial_link": "https://codeforces.com//blog/entry/69158",
    "editorial": "The product of several integers is equal to one if and only if each of\r\nthese numbers is or , and there must be an even number of .Then: we will\r\nhave to reduce every positive at least to one, and we have to spend at\r\nleast coin on this. Similarly, we will have to increase every negative\r\nat least to , for this we will spend at least coins.Now we have all the\r\nnumbers equal to , , or . Let be the number of among them. Let\u00e2\u0080\u0099s analyze\r\ntwo cases:.We need to replace every zero with either or , so we will\r\nhave to spend at least coins. It turns out that this is enough: change\r\nzeros to or randomly, and change the last zero to or so that the product\r\nis equal to one..If the product of all numbers is , we no longer need to\r\nspend coins. Otherwise, you have to change some to or some to . This\r\nwill take another coins.Asympotics .\r\n"
}