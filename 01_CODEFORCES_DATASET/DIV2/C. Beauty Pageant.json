{
    "link": "https://codeforces.com//contest/246/problem/C",
    "problemId": "2237",
    "problem_idx": "C",
    "shortId": "246C",
    "contest_number": "246",
    "problem_submissions": {
        "E": [
            2618309,
            2625699,
            2625672,
            2625616
        ],
        "D": [
            2614880,
            2615580,
            2616212,
            2614968,
            2614320,
            2614660,
            2616653,
            2616273,
            2613212,
            2614960,
            2617901,
            2614696,
            2616035,
            2614578,
            2615857,
            2616416,
            2616305,
            2614469,
            2615989,
            2614634
        ],
        "C": [
            2614006,
            2613802,
            2615098,
            2617187,
            2615874,
            2612559,
            2614266,
            2614575,
            2614275,
            2616756,
            2615418,
            2616320,
            2614220,
            2615862,
            2614590,
            2615086,
            2614032,
            2615573,
            2614720,
            2616902
        ],
        "B": [
            2612557,
            2612051,
            2612469,
            2612350,
            2611530,
            2613518,
            2611821,
            2612876,
            2615385,
            2612183,
            2613369,
            2612732,
            2612231,
            2612645,
            2611735,
            2612717,
            2612424,
            2613466,
            2613427,
            2613236
        ],
        "A": [
            2611340,
            2611588,
            2611575,
            2611688,
            2611152,
            2611180,
            2612517,
            2612042,
            2615112,
            2611515,
            2611961,
            2611233,
            2611703,
            2611227,
            2611218,
            2611222,
            2611497,
            2611116,
            2612114,
            2612186
        ]
    },
    "name": "C. Beauty Pageant",
    "statement": "General Payne has a battalion of soldiers. The soldiers\u2019 beauty contest\r\nis coming up, it will last for days. Payne decided that his battalion\r\nwill participate in the pageant. Now he has choose the participants.All\r\nsoldiers in the battalion have different beauty that is represented by a\r\npositive integer. The value represents the beauty of the -th soldier.On\r\neach of days Generals has to send a detachment of soldiers to the\r\npageant. The beauty of the detachment is the sum of the beauties of the\r\nsoldiers, who are part of this detachment. Payne wants to surprise the\r\njury of the beauty pageant, so each of days the beauty of the sent\r\ndetachment should be unique. In other words, all beauties of the sent\r\ndetachments must be distinct numbers.Help Payne choose detachments of\r\ndifferent beauties for the pageant. Please note that Payne cannot just\r\nforget to send soldiers on one day, that is, the detachment of soldiers\r\nhe sends to the pageant should never be empty.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <string.h>\nusing namespace std;\n\nint a[100], n;\nint q[100*100], s[100*100][100], t, k;\nint main()\n{\n    scanf(\"%d %d\", &n, &k);\n    for (int i=0; i<n; i++) scanf(\"%d\", &a[i]);\n    sort(a, a+n);\n    for (int i=0; i<n; i++)\n    {\n        for (int j=0; j+i<n; j++)\n        {\n            for (int l=0; l<i; l++)\n                s[t][q[t]++]=a[n-l-1];\n            s[t][q[t]++]=a[j];\n            t++;\n        }\n    }\n    for (int i=0; i<k;i++)\n    {\n        printf(\"%d\", q[i]);\n        for (int j=0; j<q[i]; j++)\n            printf(\" %d\", s[i][j]);\n        puts(\"\");\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Beauty Pageant.json",
    "editorial_link": "https://codeforces.com//blog/entry/5934",
    "editorial": "This problem was rather mathematical. The correct solution is: firstly\r\ntake every element once, then take the maximum and any other, then two\r\nmaximums and any other, then three maximums and any other and so on. In\r\nthis case, you get as many sets as you need in this problem. It is easy\r\nto check, that all sums will be different.\r\n"
}