{"link": "https://codeforces.com//contest/1365/problem/C", "problemId": "643138", "problem_idx": "C", "shortId": "1365C", "contest_number": "1365", "problem_submissions": {"G": [82837838, 82865836, 82846144, 82865744, 83288423, 83288390, 83115367, 83113068, 82891046, 83317408], "F": [82823576, 82831163, 82869715, 82841291, 82797913, 82821383, 82823224, 82820878, 82825962, 82827764, 82819318, 82822994, 82828397, 82835003, 82834772, 82828790, 83116114, 82838680, 82843357, 82850042], "E": [82816827, 82806889, 82828546, 82852781, 82820451, 82809338, 82811048, 82815094, 82813767, 82818099, 82819025, 82806699, 82809270, 82814661, 82803838, 82820792, 82820031, 82816700, 82817857, 82816698], "D": [82812948, 82823500, 82822183, 82824676, 82812570, 82806668, 82804333, 82805751, 82808225, 82811038, 82801401, 82805193, 82808495, 82818445, 82814370, 83282843, 82816083, 82808400, 82807406, 82806087], "C": [82796097, 82796764, 82804011, 82805788, 82786984, 82796314, 82793579, 82793092, 82796581, 82800342, 82827239, 82793084, 82792671, 82807140, 82802231, 82801070, 82793918, 82793032, 82794670], "B": [82789379, 82791264, 82799267, 82793610, 82787860, 82790701, 82790486, 82792963, 82793820, 82794046, 82787508, 82790351, 82789454, 82795420, 82796086, 83567414, 83567289, 83567233, 83566819, 83566572, 83566088, 83137777, 83136749, 83136555, 82797438, 82788975, 82789229, 82789419], "A": [82787406, 82788164, 82795856, 82788300, 82789945, 82787354, 82787533, 82792868, 82790605, 82788592, 83313475, 82823189, 82788613, 82787440, 82788379, 82788620, 82787269, 82787662, 82787203, 82787209]}, "name": "C. Rotation Matching", "statement": "After the mysterious disappearance of Ashish, his two favourite\r\ndisciples Ishika and Hriday, were each left with one half of a secret\r\nmessage. These messages can each be represented by a permutation of size\r\nn. Let\u2019s call them a and b.Note that a permutation of n elements is a\r\nsequence of numbers a_1, a_2,\r\nldots, a_n, in which every number from 1 to n appears exactly once. The\r\nmessage can be decoded by an arrangement of sequence a and b, such that\r\nthe number of matching pairs of elements between them is maximum. A pair\r\nof elements a_i and b_j is said to match if: i = j, that is, they are at\r\nthe same index. a_i = b_j His two disciples are allowed to perform the\r\nfollowing operation any number of times: choose a number k and\r\ncyclically shift one of the permutations to the left or right k times. A\r\nsingle cyclic shift to the left on any permutation c is an operation\r\nthat sets c_1:=c_2, c_2:=c_3,\r\nldots, c_n:=c_1 simultaneously. Likewise, a single cyclic shift to the\r\nright on any permutation c is an operation that sets c_1:=c_n, c_2:=c_1,\r\nldots, c_n:=c_{n-1} simultaneously.Help Ishika and Hriday find the\r\nmaximum number of pairs of elements that match after performing the\r\noperation any (possibly zero) number of times.\r\n", "solutions": ["#include <cstdio>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tint t;\n\t// scanf(\"%d\" ,&t);\n\tt=1;\n\twhile(t--){\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tvector <int> a(n);\n\t\tvector <int> b(n);\n\t\tvector <int> c(n);\n\t\tfor(int&i:a){\n\t\t\tscanf(\"%d\", &i);i--;\n\t\t}\n\t\tfor(int&i:b){\n\t\t\tscanf(\"%d\", &i);i--;\n\t\t}\n\t\tfor(int i = 0;i < n;i ++){\n\t\t\tc[a[i]]=i;\n\t\t}\n\t\tfor(int i = 0;i < n;i ++){\n\t\t\tb[i]=c[b[i]];\n\t\t}\n\t\ta.assign(n, 0);\n\t\tfor(int i = 0;i < n;i ++){\n\t\t\ta[(b[i]-i+n)%n]++;\n\t\t}\n\t\tprintf(\"%d\\n\", *max_element(a.begin(), a.end()));\n\t}\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "dificulty": "1400", "interactive": false}