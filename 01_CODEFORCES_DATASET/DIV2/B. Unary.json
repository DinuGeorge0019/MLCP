{"link": "https://codeforces.com//contest/133/problem/B", "problemId": "702", "problem_idx": "B", "shortId": "133B", "contest_number": "133", "problem_submissions": {"E": [924813, 923201, 925122, 924740, 923151, 925910, 928212, 925928, 924995, 923703, 924128, 929077, 924213, 924289], "D": [923670, 925451, 923404, 923731, 926478, 924800, 924588, 926856, 923474, 924032, 924197, 924879], "C": [921698, 921926, 921368, 921398, 921083, 921917, 922348, 919949, 921656, 922402, 921490, 922221, 929129, 921781, 920761, 921370, 922130], "B": [920321, 920624, 920117, 919992, 919882, 920500, 921070, 921364, 920093, 921113, 920430, 920262, 929115, 919964, 919777, 919852, 920879], "A": [919203, 919548, 919250, 919042, 919124, 919191, 920089, 921756, 919222, 920426, 919339, 918987, 918923, 918953, 918882, 918982]}, "name": "B. Unary", "statement": "Unary is a minimalistic Brainfuck dialect in which programs are written\r\nusing only one token. Brainfuck programs use 8 commands: \"\", \"\", \"\", \"\",\r\n\"\", \"\", \"\" and \"\" (their meaning is not important for the purposes of\r\nthis problem). Unary programs are created from Brainfuck programs using\r\nthe following algorithm. First, replace each command with a\r\ncorresponding binary code, using the following conversion table: \"\"\r\n1000, \"\" 1001, \"\" 1010, \"\" 1011, \"\" 1100, \"\" 1101, \"\" 1110, \"\" 1111.\r\nNext, concatenate the resulting binary codes into one binary number in\r\nthe same order as in the program. Finally, write this number using unary\r\nnumeral system this is the Unary program equivalent to the original\r\nBrainfuck one.You are given a Brainfuck program. Your task is to\r\ncalculate the size of the equivalent Unary program, and print it modulo\r\n.\r\n", "solutions": ["#include <cstdio>\n#include <string>\n#include <map>\n#include <cstring>\n#include <bitset>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <memory.h>\n#include <list>\n#include <vector>\n#include <set>\n#include <stack>\n#include <deque>\n#include <queue>\n#include <complex>\n\nusing namespace std;\n\n#define sqr(n)  (n)*(n)\n#define mem0(a) memset(a,0,sizeof(a))\n#define mem1(a) memset(a,-1,sizeof(a))\n#define INF 2000000000\n\ntypedef long long ll;\n\nint MOD = 1000003;\n\nint main()\n{\n    string s;\n    cin >> s;\n    int res = 0;\n    for(int i = 0; i < s.size(); i++)\n    {\n        res *= 16;\n        if(s[i]=='>')\n            res+=8;\n        else if(s[i]=='<')\n            res+=9;\n        else if(s[i]=='+')\n            res+=10;\n        else if(s[i]=='-')\n            res+=11;\n        else if(s[i]=='.')\n            res+=12;\n        else if(s[i]==',')\n            res+=13;\n        else if(s[i]=='[')\n            res+=14;\n        else if(s[i]==']')\n            res+=15;\n        res %= MOD;\n    }\n    printf(\"%d\",res);\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1200", "interactive": false}