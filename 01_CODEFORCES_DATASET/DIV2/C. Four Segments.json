{"link": "https://codeforces.com//contest/14/problem/C", "problemId": "64", "problem_idx": "C", "shortId": "14C", "contest_number": "14", "problem_submissions": {"E": [62192, 62594, 62287, 61971, 63187, 62768, 63056, 63225, 62267, 62557, 62780, 61993, 62626], "D": [61970, 62027, 62458, 62850, 62826, 62538, 62467, 62772, 62917, 62832, 63108, 62975, 63625, 62539], "C": [61574, 61559, 61851, 61582, 61766, 61317, 61719, 62215, 62454, 61795, 62487, 63175, 61560, 61903], "B": [61265, 61141, 61609, 61379, 61308, 61111, 61382, 61412, 61201, 61434, 62041, 61107, 61138, 61353], "A": [60974, 60976, 61243, 61277, 61025, 61008, 61112, 61102, 61052, 61126, 61656, 60978, 60966, 61057]}, "name": "C. Four Segments", "statement": "Several months later Alex finally got his brother Bob\u2019s creation by\r\npost. And now, in his turn, Alex wants to boast about something to his\r\nbrother. He thought for a while, and came to the conclusion that he has\r\nno ready creations, and decided to write a program for rectangles\r\ndetection. According to his plan, the program detects if the four given\r\nsegments form a rectangle of a positive area and with sides parallel to\r\ncoordinate axes. As Alex does badly at school and can\u2019t write this\r\nprogram by himself, he asks you to help him.\r\n", "solutions": ["#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<vector>\n#include<string>\n#include<cmath>\nusing namespace std;\n\nint xmin , xmax , ymin , ymax;\nint x[5][3] , y[5][3];\n\nint checktype(int t)\n{\n    if(x[t][1] == x[t][2])\n    {\n        if(min(y[t][1] , y[t][2]) == ymin)\n            if(max(y[t][1] , y[t][2]) == ymax)\n            {\n                if(x[t][1] == xmin)\n                    return 1;\n                if(x[t][1] == xmax)\n                    return 2;\n                \n                \n            }\n    }\n    if(y[t][1] == y[t][2])\n    {\n        if(min(x[t][1] , x[t][2]) == xmin)\n            if(max(x[t][1] , x[t][2]) == xmax)\n            {\n                if(y[t][1] == ymin)\n                    return 3;\n                if(y[t][1] == ymax)\n                    return 4;\n            }\n        \n        \n        \n    }\n    \n    return 0;\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    while(cin>>x[1][1]>>y[1][1]>>x[1][2]>>y[1][2])\n    {\n        bool rig = true;\n        int typesum = 0 , typemul = 1;\n        xmin = x[1][1];\n        xmax = x[1][1];\n        ymin = y[1][1];\n        ymax = y[1][1];\n        cin>>x[2][1]>>y[2][1]>>x[2][2]>>y[2][2];\n        cin>>x[3][1]>>y[3][1]>>x[3][2]>>y[3][2];\n        cin>>x[4][1]>>y[4][1]>>x[4][2]>>y[4][2];\n        for(int i = 1 ; i <= 4 ; i++)\n            for(int j = 1 ; j <= 2 ; j++)\n            {\n                xmin = min(xmin , x[i][j]);\n                xmax = max(xmax , x[i][j]);\n                ymin = min(ymin , y[i][j]);\n                ymax = max(ymax , y[i][j]);\n            }\n        if(xmin == xmax || ymin == ymax)\n            rig = false;\n        for(int i = 1 ; i <= 4 ; i++)\n        {\n            typesum += checktype(i);\n            typemul *= checktype(i);\n        }\n        if(typesum != 10)\n            rig = false;\n        if(typemul != 24)\n            rig = false;\n        if(rig)\n            cout<<\"YES\"<<endl;\n        else\n            cout<<\"NO\"<<endl;\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "geometry", "implementation", "math"], "dificulty": "1700", "interactive": false}