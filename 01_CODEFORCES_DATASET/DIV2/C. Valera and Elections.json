{"link": "https://codeforces.com//contest/369/problem/C", "problemId": "4125", "problem_idx": "C", "shortId": "369C", "contest_number": "369", "problem_submissions": {"D": [5305237, 5312782, 5302575, 5302522, 5304036, 5303475, 5298828, 5304364, 5302322, 5304435, 5307669, 5304261, 5348610], "E": [5299924, 5300916, 5302442, 5306132, 5309865, 5324849, 5304462, 5346294, 5312977, 5302205, 5302615], "C": [5297353, 5298610, 5300018, 5298007, 5298088, 5296130, 5300828, 5301779, 5300657, 5301152, 5298538, 5299357, 5297721, 5300161, 5297375, 5299374, 5298853], "B": [5295698, 5301934, 5295966, 5296687, 5296491, 5297164, 5297880, 5302888, 5299175, 5297625, 5304937, 5296913, 5307548, 5298564, 5304878, 5301724, 5298054], "A": [5294961, 5295577, 5296970, 5295370, 5295286, 5297542, 5295335, 5303463, 5295020, 5295091, 5295149, 5295306, 5295147, 5295682, 5295086, 5295265, 5294962]}, "name": "C. Valera and Elections", "statement": "The city Valera lives in is going to hold elections to the city\r\nParliament.The city has districts and bidirectional roads. We know that\r\nfrom any district there is a path along the roads to any other district.\r\nLet\u2019s enumerate all districts in some way by integers from to ,\r\ninclusive. Furthermore, for each road the residents decided if it is the\r\nproblem road or not. is a road that needs to be repaired.There are\r\ncandidates running the elections. Let\u2019s enumerate all candidates in some\r\nway by integers from to , inclusive. If the candidate number will be\r\nelected in the city Parliament, he will perform exactly one promise to\r\nrepair all problem roads on the way from the -th district to the\r\ndistrict , where the city Parliament is located.Help Valera and\r\ndetermine the subset of candidates such that if all candidates from the\r\nsubset will be elected to the city Parliament, all problem roads in the\r\ncity will be repaired. If there are several such subsets, you should\r\nchoose the subset consisting of the minimum number of candidates.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <vector>\n#include <map>\n#include <set>\n#include <algorithm>\n#define lowbit(x) ((x) & (-(x)))\nusing namespace std;\ntypedef long long LL;\nconst int N = 100005;\nint n , gao[N] , dp[N];\nvector <pair <int , int> > e[N];\nvoid dfs (int u , int p) {\n    for (int i = 0 ; i < e[u].size() ; i ++) {\n        int v = e[u][i].first , w = e[u][i].second ;\n        if (v == p) continue;\n        dfs (v , u);\n        if (w == 2) {\n            if (dp[v] == 0) {\n                gao[v] = 1;\n            }\n            dp[u] += max (1 , dp[v]);\n        }\n        else dp[u] += dp[v]; \n    }\n}\nint main () {\n    #ifndef ONLINE_JUDGE\n        freopen (\"input.txt\" , \"r\" , stdin);\n    #endif\n    cin >> n;\n    for (int i = 1 ; i < n ; i ++) {\n        int u , v , w;\n        cin >> u >> v >> w;\n        e[u].push_back (make_pair (v , w));\n        e[v].push_back (make_pair (u , w));\n    }\n    dfs (1 , 0);\n    cout << dp[1] << endl;\n    for (int i = 1 ; i <= n ; i ++)\n        if (gao[i])\n            cout << i << endl;\n    return 0;  \n}"], "input": "", "output": "", "tags": ["dfs and similar", "graphs", "trees"], "dificulty": "1600", "interactive": false}