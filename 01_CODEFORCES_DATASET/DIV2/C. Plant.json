{"link": "https://codeforces.com//contest/186/problem/C", "problemId": "1302", "problem_idx": "C", "shortId": "186C", "contest_number": "186", "problem_submissions": {"D": [1657681, 1658478, 1656134, 1656097, 1657605, 1659081, 1658217, 1658577, 1659087, 1658093, 1659907, 1657753, 1657771], "C": [1655799, 1653949, 1653888, 1657215, 1655683, 1655498, 1655423, 1655364, 1655532, 1656312, 1653963, 1656181, 1656606], "B": [1653853, 1656964, 1654766, 1653590, 1654394, 1654508, 1654124, 1654630, 1654138, 1654956, 1655681, 1654707, 1655746], "A": [1652799, 1654670, 80621352, 1653218, 1656209, 1652847, 1653532, 1652921, 1653307, 1652998, 1653644, 1654799, 1652900, 1654903], "E": [4391221]}, "name": "C. Plant", "statement": "Dwarfs have planted a very interesting plant, which is a triangle\r\ndirected \"upwards\". This plant has an amusing feature. After one year a\r\ntriangle plant directed \"upwards\" divides into four triangle plants:\r\nthree of them will point \"upwards\" and one will point \"downwards\". After\r\nanother year, each triangle plant divides into four triangle plants:\r\nthree of them will be directed in the same direction as the parent\r\nplant, and one of them will be directed in the opposite direction. Then\r\neach year the process repeats. The figure below illustrates this\r\nprocess. Help the dwarfs find out how many triangle plants that point\r\n\"upwards\" will be in years.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <memory.h>\n#include <string>\n#include <set>\n#include <map>\n#include <queue>\nusing namespace std;\n#define forn(i,n) for(int i=0;i<(n);++i)\n#define forv(i,v) forn(i,(int)(v).size())\n#define iinf 1000000000\n#define linf 1000000000000000000LL\n#define dinf 1e200\n#define all(v) (v).begin(),(v).end()\n#define pb push_back\n#define mp make_pair\n#define lng long long\n#define eps 1e-11\n#define EQ(a,b) (fabs((a)-(b))<eps)\n#define SQ(a) ((a)*(a))\n#define PI 3.14159265359\n#define index asdindex\n#define FI first\n#define SE second\n#define prev asdprev\n#define ends asdends\n#define PII pair<int,int> \n#define X first\n#define Y second\n#define mset(a,b) memset(a,b,sizeof(a))\n\n\n\n\nlng v1[1010], v2[1010];\n\npair<lng, int> heights[1010];\n\nlng grow(lng v1, lng v2,  lng t1, lng t2, lng k){\n    lng res = t1*v1;\n    res=res/100*(100-k);\n    res+=v2*t2;\n    return res;\n}\n\nlng MOD = 1000000000+7;\n\nlng powmod(lng n, lng k, lng mod){\n    if (k==0)return 1;\n    if (k==1)return n%mod;\n    lng t = powmod(n, k/2, mod);\n    t*=t;\n    t%=mod;\n    if (k%2)t*=n;\n    t%=mod;\n    return t;\n}\n\nint main(){\n#ifdef __ASD__\n    freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n    //ios::sync_with_stdio(false);\n    lng n;\n    cin >> n;\n    if (n==0LL){\n        cout <<1<<endl;\n        return 0;\n    }\n    lng res = powmod(2, 2*n-1, MOD);\n    res+=powmod(2, (2*n-1)/2, MOD);\n    res%=MOD;\n    cout << res << endl;\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "math", "matrices", "number theory"], "dificulty": "1300", "interactive": false}