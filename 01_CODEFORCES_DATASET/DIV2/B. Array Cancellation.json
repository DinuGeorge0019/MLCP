{
    "link": "https://codeforces.com//contest/1405/problem/B",
    "problemId": "718467",
    "problem_idx": "B",
    "shortId": "1405B",
    "contest_number": "1405",
    "problem_submissions": {
        "E": [
            92059741,
            92058133,
            92062156,
            92060968,
            92062924,
            92067408,
            92066292,
            92068112,
            92062237,
            92066773,
            92068775,
            92072009,
            92069079,
            92061737,
            92074033,
            92066427,
            92074374,
            92065015
        ],
        "D": [
            92042902,
            92049954,
            92043014,
            92049578,
            92048487,
            92047077,
            92051858,
            92049539,
            92053114,
            92052985,
            92055807,
            92047137,
            92054061,
            92071019,
            92059215,
            92073091,
            92059129,
            92044558,
            92094648,
            92049569
        ],
        "C": [
            92035786,
            92037182,
            92033713,
            92034576,
            92036286,
            92037578,
            92036561,
            92039390,
            92037184,
            92039374,
            92039602,
            92033076,
            92045285,
            92037821,
            92043997,
            92035004,
            92050607,
            92038515,
            92037672,
            92034975
        ],
        "B": [
            92025229,
            92029135,
            92026910,
            92025507,
            92028947,
            92031236,
            92029110,
            92028870,
            92041377,
            92032881,
            92030734,
            92026455,
            92038256,
            92044134,
            92038934,
            92028794,
            92045596,
            92031141,
            92026747,
            92029131
        ],
        "A": [
            92023093,
            92025469,
            92023871,
            92023042,
            92024363,
            92027769,
            92023712,
            92023043,
            92039754,
            92024522,
            92027108,
            92023087,
            92026674,
            92024071,
            92047223,
            92036791,
            92039497,
            92023146,
            92023754
        ]
    },
    "name": "B. Array Cancellation",
    "statement": "You\u2019re given an array a of n integers, such that a_1 + a_2 +\r\ncdots + a_n = 0.In one operation, you can choose two indices i and j (1\r\nle i, j\r\nle n), decrement a_i by one and increment a_j by one. If i < j this\r\noperation is free, otherwise it costs one coin.How many coins do you\r\nhave to spend in order to make all elements equal to 0?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define fef(i,a,b) for(ll i=a;i<=b;i++)\n#define rer(i,a,b) for(ll i=b;i>=a;i--)\n#define wew while(true)\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#define FILE_IN \"cseq.inp\"\n#define FILE_OUT \"cseq.out\"\n#define ofile freopen(FILE_IN,\"r\",stdin);freopen(FILE_OUT,\"w\",stdout)\n#define fio ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define nfio cin.tie(0);cout.tie(0)\n#define max(x,y) (((x)>(y))?(x):(y))\n#define min(x,y) (((x)<(y))?(x):(y))\n#define ord(a,b,c) ((a>=b)and(b>=c))\n#define MOD (ll(1000000007))\n#define MAX 300001\n#define mag 320\n#define p1 first\n#define p2 second.first\n#define p3 second.second\n#define X first\n#define Y second\n#define pow2(x) (ll(1)<<x)\n#define pii pair<int,int>\n#define piii pair<int,pii>\n#define For(i,__,___) for(int i=__;i<=___;i++)\n#define Rep(i,__,___) for(int i=__;i>=___;i--)\n#define ordered_set tree<long long,null_type,less<long long>,rb_tree_tag,tree_order_statistics_node_update>\n#define endl \"\\n\"\n#define bi BigInt\ntypedef long long ll;\n//---------END-------//\nconst int maxn = 1e5 + 17;\n\nint a[maxn];\n\nint main(){\n    fio;\n    int t;\n    cin >> t;\n    while (t--){\n        int n;\n        cin >> n;\n        For(i, 1, n){\n            cin >> a[i];\n        }\n        long long ans = 0, sum = 0;\n        For(i, 1, n){\n            sum += a[i];\n            ans = min(ans, sum);\n        }\n        cout << -ans << endl;\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Array Cancellation.json",
    "editorial_link": "https://codeforces.com//blog/entry/82366",
    "editorial": "The answer is the maximum suffix sum, which can be computed in .Define\r\n(partial suffix sum). Note .We can observe that if and only if . (If is\r\nnull, .)A free operation on is equivalent to incrementing . Free\r\noperations can only increment elements of , so we obviously need at\r\nleast coins.Let\u00e2\u0080\u0099s do times the operation , which decrement every element\r\ntimes. Now, for every , and we can make it equal to by performing times\r\nthe free operation .\r\n"
}