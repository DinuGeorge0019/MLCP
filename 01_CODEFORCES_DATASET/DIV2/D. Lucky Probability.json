{"link": "https://codeforces.com//contest/110/problem/D", "problemId": "580", "problem_idx": "D", "shortId": "110D", "contest_number": "110", "problem_submissions": {"E": [647829, 649167, 646023, 646546, 645768, 647440, 646441, 647692, 647579, 647730, 647778, 648074, 648205, 648643, 672231, 648607], "D": [646207, 648016, 1801308, 650206, 650204, 650149, 645758, 648839, 651051, 646617, 672309, 672304], "C": [644127, 643544, 644243, 643865, 645241, 644451, 644887, 644131, 644140, 645305, 644925, 643505, 644385, 643763, 644812, 644362, 644073, 643923], "B": [643233, 642711, 643039, 643416, 643607, 643662, 644238, 643262, 643508, 644064, 644105, 643023, 643503, 644212, 644124, 643915, 643258, 643069], "A": [642482, 642215, 642278, 642632, 643064, 642636, 643448, 642358, 642849, 643249, 642539, 642283, 642426, 642982, 643205, 642425, 642448, 642447]}, "name": "D. Lucky Probability", "statement": "Petya and his friend Vasya play an interesting game. Petya randomly\r\nchooses an integer from the interval and Vasya chooses an integer from\r\nthe interval (also randomly). Both players choose their integers\r\nequiprobably. Find the probability that the interval contains exactly\r\nlucky numbers.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <vector>\nusing namespace std;\n\nvector<long long> lu;\n\nint K;\nlong long pl, pr, vl, vr;\nconst long long inf = 1LL<<60;\n\nvoid dfs(long long x, int l)\n{\n    lu.push_back(x);\n    if(l >= 11) return ;\n    dfs(x*10+4, l+1);\n    dfs(x*10+7, l+1);\n}\n\ninline double intersect(long long l1, long long r1, long long l2, long long r2)\n{\n    long long ll = max(l1, l2), rr = min(r1, r2);\n    return ll>rr ? 0 : rr-ll+1;\n}\n\nint main()\n{\n    lu.clear();\n    dfs(4, 1), dfs(7, 1);\n    sort(lu.begin(), lu.end());\n    \n    while(cin >> pl >> pr >> vl >> vr >> K) {\n        double a = 0, b = (double)(pr-pl+1)*(vr-vl+1);\n        for(int i = 0; i < lu.size(); i++){\n            int j = i+K-1;\n            if(j >= lu.size()) break;\n            long long l1 = i==0 ? -inf : lu[i-1]+1;\n            long long r1 = lu[i];\n            long long l2 = lu[j];\n            long long r2 = j==lu.size()-1 ? inf : lu[j+1]-1;\n            a += intersect(pl,pr,l1,r1)*intersect(vl,vr,l2,r2);\n            a += intersect(vl,vr,l1,r1)*intersect(pl,pr,l2,r2);\n            if(K==1 && intersect(pl,pr,r1,r1) && intersect(vl,vr,l2,l2)) a--;\n        }\n        printf(\"%.18lf\\n\", a/b);\n    }\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "combinatorics", "dfs and similar", "probabilities"], "dificulty": "1900", "interactive": false}