{
    "link": "https://codeforces.com//contest/1762/problem/A",
    "problemId": "1695270",
    "problem_idx": "A",
    "shortId": "1762A",
    "contest_number": "1762",
    "problem_submissions": {
        "F": [
            185360973,
            185364441,
            185372202,
            185395910,
            185621065,
            185354232,
            185332491,
            185348264,
            185360759,
            197448951,
            197448921
        ],
        "E": [
            185344507,
            185353525,
            185341937,
            185339289,
            185344504,
            185352316,
            185360035,
            185362208,
            185365484,
            185404755,
            185370016,
            185351528,
            185364233,
            185367555,
            191848003,
            185329145
        ],
        "D": [
            185337625,
            185342301,
            185324406,
            185313736,
            185320476,
            185336684,
            185335575,
            185333725,
            185325437,
            185329719,
            185355407,
            185334757,
            185358794,
            185354685,
            185353510,
            203219751,
            203219727,
            185328017,
            185332700,
            185327767
        ],
        "C": [
            185322060,
            185321446,
            185314988,
            185324570,
            185312857,
            185315091,
            185320564,
            185320295,
            185330972,
            185319388,
            185342558,
            185326201,
            185316184,
            185309915,
            185362472,
            185315926,
            185312437,
            185310609,
            185320776
        ],
        "B": [
            185304175,
            185312988,
            185302843,
            185317620,
            185309312,
            185304849,
            185311399,
            185308703,
            185304961,
            185310615,
            185338037,
            185310014,
            185310646,
            185303730,
            185343806,
            185303744,
            185303718,
            185304581,
            185309640
        ],
        "A": [
            185300504,
            185304250,
            185300255,
            185302050,
            185306620,
            185300445,
            185302307,
            185307731,
            185300743,
            185301230,
            185335246,
            185301137,
            185300437,
            185300430,
            185322563,
            185300790,
            185300333,
            185302002,
            185301784
        ],
        "G": [
            185409628,
            185346613
        ]
    },
    "name": "A. Divide and Conquer",
    "statement": "An array b is if the sum of elements of b is even. You are given an\r\narray a consisting of n positive integers. In one operation, you can\r\nselect an index i and change a_i :=\r\nlfloor\r\nfrac{a_i}{2}\r\nrfloor. ^\r\ndaggerFind the minimum number of operations (possibly 0) needed to make\r\na good. It can be proven that it is possible to make a good.^\r\ndagger\r\nlfloor x\r\nrfloor denotes the floor function the largest integer less than or equal\r\nto x. For example,\r\nlfloor 2.7\r\nrfloor = 2,\r\nlfloor\r\npi\r\nrfloor = 3 and\r\nlfloor 5\r\nrfloor =5.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint make(int x)\n{\n    int d = (x & 1);\n    int ans = 0;\n    while((x & 1) == d) {\n        x >>= 1;ans++;\n    }\n    return ans;\n}\nvoid solve()\n{\n    int n;int a[55];\n    scanf(\"%d\",&n);\n    int t = 0;\n    int d = 1e9;\n    for(int i = 1;i <= n;i++) scanf(\"%d\",&a[i]) , t ^= (a[i] & 1) , d = min(d , make(a[i]));\n    printf(\"%d\\n\",t * d);\n}\nint main() {\n    // freopen(\"in.txt\",\"r\",stdin);\n    int t;scanf(\"%d\",&t);\n    while(t--) solve();\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Divide and Conquer.json",
    "editorial_link": "https://codeforces.com//blog/entry/110169",
    "editorial": "Solution We are assuming initial sum is odd. Suppose gives the minimum\nnumber of operations needed to change parity of .Iterate from to and\ncalculate for each .Answer is minimum among all the calculated\nvalues.Time complexity is .\n",
    "hint": [
        "Hint 1 If sum is even, answer is . Otherwise we need to change parity of atleast one element of .",
        "Hint 2 It it optimal to change parity of atmost one element.",
        "Hint 3 Answer can be atmost , as we need to divide any integer ( ) atmost times to change its parity."
    ]
}