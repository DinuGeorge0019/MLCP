{"link": "https://codeforces.com//contest/431/problem/B", "problemId": "9653", "problem_idx": "B", "shortId": "431B", "contest_number": "431", "problem_submissions": {"D": [6672598, 6676181, 6673450, 6673470, 6674088, 6674095, 6674295, 6674808, 6675923, 6675071, 6674830, 6674866, 6674901, 6674478, 6674991, 6674414], "E": [6671267, 6673725, 6713420, 6713416, 6713362, 6676446, 6676376, 6675447, 6675215], "C": [6671164, 6669924, 6671428, 6670548, 6670647, 6671004, 6671098, 6672117, 6672492, 6671804, 6670661, 6670538, 6670152, 6671790, 6670929, 6672251, 6671397, 6672712], "B": [6669392, 6669162, 6669814, 6669821, 6669379, 6669661, 6669742, 6670279, 6669311, 6670384, 6669700, 6669887, 6671526, 6670362, 6670035, 6670413, 6670132, 6671672], "A": [6668772, 6668067, 6668159, 6668040, 6668001, 6668140, 6668106, 6668437, 6668090, 6669605, 6668154, 6669148, 6670613, 6668347, 6668448, 6668920, 6668602, 6670229]}, "name": "B. Shower Line", "statement": "Many students live in a dormitory. A dormitory is a whole new world of\r\nfunny amusements and possibilities but it does have its drawbacks. There\r\nis only one shower and there are multiple students who wish to have a\r\nshower in the morning. That\u2019s why every morning there is a line of five\r\npeople in front of the dormitory shower door. As soon as the shower\r\nopens, the first person from the line enters the shower. After a while\r\nthe first person leaves the shower and the next person enters the\r\nshower. The process continues until everybody in the line has a\r\nshower.Having a shower takes some time, so the students in the line talk\r\nas they wait. At each moment of time the students talk in pairs: the -th\r\nman in the line (for the current moment) talks with the -th one. Let\u2019s\r\nlook at this process in more detail. Let\u2019s number the people from 1 to\r\n5. Let\u2019s assume that the line initially looks as 23154 (person number 2\r\nstands at the beginning of the line). Then, before the shower opens, 2\r\ntalks with 3, 1 talks with 5, 4 doesn\u2019t talk with anyone. Then 2 enters\r\nthe shower. While 2 has a shower, 3 and 1 talk, 5 and 4 talk too. Then,\r\n3 enters the shower. While 3 has a shower, 1 and 5 talk, 4 doesn\u2019t talk\r\nto anyone. Then 1 enters the shower and while he is there, 5 and 4 talk.\r\nThen 5 enters the shower, and then 4 enters the shower.We know that if\r\nstudents and talk, then the -th student\u2019s happiness increases by and the\r\n-th student\u2019s happiness increases by . Your task is to find such initial\r\norder of students in the line that the total happiness of all students\r\nwill be maximum in the end. Please note that some pair of students may\r\nhave a talk several times. In the example above students 1 and 5 talk\r\nwhile they wait for the shower to open and while 3 has a shower.\r\n", "solutions": ["#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint g[6][6],x[6],pd[6],ans;\nvoid dfs(int k){\n\tif (k==6){\n\t\tint num=0;\n\t\tfor (int i=1;i<=4;i++)\n\t\t\tfor (int j=1;j<=(5-i+1)/2;j++)\n\t\t\t\tnum+=g[x[i+j*2-2]][x[i+j*2-1]]+g[x[i+j*2-1]][x[i+j*2-2]];\n\t\tans=max(ans,num);\n\t\treturn;\n\t}\n\tfor (int i=1;i<=5;i++)\n\t\tif (pd[i]==0){\n\t\t\tpd[i]=1; x[k]=i; dfs(k+1); pd[i]=0;\n\t\t}\n}\nint main(){\n\tfor (int i=1;i<=5;i++)\n\t\tfor (int j=1;j<=5;j++)\n\t\t\tscanf(\"%d\",&g[i][j]);\n\tmemset(pd,0x00,sizeof pd); ans=0;\n\tdfs(1);\n\tcout<<ans<<endl;\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["brute force", "implementation"], "dificulty": "1200", "interactive": false}