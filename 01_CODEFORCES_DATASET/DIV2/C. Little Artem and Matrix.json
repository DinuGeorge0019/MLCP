{"link": "https://codeforces.com//contest/669/problem/C", "problemId": "57067", "problem_idx": "C", "shortId": "669C", "contest_number": "669", "problem_submissions": {"E": [17491512, 17491017, 19750171, 17501056, 17493518, 17492061, 17493713, 17493393, 17493817, 17492979, 17493371, 17493114, 17495492, 17494782, 17494292, 17495191, 17493974, 17493836, 17494124], "D": [17488668, 17488489, 17486897, 17489357, 17489309, 17489532, 17490586, 17488952, 17490577, 17490565, 17488280, 17489742, 18583027, 18583013, 17490428, 17487352, 17490248, 17491103, 17491769], "C": [17485441, 17485907, 17484920, 17487516, 17486088, 17486618, 17486621, 17484945, 17488083, 17486963, 17486429, 17487871, 17486801, 17486397, 17488132, 17485146, 17486999], "B": [17482906, 17484441, 17482918, 17484173, 17483561, 17483294, 17484370, 17485567, 17486297, 17482984, 17483079, 17484306, 17484088, 17483002, 17484517, 17483240, 17484521], "A": [17481725, 17483043, 17482128, 17482178, 17481873, 17482008, 17481996, 17485818, 17482048, 17481645, 17481657, 17481965, 17482978, 17481666, 17483249, 17481910, 17482894]}, "name": "C. Little Artem and Matrix", "statement": "Little Artem likes electronics. He can spend lots of time making\r\ndifferent schemas and looking for novelties in the nearest electronics\r\nstore. The new control element was delivered to the store recently and\r\nArtem immediately bought it.That element can store information about the\r\nmatrix of integers size . There are inputs in that element, i.e. each\r\nrow and each column can get the signal. When signal comes to the input\r\ncorresponding to some row, this row cyclically shifts to the left, that\r\nis the first element of the row becomes last element, second element\r\nbecomes first and so on. When signal comes to the input corresponding to\r\nsome column, that column shifts cyclically to the top, that is first\r\nelement of the column becomes last element, second element becomes first\r\nand so on. Rows are numbered with integers from to from top to bottom,\r\nwhile columns are numbered with integers from to from left to\r\nright.Artem wants to carefully study this element before using it. For\r\nthat purpose he is going to set up an experiment consisting of turns. On\r\neach turn he either sends the signal to some input or checks what number\r\nis stored at some position of the matrix.Artem has completed his\r\nexperiment and has written down the results, but he has lost the chip!\r\nHelp Artem find any initial matrix that will match the experiment\r\nresults. It is guaranteed that experiment data is consistent, which\r\nmeans at least one valid matrix exists.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define REP(i, n) for(int i = 0;i < n;++i)\n#define FOR(i, a, b) for(int i = a;i < b;++i)\n#define pb push_back\n#define X first\n#define Y second\nusing namespace std;\ntypedef long long int ll;\ntypedef pair<int, int> ii;\nconst int MAX = 102;\nconst int INF = 2e9;\nint n, m, q;\nint id[MAX][MAX];\nint val[MAX * MAX];\n\nvoid rowcirc (int r) {\n\tint first = id[r][0];\n\tREP(i, m - 1) id[r][i] = id[r][i + 1];\n\tid[r][m - 1] = first;\n}\n\nvoid colcirc (int c) {\n\tint first = id[0][c];\n\tREP(i, n - 1) id[i][c] = id[i + 1][c];\n\tid[n - 1][c] = first;\n}\n\nvoid init () {\n\tfill(val, val + MAX * MAX, INF);\n\tREP(i, n) REP(j, m) id[i][j] = i * m + j;\n}\n\nint main() {\n\tscanf(\"%d %d %d\", &n, &m, &q);\n\tinit();\n\tREP(i, q) {\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\tif(t == 1) {\n\t\t\tint r;\n\t\t\tscanf(\"%d\", &r);\n\t\t\trowcirc(r - 1);\n\t\t}\n\t\telse if(t == 2) {\n\t\t\tint c;\n\t\t\tscanf(\"%d\", &c);\n\t\t\tcolcirc(c - 1);\n\t\t}\n\t\telse {\n\t\t\tint r, c, x;\n\t\t\tscanf(\"%d %d %d\", &r, &c, &x);\n\t\t\tval[id[r - 1][c - 1]] = x;\n\t\t}\n\t}\n\tREP(i, n) {\n\t\tREP(j, m) printf(\"%d \", val[i * m + j] == INF ? 0 : val[i * m + j]);\n\t\tprintf(\"\\n\");\n\t}\n}\n\n"], "input": "", "output": "", "tags": ["constructive algorithms", "implementation"], "dificulty": "1400", "interactive": false}