{
    "link": "https://codeforces.com//contest/476/problem/A",
    "problemId": "15273",
    "problem_idx": "A",
    "shortId": "476A",
    "contest_number": "476",
    "problem_submissions": {
        "E": [
            8204672,
            8203397,
            8207038,
            8211617
        ],
        "D": [
            8197947,
            8191751,
            8202943,
            8195927,
            8196039,
            8197811,
            8197369,
            8217545,
            8199329,
            8200501,
            8205151,
            8199419,
            8198018,
            8200566,
            8201223,
            8198122,
            8201729
        ],
        "C": [
            8188264,
            8188407,
            8188998,
            8189052,
            8201842,
            8185141,
            8195789,
            8189091,
            8193525,
            8196914,
            8196369,
            8196594,
            8195818,
            8195843,
            8196937,
            8193815
        ],
        "B": [
            8185985,
            8208310,
            8204785,
            8187126,
            8185874,
            8187135,
            8188697,
            8188022,
            8185704,
            8186819,
            8186804,
            8188777,
            8187192,
            8187477,
            8187062,
            8187450,
            8187242
        ],
        "A": [
            8184534,
            8184021,
            8184248,
            8184018,
            8184166,
            8186376,
            8185191,
            8184038,
            8184338,
            8184268,
            8185458,
            8184887,
            8184306,
            8184110,
            8184903,
            8184310
        ]
    },
    "name": "A. Dreamoon and Stairs",
    "statement": "Dreamoon wants to climb up a stair of steps. He can climb or steps at\r\neach move. Dreamoon wants the number of moves to be a multiple of an\r\ninteger . What is the minimal number of moves making him climb to the\r\ntop of the stairs that satisfies his condition?\r\n",
    "solutions": [
        "//BISM ILLAHHIRRAHMANNI RRAHIM\n\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <string>\n#include <vector>\n#include <list>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <iterator>\n#include <utility>\nusing namespace std;\n\ntemplate< class T > T _abs(T n) { return (n < 0 ? -n : n); }\ntemplate< class T > T _max(T a, T b) { return (!(a < b) ? a : b); }\ntemplate< class T > T _min(T a, T b) { return (a < b ? a : b); }\ntemplate< class T > T sq(T x) { return x * x; }\n\n#define ALL(p) p.begin(),p.end()\n#define MP(x, y) make_pair(x, y)\n#define SET(p) memset(p, -1, sizeof(p))\n#define CLR(p) memset(p, 0, sizeof(p))\n#define MEM(p, v) memset(p, v, sizeof(p))\n#define CPY(d, s) memcpy(d, s, sizeof(s))\n#define READ(f) freopen(f, \"r\", stdin)\n#define WRITE(f) freopen(f, \"w\", stdout)\n#define SZ(c) (int)c.size()\n#define PB(x) push_back(x)\n#define ff first\n#define ss second\n#define i64 long long\n#define ld long double\n#define pii pair< int, int >\n#define psi pair< string, int >\n#define vi vector< int >\n\nconst double EPS = 1e-9;\nconst int INF = 0x7f7f7f7f;\n\nint dp[10010][13],m;\nbool vis[10010][13];\n\nint dfs(int n,int md) {\n    //cout<<n<<' '<<md<<'\\n';\n    if(!n) return md?100000000:0;\n    if(vis[n][md]) return dp[n][md];\n    vis[n][md]=1;\n    int r=dfs(n-1,(md+1)%m);\n    if(n>1) r=min(r,dfs(n-2,(md+1)%m));\n    return dp[n][md]=1+r;\n}\n\n\nint main() {\n\t//READ(\"in.txt\");\n\t//WRITE(\"out.txt\");\n\tint n;\n\tcin>>n>>m;\n\tint t=dfs(n,0);\n\tif(t>n) t=-1;\n\tcout<<t<<'\\n';\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Dreamoon and Stairs.json",
    "editorial_link": "https://codeforces.com//blog/entry/14256",
    "editorial": "We can show that the maximum number of moves possible is n and minimal moves needed is , so the problem equals to determine the minimal integer that is a multiple of m in the range .\nOne way to find the minimal number which is a multiple of m and greater than or equal to a number x is , we can compare this number to the upper bound n to determine if there is a valid solution.\nAlthough best practice is O(1), O(n) enumeration of each possible number of moves would also work.\ntime complexity: O(1)\nsample code: 8212169\nexplanation of sample code:\nThe  can be calculated in the following c++ code if a is non-negative and b is positive: (a+b-1)/b\nBecause / in c++ is integral division so (a+b-1)/b would result in \nLet a?=?div(a,?b)b?+?mod(a,?b)?=?db?+?m, .\nWhich means if , otherwise div(a?+?b?-?1,?b)?=?d?+?1. Can be translated to if , otherwise div(a?+?b?-?1,?b)?=?div(a,?b)?+?1. Which matches the value of .",
    "hint": []
}