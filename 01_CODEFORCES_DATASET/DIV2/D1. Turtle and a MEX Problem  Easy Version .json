{
    "link": "https://codeforces.com//contest/2003/problem/D1",
    "problemId": "2836628",
    "problem_idx": "D1",
    "shortId": "2003D1",
    "contest_number": "2003",
    "problem_submissions": {
        "E2": [
            278341707,
            278455104,
            278330622,
            278179988,
            278257072,
            278360261,
            278589270
        ],
        "E1": [
            278142159,
            278142843,
            278147621,
            278145820,
            278139445,
            278118163,
            278284773,
            278152908,
            278522597
        ],
        "D2": [
            278115632,
            278124223,
            278116119,
            278123063,
            278131280,
            278090274,
            278184104,
            278101954,
            278115622,
            278113440,
            278105822,
            278109507,
            278111408,
            278106372,
            278109910,
            278114958,
            278113518,
            278109092
        ],
        "D1": [
            278092613,
            278095057,
            278099358,
            278106267,
            278123018,
            278076086,
            278136646,
            278080662,
            278086676,
            278089029,
            278091347,
            278090118,
            278085289,
            278096196,
            278091226,
            278088309,
            278092415,
            278094460
        ],
        "C": [
            278073298,
            278084142,
            278084204,
            278091216,
            278102032,
            278059873,
            278062388,
            278064696,
            278066407,
            278065300,
            278076163,
            278064469,
            278071045,
            278077312,
            278070267,
            278068388,
            278071776,
            278071322
        ],
        "B": [
            278057061,
            278062158,
            278060356,
            278059818,
            278072173,
            278051522,
            278051239,
            278054673,
            278056246,
            278057857,
            278063310,
            278056133,
            278051957,
            278062245,
            278058767,
            278054937,
            278067356,
            278063368
        ],
        "A": [
            278051014,
            278054951,
            278054980,
            278049465,
            278052299,
            278047930,
            278047962,
            278049334,
            278049908,
            278052979,
            278052705,
            278049194,
            278048004,
            278057248,
            278049244,
            278048425,
            278067001,
            278049077
        ],
        "F": [
            283415067,
            278185607,
            278644931
        ]
    },
    "editorial_link": "https://codeforces.com/blog/entry/132953",
    "editorial": "Let the smallest non-negative integer that does not appear in the -th\r\nsequence be denoted as , and the second smallest non-negative integer\r\nthat does not appear as . In one operation of choosing index , if , then\r\nchanges to ; otherwise, changes to . It can be observed that if is\r\noperated at least once, its final value will not exceed . To achieve\r\nthis maximum value, one can select the index corresponding to this\r\nmaximum value twice.Let , then the answer is . If , the answer is ;\r\notherwise, the answer is .Time complexity: per test case.\r\n",
    "name": "D1. Turtle and a MEX Problem  Easy Version ",
    "statement": "One day, Turtle was playing with n sequences. Let the length of the i-th\r\nsequence be l_i. Then the i-th sequence was a_{i, 1}, a_{i, 2},\r\nldots, a_{i, l_i}.Piggy gave Turtle a problem to solve when Turtle was\r\nplaying. The statement of the problem was: There was a non-negative\r\ninteger x at first. Turtle would perform an arbitrary number (possibly\r\nzero) of operations on the integer. In each operation, Turtle could\r\nchoose an integer i such that 1\r\nle i\r\nle n, and set x to\r\ntext{mex}^{\r\ndagger}(x, a_{i, 1}, a_{i, 2},\r\nldots, a_{i, l_i}). Turtle was asked to find the answer, which was the\r\nvalue of x after performing an arbitrary number of operations. Turtle\r\nsolved the above problem without difficulty. He defined f(k) as the\r\nanswer to the above problem when the initial value of x was k.Then Piggy\r\ngave Turtle a non-negative integer m and asked Turtle to find the value\r\nof\r\nsum\r\nlimits_{i = 0}^m f(i) (i.e., the value of f(0) + f(1) +\r\nldots + f(m)). Unfortunately, he couldn\u2019t solve this problem. Please\r\nhelp him!^{\r\ndagger}\r\ntext{mex}(c_1, c_2,\r\nldots, c_k) is defined as the smallest integer x which does not occur in\r\nthe sequence c. For example,\r\ntext{mex}(2, 2, 0, 3) is 1,\r\ntext{mex}(1, 2) is 0.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\u00a0#define ranges std::ranges#define views std::views\u00a0using u32 = unsigned;using i64 = long long;using u64 = unsigned long long;\u00a0using pii = std::pair<int, int>;using a3 = std::array<int, 3>;using a4 = std::array<int, 4>;\u00a0const int N = 1e6;const int MAXN = 1e6 + 10;const int inf = 1e9;// const int mod = 1e9 + 7;const int mod = 998244353;\u00a0void solve() {    i64 n, m;std::cin >> n >> m;    i64 res = 0;    for (int i = 0;i < n;++i) {        int k;std::cin >> k;        std::vector<int> a(k);        for (int& x : a)std::cin >> x;        ranges::sort(a);        i64 mex = 0;        bool ok = true;        for (int i = 0;i < k;++i) {            if (a[i] > mex) {                if (ok)mex++, ok = false;                else break;            }            if (a[i] == mex)mex++;        }        mex += ok;        res = std::max(res, mex);    }    if (m <= res) {        i64 ans = (m + 1) * res;        std::cout << ans;        return;    }    // std::cout << res << ' ';    i64 ans = (res + 1) * res + (res + 1 + m) * (m - res) / 2;    std::cout << ans;}\u00a0signed main() {    std::ios::sync_with_stdio(false);    std::cin.tie(0), std::cout.tie(0);    int t;std::cin >> t;    while (t--) {        solve();        std::cout << '\\n';    }    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D1. Turtle and a MEX Problem  Easy Version .json"
}