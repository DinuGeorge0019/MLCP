{"link": "https://codeforces.com//contest/1733/problem/C", "problemId": "1545180", "problem_idx": "C", "shortId": "1733C", "contest_number": "1733", "problem_submissions": {"D2": [172908790, 172751668, 172751592, 172688818, 172697623, 172704330, 172699879, 172705767, 172702852, 172714613, 172708338, 172708145, 172730890, 172696294, 172712879, 172716774, 172688613, 172689119, 172689710, 172695749, 172696981], "D1": [172745848, 172681320, 172687676, 172680669, 172685630, 172696041, 172687426, 172689916, 172696394, 172697035, 172699792, 172689249, 172700313, 172694614, 172716626, 172702590, 172680742, 172680205, 172683816, 172681184, 172674583], "E": [172704678, 172710249, 172719591, 172713937, 172716945, 172716621, 172726801, 172726417, 172719626, 172716943, 172733013, 172732883, 172718293, 172731490, 172731251, 172913723], "C": [172676165, 172683984, 172676733, 172677972, 172690144, 172679557, 172682040, 172688901, 172690916, 172688245, 172682291, 172693974, 172680990, 172692339, 172679773, 172676779, 172675599, 172678602, 172677398, 172680874], "B": [172670086, 172672965, 172671197, 172672977, 172676007, 172675583, 172672789, 172677489, 172677650, 172675221, 172676078, 172675427, 172674469, 172685302, 172673596, 172671749, 172670718, 172670846, 172673489, 172671842], "A": [172667033, 172667345, 172667036, 172667352, 172668545, 172668036, 172667195, 172670967, 172668926, 172667072, 172674028, 172668209, 172667604, 172671761, 172667273, 172667385, 172667155, 172667212, 172667018, 172667026]}, "name": "C. Parity Shuffle Sorting", "statement": "You are given an array a with n non-negative integers. You can apply the\r\nfollowing operation on it. Choose two indices l and r (1\r\nle l < r\r\nle n). If a_l + a_r is odd, do a_r := a_l. If a_l + a_r is even, do a_l\r\n:= a_r. Find any sequence of at most n operations that makes a\r\nnon-decreasing. It can be proven that it is always possible. Note that\r\nyou do not have to minimize the number of operations.An array a_1, a_2,\r\nldots, a_n is non-decreasing if and only if a_1\r\nle a_2\r\nle\r\nldots\r\nle a_n.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n\nint T;\n\nint n,m;\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tcin>>n;\n\t\tvector<int>a(n+1),vis(n+1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcin>>a[i];\n\t\tif(n==1)\n\t\t{\n\t\t\tcout<<0<<\"\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tcout<<n-1<<\"\\n\";\n\t\tcout<<1<<\" \"<<n<<\"\\n\";\n\t\tfor(int i=2;i<n;i++)\n\t\t\tif((a[i]+a[1])%2)\n\t\t\t\tcout<<1<<\" \"<<i<<\"\\n\",vis[i]=1;\n\t\tfor(int i=n-1;i>1;i--)\n\t\t\tif(!vis[i])\n\t\t\t\tcout<<i<<\" \"<<n<<\"\\n\";\n\t}\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "sortings"], "dificulty": "1300", "interactive": false}