{
    "link": "https://codeforces.com//contest/353/problem/A",
    "problemId": "3643",
    "problem_idx": "A",
    "shortId": "353A",
    "contest_number": "353",
    "problem_submissions": {
        "E": [
            4734608,
            4735346,
            4733123,
            4737143,
            4736547,
            4742461,
            4742408
        ],
        "D": [
            4732406,
            4731843,
            4732120,
            4730587,
            4734474,
            4733362,
            4732298,
            4733722,
            4732919,
            4733388,
            4737051,
            4734992,
            4735113,
            4734496,
            4731987,
            4733739
        ],
        "B": [
            4730384,
            4730404,
            4729843,
            4733146,
            4728118,
            4733276,
            4731155,
            4728754,
            4730614,
            4729913,
            4731086,
            4732452,
            4732464,
            4729592,
            4732612,
            4730638,
            4733247,
            4732145
        ],
        "C": [
            4727160,
            4729197,
            4728938,
            4728842,
            4730078,
            4728441,
            4729412,
            4730353,
            4729606,
            4731302,
            4728675,
            4728539,
            4728797,
            4730952,
            4729543,
            4729905,
            4733939,
            4730129
        ],
        "A": [
            4726296,
            4726231,
            4726277,
            4727313,
            4726417,
            4726322,
            4726817,
            4726268,
            4726421,
            4726333,
            4726847,
            4726895,
            4726809,
            4726263,
            4728018,
            4726437,
            4734686,
            4726429
        ]
    },
    "name": "A. Domino",
    "statement": "Valera has got domino pieces in a row. Each piece consists of two halves\r\nthe upper one and the lower one. Each of the halves contains a number\r\nfrom to . Valera loves even integers very much, so he wants the sum of\r\nthe numbers on the upper halves and the sum of the numbers on the lower\r\nhalves to be even.To do that, Valera can rotate the dominoes by degrees.\r\nAfter the rotation the upper and the lower halves swap places. This\r\naction takes one second. Help Valera find out the minimum time he must\r\nspend rotating dominoes to make his wish come true.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n \nint main() {\n    cin.sync_with_stdio(0);\n    int N, sa =0, sb =0,a,b;\n    cin >> N;\n    int rev =0;\n    for(int i =0; i < N; i++) {\n        cin >> a >> b;\n        sa +=a, sb +=b;\n        if((a-b)%2 != 0) rev++;}\n    \n    if((sb+sa)%2 != 0) cout << \"-1\\n\";\n    else {\n        if(rev > 0) cout << (int)(sa%2 != 0) << \"\\n\";\n        else {if(sa%2 == 0) cout << \"0\\n\"; else cout << \"-1\\n\";}}\n    return 0;}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Domino.json",
    "editorial_link": "https://codeforces.com/blog/entry/9145",
    "editorial": "Letâs denote the sum of numbers on the upper halves of pieces as , and\r\nthe sum on the lower halves . If this sums are even, than the answer is\r\nobviously . Note, that if the numbers on both halves of piece have the\r\nsame parity, than parity of and wonât change after rotation this piece.\r\nIf the numbers on halves have different parity, than parities of both\r\nand will change after rotation. Therefore, if and have different\r\nparities, than the answer is . If both and are odd, than we should\r\ncheck, if there is a piece with numbers of different parities. If so,\r\nthe answer is , otherwise, the answer is .\r\n",
    "hint": []
}