{
    "link": "https://codeforces.com//contest/701/problem/D",
    "problemId": "66140",
    "problem_idx": "D",
    "shortId": "701D",
    "contest_number": "701",
    "problem_submissions": {
        "E": [
            19339232,
            19339967,
            19337387,
            19341119,
            19340472,
            19343370,
            19332036,
            19343768,
            19337227,
            19342206,
            19342884,
            19343434,
            19342706,
            19342112,
            19341446,
            19342774,
            19344918,
            19340782,
            19346141
        ],
        "D": [
            19336197,
            19336702,
            19340772,
            19337219,
            19338809,
            19336973,
            19345986,
            19337675,
            19341726,
            19340266,
            19337393,
            19339026,
            19340545,
            19339268,
            19343887,
            19339934,
            19334768,
            19345648,
            19338666
        ],
        "C": [
            19331548,
            19332315,
            19332582,
            19333338,
            19335372,
            19333598,
            19333759,
            19333561,
            19330276,
            19333948,
            19333692,
            19333063,
            19336324,
            19334938,
            19331957,
            19334534,
            19332828,
            19333541,
            19333823
        ],
        "B": [
            19328928,
            19333250,
            19330458,
            19331322,
            19331881,
            19330225,
            19337888,
            19330033,
            19333637,
            19330238,
            19331397,
            19328913,
            19331820,
            19331326,
            19330196,
            19332294,
            19330540,
            19331717,
            19331319
        ],
        "A": [
            19328299,
            19329195,
            19329297,
            19328777,
            19328512,
            19328665,
            19336083,
            19328494,
            19331305,
            19328347,
            19328615,
            19328349,
            19330505,
            19328746,
            19328523,
            19328329,
            19328905,
            19329447,
            19329651
        ],
        "F": [
            19425122,
            19349150,
            19462368,
            19462354
        ]
    },
    "name": "D. As Fast As Possible",
    "statement": "On vacations pupils decided to go on excursion and gather all together.\r\nThey need to overcome the path with the length meters. Each of the\r\npupils will go with the speed equal to . To get to the excursion\r\nquickly, it was decided to rent a bus, which has seats for people (it\r\nmeans that it can’t fit more than people at the same time) and the speed\r\nequal to . In order to avoid seasick, each of the pupils want to get\r\ninto the bus .Determine the minimum time required for all pupils to\r\nreach the place of excursion. Consider that the embarkation and\r\ndisembarkation of passengers, as well as the reversal of the bus, take\r\nplace immediately and this time can be neglected.\r\n",
    "solutions": [
        "#include<cstdlib>\n#include<cctype>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<string>\n#include<iostream>\n#include<sstream>\n#include<map>\n#include<set>\n#include<queue>\n#include<stack>\n#include<fstream>\n#include<numeric>\n#include<iomanip>\n#include<bitset>\n#include<list>\n#include<stdexcept>\n#include<functional>\n#include<utility>\n#include<ctime>\n#include<cassert>\nusing namespace std;\n#define rep(i,a,n) for(int i=(a);i<(int)(n);i++)\n#define all(x) (x).begin(),(x).end()\n#define sz(x) ((int)(x).size())\n#define MP make_pair\n#define PB push_back\n#define AA first\n#define BB second\n#define OP begin()\n#define ED end()\n#define SZ size()\ntypedef long long LL;\ntypedef pair<int,int> PII;\ntypedef pair<LL,LL> PLL;\ntypedef vector<int> VI;\ntypedef vector<LL> VL;\n#define cmin(x,y) x=min(x,y)\n#define cmax(x,y) x=max(x,y)\nconst LL MOD = 1000000007;\nconst double PI = acos(-1.);\nconst double eps = 1e-9;\nLL modPow(LL a,LL b,LL MOD){\n\tLL ret=1;for(;b;b>>=1){\n\t\tif(b&1)ret=ret*a%MOD;a=a*a%MOD;\n\t}return ret;\n}\n\nvoid solve(){\n\tint n,l,p,q,k;\n\tscanf(\"%d%d%d%d%d\",&n,&l,&p,&q,&k);\n\tdouble le=0,re=1.*l/p;\n\trep(i,0,1000){\n\t\tdouble me=(le+re)/2;\n\t\tint m=n;\n\t\tdouble d=l;\n\t\tdouble t=0;\n\t\tint fail=0;\n\t\twhile(m){\n\t\t\tif(t>me){\n\t\t\t\tfail=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdouble dt=(d-p*(me-t))/(q-p);\n\t\t\tt+=dt;\n\t\t\td-=dt*p;\n\t\t\tm=max(0,m-k);\n\t\t\tif(t>me){\n\t\t\t\tfail=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(m){\n\t\t\t\tdt=dt*(q-p)/(p+q);\n\t\t\t\tt+=dt;\n\t\t\t\td-=dt*p;\n\t\t\t}\n\t\t}\n\t\tif(fail)le=me;\n\t\telse re=me;\n\t}\n\tprintf(\"%.16f\\n\",(le+re)/2);\n}\n\nint main(){\n\tint _T=1;\n\trep(CA,0,_T){\n\t\tsolve();\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. As Fast As Possible.json",
    "editorial_link": "https://codeforces.com//blog/entry/46283",
    "editorial": "This problem can be solved with formula or with help of the binary\r\nsearch.Letâs describe the solution with binary search on the answer. If\r\nthe target function of the binary search returns we need to move in mid\r\nthe right end of the search, else we need to move in mid the left end of\r\nthe search. The target function must works in the following way. Letâs\r\ndivide all pupils on the groups, the number of the groups equals to ,\r\nwhere is the total number of pupils and is the number of seats in the\r\nbus. Then for the current we know the minimal time which the first group\r\nof the pupils is needed to ride on the bus to reach the finish point in\r\nthe time . Then we need to solve simple equation and get that this time\r\nequals to , where for the first group equals to , equals to 0 (in we\r\nwill store the position of the pupils, who did not already rode on the\r\nbus). Than we need to accurate recalculate and for every following group\r\n(do not forget that the bus must returns back to get the other group).\r\nIf for some group became less than or became less than , the target\r\nfunction must return . If all groups of pupils will reach the finish\r\npoint in time the target function must return . Also do not forget that\r\nthe bus does not need to ride back after it took to the needed point the\r\nlast group of the pupils.\r\n",
    "hint": []
}