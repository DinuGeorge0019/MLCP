{
    "link": "https://codeforces.com//contest/907/problem/E",
    "problemId": "140853",
    "problem_idx": "E",
    "shortId": "907E",
    "contest_number": "907",
    "problem_submissions": {
        "A": [
            33575410,
            33562373,
            33540675,
            33541958,
            33569551,
            33540657,
            33540926,
            33554400,
            33543519,
            33543455,
            33545359,
            33546723,
            33543893,
            33544746,
            33541852,
            33545259,
            33542765,
            33544738,
            33545990
        ],
        "E": [
            33569336,
            33565777,
            33581296,
            33581269,
            33579404,
            33566284,
            33569922,
            33629468,
            33568809,
            33566385,
            33570242,
            33565403,
            33570350
        ],
        "D": [
            33565126,
            33562641,
            33581688,
            33581260,
            33565908,
            33566346,
            33568422,
            33569754,
            33570678
        ],
        "C": [
            33549830,
            33551329,
            33554149,
            33567015,
            33549957,
            33554343,
            33567823,
            33552808,
            33554965,
            33557383,
            33556644,
            33558626,
            33561202,
            33556067,
            33558273,
            33556336,
            33558166,
            33556124
        ],
        "B": [
            33544318,
            33546636,
            33559945,
            33562988,
            33544727,
            33549069,
            33570043,
            33548318,
            33549618,
            33552052,
            33550884,
            33550827,
            33550979,
            33551429,
            33553199,
            33549528,
            33551065,
            33549896
        ],
        "F": [
            33567143,
            33554423,
            33558532,
            40494408
        ]
    },
    "name": "E. Party",
    "statement": "Arseny likes to organize parties and invite people to it. However, not\r\nonly friends come to his parties, but friends of his friends, friends of\r\nfriends of his friends and so on. That’s why some of Arseny’s guests can\r\nbe unknown to him. He decided to fix this issue using the following\r\nprocedure.At each step he selects one of his guests , who pairwise\r\nintroduces all of his friends to each other. After this action any two\r\nfriends of become friends. This process is run until all pairs of guests\r\nare friends.Arseny doesn’t want to spend much time doing it, so he wants\r\nto finish this process using the minimum number of steps. Help Arseny to\r\ndo it.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define _USE_MATH_DEFINES\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef complex<ld> pt;\ntypedef vector<pt> pol;\n#define nl '\\n'\n\n///* advent of code\ntypedef istringstream iss;\n#define pb push_back\n#define ins insert\n#define multiset mset\n#define getl(A) getline(cin, A)\n//*/\n\nconst ll INF = 0x3f3f3f3f;\nconst ll MOD = 1e9+7;\nconst ld EPS = 1e-9;\n\nvector<unordered_set<int>> init;\nint n, m;\n\nvector<int> solve(const vector<int>& perm) {\n\tint left = n*(n-1)/2 - m;\n\tvector<int> temp;\n\tvector<unordered_set<int>> cur = init;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (left == 0) break;\n\t\tint prev = left;\n\t\tfor (int j : cur[perm[i]]) {\n\t\t\tfor (int k : cur[perm[i]]) {\n\t\t\t\tif (k == j) continue;\n\t\t\t\tif (cur[j].count(k)) continue;\n\t\t\t\tcur[j].insert(k);\n\t\t\t\tcur[k].insert(j);\n\t\t\t\tleft--;\n\t\t\t}\n\t\t}\n\t\tif (prev > left) {\n\t\t\ttemp.push_back(perm[i]);\n\t\t}\n\t}\n\treturn temp;\n}\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\n\tcin >> n >> m;\n\tinit.resize(n);\n\n\tint a,b;\n\tfor (int i = 0; i < m; i++) {\n\t\tcin >> a >> b;\n\t\tinit[a-1].insert(b-1);\n\t\tinit[b-1].insert(a-1);\n\t}\n\n\tvector<int> perm;\n\tfor (int i = 0; i < n; i++) {\n\t\tperm.push_back(i);\n\t}\n\n\tsrand(clock() + time(nullptr));\n\tvector<int> ans;\n\tint best = INF;\n\t//int iters = 0;\n\twhile (clock() < 0.95*CLOCKS_PER_SEC) {\n\t\t//iters++;\n\t\trandom_shuffle(perm.begin(), perm.end());\n\t\tvector<int> temp = solve(perm);\n\t\tif (temp.size() < best) {\n\t\t\tans = temp;\n\t\t\tbest = temp.size();\n\t\t}\n\t}\n\t//cerr << \"iterations: \" << iters << nl;\n\n\tcout << ans.size() << nl;\n\tfor (int it : ans) \n\t\tcout << it+1 << \" \";\n\tcout << nl;\n\n\treturn 0;\n}\n////\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "graphs"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Party.json",
    "editorial_link": "https://codeforces.com//blog/entry/56601",
    "editorial": "Sorry, I think the Russian version analyzes this fact and so the English\r\nwill. This comment has no point.\r\n",
    "hint": []
}