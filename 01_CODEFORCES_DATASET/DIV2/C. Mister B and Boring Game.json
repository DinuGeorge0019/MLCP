{"link": "https://codeforces.com//contest/820/problem/C", "problemId": "112030", "problem_idx": "C", "shortId": "820C", "contest_number": "820", "problem_submissions": {"D": [28090049, 28137649, 28088664, 28094955, 28089529, 28089527, 28090859, 28089173, 28091024, 28094638, 28089824, 28091652, 28090283, 28091750, 28092540, 28091733, 28092897, 28093521, 28094268], "B": [28083049, 28106071, 28082021, 28080745, 28083623, 28081407, 28080513, 28081950, 28082191, 28081439, 28083924, 28081732, 28083872, 28083485, 28080808, 28085943, 28080448, 28082955, 28081466], "A": [28080531, 28105895, 28079641, 28078276, 28078539, 28078543, 28078629, 28078567, 28078870, 28078269, 28078946, 28078387, 28078624, 28079616, 28078334, 28079395, 28078375, 28078673, 28078593], "C": [28113571, 28113484, 28106533, 143980051], "E": [28279885, 28136857]}, "name": "C. Mister B and Boring Game", "statement": "Sometimes Mister B has free evenings when he doesn\u2019t know what to do.\r\nFortunately, Mister B found a new game, where the player can play\r\nagainst aliens.All characters in this game are lowercase English\r\nletters. There are two players: Mister B and his competitor.Initially\r\nthe players have a string consisting of the first English letters in\r\nalphabetical order (for example, if , then equals to \"\").The players\r\ntake turns appending letters to string . Mister B moves first.Mister B\r\nmust append exactly letters on each his move. He can arbitrary choose\r\nthese letters. His opponent adds exactly letters on each move.Mister B\r\nquickly understood that his opponent was just a computer that used a\r\nsimple algorithm. The computer on each turn considers the suffix of\r\nstring of length and generates a string of length such that all letters\r\nin the string are distinct and don\u2019t appear in the considered suffix.\r\nFrom multiple variants of lexicographically minimal is chosen (if and\r\nthe suffix is \"\", the computer chooses string equal to \"\"). After that\r\nthe chosen string is appended to the end of .Mister B soon found the\r\ngame boring and came up with the following question: what can be the\r\nminimum possible number of different letters in string on the segment\r\nbetween positions and , inclusive. Letters of string are numerated\r\nstarting from .\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tint a, b, l, r, i, c, j, ans = 0;\n\tscanf(\"%d %d %d %d\", &a, &b, &l, &r);\n\tint lq = (l - 1) / (a + b), lr = (l - 1) % (a + b) + 1, rq = (r - 1) / (a + b), rr = (r - 1) % (a + b) + 1;\n\tif (rq == lq) {\n\t\tif (rr <= a) ans = rr - lr + 1;\n\t\telse if(lr <= a) ans = a - lr + 1;\n\t\telse ans = 1;\n\t}\n\telse{\n\t\trr = min(a, rr);\n\t\tif (b < a) {\n\t\t\tif (rq - lq >= 3) ans = 2 * a - b;\n\t\t\telse if (rq - lq == 1) {\n\t\t\t\tif (lr > a) ans = 1 + rr;\n\t\t\t\telse ans = min(a - b, a - lr + 1) + rr;\n\t\t\t}\n\t\t\telse if (rq - lq == 2) {\n\t\t\t\tif (lr > a) ans = max(b + 1, rr) + a - b;\n\t\t\t\telse ans = max(b + a - lr + 1, rr) + a - b;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (rq - lq >= 2) ans = a + 1;\n\t\t\telse {\n\t\t\t\tif(rr >= a) ans = a + 1;\n\t\t\t\telse if(lr > a) ans = 1 + rr;\n\t\t\t\telse ans = min(rr + a - lr + 1, a);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n}"], "input": "", "output": "", "tags": ["games", "greedy"], "dificulty": "2200", "interactive": false}