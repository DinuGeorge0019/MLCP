{
    "link": "https://codeforces.com//contest/1988/problem/A",
    "problemId": "2755739",
    "problem_idx": "A",
    "shortId": "1988A",
    "contest_number": "1988",
    "problem_submissions": {
        "E": [
            270685050,
            270705019,
            270700025,
            272334496,
            270690864,
            270707787,
            270701276,
            270700901,
            270718018,
            270707694,
            270712456,
            270717955,
            270717609,
            270717396,
            270722279,
            270721777,
            270713323,
            270726034,
            270728933,
            270723571,
            270713049
        ],
        "D": [
            270667414,
            270666131,
            270678688,
            270697022,
            270684902,
            270684329,
            270689879,
            270679010,
            270680404,
            270690647,
            270675498,
            270681957,
            270688264,
            270682354,
            270685580,
            270691868,
            270688997,
            270685310,
            270682871,
            270686949
        ],
        "A": [
            270656934,
            270657283,
            270646313,
            270648673,
            270647770,
            270646255,
            270646226,
            270646704,
            270646496,
            270646875,
            270646230,
            270646537,
            270649042,
            270647239,
            270646832,
            270647970,
            270646816,
            270646403,
            270647818,
            270690835
        ],
        "B": [
            270653903,
            270658113,
            270648318,
            270659660,
            270651609,
            270649653,
            270649456,
            270651315,
            270648898,
            270652028,
            270649680,
            270649413,
            270659881,
            270651090,
            270653561,
            270652761,
            270651998,
            270650038,
            270651450,
            270654441
        ],
        "C": [
            270647243,
            270657923,
            270653896,
            270669456,
            270664152,
            270658071,
            270658378,
            270659641,
            270660679,
            270663455,
            270660051,
            270666865,
            270671029,
            270662305,
            270672676,
            270661337,
            270662076,
            270660202,
            270665229,
            270662007
        ],
        "F": [
            276883705,
            276879542,
            270840778
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/131581",
    "editorial": "The optimal sequence of operations is adding k?1\n 1-s into the set each time, at the same time decreasing n\n by k?1\n. This implies that the answer is ?n?1k?1?\n.\n",
    "name": "A. Split the Multiset",
    "statement": "A is a set of numbers in which there can be equal elements, and the\r\norder of the numbers does not matter. For example,\r\n{2,2,4\r\n} is a multiset.You have a multiset S. Initially, the multiset contains\r\nonly one positive integer n. That is, S=\r\n{n\r\n}. Additionally, there is a given positive integer k.In one operation,\r\nyou can select any positive integer u in S and remove one copy of u from\r\nS. Then, insert no more than k positive integers into S so that the sum\r\nof all inserted integers is equal to u.Find the minimum number of\r\noperations to make S contain n ones.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>#define pb push_back#define sz(a) ((int)a.size())#define re return#define all(a) a.begin(),a.end()#define rept(i,a,b) for(int i=(a);i<(b);i++)#define rep(i,a) rept(i,0,a)#define vi vector<int>#define pii pair<int,int>#define F first#define S second#define de(x) cout<<#x<<\"=\"<<x<<\"\\n\";#define int long long#define il inline#define db double#define ld long dbusing namespace std;const int MOD=998244353,INF=1000000000000000000;template<typename T>inline void Mx(T &a,T b){a=max(a,b);}template<typename T>inline void Mi(T &a,T b){a=min(a,b);}void FILEIO(string s){\tfreopen((s+\".in\").c_str(),\"r\",stdin);\tfreopen((s+\".out\").c_str(),\"w\",stdout);}void run(){\tint n,k;\tcin>>n>>k;\tcout<<(n-1+k-2)/(k-1)<<\"\\n\";}signed main(){\tios::sync_with_stdio(0);\tcin.tie(0);cout.tie(0);\tint T=1;\tcin>>T;\twhile(T--)\t\trun();\tre 0;}Â "
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Split the Multiset.json",
    "hint": []
}