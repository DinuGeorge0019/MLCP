{"link": "https://codeforces.com//contest/606/problem/B", "problemId": "42713", "problem_idx": "B", "shortId": "606B", "contest_number": "606", "problem_submissions": {"E": [14725950, 14727210, 14727285, 14729262, 14730116, 14751808, 14744112], "D": [14723234, 14720930, 14722869, 14722527, 14721927, 14721746, 14724535, 14726175, 14725267, 14727123, 14723529, 14723141, 14723054, 14723150, 14724111, 14724621, 14724261, 14729733, 14726510, 14723588], "C": [14720687, 14718170, 14720169, 14719390, 14718531, 14725447, 14722596, 14730393, 14718042, 14720969, 14719927, 14719309, 14718761, 14720872, 14720282, 14719898, 14721458, 14724065, 14721907, 14718844], "B": [14719527, 14727489, 14717796, 14718524, 14717743, 14717859, 14719198, 14721650, 14720720, 14718805, 14718705, 14720039, 14720141, 14718565, 14718498, 14718858, 14720719, 14719695, 14729480], "A": [14716101, 14721455, 14715984, 14715809, 14716134, 14715791, 14715975, 14739251, 14715905, 14717499, 14716801, 14716057, 14715921, 14715914, 14715981, 14716162, 14716237, 14717038, 14716311, 14716156]}, "name": "B. Testing Robots", "statement": "The Cybernetics Failures (CF) organisation made a prototype of a bomb\r\ntechnician robot. To find the possible problems it was decided to carry\r\nout a series of tests. At the beginning of each test the robot prototype\r\nwill be placed in cell of a rectangular squared field of size , after\r\nthat a mine will be installed into one of the squares of the field. It\r\nis supposed to conduct exactly tests, each time a mine is installed into\r\na square that has never been used before. The starting cell of the robot\r\nalways remains the same.After placing the objects on the field the robot\r\nwill have to run a sequence of commands given by string , consisting\r\nonly of characters \u201d, \u201d, \u201d, \u201d. These commands tell the robot to move one\r\nsquare to the left, to the right, up or down, or stay idle if moving in\r\nthe given direction is impossible. As soon as the robot fulfills all the\r\nsequence of commands, it will blow up due to a bug in the code. But if\r\nat some moment of time the robot is at the same square with the mine, it\r\nwill also blow up, but not due to a bug in the code.Moving to the left\r\ndecreases coordinate , and moving to the right increases it. Similarly,\r\nmoving up decreases the coordinate, and moving down increases it.The\r\ntests can go on for very long, so your task is to predict their results.\r\nFor each from to your task is to find in how many tests the robot will\r\nrun exactly commands before it blows up.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint x, y;\nint xk, yk;\n\nbool t[501][501];\nvector<int> ki;\nint sum;\n\nint main()\n{\n    //freopen(\"B.txt\", \"r\", stdin);\n    ios_base::sync_with_stdio(false);\n    cin >> x>>y>>xk>>yk;\n    ki.push_back(1);\n    sum=1;\n    t[xk][yk]=true;\n    string s;\n    cin>>s;\n    for (int i=0;i<s.size();i++) {\n        char c=s[i];\n        if (c=='U') {\n            xk--;\n        }\n        if (c=='D') {\n            xk++;\n        }\n        if (c=='L') {\n            yk--;\n        }\n        if (c=='R') {\n            yk++;\n        }\n\n        if (xk<1) xk=1;\n        if (xk>x) xk=x;\n        if (yk<1) yk=1;\n        if (yk>y) yk=y;\n\n        if (i<s.size()-1) {\n            if (t[xk][yk]) ki.push_back(0);\n            else {\n                ki.push_back(1);\n                sum++;\n                t[xk][yk]=true;\n            }\n        } else {\n            if (t[xk][yk]) ki.push_back(x*y-sum);\n            else {\n                ki.push_back(x*y-sum);\n                sum++;\n                t[xk][yk]=true;\n            }\n        }\n    }\n\n    for (auto z:ki) {\n        cout << z<<\" \";\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1600", "interactive": false}