{
    "link": "https://codeforces.com//contest/1379/problem/B",
    "problemId": "676890",
    "problem_idx": "B",
    "shortId": "1379B",
    "contest_number": "1379",
    "problem_submissions": {
        "F2": [
            87337334
        ],
        "F1": [
            87335742,
            87339101,
            87337260,
            87346349,
            87331786
        ],
        "C": [
            87325904,
            87311494,
            87310672,
            87300625,
            87303708,
            87304495,
            87303918,
            144460845,
            87308563,
            87299896,
            87303811,
            87316171,
            87303179,
            87308051,
            87311612,
            87310601,
            87310579,
            87310057,
            87313129,
            87307968,
            87308536
        ],
        "D": [
            87320979,
            87326317,
            87326054,
            87310243,
            87318999,
            87323134,
            87327442,
            144461795,
            87328150,
            87328279,
            87321031,
            87333849,
            87337374,
            87336880,
            87336733,
            87324819,
            87323673,
            87326632,
            87332039,
            87324509
        ],
        "B": [
            87292569,
            87299875,
            87297218,
            87294683,
            87294536,
            87293871,
            87299681,
            144459626,
            87295308,
            87293115,
            87290952,
            87296663,
            87291474,
            87295427,
            87292476,
            87294398,
            87295480,
            87294133,
            87302755,
            87296827,
            87299220
        ],
        "A": [
            87289516,
            87291821,
            87290680,
            87291117,
            87290110,
            87290710,
            87290018,
            144458741,
            87289978,
            87290066,
            87289499,
            87289644,
            87295538,
            87290013,
            87289641,
            87289754,
            87291674,
            87304051,
            87290874,
            87292316,
            87291880
        ]
    },
    "name": "B. Dubious Cyrpto",
    "statement": "Pasha loves to send strictly positive integers to his friends. Pasha\r\ncares about security, therefore when he wants to send an integer n, he\r\nencrypts it in the following way: he picks three integers a, b and c\r\nsuch that l\r\nleq a,b,c\r\nleq r, and then he computes the encrypted value m = n\r\ncdot a + b - c.Unfortunately, an adversary intercepted the values l, r\r\nand m. Is it possible to recover the original values of a, b and c from\r\nthis information? More formally, you are asked to find values of a, b\r\nand c such that a, b and c are integers, l\r\nleq a, b, c\r\nleq r, there exists a strictly positive integer n, such that n\r\ncdot a + b - c = m.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\nsigned main() {\n\tint t;\n\tcin >> t;\n\n\tfor(int x = 0; x < t; x++) {\n\t\tint l, r, m;\n\t\tcin >> l >> r >> m;\n\n\t\tbool ok = false;\n\t\tfor(int a = l; a <= r; a++) {\n\t\t\tfor(int n = max(1LL, (m + l - r) / a); n * a + l - r <= m; n++) {\n\t\t\t\tint diff = m - n * a;\n\n\t\t\t\tint b, c;\n\n\t\t\t\tc = r;\n\t\t\t\tb = diff + c;\n\t\t\t\tif(l <= b && b <= r && l <= c && c <= r) {\n\t\t\t\t\tcout << a << \" \" << b << \" \" << c << \"\\n\";\n\t\t\t\t\tok = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tb = r;\n\t\t\t\tc = b - diff;\n\t\t\t\tif(l <= b && b <= r && l <= c && c <= r) {\n\t\t\t\t\tcout << a << \" \" << b << \" \" << c << \"\\n\";\n\t\t\t\t\tok = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Dubious Cyrpto.json",
    "editorial_link": "https://codeforces.com//blog/entry/80216",
    "editorial": "The task is to solve equation in integers, where is some natural number,\r\nand . Note that the expression can take any value from and only these\r\nvalues. Indeed, if , then if we denote , , we get . A similar statement\r\nis true for .So, since it was necessary to solve the equation , this is\r\nequivalent to solving the equation , where , . Letâs fix some arbitrary\r\n. Then we find the maximum for which this will be equal to . Letâs check\r\nwhether it is true that and . If this is the case, then restore and as\r\nindicated above.This solution iterates over all possible values of , and\r\nchecks if such can be used in answer if the manner described above.\r\nThus, this solution has complexity\r\n",
    "hint": []
}