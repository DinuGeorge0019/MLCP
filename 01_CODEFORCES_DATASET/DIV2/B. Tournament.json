{"link": "https://codeforces.com//contest/27/problem/B", "problemId": "125", "problem_idx": "B", "shortId": "27B", "contest_number": "27", "problem_submissions": {"C": [118523, 117811, 117814, 117821, 1202654, 117657, 117499, 119957, 117700, 119337, 118774, 118192, 117772, 118123], "E": [118273, 118684, 118448, 118559, 118059, 118536, 119960, 118988, 119040, 119271, 119970], "D": [117934, 118098, 118656, 118879, 117613, 118207, 119959, 118542, 118353, 118733, 121675, 118883], "B": [117350, 117487, 117442, 117491, 117370, 117796, 119955, 117513, 117473, 118282, 119741, 117496, 117464, 117783], "A": [117113, 117117, 117183, 117189, 117387, 117134, 117129, 119954, 117122, 117228, 117819, 117165, 117139, 117252]}, "name": "B. Tournament", "statement": "The tournament Sleepyhead-2010 in the rapid falling asleep has just\r\nfinished in Berland. best participants from the country have\r\nparticipated in it. The tournament consists of games, each of them is a\r\nmatch between two participants. games were played during the tournament,\r\nand each participant had a match with each other participant. The rules\r\nof the game are quite simple the participant who falls asleep first\r\nwins. The secretary made a record of each game in the form , where and\r\nare the numbers of participants. The first number in each pair is a\r\nwinner (i.e. is a winner and is a loser). There is no draws.Recently\r\nresearches form the Institute Of Sleep have found that every person is\r\ncharacterized by a value the speed of falling asleep. The person who has\r\nlower speed wins. Every person has its own value , constant during the\r\nlife. It is known that all participants of the tournament have distinct\r\nspeeds of falling asleep. Also it was found that the secretary made\r\nrecords about all the games except one. You are to find the result of\r\nthe missing game.\r\n", "solutions": ["#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<map>\n#include<vector>\n#include<list>\n#include<set>\n#include<queue>\n#include<cassert>\n#include<sstream>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define LET(x,a) \t__typeof(a) x(a)\n#define IFOR(i,a,b) \tfor(LET(i,a);i!=(b);++i)\n#define EACH(it,v)  \tIFOR(it,v.begin(),v.end())\n#define FOR(i,a,b)  \tfor(int i=(int)(a) ; i < (int)(b);++i)\n#define REP(i,n) \tFOR(i,0,n)\n#define PB\t\tpush_back\n#define MP \t\tmake_pair\n#define EPS\t\t1e-9\n#define INF 2000000000\n\ntypedef vector<int>\tVI;\ntypedef long long\tLL;\ntypedef pair<int,int>\tPI;\n\nint main(){\n\tint n;cin>>n;\n\tint visited[n+2][n+2];\n\tmemset(visited,-1,sizeof(visited));\n\tint num = (n*(n-1))/2 - 1;\n\tREP(i,num){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tvisited[a][b] = 1;\n\t\tvisited[b][a] = 0;\n\t}\n\tint np1,np2;\n\tFOR(i,1,n+1)FOR(j,1,n+1)if(i!=j){\n\t\tif(visited[i][j]==-1){\n\t\t\tnp1 = i;\n\t\t\tnp2 = j;\n\t\t}\n\t}\n\tint ans = -1;\n\tFOR(i,1,n+1)if(i!=np1 && i!=np2){\n\t\tif(visited[np1][i]!=visited[np2][i]){\n\t\t\tif(visited[np1][i]==1)ans = 1;\n\t\t\telse ans = 2;\n\t\t}\n\t}\n\tif(ans==1)cout<<np1<<\" \"<<np2<<endl;\n\telse cout<<np2<<\" \"<<np1<<endl;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "brute force", "dfs and similar", "greedy"], "dificulty": "1300", "interactive": false}