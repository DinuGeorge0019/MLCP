{
    "link": "https://codeforces.com//contest/1847/problem/A",
    "problemId": "1996638",
    "problem_idx": "A",
    "shortId": "1847A",
    "contest_number": "1847",
    "problem_submissions": {
        "F": [
            212433608,
            212431110,
            212414836,
            212437044,
            212436646,
            212438573,
            212439809,
            212461142,
            212444034,
            212441048,
            212442560,
            212446414,
            212448526,
            212446363,
            212477387,
            212473113,
            212447258,
            212445412,
            212440060,
            212484613,
            212430011,
            212447626,
            212448642,
            212429172
        ],
        "D": [
            212389437,
            212405663,
            212427981,
            212401825,
            212406614,
            212408665,
            212391793,
            212412178,
            212420289,
            212416938,
            212416798,
            212415041,
            212411965,
            212408607,
            212417943,
            212402342,
            212440813,
            212424407,
            212414209,
            212448028
        ],
        "C": [
            212379554,
            212388481,
            212381978,
            212383167,
            212391492,
            212395637,
            212408363,
            212918680,
            212459952,
            212459679,
            212387499,
            212392748,
            212401136,
            212392067,
            212389261,
            212394523,
            212454918,
            212396638,
            212395742,
            212387056,
            212410808,
            212403757,
            212388758,
            212439567
        ],
        "B": [
            212375586,
            212386366,
            212383195,
            212377114,
            212379209,
            212382779,
            212400416,
            212381176,
            212374781,
            212381202,
            212383485,
            212376778,
            212384302,
            212388840,
            212379283,
            212442148,
            212382593,
            212383125,
            212398777,
            212403514
        ],
        "A": [
            212372531,
            212381099,
            212372843,
            212372985,
            212372832,
            212383462,
            212396957,
            212372898,
            212372422,
            212372468,
            212373223,
            212373301,
            212373237,
            212373415,
            212375604,
            212372629,
            212374004,
            212375662,
            212372722,
            212387500
        ],
        "E": [
            212780531,
            212480822
        ]
    },
    "name": "A. The Man who became a God ",
    "statement": "is tired and resentful of the narrow mindset of his village since they\r\nare content with staying where they are and are not trying to become the\r\nperfect life form. Being a top-notch inventor, wishes to enhance his\r\nbody and become the perfect life form. Unfortunately, n of the villagers\r\nhave become suspicious of his ideas. The i-th villager has a suspicion\r\nof a_i on him. Individually each villager is scared of Kars, so they\r\nform into groups to be more powerful.The power of the group of villagers\r\nfrom l to r be defined as f(l,r) where f(l,r) = |a_l - a_{l+1}| +\r\n|a_{l + 1} - a_{l + 2}| +\r\nldots + |a_{r-1} - a_r|.Here |x-y| is the absolute value of x-y. A group\r\nwith only one villager has a power of 0. wants to break the villagers\r\ninto exactly k contiguous subgroups so that the sum of their power is\r\nminimized. Formally, he must find k - 1 positive integers 1\r\nle r_1 < r_2 <\r\nldots < r_{k - 1} < n such that f(1, r_1) + f(r_1 + 1, r_2) +\r\nldots + f(r_{k-1} + 1, n) is minimised. Help in finding the minimum\r\nvalue of f(1, r_1) + f(r_1 + 1, r_2) +\r\nldots + f(r_{k-1} + 1, n).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nusing i64 = long long;\n#define N 300'005\n\nint n, k, a[N];\nvoid solve()\n{\n    cin >> n >> k;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    vector<int> tmp;\n    for (int i = 2; i <= n; i++)\n        tmp.push_back(abs(a[i] - a[i - 1]));\n    sort(tmp.begin(), tmp.end(), greater<>());\n    i64 ans = 0;\n    for (int i = 2; i <= n; i++)\n        ans += abs(a[i] - a[i - 1]);\n    for (int i = 0; i < k - 1; i++)\n        ans -= tmp[i];\n    cout << ans << '\\n';\n}\n\nsigned main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int t = 1;\n    cin >> t;\n    while (t--)\n        solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. The Man who became a God .json",
    "editorial_link": "https://codeforces.com//blog/entry/117928",
    "editorial": "Let us find . Now, you need to divide the array into more parts. When\r\nyou split an array of size into two parts, the suspicion changes from to\r\n(). Also, . Substituting this in previous change, we get changes to .\r\nThat is, gets subtracted. Now, to get minimum suspicion, we need to\r\nbreak the array at such that gets maximised.Now, we have array of size\r\nwhere (). We can solve the problem using any of the two approaches.-\r\nFind the least element in and remove that from and add that element to\r\nthe answer. Do this exactly times. Time complexity - .- We can sort and\r\ndonât take maximum elements (or take first elements. Time Complexity - .\r\n",
    "hint": []
}