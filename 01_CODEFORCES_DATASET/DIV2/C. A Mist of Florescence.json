{
    "link": "https://codeforces.com//contest/989/problem/C",
    "problemId": "189260",
    "problem_idx": "C",
    "shortId": "989C",
    "contest_number": "989",
    "problem_submissions": {
        "D": [
            39163269,
            39163112,
            39165857,
            39164842,
            39165262,
            39167503,
            39166865,
            39167541,
            39164863,
            39166255,
            39166513,
            40225602,
            39224097
        ],
        "B": [
            39154764,
            39151093,
            39155556,
            39151132,
            39151653,
            39153849,
            39153122,
            39159658,
            39153374,
            39150884,
            39150337,
            39152210,
            39152914,
            39153499,
            39150661
        ],
        "C": [
            39153682,
            39156523,
            39156042,
            39159828,
            39156893,
            39155516,
            39158583,
            39155306,
            39156082,
            39158096,
            39162808,
            39159449,
            39155362,
            39156561,
            39157709,
            39159630
        ],
        "A": [
            39148137,
            39147995,
            39148129,
            39148199,
            39148053,
            39152704,
            39150073,
            39152107,
            39149919,
            39149579,
            39158576,
            39147965,
            39148111,
            39149222,
            39149475,
            39148105
        ],
        "E": [
            39193583,
            39193088
        ]
    },
    "name": "C. A Mist of Florescence",
    "statement": "There are four kinds of flowers in the wood, Amaranths, Begonias,\r\nCentaureas and Dianthuses.The wood can be represented by a rectangular\r\ngrid of n rows and m columns. In each cell of the grid, there is exactly\r\none type of flowers.According to Mino, the numbers of connected\r\ncomponents formed by each kind of flowers are a, b, c and d\r\nrespectively. Two cells are considered in the same connected component\r\nif and only if a path exists between them that moves between cells\r\nsharing common edges and passes only through cells containing the same\r\nflowers.You are to help Kanno depict such a grid of flowers, with n and\r\nm arbitrarily chosen under the constraints given below. It can be shown\r\nthat at least one solution exists under the constraints of this\r\nproblem.Note that you can choose arbitrary n and m under the constraints\r\nbelow, they are not given in the input.\r\n",
    "solutions": [
        "#include \"iostream\"\n#include \"climits\"\n#include \"list\"\n#include \"queue\"\n#include \"stack\"\n#include \"set\"\n#include \"functional\"\n#include \"algorithm\"\n#include \"string\"\n#include \"map\"\n#include \"unordered_map\"\n#include \"unordered_set\"\n#include \"iomanip\"\n#include \"cmath\"\n#include \"random\"\n#include \"bitset\"\n#include \"cstdio\"\n\nusing namespace std;\n\nconst long long int MOD = 1000000007;\n\nlong long int N, M, K, H, W, L, R;\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tcin >> N >> M >> L >> R;\n\tH = 50;\n\tW = 50;\n\tvector<string>v(H);\n\tfor (int i = 0; i < H; i++) {\n\t\tv[i].resize(W);\n\t}\n\tfor (int i = 0; i < H; i++) {\n\t\tfor (int j = 0; j < W / 2; j++) {\n\t\t\tif (i % 2 && j % 2)continue;\n\t\t\tv[i][j] = 'A';\n\t\t}\n\t}\n\tfor (int i = 0; i < H; i++) {\n\t\tfor (int j = W / 2; j < W; j++) {\n\t\t\tif (i % 2 && j % 2 == 0)continue;\n\t\t\tv[i][j] = 'B';\n\t\t}\n\t}\n\tN--;\n\tM--;\n\tfor (int i = 1; i < H; i += 2) {\n\t\tfor (int j = 1; j < W/2; j += 2) {\n\t\t\tif (M) {\n\t\t\t\tv[i][j] = 'B';\n\t\t\t\tM--;\n\t\t\t}\n\t\t\telse if (R) {\n\t\t\t\tv[i][j] = 'D';\n\t\t\t\tR--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tv[i][j] = 'A';\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i < H; i+=2) {\n\t\tfor (int j = 26; j < W; j += 2) {\n\t\t\tif (N) {\n\t\t\t\tv[i][j] = 'A';\n\t\t\t\tN--;\n\t\t\t}\n\t\t\telse if (L) {\n\t\t\t\tv[i][j] = 'C';\n\t\t\t\tL--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tv[i][j] = 'B';\n\t\t\t}\n\t\t}\n\t}\n\tcout << H << \" \" << W << endl;\n\tfor (auto i : v) {\n\t\tcout << i << endl;\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "graphs"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. A Mist of Florescence.json",
    "editorial_link": "https://codeforces.com//blog/entry/59968",
    "editorial": "A picture is worth a thousand words. There are enormous ways to solve\r\nthis problem. What\u00e2\u0080\u0099s yours? Fine-tune your input and parameters, depict\r\nyour woods here and share with us in the comments! (Remember to clip and\r\nscale the image, though. You can surround the image with a spoiler tag\r\nto avoid taking up too much space.)Note: in case jscolor doesn\u00e2\u0080\u0099t load\r\nproperly (a pop-up should appear when the colour inputs are clicked on),\r\ntry refreshing once.Shoutouts to Alexander Golovanov (Golovanov399) for\r\nhis grid-drawing tool, on which our utility is based!\r\n"
}