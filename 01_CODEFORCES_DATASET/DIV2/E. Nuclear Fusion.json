{
    "link": "https://codeforces.com//contest/71/problem/E",
    "problemId": "384",
    "problem_idx": "E",
    "shortId": "71E",
    "contest_number": "71",
    "problem_submissions": {
        "E": [
            364940,
            364561,
            364869,
            367554,
            364877,
            365341,
            366959
        ],
        "D": [
            364121,
            370659,
            364672,
            364797,
            364478,
            365171,
            365496,
            365374,
            365026
        ],
        "C": [
            362958,
            363113,
            363174,
            362960,
            363170,
            363249,
            363364,
            363672,
            362819,
            363791,
            363858,
            363105,
            363379,
            363017,
            363030,
            364051
        ],
        "B": [
            362471,
            362684,
            362612,
            362536,
            362613,
            362856,
            362438,
            362761,
            362270,
            362469,
            362902,
            365732,
            362795,
            362402,
            362273,
            362966
        ],
        "A": [
            362169,
            361901,
            361819,
            361870,
            361938,
            362121,
            362009,
            362162,
            361786,
            362024,
            361769,
            361943,
            362014,
            361863,
            361998,
            362420
        ]
    },
    "name": "E. Nuclear Fusion",
    "statement": "There is the following puzzle popular among nuclear physicists.A reactor\r\ncontains a set of atoms of some chemical elements. We shall understand\r\nthe phrase \"atomic number\" as the number of this atom’s element in the\r\nperiodic table of the chemical elements.You are allowed to take any two\r\ndifferent atoms and fuse a new one from them. That results in a new\r\natom, whose number is equal to the sum of the numbers of original atoms.\r\nThe fusion operation can be performed several times.The aim is getting a\r\nnew pregiven set of atoms.The puzzle’s difficulty is that it is only\r\nallowed to fuse two atoms into one, it is not allowed to split an atom\r\ninto several atoms. You are suggested to try to solve the puzzle.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <string>\n#include <map>\nusing namespace std;\n\npair< int, int > dp[20][131073];\nmap< string, int > atom;\nint sum[131073];\n\nmain(){\n\tatom[\"H\"] = 1;\n\tatom[\"He\"] = 2;\n\tatom[\"Li\"] = 3;\n\tatom[\"Be\"] = 4;\n\tatom[\"B\"] = 5;\n\tatom[\"C\"] = 6;\n\tatom[\"N\"] = 7;\n\tatom[\"O\"] = 8;\n\tatom[\"F\"] = 9;\n\tatom[\"Ne\"] = 10;\n\tatom[\"Na\"] = 11;\n\tatom[\"Mg\"] = 12;\n\tatom[\"Al\"] = 13;\n\tatom[\"Si\"] = 14;\n\tatom[\"P\"] = 15;\n\tatom[\"S\"] = 16;\n\tatom[\"Cl\"] = 17;\n\tatom[\"Ar\"] = 18;\n\tatom[\"K\"] = 19;\n\tatom[\"Ca\"] = 20;\n\tatom[\"Sc\"] = 21;\n\tatom[\"Ti\"] = 22;\n\tatom[\"V\"] = 23;\n\tatom[\"Cr\"] = 24;\n\tatom[\"Mn\"] = 25;\n\tatom[\"Fe\"] = 26;\n\tatom[\"Co\"] = 27;\n\tatom[\"Ni\"] = 28;\n\tatom[\"Cu\"] = 29;\n\tatom[\"Zn\"] = 30;\n\tatom[\"Ga\"] = 31;\n\tatom[\"Ge\"] = 32;\n\tatom[\"As\"] = 33;\n\tatom[\"Se\"] = 34;\n\tatom[\"Br\"] = 35;\n\tatom[\"Kr\"] = 36;\n\tatom[\"Rb\"] = 37;\n\tatom[\"Sr\"] = 38;\n\tatom[\"Y\"] = 39;\n\tatom[\"Zr\"] = 40;\n\tatom[\"Nb\"] = 41;\n\tatom[\"Mo\"] = 42;\n\tatom[\"Tc\"] = 43;\n\tatom[\"Ru\"] = 44;\n\tatom[\"Rh\"] = 45;\n\tatom[\"Pd\"] = 46;\n\tatom[\"Ag\"] = 47;\n\tatom[\"Cd\"] = 48;\n\tatom[\"In\"] = 49;\n\tatom[\"Sn\"] = 50;\n\tatom[\"Sb\"] = 51;\n\tatom[\"Te\"] = 52;\n\tatom[\"I\"] = 53;\n\tatom[\"Xe\"] = 54;\n\tatom[\"Cs\"] = 55;\n\tatom[\"Ba\"] = 56;\n\tatom[\"Lu\"] = 71;\n\tatom[\"Hf\"] = 72;\n\tatom[\"Ta\"] = 73;\n\tatom[\"W\"] = 74;\n\tatom[\"Re\"] = 75;\n\tatom[\"Os\"] = 76;\n\tatom[\"Ir\"] = 77;\n\tatom[\"Pt\"] = 78;\n\tatom[\"Au\"] = 79;\n\tatom[\"Hg\"] = 80;\n\tatom[\"Tl\"] = 81;\n\tatom[\"Pb\"] = 82;\n\tatom[\"Bi\"] = 83;\n\tatom[\"Po\"] = 84;\n\tatom[\"At\"] = 85;\n\tatom[\"Rn\"] = 86;\n\tatom[\"Fr\"] = 87;\n\tatom[\"Ra\"] = 88;\n\tatom[\"Lr\"] = 103;\n\tatom[\"Rf\"] = 104;\n\tatom[\"Db\"] = 105;\n\tatom[\"Sg\"] = 106;\n\tatom[\"Bh\"] = 107;\n\tatom[\"Hs\"] = 108;\n\tatom[\"Mt\"] = 109;\n\tatom[\"Ds\"] = 110;\n\tatom[\"Rg\"] = 111;\n\tatom[\"Cn\"] = 112;\n\tatom[\"Uut\"] = 113;\n\tatom[\"Uuq\"] = 114;\n\tatom[\"Uup\"] = 115;\n\tatom[\"Uuh\"] = 116;\n\tatom[\"Uus\"] = 117;\n\tatom[\"Uuo\"] = 118;\n\tatom[\"La\"] = 57;\n\tatom[\"Ce\"] = 58;\n\tatom[\"Pr\"] = 59;\n\tatom[\"Nd\"] = 60;\n\tatom[\"Pm\"] = 61;\n\tatom[\"Sm\"] = 62;\n\tatom[\"Eu\"] = 63;\n\tatom[\"Gd\"] = 64;\n\tatom[\"Tb\"] = 65;\n\tatom[\"Dy\"] = 66;\n\tatom[\"Ho\"] = 67;\n\tatom[\"Er\"] = 68;\n\tatom[\"Tm\"] = 69;\n\tatom[\"Yb\"] = 70;\n\tatom[\"Ac\"] = 89;\n\tatom[\"Th\"] = 90;\n\tatom[\"Pa\"] = 91;\n\tatom[\"U\"] = 92;\n\tatom[\"Np\"] = 93;\n\tatom[\"Pu\"] = 94;\n\tatom[\"Am\"] = 95;\n\tatom[\"Cm\"] = 96;\n\tatom[\"Bk\"] = 97;\n\tatom[\"Cf\"] = 98;\n\tatom[\"Es\"] = 99;\n\tatom[\"Fm\"] = 100;\n\tatom[\"Md\"] = 101;\n\tatom[\"No\"] = 102;\n\t\n\tint out, left;\n\tint i, j, n, m;\n\tint s, a[20];\n\tstring readin;\n\tstring b[20], c[20];\n\t\n\tscanf ( \"%d %d\", &n, &m );\n\tfor ( i = 0; i < n; i ++ ){\n\t\tcin >> readin;\n\t\tb[i] = readin;\n\t\ta[i] = atom[ readin ];\n\t}\n\tsum[0] = 0;\n\tfor ( i = 0; i < n; i ++ ){\n\t\ts = ( 1 << i );\n\t\tfor ( j = 0; j < s; j ++ )\n\t\t\tsum[ s + j ] = sum[j] + a[i];\n\t}\n\t\n\tmemset ( dp, 0, sizeof ( dp ) );\n\tdp[m][0] = make_pair( 1, 0 );\n\tfor ( i = 0; i < m; i ++ ){\n\t\tcin >> readin;\n\t\tc[i] = readin;\n\t\ta[i] = atom[ readin ];\n\t}\n\twhile( m -- )\n\t\tfor ( i = ( 1 << n ) - 1; i >= 0; i -- )\n\t\t\tif ( dp[ m + 1 ][i].first == 1 ){\n\t\t\t\ts = ( 1 << n ) - 1 - i;\n\t\t\t\tfor ( j = s; j > 0; j = ( j - 1 ) & s )\n\t\t\t\t\tif ( sum[j] == a[m] )\n\t\t\t\t\t\tdp[m][ i + j ] = make_pair( 1, j );\n\t\t\t}\n\tm = 0;\n\tif ( dp[0][ ( 1 << n ) - 1 ].first == 1 ){\n\t\tprintf( \"YES\\n\" );\n\t\tleft = ( 1 << n ) - 1;\n\t\twhile( left ){\n\t\t\tout = dp[m][left].second;\n\t\t\tfor ( i = 0; i < n; i ++ )\n\t\t\t\tif ( out & ( 1 << i ) ){\n\t\t\t\t\tprintf( \"%s\", b[i].c_str() );\n\t\t\t\t\tout -= ( 1 << i );\n\t\t\t\t\tif ( out )\n\t\t\t\t\t\tprintf( \"+\");\n\t\t\t\t}\n\t\t\tprintf( \"->%s\\n\", c[m].c_str() );\n\t\t\tleft -= dp[m][left].second;\n\t\t\tm ++;\n\t\t}\n\t}\n\telse\n\t\tprintf( \"NO\\n\" );\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "dp"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Nuclear Fusion.json",
    "editorial_link": "https://codeforces.com//blog/entry/1624",
    "editorial": "At first, you can use some search engine for find periodic table in some printable form. Next use copy-paste (one or several times) and format it by deleting all excess. It is mechanical work for no more than 5 minutes. Also some parser may be written. Note than author's solution does not mean write 100 symbols by hand from a picture. Next build some functions which transform symbols into numbers and vice versa.\n\nSo, we have some set of numbers. We need summarize some from them and get some another set of numbers. We will use dymanic programming over subsets.\n\nCompute the first dp dp1[mask]->sum. For each subset calculate sum of numbers of all atoms in this subset. It can be done in O(2nn).\n\nNow compute the second dp dp2[mask]->length. The \"length\" is a length of some prefix of result sequence of atoms which can be obtained by subset mask. If length -1, it means that it is impossible to get any prefix from this subset.\n\nThe second dp we can calculate in O(3n). Iterate over all masks and if dp2[mask]!=-1, iterate all its subsets of remained atoms (invert mask and get all its submasks). If some subset has sum of numbers which equals number of (dp2[?????]+1)-th atom from result set, recalculate dp2[mask XOR submask]=dp2[mask]+1.\n\nAt end, if dp2[2n?-?1]=k, there are solution.",
    "hint": []
}