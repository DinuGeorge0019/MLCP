{
    "link": "https://codeforces.com//contest/137/problem/B",
    "problemId": "722",
    "problem_idx": "B",
    "shortId": "137B",
    "contest_number": "137",
    "problem_submissions": {
        "D": [
            960005,
            960083,
            960407,
            960822,
            960978,
            959728,
            959647,
            960244,
            961785,
            961204,
            960009,
            960173,
            960331,
            960318,
            961322,
            961503,
            960958,
            959450,
            961108
        ],
        "E": [
            959375,
            960769,
            959788,
            959842,
            960438,
            960606,
            961308,
            961259,
            960542,
            960298,
            961524,
            961740,
            961358,
            961405,
            960518,
            960604,
            961543,
            962797,
            961827
        ],
        "A": [
            958154,
            958315,
            957467,
            957359,
            957636,
            957482,
            957504,
            957682,
            957763,
            958206,
            957614,
            957505,
            957814,
            957699,
            957800,
            958834,
            957616,
            957354,
            958655
        ],
        "B": [
            957805,
            957908,
            957895,
            957576,
            958020,
            957753,
            957706,
            958045,
            958039,
            958890,
            957997,
            957845,
            958326,
            958171,
            958572,
            959109,
            958403,
            957499,
            958442
        ],
        "C": [
            957396,
            957611,
            958395,
            958193,
            958567,
            958319,
            958191,
            958994,
            962691,
            962687,
            958717,
            959395,
            958900,
            958213,
            959117,
            959359,
            959315,
            960063,
            959720,
            957783,
            958064
        ]
    },
    "name": "B. Permutation",
    "statement": "\"Hey, it\u2019s homework time\" thought Polycarpus and of course he started\r\nwith his favourite subject, IT. Polycarpus managed to solve all tasks\r\nbut for the last one in 20 minutes. However, as he failed to solve the\r\nlast task after some considerable time, the boy asked you to help\r\nhim.The sequence of integers is called a permutation if it contains all\r\nintegers from to exactly once.You are given an arbitrary sequence\r\ncontaining integers. Each integer is not less than and not greater than\r\n. Determine what minimum number of elements Polycarpus needs to change\r\nto get a permutation (he should not delete or add numbers). In a single\r\nchange he can modify any single sequence element (i. e. replace it with\r\nanother integer).\r\n",
    "solutions": [
        "#include <cstdio>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long LL;\ntypedef pair<int,int> PII;\n\nint main(){\n    int n,cnt[5001]={},ans=0;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++){\n        int tmp;\n        scanf(\"%d\",&tmp);\n        cnt[tmp]++;\n    }\n    for(int i=1;i<=n;i++) if(!cnt[i]) ans++;\n    printf(\"%d\\n\",ans);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Permutation25836.json",
    "editorial_link": "https://codeforces.com//blog/entry/3318",
    "editorial": "We can count the number of integers from 1 to n, which occur in sequence\r\nat least once. Then the answer is n minus that number. The complexity is\r\nO(n).\r\n"
}