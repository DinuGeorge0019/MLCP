{
    "link": "https://codeforces.com//contest/181/problem/C",
    "problemId": "1238",
    "problem_idx": "C",
    "shortId": "181C",
    "contest_number": "181",
    "problem_submissions": {
        "E": [
            1590113,
            1590937,
            1590679,
            1590013,
            1589120,
            1589907,
            1592216,
            1592384,
            1590755
        ],
        "D": [
            1589155,
            1588722,
            1590996,
            1588173,
            1588742,
            1591468,
            1589039,
            1589783,
            1589665,
            1589895,
            1589654,
            1589997,
            1590444,
            1590515
        ],
        "C": [
            1587940,
            1589199,
            1588760,
            1587377,
            1587624,
            1588135,
            1587859,
            1588331,
            1587782,
            1587761,
            1587961,
            1587963,
            1588400,
            1588067,
            1588525,
            1588209,
            1588624
        ],
        "B": [
            1586840,
            1586866,
            1587707,
            1586377,
            1586530,
            1586858,
            1586846,
            1587063,
            1586738,
            1586718,
            1586968,
            1587093,
            1586831,
            1587067,
            1587085,
            1587398,
            1587045
        ],
        "A": [
            1586352,
            1587002,
            1586481,
            1586332,
            1586340,
            1586462,
            1586515,
            1586430,
            1586388,
            1586402,
            1586351,
            1586368,
            1586685,
            1586466,
            1586482,
            1586638,
            1586389
        ]
    },
    "name": "C. Trading Business",
    "statement": "To get money for a new aeonic blaster, ranger Qwerty decided to engage\r\nin trade for a while. He wants to buy some number of items (or probably\r\nnot to buy anything at all) on one of the planets, and then sell the\r\nbought items on another planet. Note that this operation is not\r\nrepeated, that is, the buying and the selling are made only once. To\r\ncarry out his plan, Qwerty is going to take a bank loan that covers all\r\nexpenses and to return the loaned money at the end of the operation (the\r\nmoney is returned without the interest). At the same time, Querty wants\r\nto get as much profit as possible.The system has planets in total. On\r\neach of them Qwerty can buy or sell items of types (such as food,\r\nmedicine, weapons, alcohol, and so on). For each planet and each type of\r\nitems Qwerty knows the following: the cost of buying an item; the cost\r\nof selling an item; the number of remaining items.It is not allowed to\r\nbuy more than items of type on planet , but it is allowed to sell any\r\nnumber of items of any kind.Knowing that the hold of Qwertyâ€™s ship has\r\nroom for no more than items, determine the maximum profit which Qwerty\r\ncan get.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n\n#define pb push_back\n\ntypedef unsigned int uint;\ntypedef long long i64;\ntypedef unsigned long long ui64;\n\nconst int intINF=999999999;\nconst i64 i64INF=99999999999999999ll;\nconst double doubleINF=9999999999.;\n\nusing namespace std;\n\nstruct good{int pr,q;};\n\nint res=0;\nint n,m,k;\nint p[11][111][4];\n\nint max(int a,int b){\n\tif(a<b) a=b;\n\treturn a;\n}\n\nbool gsort(good a,good b){\n\treturn a.pr>b.pr;\n}\n\nvoid go(int fr,int to){\n\tgood g[111];\n\tfor(int i=1;i<=m;i++){\n\t\tg[i].q=p[fr][i][3];\n\t\tg[i].pr=p[to][i][2]-p[fr][i][1];\n\t}\n\tg[m+1].q=9999999;\n\tg[m+1].pr=0;\n\tsort(g+1,g+m+2,gsort);\n\tint left=k,got=0,cnt=1;\n\twhile(left>0){\n\t\tif(g[cnt].q>left){\n\t\t\tgot+=g[cnt].pr*left;\n\t\t\tleft=0;\n\t\t}\n\t\telse{\n\t\t\tgot+=g[cnt].pr*g[cnt].q;\n\t\t\tleft-=g[cnt].q;\n\t\t\tg[cnt].q=0;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tres=max(res,got);\n}\n\nint main(){\n\tchar c;\n\tscanf(\"%d%d%d%*c\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++){\n\t\twhile(scanf(\"%c\",&c),c!='\\n');\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tfor(int h=1;h<=3;h++)\n\t\t\t\tscanf(\"%d\",&p[i][j][h]);\n\t\tscanf(\"%*c\");\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(i!=j)\n\t\t\t\tgo(i,j);\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "graph matchings",
        "greedy"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Trading Business.json",
    "editorial_link": "https://codeforces.com//blog/entry/4372",
    "editorial": "In this problem some greedy solution expected.\n\nLet fix 2 planets: in planet i we will buy items, in planet j we will sell the ones. Profit of item of type k will be b_jk-a_ik. Every item has size 1, so you should greedy take items in order of decreasing of profits of items while you have place in the hold.\n\nScheme of full solution: you should iterate over all pairs of planet, for every pair greedy take items and find total profit. At the end you should find maximal total profit over all pairs and output it.",
    "hint": []
}