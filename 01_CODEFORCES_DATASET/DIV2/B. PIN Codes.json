{"link": "https://codeforces.com//contest/1263/problem/B", "problemId": "483578", "problem_idx": "B", "shortId": "1263B", "contest_number": "1263", "problem_submissions": {"F": [65982966, 65978661, 65982743, 66004105, 65981403, 65982906, 65984527, 65967209, 65985700, 65987420, 65990597, 65985690, 65988080, 66082681, 66082661, 65991200, 65988308, 65990381, 65990481, 66004842, 66004759, 66004719, 66004190, 65989038, 65986432, 65987559], "A": [65969521, 65961098, 65960714, 65962476, 65960820, 65960894, 65980138, 65961073, 65960873, 65961438, 65963263, 65960772, 65978824, 65961157, 65962102, 65960839, 65961853, 65961109, 65961702], "E": [65968592, 65970858, 65970511, 66002882, 65966227, 65975131, 65974148, 65975198, 65975184, 65976510, 65977397, 65977245, 65977807, 65973180, 65969025, 65981150, 65979864, 65980298, 65982044, 65990889, 65982753], "D": [65964312, 65966149, 65963758, 65968928, 65967814, 65969772, 65976755, 65969893, 65967529, 65964864, 65971947, 65966055, 65962087, 65967297, 65966037, 65973690, 65970452, 65967218, 65972623], "C": [65962585, 65964625, 65962104, 65977080, 65966153, 65965608, 65964949, 65977661, 65966317, 65964823, 65965028, 65969369, 65963751, 65963273, 65964947, 65961279, 65968926, 65968185, 65964802, 65969882], "B": [65961580, 65962530, 65961425, 65964286, 65964464, 65963229, 65979595, 65963832, 65962737, 65962077, 65967269, 65974357, 65980348, 65962893, 65969125, 65965548, 65964171, 65963429, 65966476]}, "name": "B. PIN Codes", "statement": "A PIN code is a string that consists of exactly 4 digits. Examples of\r\npossible PIN codes: , and . Please note that the PIN code can begin with\r\nany digit, even with .Polycarp has n (2\r\nle n\r\nle 10) bank cards, the PIN code of the i-th card is p_i.Polycarp has\r\nrecently read a recommendation that it is better to set different PIN\r\ncodes on different cards. Thus he wants to change the minimal number of\r\ndigits in the PIN codes of his cards so that all n codes would become\r\ndifferent.Formally, in one step, Polycarp picks i-th card (1\r\nle i\r\nle n), then in its PIN code p_i selects one position (from 1 to 4), and\r\nchanges the digit in this position to any other. He needs to change the\r\nminimum number of digits so that all PIN codes become different.Polycarp\r\nquickly solved this problem. Can you solve it?\r\n", "solutions": ["#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <queue>\n#include <numeric>\n#include <functional>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <unordered_set>\n#include <memory>\n#include <thread>\n#include <tuple>\n#include <limits>\n\nusing namespace std;\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T-- > 0) {\n    int n;\n    scanf(\"%d\", &n);\n    vector<string> val(n);\n    for (int i = 0; i < n; i++) {\n      char buff[256];\n      scanf(\"%s\", buff);\n      val[i] = buff;\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      bool has_same = false;\n      for (int j = 0; j < i; j++) {\n        if (val[i] == val[j]) {\n          has_same = true;\n          break;\n        }\n      }\n      if (has_same) {\n        string temp = val[i];\n        bool found = false;\n        for (int d = 0; d < 4; d++) {\n          for (int v = 0; v < 10; v++) {\n            temp[d] = v + '0';\n            bool fail = false;\n            for (int k = 0; k < n; k++) {\n              if (k == i) continue;\n              if (temp == val[k]) {\n                fail = true;\n                break;\n              }\n            }\n            if (!fail) {\n              val[i] = temp;\n              found = true;\n            }\n            if (found) break;\n          }\n          if (found) break;\n        }\n        ans++;\n      }\n    }\n    printf(\"%d\\n\", ans);\n    for (int i = 0; i < n; i++) {\n      printf(\"%s\\n\", val[i].c_str());\n    }\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "1400", "interactive": false}