{
    "link": "https://codeforces.com//contest/1106/problem/C",
    "problemId": "290932",
    "problem_idx": "C",
    "shortId": "1106C",
    "contest_number": "1106",
    "problem_submissions": {
        "F": [
            49265817,
            49264923,
            49266558,
            49269257,
            49271213,
            49272184,
            49272969,
            49267903,
            49273554,
            49895559,
            49298045,
            49263114,
            49273336,
            49274102,
            49274867,
            49300428,
            49276394,
            49277229,
            49269016,
            49266937,
            49277423,
            49277280,
            49269846
        ],
        "E": [
            49261808,
            49267815,
            49266852,
            49261526,
            49261539,
            49258516,
            49262159,
            49269184,
            49261973,
            49895562,
            49273364,
            49263914,
            49261370,
            49261525,
            49300401,
            49261737,
            49261915,
            49273907,
            49276075,
            49262981,
            49266273,
            49276021
        ],
        "B": [
            49257277,
            49252209,
            49248876,
            49251236,
            49256788,
            49251411,
            49251144,
            49255473,
            49251954,
            49895487,
            49263583,
            49254902,
            49252783,
            49253845,
            49300101,
            49250570,
            49252035,
            49259947,
            49251497,
            49253887,
            49260721,
            49251319
        ],
        "D": [
            49252880,
            49254281,
            49252504,
            49255122,
            49251697,
            49253429,
            49254193,
            49257749,
            49255378,
            49895514,
            49296674,
            49250135,
            49257979,
            49256084,
            49256833,
            49300300,
            49255435,
            49255524,
            49255367,
            49255410,
            49258191,
            49255067,
            49255106
        ],
        "C": [
            49249200,
            49252258,
            49250171,
            49253405,
            49249251,
            49247144,
            49252242,
            49250452,
            49253463,
            49895495,
            49252232,
            49249038,
            49255058,
            49255040,
            49300208,
            49300199,
            49252907,
            49253665,
            49252133,
            49253357,
            49255807,
            49250684,
            49253071
        ],
        "A": [
            49246544,
            49245865,
            49245896,
            49246235,
            49246566,
            49245858,
            49246274,
            49248820,
            49246242,
            49895480,
            49249300,
            49246352,
            49247004,
            49246275,
            49300057,
            49300056,
            49246548,
            49246161,
            49246888,
            49246017,
            49246734,
            49261784,
            49245817
        ]
    },
    "name": "C. Lunar New Year and Number Division",
    "statement": "There are n positive integers a_1, a_2,\r\nldots, a_n on Bob\u2019s homework paper, where n is always an number. Bob is\r\nasked to divide those numbers into groups, where each group must contain\r\nat least 2 numbers. Suppose the numbers are divided into m groups, and\r\nthe sum of the numbers in the j-th group is s_j. Bob\u2019s aim is to\r\nminimize the sum of the square of s_j, that is\r\nsum_{j = 1}^{m} s_j^2.Bob is puzzled by this hard problem. Could you\r\nplease help him solve it?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 550000;\nint a[N];\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tlong long ans = 0;\n\tfor (int i = 1; i <= n; i++) ans += a[i] * 1LL * a[i];\n\tfor (int i = 1; i <= n / 2; i++) ans += 2LL * a[i] * a[n + 1 - i];\n\tcout << ans << endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Lunar New Year and Number Division.json",
    "editorial_link": "https://codeforces.com/blog/entry/64928",
    "editorial": "This problem is easy as it looks like, and it is proved to be simple. As\r\nis even, the optimal grouping policy is to group the smallest with the\r\nlargest, the second smallest with the second largest, etc.First, it is\r\neasy to prove that it is optimal to group these numbers by , so the\r\nproof is given as an exercise to you.The proof of the second part is\r\nabout the Rearrangement Inequality. Let\u00e2\u0080\u0099s consider two of the\r\npermutations of the sequence . Suppose they are where if and only if .\r\nThen the sum is one of the grouping policy of . As we do not care about\r\nthe part We only aim to minimize . That is the direct application of the\r\nRearrangement Inequality.\r\n"
}