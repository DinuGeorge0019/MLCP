{
    "link": "https://codeforces.com//contest/1629/problem/E",
    "problemId": "1270554",
    "problem_idx": "E",
    "shortId": "1629E",
    "contest_number": "1629",
    "problem_submissions": {
        "E": [
            143691687,
            143672752,
            143687137,
            143663655,
            143674506,
            143679445,
            143862635,
            143682492,
            143680665,
            143680424,
            143685684,
            143684891,
            143753002,
            143685619,
            143692185,
            143689230,
            143685863,
            143687115,
            143695099,
            143693974
        ],
        "F2": [
            143688718,
            143726329,
            143690987
        ],
        "F1": [
            143676123,
            143697164,
            143692998,
            143741879,
            143678223,
            143750588,
            143750365
        ],
        "D": [
            143667461,
            143661533,
            143674891,
            143656107,
            143648676,
            143665361,
            143663909,
            143668220,
            143661278,
            143662732,
            143656926,
            143668180,
            143668746,
            143665526,
            143669234,
            143667378,
            143676861,
            143663591,
            143664123
        ],
        "C": [
            143651046,
            143647499,
            143659885,
            143651714,
            143662268,
            143651456,
            143647120,
            143654421,
            143646086,
            143650221,
            143697555,
            143656282,
            143655178,
            143644392,
            143657665,
            143654804,
            143651022,
            143650097,
            143652583
        ],
        "B": [
            143642034,
            143637040,
            143638720,
            143651837,
            143664772,
            143638989,
            143637268,
            143641201,
            143638312,
            143634980,
            143632383,
            143644246,
            143635339,
            143635326,
            143637617,
            143639992,
            143639371,
            143640785,
            143642627
        ],
        "A": [
            143633916,
            143631168,
            143632391,
            143651906,
            143666062,
            143631304,
            143631044,
            143630886,
            143631218,
            143630607,
            143639841,
            143633922,
            143630487,
            143630572,
            143630653,
            143631188,
            143630505,
            143635250,
            143635282
        ]
    },
    "name": "E. Grid Xor",
    "statement": "Note: The XOR-sum of set\r\n{s_1,s_2,\r\nldots,s_m\r\n} is defined as s_1\r\noplus s_2\r\noplus\r\nldots\r\noplus s_m, where\r\noplus denotes the bitwise XOR operation.After almost winning IOI, Victor\r\nbought himself an n\r\ntimes n grid containing integers in each cell. The integer in the cell\r\nin the i-th row and j-th column is a_{i,j}.Sadly, Mihai stole the grid\r\nfrom Victor and told him he would return it with only one condition:\r\nVictor has to tell Mihai the XOR-sum of the integers in the whole\r\ngrid.Victor doesnâ€™t remember all the elements of the grid, but he\r\nremembers some information about it: For each cell, Victor remembers the\r\nXOR-sum of all its neighboring cells.Two cells are considered neighbors\r\nif they share an edge in other words, for some integers 1\r\nle i, j, k, l\r\nle n, the cell in the i-th row and j-th column is a neighbor of the cell\r\nin the k-th row and l-th column if |i - k| = 1 and j = l, or if i = k\r\nand |j - l| = 1.To get his grid back, Victor is asking you for your\r\nhelp. Can you use the information Victor remembers to find the XOR-sum\r\nof the whole grid?It can be proven that the answer is unique.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mod 1000000007\n#define inv2 500000004\nll read() {\n\tll x=0,f=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n\tfor(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';\n\treturn x*f;\n}\nll power(ll x,ll y) {\n\tll ret=1;\n\twhile(y) {\n\t\tif(y&1) ret=ret*x%mod;\n\t\tx=x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn ret;\n}\nint T;\nint n,cnt[1010][1010],ans;\nint main() {\n\tscanf(\"%d\",&T);\n\twhile(T--) {\n\t\tans=0;\n\t\tscanf(\"%d\",&n);\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tfor(int j=1;j<=n;j++) {\n\t\t\t\tint tmp;\n\t\t\t\tscanf(\"%d\",&tmp);\n\t\t\t\tif(!cnt[i-1][j]&&!cnt[i][j+1]&&!cnt[i][j-1]&&!cnt[i+1][j]) {\n\t\t\t\t\tans^=tmp;\n\t\t\t\t\tcnt[i-1][j]++;cnt[i][j+1]++;\n\t\t\t\t\tcnt[i][j-1]++;cnt[i+1][j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<'\\n';\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "interactive",
        "math"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Grid Xor.json",
    "editorial_link": "https://codeforces.com//blog/entry/99276",
    "editorial": "This has been stress tested by harasees_singh for all even n from 2 to\r\n1000. Here is the link to my submission: 143698533\r\n",
    "hint": []
}