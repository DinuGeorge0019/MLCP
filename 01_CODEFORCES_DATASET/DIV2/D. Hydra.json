{
    "link": "https://codeforces.com//contest/244/problem/D",
    "problemId": "2194",
    "problem_idx": "D",
    "shortId": "244D",
    "contest_number": "244",
    "problem_submissions": {
        "D": [
            2571247,
            2570676,
            2575346,
            2576494,
            2682903,
            2585837,
            2585755,
            2572212,
            2572142,
            2579013,
            3418813,
            2572107,
            2574421
        ],
        "C": [
            2569289,
            2572891,
            2570409,
            2570513,
            2641304,
            2570920,
            2572105,
            2569437,
            2570373,
            2571030,
            2570901,
            2571143,
            2571722,
            2571723,
            3289288,
            2571234,
            2571110
        ],
        "B": [
            2568269,
            2572132,
            2568654,
            2569576,
            19961131,
            2568814,
            2570231,
            2570819,
            2569055,
            2570885,
            2568719,
            2569755,
            2569459,
            2569334,
            2568410,
            2569135,
            2570454,
            2569964,
            2569449
        ],
        "A": [
            2567788,
            2570624,
            2567790,
            2568110,
            2567940,
            2568024,
            2569710,
            2567812,
            2568427,
            2567980,
            2568379,
            2567844,
            2567847,
            2569075,
            2567791,
            2567881,
            2567930,
            2567996
        ],
        "E": [
            2585587,
            2630732
        ]
    },
    "name": "D. Hydra",
    "statement": "One day Petya got a birthday present from his mom: a book called \"The\r\nLegends and Myths of Graph Theory\". From this book Petya learned about a\r\ngraph.A non-oriented graph is a , if it has a structure, shown on the\r\nfigure below. Namely, there are two nodes and connected by an edge, they\r\nare the hydra’s and , correspondingly. The chest is connected with\r\nnodes, which are the hydra’s . The stomach is connected with nodes,\r\nwhich are the hydra’s . Note that the hydra is a tree, consisting of\r\nnodes. Also, Petya’s got a non-directed graph , consisting of nodes and\r\nedges. Petya got this graph as a last year birthday present from his\r\nmom. Graph contains no self-loops or multiple edges.Now Petya wants to\r\nfind a hydra in graph . Or else, to make sure that the graph doesn’t\r\nhave a hydra.\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <vector>\nusing namespace std;\nvector<int> e[100010];\nint a[210], b[210], an, bn;\nint d[210], dn;\nstruct abc{\n    int x, y;\n}c[200010];\nint u[100010];\nint p[100010];\nint main(){\n    int n, m, h, t, i, j, x, y, s, rrr = 1;\n    scanf(\"%d%d%d%d\", &n, &m, &h, &t);\n    m <<= 1;\n    for (i = 0; i < m; i += 2){\n        scanf(\"%d%d\", &x, &y);\n        c[i].x = x, c[i].y = y;\n        c[i + 1].x = y, c[i + 1].y = x;\n        e[x].push_back(y);\n        e[y].push_back(x);\n    }\n    for (i = 0; i < m; i++){\n        x = c[i].x;\n        y = c[i].y;\n        an = bn = dn = 0;\n        s = h + t;\n        for (j = 0; j < (int)e[x].size(); j++){\n            int z = e[x][j];\n            if (z == y) continue;\n            u[z] = rrr;\n            p[z] = an;\n            a[an++] = z;\n            s--;\n            if (s == 0) break;\n        }\n        s = h + t;\n        for (j = 0; j < (int)e[y].size(); j++){\n            int z = e[y][j];\n            if (z == x) continue;\n            s--;\n            if (u[z] == rrr){\n                swap(a[p[z]], a[an - 1]);\n                an--;\n                d[dn++] = z;\n            }else{\n                b[bn++] = z;\n            }\n            if (s == 0) break;\n        }\n        rrr++;\n        if (an + dn >= h && bn + dn - max(h - an, 0) >= t){\n            printf(\"YES\\n\");\n            printf(\"%d %d\\n\", x, y);\n            for (i = 0; i < an && i < h; i++){\n                printf(\"%d%c\", a[i], i==(h-1)?'\\n':' ');\n            }\n            for (i = an; i < h; i++){\n                printf(\"%d%c\", d[--dn], i==(h-1)?'\\n':' ');\n            }\n            for (i = 0; i < bn && i < t; i++){\n                printf(\"%d%c\", b[i], i==(t-1)?'\\n':' ');\n            }\n            for (i = bn; i < t; i++){\n                printf(\"%d%c\", d[--dn], i==(t-1)?'\\n':' ');\n            }\n            return 0;\n        }\n    }\n    printf(\"NO\\n\");\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Hydra.json",
    "editorial_link": "https://codeforces.com//blog/entry/5895",
    "editorial": null
}