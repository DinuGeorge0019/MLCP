{
    "link": "https://codeforces.com//contest/1315/problem/B",
    "problemId": "547043",
    "problem_idx": "B",
    "shortId": "1315B",
    "contest_number": "1315",
    "problem_submissions": {
        "E": [
            71717972,
            71722121,
            71723928,
            71729230,
            71974152,
            72008868,
            72008805
        ],
        "B": [
            71712835,
            71705609,
            71705328,
            71705471,
            71703387,
            71704005,
            71704127,
            71704155,
            71704023,
            71705610,
            71706151,
            71706053,
            71706193,
            71704779,
            71704406,
            71705432,
            71705176,
            71707656,
            71704939
        ],
        "A": [
            71711680,
            71703327,
            71702875,
            71702517,
            71702293,
            71702355,
            71702415,
            71702704,
            71703705,
            71703020,
            71702906,
            71703383,
            71703894,
            71702683,
            71702739,
            71702868,
            71702438,
            71703823,
            71702490
        ],
        "D": [
            71705281,
            71711782,
            71710689,
            71709097,
            71706684,
            71712045,
            71709367,
            71709685,
            71709559,
            71709699,
            71712591,
            71718977,
            71710420,
            71711447,
            71712487,
            71711123,
            71711486,
            71711635,
            71712415
        ],
        "C": [
            71703583,
            71708130,
            71708191,
            71706924,
            71704462,
            71705381,
            71706364,
            71706633,
            71705353,
            71706839,
            71709056,
            71708876,
            71707615,
            71706977,
            71706123,
            71708378,
            71708224,
            71705852,
            71707083
        ],
        "F": [
            71735158,
            71754645,
            71744524,
            71744441
        ]
    },
    "name": "B. Homecoming",
    "statement": "After a long party Petya decided to return home, but he turned out to be\r\nat the opposite end of the town from his home. There are n crossroads in\r\nthe line in the town, and there is either the bus or the tram station at\r\neach crossroad.The crossroads are represented as a string s of length n,\r\nwhere s_i =\r\ntexttt{A}, if there is a bus station at i-th crossroad, and s_i =\r\ntexttt{B}, if there is a tram station at i-th crossroad. Currently Petya\r\nis at the first crossroad (which corresponds to s_1) and his goal is to\r\nget to the last crossroad (which corresponds to s_n).If for two\r\ncrossroads i and j for all crossroads i, i+1,\r\nldots, j-1 there is a bus station, one can pay a roubles for the bus\r\nticket, and go from i-th crossroad to the j-th crossroad by the bus (it\r\nis not necessary to have a bus station at the j-th crossroad). Formally,\r\npaying a roubles Petya can go from i to j if s_t =\r\ntexttt{A} for all i\r\nle t < j. If for two crossroads i and j for all crossroads i, i+1,\r\nldots, j-1 there is a tram station, one can pay b roubles for the tram\r\nticket, and go from i-th crossroad to the j-th crossroad by the tram (it\r\nis not necessary to have a tram station at the j-th crossroad).\r\nFormally, paying b roubles Petya can go from i to j if s_t =\r\ntexttt{B} for all i\r\nle t < j.For example, if s=\"\", a=4 and b=3 then Petya needs: buy one bus\r\nticket to get from 1 to 3, buy one tram ticket to get from 3 to 6, buy\r\none bus ticket to get from 6 to 7. Thus, in total he needs to spend\r\n4+3+4=11 roubles. Please note that the type of the stop at the last\r\ncrossroad (i.e. the character s_n) does not affect the final expense.Now\r\nPetya is at the first crossroad, and he wants to get to the n-th\r\ncrossroad. After the party he has left with p roubles. He’s decided to\r\ngo to some station on foot, and then go to home using only public\r\ntransport.Help him to choose the closest crossroad i to go on foot the\r\nfirst, so he has enough money to get from the i-th crossroad to the\r\nn-th, using only tram and bus tickets.\r\n",
    "solutions": [
        "/*#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")*/\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 1000000005\n#define mod 1000000007\n#define put putchar('\\n')\n#define F(i,a,b) for (int i=(a);i<=(b);i++)\n#define D(i,a,b) for (int i=(a);i>=(b);i--)\n#define R(i,a,b) for (int i=(a);i<(b);i++)\n#define go(i,t) for (int i=head[t];i;i=Next[i])\n#define sqr(x) ((x)*(x))\n#define re register\n#define mp make_pair\n#define fi first\n#define se second\n#define pa pair<int,int>\n#define pb push_back\n#define be begin()\n#define en end()\n#define ret return puts(\"-1\"),0;\n#define N 500055\n#define int ll\nusing namespace std;\ninline char gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define gc getchar\ninline int read(){char c=getchar();int tot=1;while ((c<'0'|| c>'9')&&c!='-') c=getchar();if (c=='-'){tot=-1;c=getchar();}\nint sum=0;while (c>='0'&&c<='9'){sum=sum*10+c-'0';c=getchar();}return sum*tot;}\ninline void wr(int x){if (x<0) {putchar('-');wr(-x);return;}if(x>=10)wr(x/10);putchar(x%10+'0');}\ninline void wrn(int x){wr(x);put;}inline void wri(int x){wr(x);putchar(' ');}\ninline void wrn(int x,int y){wri(x);wrn(y);}inline void wrn(int a,int b,int c){wri(a);wrn(b,c);}\nint n,m,x,y,a[N],p,ans;\nchar str[N];\nsigned main(){\n\tfor (int ci=read();ci;ci--){\n\t\tx=read();y=read();p=read();\n\t\tscanf(\"%s\",str+1);n=strlen(str+1);\n\t\tF(i,1,n) a[i]=str[i]=='B';\n\t\ta[n]=2;ans=1;\n\t\tD(i,n-1,1){\n\t\t\tif (a[i]!=a[i+1]) p-=((a[i]==0)?x:y);\n\t\t\tif (p<0){\n\t\t\t\tans=i+1;break;\n\t\t\t}\n\t\t}\n\t\twrn(ans);\n\t} \n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "strings"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Homecoming.json",
    "editorial_link": "https://codeforces.com//blog/entry/74214",
    "editorial": "The first thing you should do in this problem you should understand the\r\nproblem statement (which could be not very easy), and get the right\r\nanswers to the sample test cases. Petya needs to find the minimal such\r\nthat he has enough money to get from to (not , he doesnât need to use\r\nthe transport from the last crossroad. This was a rather common mistake\r\nin misunderstanding the statement) using only public transport. We can\r\nsee that if Petya can get from to using only public transport, he can\r\nalso get from any to , using only public transport (because he will need\r\nfewer tickets).Letâs iterate the candidates for from to and try to find\r\nthe minimal possible . Of course, Petya can go from to using only public\r\ntransport (he doesnât need to buy any ticket). Suppose Petya can get\r\nfrom to for some , and it would cost him money. How much money he would\r\nneed to get from to ? He definitely should be able to buy a ticket at\r\nstation . So, if it is the same ticket he should buy at station , he\r\nwill need the same amount of money, because he doesnât need to buy two\r\nconsecutive equal tickets, it has no sense. Otherwise, he should buy one\r\nmore ticket. So, a minimal amount of money to get from to is , if and ,\r\nand otherwise ( is if , and otherwise). If this value is greater than ,\r\nhe should go to by foot, otherwise, we should resume the process because\r\nhe can go to or even some less-numbered crossroads.\r\n",
    "hint": []
}