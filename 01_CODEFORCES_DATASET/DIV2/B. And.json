{
    "link": "https://codeforces.com//contest/1013/problem/B",
    "problemId": "203186",
    "problem_idx": "B",
    "shortId": "1013B",
    "contest_number": "1013",
    "problem_submissions": {
        "E": [
            40956112,
            40954604,
            40952959,
            40954177,
            40956704,
            40954852,
            40958592,
            40955861,
            40956957,
            40959161,
            40962228,
            40958309,
            40954877,
            40961226,
            40962426,
            40963172,
            40959599,
            40960095,
            40962704,
            40960316
        ],
        "D": [
            40947895,
            40949235,
            40948190,
            40942963,
            40949230,
            40956987,
            40949637,
            40959376,
            40954303,
            40954900,
            40949703,
            40954385,
            40960744,
            40953417,
            40949714,
            40950014,
            40955109,
            40955161,
            40948236,
            40957040
        ],
        "C": [
            40945093,
            40946094,
            40946460,
            40948959,
            40947981,
            40948222,
            40950831,
            40945123,
            40948645,
            40944950,
            40947268,
            40951753,
            40947430,
            40945326,
            40946788,
            40945079,
            40948090,
            40945103,
            40952740,
            40948559
        ],
        "B": [
            40941603,
            40943452,
            40942391,
            40945819,
            40943517,
            40942695,
            40945308,
            40942798,
            40941517,
            40942505,
            40944306,
            40945361,
            40944304,
            40947125,
            40945606,
            40951205,
            40942971,
            40942106,
            40951005,
            40945032
        ],
        "A": [
            40939736,
            40940294,
            40939785,
            40944381,
            40940232,
            40940059,
            40941218,
            40939821,
            40939967,
            40940115,
            40940253,
            40940672,
            40939837,
            40940000,
            40940214,
            40942500,
            40940832,
            40939878,
            40942490,
            40940286
        ],
        "F": [
            82478981,
            40991650
        ]
    },
    "name": "B. And",
    "statement": "There is an array with elements and the number .In one operation you can\r\nselect some () and replace element with , where denotes the bitwise and\r\noperation.You want the array to have at least two equal elements after\r\napplying some operations (possibly, none). In other words, there should\r\nbe at least two distinct indices such that . Determine whether it is\r\npossible to achieve and, if possible, the minimal number of operations\r\nto apply.\r\n",
    "solutions": [
        "/// In The Name Of God\n/// I wish, that I could leave it all behind me / Go to my own world where no one can find me\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define F first\n#define S second\n#define mp make_pair\n#define pb push_back\n#define int long long\n#define ll long long\n#define pii pair <int , int>\n#define ld long double\n#define for2(a,b,c) for(int (a) = (b); (a) < (c); (a)++)\n#define for3(a,b,c) for(    (a) = (b); (a) < (c); (a)++)\n#define setp cout << fixed << setprecision(15)\n#define endl \"\\n\"\n#define minit(a,b) a = min(a,b)\n#define maxit(a,b) a = max(a,b)\n#define PII pair<int,int>\n#define Vec vector<int>\n#define error(x) cerr << #x << \" = \" << (x) << endl;\n#define all(x) (x).begin() , (x).end()\n\nint x[1000000];\nint y[1000000];\n\nint32_t main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    int n,X; cin >> n >> X;\n    int ans = 4;\n    for2(i,0,n){\n        int a,b;\n        cin >> a;\n        b = a&X;\n        if(x[a]){\n            cout << 0 << endl;\n            return 0;\n        }\n        if(y[a] || x[b])ans = 1;\n        if(y[b]) ans = min(ans,2ll);\n        x[a] = y[b] = 1;\n    }\n    if(ans == 4) ans = -1;\n    cout << ans << endl;\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. And.json",
    "editorial_link": "https://codeforces.com//blog/entry/60920",
    "editorial": "Clearly, if it is possible then there are no more than operations\r\nneeded.So we basically need to distinguish outcomes , , and .The answer\r\nis zero if there are already equal elements in the array.To check if the\r\nanswer is we can apply the operation to each element of the array. If\r\nall elements are still distinct, then it couldnât be helped.To check if\r\nthe answer is one we can bruteforce the element to apply the operation\r\nto, and if this operation changes this element, we can check if there is\r\nan element in the array.In all other cases answer is two.\r\n",
    "hint": []
}