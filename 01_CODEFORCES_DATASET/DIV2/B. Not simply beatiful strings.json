{
    "link": "https://codeforces.com//contest/955/problem/B",
    "problemId": "167744",
    "problem_idx": "B",
    "shortId": "955B",
    "contest_number": "955",
    "problem_submissions": {
        "E": [
            36552751
        ],
        "D": [
            36547766,
            36561781,
            36687646,
            72294185
        ],
        "C": [
            36544337,
            36544697,
            36542762,
            36552120,
            36546618,
            36544122,
            36549891,
            36544109,
            36541691,
            36576017,
            36575027,
            36548324,
            36546617,
            36544127,
            36541601,
            36543835,
            36543719,
            36546626,
            36545136,
            36544045,
            36543760,
            36541102
        ],
        "B": [
            36538238,
            36537135,
            36537612,
            36562998,
            36539430,
            36538683,
            36540472,
            36537286,
            36537082,
            36538951,
            36538215,
            36537949,
            36537216,
            36540793,
            36539603,
            36539538,
            36538461,
            36538576,
            36537767,
            36537306
        ],
        "A": [
            36536991,
            36539709,
            36536867,
            36548240,
            36538150,
            36537171,
            36538851,
            36536810,
            36543232,
            36537420,
            36540571,
            36537312,
            36546633,
            36537606,
            36537598,
            36537548,
            36537069,
            36537405,
            36537023,
            36550641
        ],
        "F": [
            36545987,
            36553463,
            36668304
        ]
    },
    "name": "B. Not simply beatiful strings",
    "statement": "Let\u2019s call a string if its letters can be realigned in such a way that\r\nthey form two consequent groups of equal symbols (note that different\r\ngroups must contain different symbols). For example, is (you can\r\ntransform it to , where the first three letters form a group of -s and\r\nothers a group of -s), but is not since in each possible consequent\r\npartition letters in these two groups coincide.You\u2019re given a string .\r\nCheck whether it can be split into two non-empty subsequences such that\r\nthe strings formed by these subsequences are . Here a subsequence is an\r\narbitrary set of indexes of the string.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint main() {\n\tint c[26]={0}; string s; cin>>s;\n\tfor(char ch:s) c[ch-'a']++;\n\tint c1=0,cm=0;\n\tfor(int i=0;i<26;i++) if(c[i]>1)cm++; else if(c[i]==1) c1++;\n\tif(c1+cm>4) puts(\"No\");\n\telse if(c1+cm==4) puts(\"Yes\");\n\telse if(c1+cm==3) {\n\t\tif(cm) puts(\"Yes\"); else puts(\"No\");\n\t}\n\telse if(c1+cm==2) {\n\t\tif(c1) puts(\"No\"); else puts(\"Yes\");\n\t}\n\telse puts(\"No\");\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Not simply beatiful strings.json",
    "editorial_link": "https://codeforces.com//blog/entry/58547",
    "editorial": "Since order of letters in strings doesn\u00e2\u0080\u0099t matter, it doesn\u00e2\u0080\u0099t matter in\r\nthe initial string as well. Let be the number of distinct letters in .\r\nConsider the following cases one after another: If answer is since\r\nlengths of strings cannot be less than two; If is more than answer is\r\nalso since strings contain two distinct letters; If is equal to answer\r\nis always (we give two types of letters to string one and other two to\r\nstring two); If is equal to three answer is also (based on the fact that\r\nlength of is no less than ); If is equal to two answer depends on\r\nwhether there\u00e2\u0080\u0099s a letter occuring only once (because that means that one\r\nof the strings will consist of letters of the same kind); If all letters\r\nare the same, answer is (same as the previous case).\r\n"
}