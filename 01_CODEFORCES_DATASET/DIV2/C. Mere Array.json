{"link": "https://codeforces.com//contest/1401/problem/C", "problemId": "704915", "problem_idx": "C", "shortId": "1401C", "contest_number": "1401", "problem_submissions": {"E": [90589999, 90578154, 90605920, 90584030, 90594969, 90593911, 90572580, 90599304, 90615088, 90675249, 90605781, 90590132, 90599391, 90594214, 90758857, 90645951, 90601216], "F": [90580393, 90597215, 90579684, 90610107, 90603479, 90603116, 90603512, 90617786, 90601646, 90675259, 90613571, 90583132, 90589402, 90594866, 90604055, 90620941, 90598510, 90646625], "D": [90560258, 90565538, 90550432, 90567225, 90569423, 90571869, 90587693, 90567049, 90578884, 90577112, 90563897, 90566957, 90557267, 90573179, 90565326, 90564972, 90565503, 90568268, 90571582], "C": [90551509, 90552981, 90554787, 90547352, 90555070, 90559549, 90607672, 90556632, 90562455, 90568524, 90549734, 90553714, 90548534, 90548686, 90550222, 90543917, 90550988, 90557805, 90555836], "B": [90546499, 90547295, 90558760, 90542536, 90550631, 90551851, 90549294, 90545681, 90553940, 90549432, 90563346, 90548659, 90544907, 90558972, 90545692, 90550414, 90545438, 90550179, 90547970], "A": [90541721, 90542770, 90541219, 90541087, 90544810, 90561361, 90543645, 90541402, 90544925, 90541955, 90542350, 90543732, 90541094, 90542063, 90541725, 90541822, 90542174, 90542376, 90542708]}, "name": "C. Mere Array", "statement": "You are given an array a_1, a_2,\r\ndots, a_n where all a_i are integers and greater than 0. In one\r\noperation, you can choose two different indices i and j (1\r\nle i, j\r\nle n). If gcd(a_i, a_j) is equal to the minimum element of the a, you\r\ncan swap a_i and a_j. gcd(x, y) denotes the greatest common divisor\r\n(GCD) of integers x and y. Now you\u2019d like to make a non-decreasing using\r\nthe operation any number of times (possibly zero). Determine if you can\r\ndo this. An array a is non-decreasing if and only if a_1\r\nle a_2\r\nle\r\nldots\r\nle a_n.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nint main() {\n\tios::sync_with_stdio(0); cin.tie(0);\n\n\tint t;\n\tcin >> t;\n\twhile(t--) {\n\t\tint n, mn=1e9;\n\t\tcin >> n;\n\t\tvi a(n);\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tcin >> a[i];\n\t\t\tmn=min(mn, a[i]);\n\t\t}\n\t\tvi b=a;\n\t\tsort(all(b));\n\t\tbool sorted=true;\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tsorted = sorted && (a[i] % mn>0 ? a[i]==b[i] : true);\n\t\t}\n\t\tif(sorted) {\n\t\t\tcout << \"YES\\n\";\n\t\t} else {\n\t\t\tcout << \"NO\\n\";\n\t\t}\n\t}\n\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "math", "number theory", "sortings"], "dificulty": "1300", "interactive": false}