{
    "link": "https://codeforces.com//contest/676/problem/A",
    "problemId": "60896",
    "problem_idx": "A",
    "shortId": "676A",
    "contest_number": "676",
    "problem_submissions": {
        "D": [
            18086124,
            18088139,
            18084280,
            18085571,
            18084868,
            18078718,
            18082907,
            18080588,
            18080137,
            18081145,
            18081985,
            18081026,
            18081695,
            18082035,
            18081128,
            18082512,
            18082190,
            18083067,
            18081575,
            18082166
        ],
        "E": [
            18083014,
            18097261,
            18097237,
            18085521,
            18088459,
            18088804,
            18088832,
            18103936,
            18095906,
            18094839,
            18090516,
            18100676,
            18103495,
            18227086
        ],
        "C": [
            18079114,
            18076155,
            18074138,
            18080914,
            18078417,
            18075987,
            18076242,
            18077017,
            18077328,
            18077130,
            18076218,
            18077107,
            18077040,
            18076098,
            18076862,
            18077489,
            18078049,
            18076245,
            18076673,
            18078488
        ],
        "B": [
            18076441,
            18077200,
            18076573,
            18077509,
            18075916,
            18074860,
            18074368,
            18074928,
            18076475,
            18075886,
            18077173,
            18074968,
            18075981,
            18075167,
            18077678,
            18075867,
            18076662,
            18079173,
            18077589,
            18077066
        ],
        "A": [
            18073771,
            18073531,
            18073371,
            18075006,
            18073412,
            18073493,
            18073358,
            18073487,
            18073563,
            18073458,
            18073435,
            18073444,
            18073768,
            18073556,
            18073505,
            18073796,
            18074124,
            18073590,
            18073448,
            18074969
        ]
    },
    "name": "A. Nicholas and Permutation",
    "statement": "Nicholas has an array that contains integers from to . In other words,\r\nNicholas has a permutation of size .Nicholas want the minimum element\r\n(integer ) and the maximum element (integer ) to be as far as possible\r\nfrom each other. He wants to perform exactly one swap in order to\r\nmaximize the distance between the minimum and the maximum elements. The\r\ndistance between two elements is considered to be equal to the absolute\r\ndifference between their positions.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"data.in\",\"r\",stdin);\n\t#endif // ONLINE_JUDGE\n\tcin.sync_with_stdio(false);\n\tcin.tie(0);\n\n\tint n;\n\tcin>>n;\n\tint x;\n\tint p1,p2;\n\tfor(int i=1;i<=n;++i) {\n\t\tcin>>x;\n\t\tif(x == 1) p1=i;\n\t\tif(x == n) p2=i;\n\t}\n\n\tif(p1 == 1 || p1 == n || p2 == 1 || p2 == n) {\n\t\tcout<<n-1<<\"\\n\";\n\t}\n\telse {\n\t\tint a = max(p1-1, n-p1);\n\t\tint b = max(p2-1, n-p2);\n\t\tcout<<max(a,b)<<\"\\n\";\n\t}\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Nicholas and Permutation.json",
    "editorial_link": "https://codeforces.com/blog/entry/45018",
    "editorial": "All what you need to solve this problem find the positions of numbers\r\nand in the given array. Let\u00e2\u0080\u0099s this positions equal to and , then the\r\nanswer is the maximum of 4 values: Asymptotic behavior .\r\n"
}