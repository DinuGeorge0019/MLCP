{"link": "https://codeforces.com//contest/435/problem/E", "problemId": "9912", "problem_idx": "E", "shortId": "435E", "contest_number": "435", "problem_submissions": {"D": [6747211, 6748926, 6748870, 6749244, 6749267, 6749555, 6750451, 6750474, 6750773, 6750608, 6749630, 6749229, 6750042, 6750327, 6750912, 6750822, 6749853, 6749690, 6751146], "C": [6744948, 6744969, 6752395, 6746173, 6746535, 6745384, 6746890, 6745689, 6745344, 6746116, 6747240, 6747721, 6745948, 6745784, 6747231, 6747354, 6745897, 6747543, 6745255, 6744189], "B": [6743176, 6742784, 6743725, 6746058, 6744812, 6743216, 6743831, 6743565, 6743560, 6745917, 6743627, 6748909, 6745181, 6744428, 6745029, 6745253, 6749581, 6747847], "A": [6741556, 6741154, 6741740, 6746603, 6742626, 6741223, 6741194, 6742017, 6741345, 6742582, 6744122, 6741228, 6742721, 6741593, 6742043, 6744026, 6743936, 6741314], "E": [6752027, 6760318]}, "name": "E. Special Graph", "statement": "In this problem you will need to deal with an grid graph. The graph\u2019s\r\nvertices are the nodes of the grid. The graph\u2019s edges are all the sides\r\nand diagonals of the grid\u2019s unit squares.The figure below shows a graph.\r\nThe black lines are the graph\u2019s edges, the colored circles are the\r\ngraph\u2019s vertices. The vertices of the graph are painted on the picture\r\nfor a reason: the coloring is a correct vertex coloring of the graph\r\ninto four colors. A graph coloring is correct if and only if each vertex\r\nis painted and no two vertices connected by an edge are painted the same\r\ncolor. You are given the size of the grid graph and the colors of some\r\nof its vertices. Find any way how to paint the unpainted vertices of the\r\ngraph in 4 colors to make the final coloring a correct vertex graph\r\ncoloring. If there is no such correct vertex coloring, say that the\r\nanswer doesn\u2019t exist.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int maxn=1e3+5;\n\nint n,m,f[maxn][maxn],ans[maxn][maxn],a[maxn][maxn];\nbool p1,p2,flag;\n\nbool solve(int n,int m)\n{\n    int a,b,c,d;\n    for(a=1;a<=4;a++)\n    for(b=a+1;b<=4;b++)\n    {\n        flag=true;\n        for(c=1;c<=4;c++)\n            if(a!=c&&b!=c)break;\n        d=1+2+3+4-a-b-c;\n        for(int i=1;i<=n;i++)\n        {\n            p1=p2=true;\n            if(i%2==1)\n            {\n                for(int j=1;j<=m;j++)\n                    if(j%2==1&&f[i][j]!=0)\n                    {\n                        if(f[i][j]!=a)p1=false;\n                        if(f[i][j]!=b)p2=false;\n                    }\n                    else if(j%2==0&&f[i][j]!=0)\n                    {\n                        if(f[i][j]!=b)p1=false;\n                        if(f[i][j]!=a)p2=false;\n                    }\n            }\n            else\n            {\n                for(int j=1;j<=m;j++)\n                    if(j%2==1&&f[i][j]!=0)\n                    {\n                        if(f[i][j]!=c)p1=false;\n                        if(f[i][j]!=d)p2=false;\n                    }\n                    else if(j%2==0&&f[i][j]!=0)\n                    {\n                        if(f[i][j]!=d)p1=false;\n                        if(f[i][j]!=c)p2=false;\n                    }\n            }\n            if((!p1)&&(!p2))flag=false;\n        }\n        if(flag)\n        {\n            for(int i=1;i<=n;i++)\n            {\n                p1=p2=true;\n                if(i%2==1)\n                {\n                    for(int j=1;j<=m;j++)\n                        if(j%2==1&&f[i][j]!=0)\n                        {\n                            if(f[i][j]!=a)p1=false;\n                            if(f[i][j]!=b)p2=false;\n                        }\n                        else if(j%2==0&&f[i][j]!=0)\n                        {\n                            if(f[i][j]!=b)p1=false;\n                            if(f[i][j]!=a)p2=false;\n                        }\n                }\n                else\n                {\n                    for(int j=1;j<=m;j++)\n                        if(j%2==1&&f[i][j]!=0)\n                        {\n                            if(f[i][j]!=c)p1=false;\n                            if(f[i][j]!=d)p2=false;\n                        }\n                        else if(j%2==0&&f[i][j]!=0)\n                        {\n                            if(f[i][j]!=d)p1=false;\n                            if(f[i][j]!=c)p2=false;\n                        }\n                }\n                if(i%2==1)\n                {\n                    for(int j=1;j<=m;j++)\n                        if(j%2==1)ans[i][j]=p1?a:b;\n                        else ans[i][j]=p1?b:a;\n                }\n                else\n                {\n                    for(int j=1;j<=m;j++)\n                        if(j%2==1)ans[i][j]=p1?c:d;\n                        else ans[i][j]=p1?d:c;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            scanf(\"%1d\",&f[i][j]);\n            a[j][i]=f[i][j];\n        }\n    if(solve(n,m))\n    {\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n                printf(\"%d\",ans[i][j]);\n            puts(\"\");\n        }\n        return 0;\n    }\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            f[i][j]=a[i][j];\n    if(solve(m,n))\n    {\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n                printf(\"%d\",ans[j][i]);\n            puts(\"\");\n        }\n        return 0;\n    }\n    puts(\"0\");\n    return 0;\n}\n"], "input": "", "output": "", "tags": [], "dificulty": "2500", "interactive": false}