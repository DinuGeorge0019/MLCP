{"link": "https://codeforces.com//contest/621/problem/E", "problemId": "46905", "problem_idx": "E", "shortId": "621E", "contest_number": "621", "problem_submissions": {"D": [15706922, 15708912, 15712199, 15709835, 15713077, 15712357, 15708942, 15766873, 15747435, 15733699, 15715880, 15719896], "E": [15703295, 15703499, 15705519, 15707664, 15708122, 15707325, 15713941, 15705601, 15704286, 15701891, 15705027, 15705042, 15706397, 15704658, 15704205, 15709743, 15706195, 15705463, 15707137, 15707198], "C": [15701639, 15705315, 15700957, 15701370, 15700184, 15704278, 15705563, 15700217, 15702029, 15701828, 15699715, 15700597, 15699825, 15700179, 15700557, 15702745, 15701142, 15700489, 15700527, 15701490], "B": [15698894, 15699840, 15698446, 15697286, 15697213, 15701158, 15703631, 15696667, 15698191, 15697920, 15698162, 15700575, 15697836, 15697601, 15699162, 15697389, 15699466, 15700819, 15698045, 15698470], "A": [15697249, 15709534, 15696296, 15695622, 15695621, 15696700, 15695629, 15695597, 15695557, 15695777, 15695703, 15696779, 15695814, 15695801, 15700242, 15695837, 15695799, 15696854, 15696011, 15696156]}, "name": "E. Wet Shark and Blocks", "statement": "There are blocks of digits. Each one consisting of the same digits,\r\nwhich are given to you in the input. Wet Shark must choose digit from\r\neach block and concatenate all of those digits together to form one\r\nlarge integer. For example, if he chooses digit from the first block and\r\ndigit from the second block, he gets the integer . Wet Shark then takes\r\nthis number modulo . Please, tell him how many ways he can choose one\r\ndigit from each block so that he gets exactly as the final result. As\r\nthis number may be too large, print it modulo .Note, that the number of\r\nways to choose some digit in the block is equal to the number of it\u2019s\r\noccurrences. For example, there are ways to choose digit from block .\r\n", "solutions": ["#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define fi first\n#define se second\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define sz(x) (int((x).size()))\n#define bit(x) (1 << (x))\n#define cnt1(x) (__builtin_popcount(x))\n\ntemplate<class T, class U>\ninline void chkmax(T& x, U y) {\n\tif (x < y) x = y;\n}\n\ntemplate<class T, class U>\ninline void chkmin(T& x, U y) {\n\tif (y < x) x = y;\n}\n\ntypedef long long LL;\ntypedef double DB;\ntypedef pair<int, int> PII;\ntypedef vector<int> VI;\nconst int MX = 105;\nconst int M = 1000000007;\nint x;\nint r[MX][MX], a[MX][MX];\nint tp[MX][MX];\nint c[10];\n\ninline void add(int& x, int y) {\n\tx += y;\n\tif (x >= M) x -= M;\n}\n\nvoid mul(int a[MX][MX], int b[MX][MX]) {\n\tint i, j, k, val;\n\t\n\tfor (i = 0; i < x; i++) {\n\t\tfor (j = 0; j < x; j++) {\n\t\t\tval = 0;\n\t\t\tfor (k = 0; k < x; k++) add(val, LL(a[i][k]) * b[k][j] % M);\n\t\t\ttp[i][j] = val;\n\t\t}\n\t}\n\tfor (i = 0; i < x; i++) {\n\t\tfor (j = 0; j < x; j++) a[i][j] = tp[i][j];\n\t}\n}\n\nint main() {\n//\tfreopen(\"in.txt\", \"r\", stdin);\n//\tfreopen(\"out.txt\", \"w\", stdout);\n\t\n\tint n, b, k, i, t;\n\t\n\tscanf(\"%d%d%d%d\", &n, &b, &k, &x);\n\twhile (n--) {\n\t\tscanf(\"%d\", &t);\n\t\tc[t]++;\n\t}\n\tfor (i = 0; i < x; i++) {\n\t\tfor (t = 0; t < 10; t++) {\n\t\t\tadd(a[i][(i * 10 + t) % x], c[t]);\n\t\t}\n\t}\n\tfor (i = 0; i < x; i++) r[i][i]++;\n\tfor (; b; b /= 2) {\n\t\tif (b & 1) mul(r, a);\n\t\tmul(a, a);\n\t}\n\tprintf(\"%d\\n\", r[0][k]);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["dp", "matrices"], "dificulty": "2000", "interactive": false}