{
    "link": "https://codeforces.com//contest/1762/problem/B",
    "problemId": "1695271",
    "problem_idx": "B",
    "shortId": "1762B",
    "contest_number": "1762",
    "problem_submissions": {
        "F": [
            185360973,
            185364441,
            185372202,
            185395910,
            185621065,
            185354232,
            185332491,
            185348264,
            185360759,
            197448951,
            197448921
        ],
        "E": [
            185344507,
            185353525,
            185341937,
            185339289,
            185344504,
            185352316,
            185360035,
            185362208,
            185365484,
            185404755,
            185370016,
            185351528,
            185364233,
            185367555,
            191848003,
            185329145
        ],
        "D": [
            185337625,
            185342301,
            185324406,
            185313736,
            185320476,
            185336684,
            185335575,
            185333725,
            185325437,
            185329719,
            185355407,
            185334757,
            185358794,
            185354685,
            185353510,
            203219751,
            203219727,
            185328017,
            185332700,
            185327767
        ],
        "C": [
            185322060,
            185321446,
            185314988,
            185324570,
            185312857,
            185315091,
            185320564,
            185320295,
            185330972,
            185319388,
            185342558,
            185326201,
            185316184,
            185309915,
            185362472,
            185315926,
            185312437,
            185310609,
            185320776
        ],
        "B": [
            185304175,
            185312988,
            185302843,
            185317620,
            185309312,
            185304849,
            185311399,
            185308703,
            185304961,
            185310615,
            185338037,
            185310014,
            185310646,
            185303730,
            185343806,
            185303744,
            185303718,
            185304581,
            185309640
        ],
        "A": [
            185300504,
            185304250,
            185300255,
            185302050,
            185306620,
            185300445,
            185302307,
            185307731,
            185300743,
            185301230,
            185335246,
            185301137,
            185300437,
            185300430,
            185322563,
            185300790,
            185300333,
            185302002,
            185301784
        ],
        "G": [
            185409628,
            185346613
        ]
    },
    "name": "B. Make Array Good",
    "statement": "An array b of m positive integers is if for all pairs i and j (1\r\nleq i,j\r\nleq m),\r\nmax(b_i,b_j) is divisible by\r\nmin(b_i,b_j).You are given an array a of n positive integers. You can\r\nperform the following operation: Select an index i (1\r\nleq i\r\nleq n) and an integer x (0\r\nleq x\r\nleq a_i) and add x to a_i, in other words, a_i := a_i+x. After this\r\noperation, a_i\r\nleq 10^{18} should be satisfied. You have to construct a sequence of n\r\noperations that will make a good. It can be proven that under the\r\nconstraints of the problem, such a sequence of operations exists.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct s\n{\n    long long a;\n    int p;\n}a[100005];\nbool cmp(s a,s b)\n{\n    return a.a < b.a;\n}\nlong long up(long long a,long long b)\n{\n    long long d = (a + b - 1) / b;\n    return b*d;\n}\nvoid solve()\n{\n    scanf(\"%d\",&n);\n    for(int i = 1;i <= n;i++) scanf(\"%lld\",&a[i].a) ,a[i].p = i;\n    sort(a+1,a+n+1,cmp);\n    printf(\"%d\\n\",n - 1);\n    for(int i = 2;i <= n;i++) {\n        long long d = up(a[i].a , a[i - 1].a);\n        printf(\"%d %lld\\n\",a[i].p , d - a[i].a) ; a[i].a = d;\n    }\n    return;\n}\nint main() {\n    // freopen(\"in.txt\",\"r\",stdin);\n    int t;scanf(\"%d\",&t);\n    while(t--) solve();\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation",
        "number theory",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Make Array Good.json",
    "editorial_link": "https://codeforces.com//blog/entry/110169",
    "editorial": "Suppose gives the smallest power of which is greater than\n.Iterate from to and change to by adding to -th element. Time complexity\nis .\n",
    "hint": [
        "Hint 1 Suppose we have a prime number . Suppose there are two perfect powers of â€” and . Now it is easy to see is divisible by .",
        "Hint 2 So now we need to choose some prime number . Let us start with the smallest prime number .",
        "Hint 3 Here is one interesting fact. There always exists a power of in the range for any positive integer ."
    ]
}