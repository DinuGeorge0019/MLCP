{"link": "https://codeforces.com//contest/798/problem/B", "problemId": "103600", "problem_idx": "B", "shortId": "798B", "contest_number": "798", "problem_submissions": {"D": [26563361, 26555687, 26556558, 26548301, 26556247, 26549650, 26559045, 26559072, 26562479, 26559512, 26557370, 26565613, 26560823, 26560731, 26560614, 26557462, 26562930], "C": [26558945, 26549095, 26548532, 26556590, 26548339, 26561843, 26551518, 26554123, 26550774, 26560992, 26554844, 26558176, 26554570, 26556784, 26555580, 26562658, 26554462], "E": [26558449, 26556461], "A": [26551397, 26540062, 26540758, 26542419, 26540657, 26540976, 26540919, 26543392, 26540558, 26556942, 26542590, 26540075, 26542212, 26540478, 26550484, 26540647, 26543658], "B": [26542968, 26545085, 26543813, 26543222, 26543887, 26545396, 26544929, 26543829, 26543862, 26557828, 26543387, 26544400, 26546204, 26542828, 26550157, 26544256, 26545856]}, "name": "B. Mike and strings", "statement": "Mike has strings each consisting of lowercase English letters. In one\r\nmove he can choose a string , erase the first character and append it to\r\nthe end of the string. For example, if he has the string \"\", in one move\r\nhe can transform it into the string \"\".Now Mike asks himself: what is\r\nminimal number of moves that he needs to do in order to make all the\r\nstrings equal?\r\n", "solutions": ["#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pr;\nconst double pi=acos(-1);\n#define rep(i,a,n) for(int i=a;i<=n;i++)\n#define per(i,n,a) for(int i=n;i>=a;i--)\n#define Rep(i,u) for(int i=head[u];i;i=Next[i])\n#define clr(a) memset(a,0,sizeof a)\n#define pb push_back\n#define mp make_pair\n#define putk() putchar(' ')\nld eps=1e-9;\nll pp=1000000007;\nll mo(ll a,ll pp){if(a>=0 && a<pp)return a;a%=pp;if(a<0)a+=pp;return a;}\nll powmod(ll a,ll b,ll pp){ll ans=1;for(;b;b>>=1,a=mo(a*a,pp))if(b&1)ans=mo(ans*a,pp);return ans;}\nll gcd(ll a,ll b){return (!b)?a:gcd(b,a%b);}\nll read(){\n\tll ans=0;\n\tchar last=' ',ch=getchar();\n\twhile(ch<'0' || ch>'9')last=ch,ch=getchar();\n\twhile(ch>='0' && ch<='9')ans=ans*10+ch-'0',ch=getchar();\n\tif(last=='-')ans=-ans;\n\treturn ans;\n}\nvoid put(ll a){\n\tif(a<0)putchar('-'),a=-a;\n\tint top=0,q[20];\n\twhile(a)q[++top]=a%10,a/=10;\n\ttop=max(top,1);\n\twhile(top--)putchar('0'+q[top+1]);\n}\n//head\nchar str[100][100];\nint len[100];\nint n,m;\nint find(int t,int w){\n\trep(i,0,m-1){\n\t\tint pf=1;\n\t\trep(j,1,m)\n\t\t\tif(str[t][i+j]!=str[1][w+j]){\n\t\t\t\tpf=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(pf)return i;\n\t}\n\treturn 1000000;\n}\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\n\tn=read();\n\trep(i,1,n){\n\t\tscanf(\"%s\",str[i]+1);\n\t\tlen[i]=strlen(str[i]+1);\n\t\trep(j,1,len[i])str[i][len[i]+j]=str[i][j];\n\t}\n\trep(i,2,n)\n\t\tif(len[i]!=len[1]){\n\t\t\tputs(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\tm=len[1];\n\tint ans=1000000000;\n\trep(i,0,m-1){\n\t\tint tot=i;\n\t\trep(j,2,n)\n\t\t\ttot+=find(j,i);\n\t\tans=min(ans,tot);\n\t}\n\tif(ans<10000)cout<<ans<<endl;\n\telse cout<<-1<<endl;\n}"], "input": "", "output": "", "tags": ["brute force", "dp", "strings"], "dificulty": "1300", "interactive": false}