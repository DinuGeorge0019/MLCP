{
    "link": "https://codeforces.com//contest/186/problem/A",
    "problemId": "1300",
    "problem_idx": "A",
    "shortId": "186A",
    "contest_number": "186",
    "problem_submissions": {
        "D": [
            1657681,
            1658478,
            1656134,
            1656097,
            1657605,
            1659081,
            1658217,
            1658577,
            1659087,
            1658093,
            1659907,
            1657753,
            1657771
        ],
        "C": [
            1655799,
            1653949,
            1653888,
            1657215,
            1655683,
            1655498,
            1655423,
            1655364,
            1655532,
            1656312,
            1653963,
            1656181,
            1656606
        ],
        "B": [
            1653853,
            1656964,
            1654766,
            1653590,
            1654394,
            1654508,
            1654124,
            1654630,
            1654138,
            1654956,
            1655681,
            1654707,
            1655746
        ],
        "A": [
            1652799,
            1654670,
            80621352,
            1653218,
            1656209,
            1652847,
            1653532,
            1652921,
            1653307,
            1652998,
            1653644,
            1654799,
            1652900,
            1654903
        ],
        "E": [
            4391221
        ]
    },
    "name": "A. Comparing Strings",
    "statement": "Some dwarves that are finishing the StUDY (State University for Dwarven\r\nYoungsters) Bachelor courses, have been told \"no genome, no degree\".\r\nThat means that all dwarves should write a thesis on genome. Dwarven\r\ngenome is far from simple. It is represented by a string that consists\r\nof lowercase Latin letters.Dwarf Misha has already chosen the subject\r\nfor his thesis: determining by two dwarven genomes, whether they belong\r\nto the same race. Two dwarves belong to the same race if we can swap two\r\ncharacters in the first dwarf\u2019s genome and get the second dwarf\u2019s genome\r\nas a result. Help Dwarf Misha and find out whether two gnomes belong to\r\nthe same race or not.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <memory.h>\n#include <string>\n#include <set>\n#include <map>\n#include <queue>\nusing namespace std;\n#define forn(i,n) for(int i=0;i<(n);++i)\n#define forv(i,v) forn(i,(int)(v).size())\n#define iinf 1000000000\n#define linf 1000000000000000000LL\n#define dinf 1e200\n#define all(v) (v).begin(),(v).end()\n#define pb push_back\n#define mp make_pair\n#define lng long long\n#define eps 1e-11\n#define EQ(a,b) (fabs((a)-(b))<eps)\n#define SQ(a) ((a)*(a))\n#define PI 3.14159265359\n#define index asdindex\n#define FI first\n#define SE second\n#define prev asdprev\n#define ends asdends\n#define PII pair<int,int> \n#define X first\n#define Y second\n#define mset(a,b) memset(a,b,sizeof(a))\n\n\n\nint n;\nint src[16];\nint s;\n\n\nint f(){\n    int res=0;\n    forn(i, n){\n        int sum = 0;\n        for(int j=i*n;j<(i+1)*n;++j){\n            sum += src[j];\n        }\n        res+=abs(sum-s);\n    }\n    forn(i, n){\n        int sum = 0;\n        for(int j=i;j<n*n;j+=n){\n            sum += src[j];\n        }\n        res+=abs(sum-s);\n    }\n    {\n        int sum = 0;\n        for(int i=0;i<n*n;i+=n+1)sum += src[i];\n        res+=abs(sum-s);\n    }\n    int sum = 0;\n    int j=0;\n    for(int i=n-1;i<n*n;i+=n-1,++j){\n        if (j==n)break;\n        sum += src[i];\n    }\n    res+=abs(sum-s);\n    return res;\n}\n\nvoid print(){\n    cout << s << endl;\n    forn(i,n*n){\n        cout<<src[i]<<\" \";\n        if (i%n==n-1)cout<<endl;\n    }\n    exit(0);\n}\n\nint main(){\n#ifdef __ASD__\n    freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n    ios::sync_with_stdio(false);\n    string s1, s2;\n    cin >> s1 >> s2;\n    if (s1==s2){\n        cout <<\"YES\";\n        return 0;\n    }\n    if (s1.length()!=s2.length()){\n        cout<<\"NO\";\n        return 0;\n    }\n    int cnt=0;\n    vector<int> diff;\n    forn(i, s1.length()){\n        if (s1[i]!=s2[i]){\n            diff.pb(i);\n        }\n    }\n    if (diff.size()!=2){\n        cout <<\"NO\";\n        return 0;\n    }\n    if (s1[diff[0]]==s2[diff[1]] && s1[diff[1]]==s2[diff[0]]){\n        cout << \"YES\";\n    }else cout<<\"NO\";\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Comparing Strings.json",
    "editorial_link": "https://codeforces.com//blog/entry/4488",
    "editorial": "If the lengths of 2 strings aren't equal \u0097 that means \"NO\". We try to find the positions in strings, where chars are different. If there 1 or more than 2 such positions \u0097 \"NO\". After that we swap 2 characters in the first string, and check for their equality.\n"
}