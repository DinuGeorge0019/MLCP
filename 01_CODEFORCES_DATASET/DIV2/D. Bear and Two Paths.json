{"link": "https://codeforces.com//contest/673/problem/D", "problemId": "59809", "problem_idx": "D", "shortId": "673D", "contest_number": "673", "problem_submissions": {"E": [17790544, 17790298, 17792643, 17795142, 17797198, 17796072, 17796678, 17794290, 17802948, 18498821, 18454059, 18453934, 18453804, 27208468, 17814502, 17814492, 17810486], "A": [17785371, 17780028, 17783006, 17781229, 17780841, 17781392, 17781436, 17783310, 17780077, 17780098, 17783943, 17780241, 17780697, 17780142, 17780713, 17780906, 17780033, 17782963, 17780095, 17780488], "D": [17784968, 17784163, 17787638, 17787311, 17788261, 17790516, 17791783, 17788147, 17787202, 17788591, 17787856, 17787228, 17787665, 17788331, 17788505, 17790808, 17791801, 17789992, 17788978, 17790173], "B": [17783887, 17780728, 17785147, 17782968, 17783327, 17784516, 17785052, 17786520, 17783375, 17784877, 17782865, 17784125, 17784706, 17782517, 17784194, 17786784, 17781561, 17784108, 17784745, 17783935], "C": [17780670, 17782033, 17785575, 17788307, 17784829, 17786955, 17787316, 17789788, 17784945, 17782021, 17781157, 17785332, 17782835, 17785106, 17786557, 17783986, 17790134, 17785539, 17783083, 17786914], "F": [17799743]}, "name": "D. Bear and Two Paths", "statement": "Bearland has cities, numbered through . Cities are connected via\r\nbidirectional roads. Each road connects two distinct cities. No two\r\nroads connect the same pair of cities.Bear Limak was once in a city and\r\nhe wanted to go to a city . There was no direct connection so he decided\r\nto take a long walk, visiting each city . Formally: There is no road\r\nbetween and . There exists a sequence (path) of distinct cities that ,\r\nand there is a road between and for . On the other day, the similar\r\nthing happened. Limak wanted to travel between a city and a city . There\r\nis no road between them but there exists a sequence of distinct cities\r\nthat , and there is a road between and for .Also, Limak thinks that\r\nthere are at most roads in Bearland. He wonders whether he remembers\r\neverything correctly.Given , and four distinct cities , , , , can you\r\nfind possible paths and to satisfy all the given conditions? Find any\r\nsolution or print if it\u2019s impossible.\r\n", "solutions": ["#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <memory.h>\n#include <math.h>\n#include <assert.h>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <algorithm>\n#include <string>\n#include <functional>\n#include <vector>\n#include <numeric>\n#include <deque>\n#include <utility>\n#include <bitset>\n#include <limits.h>\n#include <iostream>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long llu;\ntypedef double lf;\ntypedef unsigned int uint;\ntypedef long double llf;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\nconst int N_ = 100500;\nconst int M_ = 100500;\n\nint N, K, A, B, C, D;\n\nint main() {\n\tscanf(\"%d%d%d%d%d%d\", &N, &K, &A, &B, &C, &D);\n\tif(N == 4 || K <= N) return 0 & puts(\"-1\");\n\n\tprintf(\"%d %d \", A, C);\n\tfor(int i = 1; i <= N; i++) {\n\t\tif(i != A && i != B && i != C && i != D) \n\t\t\tprintf(\"%d \", i);\n\t}\n\tprintf(\"%d %d\\n\", D, B);\n\n\tprintf(\"%d %d \", C, A);\n\tfor(int i = 1; i <= N; i++) {\n\t\tif(i != A && i != B && i != C && i != D) \n\t\t\tprintf(\"%d \", i);\n\t}\n\tprintf(\"%d %d\\n\", B, D);\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "graphs"], "dificulty": "1600", "interactive": false}