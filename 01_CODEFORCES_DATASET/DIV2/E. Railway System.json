{"link": "https://codeforces.com//contest/1688/problem/E", "problemId": "1419363", "problem_idx": "E", "shortId": "1688E", "contest_number": "1688", "problem_submissions": {"F": [159410825, 159527472, 159472113], "C": [159404501, 159365159, 159366341, 159373586, 159362776, 159370629, 159370154, 159369677, 159381261, 159374462, 159381251, 159381152, 159372318, 159366961, 159376004, 159380988, 159381329, 159386074], "E": [159391189, 159380776, 159384621, 159398500, 159397765, 159404212, 159394358, 159393997, 159399468, 159392431, 159395743, 159400327, 159402238, 159399827, 159395270, 159393471, 159393150, 159396147], "B": [159388484, 159355530, 159354509, 159357638, 159355802, 159358715, 159358570, 159355775, 159357680, 159365471, 159355946, 159360943, 159358134, 159356079, 159356249, 159358267, 159364146, 159357603], "D": [159372838, 159371621, 159377503, 159382209, 159381068, 159378580, 159379984, 159378382, 159374943, 159383837, 159371975, 159370185, 159380593, 159384944, 159388687, 159386205, 159385205, 159378922], "A": [159357586, 159352248, 159352639, 159352936, 159353828, 159354431, 159354424, 159352341, 159352633, 159353673, 159352511, 159354887, 159354866, 159352629, 159352715, 159358063, 159357871, 159353570]}, "name": "E. Railway System", "statement": "As for the technology in the outside world, it is really too advanced\r\nfor Gensokyo to even look up to. Yasaka Kanako, .Under the direct\r\nsupervision of Kanako and the Moriya Shrine, the railway system of\r\nGensokyo is finally finished. GSKR (Gensokyo Railways) consists of n\r\nstations with m bidirectional tracks connecting them. The i-th track has\r\nlength l_i (1\r\nle l_i\r\nle 10^6). Due to budget limits, the railway system , though there may be\r\nmore than one track between two stations.The of a railway system is\r\ndefined as the total length of its all tracks. The of a railway system\r\nis defined as the maximum (or minimum) value among all of the currently\r\nfunctional system\u2019s full spanning forest.In brief, full spanning forest\r\nof a graph is a spanning forest with the same connectivity as the given\r\ngraph.Kanako has a simulator only able to process no more than 2m\r\nqueries. The input of the simulator is a string s of length m,\r\nconsisting of characters and/or . The simulator will assume the i-th\r\ntrack functional if s_i= . The device will then tell Kanako the maximum\r\ncapacity of the system in the simulated state.Kanako wants to know the\r\nthe minimum capacity of the system with all tracks functional with the\r\nhelp of the simulator.The structure of the railway system is fixed in\r\nadvance. In other words, the interactor is not adaptive.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconstexpr int inf = 1e18;\nconstexpr int maxn = 2e5 + 5;\nconstexpr int mod = 998244353;\n\ninline void solve()\n{\n  int n, m; cin >> n >> m;\n  vector<int> a(m);\n  int id = 0;\n  for (int i = 0; i < m; i ++)\n  {\n    string now(m, '0');\n    now[i] = '1';\n    cout << \"? \" << now << endl;\n    cin >> a[i];\n    if (a[i] < a[id])\n      id = i;\n  }\n  vector<int> fa(m);\n  for (int i = 0; i < m; i ++)\n    fa[i] = i;\n  sort(fa.begin(), fa.end(), [&](const int &i, const int &j)\n  {\n    return a[i] > a[j];\n  });\n  string nex(m, '1');\n  cout << \"? \" << nex << endl;\n  int ans; cin >> ans;\n  for (int i = 1; i < m; i ++)\n  {\n    nex[fa[i - 1]] = '0';\n    cout << \"? \" << nex << endl;\n    int k; cin >> k;\n    if (ans - k == a[fa[i - 1]])\n      nex[fa[i - 1]] = '1';\n    else\n      ans = k;\n  }\n  cout << \"! \" << ans << endl;\n}\n\nsigned main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  solve();\n  return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "interactive", "sortings"], "dificulty": "1700", "interactive": false}