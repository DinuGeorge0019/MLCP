{"link": "https://codeforces.com//contest/1062/problem/F", "problemId": "254599", "problem_idx": "F", "shortId": "1062F", "contest_number": "1062", "problem_submissions": {"E": [45734560, 45726248, 45732249, 45733619, 45730195, 45731475, 45731239, 45726325, 45734429, 45732687, 45728510, 45736860, 45736172, 45733982, 45737130, 45738771, 45733014, 45736808, 45722467, 45738588], "D": [45726634, 45730736, 45724741, 45725065, 45723696, 45724136, 45725257, 45730810, 45727060, 45726669, 45731523, 45727302, 45728487, 45722718, 45726364, 45726645, 45723445, 45727784, 45736639, 45727419], "C": [45721626, 45717978, 45722013, 45722920, 45725107, 45723347, 45723217, 45731817, 45722296, 45725538, 45721997, 45722995, 45721715, 45726048, 45722887, 45716980, 45725662, 45723495, 45730894, 45720161], "B": [45719368, 45728287, 45719414, 45719514, 45718037, 45718991, 45720410, 45716157, 45718932, 45720927, 45719221, 45719468, 45718546, 45719917, 45718393, 45721972, 45719490, 45718006, 45726769, 45717530], "A": [45714856, 45714050, 45715684, 45718665, 45717504, 45716696, 45714768, 45714213, 45714103, 45715993, 45714126, 45714813, 45714920, 45732371, 45714819, 45723775, 45732706, 45719793, 45724251, 45714073], "F": [45751027, 45989276, 46585917]}, "name": "F. Upgrading Cities", "statement": "There are n cities in the kingdom X, numbered from 1 through n. People\r\ntravel between cities by some roads. As a passenger, JATC finds it weird\r\nthat from any city u, he can\u2019t start a trip in it and then return back\r\nto it using the roads of the kingdom. That is, the kingdom can be viewed\r\nas an acyclic graph.Being annoyed by the traveling system, JATC decides\r\nto meet the king and ask him to do something. In response, the king says\r\nthat he will upgrade some cities to make it easier to travel. Because of\r\nthe budget, the king will only upgrade those cities that are important\r\nor semi-important. A city u is called if for every city v\r\nneq u, there is either a path from u to v or a path from v to u. A city\r\nu is called if it is not important and we can destroy exactly one city v\r\nneq u so that u becomes important.The king will start to act as soon as\r\nhe finds out all those cities. Please help him to speed up the process.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\nusing namespace std;\n#define N 300050\nint head[N],to[N],nxt[N],cnt,n,m,xx[N],yy[N],du[N];\nint tot[2][N],Q[N];\ninline void add(int u,int v) {\n\tto[++cnt]=v; nxt[cnt]=head[u]; head[u]=cnt;\n}\nvoid Topsort(int opt) {\n\tint i,x;\n\tint l=0,r=0;\n\tfor(i=1;i<=n;i++) if(!du[i]) {\n\t\tQ[r++]=i;\n\t}\n\twhile(l<r) {\n\t\tx=Q[l++];\n\t\tif(r-l==0) tot[opt][x]=n-r;\n\t\telse if(r-l==1) {\n\t\t\tint flg=1,y=Q[l];\n\t\t\tfor(i=head[y];i;i=nxt[i]) {\n\t\t\t\tif(du[to[i]]==1) {flg=0; break;}\n\t\t\t}\n\t\t\tif(flg) tot[opt][x]=n-r;\n\t\t\telse tot[opt][x]=-n;\n\t\t}else tot[opt][x]=-n;\n\t\tfor(i=head[x];i;i=nxt[i]) {\n\t\t\tdu[to[i]]--;\n\t\t\tif(!du[to[i]]) {\n\t\t\t\tQ[r++]=to[i];\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tint i,x,y;\n\tfor(i=1;i<=m;i++) {\n\t\tscanf(\"%d%d\",&x,&y);\n\t\txx[i]=x; yy[i]=y;\n\t\tadd(x,y); du[y]++;\n\t}\n\tTopsort(0);\n\tmemset(du,0,sizeof(du));\n\tmemset(head,0,sizeof(head)); cnt=0;\n\tfor(i=1;i<=m;i++) {\n\t\tadd(yy[i],xx[i]); du[xx[i]]++;\n\t}\n\tTopsort(1);\n\tint ans=0;\n\tfor(i=1;i<=n;i++) {\n\t\tif(tot[0][i]+tot[1][i]>=n-2) {\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n"], "input": "", "output": "", "tags": ["dfs and similar", "graphs"], "dificulty": "2900", "interactive": false}