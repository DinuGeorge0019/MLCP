{"link": "https://codeforces.com//contest/350/problem/C", "problemId": "3564", "problem_idx": "C", "shortId": "350C", "contest_number": "350", "problem_submissions": {"E": [4631521, 4627481, 4627736, 4628109, 4628919, 4627306, 4629552, 4630396, 4630738, 4630557, 4631036, 4630307, 4628626, 4630765, 4631090, 4631222, 4631307], "D": [4631384, 4632639, 4630471], "C": [4623828, 4624599, 4624536, 4622933, 4624699, 4624176, 4626336, 4621951, 4625656, 4625740, 4626157, 4624456, 4625990, 4625202, 4624685, 4626744, 4623856, 4627186], "B": [4622942, 4623430, 4623053, 4625927, 4623752, 4628716, 4624114, 4623578, 4624072, 4624239, 4624594, 4626727, 4624251, 4624259, 4627379, 4623391, 4627529, 4625315], "A": [4621532, 4621502, 4623629, 4621549, 4621709, 4622086, 4622630, 4621567, 4621446, 4621939, 4622148, 4623843, 4622109, 4621409, 4622118, 4621840]}, "name": "C. Bombs", "statement": "You\u2019ve got a robot, its task is destroying bombs on a square plane.\r\nSpecifically, the square plane contains bombs, the -th bomb is at point\r\nwith coordinates . We know that no two bombs are at the same point and\r\nthat no bomb is at point with coordinates . Initially, the robot is at\r\npoint with coordinates . Also, let\u2019s mark the robot\u2019s current position\r\nas . In order to destroy all the bombs, the robot can perform three\r\ntypes of operations: Operation has format \"\". To perform the operation\r\nrobot have to move in direction () times. There are only directions the\r\nrobot can move in: \"R\", \"L\", \"U\", \"D\". During one move the robot can\r\nmove from the current point to one of following points: , , ,\r\n(corresponding to directions). It is forbidden to move from point , if\r\nat least one point on the path (besides the destination point) contains\r\na bomb. Operation has format \"\". To perform the operation robot have to\r\npick a bomb at point and put it in a special container. Thus, the robot\r\ncan carry the bomb from any point to any other point. The operation\r\ncannot be performed if point has no bomb. It is forbidden to pick a bomb\r\nif the robot already has a bomb in its container. Operation has format\r\n\"\". To perform the operation robot have to take a bomb out of the\r\ncontainer and destroy it. You are allowed to perform this operation only\r\nif the robot is at point . It is forbidden to perform the operation if\r\nthe container has no bomb. Help the robot and find the shortest possible\r\nsequence of operations he can perform to destroy all bombs on the\r\ncoordinate plane.\r\n", "solutions": ["#include <cstdio>\n#include <stdlib.h>\n#include <algorithm>\nusing namespace std;\nconst int NMax=100000;\nint N;\npair<int,int> A[NMax];\nbool comp(pair<int,int> a,pair<int,int> b){\n    return abs(a.first)+abs(a.second)<abs(b.first)+abs(b.second);\n}\nint main()\n{\n    scanf(\"%d\",&N);\n    for (int i=0;i<N;i++)\n        scanf(\"%d%d\",&(A[i].first),&(A[i].second));\n    sort(A,A+N,comp);\n    int c=0;\n    for (int i=0;i<N;i++){\n        if (A[i].first==0 || A[i].second==0)\n            c+=4;\n        else\n            c+=6;\n    }\n    printf(\"%d\\n\",c);\n    for (int i=0;i<N;i++){\n        if (A[i].first>0)\n            printf(\"1 %d R\\n\",A[i].first);\n        if (A[i].first<0)\n            printf(\"1 %d L\\n\",-A[i].first);\n        if (A[i].second>0)\n            printf(\"1 %d U\\n\",A[i].second);\n        if (A[i].second<0)\n            printf(\"1 %d D\\n\",-A[i].second);\n        printf(\"2\\n\");\n        if (A[i].first>0)\n            printf(\"1 %d L\\n\",A[i].first);\n        if (A[i].first<0)\n            printf(\"1 %d R\\n\",-A[i].first);\n        if (A[i].second>0)\n            printf(\"1 %d D\\n\",A[i].second);\n        if (A[i].second<0)\n            printf(\"1 %d U\\n\",-A[i].second);\n        printf(\"3\\n\");\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1600", "interactive": false}