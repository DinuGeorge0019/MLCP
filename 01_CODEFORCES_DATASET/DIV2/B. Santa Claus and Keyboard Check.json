{
    "link": "https://codeforces.com//contest/752/problem/B",
    "problemId": "86737",
    "problem_idx": "B",
    "shortId": "752B",
    "contest_number": "752",
    "problem_submissions": {
        "E": [
            23307622,
            23298919,
            23293210,
            23296558,
            23289533,
            23300446,
            23289683,
            23303428,
            23297443,
            23304427,
            23304013,
            23301941,
            23302122,
            23296625,
            23299319,
            23308344,
            23296295,
            23301867,
            23298965
        ],
        "F": [
            23299614,
            23303097,
            23296260,
            23300075,
            23297820,
            23312296,
            23333337,
            23302007,
            23335434,
            23945130
        ],
        "D": [
            23293425,
            23296203,
            23296737,
            23303994,
            23297487,
            23296079,
            23297542,
            23304572,
            23298416,
            23301016,
            23298334,
            23301490,
            23342391,
            23303337,
            23298346,
            23305352,
            23295756,
            23302406
        ],
        "B": [
            23289571,
            23288739,
            23297269,
            23301250,
            23289332,
            23290328,
            23290841,
            23289310,
            23291467,
            23292074,
            23312032,
            23305914,
            23302012,
            23289784,
            23305350
        ],
        "C": [
            23288680,
            23289735,
            23290504,
            23291795,
            23293248,
            23292966,
            23293101,
            23290858,
            23293431,
            23292145,
            23290141,
            23293830,
            23292041,
            23293667,
            23293134,
            23292174,
            23291253,
            23291455,
            23296543,
            23939849,
            23294485
        ],
        "A": [
            23288066,
            23288054,
            23288222,
            23289194,
            23290949,
            23288138,
            23294677,
            23288200,
            23288517,
            23288677,
            23288100,
            23288709,
            23288239,
            23288139,
            23288488,
            23288364,
            23288063,
            23288232,
            23288317,
            23288593
        ]
    },
    "name": "B. Santa Claus and Keyboard Check",
    "statement": "Santa Claus decided to disassemble his keyboard to clean it. After he\r\nreturned all the keys back, he suddenly realized that some pairs of keys\r\ntook each other\u2019s place! That is, Santa suspects that each key is either\r\non its place, or on the place of another key, which is located exactly\r\nwhere the first key should be. In order to make sure that he\u2019s right and\r\nrestore the correct order of keys, Santa typed his favorite patter\r\nlooking only to his keyboard.You are given the Santa\u2019s favorite patter\r\nand the string he actually typed. Determine which pairs of keys could be\r\nmixed. Each key must occur in pairs .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define fo(i,a,b) for(int i=(a);i<(b);i++)\n#define MOD 1000000007\n#define MP make_pair\n#define PB push_back\ntypedef long long ll;\n\nstring s, t;\nint m[300], N;\nvector<pair<char, char>> v;\n\nint main () {\n\tcin >> s >> t;\n\tN = (int) s.size();\n\tfo(i, 0, N) {\n\t\tif (m[s[i]] && m[s[i]] != t[i]) return puts(\"-1\"), 0;\n\t\tif (m[t[i]] && m[t[i]] != s[i]) return puts(\"-1\"), 0;\n\t\tif (!m[s[i]]) {\n\t\t\tassert(!m[t[i]]);\n\t\t\tm[t[i]] = s[i], m[s[i]] = t[i];\n\t\t\tif (s[i] != t[i]) v.PB(MP(s[i], t[i]));\n\t\t}\n\t}\n\tprintf(\"%d\\n\", (int) v.size());\n\tfor (auto i : v) printf(\"%c %c\\n\", i.first, i.second);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "strings"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Santa Claus and Keyboard Check.json",
    "editorial_link": "https://codeforces.com//blog/entry/49328",
    "editorial": "Denote the two strings from the input by s and t. It's enough to find all pairs of distinct si and ti and then do the following:\n\nEnsure that each symbol is in no more than one different pair,\nEnsure that if symbol c is in a pair with another symbol d, then each occurrence of c in s on the i-th place takes place iff ti?=?d, and vice versa.\nIf at least one of these conditions fails, there is no answer, otherwise, it's enough to print the obtained pairs."
}