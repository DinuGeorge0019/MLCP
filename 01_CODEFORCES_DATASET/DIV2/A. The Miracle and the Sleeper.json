{
    "link": "https://codeforces.com//contest/1562/problem/A",
    "problemId": "1090687",
    "problem_idx": "A",
    "shortId": "1562A",
    "contest_number": "1562",
    "problem_submissions": {
        "D1": [
            127110573,
            127085719,
            127084796,
            127084014,
            127082028,
            127085521,
            127097411,
            127086825,
            127084098,
            127152628,
            127086357,
            127091256,
            127089578,
            127094935,
            127087378,
            127145842,
            127096913,
            127085638,
            127093081,
            127092946,
            127097887
        ],
        "C": [
            127103744,
            127070687,
            127073196,
            127078874,
            127072653,
            127077271,
            127080224,
            127080082,
            127076281,
            127152605,
            127080001,
            127084225,
            127080395,
            127079018,
            127078269,
            127145835,
            127074373,
            127074883,
            127071594,
            127080320,
            127084605
        ],
        "F": [
            127097089,
            127135208,
            127161728,
            127161600,
            127229394,
            127157826,
            127137600,
            127137538
        ],
        "B": [
            127076926,
            127064047,
            127067878,
            127063714,
            127064849,
            127070358,
            127068285,
            127074157,
            127067634,
            127152598,
            127071567,
            127066882,
            127070574,
            127066706,
            127070386,
            127145825,
            127065946,
            127063213,
            127065381,
            127068953,
            127075580
        ],
        "E": [
            127072906,
            127104112,
            127107000,
            127110960,
            127115711,
            127114212,
            127106853,
            127106260,
            127114534,
            127115452,
            127152643,
            127119064,
            127113726,
            127111252,
            127120883,
            127122598,
            127145862,
            127118199,
            127123949,
            127112032,
            127125984,
            127116259
        ],
        "A": [
            127058831,
            127058219,
            127058722,
            127058582,
            127058274,
            127060830,
            127061981,
            127062185,
            127059322,
            127061493,
            127152592,
            127059028,
            127058289,
            127059753,
            127058370,
            127060017,
            127145811,
            127058384,
            127058502,
            127058367,
            127058839,
            127058595
        ],
        "D2": [
            127087276,
            127093820,
            127092460,
            127093109,
            127096811,
            127100821,
            127112348,
            127097441,
            127096385,
            127152634,
            127098403,
            127095759,
            127102138,
            127094867,
            127102605,
            127145854,
            127108326,
            127092734,
            127119011,
            127100809,
            127104819
        ]
    },
    "name": "A. The Miracle and the Sleeper",
    "statement": "You are given two integers l and r, l\r\nle r. Find the largest possible value of a\r\nbmod b over all pairs (a, b) of integers for which r\r\nge a\r\nge b\r\nge l.As a reminder, a\r\nbmod b is a remainder we get when dividing a by b. For example, 26\r\nbmod 8 = 2.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint t;\nsigned main(){\n    ios::sync_with_stdio(false);cin.tie(0),cout.tie(0);\n    cin>>t;\n    while(t--){\n        int l,r;\n        cin>>l>>r;\n        cout<<r%max(r/2+1,l)<<endl;\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. The Miracle and the Sleeper.json",
    "editorial_link": "https://codeforces.com//blog/entry/94278",
    "editorial": "Itâs not hard to see that if , then . It can be shown that the maximal\r\npossible answer.At the same time, let the segment not contain number ,\r\nthat is, . Then we can show that the maximal answer is .Asymptotics: per\r\ntest case.\r\n",
    "hint": [
        "Hint 1 Try to consider such segments where .",
        "Hint 2 Now think about what to do if this condition is not satisfied."
    ]
}