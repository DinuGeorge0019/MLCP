{"link": "https://codeforces.com//contest/294/problem/B", "problemId": "2807", "problem_idx": "B", "shortId": "294B", "contest_number": "294", "problem_submissions": {"D": [3489455, 3490392], "E": [3487299, 3487883, 3488957, 3485802, 3487525, 3494240, 3497332, 3493600, 3489972], "C": [3486147, 3485304, 3486088, 3488625, 3489289, 3484703, 3483687, 3487009, 3485239, 3485635, 3486050, 3485757, 3485793, 3486458, 3486345, 3485667, 3486505, 3486019], "A": [3482812, 3482475, 3482613, 3488228, 3482534, 3482882, 3482485, 3482654, 3482539, 3482697, 3482561, 3482633, 3483083, 3483097, 3483409, 3482585, 3483087, 3482816], "B": [3483440, 3483787, 3487702, 3490250, 3483629, 3484145, 3483917, 3483569, 3484549, 3484018, 3484016, 3483940, 3484588, 3484893, 3483567, 3484832, 3485008]}, "name": "B. Shaass and Bookshelf", "statement": "Shaass has books. He wants to make a bookshelf for all his books. He\r\nwants the bookshelf\u2019s dimensions to be as small as possible. The\r\nthickness of the -th book is and its pages\u2019 width is equal to . The\r\nthickness of each book is either or . All books have the same page\r\nheights. Shaass puts the books on the bookshelf in the following way.\r\nFirst he selects some of the books and put them vertically. Then he puts\r\nthe rest of the books horizontally above the vertical books. The sum of\r\nthe widths of the horizontal books must be no more than the total\r\nthickness of the vertical books. A sample arrangement of the books is\r\ndepicted in the figure. Help Shaass to find the minimum total thickness\r\nof the vertical books that we can achieve.\r\n", "solutions": ["#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <set>\n#define sqr(x) ((x)*(x))\n#define rep(i, n) for(int i = 1; i <= n; ++i)\nusing namespace std;\n\nint n, t[200], w[200], ans = 10000000;\nvector<int> T[3];\n\nint main(){\n    cin >> n;\n    rep(i, n){\n        cin >> t[i] >> w[i];\n        T[t[i]].push_back(w[i]);\n    }\n    sort(T[1].begin(), T[1].end());\n    sort(T[2].begin(), T[2].end());\n    int l1 = 0, l2;\n    for(int i = 0; i <= T[1].size(); ++i){\n        l2 = 0;\n        for(int j = 0; j <= T[2].size(); ++j){\n            if((T[1].size() - i) + (T[2].size() - j) * 2 >= l1 + l2)\n                ans = min(ans, int((T[1].size() - i) + 2 * (T[2].size() - j)));\n            if(j < T[2].size())\n                l2 += T[2][j];\n        }\n        if(i < T[1].size())\n            l1 += T[1][i];\n    }\n    cout << ans << endl;\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "greedy"], "dificulty": "1700", "interactive": false}