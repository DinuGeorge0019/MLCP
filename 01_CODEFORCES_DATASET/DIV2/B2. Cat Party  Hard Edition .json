{
    "link": "https://codeforces.com//contest/1163/problem/B2",
    "problemId": "341950",
    "problem_idx": "B2",
    "shortId": "1163B2",
    "contest_number": "1163",
    "problem_submissions": {
        "C2": [
            66047932,
            53928733,
            53917739,
            53916320,
            53927440,
            53917053,
            53921940,
            53917741,
            53917113,
            53917536,
            53916492,
            53922064,
            53918906,
            53917646,
            53928915,
            53916500,
            53917339,
            53918100,
            53918744,
            53917518,
            53919810
        ],
        "C1": [
            66047912,
            53928680,
            53917729,
            53916398,
            53927499,
            53917123,
            53921828,
            53917840,
            53916975,
            53916501,
            53916551,
            53921864,
            53918990,
            53917581,
            53920027,
            53916455,
            53917420,
            53918173,
            53918994,
            53917678,
            53919432
        ],
        "B2": [
            66047900,
            53920376,
            53914135,
            53913146,
            53913090,
            53913301,
            53918925,
            53912937,
            53914221,
            53912878,
            53912457,
            53914593,
            53913074,
            53922853,
            53913811,
            53913679,
            53912800,
            53914163,
            53913157,
            53913627,
            53916315
        ],
        "B1": [
            66047874,
            53920441,
            53914184,
            53913224,
            53913218,
            53913362,
            53918852,
            53913014,
            53914129,
            53912791,
            53912577,
            53914508,
            53913299,
            53914871,
            53913903,
            53913625,
            53912899,
            53914084,
            53913246,
            53913821,
            53916410
        ],
        "E": [
            53956983,
            53917883,
            53924812,
            53927353,
            53925644,
            53925684,
            53938288,
            53938253
        ],
        "D": [
            53956962,
            53912001,
            53921113,
            53918916,
            53915736,
            53919859,
            53913955,
            53921659,
            53920805,
            53920009,
            53923016,
            53918711,
            53920953,
            53917042,
            53924906,
            53924050,
            53923576,
            53920981,
            53945253,
            53925390,
            53922597
        ],
        "A": [
            53956941,
            53913969,
            53910517,
            53910338,
            53909903,
            53909816,
            53916249,
            53910013,
            53910841,
            53909880,
            54028459,
            53912757,
            53911710,
            53909900,
            53909929,
            53910371,
            53909489,
            53909450,
            53909565,
            53911288,
            53909949,
            53909884
        ]
    },
    "name": "B2. Cat Party  Hard Edition ",
    "statement": "Shiro\u2019s just moved to the new house. She wants to invite all friends of\r\nher to the house so they can play monopoly. However, her house is too\r\nsmall, so she can only invite one friend at a time.For each of the n\r\ndays since the day Shiro moved to the new house, there will be exactly\r\none cat coming to the Shiro\u2019s house. The cat coming in the i-th day has\r\na ribbon with color u_i. Shiro wants to know the largest number x, such\r\nthat if we consider the streak of the first x days, it is possible to\r\nremove day from this streak so that every ribbon color among the\r\nremaining x - 1 will have the same number of occurrences.For example,\r\nconsider the following sequence of u_i: [2, 2, 1, 1, 5, 4, 4, 5]. Then x\r\n= 7 makes a streak, since if we remove the leftmost u_i = 5, each ribbon\r\ncolor will appear exactly twice in the prefix of x - 1 days. Note that x\r\n= 8 doesn\u2019t form a streak, since you must remove exactly one day. Since\r\nShiro is just a cat, she is not very good at counting and needs your\r\nhelp finding the longest streak.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 6;\nint n, a[N], c[N], d[N], mx, cnt;\nset<int> s;\n\ninline bool pd(int o) {\n\tif (s.size() == 1u && *s.begin() == 1) return 1;\n\tif (s.size() == 1u && *s.begin() == o) return 1;\n\tif (s.size() != 2u) return 0;\n\tint k = *s.begin(), t = *(++s.begin());\n\tif (k == 1 && (cnt - 1) * t == o - 1) return 1;\n\tif (cnt * k == o - 1 && k + 1 == t) return 1;\n\treturn 0;\n}\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tc[a[i]]++;\n\t\tmx = max(mx, a[i]);\n\t}\n\tfor (int i = 1; i <= mx; i++)\n\t\tif (c[i] && ++cnt && !d[c[i]]++)\n\t\t\ts.insert(c[i]);\n\tfor (int i = n; i; i--) {\n\t\tif (pd(i)) {\n\t\t\tcout << i << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tif (!--d[c[a[i]]]) s.erase(c[a[i]]);\n\t\tif (!--c[a[i]]) --cnt;\n\t\tif (c[a[i]] && !d[c[a[i]]]++) s.insert(c[a[i]]);\n\t}\n\treturn 0;\n} "
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "implementation"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B2. Cat Party  Hard Edition .json",
    "editorial_link": "https://codeforces.com/blog/entry/66943",
    "editorial": "We can iterate over all streaks and check for each streak if we can\r\nremove one day so that each color has the same number of cats.There are\r\n4 cases where we can remove a day from the streak to satisfy the\r\ncondition: There is only one color in this streak. All appeared colors\r\nin this streak have the occurrence of (i.e. every color has exactly cat\r\nwith that color). Every color has the same occurrence of cats, except\r\nfor exactly one color which has the occurrence of . Every color has the\r\nsame occurrence of cats, except for exactly one color which has the\r\noccurrence exactly more than any other color. All of these four\r\nconditions can be checked using counting techniques.Complexity: .\r\n"
}