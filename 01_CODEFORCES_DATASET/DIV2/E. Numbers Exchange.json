{"link": "https://codeforces.com//contest/746/problem/E", "problemId": "85373", "problem_idx": "E", "shortId": "746E", "contest_number": "746", "problem_submissions": {"F": [23098160, 23101734, 23098656, 23102651, 23103415, 23107961, 23097485, 23103112, 23103543, 23134726, 23104852, 23131476], "G": [23093374, 23095345, 23096484, 23099554, 23094331, 23098793, 32644514, 23097257, 23097589, 23088737, 23098418, 23099935, 23101255, 23098493, 23095437, 23098070, 23097715, 23102940, 23099714, 23102329, 23100307], "E": [23090983, 23091838, 23090400, 23090385, 23091224, 23095595, 23092637, 23090974, 23092694, 23093218, 23092131, 23090847, 23094473, 23098598, 23094014, 23142601, 23096689, 23092749, 23095909, 23093965, 23096216], "C": [23089009, 23086489, 23093136, 23087647, 23090881, 23086795, 23086617, 23094723, 23086814, 23087320, 23089539, 23108446, 23092756, 23088603, 23090345, 23087808, 23091627], "D": [23086805, 23088293, 23086244, 23094627, 23088889, 23093685, 23088867, 23088313, 23096227, 23088723, 23089318, 23104824, 23090867, 23090879, 23091937, 23088754, 23089647, 23091296, 23088886, 23089358], "B": [23084224, 23084449, 23084370, 23084955, 23085227, 23087278, 23084159, 23084283, 23090451, 23083745, 23084649, 23085347, 23084771, 23089523, 23085956, 23085476, 23085206, 23084905, 23085967], "A": [23082169, 23082385, 23081947, 23082691, 23082163, 23085385, 23081965, 23082429, 23082420, 23082009, 23082118, 23082810, 23086953, 23088467, 23082662, 23082884, 23082308, 23082652, 23082888]}, "name": "E. Numbers Exchange", "statement": "Eugeny has cards, each of them has exactly one integer written on it.\r\nEugeny wants to exchange some cards with Nikolay so that the number of\r\neven integers on his cards would equal the number of odd integers, and\r\nthat all these numbers would be . Nikolay has cards, distinct numbers\r\nfrom to are written on them, one per card. It means that Nikolay has\r\nexactly one card with number , exactly one card with number and so on. A\r\nsingle exchange is a process in which Eugeny gives one card to Nikolay\r\nand takes another one from those Nikolay has. Your task is to find the\r\nminimum number of card exchanges and determine which cards Eugeny should\r\nexchange.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define ll int\n#define ld long double\n#define N ((ll)301*1000)\n#define INF ((ll)2e9)\n#define MOD ((ll)1e9+7)\nll tavan(ll x,ll y){ll res=1;while(y){res*=y%2?x:1;res%=MOD;x*=x;x%=MOD;y/=2;}return res;}\n\nll n,m,a[N],even,odd,ans;\nvector <ll> bad,v_even,v_odd,now_even,now_odd;\nset <ll> s;\n\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);\n    cin>>n>>m;\n    for(int i=0;i<n;i++)\n    {\n    \tcin>>a[i];\n    \tif(s.count(a[i]))bad.push_back(i),ans++;\n    \telse\n    \t{\n    \t\ts.insert(a[i]);\n    \t\tif(a[i]%2==0)even++,now_even.push_back(i);\n    \t\telse odd++,now_odd.push_back(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=min(m,(ll)4e5);i++)\n\t{\n\t\tif(s.count(i))continue;\n\t\tif(i%2==0)v_even.push_back(i);\n\t\telse v_odd.push_back(i);\n\t}\n\tfor(auto u:bad)\n\t{\n\t\tif(even<=odd)\n\t\t{\n\t\t\tif(!v_even.size())return cout<<-1,0;\n\t\t\ta[u]=v_even.back();\n\t\t\tv_even.pop_back();\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!v_odd.size())return cout<<-1,0;\n\t\t\ta[u]=v_odd.back();\n\t\t\tv_odd.pop_back();\n\t\t\todd++;\n\t\t}\n\t}\n\twhile(even<odd)\n\t{\n\t\tif(!now_odd.size() || !v_even.size())return cout<<-1,0;\n\t\ta[now_odd.back()]=v_even.back();\n\t\tnow_odd.pop_back();v_even.pop_back();\n\t\todd--;even++;ans++;\n\t}\n\twhile(even>odd)\n\t{\n\t\tif(!now_even.size() || !v_odd.size())return cout<<-1,0;\n\t\ta[now_even.back()]=v_odd.back();\n\t\tnow_even.pop_back();v_odd.pop_back();\n\t\teven--;odd++;ans++;\n\t}\n\tcout<<ans<<\"\\n\";\n\tfor(int i=0;i<n;i++)cout<<a[i]<<\" \";\n    return 0;\n}"], "input": "", "output": "", "tags": ["greedy", "implementation", "math"], "dificulty": "1900", "interactive": false}