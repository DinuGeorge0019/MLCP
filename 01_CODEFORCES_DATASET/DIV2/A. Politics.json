{
    "link": "https://codeforces.com//contest/1818/problem/A",
    "problemId": "1897383",
    "problem_idx": "A",
    "shortId": "1818A",
    "contest_number": "1818",
    "problem_submissions": {
        "F": [
            203954465,
            203930910,
            203989728,
            203950170
        ],
        "E": [
            203940713,
            203952207,
            203954969,
            203955944,
            204078536,
            203944339,
            203943920,
            203965332,
            203957684,
            203924512
        ],
        "D": [
            203935580,
            203930131,
            203939536,
            203937747,
            203926993,
            203932798,
            203948151,
            203919017,
            203933133,
            203930283,
            203939418,
            203978791,
            203937294,
            203949049,
            203940699,
            203938945,
            203937604,
            203937271
        ],
        "C": [
            203927589,
            203919798,
            203928628,
            203925534,
            203931513,
            203921512,
            203927085,
            203928001,
            203926317,
            203916672,
            203923862,
            203933925,
            203926373,
            203934292,
            203922244,
            203928248,
            203928037,
            203928918
        ],
        "B": [
            203922412,
            203918213,
            203919638,
            203920216,
            203917691,
            203917420,
            203954835,
            203921335,
            203916143,
            203918490,
            203937550,
            203919150,
            203922597,
            203918604,
            203921444,
            203917928,
            203921361,
            203920046,
            203919333
        ],
        "A": [
            203919670,
            203917474,
            203915999,
            203915969,
            203915149,
            203915496,
            203915115,
            203915794,
            203934868,
            203916606,
            203917417,
            203915457,
            203960905,
            203915626,
            203915203,
            203915634,
            203917495
        ]
    },
    "name": "A. Politics",
    "statement": "In a debate club with n members, including yourself (member 1), there\r\nare k opinions to be discussed in sequence. During each discussion,\r\nmembers express their agreement or disagreement with the opinion. Let\u2019s\r\ndefine Y as the number of members who agree and N as the number of\r\nmembers who disagree. After each discussion, members leave the club\r\nbased on the following criteria: If more members agree than disagree\r\n(Y > N), all members who disagreed leave the club. If more members\r\ndisagree than agree (Y < N), all members who agreed leave the club. If\r\nthere is a tie (Y = N), all members leave the club. As the club\r\npresident, your goal is to stay in the club and maximize the number of\r\nmembers remaining after the meeting. You have access to each member\u2019s\r\nstance on all k opinions before the meeting starts, and you can expel\r\nany number of members (excluding yourself) before the meeting\r\nbegins.Determine the maximum number of members, including yourself, who\r\ncan remain in the club after the meeting. You don\u2019t need to provide the\r\nspecific expulsion strategy but only the maximum number of members that\r\ncan stay. Ensure that you remain in the club after the meeting as well.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nusing PI = pair<int, int>;\nusing LL = long long;\n\nconst int N = 105;\n\nint a[N];\nstring s[N];\nbool vis[N];\n\nint main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\", \"r\", stdin);\n#endif\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\t\n\tint T; cin >> T;\n\twhile (T --) {\n\t\tint n, k; cin >> n >> k;\n\t\tfor (int i = 0; i < n; i ++) vis[i] = 0;\n\t\tfor (int i = 0; i < n; i ++) cin >> s[i];\n\t\tfor (int i = 0; i < k; i ++) {\n\t\t\tfor (int j = 1; j < n; j ++) {\n\t\t\t\tif (s[j][i] != s[0][i]) vis[j] = 1;\n\t\t\t}\n\t\t}\n\t\tint rlt = 0;\n\t\tfor (int i = 0; i < n; i ++) if (!vis[i]) rlt ++;\n\t\tcout << rlt << endl;\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\A. Politics.json",
    "editorial_link": "https://codeforces.com//blog/entry/115586",
    "editorial": "The members that stay in the end must have the same take about each of\r\nthe discussed opinions (if takes about some opinion differ for two\r\nmembers, at least one of them should have left during the discussion of\r\nthat opinion). It means that the people that are left must all have the\r\nsame takes as the president. On the other hand, all such people can stay\r\nif you expel everybody else in advance, so the problem just asks you to\r\ncount the number of people with the same takes on all opinions as the\r\npresident.\r\n"
}