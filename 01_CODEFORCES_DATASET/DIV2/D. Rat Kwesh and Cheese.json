{"link": "https://codeforces.com//contest/621/problem/D", "problemId": "46904", "problem_idx": "D", "shortId": "621D", "contest_number": "621", "problem_submissions": {"D": [15706922, 15708912, 15712199, 15709835, 15713077, 15712357, 15708942, 15766873, 15747435, 15733699, 15715880, 15719896], "E": [15703295, 15703499, 15705519, 15707664, 15708122, 15707325, 15713941, 15705601, 15704286, 15701891, 15705027, 15705042, 15706397, 15704658, 15704205, 15709743, 15706195, 15705463, 15707137, 15707198], "C": [15701639, 15705315, 15700957, 15701370, 15700184, 15704278, 15705563, 15700217, 15702029, 15701828, 15699715, 15700597, 15699825, 15700179, 15700557, 15702745, 15701142, 15700489, 15700527, 15701490], "B": [15698894, 15699840, 15698446, 15697286, 15697213, 15701158, 15703631, 15696667, 15698191, 15697920, 15698162, 15700575, 15697836, 15697601, 15699162, 15697389, 15699466, 15700819, 15698045, 15698470], "A": [15697249, 15709534, 15696296, 15695622, 15695621, 15696700, 15695629, 15695597, 15695557, 15695777, 15695703, 15696779, 15695814, 15695801, 15700242, 15695837, 15695799, 15696854, 15696011, 15696156]}, "name": "D. Rat Kwesh and Cheese", "statement": "Wet Shark asked Rat Kwesh to generate three positive real numbers , and\r\n, from to , inclusive. Wet Krash wants to impress Wet Shark, so all\r\ngenerated numbers will have digit after the decimal point.Wet Shark\r\nknows Rat Kwesh will want a lot of cheese. So he will give the Rat an\r\nopportunity to earn a lot of cheese. He will hand the three numbers ,\r\nand to Rat Kwesh, and Rat Kwesh will pick one of the these twelve\r\noptions: ; ; ; ; ; ; ; ; ; ; ; . Let be the maximum of all the , and be\r\nthe smallest index (from to ) such that . Rat\u2019s goal is to find that ,\r\nand he asks you to help him. Rat Kwesh wants to see how much cheese he\r\ngets, so he you will have to print the expression corresponding to that\r\n.\r\n", "solutions": ["#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <utility>\n#include <vector>\nusing namespace std;\n\n#define fi first\n#define se second\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define sz(x) (int((x).size()))\n#define bit(x) (1 << (x))\n#define cnt1(x) (__builtin_popcount(x))\n\ntemplate<class T, class U>\ninline void chkmax(T& x, U y) {\n\tif (x < y) x = y;\n}\n\ntemplate<class T, class U>\ninline void chkmin(T& x, U y) {\n\tif (y < x) x = y;\n}\n\ntypedef long long LL;\ntypedef double DB;\ntypedef pair<int, int> PII;\ntypedef vector<int> VI;\n\nconst DB EPS = 1e-9;\n\nstruct Triple {\n\tTriple(){}\n\tTriple(DB x, DB y, DB z):x(x), y(y), z(z){}\n\tDB x, y, z;\n\tDB val() {\n\t\treturn z * log(y) + log(x);\n\t}\n};\n\nbool calc(Triple t1, Triple t2) {\n\tif (t1.x > 1) {\n\t\tif (t2.x <= 1) return 1;\n\t\tt1.x = log(t1.x);\n\t\tt2.x = log(t2.x);\n\t\treturn t1.val() > t2.val() + EPS;\n\t}\n\telse if (t1.x == 1) {\n\t\tif (t2.x < 1) return 1;\n\t\treturn 0;\n\t}\n\telse {\n\t\tif (t2.x >= 1) return 0;\n\t\tt1.x = -log(t1.x);\n\t\tt2.x = -log(t2.x);\n\t\treturn t1.val() + EPS < t2.val();\n\t}\n}\n\nint main() {\n//\tfreopen(\"in.txt\", \"r\", stdin);\n//\tfreopen(\"out.txt\", \"w\", stdout);\n\t\n\tDB x, y, z;\n\tscanf(\"%lf%lf%lf\", &x, &y, &z);\n\tTriple ans(x, y, z), tp;\n\tint id = 1;\n\t\n\ttp = Triple(x, z, y);\n\tif (calc(tp, ans)) ans = tp, id = 2;\n\ttp = Triple(x, y * z, 1);\n\tif (calc(tp, ans)) ans = tp, id = 3;\n\ttp = Triple(y, x, z);\n\tif (calc(tp, ans)) ans = tp, id = 5;\n\ttp = Triple(y, z, x);\n\tif (calc(tp, ans)) ans = tp, id = 6;\n\ttp = Triple(y, x * z, 1);\n\tif (calc(tp, ans)) ans = tp, id = 7;\n\ttp = Triple(z, x, y);\n\tif (calc(tp, ans)) ans = tp, id = 9;\n\ttp = Triple(z, y, x);\n\tif (calc(tp, ans)) ans = tp, id = 10;\n\ttp = Triple(z, x * y, 1);\n\tif (calc(tp, ans)) ans = tp, id = 11;\n\t\n\tif (id == 1) puts(\"x^y^z\");\n\telse if (id == 2) puts(\"x^z^y\");\n\telse if (id == 3) puts(\"(x^y)^z\");\n\telse if (id == 5) puts(\"y^x^z\");\n\telse if (id == 6) puts(\"y^z^x\");\n\telse if (id == 7) puts(\"(y^x)^z\");\n\telse if (id == 9) puts(\"z^x^y\");\n\telse if (id == 10) puts(\"z^y^x\");\n\telse if (id == 11) puts(\"(z^x)^y\");\n\t\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "math"], "dificulty": "2400", "interactive": false}