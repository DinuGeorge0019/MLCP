{"link": "https://codeforces.com//contest/1513/problem/B", "problemId": "954479", "problem_idx": "B", "shortId": "1513B", "contest_number": "1513", "problem_submissions": {"F": [112704242, 112708449, 112692430, 112693367, 112715319, 112703491, 112694811, 127489679, 112714894, 112706130], "E": [112694829, 112692532, 112741611, 112740521, 112688817, 112693970, 112694924, 112695544, 112697383, 112699670, 112696818, 112699923, 112700793], "D": [112684276, 112682550, 112679745, 112679949, 112677500, 112683697, 112682474, 112682520, 113011471, 113011359, 113011120, 113011016, 113009370, 112680944, 112706307, 112684078, 112683480, 112687888, 112686211, 112688484, 112694241], "C": [112675074, 112673956, 112673377, 112672093, 112671463, 112675182, 112671664, 112676030, 112671692, 112674449, 112673953, 112672990, 112673437, 112678260, 112672998, 112674969], "B": [112671476, 112670228, 112670172, 112670205, 112668144, 112670061, 112665513, 112670183, 112667846, 112669295, 112667797, 112667641, 112669249, 112668199, 112668800, 112667109], "A": [112663904, 112665049, 112664695, 112668785, 112662814, 112664430, 112662730, 112664013, 112662970, 112664151, 112662873, 112663063, 112663560, 112664683, 112663477, 112662816]}, "name": "B. AND Sequences", "statement": "A sequence of n non-negative integers (n\r\nge 2) a_1, a_2,\r\ndots, a_n is called good if for all i from 1 to n-1 the following\r\ncondition holds true: a_1\r\n:\r\n&\r\n: a_2\r\n:\r\n&\r\n:\r\ndots\r\n:\r\n&\r\n: a_i = a_{i+1}\r\n:\r\n&\r\n: a_{i+2}\r\n:\r\n&\r\n:\r\ndots\r\n:\r\n&\r\n: a_n, where\r\n& denotes the bitwise AND operation.You are given an array a of size n\r\n(n\r\ngeq 2). Find the number of permutations p of numbers ranging from 1 to\r\nn, for which the sequence a_{p_1}, a_{p_2}, ... ,a_{p_n} is good. Since\r\nthis number can be large, output it modulo 10^9+7.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <set>\nusing namespace std;\nconst int N = 200010;\nconst int mod = 1e9 + 7;\nint a[N];\nint b[N];\nvoid solve() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i) scanf(\"%d\", &a[i]);\n    for (int i = 0; i < n; ++i) b[i] = 0;\n    vector<int> v;\n    for (int j = 0; j < 30; ++j) {\n        int cnt = 0;\n        for (int i = 0; i < n; ++i) {\n            if (a[i] & (1 << j)) cnt++;\n        }\n        if (cnt == n - 1) {\n            puts(\"0\");\n            return;\n        }\n        for (int i = 0; i < n; ++i) {\n            if (cnt == n || !(a[i] & (1 << j))) b[i]++;\n        }\n    }\n    int cnt2 = 0;\n    for (int i = 0; i < n; ++i) {\n        if (b[i] == 30) cnt2++;\n    }\n    long long ans = cnt2 * 1ll * (cnt2 - 1) % mod;\n    for (int i = 1; i <= n - 2; ++i) ans = ans * i % mod;\n    printf(\"%lld\\n\", ans);\n}\n\nint main() {\n#ifdef FLOWMASTER\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 0; i < t; ++i) solve();\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "math"], "dificulty": "1400", "interactive": false}