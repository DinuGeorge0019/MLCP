{"link": "https://codeforces.com//contest/2103/problem/D", "problemId": "3344322", "problem_idx": "D", "shortId": "2103D", "contest_number": "2103", "problem_submissions": {"E": [316580259, 316596724, 317172040, 316590039, 316595391], "F": [316566749, 316554849, 316570194, 316571690, 316564753, 316565334, 316570375, 316566324, 316575470, 316580599], "D": [316555496, 316575935, 316547933, 316557810, 316581217, 316583504, 316574629, 316579069, 316561467, 316554031, 316570027], "C": [316551349, 316539195, 316536817, 316551152, 316552060, 316551470, 316558008, 316550915, 316554352, 316539931, 316539580], "B": [316531722, 316533206, 316540972, 316534158, 316532366, 316536408, 316536066, 316548057, 316551531, 316531957, 316544497], "A": [316523865, 316526077, 316528063, 316524687, 316526522, 316532444, 316526800, 316525336, 316545204, 316523615, 316541424]}, "editorial_link": "https://codeforces.com//blog/entry/142149", "editorial": "", "name": "D. Local Construction", "statement": "An element b_i (1\r\nle i\r\nle m) in an array b_1, b_2,\r\nldots, b_m is a local minimum if at least one of the following holds: 2\r\nle i\r\nle m - 1 and b_i < b_{i - 1} and b_i < b_{i + 1}, or i = 1 and b_1 <\r\nb_2, or i = m and b_m < b_{m - 1}. Similarly, an element b_i (1\r\nle i\r\nle m) in an array b_1, b_2,\r\nldots, b_m is a local maximum if at least one of the following holds: 2\r\nle i\r\nle m - 1 and b_i > b_{i - 1} and b_i > b_{i + 1}, or i = 1 and b_1 >\r\nb_2, or i = m and b_m > b_{m - 1}. Note that local minima and maxima are\r\nnot defined for arrays with only one element.There is a hidden\r\npermutation^{\r\ntext{ }} p of length n. The following two operations are applied to\r\npermutation p alternately, starting from operation 1, until there is\r\nonly one element left in p: remove all elements of p which are local\r\nminima. remove all elements of p which are local maxima. More\r\nspecifically, operation 1 is applied during every odd iteration, and\r\noperation 2 is applied during every even iteration, until there is only\r\none element left in p.For each index i (1\r\nle i\r\nle n), let a_i be the iteration number that element p_i is removed, or\r\n-1 if it was never removed.It can be proven that there will be only one\r\nelement left in p after at most\r\nlceil\r\nlog_2 n\r\nrceil iterations (in other words, a_i\r\nle\r\nlceil\r\nlog_2 n\r\nrceil).You are given the array a_1, a_2,\r\nldots, a_n. Your task is to construct any permutation p of n elements\r\nthat satisfies array a.^{\r\ntext{ }}A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray).\r\n", "solutions": [], "input": "", "output": "", "tags": ["constructive algorithms", "dfs and similar", "implementation", "two pointers"], "dificulty": "2000", "interactive": false, "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\D. Local Construction.json"}