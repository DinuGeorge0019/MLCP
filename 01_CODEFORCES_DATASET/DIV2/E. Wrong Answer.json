{
    "link": "https://codeforces.com//contest/1130/problem/E",
    "problemId": "303011",
    "problem_idx": "E",
    "shortId": "1130E",
    "contest_number": "1130",
    "problem_submissions": {
        "E": [
            50451743,
            50450700,
            50452094,
            50453474,
            50446313,
            50455916,
            50454920,
            50454012,
            50454008,
            50454839,
            50457467,
            50456727,
            50456260,
            50455672,
            50455605,
            50457927,
            50458312,
            50458126,
            50457415,
            50456722
        ],
        "D1": [
            50446455,
            50445965,
            50445582,
            50447980,
            50455630,
            50447204,
            50446775,
            50447785,
            50448347,
            50449449,
            50449217,
            50450469,
            50443264,
            50449132,
            50450976,
            50449020,
            50447745,
            50451064,
            50451498,
            50451552
        ],
        "D2": [
            50446421,
            50445878,
            50447104,
            50447912,
            50455476,
            50447640,
            50449363,
            50448330,
            50449131,
            50450168,
            50449067,
            50450309,
            50443073,
            50449382,
            50450922,
            50449226,
            50450982,
            50451004,
            50451840,
            50451473
        ],
        "C": [
            50442552,
            50443206,
            50442662,
            50441379,
            50437688,
            50442381,
            50441711,
            50439129,
            50445792,
            50444106,
            50444264,
            50443989,
            50450118,
            50445704,
            50445333,
            50444492,
            50440739,
            50444078,
            50446518,
            50445495
        ],
        "B": [
            50438439,
            50440829,
            50438694,
            50437732,
            50440500,
            50437727,
            50437348,
            50443831,
            50442386,
            50441239,
            50438973,
            50438854,
            50445257,
            50439931,
            50440493,
            50439101,
            50443847,
            50438507,
            50438623,
            50441001
        ],
        "A": [
            50434167,
            50434903,
            50434750,
            50433920,
            50434056,
            50434451,
            50434231,
            50435637,
            50434352,
            50433911,
            50435681,
            50434866,
            50434981,
            50436177,
            50436562,
            50434700,
            50434131,
            50435258,
            50434348,
            50436340
        ]
    },
    "name": "E. Wrong Answer",
    "statement": "Consider the following problem: given an array a containing n integers\r\n(indexed from 0 to n-1), find\r\nmax\r\nlimits_{0\r\nleq l\r\nleq r\r\nleq n-1}\r\nsum\r\nlimits_{l\r\nleq i\r\nleq r} (r-l+1)\r\ncdot a_i. In this problem, 1\r\nleq n\r\nleq 2\r\n,000 and |a_i|\r\nleq 10^6.In an attempt to solve the problem described, Alice quickly\r\ncame up with a blazing-fast greedy algorithm and coded it. Her\r\nimplementation in pseudocode is as follows: find_answer(n, a) Assumes n\r\nis an integer between 1 and 2000, inclusive Assumes a is a list\r\ncontaining n integers: a[0], a[1], ..., a[n-1] res = 0 cur = 0 k = -1 i\r\n= 0 i = n-1 cur = cur + a[i] cur < 0 cur = 0 k = i res = max(res,\r\n(i-k)*cur) resAlso, as you can see, Alice\u2019s idea is not entirely\r\ncorrect. For example, suppose n = 4 and a = [6, -8, 7, -42]. Then, would\r\nreturn 7, but the correct answer is 3\r\ncdot (6-8+7) = 15.You told Alice that her solution is incorrect, but she\r\ndid not believe what you said.Given an integer k, you are to find any\r\nsequence a of n integers such that the correct answer and the answer\r\nproduced by Alice\u2019s algorithm differ by exactly k. Note that although\r\nthe choice of n and the content of the sequence is yours, you must still\r\nfollow the constraints earlier given: that 1\r\nleq n\r\nleq 2\r\n,000 and that the absolute value of each element does not exceed 10^6.\r\nIf there is no such sequence, determine so.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, v, k, o, u;\n\nint main()\n{\n\tscanf(\"%d\", &k);\n\tn=2000;\n\tv=1;\n\twhile((k+v)%(n-1)!=0)\n\t{\n\t\t++v;\n\t}\n\to=(k+v)/(n-1)+v;\n\tu=-v;\n\tprintf(\"%d\\n\", n);\n\tfor(int i=1; i<=n-2; ++i)\n\t{\n\t\tprintf(\"0 \");\n\t}\n\tcout<<u<<\" \"<<o;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Wrong Answer.json",
    "editorial_link": "https://codeforces.com/blog/entry/65520",
    "editorial": "Suppose a0=?1\n and ai?1\n for each 1?i<n\n. Let S=?i=0n?1ai\n.\n\nAssume also that n?2\n.\n\nIt is easy to see that Alice's algorithm produces (n?1)(S+1)\n as the answer. Meanwhile, there are two possible correct answers: either nS\n or (n?1)(S+1)\n, whichever is greater.\n\nAssume further that a1?2\n. The correct answer for this array is then nS\n. The difference between these two results is nS?(n?1)(S+1)=S?n+1\n.\n\nNow, we can easily create array a\n greedily so that S?n+1=k\n.\n\nThe time complexity is O(n)\n."
}