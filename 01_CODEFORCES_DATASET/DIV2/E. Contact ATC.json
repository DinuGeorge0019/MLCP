{
    "link": "https://codeforces.com//contest/957/problem/E",
    "problemId": "168089",
    "problem_idx": "E",
    "shortId": "957E",
    "contest_number": "957",
    "problem_submissions": {
        "E": [
            36592290,
            36594963,
            36599082,
            36599897,
            36599760
        ],
        "D": [
            36588184,
            36593316,
            36590028,
            36587926,
            36594829,
            36594512,
            36589430,
            36586974,
            36587001,
            36588810,
            36587938,
            36589206,
            36583680,
            36590716,
            36594602,
            36589094
        ],
        "C": [
            36585096,
            36587203,
            36585622,
            36583559,
            36590242,
            36589387,
            36584971,
            36584551,
            36583605,
            36586678,
            36585992,
            36585864,
            36581121,
            36584678,
            36584664,
            36585936
        ],
        "B": [
            36581561,
            36585463,
            36583187,
            36581534,
            36588080,
            36585487,
            36582113,
            36582013,
            36588511,
            36584549,
            36582998,
            36591084,
            36582444,
            36581251,
            36582787
        ],
        "A": [
            36579344,
            36581086,
            36579386,
            36579567,
            36585046,
            36580860,
            36579710,
            36580098,
            36579619,
            36583249,
            36579936,
            36582081,
            36579470,
            36579595,
            36579916
        ]
    },
    "name": "E. Contact ATC",
    "statement": "Arkady the air traffic controller is now working with planes in the air.\r\nAll planes move along a straight coordinate axis with Arkady’s station\r\nbeing at point on it. The -th plane, small enough to be represented by a\r\npoint, currently has a coordinate of and is moving with speed . It’s\r\nguaranteed that , i.e., all planes are moving towards the\r\nstation.Occasionally, the planes are affected by winds. With a wind of\r\nspeed (not necessarily positive or integral), the speed of the -th plane\r\nbecomes .According to weather report, the current wind has a steady\r\nspeed falling inside the range (inclusive), but the exact value cannot\r\nbe measured accurately since this value is rather small smaller than the\r\nabsolute value of speed of any plane.Each plane should contact Arkady at\r\nthe exact moment it passes above his station. And you are to help Arkady\r\ncount the number of pairs of planes () there are such that there is a\r\npossible value of wind speed, under which planes and contact Arkady at\r\nthe same moment. This value needn’t be the same across different\r\npairs.The wind speed is the same for all planes. You may assume that the\r\nwind has a steady speed and lasts arbitrarily long.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 100010\n#define ll long long\nint x[maxn],v[maxn];\nint n,w;\nstruct P\n{\n    double a,b;\n    bool operator < (const P& c)const\n    {\n        if(a!=c.a)return a<c.a;\n        return b>c.b;\n    }\n}a[maxn];\nvector<double> V;\ndouble c[maxn];\nint d[maxn];\nint bit[maxn];\nvoid add(int x,int d)\n{\n    for(int i=x;i<=n;i+=i&-i)bit[i]+=d;\n}\nint query(int x)\n{\n    int ret=0;\n    for(int i=x;i;i-=i&-i)ret+=bit[i];\n    return ret;\n}\nmain()\n{\n    scanf(\"%d%d\",&n,&w);\n    for(int i=1;i<=n;i++)scanf(\"%d%d\",&x[i],&v[i]);\n    for(int i=1;i<=n;i++)a[i]={(double)(v[i]-w)/(double)x[i],(double)(v[i]+w)/(double)x[i]};\n    sort(a+1,a+n+1);\n    for(int i=1;i<=n;i++)c[i]=a[i].b,V.push_back(c[i]);\n    sort(V.begin(),V.end());\n    V.resize(unique(V.begin(),V.end())-V.begin());\n    for(int i=1;i<=n;i++)d[i]=lower_bound(V.begin(),V.end(),c[i])-V.begin()+1;\n    ll ans=0;\n    //for(int i=1;i<=n;i++)printf(\"%d \",d[i]);puts(\"\");\n    for(int i=1;i<=n;i++)\n    {\n        ans+=query(n-d[i]+1);\n        add(n-d[i]+1,1);\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\E. Contact ATC.json",
    "editorial_link": "https://codeforces.com//blog/entry/58544",
    "editorial": null,
    "hint": []
}