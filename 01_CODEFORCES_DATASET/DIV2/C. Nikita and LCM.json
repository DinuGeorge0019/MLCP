{
    "link": "https://codeforces.com//contest/1977/problem/C",
    "problemId": "2665943",
    "problem_idx": "C",
    "shortId": "1977C",
    "contest_number": "1977",
    "problem_submissions": {
        "E": [
            262753822,
            262767302,
            262773066,
            262777674,
            262770623,
            263031771,
            262879241,
            264157721,
            262777678,
            262818461
        ],
        "D": [
            262746020,
            262752021,
            262759316,
            262764901,
            262755194,
            262759469,
            262754791,
            262756257,
            262756747,
            262758299,
            262756876,
            262759489,
            262764620,
            263176565,
            262763419,
            262766760,
            262758943,
            262862798,
            262762983
        ],
        "C": [
            262738877,
            262741499,
            262749383,
            262755959,
            262751324,
            262744765,
            262746576,
            262745225,
            262746869,
            262742949,
            262746742,
            262750727,
            262747283,
            262749635,
            262746257,
            262754822,
            262746319,
            262748048
        ],
        "B": [
            262726958,
            262730863,
            262733935,
            262745603,
            262761343,
            262730294,
            262743622,
            262733897,
            262738963,
            262733871,
            262744047,
            262734098,
            262734002,
            262729823,
            262734056,
            262744847,
            262730762,
            262734650
        ],
        "A": [
            262718457,
            262717434,
            262719669,
            262733443,
            262738974,
            262717708,
            262717306,
            262718538,
            262718880,
            262733522,
            262717623,
            262718056,
            262717973,
            262720675,
            262720426,
            262717331,
            262720010,
            262725818
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129858",
    "editorial": "First, let's understand if we can take the entire array a\n as the special subsequence.\n\nTo do this, find the LCM(a1,a2,,an\n). If it is greater than max(a1,a2,,an\n), then obviously such a number is not in the subsequence, because LCM?max\n.\n\nAfter this check, it becomes known that each ai | max(a1,a2,,an)\n.\n\nThen we iterate over the divisors of the maximum and greedily check for the presence of a subsequence with such an LCM.\n\nIf we do this naively, it will be O(C???+n?d(C)?log(C))\n, but this is already sufficient.\n\nNote that we can count the occurrence of each number and check only the distinct numbers. Then the complexity will be O(C???+d(C)2?log(C))\n.",
    "name": "C. Nikita and LCM",
    "statement": "Nikita is a student passionate about number theory and algorithms. He\r\nfaces an interesting problem related to an array of numbers.Suppose\r\nNikita has an array of integers a of length n. He will call a\r\nsubsequence^\r\ndagger of the array if its least common multiple (LCM) is not contained\r\nin a. The LCM of an empty subsequence is equal to 0.Nikita wonders: what\r\nis the length of the longest subsequence of a? Help him answer this\r\nquestion!^\r\ndagger A sequence b is a subsequence of a if b can be obtained from a by\r\nthe deletion of several (possibly, zero or all) elements, without\r\nchanging the order of the remaining elements. For example, [5,2,3] is a\r\nsubsequence of [1,5,7,8,2,4,3].\r\n",
    "solutions": [
        "// Problem: C. Nikita and LCM// Contest: Codeforces - Codeforces Round 948 (Div. 2)// URL: https://mirror.codeforces.com/contest/1977/problem/C// Memory Limit: 256 MB// Time Limit: 2000 ms// // Powered by CP Editor (https://cpeditor.org) // Author: EnucAI#include <bits/stdc++.h> #ifdef LOCAL#include \"debug.h\"#else#define D(...) ((void)0)#endif using ll = long long;using ull = unsigned long long;using ld = long double;using vi = std::vector<int>;using pii = std::pair<int, int>; constexpr int inf = std::numeric_limits<int>::max() / 2;constexpr ll infll = std::numeric_limits<ll>::max() / 2;constexpr ld eps = 1e-8l; #define all(x) (x).begin(), (x).end()#define sz(x) ((int)((x).size()))#define rep(i, j, k) for (int i = (j); i <= (k); i++)#define per(i, j, k) for (int i = (j); i >= (k); i--)#define fi first#define se second#define mp std::make_pair#define pb push_back#define ppb pop_back#define eb emplace_back template <class X, class Y> void chkmax(X &x, const Y &y) { if (x < y) x = y; }template <class X, class Y> void chkmin(X &x, const Y &y) { if (x > y) x = y; } constexpr int maxn = 2e3 + 5; int n, a[maxn];int len, d[maxn], id[maxn];int dp[maxn][maxn];bool vis[maxn]; void work() {  std::cin >> n;  rep(i, 1, n) std::cin >> a[i];  std::sort(a + 1, a + n + 1);  bool ok = false;  rep(i, 1, n - 1) ok |= a[n] % a[i] != 0;  if (ok) {    std::cout << n << '\\n';    return;  }  len = 0;  for (int i = 1; i * i <= a[n]; i++) if (!(a[n] % i)) {    d[++len] = i;    if (i * i != a[n]) d[++len] = a[n] / i;  }  std::sort(d + 1, d + len + 1);  std::fill(vis + 1, vis + len + 1, false);  rep(i, 1, n) {    id[i] = std::lower_bound(d + 1, d + len + 1, a[i]) - d;    vis[id[i]] = true;  }  rep(i, 0, n) std::fill(dp[i] + 1, dp[i] + len + 1, -inf);  dp[0][1] = 0;  rep(i, 1, n) rep(j, 1, len) if (dp[i - 1][j] != -inf) {    chkmax(dp[i][j], dp[i - 1][j]);    int x = std::lcm(d[j], a[i]);    chkmax(dp[i][std::lower_bound(d + 1, d + len + 1, x) - d], dp[i - 1][j] + 1);  }  int ans = 0;  rep(i, 1, len) if (!vis[i]) chkmax(ans, dp[n][i]);  std::cout << ans << '\\n';} int main() {  std::cin.tie(nullptr)->sync_with_stdio(false);  int t;  std::cin >> t;  while (t--) work();}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "sortings"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Nikita and LCM.json",
    "hint": []
}