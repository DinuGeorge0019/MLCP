{
    "link": "https://codeforces.com//contest/922/problem/B",
    "problemId": "154239",
    "problem_idx": "B",
    "shortId": "922B",
    "contest_number": "922",
    "problem_submissions": {
        "F": [
            35024389,
            35030878,
            35066050
        ],
        "E": [
            35021772,
            35023531,
            35025088,
            35031161,
            35025975,
            35029014,
            35026988,
            35021941,
            35026997,
            35064591,
            35064474,
            35026191,
            35037602,
            35037396,
            35027845
        ],
        "A": [
            35014429,
            35006326,
            35014914,
            35006731,
            35022340,
            35006627,
            35016513,
            35027286,
            35015985,
            35019424,
            35007052,
            35007949,
            35037576,
            35006680
        ],
        "C": [
            35013242,
            35014688,
            35008675,
            35009771,
            35021848,
            35009735,
            35022809,
            35015286,
            35020018,
            35017726,
            35013353,
            35014808,
            35011448,
            35018270,
            35015187,
            35037555,
            35037421,
            35021338,
            35014321
        ],
        "D": [
            35011345,
            35017477,
            35010376,
            35021949,
            35015604,
            35013771,
            35027504,
            35020183,
            35031518,
            35015008,
            35019185,
            35023414,
            35018029,
            35028830,
            35018141,
            35037411,
            35026479,
            35021278
        ],
        "B": [
            35007623,
            35008516,
            35007719,
            35008074,
            35008746,
            35007399,
            35009873,
            35009915,
            35012055,
            35007990,
            35009015,
            35007912,
            35008304,
            35009458,
            35010175,
            35037430,
            35007761,
            35008509
        ]
    },
    "name": "B. Magic Forest",
    "statement": "Imp is in a magic forest, where xorangles grow (wut?) A xorangle of\r\norder is such a non-degenerate triangle, that lengths of its sides are\r\nintegers not exceeding , and the xor-sum of the lengths is equal to\r\nzero. Imp has to count the number of distinct xorangles of order to get\r\nout of the forest. Formally, for a given integer you have to find the\r\nnumber of such triples , that: ; , where denotes the bitwise xor of\r\nintegers and . form a non-degenerate (with strictly positive area)\r\ntriangle.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\n#define F first\n#define S second\n\nconst int MAXN = 2500 + 10;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint ans = 0;\n\tfor (int a = 1; a <= n; a++)\n\t\tfor (int b = a; b <= n; b++){\n\t\t\tint c = a^b;\n\t\t\tif (c < b || c > n) continue;\n\t\t\tif (a+b > c)\n\t\t\t\tans++;\n\t\t}\n\tcout << ans << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Magic Forest.json",
    "editorial_link": "https://codeforces.com//blog/entry/57605",
    "editorial": "Consider some triple for which holds. Due to xor invertibility, we can\r\nsee that . So, we only need to iterate through two of three possible\r\nsides of the xorangle as the third can be deduced uniquely. One could\r\nalso apply some constant optimizations (and put some pragmas) get\r\nsolution with small constant accepted.\r\n"
}