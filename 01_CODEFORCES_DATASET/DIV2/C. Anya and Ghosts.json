{
    "link": "https://codeforces.com//contest/508/problem/C",
    "problemId": "21345",
    "problem_idx": "C",
    "shortId": "508C",
    "contest_number": "508",
    "problem_submissions": {
        "E": [
            9587610,
            9584813,
            9586421,
            9585135,
            9583814,
            9589053,
            9587449,
            9586484,
            9589963,
            9588638,
            9584850,
            9589523,
            9582441,
            9590322,
            9588666,
            9583017,
            9590629,
            9606435
        ],
        "D": [
            9585269,
            9592984,
            9592880,
            9606979,
            11955537,
            9597174,
            9607981,
            9591160
        ],
        "C": [
            9578155,
            9579052,
            9580254,
            9581709,
            9579236,
            9581849,
            9584375,
            9581929,
            9580398,
            9580036,
            9584567,
            9580689,
            9584970,
            9588863,
            9584808,
            9582586,
            9578299,
            9582444,
            9584975
        ],
        "B": [
            9575657,
            9576658,
            9575398,
            9576129,
            9576184,
            9577421,
            9578063,
            9577484,
            9575841,
            9575521,
            9580057,
            9577021,
            9576342,
            9586515,
            9578539,
            9578428,
            9577881,
            9580472
        ],
        "A": [
            9574439,
            9574503,
            9577415,
            9574774,
            9577057,
            9574902,
            9574502,
            9574812,
            9574701,
            9574474,
            9574846,
            9581748,
            9574597,
            9585159,
            9575359,
            9590306,
            9574725,
            9575399,
            9578528
        ]
    },
    "name": "C. Anya and Ghosts",
    "statement": "Anya loves to watch horror movies. In the best traditions of horror, she\r\nwill be visited by ghosts tonight. Anya has lots of candles prepared for\r\nthe visits, each candle can produce light for exactly seconds. It takes\r\nthe girl one second to light one candle. More formally, Anya can spend\r\none second to light one candle, then this candle burns for exactly\r\nseconds and then goes out and can no longer be used.For each of the\r\nghosts Anya knows the time at which it comes: the -th visit will happen\r\nseconds after midnight, all ’s are distinct. Each visit lasts exactly\r\none second.What is the minimum number of candles Anya should use so that\r\nduring each visit, at least candles are burning? Anya can start to light\r\na candle at any time that is integer number of seconds from midnight,\r\npossibly, at the time before midnight.\r\n",
    "solutions": [
        "#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nint main() {\n#ifdef HOME\n    freopen(\"input.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n#else\n\n#endif\n\n    int m, t, r;\n    cin >> m >> t >> r;\n\n    char used[5000];\n\n    memset(used, 0, sizeof(used));\n\n    int ans = 0;\n\n    char * p = used + 2500;\n\n    for (int i = 0; i < m; ++i) {\n        int pos;\n        cin >> pos;\n\n        int s = 0;\n\n        for (int j = 1; j <= t; ++j) {\n            s += p[pos - j];\n        }\n\n        for (int j = 1; j <= t && s < r; ++j) {\n            if (!p[pos - j]) {\n                ++s;\n                ++ans;\n                p[pos - j] = 1;\n            }\n        }\n\n        if (s < r) {\n            cout << \"-1\\n\";\n            return 0;\n        }\n    }\n\n    cout << ans << \"\\n\";\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\C. Anya and Ghosts.json",
    "editorial_link": "https://codeforces.com/blog/entry/16048?locale=en",
    "editorial": "This problem can be solved with help of greedy algorithm. Let's iterate on moments when ghosts will appears.\n\nWe need to use use array, in wich we will mark moments of time, in wich we lighted candles (for example, put in corresponding positions 1). Than for every new ghost will count how many candles lights in time of his visit from our array.\n\nIf ghost appears in moment of time wi, iterate on out array from wi?-?1 to wi?-?t, where t  count of seconds, which candle burns, and count the number of ones. If this count is not less than r, continue iterating on ghosts. Else, iterate on our array from wi?-?1 to wi?-?t, and, if in current second candle didn't lighted  make it, and put in this position in array 1. We need to do such operation, while count of ones in this section of our array will not be equals to r. If we can't do this fore some ghost, we can print ?-?1.\n\nAnswer to this problem  count of ones in our array. Asymptotic behavior of this solution  O(mt), where m  count of ghosts, t  the duration of a candle's burning.",
    "hint": []
}