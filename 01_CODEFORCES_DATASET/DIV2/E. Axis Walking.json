{"link": "https://codeforces.com//contest/327/problem/E", "problemId": "3287", "problem_idx": "E", "shortId": "327E", "contest_number": "327", "problem_submissions": {"E": [4017313, 4017507, 4018772, 4017910, 4019268, 4023331, 4015900, 4017838, 4016759, 4027441, 4022024, 4019276], "C": [4014970, 4014797, 4014725, 4014945, 4015808, 4013334, 4014670, 4013527, 4014594, 4014368, 4014192, 4014033, 4014334, 4014505, 4015890, 4015156, 4015704], "D": [4014693, 4016265, 4015556, 4017918, 4018611, 4017193, 4015911, 4016489, 4016642, 4016033, 4016317, 4016734, 4016607, 4017683, 4017510], "A": [4012718, 4011428, 4014213, 4012212, 4011845, 4011264, 4011546, 4011299, 4011577, 4011527, 4011323, 4011508, 4011858, 4011904, 4011582, 4012111, 4011772], "B": [4011621, 4012593, 4012805, 4012674, 4012463, 4011873, 4012480, 4011682, 4012186, 4012474, 4011938, 4011986, 4012535, 4012626, 4012279, 4012988, 4012431]}, "name": "E. Axis Walking", "statement": "Iahub wants to meet his girlfriend Iahubina. They both live in axis (the\r\nhorizontal axis). Iahub lives at point 0 and Iahubina at point .Iahub\r\nhas positive integers , , ..., . The sum of those numbers is . Suppose ,\r\n, ..., is a permutation of . Then, let , and so on. The array b is\r\ncalled a \"route\". There are different routes, one for each permutation\r\n.Iahub\u2019s travel schedule is: he walks steps on axis, then he makes a\r\nbreak in point . Then, he walks more steps on axis and makes a break in\r\npoint . Similarly, at -th time he walks more steps on axis and makes a\r\nbreak in point .Iahub is very superstitious and has integers which give\r\nhim bad luck. He calls a route \"good\" if he never makes a break in a\r\npoint corresponding to one of those numbers. For his own curiosity,\r\nanswer how many good routes he can make, modulo ().\r\n", "solutions": ["#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<time.h>\n#include<math.h>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define N 24\n#define P 1000000007\nint a[N],b[N],n,k;\nlong long d[1<<N];int A[1<<N];\nlong long f[1<<N];\nint main()\n{\n\t//freopen(\"E.in\",\"r\",stdin);\n\t//freopen(\"E.out\",\"w\",stdout);\n\tint t1=clock();\n\tscanf(\"%d\",&n);for (int i=0;i<n;++i)scanf(\"%d\",&a[i]),A[1<<i]=a[i];\n\tscanf(\"%d\",&k);for (int i=0;i<k;++i)scanf(\"%d\",&b[i]);for (int i=k;i<=3;++i)b[i]=-1;\n\tfor (int i=1;i<(1<<n);++i)d[i]=d[i-(i&-i)]+A[i&-i];\n\tf[0]=1;\n\tfor (int i=0;i<(1<<n);++i)if (d[i]!=b[0]&&d[i]!=b[1]&&d[i]!=b[2]){\n\t\t//printf(\"%d %d %d\\n\",i,d[i],f[i]);\n\t\tf[i]%=P;\n\t\tfor (int jj=((1<<n)-1)^i;jj;jj-=jj&-jj)f[i+(jj&-jj)]+=f[i];\n\t}\n\tif (d[(1<<n)-1]==b[0]||d[(1<<n)-1]==b[1]||d[(1<<n)-1]==b[2])f[(1<<n)-1]=0;\n\tprintf(\"%d\\n\",int(f[(1<<n)-1]%P));\n\t//printf(\"time=%d\\n\",clock()-t1);\n\t//system(\"pause\");for (;;);\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "meet-in-the-middle"], "dificulty": "2300", "interactive": false}