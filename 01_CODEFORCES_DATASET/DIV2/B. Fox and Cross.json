{"link": "https://codeforces.com//contest/389/problem/B", "problemId": "6401", "problem_idx": "B", "shortId": "389B", "contest_number": "389", "problem_submissions": {"E": [5882910, 5882969, 5882623, 5886206, 5886237, 5881359, 5883942, 5881790, 5884306, 5884558, 5884891, 5884833, 5884246, 5880945, 5884605, 5886580, 5885214], "D": [5882237, 5881458, 5884902, 5885057, 5884493, 5888919, 5897772, 5897726, 49394197, 5884093], "C": [5876164, 5877416, 5877602, 5880188, 5879512, 5878436, 5876090, 5875802, 5879892, 5879347, 5879938, 5880138, 5877698, 5882032, 5878167, 5879899, 5881858, 5880866, 5879314], "B": [5874987, 5875378, 5875703, 5877586, 5879904, 5875848, 5877618, 5882807, 5877301, 5876662, 5877573, 5877789, 5875543, 5877904, 5887635, 5878765, 5877214, 5882962], "A": [5874673, 5874703, 5875132, 5876405, 5874775, 5878441, 5882215, 5875954, 5875157, 5875352, 5876029, 5874692, 5875210, 5881846, 5875551, 5874698, 5879937]}, "name": "B. Fox and Cross", "statement": "Fox Ciel has a board with rows and columns. So, the board consists of\r\ncells. Each cell contains either a symbol \u201d, or a symbol \u201d.A cross on\r\nthe board is a connected set of exactly five cells of the board that\r\nlooks like a cross. The picture below shows how it looks.Ciel wants to\r\ndraw several (may be zero) crosses on the board. Each cross must cover\r\nexactly five cells with symbols \u201d, and any cell with symbol \u201d must\r\nbelong to some cross. No two crosses can share a cell.Please, tell Ciel\r\nif she can draw the crosses in the described way.\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; i++)\n#define FORD(i,a,b) for(int i=(a),_b=(b); i>=_b; i--)\n#define REP(i,a) for(int i=0,_a=(a); i<_a; i++)\n\n#define DEBUG(x) { cout << #x << \" = \"; cout << x << endl; }\n#define PR(a,n) { cout << #a << \" = \"; FOR(_,1,n) cout << a[_] << ' '; cout << endl; }\n#define PR0(a,n) { cout << #a << \" = \"; REP(_,n) cout << a[_] << ' '; cout << endl; }\nusing namespace std;\n\nchar a[111][111];\n\nint main() {\n    ios :: sync_with_stdio(false);\n    int n;\n    while (cin >> n) {\n        FOR(i,1,n) FOR(j,1,n) cin >> a[i][j];\n\n        bool good = true;\n        FOR(i,1,n) FOR(j,1,n) if (a[i][j] == '#') {\n            if (a[i+1][j-1] == '#' && a[i+1][j] == '#' && a[i+1][j+1] == '#' && a[i+2][j] == '#') {\n                a[i+1][j-1] = a[i+1][j] = a[i+1][j+1] = a[i+2][j] = '.';\n            }\n            else good = false;\n        }\n        if (good) puts(\"YES\"); else puts(\"NO\");\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "1100", "interactive": false}