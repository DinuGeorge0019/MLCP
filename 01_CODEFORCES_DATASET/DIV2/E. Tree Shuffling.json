{"link": "https://codeforces.com//contest/1363/problem/E", "problemId": "636627", "problem_idx": "E", "shortId": "1363E", "contest_number": "1363", "problem_submissions": {"F": [82106115, 82133417, 82134663, 82148859, 82187672, 82151422, 82129291], "B": [82089340, 82061810, 82102257, 82051813, 82052193, 82054432, 82059773, 82050390, 82052570, 82057688, 82062819, 82061181, 82063108, 82056815, 82052221, 82048933, 82053424, 82060016], "E": [82084929, 82115560, 82118841, 82083744, 82094219, 82095201, 82085310, 82078785, 82104191, 82087813, 82091268, 82109972, 82093877, 82089726, 82112505, 82091430, 82097365, 82091233], "D": [82073363, 82098128, 82116891, 82105976, 82086712, 82108911, 82113962, 82100776, 82093305, 82115209, 82090000, 82113643, 82117922, 82095216, 82114310, 82120048, 82118359], "C": [82058814, 82072569, 82099263, 82066157, 82070197, 82067166, 82068534, 82108126, 82064962, 82108652, 82074021, 82067732, 82075440, 82064472, 82071898, 82069396, 82075513, 82072756], "A": [82051846, 82136588, 82081640, 82048308, 82048940, 82048236, 82052695, 82047806, 82048669, 82057495, 82055772, 82048991, 82055132, 82048772, 82048248, 82057801, 82048473, 82052285]}, "name": "E. Tree Shuffling", "statement": "Ashish has a tree consisting of n nodes numbered 1 to n rooted at\r\nnode 1. The i-th node in the tree has a cost a_i, and binary digit b_i\r\nis written in it. He wants to have binary digit c_i written in the i-th\r\nnode in the end.To achieve this, he can perform the following operation\r\nany number of times: Select any k nodes from the subtree of any node u,\r\nand shuffle the digits in these nodes as he wishes, incurring a cost of\r\nk\r\ncdot a_u. Here, he can choose k ranging from 1 to the size of the\r\nsubtree of u. He wants to perform the operations in such a way that\r\nevery node finally has the digit corresponding to its target.Help him\r\nfind the minimum total cost he needs to spend so that after all the\r\noperations, every node u has digit c_u written in it, or determine that\r\nit is impossible.\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define pb push_back\n#define F first\n#define S second\n#define all(x) x.begin(), x.end()\n#define debug(x) cerr << #x << \" : \" << x << '\\n'\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef string str;\ntypedef pair<ll, ll> pll;\n\nconst ll Mod = 1000000007LL;\nconst int N = 2e5 + 10;\nconst ll Inf = 2242545357980376863LL;\nconst ll Log = 30;\n\nll a[N], b[N], c[N];\nll ans;\nvector<int> G[N];\npll DFS(ll u, ll p, ll v){\n\tpll res = {0, 0};\n\tif(b[u] != c[u]){\n\t\tif(b[u]) res.S = 1;\n\t\telse res.F = 1;\n\t}\n\tpll rs;\n\tfor(auto adj : G[u]){\n\t\tif(adj == p) continue;\n\t\trs = DFS(adj, u, min(v, a[adj]));\n\t\tres.F += rs.F;\n\t\tres.S += rs.S;\n\t}\n\tll d = min(res.F, res.S);\n\tans += 2*d*v;\n\tres.F -= d;\n\tres.S -= d;\n\treturn res;\n}\nint main(){\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tll n;\n\tcin >> n;\n\tll S = 0;\n\tfor(int i = 1; i <= n; i++){\n\t\tcin >> a[i] >> b[i] >> c[i];\n\t\tS += b[i];\n\t\tS -= c[i];\n\t}\n\tif(S != 0) return cout << -1, 0;\n\tint u, v;\n\tfor(int i = 1; i < n; i++){\n\t\tcin >> u >> v;\n\t\tG[u].pb(v);\n\t\tG[v].pb(u);\n\t}\n\tDFS(1, -1, a[1]);\n\tcout << ans << '\\n';\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dfs and similar", "dp", "greedy", "trees"], "dificulty": "2000", "interactive": false}