{
    "link": "https://codeforces.com//contest/1040/problem/B",
    "problemId": "215706",
    "problem_idx": "B",
    "shortId": "1040B",
    "contest_number": "1040",
    "problem_submissions": {
        "C": [
            42525959,
            42516403,
            42520218,
            42509951
        ],
        "E": [
            42518563,
            42515513,
            42516608,
            42523906,
            42523822,
            42524914,
            42516929,
            42524932,
            42514503,
            42511196,
            42518320,
            42524442,
            42528537
        ],
        "B": [
            42514292,
            42503342,
            42502589,
            42503781,
            42507515,
            42504172,
            42504545,
            42506438,
            42505683,
            42503118,
            42546497,
            42508433,
            42507210,
            42502341,
            42521565,
            42507357,
            42501900,
            42505960,
            42504857
        ],
        "A": [
            42508408,
            42500521,
            42500426,
            42504655,
            42500575,
            42500946,
            42519886,
            42500455,
            42501027,
            42501547,
            42500337,
            42501761,
            42500387,
            42500370,
            42517380,
            42500340,
            42502900,
            42500738,
            42500745
        ],
        "D": [
            42506377,
            42520704,
            42524366,
            42520672,
            42517604,
            42513292,
            42525930,
            42524271,
            42524410,
            42522170,
            42511068,
            42514990,
            42523580,
            42531287,
            42513155
        ]
    },
    "name": "B. Shashlik Cooking",
    "statement": "Long story short, shashlik is Miroslav\u2019s favorite food. Shashlik is\r\nprepared on several skewers simultaneously. There are two states for\r\neach skewer: initial and turned over.This time Miroslav laid out n\r\nskewers parallel to each other, and enumerated them with consecutive\r\nintegers from 1 to n in order from left to right. For better cooking, he\r\nputs them quite close to each other, so when he turns skewer number i,\r\nit leads to turning k closest skewers from each side of the skewer i,\r\nthat is, skewers number i - k, i - k + 1, ..., i - 1, i + 1, ..., i +\r\nk - 1, i + k (if they exist). For example, let n = 6 and k = 1. When\r\nMiroslav turns skewer number 3, then skewers with numbers 2, 3, and 4\r\nwill come up turned over. If after that he turns skewer number 1, then\r\nskewers number 1, 3, and 4 will be turned over, while skewer number 2\r\nwill be in the initial position (because it is turned again).As we said\r\nbefore, the art of cooking requires perfect timing, so Miroslav wants to\r\nturn over all n skewers with the minimal possible number of actions. For\r\nexample, for the above example n = 6 and k = 1, two turnings are\r\nsufficient: he can turn over skewers number 2 and 5.Help Miroslav turn\r\nover all n skewers.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n, k, r, idx;\nvector<int> V;\n\nint main() {\n    scanf(\"%d%d\",&n,&k);\n    r = n % (2 * k + 1);\n    if(r == 0) r += (2 * k + 1);\n    if(n <= 2 * k + 1) {\n        puts(\"1\");\n        printf(\"%d\\n\",min(n, k + 1));\n        return 0;\n    }\n    else if(r < k + 1) idx = 1;\n    else idx = k + 1;\n    for(; idx <= n ; idx += (2 * k + 1)) V.push_back(idx);\n    printf(\"%d\\n\",V.size());\n    for(auto i : V) printf(\"%d \",i);\n    puts(\"\");\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Shashlik Cooking.json",
    "editorial_link": "https://codeforces.com//blog/entry/61668",
    "editorial": "The funny thing about this problem that it is entirely based on real\r\nfacts, in the real life the was equal to and one skewer really turned\r\ntwo more.So it is easy to see, that answer is at least (because in\r\nsmaller number of operations we wouldn\u00e2\u0080\u0099t simply able to touch all\r\nskewers), where the denotes rounding up.Set\u00e2\u0080\u0099s build an answer with\r\nexactly this number of operations. We will make our answer in such way,\r\nthat each skewer belongs exactly to one operation. That is, we need to\r\nput segments of length over the array, such that the ends are touching\r\nand that the first and last segments don\u00e2\u0080\u0099t pop out of the array too\r\nmuch.Let\u00e2\u0080\u0099s define , , .Note that and .Let\u00e2\u0080\u0099s make segments described\r\nabove in such way, that the first segments outweighs over the array\r\nexactly by and the last one exactly by .Since it follows, that the\r\ncentre of this segments stays inside the array.Some example: , , , , The\r\nanswer is then as in follows: , where denotes skewer, and one block of\r\nsquare brackets corresponds to one operation.\r\n"
}