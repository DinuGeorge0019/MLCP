{
    "link": "https://codeforces.com//contest/1758/problem/B",
    "problemId": "1661249",
    "problem_idx": "B",
    "shortId": "1758B",
    "contest_number": "1758",
    "problem_submissions": {
        "F": [
            182540191,
            182568321
        ],
        "E": [
            182511822,
            182586636,
            182586387,
            182515621,
            182519585,
            182518611,
            182521484,
            182522469,
            182521201,
            182526835,
            182524445,
            182531747,
            182527370,
            182535662,
            182516659,
            182531389,
            182540195,
            182534906,
            182535704,
            182534874,
            182530934
        ],
        "D": [
            182500138,
            182501532,
            182504442,
            182507521,
            182511731,
            182494704,
            182508383,
            182512302,
            182512544,
            182503927,
            182510854,
            182528079,
            182501802,
            182493856,
            182514498,
            182506950,
            182513404,
            182511217,
            182525174,
            182492321
        ],
        "C": [
            182492468,
            182496509,
            182492305,
            182495507,
            182494119,
            182500722,
            182502459,
            182500806,
            182500441,
            182492103,
            182505245,
            182496553,
            182526899,
            182500230,
            182495864,
            182508565,
            182493170,
            182498448,
            182538442
        ],
        "B": [
            182487714,
            182492898,
            182486562,
            182485510,
            182487169,
            182486096,
            182487229,
            182491179,
            182486630,
            182482943,
            182485521,
            182488443,
            182519764,
            182489830,
            182487145,
            182487987,
            182502412,
            182487085,
            182484646
        ],
        "A": [
            182480951,
            182480859,
            182482976,
            182480629,
            182480620,
            182481772,
            182483562,
            182480441,
            182483772,
            182479955,
            182480275,
            182480273,
            182517991,
            182490014,
            182483571,
            182480580,
            182480710,
            182480601,
            182480454
        ]
    },
    "name": "B. XOR = Average",
    "statement": "You are given an integer n. Find a sequence of n integers a_1, a_2,\r\ndots, a_n such that 1\r\nleq a_i\r\nleq 10^9 for all i and a_1\r\noplus a_2\r\noplus\r\ndots\r\noplus a_n =\r\nfrac{a_1 + a_2 +\r\ndots + a_n}{n}, where\r\noplus represents the bitwise XOR.It can be proven that there exists a\r\nsequence of integers that satisfies all the conditions above.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define I inline int\n#define V inline void\n#define ll long long int\n#define isnum(ch) ('0'<=ch&&ch<='9')\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\n#define REP(u) for(int i=h[u],v;v=e[i].t,i;i=e[i].n)\n#define gc (_op==_ed&&(_ed=(_op=_buf)+fread(_buf,1,100000,stdin),_op==_ed)?EOF:*_op++)\nchar _buf[100000],*_op(_buf),*_ed(_buf);\nI getint(){\n\tint _s=0,_f=1;char _ch=gc;\n\twhile(!isnum(_ch))(_ch=='-')&&(_f=-1),_ch=gc;\n\twhile(isnum(_ch))_s=_s*10+_ch-48,_ch=gc;\n\treturn _s*_f;\n}\nconst int N=2e5+1,mod=998244353;\nV check(int&x){x-=mod,x+=x>>31&mod;}\nV cmax(int&x,int y){if(x-y>>31)x=y;}\nV cmin(int&x,int y){if(y-x>>31)x=y;}\nint T,n,a[N];\nchar str[N];\nV input(){\n\t// 1 3 = 2 \n\t//\t\n\tn = getint();\n\tif(n%2 == 0){\n\t\tcout<<\"1 3 \";\n\t\tn -=2;\n\t}\n\twhile(n--)\n\t\tcout<<\"2 \";\n\tcout<<'\\n';\n}\nV init(){\n\t\n}\nV work(){\n\t\n}\nint main(){\n\t// freopen(\"test.in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tfor(scanf(\"%d\",&T);T--;){\n\t\tinput();\n\t\tinit();\n\t\twork();\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. XOR = Average.json",
    "editorial_link": "https://codeforces.com//blog/entry/109438",
    "editorial": "Let us consider the cases when is odd and when its even. is odd: We can\r\nsee that printing will lead to an average of and an XOR of (since ).\r\nSimilarly, you could print any integer times to pass this case. is even:\r\nWe use a slight modification of the solution for odd here. Instead of\r\nprinting the same number times, we print . Both the XOR and the average\r\nof and are . Therefore the average of the total sequence remains , and\r\nthe XOR of the whole sequence is also . Note that there are other\r\npossible solutions, but the simplest one is described here.\r\n"
}