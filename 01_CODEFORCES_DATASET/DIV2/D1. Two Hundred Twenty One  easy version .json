{"link": "https://codeforces.com//contest/1562/problem/D1", "problemId": "1090690", "problem_idx": "D1", "shortId": "1562D1", "contest_number": "1562", "problem_submissions": {"D1": [127110573, 127085719, 127084796, 127084014, 127082028, 127085521, 127097411, 127086825, 127084098, 127152628, 127086357, 127091256, 127089578, 127094935, 127087378, 127145842, 127096913, 127085638, 127093081, 127092946, 127097887], "C": [127103744, 127070687, 127073196, 127078874, 127072653, 127077271, 127080224, 127080082, 127076281, 127152605, 127080001, 127084225, 127080395, 127079018, 127078269, 127145835, 127074373, 127074883, 127071594, 127080320, 127084605], "F": [127097089, 127135208, 127161728, 127161600, 127229394, 127157826, 127137600, 127137538], "B": [127076926, 127064047, 127067878, 127063714, 127064849, 127070358, 127068285, 127074157, 127067634, 127152598, 127071567, 127066882, 127070574, 127066706, 127070386, 127145825, 127065946, 127063213, 127065381, 127068953, 127075580], "E": [127072906, 127104112, 127107000, 127110960, 127115711, 127114212, 127106853, 127106260, 127114534, 127115452, 127152643, 127119064, 127113726, 127111252, 127120883, 127122598, 127145862, 127118199, 127123949, 127112032, 127125984, 127116259], "A": [127058831, 127058219, 127058722, 127058582, 127058274, 127060830, 127061981, 127062185, 127059322, 127061493, 127152592, 127059028, 127058289, 127059753, 127058370, 127060017, 127145811, 127058384, 127058502, 127058367, 127058839, 127058595], "D2": [127087276, 127093820, 127092460, 127093109, 127096811, 127100821, 127112348, 127097441, 127096385, 127152634, 127098403, 127095759, 127102138, 127094867, 127102605, 127145854, 127108326, 127092734, 127119011, 127100809, 127104819]}, "name": "D1. Two Hundred Twenty One  easy version ", "statement": "Stitch likes experimenting with different machines with his friend\r\nSparky. Today they built another machine.The main element of this\r\nmachine are n rods arranged along one straight line and numbered from 1\r\nto n inclusive. Each of these rods must carry an electric charge\r\nquantitatively equal to either 1 or -1 (otherwise the machine will not\r\nwork). Another condition for this machine to work is that the\r\nsign-variable sum of the charge on all rods must be zero.More formally,\r\nthe rods can be represented as an array of n numbers characterizing the\r\ncharge: either 1 or -1. Then the condition must hold: a_1 - a_2 + a_3 -\r\na_4 +\r\nldots = 0, or\r\nsum\r\nlimits_{i=1}^n (-1)^{i-1}\r\ncdot a_i = 0.Sparky charged all n rods with an electric current, but\r\nunfortunately it happened that the rods were not charged correctly (the\r\nsign-variable sum of the charge is not zero). The friends decided to\r\nleave only some of the rods in the machine. Sparky has q questions. In\r\nthe ith question Sparky asks: if the machine consisted only of rods with\r\nnumbers l_i to r_i inclusive, what minimal number of rods could be\r\nremoved from the machine so that the sign-variable sum of charges on the\r\nremaining ones would be zero? Perhaps the friends got something wrong,\r\nand the sign-variable sum is already zero. In that case, you don\u2019t have\r\nto remove the rods at all.If the number of rods is zero, we will assume\r\nthat the sign-variable sum of charges is zero, that is, we can always\r\nremove all rods.Help your friends and answer all of Sparky\u2019s questions!\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint t,n,m,l,r,a[300005];\nstring s;\nsigned main(){\n    ios::sync_with_stdio(false);cin.tie(0),cout.tie(0);\n    cin>>t;\n    while(t--){\n        cin>>n>>m>>s;\n        for(register int i=1;i<=n;i++)a[i]=a[i-1]+pow(-1,i-1)*(s[i-1]=='+'?1:-1);\n        while(m--){\n            cin>>l>>r;\n            if((a[r]-a[l-1])%2==0)cout<<(a[r]-a[l-1]==0?0:2)<<endl;\n            else cout<<1<<endl;\n        }\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["data structures", "dp", "math"], "dificulty": "1700", "interactive": false}