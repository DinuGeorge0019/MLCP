{"link": "https://codeforces.com//contest/907/problem/B", "problemId": "140850", "problem_idx": "B", "shortId": "907B", "contest_number": "907", "problem_submissions": {"A": [33575410, 33562373, 33540675, 33541958, 33569551, 33540657, 33540926, 33554400, 33543519, 33543455, 33545359, 33546723, 33543893, 33544746, 33541852, 33545259, 33542765, 33544738, 33545990], "E": [33569336, 33565777, 33581296, 33581269, 33579404, 33566284, 33569922, 33629468, 33568809, 33566385, 33570242, 33565403, 33570350], "D": [33565126, 33562641, 33581688, 33581260, 33565908, 33566346, 33568422, 33569754, 33570678], "C": [33549830, 33551329, 33554149, 33567015, 33549957, 33554343, 33567823, 33552808, 33554965, 33557383, 33556644, 33558626, 33561202, 33556067, 33558273, 33556336, 33558166, 33556124], "B": [33544318, 33546636, 33559945, 33562988, 33544727, 33549069, 33570043, 33548318, 33549618, 33552052, 33550884, 33550827, 33550979, 33551429, 33553199, 33549528, 33551065, 33549896], "F": [33567143, 33554423, 33558532, 40494408]}, "name": "B. Tic-Tac-Toe", "statement": "Two bears are playing tic-tac-toe via mail. It\u2019s boring for them to play\r\nusual tic-tac-toe game, so they are a playing modified version of this\r\ngame. Here are its rules.The game is played on the following field.\r\nPlayers are making moves by turns. At first move a player can put his\r\nchip in any cell of any small field. For following moves, there are some\r\nrestrictions: if during last move the opposite player put his chip to\r\ncell with coordinates in some small field, the next move should be done\r\nin one of the cells of the small field with coordinates . For example,\r\nif in the first move a player puts his chip to lower left cell of\r\ncentral field, then the second player on his next move should put his\r\nchip into some cell of lower left field (pay attention to the first test\r\ncase). If there are no free cells in the required field, the player can\r\nput his chip to any empty cell on any field.You are given current state\r\nof the game and coordinates of cell in which the last move was done. You\r\nshould find all cells in which the current player can put his chip.A\r\nhare works as a postman in the forest, he likes to foul bears. Sometimes\r\nhe changes the game field a bit, so the current state of the game could\r\nbe unreachable. However, after his changes the cell where the last move\r\nwas done is not empty. You don\u2019t need to find if the state is\r\nunreachable or not, just output possible next moves according to the\r\nrules.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define _USE_MATH_DEFINES\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef complex<ld> pt;\ntypedef vector<pt> pol;\n#define nl '\\n'\n\n///* advent of code\ntypedef istringstream iss;\n#define pb push_back\n#define ins insert\n#define multiset mset\n#define getl(A) getline(cin, A)\n//*/\n\nconst ll INF = 0x3f3f3f3f;\nconst ll MOD = 1e9+7;\nconst ld EPS = 1e-9;\n\n\n\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\n\tstring grid[3][3][3];\n\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tfor (int k = 0; k < 3; k++) {\n\t\t\t\tcin >> grid[i][k][j];\n\t\t\t}\n\t\t}\n\t}\n\n\tint a, b;\n\tcin >> a >> b;\n\n\tint gi = (a-1)%3;\n\tint gj = (b-1)%3;\n\n\tbool shit = true;\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tif (grid[gi][gj][i][j] == '.')\n\t\t\t\tshit = false;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < 3; i++) {\n\t\tfor (int j = 0; j < 3; j++) {\n\t\t\tfor (int k = 0; k < 3; k++) {\n\t\t\t\tif (shit || i == gi && k == gj) {\n\t\t\t\t\tfor (int l = 0; l < 3; l++) {\n\t\t\t\t\t\tif (grid[i][k][j][l] == '.')\n\t\t\t\t\t\t\tcout << \"!\";\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcout << grid[i][k][j][l];\n\t\t\t\t\t}\n\t\t\t\t\tcout << \" \";\n\t\t\t\t} else {\n\t\t\t\t\tcout << grid[i][k][j] << \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << nl;\n\t\t}\n\t\tcout << nl;\n\t}\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1400", "interactive": false}