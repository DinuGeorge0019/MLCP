{
    "link": "https://codeforces.com//contest/1561/problem/B",
    "problemId": "1088958",
    "problem_idx": "B",
    "shortId": "1561B",
    "contest_number": "1561",
    "problem_submissions": {
        "F": [
            126904536,
            126901655,
            126903407,
            126897889,
            126905462,
            126895857,
            126909746,
            126868411
        ],
        "E": [
            126872829,
            126873450,
            126873472,
            126876837,
            126887119,
            126925237,
            126873365,
            126880329,
            126880730,
            126881569,
            126878334,
            126883106,
            126884943,
            126885452,
            126887344,
            126884906,
            126885650,
            126888199,
            126863450
        ],
        "C": [
            126869012,
            126865542,
            126864086,
            126863127,
            126863122,
            126861060,
            126868974,
            126853568,
            126857674,
            126857569,
            126854957,
            126857844,
            126858666,
            126860889,
            126860513,
            126857734,
            126864125,
            126867660,
            126866693
        ],
        "D1": [
            126861759,
            126863688,
            126864717,
            126869692,
            126872900,
            126868199,
            126862491,
            126866683,
            126868762,
            126864055,
            126863339,
            126863270,
            126867571,
            126865653,
            126863522,
            126870959,
            126872615,
            126860538,
            126862556
        ],
        "D2": [
            126861568,
            126863750,
            126868373,
            126869562,
            126876457,
            126868351,
            126862413,
            126873746,
            126868674,
            126867473,
            126864201,
            126863508,
            126868989,
            126866379,
            126880112,
            126871782,
            126872752,
            126861102,
            126877754
        ],
        "B": [
            126856962,
            126852931,
            126853927,
            126857335,
            126862047,
            126855473,
            126854073,
            126848963,
            126854204,
            126852816,
            126866896,
            126854673,
            126855023,
            126857298,
            126855876,
            126863677,
            126859086,
            126871391,
            126876744
        ],
        "A": [
            126847903,
            126848403,
            126847412,
            126849843,
            126849112,
            126848036,
            126848332,
            126847281,
            126847584,
            126847566,
            126847516,
            126847717,
            126847410,
            126847430,
            126850448,
            126848322,
            126849200,
            126856163,
            126853136
        ]
    },
    "name": "B. Charmed by the Game",
    "statement": "Alice and Borys are playing tennis.A tennis match consists of . In each\r\ngame, one of the players is and the other one is .Players serve in\r\nturns: after a game where Alice is serving follows a game where Borys is\r\nserving, and vice versa.Each game ends with a victory of one of the\r\nplayers. If a game is won by the serving player, it\u2019s said that this\r\nplayer . If a game is won by the receiving player, it\u2019s said that this\r\nplayer .It is known that Alice won a games and Borys won b games during\r\nthe match. It is unknown who served first and who won which games.Find\r\nall values of k such that exactly k breaks could happen during the match\r\nbetween Alice and Borys in total.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\nint n,s[200005],A,B,a,b;\nint Abs(int x){return x>0?x:-x;}\nbool check(int x)\n{\n\tint dist=max(Abs(A-a),Abs(B-b));\n\tif(x<dist)\treturn false;\n\tif(x>dist+min(a,b)*2)\treturn false;\n\treturn (x-dist)%2==0;\n}\nvoid Solve()\n{\n\tscanf(\"%d %d\",&a,&b);\n\tn=a+b;\n\tvector<int> Ans;\n\tA=n/2,B=n-A;\n\tfor(int i=0;i<=n;++i)\tif(check(i))\tAns.push_back(i);\n\tswap(A,B);\n\tfor(int i=0;i<=n;++i)\tif(check(i))\tAns.push_back(i);\n\tsort(Ans.begin(),Ans.end());\n\tAns.erase(unique(Ans.begin(),Ans.end()),Ans.end());\n\tprintf(\"%d\\n\",int(Ans.size()));\n\tfor(auto st:Ans)\tprintf(\"%d \",st);\n\tputs(\"\");\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T-->0)\tSolve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV2\\B. Charmed by the Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/94216",
    "editorial": "First of all, we don't know who served first, but there are only two options, so let's just try both and unite the sets of k\n's we get.\n\nAssume that Alice served first. Exactly a+b\n games were played. If a+b\n is even, both players served exactly a+b2\n times, and if a+b\n is odd, Alice served one more time than Borys.\n\nThe simplest way to consider both cases is to say that Alice served p=?a+b2?\n times, and Borys served q=?a+b2?\n times (?t?\n denotes rounding up, and ?t?\n denotes rounding down).\n\nLet x\n be the number of times Borys broke Alice's serve (0?x?p\n), and let y\n be the number of times Alice broke Borys' serve (0?y?q\n).\n\nIn this case, the number of games Alice won is a=(p?x)+y\n, and the number of games Borys won is b=x+(q?y)\n.\n\nWe know neither x\n nor y\n, but let's loop over x=0\u0085p\n. From a=(p?x)+y\n, we can calculate y=a?(p?x)\n. If 0?y?q\n, the values of x\n and y\n represent a valid scenario of the match with exactly x+y\n breaks in total.\n\nThe case when Borys served first is handled similarly.\n\nAnalyzing the formulas further, we can find a \"closed-form\" solution:\n\nLet d=?|a?b|2?\n.\nIf a+b\n is even, all possible values of k\n are d,d+2,d+4,\u0085,a+b?d\n.\nIf a+b\n is odd, all possible values of k\n are d,d+1,d+2,\u0085,a+b?d\n."
}