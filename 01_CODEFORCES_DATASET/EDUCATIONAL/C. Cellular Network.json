{"link": "https://codeforces.com//contest/702/problem/C", "problemId": "66880", "problem_idx": "C", "shortId": "702C", "contest_number": "702", "problem_submissions": {"E": [19486872, 19487666, 19486777, 19488022, 19488501, 19486952, 19489405, 19490682, 19489522, 19488617, 19490923, 19486709, 19522484, 19490874, 19489785, 19489723, 19491945, 19490147, 19488259], "D": [19485847, 19522818, 19484850, 19484926, 19486392, 19486665, 19485668, 19486132, 19485860, 19486710, 19487180, 19486570, 19489538, 19522515, 19522418, 19486300, 19487524, 19487454, 19488567, 19487473, 19486660], "C": [19483715, 19483569, 19483475, 19484435, 19484197, 19484188, 19484516, 19484086, 19484332, 19484785, 19484582, 19484825, 19522492, 19484774, 19485083, 19485937, 19486251, 19485322, 19485133], "B": [19482582, 19482877, 19482445, 19483458, 19483246, 19482500, 19483149, 19482917, 19482947, 19483579, 19483004, 19483922, 19522499, 19483767, 19483896, 19483055, 19484158, 19483561, 19484180], "A": [19482266, 19482419, 19482207, 19482228, 19482294, 19482199, 19482499, 19482303, 19482312, 19482233, 19482288, 19482949, 19522504, 19482543, 19482505, 19484313, 19482461, 19482547, 19482286], "F": [127799040, 19527903, 19529247, 19529141, 19523290, 19514117, 19501229]}, "name": "C. Cellular Network", "statement": "You are given points on the straight line the positions (-coordinates)\r\nof the cities and points on the same line the positions (-coordinates)\r\nof the cellular towers. All towers work in the same way they provide\r\ncellular network for all cities, which are located at the distance which\r\nis no more than from this tower.Your task is to find minimal that each\r\ncity has been provided by cellular network, i.e. for each city there is\r\nat least one cellular tower at the distance which is no more than .If\r\nthen a tower provides cellular network only for the point where it is\r\nlocated. One tower can provide cellular network for any number of\r\ncities, but all these cities must be at the distance which is no more\r\nthan from this tower.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef signed long long ll;\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define FOR(x,to) for(x=0;x<(to);x++)\n#define FORR(x,arr) for(auto& x:arr)\n#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)\n#define ALL(a) (a.begin()),(a.end())\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\n//-------------------------------------------------------\n\nint N,M;\nll A[101010];\nll B[101010];\n\nvoid solve() {\n\tint i,j,k,l,r,x,y; string s;\n\t\n\tcin>>N>>M;\n\tFOR(i,N) cin>>A[i];\n\tB[0]=-1LL<<40;\n\tFOR(i,M) cin>>B[i+1];\n\tB[M+1]=1LL<<40;\n\tM+=2;\n\t\n\tll mi=0;\n\tFOR(i,N) {\n\t\tx = lower_bound(B,B+M,A[i])-B;\n\t\tmi=max(mi,min(A[i]-B[x-1],B[x]-A[i]));\n\t} \n\tcout<<mi<<endl;\n\t\n}\n\n\nint main(int argc,char** argv){\n\tstring s;int i;\n\tif(argc==1) ios::sync_with_stdio(false), cin.tie(0);\n\tFOR(i,argc-1) s+=argv[i+1],s+='\\n';\n\tFOR(i,s.size()) ungetc(s[s.size()-1-i],stdin);\n\tsolve(); return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "implementation", "two pointers"], "dificulty": "1500", "interactive": false}