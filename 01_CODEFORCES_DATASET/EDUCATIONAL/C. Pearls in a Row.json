{"link": "https://codeforces.com//contest/620/problem/C", "problemId": "45929", "problem_idx": "C", "shortId": "620C", "contest_number": "620", "problem_submissions": {"F": [15476784, 15481381, 15483385, 15501760, 15483713, 15483332, 15483269, 15486457, 110737274, 15560294, 15483002], "D": [15476004, 15475486, 15475046, 15475660, 15478283, 15474921, 15479173, 15478662, 15478888, 15480075, 15479882, 15476142, 15479569, 15476517, 15477414, 15476987, 15477430, 15481310], "E": [15473382, 15477169, 15483815, 15476430, 15478101, 15474547, 15477143, 15476019, 15475341, 15476219, 15475959, 15477453, 15479247, 15477250, 15479114, 15481223, 15479051, 15484874, 15484860, 15484177, 15484110, 15484033, 15483969, 15483912, 15483838, 15483788, 15478778, 15477351], "C": [15470876, 15472964, 15471929, 15471592, 15471646, 15471528, 15473335, 15473233, 15472403, 15472416, 15473511, 15471829, 15473844, 15472579, 15473548, 15472833, 15472615, 15472479, 15473711], "B": [15470277, 15471380, 15470857, 15470699, 15470633, 15470596, 15471005, 15471139, 15470850, 15471115, 15471308, 15470718, 15472406, 15471044, 15470836, 15471243, 15471685, 15471223], "A": [15470173, 15470408, 15470256, 15470217, 15470181, 15470174, 15470315, 15470332, 15470383, 15470351, 15470502, 15470184, 15471568, 15470376, 15470236, 15470211, 15470178, 15470460]}, "name": "C. Pearls in a Row", "statement": "There are pearls in a row. Let\u2019s enumerate them with integers from to\r\nfrom the left to the right. The pearl number has the type .Let\u2019s call a\r\nsequence of consecutive pearls a . Let\u2019s call a segment if it contains\r\ntwo pearls of the same type.Split the row of the pearls to the maximal\r\nnumber of good segments. Note that each pearl should appear in exactly\r\none segment of the partition.As input/output can reach huge size it is\r\nrecommended to use fast input/output methods: for example, prefer to use\r\ninstead of in C++, prefer to use instead of in .\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1234567;\n\nint a[N], x[N], y[N];\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", a + i);\n  }\n  set <int> used;\n  int cnt = 0;\n  int from = 0;\n  for (int i = 0; i < n; i++) {\n    if (used.find(a[i]) != used.end()) {\n      x[cnt] = from;\n      y[cnt] = i;\n      cnt++;\n      used.clear();\n      from = i + 1;\n    } else {\n      used.insert(a[i]);\n    }\n  }\n  if (cnt == 0) {\n    printf(\"%d\\n\", -1);\n    return 0;\n  }\n  y[cnt - 1] = n - 1;\n  printf(\"%d\\n\", cnt);\n  for (int i = 0; i < cnt; i++) {\n    printf(\"%d %d\\n\", 1 + x[i], 1 + y[i]);\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1500", "interactive": false}