{"link": "https://codeforces.com//contest/792/problem/E", "problemId": "100428", "problem_idx": "E", "shortId": "792E", "contest_number": "792", "problem_submissions": {"F": [25853903, 25865237], "E": [25848693, 25847349, 25847865, 25848336, 25849755, 25879304, 25850910, 25852379, 25850927, 25851533, 25846730, 25852220, 25853726, 25852467, 25850303, 25850709, 25864381, 25958829], "D": [25844822, 25845472, 25845024, 25845925, 25845207, 25846638, 25846685, 25844772, 25847053, 25844370, 25847875, 25846005, 25849330, 25846978, 25848700, 25846288, 25847259, 25846482, 25845802], "C": [25843667, 25844426, 25843057, 25844653, 25843502, 25843226, 25845206, 25847034, 25852877, 25845288, 25853718, 25845444, 25844045, 25846780, 25853037, 25847850, 25843767, 25844267, 25844868, 25843846], "B": [25841582, 25841630, 25841112, 25842707, 25841353, 25841339, 25842555, 25842111, 25842036, 25841205, 25844104, 25841963, 25843854, 25843428, 25846396, 25841879, 25841715, 25842437, 25841499], "A": [25840740, 25840467, 25840502, 25840643, 25840525, 25840508, 25840842, 25840507, 25840672, 25840477, 25843123, 25840669, 25840725, 25840826, 25845885, 25840646, 25840520, 25840707, 25840777]}, "name": "E. Colored Balls", "statement": "There are boxes with colored balls on the table. Colors are numbered\r\nfrom to . -th box contains balls, all of which have color . You have to\r\nwrite a program that will divide all balls into sets such that: each\r\nball belongs to exactly one of the sets, there are no empty sets, there\r\nis no set containing two (or more) balls of different colors (each set\r\ncontains only balls of one color), there are no two sets such that the\r\ndifference between their sizes is greater than . Print the minimum\r\npossible number of sets.\r\n", "solutions": ["#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n#define mp make_pair\n#define pb push_back\n\n\ntypedef long long ll;\ntypedef long double ld;\n\nusing namespace std;\n\n#ifndef LOCAL\n#define cerr _cer\nstruct _cert\n{\n    template <typename T> _cert& operator << (T) { return *this; }\n};\n_cert _cer;\n#endif\n\ntemplate <typename T> void dprint(T begin, T end) {\n    for (auto i = begin; i != end; i++) {\n\t\tcerr << (*i) << \" \";\n    }\n    cerr << \"\\n\";\n}\n\nint n;\nll a[600];\nvector<int> vv;\n\nint main() {\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i)\n\t\tcin >> a[i];\n\tsort(a, a + n);\n\tfor (int i = 1; i < 40000; ++i) {\n\t\tif (a[0] / i >= a[0] % i)\n\t\t\tvv.push_back(i);\n\t}\n\tfor (int i = 1; i < 40000; ++i) {\n\t\tll k = a[0] / i;\n\t\tif (k > 0 && (a[0] / k >= a[0] % k))\n\t\t\tvv.push_back(k);\n\t\tk -= 1;\n\t\tif (k > 0 && (a[0] / k >= a[0] % k))\n\t\t\tvv.push_back(k);\n\t}\n\tsort(vv.begin(), vv.end());\n\tvv.resize(unique(vv.begin(), vv.end()) - vv.begin());\n\trandom_shuffle(a, a + n);\n\tfor (int i = vv.size() - 1; i >= 0; --i) {\n\t\tint x = vv[i];\n\t\tint fl = 0;\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tif (a[j] / x < a[j] % x) {\n\t\t\t\tfl = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!fl) {\n\t\t\tll ans = 0;\n\t\t\tfor (int j = 0; j < n; ++j) {\n\t\t\t\tans += a[j] / (x + 1);\n\t\t\t\tif (a[j] % (x + 1))\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tcout << ans << \"\\n\";\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["greedy", "math", "number theory"], "dificulty": "2500", "interactive": false}