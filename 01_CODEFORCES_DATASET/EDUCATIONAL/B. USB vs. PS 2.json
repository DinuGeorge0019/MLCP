{"link": "https://codeforces.com//contest/762/problem/B", "problemId": "90123", "problem_idx": "B", "shortId": "762B", "contest_number": "762", "problem_submissions": {"F": [24128800, 24127287, 24131448, 24128833, 24128590], "E": [24122771, 24123546, 24117007, 24124444, 24127665, 24127353, 24122694, 24124867, 24128194, 24130174, 24129986, 24129967, 24127255, 24123944, 24123747, 24128463, 24126253, 24117536, 24126607], "D": [24120216, 24117937, 24120594, 24123699, 24120899, 24122923, 24125654, 24122077, 24124440, 24123437, 24124479, 24129845, 64773611, 24129570, 24127415, 24125478, 24129569, 24125183, 24124387, 24117686], "C": [24117649, 24115665, 24118684, 24120038, 24118048, 24119412, 24117040, 24153774, 24117580, 24118699, 24120548, 24119249, 24120443, 24120966, 24122719, 24122392, 24134825, 24118679], "B": [24115242, 24114275, 24114874, 24121323, 24115338, 24115218, 24114366, 24115078, 24114616, 24115065, 24117965, 24115815, 24115613, 24116743, 24116439, 24116970, 24124581, 24115154, 24114842], "A": [24113787, 24113769, 24113819, 24114373, 24113802, 24113840, 24113765, 24113864, 24113822, 24115779, 24114962, 24114446, 24113882, 24114350, 24114566, 24114001, 24114912, 24113931, 24113786]}, "name": "B. USB vs. PS 2", "statement": "Due to the increase in the number of students of Berland State\r\nUniversity it was decided to equip a new computer room. You were given\r\nthe task of buying mouses, and you have to spend as little as possible.\r\nAfter all, the country is in crisis!The computers bought for the room\r\nwere different. Some of them had only USB ports, some only PS/2 ports,\r\nand some had both options.You have found a price list of a certain\r\ncomputer shop. In it, for mouses it is specified the cost and the type\r\nof the port that is required to plug the mouse in (USB or PS/2). Each\r\nmouse from the list can be bought at most once.You want to buy some set\r\nof mouses from the given price list in such a way so that you maximize\r\nthe number of computers equipped with mouses (it is not guaranteed that\r\nyou will be able to equip all of the computers), and in case of equality\r\nof this value you want to minimize the total cost of mouses you will\r\nbuy.\r\n", "solutions": ["// eddy1021\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef double D;\ntypedef long double LD;\ntypedef long long LL;\ntypedef pair<int,int> PII;\ntypedef pair<LL,LL> PLL;\n#define mod9 1000000009LL\n#define mod7 1000000007LL\n#define INF  1023456789LL\n#define INF16 10000000000000000LL\n#define eps 1e-9\n#define SZ(x) (int)(x).size()\n#define ALL(x) (x).begin(), (x).end()\n#ifndef ONLINE_JUDGE\n#define debug(...) printf(__VA_ARGS__)\n#else \n#define debug(...)\n#endif\ninline LL getint(){\n  LL _x=0,_tmp=1; char _tc=getchar();    \n  while( (_tc<'0'||_tc>'9')&&_tc!='-' ) _tc=getchar();\n  if( _tc == '-' ) _tc=getchar() , _tmp = -1;\n  while(_tc>='0'&&_tc<='9') _x*=10,_x+=(_tc-'0'),_tc=getchar();\n  return _x*_tmp;\n}\ninline LL add( LL _x , LL _y , LL _mod = mod7 ){\n  _x += _y;\n  return _x >= _mod ? _x - _mod : _x;\n}\ninline LL sub( LL _x , LL _y , LL _mod = mod7 ){\n  _x -= _y;\n  return _x < 0 ? _x + _mod : _x;\n}\ninline LL mul( LL _x , LL _y , LL _mod = mod7 ){\n  _x *= _y;\n  return _x >= _mod ? _x % _mod : _x;\n}\nLL mypow( LL _a , LL _x , LL _mod ){\n  if( _x == 0 ) return 1LL;\n  LL _ret = mypow( mul( _a , _a , _mod ) , _x >> 1 , _mod );\n  if( _x & 1 ) _ret = mul( _ret , _a , _mod );\n  return _ret;\n}\nLL mymul( LL _a , LL _x , LL _mod ){\n  if( _x == 0 ) return 0LL;\n  LL _ret = mymul( add( _a , _a , _mod ) , _x >> 1 , _mod );\n  if( _x & 1 ) _ret = add( _ret , _a , _mod );\n  return _ret;\n}\ninline bool equal( D _x ,  D _y ){\n  return _x > _y - eps && _x < _y + eps;\n}\n#define Bye exit(0)\nint __ = 1 , _cs;\n/*********default*********/\n#define N 303030\nvoid build(){\n\n}\nint a , b , c , m;\npriority_queue<int , vector<int> , greater<int> > u , p;\nchar in[ 100 ];\nvoid init(){\n  a = getint();\n  b = getint();\n  c = getint();\n  m = getint(); while( m -- ){\n    int vl = getint();\n    fgets( in , 100 , stdin );\n    if( in[ 0 ] == 'U' )\n      u.push( vl );\n    else\n      p.push( vl );\n  }\n}\nvoid solve(){\n  int cc = 0;\n  LL aa = 0;\n  while( a && u.size() ){\n    a --;\n    cc ++;\n    aa += u.top(); u.pop();\n  }\n  while( b && p.size() ){\n    b --;\n    cc ++;\n    aa += p.top(); p.pop();\n  }\n  while( c && ( u.size() || p.size() ) ){\n    if( !u.empty() &&\n        ( p.empty() || u.top() < p.top() ) ){\n      c --;\n      cc ++;\n      aa += u.top(); u.pop();\n    }else{\n      c --;\n      cc ++;\n      aa += p.top(); p.pop();\n    }\n  }\n  printf( \"%d %lld\\n\" , cc , aa );\n}\nint main(){\n  build();\n  //__ = getint();\n  while( __ -- ){\n    init();\n    solve();\n  }\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings", "two pointers"], "dificulty": "1400", "interactive": false}