{"link": "https://codeforces.com//contest/1342/problem/E", "problemId": "604760", "problem_idx": "E", "shortId": "1342E", "contest_number": "1342", "problem_submissions": {"F": [78207467, 78205817, 78205943, 78204678, 78303371, 78242472, 78242440, 78242319, 78242310, 78242303, 78242233, 78206781, 78205447, 78186696, 78527031, 78214922, 78227172, 78226873, 78225695, 78223681, 78223297, 78309995], "E": [78177071, 78184631, 78183322, 78182599, 78180358, 78183013, 78207444, 78167441, 78172844, 78527023, 78170429, 78166909, 78409946, 78177636, 78170212, 78167446, 78169823, 78170875, 78173864, 78184907, 78181489, 78183649, 78170771, 78176771], "D": [78151939, 78159481, 78160158, 78169080, 78162112, 78191720, 78157598, 78162251, 78527016, 78158733, 78159121, 78158539, 78153238, 78158581, 78162104, 78158417, 78161220, 78159573, 78156760, 78155231, 78161242], "B": [78134011, 78131222, 78131215, 78138260, 78132277, 78189261, 78129032, 78126918, 78527008, 78133543, 78129305, 78126816, 78131103, 78132696, 78132210, 78133794, 78131695, 78131819, 78131288, 78134923, 78135996], "A": [78131888, 78126534, 78126963, 78132887, 78127318, 78126206, 78126166, 78126082, 78527005, 78128059, 78126263, 78126121, 78126742, 78126275, 78127236, 78128360, 78126590, 78126515, 78127035, 78131641, 78127186], "C": [78127633, 78147176, 78139297, 78163411, 78150308, 78144130, 78139528, 78141789, 78138222, 78527011, 78139530, 78141232, 78145910, 78135141, 78142133, 78151945, 78141231, 78149349, 78144977, 78144111, 78142843, 78144643, 78150859]}, "name": "E. Placing Rooks", "statement": "Calculate the number of ways to place n rooks on n\r\ntimes n chessboard so that both following conditions are met: each empty\r\ncell is under attack; exactly k pairs of rooks attack each other. An\r\nempty cell is under attack if there is at least one rook in the same row\r\nor at least one rook in the same column. Two rooks attack each other if\r\nthey share the same row or column, . For example, there are only two\r\npairs of rooks that attack each other in the following picture: Two ways\r\nto place the rooks are considered different if there exists at least one\r\ncell which is empty in one of the ways but contains a rook in another\r\nway.The answer might be large, so print it modulo 998244353.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint f[200020], g[200020];\n\nint power(int x, int y)\n{\n    int o;\n\n    for(o = 1; y; y /= 2)\n    {\n        if(y % 2)\n            o = (long long)o * x % 998244353;\n        x = (long long)x * x % 998244353;\n    }\n\n    return o;\n}\n\nint c(int n, int m)\n{\n    return (long long)f[n] * g[m] % 998244353 * g[n - m] % 998244353;\n}\n\nint main()\n{\n    int n;\n    long long k;\n\n    scanf(\"%d %I64d\", &n, &k);\n    if(k >= n)\n    {\n        printf(\"0\\n\");\n\n        return 0;\n    }\n    for(int i = f[0] = 1; i <= n; i ++)\n        f[i] = (long long)f[i - 1] * i % 998244353;\n    g[n] = power(f[n], 998244351);\n    for(int i = n - 1; i >= 0; i --)\n        g[i] = (long long)g[i + 1] * (i + 1) % 998244353;\n\n    int o = 0;\n    for(int i = 0; i <= n - k; i ++)\n        if(i % 2)\n            o = ((o - (long long)c(n - k, i) * power(n - k - i, n)) % 998244353 + 998244353) % 998244353;\n        else\n            o = (o + (long long)c(n - k, i) * power(n - k - i, n)) % 998244353;\n    o = (long long)o * c(n, n - k) * 2 % 998244353;\n\n    if(!k)\n        o = (o - f[n] + 998244353) % 998244353;\n    printf(\"%d\\n\", o);\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "fft", "math"], "dificulty": "2300", "interactive": false}