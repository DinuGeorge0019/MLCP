{"link": "https://codeforces.com//contest/1832/problem/A", "problemId": "1919531", "problem_idx": "A", "shortId": "1832A", "contest_number": "1832", "problem_submissions": {"F": [205612816, 205618187, 205616065, 205615360, 205612997, 205612699, 205616615, 205704621, 205757584, 205930525, 205621852, 205621757], "E": [205588370, 205576685, 205587590, 205562791, 205578695, 205581418, 205576017, 205588938, 205587310, 205585791, 205594909, 205587637, 205568079, 205590489, 205592123, 205595293, 205581468, 205598039, 205585624], "D1": [205582572, 205571409, 205573052, 205565935, 205571345, 205569679, 205567398, 205577948, 205578327, 205578690, 205578885, 205573631, 205580478, 205584975, 205584642, 205576123, 205577262, 205587661, 205590424, 205578991, 205594286], "D2": [205582469, 205571220, 205573149, 205573248, 205571140, 205587711, 205587841, 205578108, 205578462, 205578510, 205604647, 205579021, 205580354, 205589204, 205584769, 205584072, 205587751, 205599151, 205586621, 205599536], "C": [205557102, 205556400, 205556488, 205552484, 205557070, 205556143, 205558460, 205557880, 205559387, 205559279, 205557942, 205559043, 205556434, 205554797, 205556994, 205564356, 205564037, 205562522, 205562917], "B": [205552451, 205550855, 205551794, 205549640, 205552032, 205552318, 205551056, 205550768, 205554849, 205551853, 205553247, 205555210, 205553102, 205550776, 205552302, 205556686, 205557181, 205553564, 205556320], "A": [205549496, 205548656, 205548697, 205548635, 205548771, 205548615, 205548617, 205548590, 205549420, 205548691, 205549006, 205548793, 205548840, 205548603, 205548831, 205550263, 205548997, 205555130, 205552258]}, "name": "A. New Palindrome", "statement": "A palindrome is a string that reads the same from left to right as from\r\nright to left. For example, , , , are palindromes.You are given a string\r\ns consisting of lowercase Latin letters. The string s is a\r\npalindrome.You have to check whether it is possible to rearrange the\r\nletters in it to get palindrome (not equal to the given string s).\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    std::string s;\n    std::cin >> s;\n    \n    if (s.size() % 2) {\n        s.erase(s.begin() + s.size() / 2);\n    }\n    if (s != std::string(s.size(), s[0])) {\n        std::cout << \"YES\\n\";\n    } else {\n        std::cout << \"NO\\n\";\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}"], "input": "", "output": "", "tags": ["strings"], "dificulty": "800", "interactive": false}