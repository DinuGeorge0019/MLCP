{
    "link": "https://codeforces.com//contest/660/problem/E",
    "problemId": "54417",
    "problem_idx": "E",
    "shortId": "660E",
    "contest_number": "660",
    "problem_submissions": {
        "F": [
            17239364,
            17239205,
            17239755,
            17238017,
            32736003,
            32634422,
            17240355,
            17266440,
            17390273,
            17390239,
            17390167,
            17239067,
            17283949,
            17242419,
            28385899,
            17237899
        ],
        "E": [
            17237675,
            18655900,
            17236241,
            17236591,
            17240301,
            17237690,
            17235572,
            17235893,
            17238324,
            17238151,
            17239741,
            17240955,
            17239261,
            17238105,
            28384744,
            17238510,
            17241405,
            17239444,
            17239692
        ],
        "C": [
            17233149,
            17233742,
            17234548,
            17232545,
            17234726,
            17232794,
            17232880,
            17232362,
            17233050,
            17232479,
            17233218,
            17232540,
            17233780,
            17233237,
            17233749,
            17233672,
            17233999,
            17234257
        ],
        "D": [
            17232410,
            17234486,
            17232234,
            17233026,
            17235245,
            17233173,
            17233945,
            17233153,
            17235270,
            17235762,
            17234096,
            17244499,
            17244482,
            17233228,
            17234097,
            17233913,
            17234439,
            17234508,
            17394145,
            17235565,
            17235267
        ],
        "B": [
            17232075,
            17232491,
            17233215,
            17240579,
            17234008,
            17232211,
            17232270,
            17233552,
            17232203,
            17233514,
            17232306,
            17232154,
            17233087,
            17233547,
            17232582,
            17233079,
            17232801,
            17232756
        ],
        "A": [
            17231695,
            17231866,
            17231724,
            17231870,
            17233301,
            17231713,
            17231748,
            17231689,
            17231712,
            17231907,
            17231758,
            17231697,
            17231904,
            17231863,
            17232106,
            17232315,
            17231848,
            17231851
        ]
    },
    "name": "E. Different Subsets For All Tuples",
    "statement": "For a sequence of integers between and , inclusive, denote as the number\r\nof distinct subsequences of (including the empty subsequence).You are\r\ngiven two positive integers and . Let be the set of all sequences of\r\nlength consisting of numbers from to . Compute the sum over all in\r\nmodulo .\r\n",
    "solutions": [
        "# include <cstdio>\nconst int MOD = 1e9 + 7;\nlong long pow(int b, int e)\n{\n\tif (e == 0)\n\t\treturn 1;\n\telse if (e % 2)\n\t\treturn pow(b, e - 1) * b % MOD;\n\tlong long h = pow(b, e / 2);\n\treturn h * h % MOD;\n}\nconst int MN = 1e6 + 44;\nlong long f[MN], fin[MN];\nlong long bin(int a, int b)\n{\n\treturn f[a] * fin[b] % MOD * fin[a - b] % MOD;\n}\nint main()\n{\n\tf[0] = 1;\n\tfor (int i = 1; i < MN; ++i)\n\t\tf[i] = f[i - 1] * i % MOD;\n\tfin[MN - 1] = pow(f[MN - 1], MOD - 2);\n\tfor (int i = MN - 2; i >= 0; --i)\n\t\tfin[i] = fin[i + 1] * (i + 1) % MOD;\n// \tfor (int i = 0; i < 10; ++i)\n// \t{\n// \t\tfor (int k = 0; k <= i; ++k)\n// \t\t\tprintf(\"%d \", bin(i, k));\n// \t\tprintf(\"\\n\");\n// \t}\n\tint n, m;\n\tscanf(\"%d%d\", &n, &m);\n\tlong long res = 0;\n\tlong long sum = 0;\n\tfor (int k = 0; k <= n; ++k)\n\t{\n// \t\tprintf(\"k = %d sum = %lld\\n\", k, sum);\n\t\tres = (res + pow(m, k) * (pow (m, n) - sum)) % MOD;\n\t\tsum = (sum + bin(n, k) * pow(m - 1, n - k)) % MOD;\n\t}\n\tif (res < 0)\n\t\tres += MOD;\n\tprintf(\"%d\\n\", (int) res);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\E. Different Subsets For All Tuples.json",
    "editorial_link": "https://codeforces.com//blog/entry/44259",
    "editorial": "The problem was suggested by Lewin Gan Lewin. Letâs consider some\r\nsubsequence with the length (the empty subsequences we will count\r\nseparately by adding the valye at the end) and count the number of\r\nsequences that contains it. We should do that accurately to not count\r\nthe same sequence multiple times. Let be the fixed subsequence. In the\r\noriginal sequence before the element can be some other elements, but\r\nnone of them can be equal to (because we want to count the subsequence\r\nexactly one time). So we have variants for each of the elements before .\r\nSimilarly between elements and can be other elements and we have choices\r\nfor each of them. And so on. After the element can be some elements\r\n(suppose there are such elements) with no additional constraints (so we\r\nhave choices for each of them). We fixed the number of elements at the\r\nend , so we should distribute numbers between numbers before , between\r\nand ,\r\nldots, between and . Easy to see that we have choices to do that (itâs\r\nsimply binomial coefficient with allowed repititions). The number of\r\nsequences equals to . So the answer is . Easy to transform the last sum\r\nto the sum . Note the last inner sum can be calculating using the\r\nformula for parallel summing: . So the answer equals to . Also we can\r\nget the closed formula for the last sum to get logarithmic solution, but\r\nit is not required in the problem. C++ solution\r\n",
    "hint": []
}