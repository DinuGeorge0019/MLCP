{"link": "https://codeforces.com//contest/1633/problem/D", "problemId": "1280036", "problem_idx": "D", "shortId": "1633D", "contest_number": "1633", "problem_submissions": {"F": [144728014, 144732663, 144725299, 144734135, 144755385, 144746200, 144750180, 144784169, 144784123, 144784071, 144756558, 144756413, 144744162, 144773832, 144760627, 144857379, 144846906, 144860452], "E": [144697422, 144697254, 144700273, 144711600, 144710139, 144705030, 144759258, 144758605, 144753117, 144751374, 144692794, 144693937, 144709093, 144688303, 144718728, 144712277, 144711222, 144703097, 144703533, 144701413, 144708247, 144730413, 144725248, 144709092, 144706985, 144707076, 144709192, 144715254, 144713175, 144701813, 144716988, 144713208, 144710969], "D": [144679861, 144680032, 144672273, 144677313, 144750526, 144750179, 144673134, 144665105, 144722610, 144673318, 144676038, 144675084, 144682415, 144685094, 144675142, 144684537, 144675967, 144689440, 144678803, 144684839], "C": [144667366, 144667779, 144684242, 144665775, 144661471, 144672346, 144750549, 144664792, 144665309, 144663855, 144664551, 144665641, 144665205, 144669565, 144668090, 144672866, 144664710, 144674840, 144672003], "B": [144661250, 144661582, 144668540, 144659176, 144657404, 144657564, 144747880, 144657576, 144658942, 144658191, 144658845, 144734517, 144658134, 144658621, 144660270, 144659944, 144661387, 144659383, 144660032], "A": [144658378, 144658299, 144661328, 144657617, 144657004, 144657002, 144746540, 144657039, 144657209, 144657101, 144657184, 144734357, 144657068, 144657075, 144657309, 144657719, 144657565, 144657507, 144658267]}, "name": "D. Make Them Equal", "statement": "You have an array of integers a of size n. Initially, all elements of\r\nthe array are equal to 1. You can perform the following operation:\r\nchoose two integers i (1\r\nle i\r\nle n) and x (x > 0), and then increase the value of a_i by\r\nleft\r\nlfloor\r\nfrac{a_i}{x}\r\nright\r\nrfloor (i.e. make a_i = a_i +\r\nleft\r\nlfloor\r\nfrac{a_i}{x}\r\nright\r\nrfloor).After performing all operations, you will receive c_i coins for\r\nall such i that a_i = b_i.Your task is to determine the maximum number\r\nof coins that you can receive by performing no more than k operations.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nconstexpr int N = 1000;\n\nint dp[N + 1];\n\nvoid solve() {\n    int n, k;\n    std::cin >> n >> k;\n    \n    std::vector<int> b(n), c(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> b[i];\n    }\n    for (int i = 0; i < n; i++) {\n        std::cin >> c[i];\n    }\n    \n    k = std::min(k, 12 * n);\n    \n    std::vector<int> f(k + 1);\n    for (int i = 0; i < n; i++) {\n        for (int j = k; j >= dp[b[i]]; j--) {\n            f[j] = std::max(f[j], f[j - dp[b[i]]] + c[i]);\n        }\n    }\n    \n    std::cout << f[k] << \"\\n\";\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    std::fill(dp, dp + N + 1, 1E9);\n    dp[1] = 0;\n    \n    for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= i; j++) {\n            if (i + i / j <= N) {\n                dp[i + i / j] = std::min(dp[i + i / j], dp[i] + 1);\n            }\n        }\n    }\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}"], "input": "", "output": "", "tags": ["dp", "greedy"], "dificulty": "1600", "interactive": false}