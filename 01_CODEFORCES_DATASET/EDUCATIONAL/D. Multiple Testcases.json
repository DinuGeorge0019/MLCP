{"link": "https://codeforces.com//contest/1342/problem/D", "problemId": "604759", "problem_idx": "D", "shortId": "1342D", "contest_number": "1342", "problem_submissions": {"F": [78207467, 78205817, 78205943, 78204678, 78303371, 78242472, 78242440, 78242319, 78242310, 78242303, 78242233, 78206781, 78205447, 78186696, 78527031, 78214922, 78227172, 78226873, 78225695, 78223681, 78223297, 78309995], "E": [78177071, 78184631, 78183322, 78182599, 78180358, 78183013, 78207444, 78167441, 78172844, 78527023, 78170429, 78166909, 78409946, 78177636, 78170212, 78167446, 78169823, 78170875, 78173864, 78184907, 78181489, 78183649, 78170771, 78176771], "D": [78151939, 78159481, 78160158, 78169080, 78162112, 78191720, 78157598, 78162251, 78527016, 78158733, 78159121, 78158539, 78153238, 78158581, 78162104, 78158417, 78161220, 78159573, 78156760, 78155231, 78161242], "B": [78134011, 78131222, 78131215, 78138260, 78132277, 78189261, 78129032, 78126918, 78527008, 78133543, 78129305, 78126816, 78131103, 78132696, 78132210, 78133794, 78131695, 78131819, 78131288, 78134923, 78135996], "A": [78131888, 78126534, 78126963, 78132887, 78127318, 78126206, 78126166, 78126082, 78527005, 78128059, 78126263, 78126121, 78126742, 78126275, 78127236, 78128360, 78126590, 78126515, 78127035, 78131641, 78127186], "C": [78127633, 78147176, 78139297, 78163411, 78150308, 78144130, 78139528, 78141789, 78138222, 78527011, 78139530, 78141232, 78145910, 78135141, 78142133, 78151945, 78141231, 78149349, 78144977, 78144111, 78142843, 78144643, 78150859]}, "name": "D. Multiple Testcases", "statement": "So you decided to hold a contest on Codeforces. You prepared the\r\nproblems: statements, solutions, checkers, validators, tests...\r\nSuddenly, your coordinator asks you to change all your tests to multiple\r\ntestcases in the easiest problem!Initially, each test in that problem is\r\njust an array. The maximum size of an array is k. For simplicity, the\r\ncontents of arrays don\u2019t matter. You have n tests the i-th test is an\r\narray of size m_i (1\r\nle m_i\r\nle k).Your coordinator asks you to distribute all of your arrays into\r\nmultiple testcases. Each testcase can include multiple arrays. However,\r\neach testcase should include no more than c_1 arrays of size (\r\nge 1), no more than c_2 arrays of size ,\r\ndots, no more than c_k arrays of size . Also, c_1\r\nge c_2\r\nge\r\ndots\r\nge c_k.So now your goal is to create the new testcases in such a way\r\nthat: each of the initial arrays appears in testcase; for each testcase\r\nthe given conditions hold; the number of testcases is minimum possible.\r\nPrint the minimum possible number of testcases you can achieve and the\r\nsizes of arrays included in each testcase.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\nint n, m, a[200020], b[200020], c[200020];\nbool check(int k) {\n    for (int i = 1; i <= k; i++) {\n        int p = 0;\n        for (int j = i; j <= n; j += k)\n                    b[++p] = a[j];\n        for (int j = 1; j <= p; j++)\n                    if (p - j + 1 > c[b[j]])\n                        return false;\n    }\n    return true;\n}\nint find() {\n    int l = 0, r = n, mid;\n    while (l + 1 < r) {\n        mid = (l + r) >> 1;\n        if (check(mid)) r = mid; else            l = mid;\n    }\n    return r;\n}\nvoid print(int k) {\n    printf(\"%d\\n\", k);\n    for (int i = 1; i <= k; i++) {\n        printf(\"%d \", (n - i) / k + 1);\n        for (int j = i; j <= n; j += k)\n                    printf(\"%d \", a[j]);\n        puts(\"\");\n    }\n}\nint main() {\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n            scanf(\"%d\", &a[i]);\n    sort(a + 1, a + n + 1);\n    for (int i = 1; i <= m; i++)\n            scanf(\"%d\", &c[i]);\n    print(find());\n    return 0;\n}"], "input": "", "output": "", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "dificulty": "1900", "interactive": false}