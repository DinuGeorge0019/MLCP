{
    "link": "https://codeforces.com//contest/600/problem/D",
    "problemId": "41576",
    "problem_idx": "D",
    "shortId": "600D",
    "contest_number": "600",
    "problem_submissions": {
        "E": [
            14516781,
            14521796,
            14522661,
            14523717,
            30527329,
            14524644,
            14516280,
            14515812,
            14516214,
            14518451,
            14519071,
            14519248,
            14519280,
            14518850,
            14518744,
            14518295,
            14521024,
            14524030,
            14518640,
            14519985,
            14534724,
            14534675
        ],
        "D": [
            14515579,
            14519010,
            14518774,
            14521193,
            14533916,
            14533879,
            17533027,
            77083288,
            14526699,
            14520082
        ],
        "C": [
            14514280,
            14514611,
            14515088,
            14516246,
            14514489,
            14514198,
            14514520,
            14514586,
            14514814,
            14515845,
            14514811,
            14514852,
            14514847,
            14516022,
            14513813,
            14515214,
            14515296,
            14517008,
            14517583
        ],
        "B": [
            14513498,
            14513713,
            14514312,
            14515199,
            64489984,
            64489958,
            64437360,
            64437339,
            64437310,
            64437262,
            64437238,
            64437187,
            64356527,
            64356317,
            64356304,
            64356219,
            64356053,
            64356040,
            64356029,
            64355961,
            64355802,
            64355581,
            64355572,
            64355497,
            64355269,
            64355250,
            64355067,
            64355022,
            64355018,
            64355008,
            64354957,
            64354927,
            64354893,
            64354674,
            64354610,
            64354604,
            64354499,
            64354477,
            64354377,
            64354366,
            64354314,
            64354299,
            64354208,
            64354016,
            64353840,
            64353829,
            64353816,
            64353659,
            64353647,
            64353627,
            64353521,
            64353432,
            64353406,
            64353383,
            64353315,
            64353296,
            64352793,
            64352299,
            64352204,
            14513750,
            14513852,
            14513619,
            14513719,
            14513814,
            14513671,
            14513567,
            14513744,
            14513927,
            14514916,
            14513319,
            14514212,
            14514452,
            14514809,
            14515622
        ],
        "A": [
            14513396,
            14513543,
            14514079,
            14514797,
            14513623,
            14513416,
            14513555,
            14513558,
            14513502,
            14513418,
            14513548,
            14513680,
            14517095,
            14519574,
            14514382,
            14515226
        ],
        "F": [
            15165948,
            15165905,
            15165817,
            110063771,
            77143032,
            14560500
        ]
    },
    "name": "D. Area of Two Circles' Intersection",
    "statement": "You are given two circles. Find the area of their intersection.\r\n",
    "solutions": [
        "/*\nShe's wearin' dresses on the border line\n(Lookin' good)\nOh wakin' senses that were lost in time\n(Make amends)\nThis liberation is the one they'll love for ages\n(Hey man, I see them comin')\n\nJust cut those dresses, make you look so fine\n(You're a ten)\nPut on that shirt and you'll look so divine\n(I'm impressed)\nThis generation won't forgive those signs of agin'\n(Hey man, I see them comin')\n\nI've got my ticket for the next makeover\nI've got my ticket for a stolen ride\n\nI believe, I believe\nI believe in the fallen\nI believe, I believe\nI believe in the callin'\n\nThey've got injections for the facial lines\n(Make amends)\nBreak out the scalpel keep the nose defined\n(Look again)\nA crucifixion of the love we've known for ages\n(Hey man, I see them comin')\n\nYou're much too pretty, you don't need your mind\n(Just pretend)\nJust bat them eyelids, get your heart desires\n(Make amends)\nA resurrection of the shallow and the vapid\n(Hey man, I see them comin')\n\nI've got my ticket for the next makeover\nI lost my taste for this, I'll keep my pride\n\nI believe, I believe\nI believe in the fallen\nI believe, I believe\nI believe in the callin'\n\nReject\n\nI've got my ticket for the next makeover\nI lost my taste for this, I'll keep my pride\n\nI believe, I believe\nI believe in the fallen\nI believe, I believe\nI believe in the callin'\n\nI believe, I believe\nI believe in the fallen\nI believe, I believe\nI believe in the callin'\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>  \n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <ctime> \n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n\n#define eps 1e-16\n#define M_PI 3.141592653589793\n#define bs 1000000007\n#define bsize 512\n\nconst int N = 200005;\n\nusing namespace std;\n\nlong double x1,y1,x2,y2,r1,r2;\n\nlong double gd(long double x1,long double y1,long double x2,long double y2)\n{\n\treturn sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\n\nlong double solve_cos(long double a,long double b,long double c)\n{\n\treturn acos((a*a+b*b-c*c)/(2*a*b));\n}\n\nlong double cut(long double ang,long double r)\n{\n\tlong double s1,s2;\n\ts1=ang*r*r/2;\n\ts2=sin(ang)*r*r/2;\n\t//cout<<s1<<\" \"<<s2<<endl;\n\treturn s1-s2;\n}\n\nlong double solve()\n{\n\tif (r1<r2)\n\t{\n\t\tswap(x1,x2);\n\t\tswap(y1,y2);\n\t\tswap(r1,r2);\n\t}\n\tlong double cd=gd(x1,y1,x2,y2);\n\tif (cd+r2<=r1+eps)\n\t\treturn r2*r2*M_PI;\n\tif (cd>=r1+r2-eps)\n\t\treturn 0;\n\tlong double ang1=solve_cos(cd,r1,r2);\n\tlong double ang2=solve_cos(cd,r2,r1);\n\t//cout<<ang1<<\" \"<<ang2<<endl;\n\treturn cut(ang1*2,r1)+cut(ang2*2,r2);\n}\n\n\nint main(){\n\t//freopen(\"beavers.in\",\"r\",stdin);\n\t//freopen(\"beavers.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\",\"r\",stdin);\n\t//freopen(\"F:/output.txt\",\"w\",stdout);\n\tios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\t\n\tcin>>x1>>y1>>r1;\n\tcin>>x2>>y2>>r2;\n\t\n\tcout.precision(12);\n\tcout<<fixed<<solve()<<endl;\n\t\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\D. Area of Two Circles' Intersection.json",
    "editorial_link": "https://codeforces.com//blog/entry/21827",
    "editorial": "If the circles don’t intersect than the answer is . We can check that\r\ncase with only integer calculations (simply by comparing the square of\r\ndistance between centers with square of the sum of radiuses). If one of\r\nthe circles is fully in other then the answer is the square of the\r\nsmaller one. We can check this case also with only integer calculations\r\n(simply by comparing the square of distance between centers with square\r\nof the difference of radiuses). So now let’s consider the general case.\r\nThe answer will be equal to the sum of two circular segments. Let’s\r\nconsider the triangle with apexes in centers if circles and in some\r\nintersecting point of the circles. In that triangle we know all three\r\nsides so we can compute the angle of the circular segment. So we can\r\ncompute the square of circular sector. And the only thing that we should\r\ndo now is to subtract the square of triangle with apexes in the center\r\nof circle and in the intersecting points of circles. We can do that by\r\ncomputing the half of absolute value of cross product. So we have the\r\nfollowing formulas: , where is the distance between centers of the\r\ncircles. And also we should do the same thing with second circle by\r\nreplacing of indices . Complexity: .\r\n",
    "hint": []
}