{
    "link": "https://codeforces.com//contest/1082/problem/C",
    "problemId": "64163",
    "problem_idx": "C",
    "shortId": "1082C",
    "contest_number": "1082",
    "problem_submissions": {
        "F": [
            46328946,
            46337799,
            46339884,
            46346150,
            46445422,
            46359069,
            46431759,
            46637242,
            46637151,
            46325175,
            46338896,
            46409182
        ],
        "G": [
            46323996,
            46323275,
            46334802,
            46323141,
            46326108,
            46329586,
            46321808,
            163694400,
            163693799,
            46332091,
            46330084,
            46336228,
            46329478,
            46334035,
            46334852,
            46340605,
            46341989,
            46332446,
            46341097,
            46318296,
            46328921,
            46335428
        ],
        "E": [
            46318513,
            46330600,
            46328796,
            46321883,
            46324879,
            46325643,
            46324793,
            46322771,
            46328316,
            46332015,
            46327943,
            46323542,
            46327890,
            46325362,
            46330431,
            46320019,
            46338363,
            46322189,
            46331138
        ],
        "D": [
            46316454,
            46320831,
            46325078,
            46317954,
            46322179,
            46323264,
            46336380,
            46328840,
            46322602,
            46323491,
            46324308,
            46330072,
            46325620,
            46329576,
            46325051,
            46330163,
            46325538,
            46319965,
            46324331
        ],
        "C": [
            46314364,
            46317118,
            46317698,
            46315803,
            46318057,
            46319400,
            46316833,
            46317944,
            46317349,
            46317946,
            46320711,
            46318098,
            46319780,
            46320328,
            46319548,
            46328045,
            46319609,
            46315734,
            46318281
        ],
        "B": [
            46313723,
            46315264,
            46315248,
            46314114,
            46315542,
            46315654,
            46315306,
            46315753,
            46315155,
            46315310,
            46317088,
            46316030,
            46316402,
            46316343,
            46315252,
            46358458,
            46314954,
            46314579,
            46315821
        ],
        "A": [
            46313553,
            46313861,
            46313655,
            46313685,
            46313732,
            46313657,
            46313638,
            46313650,
            46313676,
            46313977,
            46315097,
            46313735,
            46314264,
            46315003,
            46313777,
            46326534,
            46313605,
            46313586,
            46314557
        ]
    },
    "name": "C. Multi-Subject Competition",
    "statement": "A multi-subject competition is coming! The competition has m different\r\nsubjects participants can choose from. That’s why Alex (the coach)\r\nshould form a competition delegation among his students. He has n\r\ncandidates. For the i-th person he knows subject s_i the candidate\r\nspecializes in and r_i a skill level in his specialization (this level\r\ncan be negative!). The rules of the competition require each delegation\r\nto choose some subset of subjects they will participate in. The only\r\nrestriction is that the participating in each of the subjects should be\r\nthe .Alex decided that each candidate would participate only in the\r\nsubject he specializes in. Now Alex wonders whom he has to choose to\r\nmaximize the total sum of skill levels of all delegates, or just skip\r\nthe competition this year if every valid non-empty delegation has\r\nnegative sum.(Of course, Alex doesn’t have any spare money so each\r\ndelegate he chooses must participate in the competition).\r\n",
    "solutions": [
        "/*\nI am Iron Man\n\nHas he lost his mind?\nCan he see or is he blind?\nCan he walk at all\nOr if he moves will he fall?\n\nIs he alive or dead?\nHas he thoughts within his head?\nWe'll just pass him there\nWhy should we even care?\n\nHe was turned to steel\nIn the great magnetic field\nWhen he traveled time\nFor the future of mankind\n\nNobody wants him\nHe just stares at the world\nPlanning his vengeance\nThat he will soon unfurl\n\nNow the time is here\nFor Iron Man to spread fear\nVengeance from the grave\nKills the people he once saved\n\nNobody wants him\nThey just turn their heads\nNobody helps him\nNow he has his revenge\n\nHeavy boots of lead\nFill his victims full of dread\nRunning as fast as they can\nIron Man lives again!\n*/\n\n#pragma GCC optimize(\"O3\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n\n#include <memory.h>\n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n#define norm asdfasdgasdgsd\n#define have adsgagshdshfhds\n#define ends asdgahhfdsfshdshfd\n#define prev asdgSHJsfgsdfhdsh\n#define hash asdgasdgasdgdfrywewery\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bsize 512\n\n#define ldouble long double\nusing namespace std;\n\n#define bs 1000000007\n\nconst int N = 200031;\n\nint n,m;\nvector<int> v[N];\nlong long C[N],ans;\n\nint main(){\n//\tfreopen(\"apache.in\",\"r\",stdin);\n//\tfreopen(\"apache.out\",\"w\",stdout);\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\tios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++){\n\t\tint id,val;\n\t\tcin>>id>>val;\n\t\tv[id].push_back(val);\n\t}\n\n\tfor (int i=1;i<=m;i++){\n\t\tsort(v[i].begin(),v[i].end());\n\t\treverse(v[i].begin(),v[i].end());\n\t\tlong long s=0;\n\t\tfor (int j=0;j<v[i].size();j++){\n\t\t\ts+=v[i][j];\n\t\t\tif (s>0)\n\t\t\t\tC[j+1]+=s;\n\t\t}\n\t}\n\n\tfor (int i=1;i<=n;i++){\n\t\tans=max(ans,C[i]);\n\t}\n\n\tcout<<ans<<endl;\n\n//\tcin.get(); cin.get();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Multi-Subject Competition.json",
    "editorial_link": "https://codeforces.com/blog/entry/63544",
    "editorial": "At first, itâs optimal to take candidates with maximal levels for a\r\nfixed subject.At second, if we fix number of participants in each\r\nsubject for some delegation, then itâs always optimal to choose all\r\nsubjects with positive sum of levels.It leads us to a following\r\nsolution. Letâs divide all candidates by itâs and sort each group in\r\nnon-increasing order.In result we can just iterate over all prefix sums\r\nfor each group and update global answer of current length with current\r\nsum if it has a positive value.\r\n",
    "hint": []
}