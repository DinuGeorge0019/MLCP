{
    "link": "https://codeforces.com//contest/652/problem/B",
    "problemId": "52869",
    "problem_idx": "B",
    "shortId": "652B",
    "contest_number": "652",
    "problem_submissions": {
        "F": [
            16928285,
            16930373,
            16931256,
            16970841,
            16961705,
            16935106,
            156953099,
            16939325,
            17157478,
            16976822,
            16929598
        ],
        "E": [
            16926440,
            16927126,
            16928485,
            16928041,
            16928079,
            16927963,
            16929010,
            16928885,
            16928945,
            16929000,
            16929278,
            16926493,
            16928821,
            16929439,
            16928127,
            16930840,
            16929731,
            16930544,
            16929622
        ],
        "D": [
            16923853,
            16925192,
            16926960,
            16924196,
            16924625,
            16925554,
            16925730,
            16924207,
            16926093,
            16926313,
            16925298,
            16926004,
            16926568,
            16924529,
            16926045,
            16925170,
            16925998,
            16927190,
            16926470
        ],
        "C": [
            16923132,
            16923717,
            16926036,
            16923304,
            16924095,
            16924304,
            16924230,
            16925378,
            16924383,
            16924805,
            16924428,
            16924018,
            16924971,
            16925484,
            16923795,
            16923653,
            16924997,
            16925262,
            16925278
        ],
        "B": [
            16922478,
            16922741,
            16925620,
            16922710,
            16922792,
            16922869,
            16923264,
            16922610,
            16922818,
            16923450,
            16923095,
            16923418,
            16923515,
            16923547,
            16922822,
            16922672,
            16922783,
            16923327,
            16924223
        ],
        "A": [
            16922372,
            16922446,
            16922797,
            16922454,
            16922532,
            16922643,
            16922693,
            16922430,
            16922460,
            16923027,
            16922810,
            16922924,
            16922740,
            16923101,
            16922457,
            16922433,
            16923996,
            16922614,
            16923536
        ]
    },
    "name": "B. z-sort",
    "statement": "A student of -school found a kind of sorting called -sort. The array\r\nwith elements are -sorted if two conditions hold: for all even , for all\r\nodd . For example the arrays and are -sorted while the array isn t\r\n-sorted.Can you make the array -sorted?\r\n",
    "solutions": [
        "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<queue>\n#include<cassert>\n#define PB push_back\n#define MP make_pair\n#define sz(v) (in((v).size()))\n#define forn(i,n) for(in i=0;i<(n);++i)\n#define forv(i,v) forn(i,sz(v))\n#define fors(i,s) for(auto i=(s).begin();i!=(s).end();++i)\n#define all(v) (v).begin(),(v).end()\nusing namespace std;\ntypedef long long in;\ntypedef vector<in> VI;\ntypedef vector<VI> VVI;\nVI a;\nint main(){\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  in n;\n  cin>>n;\n  a.resize(n);\n  forn(i,n)\n    cin>>a[i];\n  sort(all(a));\n  in c1=0;\n  in c2=n-1;\n  while(c1<=c2){\n    cout<<a[c1++]<<\" \";\n    if(c1<=c2){\n      cout<<a[c2--]<<\" \";\n    }\n  }\n  cout<<endl;\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "sortings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. z-sort.json",
    "editorial_link": "https://codeforces.com//blog/entry/43986",
    "editorial": "The problem was suggested by Smaug. Easy to see that we can -sort any\r\narray . Let be the number of even positions in . We can assign to those\r\npositions maximal elements and distribute other elements to odd\r\npositions. Obviously the resulting array is -sorted. C++ solution\r\n"
}