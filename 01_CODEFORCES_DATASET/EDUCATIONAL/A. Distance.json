{
    "link": "https://codeforces.com//contest/1612/problem/A",
    "problemId": "1198235",
    "problem_idx": "A",
    "shortId": "1612A",
    "contest_number": "1612",
    "problem_submissions": {
        "F": [
            136454446,
            136443408,
            136448569,
            136447134,
            136456076,
            136455474,
            136456753,
            136447271,
            136463331,
            136457585,
            136451795,
            136455146,
            136466801,
            136458322,
            136466012,
            136470454,
            136470912,
            136437898,
            136449817
        ],
        "G": [
            136441097,
            136445642,
            136443193,
            136435909,
            136444442,
            136447874,
            136444457,
            136453773,
            136451816,
            136466000,
            136464894,
            136468423,
            136436868,
            136467114,
            136451881,
            136455169,
            136439762,
            136431665,
            136483294,
            136433577,
            136448604
        ],
        "E": [
            136432700,
            136437971,
            136478291,
            136437457,
            136451828,
            136439707,
            136440209,
            136458464,
            136439310,
            136440686,
            136441493,
            136444282,
            136445062,
            136445391,
            136571543,
            136452932,
            136447870,
            136444392,
            136446716,
            136451569,
            136449325,
            136458083,
            136453137,
            136438833
        ],
        "D": [
            136427875,
            136432221,
            136431776,
            136429717,
            136432159,
            136428903,
            136429714,
            136434455,
            136434329,
            136431021,
            136438170,
            136439001,
            136445408,
            136437693,
            136436906,
            136425598,
            136443833,
            136454774,
            136454860,
            136431686
        ],
        "C": [
            136427045,
            136429953,
            136429634,
            136424300,
            136429072,
            136425761,
            136426268,
            136430944,
            136430349,
            136427934,
            136434022,
            136430101,
            136430333,
            136432880,
            136433170,
            136439471,
            136433291,
            136452483,
            136456465,
            136428370
        ],
        "B": [
            136424559,
            136426931,
            136427614,
            136426640,
            136425629,
            136432355,
            136424153,
            136427726,
            136427375,
            136424825,
            136429445,
            136426911,
            136426490,
            136429175,
            136430275,
            136436731,
            136428475,
            136450629,
            136459018,
            136425566
        ],
        "A": [
            136423641,
            136423524,
            136423454,
            136423614,
            136423605,
            136434187,
            136423437,
            136423664,
            136423746,
            136423549,
            136423622,
            136423647,
            136423440,
            136424189,
            136425302,
            136430159,
            136424218,
            136448121,
            136459267,
            136423589
        ]
    },
    "name": "A. Distance",
    "statement": "Let’s denote the Manhattan distance between two points p_1 (with\r\ncoordinates (x_1, y_1)) and p_2 (with coordinates (x_2, y_2)) as d(p_1,\r\np_2) = |x_1 - x_2| + |y_1 - y_2|. For example, the distance between two\r\npoints with coordinates (1, 3) and (4, 2) is |1 - 4| + |3 - 2| = 4.You\r\nare given two points, A and B. The point A has coordinates (0, 0), the\r\npoint B has coordinates (x, y).Your goal is to find a point C such that:\r\nboth coordinates of C are non-negative integers; d(A, C) =\r\ndfrac{d(A, B)}{2} (without any rounding); d(B, C) =\r\ndfrac{d(A, B)}{2} (without any rounding). Find any point C that meets\r\nthese constraints, or report that no such point exists.\r\n",
    "solutions": [
        "// xtqqwq\n#include<bits/stdc++.h>\n\n#define pb push_back\n#define fi first\n#define se second\n#define mp make_pair\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef long double ld;\n\ntemplate <typename T> bool chkmin(T &x,T y){return x>y?x=y,1:0;}\ntemplate <typename T> bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n\nint readint(){\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nint x,y;\n\nint main(){\n\tint T=readint();\n\twhile(T--){\n\t\tx=readint(); y=readint();\n\t\tif((x+y)&1) printf(\"-1 -1\\n\");\n\t\telse{\n\t\t\tint t=(x+y)/2;\n\t\t\tprintf(\"%d %d\\n\",x/2,(y+1)/2);\n\t\t}\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Distance.json",
    "editorial_link": "https://codeforces.com//blog/entry/97164",
    "editorial": "There is a solution in , but in fact, a solution that checks all points\r\nwith -coordinate from to and -coordinate from to is fast enough. Thereâs\r\nno need to check any other points, since implies that point is on one of\r\nthe shortest paths between and .\r\n",
    "hint": []
}