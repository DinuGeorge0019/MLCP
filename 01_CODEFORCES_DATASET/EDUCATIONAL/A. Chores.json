{
    "link": "https://codeforces.com//contest/873/problem/A",
    "problemId": "127819",
    "problem_idx": "A",
    "shortId": "873A",
    "contest_number": "873",
    "problem_submissions": {
        "F": [
            31249155,
            31246074,
            31247917,
            31248578,
            31249388,
            31249158,
            31251415,
            31251584,
            31250733,
            31288783,
            31250579,
            31245985,
            31253356,
            31247757,
            31248728,
            31247477,
            31250335,
            50573188,
            31250325,
            31251280
        ],
        "E": [
            31248134,
            31249919,
            31252439,
            31251022,
            31250865,
            31249737,
            31252775,
            31249136,
            31250580,
            31253627,
            31288769,
            31253029,
            31255710,
            31253949,
            31251510,
            31251487,
            31250360,
            31262356,
            31249482,
            31279947,
            31254652
        ],
        "D": [
            31245980,
            31247767,
            31247101,
            31246043,
            31246748,
            31245415,
            31247268,
            112870619,
            31246541,
            31245811,
            31246941,
            31288779,
            31248218,
            31249255,
            31247717,
            31246658,
            31251512,
            31244912,
            31245095,
            31246576,
            31246214,
            31247900
        ],
        "C": [
            31244661,
            31246346,
            31244654,
            31244959,
            31244457,
            31244670,
            31245105,
            31244159,
            31244863,
            31245509,
            31247509,
            31245175,
            31252048,
            31251951,
            31245641,
            31244103,
            31244492,
            31244705,
            31245349
        ],
        "B": [
            31243795,
            31244797,
            31243640,
            31244221,
            31243588,
            31243630,
            251388248,
            206107056,
            102945786,
            102945751,
            31243439,
            31243368,
            31243788,
            31244097,
            31246401,
            31243794,
            31252944,
            31252443,
            31243336,
            31243339,
            31243565,
            31243646,
            31244189
        ],
        "A": [
            31242945,
            31244304,
            31243017,
            31243228,
            31242934,
            31243184,
            31242993,
            31242977,
            31243012,
            31243412,
            31244065,
            31243098,
            31243193,
            31252560,
            31242943,
            31242939,
            31243039,
            31243390
        ]
    },
    "name": "A. Chores",
    "statement": "Luba has to do chores today. -th chore takes units of time to complete.\r\nIt is guaranteed that for every the condition is met, so the sequence is\r\nsorted.Also Luba can work really hard on some chores. She can choose not\r\nmore than any chores and do each of them in units of time instead of\r\n().Luba is very responsible, so she has to do all chores, and now she\r\nwants to know the minimum time she needs to do everything. Luba cannot\r\ndo two chores simultaneously.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define all(a) (a).begin(), (a).end()\n#define sz(a) (int)(a).size()\n#define pb push_back\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef double ld;\ntypedef pair<ll, ll> pll;\n\nint main() {\n\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\n\t//ifstream cin(\"input.txt\");\n\t//ofstream cout(\"output.txt\");\n\n\tint n, k, x;\n\tcin >> n >> k >> x;\n\n\tint ans = 0;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\treverse(all(a));\n\n\tfor (int i = 0; i < k; ++i) {\n\t\tans += x;\n\t}\n\tfor (int i = k; i < n; ++i) {\n\t\tans += a[i];\n\t}\n\n\tcout << ans << \"\\n\";\n\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Chores.json",
    "editorial_link": "https://codeforces.com//blog/entry/55171",
    "editorial": "Since , it is better to do exactly chores in time . And since we need to\r\nminimize total time we need to spend, itâs better to speed up the\r\n\"longest\" chores. So the answer is .\r\n",
    "hint": []
}