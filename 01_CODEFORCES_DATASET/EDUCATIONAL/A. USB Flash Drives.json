{
    "link": "https://codeforces.com//contest/609/problem/A",
    "problemId": "43544",
    "problem_idx": "A",
    "shortId": "609A",
    "contest_number": "609",
    "problem_submissions": {
        "F": [
            14886217,
            14887477,
            14888177,
            14886379,
            14885040,
            14885527,
            14887905,
            14886648,
            14888303,
            14895268,
            14888745,
            14917735,
            14898327,
            14893077,
            14892871
        ],
        "E": [
            14882063,
            14883627,
            14884067,
            14882265,
            14882405,
            14883303,
            14885623,
            14884355,
            14884989,
            14882411,
            14880931,
            14884153,
            14884117,
            14884965,
            14886043,
            14885211,
            14885825,
            14885599
        ],
        "D": [
            14879612,
            14881347,
            14882734,
            14880026,
            14880930,
            14881222,
            14881919,
            14978995,
            14882591,
            14880772,
            14880443,
            14883120,
            14881030,
            14880993,
            14882082,
            14883447,
            14882873,
            14884432,
            14883318
        ],
        "C": [
            14878082,
            14878799,
            14878664,
            14878553,
            14878302,
            14878492,
            14879132,
            14879063,
            14878272,
            14878604,
            14878442,
            14879174,
            14878439,
            14879071,
            14879422,
            14879561,
            14879189,
            14879663
        ],
        "B": [
            14877436,
            14877988,
            14877744,
            14877733,
            14877531,
            14877677,
            14878043,
            14878384,
            14877598,
            14877591,
            14877568,
            14877569,
            14877547,
            14877786,
            14877829,
            14878321,
            14878191,
            14879079
        ],
        "A": [
            14877245,
            14877406,
            14877341,
            14877385,
            14877254,
            14877304,
            14877500,
            14878068,
            14877300,
            14877250,
            14877283,
            14877265,
            14877281,
            14877315,
            14877259,
            14877505,
            14877351,
            14878481
        ]
    },
    "name": "A. USB Flash Drives",
    "statement": "Sean is trying to save a large file to a USB flash drive. He has USB\r\nflash drives with capacities equal to megabytes. The file size is equal\r\nto megabytes. Find the minimum number of USB flash drives needed to\r\nwrite Sean\u2019s file, if he can split the file between drives.\r\n",
    "solutions": [
        "/*\nThe death corpse composed behind\nIn the dust of their self\nTo terminate another life\nA further obligation to make\n\nWounds of memory for ever to stay\nThe hall of souls are the hall of pain\n\nReward through a successful life\nPunish through a painful life\nA waiting soul for each new life\n\nThe deliverance to penetrate into nirvana\nHow much life need for all to know\nOr is to be a punishment about our mistakes\nTo life with it\n\nTo understand what is it\n\nIs the source the life\nIs the source the death\n\nThe hall of torment\nTo know more but they feasting\nIs the waiting room for souls\n\nTorment, unknown, pain for fear\nTorture, yearning, waiting for deliverance\n\nThe question of existents\nReality or dream\n\nI can see your pain in my dreams\nI can smell your screams in my dreams\nI feel your fear, your fear for my dreams\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>  \n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <ctime> \n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bs 1234567891\n#define bsize 512\n\nconst int N = 1100;\n\nusing namespace std;\n\nint n, m, ar[N];\nint s, q;\n\nint main(){\n\t//freopen(\"beavers.in\",\"r\",stdin);\n\t//freopen(\"beavers.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\",\"r\",stdin);\n\t//freopen(\"F:/output.txt\",\"w\",stdout);\n\t//ios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> ar[i];\n\tsort(ar, ar + n);\n\treverse(ar, ar + n);\n\n\tint q = 0;\n\twhile (s < m)\n\t{\n\t\ts += ar[q];\n\t\t++q;\n\t}\n\tcout << q << endl;\n\n\tcin.get();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. USB Flash Drives.json",
    "editorial_link": "https://codeforces.com//blog/entry/22187",
    "editorial": "Let\u00e2\u0080\u0099s sort the array in nonincreasing order. Now the answer is some of\r\nthe first flash-drives. Let\u00e2\u0080\u0099s iterate over array from left to right\r\nuntil the moment when we will have the sum at least . The number of\r\nelements we took is the answer to the problem. Complexity: .\r\n"
}