{"link": "https://codeforces.com//contest/1398/problem/B", "problemId": "699502", "problem_idx": "B", "shortId": "1398B", "contest_number": "1398", "problem_submissions": {"G": [89915963, 89919649, 89969541, 89969478, 89969399, 89923373, 89932796, 89925690, 89932477, 89942517, 89940456, 89939176, 89934894, 89934457, 89937693, 89934633, 89938319, 89937371, 89998747, 89998438, 89941918, 89943420, 89938418, 89962347, 89937826, 91732579, 91721537, 91721531, 91720040, 91720007, 91719903, 89956129, 89955780, 89942074, 89938585, 89944168], "F": [89912067, 89913917, 89970425, 89946897, 89910497, 89907909, 89921580, 89925827, 89926930, 89927249, 89928492, 89920424, 90033370, 89917113, 89932855, 89933064, 89929161, 89924362, 89920121, 89940340, 89933347, 89929042], "E": [89905047, 89908543, 89968389, 89916074, 89918608, 89913134, 89918941, 89911745, 89920728, 89917154, 89930653, 89930795, 89916495, 89920330, 89922316, 89913338, 89912908, 89934884, 89919511, 89915904], "D": [89896202, 89894262, 89927478, 89895466, 89894434, 89904634, 89907380, 89898375, 89898000, 89898904, 89895538, 89900457, 89898646, 89893142, 89905486, 89900465, 89900312, 89902255, 89897637], "C": [89885830, 89883985, 89884334, 89886727, 89888686, 89890331, 89887777, 89891076, 89887912, 89887655, 89893333, 89888198, 89884415, 89891205, 89886744, 89888315, 89893476, 89886675], "B": [89882536, 89880929, 89882045, 89882783, 89885320, 89885640, 89884725, 89881741, 89883376, 89882325, 89890179, 89884220, 89880525, 89887877, 89881688, 89882767, 89889537, 89882098], "A": [89878857, 89878683, 89924676, 89879194, 89878701, 89878764, 89880470, 89880388, 89879912, 89878682, 89878924, 89878750, 89886185, 89879017, 89878663, 89880890, 89878758, 89878853, 89884879, 89878791]}, "name": "B. Substring Removal Game", "statement": "Alice and Bob play a game. They have a binary string s (a string such\r\nthat each character in it is either 0 or 1). Alice moves first, then\r\nBob, then Alice again, and so on.During their move, the player can\r\nchoose any number (not less than one) of in s and delete them.For\r\nexample, if the string is 10110, there are 6 possible moves (deleted\r\ncharacters are bold):\r\ntextbf{1}0110\r\nto 0110; 1\r\ntextbf{0}110\r\nto 1110; 10\r\ntextbf{1}10\r\nto 1010; 101\r\ntextbf{1}0\r\nto 1010; 10\r\ntextbf{11}0\r\nto 100; 1011\r\ntextbf{0}\r\nto 1011. After the characters are removed, the characters to the left\r\nand to the right of the removed block become adjacent. I. e. the\r\nfollowing sequence of moves is valid: 10\r\ntextbf{11}0\r\nto 1\r\ntextbf{00}\r\nto 1.The game ends when the string becomes empty, and the score of each\r\nplayer is .Each player wants to maximize their score. Calculate the\r\nresulting score of Alice.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__);fflush(stderr);\n#else\n\t#define eprintf(...) 42\n#endif\n\nusing ll = long long;\nusing ld = long double;\nusing uint = unsigned int;\nusing ull = unsigned long long;\ntemplate<typename T>\nusing pair2 = pair<T, T>;\nusing pii = pair<int, int>;\nusing pli = pair<ll, int>;\nusing pll = pair<ll, ll>;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n\nclock_t startTime;\ndouble getCurrentTime() {\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\nconst int N = 5555;\nint n;\nchar s[N];\n\nvoid solve() {\n\n\tscanf(\"%s\", s + 1);\n\ts[0] = '0';\n\tn = strlen(s);\n\ts[n++] = '0';\n\tvector<int> a;\n\tint len = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == '0') {\n\t\t\tif (len > 0) a.push_back(len);\n\t\t\tlen = 0;\n\t\t} else {\n\t\t\tlen++;\n\t\t}\n\t}\n\tsort(all(a));\n\treverse(all(a));\n\tint ans = 0;\n\tfor (int i = 0; i < (int)a.size(); i += 2)\n\t\tans += a[i];\n\tprintf(\"%d\\n\", ans);\n}\n\nint main()\n{\n\tstartTime = clock();\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) solve();\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["games", "greedy", "sortings"], "dificulty": "800", "interactive": false}