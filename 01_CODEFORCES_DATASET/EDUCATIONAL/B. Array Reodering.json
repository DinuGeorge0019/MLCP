{
    "link": "https://codeforces.com//contest/1535/problem/B",
    "problemId": "1005283",
    "problem_idx": "B",
    "shortId": "1535B",
    "contest_number": "1535",
    "problem_submissions": {
        "F": [
            118419611,
            118426010,
            118430867,
            118426204,
            118431979,
            118430548,
            118427577,
            118427147,
            118426507,
            118434537,
            118439125,
            118438429,
            118430864,
            118436547,
            118434959,
            118453422,
            118456471,
            118456451,
            118456355,
            118456131,
            118456058,
            118456048,
            118455909,
            118455542,
            118455503,
            118455485
        ],
        "E": [
            118400147,
            118402299,
            118394572,
            118405499,
            118401297,
            118401883,
            118414866,
            118411914,
            118414294,
            118416129,
            118415333,
            118407183,
            118406610,
            118405332,
            118409528,
            118409895,
            118409924,
            118411325,
            118411281,
            118410495
        ],
        "D": [
            118386781,
            118389062,
            118387245,
            118390389,
            118390997,
            118394077,
            118396153,
            118398368,
            118392634,
            118407760,
            118505002,
            118402523,
            118396763,
            118398598,
            118397636,
            118397134,
            118395495,
            118396828,
            118399622,
            118398243,
            118400710,
            118402452
        ],
        "C": [
            118378877,
            118377465,
            118375938,
            118430752,
            118379578,
            118379282,
            118380197,
            118383333,
            118382719,
            118391368,
            118391117,
            118384601,
            118383707,
            118399476,
            118384199,
            118383290,
            118382649,
            118384396,
            118382126,
            118382935,
            118380453,
            118382432
        ],
        "B": [
            118372987,
            118446923,
            118371985,
            118371638,
            118369895,
            118374146,
            118373752,
            118371435,
            118372857,
            118372165,
            118379497,
            118375234,
            118373646,
            118372652,
            118378295,
            118372318,
            118372891,
            118372700,
            118376055,
            118373052,
            118370572
        ],
        "A": [
            118369280,
            118369165,
            118369096,
            118369133,
            118369295,
            118369220,
            118369112,
            118369384,
            118369143,
            118369677,
            118369872,
            118369144,
            118369236,
            118370094,
            118369134,
            118369278,
            118369451,
            118369228,
            118369772,
            118369174
        ]
    },
    "name": "B. Array Reodering",
    "statement": "You are given an array a consisting of n integers.Letâ€™s call a pair of\r\nindices i, j if 1\r\nle i < j\r\nle n and\r\ngcd(a_i, 2a_j) > 1 (where\r\ngcd(x, y) is the greatest common divisor of x and y).Find the maximum\r\nnumber of index pairs if you can reorder the array a in an arbitrary\r\nway.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++){\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int j = 0; j < n; j++){\n      cin >> a[j];\n    }\n    vector<int> b;\n    for (int j = 0; j < n; j++){\n      if (a[j] % 2 == 0){\n        b.push_back(a[j]);\n      }\n    }\n    for (int j = 0; j < n; j++){\n      if (a[j] % 2 == 1){\n        b.push_back(a[j]);\n      }\n    }\n    int ans = 0;\n    for (int j = 0; j < n; j++){\n      for (int k = j + 1; k < n; k++){\n        if (gcd(b[j], b[k] * 2) > 1){\n          ans++;\n        }\n      }\n    }\n    cout << ans << endl;\n  }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Array Reodering.json",
    "editorial_link": "https://codeforces.com//blog/entry/91481",
    "editorial": "If the value of is even, then at least , regardless of the value of .\r\nTherefore, we can put all the even values before the odd ones (it does\r\nnot matter in what order). Now it remains to arrange the odd values. In\r\nfact, their order is not important, because (for odd and ). This means\r\nthat each pair will be considered exactly time, regardless of the order\r\nof the odd elements.\r\n",
    "hint": []
}