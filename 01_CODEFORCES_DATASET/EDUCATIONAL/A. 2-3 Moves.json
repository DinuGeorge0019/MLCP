{
    "link": "https://codeforces.com//contest/1716/problem/A",
    "problemId": "1494200",
    "problem_idx": "A",
    "shortId": "1716A",
    "contest_number": "1716",
    "problem_submissions": {
        "F": [
            166973182,
            166969763,
            166955726,
            166980503,
            166971153,
            166982692,
            166980605,
            166983476,
            166980127,
            166991091,
            166984328,
            174506735,
            166989832,
            166994539,
            166994104,
            167001346,
            166987296,
            166992176,
            167001598,
            166984678,
            166980048,
            166989609,
            166991438
        ],
        "E": [
            166965293,
            166978547,
            166976884,
            166972995,
            166981522,
            166965872,
            166976854,
            166973781,
            166987347,
            166978953,
            166992476,
            174506754,
            166979608,
            166979158,
            166999544,
            166982891,
            166981173,
            166992198,
            166994171,
            166998037,
            166985315
        ],
        "D": [
            166956573,
            166961021,
            166948324,
            166940829,
            166964589,
            166961790,
            166945640,
            166966226,
            166990484,
            166958577,
            166963786,
            166970823,
            166970282,
            166968378,
            166964318,
            166974075,
            166965600,
            166970563,
            166970355,
            166971544,
            166978778
        ],
        "C": [
            166949159,
            166950864,
            166972142,
            166963779,
            166956508,
            166957181,
            166966957,
            166958122,
            166972096,
            166974861,
            166961876,
            166963035,
            166961356,
            166959918,
            166967210,
            166954669,
            166964729,
            166960756,
            166967143,
            166974763
        ],
        "B": [
            166933142,
            166932739,
            166939087,
            166932145,
            166933138,
            166932019,
            166931348,
            166934835,
            166932251,
            166931312,
            166937500,
            166936523,
            166932821,
            166932877,
            166940841,
            166932031,
            166935420,
            166935573,
            166933744,
            166937079
        ],
        "A": [
            166930228,
            166930333,
            166931520,
            166930280,
            166930300,
            166930222,
            166930190,
            166930301,
            166930500,
            166930207,
            166932038,
            166930537,
            166930220,
            166930271,
            166933329,
            166930353,
            166930639,
            166930376,
            166930158,
            166931421
        ]
    },
    "name": "A. 2-3 Moves",
    "statement": "You are standing at the point 0 on a coordinate line. Your goal is to\r\nreach the point n. In one minute, you can move by 2 or by 3 to the left\r\nor to the right (i. e., if your current coordinate is x, it can become\r\nx-3, x-2, x+2 or x+3). Note that the new coordinate can become\r\nnegative.Your task is to find the number of minutes required to get from\r\nthe point 0 to the point n.You have to answer t independent test cases.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n#include <array>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) {fprintf(stderr, __VA_ARGS__);fflush(stderr);}\n#else\n\t#define eprintf(...) 42\n#endif\n\nusing ll = long long;\nusing ld = long double;\nusing uint = unsigned int;\nusing ull = unsigned long long;\ntemplate<typename T>\nusing pair2 = pair<T, T>;\nusing pii = pair<int, int>;\nusing pli = pair<ll, int>;\nusing pll = pair<ll, ll>;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n\nclock_t startTime;\ndouble getCurrentTime() {\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\nint main()\n{\n\tstartTime = clock();\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tif (x == 1)\n\t\t\tprintf(\"2\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\", (x + 2) / 3);\n\t}\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. 2-3 Moves.json",
    "editorial_link": "https://codeforces.com//blog/entry/105653",
    "editorial": "If , the answer is (we canât get , so we can move by to the right and by\r\nto the left). If or , the answer is obviously . Otherwise, the answer is\r\nalways . We canât get the answer less than this value (because we need\r\nat least moves to get to the point greater than or equal to ) and we can\r\nalways get this answer by the recurrence.\r\n",
    "hint": []
}