{"link": "https://codeforces.com//contest/1016/problem/E", "problemId": "204440", "problem_idx": "E", "shortId": "1016E", "contest_number": "1016", "problem_submissions": {"G": [41182699, 41182152, 41208590, 41208565, 41208533, 41186176], "E": [41176649, 41174782, 41175307, 41175790, 41176170, 41175960, 41179374, 41176561, 41175646, 41175201, 41179908, 41184095, 41179907, 41172878, 41174329, 41178174, 41177502, 41177414, 41176901, 41187225, 41186968, 41177073, 41179262, 41178795, 41177041], "C": [41173342, 41166585, 41171261, 41168340, 41167894, 41169421, 41170385, 41170240, 41169071, 41173849, 41167601, 41164969, 41165695, 41170115, 41170716, 41168026, 41168718, 41168530, 41166879], "F": [41171110, 41181183, 41180305, 41183918, 41185092, 41183413, 41183773, 41181947, 41183454, 41180224, 41185015, 41178764, 41188501, 42098047, 42098011, 41192515, 41197238, 41187801], "D": [41165638, 41168213, 41167884, 41169638, 41172158, 41171342, 41172221, 41172202, 41173341, 41167097, 41174977, 41169216, 41167575, 41163502, 41165286, 41170742, 41170760, 41171944, 41162657], "B": [41161071, 41162662, 41164375, 41162058, 41164067, 41164871, 41164742, 41161857, 41162316, 41161724, 41169935, 41161660, 41162105, 41161158, 41162458, 41162731, 41163603, 41163495, 41169324], "A": [41160184, 41161181, 41160522, 41160409, 41160935, 41160830, 41161646, 41160641, 41160349, 41160611, 41175572, 41160281, 41160461, 41160190, 41160493, 41160416, 41161519, 41160623, 41167976]}, "name": "E. Rest In The Shades", "statement": "There is a light source on the plane. This source is so small that it\r\ncan be represented as point. The light source is moving from point (a,\r\ns_y) to the (b, s_y) (s_y < 0) with speed equal to 1 unit per second.\r\nThe trajectory of this light source is a straight segment connecting\r\nthese two points. There is also a fence on OX axis represented as n\r\nsegments (l_i, r_i) (so the actual coordinates of endpoints of each\r\nsegment are (l_i, 0) and (r_i, 0)). The point (x, y) is if segment\r\nconnecting (x,y) and the current position of the light source intersects\r\nor touches with any segment of the fence. You are given q points. For\r\neach point calculate total time of this point being in the shade, while\r\nthe light source is moving from (a, s_y) to the (b, s_y).\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst double eps=1e-9;\nbool equal(double x, double y){\n  return x>y-eps and x<y+eps;\n}\nconst int N=202020;\nLL sy, a, b;\nLL n, l[N], r[N], q, x[N], y[N];\nvector<double> cand;\ndouble jiou(double x1, double y1,\n            double x2, double y2){\n  return x1+(x2-x1)*(0-y1)/(y2-y1);\n}\nint id(double vv){\n  int bl=0, br=cand.size()-1;\n  while(bl <= br){\n    int mid=(bl+br)>>1;\n    if(equal(cand[mid], vv)) return mid+1;\n    if(cand[mid] < vv) bl=mid+1;\n    else br=mid-1;\n  }\n  assert(false);\n  return -1;\n}\n\nint ps[N<<2], sz;\ndouble vps[N<<2], ja[N], jb[N];\nvoid go(){\n  for(int i=0; i<n; i++){\n    ps[id(l[i])]++;\n    ps[id(r[i])]--;\n  }\n  for(int i=1; i<=sz; i++) ps[i]+=ps[i-1];\n  for(int i=2; i<=sz; i++){\n    if(ps[i-1]) vps[i]=cand[i-1]-cand[i-2];\n    vps[i]+=vps[i-1];\n  }\n  for(int i=0; i<q; i++){\n    int i1=id(ja[i]);\n    int i2=id(jb[i]);\n    if(i1 > i2) swap(i1, i2);\n    if(i1 == i2){\n      puts(\"0\");\n      continue;\n    }\n    double tot=cand[i2-1]-cand[i1-1];\n    double has=vps[i2]-vps[i1];\n    printf(\"%.12f\\n\", has*(b-a)/tot);\n  }\n}\n\nint main(){\n  scanf(\"%lld%lld%lld\", &sy, &a, &b);\n  scanf(\"%lld\", &n);\n  for(int i=0; i<n; i++) scanf(\"%lld%lld\", &l[i], &r[i]);\n  scanf(\"%lld\", &q);\n  for(int i=0; i<q; i++) scanf(\"%lld%lld\", &x[i], &y[i]);\n\n  for(int i=0; i<n; i++){\n    cand.push_back(l[i]);\n    cand.push_back(r[i]);\n  }\n  for(int i=0; i<q; i++){\n    cand.push_back(ja[i]=jiou(x[i], y[i], a, sy));\n    cand.push_back(jb[i]=jiou(x[i], y[i], b, sy));\n  }\n  \n  {\n    sort(cand.begin(), cand.end());\n    sz=1;\n    for(size_t i=1; i<cand.size(); i++){\n      if(equal(cand[i], cand[sz-1])) continue;\n      cand[sz++]=cand[i];\n    }\n    cand.resize(sz);\n  }\n  go();\n}\n"], "input": "", "output": "", "tags": ["binary search", "geometry"], "dificulty": "2400", "interactive": false}