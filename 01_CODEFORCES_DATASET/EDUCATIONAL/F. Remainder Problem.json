{"link": "https://codeforces.com//contest/1207/problem/F", "problemId": "393976", "problem_idx": "F", "shortId": "1207F", "contest_number": "1207", "problem_submissions": {"G": [59304889, 59306176, 59301627, 59302407, 59304210, 59305372, 59299826, 59307985, 59309136, 59355235, 59305105, 59306118, 59301046, 59312490, 59309174, 59287118, 59310203, 59295342, 59301224, 59539702, 59539581, 59351316], "F": [59294259, 59294479, 59293703, 59293849, 59293275, 59295696, 59294933, 59295843, 59294771, 59355160, 59296347, 59298285, 59281377, 59296537, 59297200, 59291269, 59286364, 59296630, 59287709, 59292729, 59290075], "E": [59292194, 59292083, 59291434, 59290312, 59295934, 59293256, 59291138, 59291830, 59292503, 59355130, 59293757, 59294706, 59287064, 59293320, 59294341, 59301962, 59302885, 59297608, 59313261, 59287955, 59288580], "D": [59288834, 59287831, 59288996, 59287685, 59289737, 59290739, 59290294, 59288360, 59289950, 59355097, 59292036, 59291781, 72384113, 59294418, 59290806, 59291351, 59299257, 59291468, 59299192, 59306695, 59285530, 59286504], "C": [59285396, 59284651, 59285140, 59282971, 59284725, 59287600, 59288738, 59284263, 59285344, 59354996, 59286662, 59287414, 59304338, 59287720, 59292924, 59296911, 59299362, 59300644, 59304203, 59281217, 59283117], "B": [59279519, 59278225, 59278842, 59278682, 59280115, 59279180, 59278245, 59278492, 59278908, 59354975, 59279326, 59282036, 59291564, 59283101, 59282410, 59293321, 59292638, 59301723, 59308496, 59277604, 59278398], "A": [59275875, 59276003, 59275839, 59276009, 59276337, 59276873, 59279814, 59276133, 59276212, 59354913, 59276348, 59277224, 59276516, 59275776, 59279300, 59292197, 59276302, 59302397, 59275866, 59275778, 59276055]}, "name": "F. Remainder Problem", "statement": "You are given an array a consisting of 500000 integers (numbered from 1\r\nto 500000). Initially all elements of a are zero.You have to process two\r\ntypes of queries to this array: 1 x y increase a_x by y; 2 x y compute\r\nsum\r\nlimits_{i\r\nin R(x, y)} a_i, where R(x, y) is the set of all integers from 1 to\r\n500000 which have remainder y modulo x. Can you process all the queries?\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int d = 700;\nll ans[710][710];\nll a[500010];\nint main() {\n    ios :: sync_with_stdio(0);\n    int n;\n    cin >> n;\n    for(int i = 1; i <= n; i++) {\n        int opt, x, y;\n        cin >> opt >> x >> y;\n        if(opt == 1) {\n            a[x] += y;\n            for(int i = 1; i <= d; i++) ans[i][x % i] += y;\n        }\n        else {\n            if(x <= d) cout << ans[x][y] << endl;\n            else {\n                ll answ = 0;\n                for(int j = y; j <= 500000; j += x) answ += a[j];\n                cout << answ << endl;\n            }\n        }\n    }\n}"], "input": "", "output": "", "tags": ["brute force", "data structures", "implementation"], "dificulty": "2100", "interactive": false}