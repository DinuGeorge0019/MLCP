{"link": "https://codeforces.com//contest/846/problem/F", "problemId": "121002", "problem_idx": "F", "shortId": "846F", "contest_number": "846", "problem_submissions": {"F": [30108156, 30107162, 30106647, 30108328, 30107786, 30107476, 30108023, 30105549, 30105678, 30108397, 30109633, 30109280, 30109385, 30107975, 30110238, 30108732, 30108760, 30110164], "E": [30107342, 30108640, 30109160, 30110715, 30110194, 30109970, 30108774, 30110412, 30109505, 30110880, 30108739, 30110755, 30111630, 30111870, 30111911, 30111723, 30113425, 30111880], "D": [30105892, 30106073, 30106673, 30106266, 30106933, 30108722, 30106872, 30105786, 30108926, 30106473, 30106803, 30107029, 30107512, 30108104, 30109714, 30108207, 30110001, 30111074, 30108770], "C": [30105238, 30104755, 30105662, 30105293, 30106309, 30106223, 30104825, 30107791, 30105043, 30105080, 30106115, 30105906, 30106686, 30106808, 30107246, 30107701, 30107036, 30107208], "B": [30103719, 30103777, 30104242, 30103580, 30104340, 30105094, 30103843, 30104470, 30103928, 30103957, 30104536, 30104441, 30104836, 30104758, 30104309, 30105851, 30104847, 30105774], "A": [30103161, 30103232, 30103250, 30103170, 30103456, 30103369, 30103168, 30103235, 30103196, 30103253, 30103176, 30103313, 30103584, 30103300, 30103249, 30104174, 30103638, 30104542]}, "name": "F. Random Query", "statement": "You are given an array consisting of positive integers. You pick two\r\ninteger numbers and from to , inclusive (numbers are picked randomly,\r\nequiprobably and independently). If , then you swap values of and . You\r\nhave to calculate the expected value of the number of unique elements in\r\nsegment of the array from index to index , inclusive (-indexed).\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n#define N 1048576\nint n , a[ N ] , p[ N ];\nint main(){\n  scanf( \"%d\" , &n );\n  for( int i = 1 ; i <= n ; i ++ )\n    scanf( \"%d\" , &a[ i ] );\n  LL s = 0 , ans = 0;\n  for( int i = 1 ; i <= n ; i ++ ){\n    s += i - p[ a[ i ] ];\n    p[ a[ i ] ] = i;\n    ans += s;\n  }\n  ans = ans + ans - n;\n  double fans = (double)ans / ( (LL)n * n );\n  printf( \"%.12f\\n\" , fans );\n}\n"], "input": "", "output": "", "tags": ["data structures", "math", "probabilities", "two pointers"], "dificulty": "1800", "interactive": false}