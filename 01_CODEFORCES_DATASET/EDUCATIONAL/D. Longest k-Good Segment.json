{"link": "https://codeforces.com//contest/616/problem/D", "problemId": "45347", "problem_idx": "D", "shortId": "616D", "contest_number": "616", "problem_submissions": {"F": [15300786, 15299144, 15300407, 15308014, 15298659, 15302230, 15343881, 15307137, 15302999, 15320984, 15302125, 15301613, 15302389, 16304774], "E": [15294336, 15296370, 15296055, 15299653, 15294693, 15294203, 15295924, 15295314, 15296974, 15298724, 15298421, 15296783, 15296993, 15297669, 15298444, 15297290, 15298438, 15297005, 15297742, 15294191, 15296949], "D": [15292434, 15293329, 15294173, 15292753, 15307747, 15291461, 15292962, 15291869, 15293349, 15311532, 15309884, 15290895, 15292938, 15291478, 15291995, 15292322, 15292029, 15294220, 15293485, 15292134, 15291999, 15296150, 15292776], "C": [15291423, 15291977, 15292603, 15292078, 15290640, 15291851, 15293736, 15291941, 15292201, 15291847, 15290459, 15291357, 15293820, 15291327, 15293027, 15292213, 15291382, 15291194, 15291415, 15291744], "B": [15289897, 15289576, 15290149, 15290568, 15289808, 15289641, 15290425, 15289878, 15289727, 15289729, 15289456, 15290134, 15289943, 15289714, 15290242, 15290500, 15289857, 15289675, 15289746, 15290000], "A": [15289459, 15289308, 15289551, 15290016, 15289415, 15289340, 15289832, 15289405, 15289403, 15289339, 15289246, 15289704, 15289544, 15307602, 15289399, 15289609, 15325750, 15289995, 15289432, 15289359, 15289427, 15289492]}, "name": "D. Longest k-Good Segment", "statement": "The array with integers is given. Let\u2019s call the sequence of one or more\r\nconsecutive elements in . Also let\u2019s call the segment - if it contains\r\nno more than different values.Find any longest -good segment.As the\r\ninput/output can reach huge size it is recommended to use fast\r\ninput/output methods: for example, prefer to use instead of in C++,\r\nprefer to use instead of in .\r\n", "solutions": ["#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n\ntypedef long long ll;\ntypedef double ld;\n\nusing namespace std;\n\nconst int MAXN = 510000;\n\n\nint n, k;\nint arr[MAXN];\n\nint cc[1000010];\n\nint main() {\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 0; i < n; ++i)\n\t\tscanf(\"%d\", arr + i);\n\tint bl = 0;\n\tint br = 0;\n\tint now = 0;\n\tint nk = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\twhile (now < n && (nk < k || (nk == k && cc[arr[now]] != 0))) {\n\t\t\tif (cc[arr[now]] == 0)\n\t\t\t\t++nk;\n\t\t\t++cc[arr[now]];\n\t\t\t++now;\n\t\t}\n\t\tif (now - i > br - bl)\n\t\t\tbl = i, br = now;\n\t\t--cc[arr[i]];\n\t\tif (cc[arr[i]] == 0)\n\t\t\t--nk;\n\t}\n\n\tprintf(\"%d %d\\n\", bl + 1, br);\n\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "two pointers"], "dificulty": "1600", "interactive": false}