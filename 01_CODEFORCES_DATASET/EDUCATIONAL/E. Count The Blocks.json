{
    "link": "https://codeforces.com//contest/1327/problem/E",
    "problemId": "571328",
    "problem_idx": "E",
    "shortId": "1327E",
    "contest_number": "1327",
    "problem_submissions": {
        "F": [
            74109494,
            74096912,
            74114522,
            74102690,
            74088644,
            74096945,
            74118574,
            74105095,
            74095826,
            74113555,
            74098825,
            74097831,
            74105606,
            74109593,
            74101097,
            74708534,
            74098586
        ],
        "G": [
            74091723,
            74123968,
            74123925,
            74114197,
            76629927,
            74211867,
            74588194,
            74135043,
            143583395,
            74127397,
            74126425,
            74105678,
            74715507
        ],
        "B": [
            74068544,
            74058114,
            74057729,
            74055609,
            74062072,
            74057059,
            74054855,
            74056002,
            74059330,
            74057094,
            74057214,
            74063726,
            74054652,
            74058809,
            74054826,
            74057170,
            74057831,
            74708239,
            74069029
        ],
        "E": [
            74063712,
            74072104,
            74084153,
            74095848,
            74069496,
            74077697,
            74073149,
            74081984,
            74074950,
            74080019,
            74086353,
            74075499,
            74090079,
            74089858,
            74078241,
            74086260,
            74708411,
            74085708
        ],
        "C": [
            74060977,
            74064317,
            74075501,
            74070865,
            74062695,
            74059969,
            74061257,
            74063448,
            74063934,
            74060895,
            74069645,
            74078565,
            74065457,
            74072914,
            74062504,
            74072575,
            74708279,
            74073328
        ],
        "D": [
            74058988,
            74081137,
            74080575,
            74087567,
            74078030,
            74085278,
            74068392,
            74068497,
            74084912,
            74069773,
            74079760,
            74085394,
            74082419,
            74068982,
            74073656,
            74080794,
            74708339,
            74079780
        ],
        "A": [
            74048309,
            74098107,
            74049366,
            74047546,
            74050945,
            74048503,
            74046989,
            74047125,
            74048033,
            74048151,
            74049565,
            74047828,
            74047513,
            74049730,
            74046774,
            74049977,
            74047800,
            74708180,
            74063309
        ]
    },
    "name": "E. Count The Blocks",
    "statement": "You wrote down all integers from 0 to 10^n - 1, padding them with\r\nleading zeroes so their lengths are exactly n. For example, if n = 3\r\nthen you wrote out , , ..., , .A block in an integer x is a consecutive\r\nsegment of equal digits that cannot be extended to the left or to the\r\nright.For example, in the integer 00027734000 there are three blocks of\r\nlength 1, one block of length 2 and two blocks of length 3.For all\r\nintegers i from 1 to n count the number of blocks of length i among the\r\nwritten down integers.Since these integers may be too large, print them\r\nmodulo 998244353.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef double db;\nmt19937 mrand(random_device{}()); \nconst ll mod=998244353;\nint rnd(int x) { return mrand() % x;}\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nint n;\nll pw[201000];\nint main() {\n\tscanf(\"%d\",&n);\n\tpw[0]=1;\n\tfor (int i=1;i<=n;i++) pw[i]=pw[i-1]*10%mod;\n\tfor (int i=1;i<=n;i++) {\n\t\tif (i==n) { puts(\"10\"); continue; }\n\t\tint d=0;\n\t\tif (i<=n-2) d=(d+10*(n-i-1)*9*9*pw[n-i-2])%mod;\n\t\td=(d+2*10*9*pw[n-i-1])%mod;\n\t\tprintf(\"%d \",d);\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\E. Count The Blocks.json",
    "editorial_link": "https://codeforces.com//blog/entry/75147",
    "editorial": "Presume that we want to calculate the number of blocks of length len.\r\nLet\u00e2\u0080\u0099s divide this blocks into two types: blocks which first element is a\r\nfirst element of integer, or blocks which last element is a last element\r\nof integer (for example blocks 111 and 0 in integer 11173220); other\r\nblocks. At first let\u00e2\u0080\u0099s calculate the number of blocks of first type. We\r\ncan choose 2 positions of this block (at the start of end of the\r\ninteger). Now we can choose 10 digit for this block. After that we can\r\nchose 9 digits of adjacent block (if these blocks contain the same digit\r\nthen we length of blocks which we want calculate greater than len, so we\r\nhave only 9 variations of digit in adjacent block). Finally, the can\r\nchose the remaining digit 10^{n-len-1} ways.So, the total number of\r\nblock of first type is 2\r\ncdot 10\r\ncdot 9\r\ncdot 10^{n-len-1}.Now let\u00e2\u0080\u0099s calculate the number of blocks of second\r\ntype. We can choose n - len - 1 positions of this block (all position\r\nexcept the start and end of integer). Now we can choose 10 digit for\r\nthis block. After that we can chose 9^2 digits of adjacent block (9 for\r\nblock to the left and 9 for block to the right). Finally, the can chose\r\nthe remaining digit 10^{n len 2} ways.So, the total number of block of\r\nsecond type is (n - len - 1)\r\ncdot 10\r\ncdot 9^2\r\ncdot 10^{n-len-2}.That\u00e2\u0080\u0099s almost all. We have one corner case. If len =\r\nn, then we number of blocks is always 10.\r\n"
}