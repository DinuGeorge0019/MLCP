{"link": "https://codeforces.com//contest/1197/problem/D", "problemId": "376705", "problem_idx": "D", "shortId": "1197D", "contest_number": "1197", "problem_submissions": {"E": [57531154, 57527419, 57524743, 57530013, 57536981, 57526074, 57537246, 57517565, 57532671, 57531296, 57535739, 57533494, 57533139, 57532015, 57531974, 57534465, 57537214, 57536595, 57532983, 57537941], "F": [57526205, 57536510, 57543227, 57542356, 57545070, 57550429, 57543354, 57546681, 57528127, 57549295, 57552678, 57550308, 57548615, 57551319, 57581907, 57549488, 57548121, 57552168, 57768625, 57596008], "D": [57517769, 57521167, 57531349, 57521225, 57523524, 57536466, 57530751, 57531287, 57521039, 57522693, 57521081, 57524029, 57524614, 57523599, 57524677, 65550218, 65550195, 57524514, 57523363, 57524805, 57525867, 57524276], "C": [57514645, 57521161, 57515560, 57517240, 57519467, 57517149, 57517926, 57531832, 57516648, 57519324, 57516744, 57516779, 57517866, 57515185, 57519335, 57518781, 57516998, 57518983, 57516506, 57517063], "B": [57513686, 57521152, 57513883, 57515172, 57516705, 57515562, 57515187, 57532696, 57515047, 57517088, 57514854, 57515032, 57514991, 57513966, 57514537, 57515780, 57514347, 57514964, 57514669, 57515319], "A": [57513085, 57521143, 57513101, 57513203, 57513756, 57513671, 57513230, 57532141, 57513274, 57513512, 57513153, 57513271, 57513173, 57513091, 57513126, 57513220, 57513223, 57513310, 57513141, 57513251]}, "name": "D. Yet Another Subarray Problem", "statement": "You are given an array a_1, a_2,\r\ndots , a_n and two integers m and k.You can choose some subarray a_l,\r\na_{l+1},\r\ndots, a_{r-1}, a_r. The cost of subarray a_l, a_{l+1},\r\ndots, a_{r-1}, a_r is equal to\r\nsum\r\nlimits_{i=l}^{r} a_i - k\r\nlceil\r\nfrac{r - l + 1}{m}\r\nrceil, where\r\nlceil x\r\nrceil is the least integer greater than or equal to x. For example, if m\r\n= 3, k = 10 and a = [2, -4, 15, -3, 4, 8, 3], then the cost of some\r\nsubarrays are: a_3\r\ndots a_3: 15 - k\r\nlceil\r\nfrac{1}{3}\r\nrceil = 15 - 10 = 5; a_3\r\ndots a_4: (15 - 3) - k\r\nlceil\r\nfrac{2}{3}\r\nrceil = 12 - 10 = 2; a_3\r\ndots a_5: (15 - 3 + 4) - k\r\nlceil\r\nfrac{3}{3}\r\nrceil = 16 - 10 = 6; a_3\r\ndots a_6: (15 - 3 + 4 + 8) - k\r\nlceil\r\nfrac{4}{3}\r\nrceil = 24 - 20 = 4; a_3\r\ndots a_7: (15 - 3 + 4 + 8 + 3) - k\r\nlceil\r\nfrac{5}{3}\r\nrceil = 27 - 20 = 7. Your task is to find the maximum cost of some\r\nsubarray (possibly empty) of array a.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst ll INF = (ll)1e18;\nconst int N = 300300;\nconst int M = 10;\nll ans = 0;\nint n, m;\nll k;\nll b[M];\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d%d%lld\", &n, &m, &k);\n\tfor (int i = 0; i < m; i++)\n\t\tb[i] = INF;\n\tb[0] = 0;\n\tll bal = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tll x;\n\t\tscanf(\"%lld\", &x);\n\t\tbal += x;\n\t\tb[i % m] = min(b[i % m], bal - (i / m) * k);\n\t\tfor (int r = 0; r < m; r++) {\n\t\t\tll z = bal - (i / m) * k;\n\t\t\tif (i % m > r) z -= k;\n\t\t\tans = max(ans, z - b[r]);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "greedy", "math"], "dificulty": "1900", "interactive": false}