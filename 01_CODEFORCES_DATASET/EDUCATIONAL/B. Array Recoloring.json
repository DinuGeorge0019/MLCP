{
    "link": "https://codeforces.com//contest/2075/problem/B",
    "problemId": "3273591",
    "problem_idx": "B",
    "shortId": "2075B",
    "contest_number": "2075",
    "problem_submissions": {
        "F": [
            311092897,
            311105371,
            311091977,
            311106822,
            311119612,
            311127395,
            311111998,
            311124374,
            311123265,
            311135481,
            311127374,
            311124949,
            311133033,
            311127513,
            311123593,
            311131608,
            311137578,
            311136881,
            311133323,
            311066636
        ],
        "E": [
            311078477,
            311076658,
            311072206,
            311087192,
            311086935,
            311076933,
            311081142,
            311089235,
            311087311,
            311085142,
            311096896,
            311100487,
            311099554,
            311111156,
            311091394,
            311097405,
            311088422,
            311171203,
            311103877,
            311113693,
            311080280
        ],
        "D": [
            311061322,
            311057750,
            311060365,
            311055119,
            311060010,
            311059723,
            311071257,
            311070356,
            311063998,
            311066698,
            311082700,
            311064184,
            311068410,
            311078395,
            311082862,
            311069076,
            311068306,
            311073979,
            311087117,
            311088989
        ],
        "C": [
            311052044,
            311051318,
            311056183,
            311050640,
            311054145,
            311055185,
            311051870,
            311052149,
            311059642,
            311052003,
            311055738,
            311055390,
            311062256,
            311062646,
            311066843,
            311053249,
            311062988,
            311059819,
            311096162
        ],
        "B": [
            311045239,
            311044707,
            311043555,
            311043641,
            311046416,
            311046113,
            311044758,
            311043793,
            311048255,
            311045137,
            311044396,
            311044990,
            311049796,
            311048015,
            311058751,
            311045105,
            311045287,
            311046394,
            311099408
        ],
        "A": [
            311042018,
            311040390,
            311040326,
            311040380,
            311040339,
            311040623,
            311040931,
            311040288,
            311041987,
            311040424,
            311040342,
            311040291,
            311041844,
            311040490,
            311049977,
            311040412,
            311040468,
            311040975,
            311101264
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/140781",
    "editorial": "Since the cost depends on the first painted elements and the last one,\r\nit cannot exceed the sum of maximum elements of the array. In fact, in\r\nmost cases, you can get exactly that cost.Let and the positions of the\r\nmaxima are . In this case, you can initially color the elements , then\r\nall except , and then color the element last. So the cost is exactly the\r\nsum of maxima. This works because the element we want to color last is\r\nbetween two elements we choose initially.However, if , then whatever\r\nelement we choose and how we color the remaining elements, the first or\r\nthe last element of the array will be the last to be colored. Therefore,\r\nin this case, you can consider two options (and pick the one with the\r\nmaximum cost): the element among the first positions is painted first,\r\nand the -th element is painted last; or the element among the last\r\npositions is painted first, and the -st element is painted last.\r\n",
    "name": "B. Array Recoloring",
    "statement": "You are given an integer array a of size n. Initially, all elements of\r\nthe array are colored red.You have to choose exactly k elements of the\r\narray and paint them blue. Then, while there is at least one red\r\nelement, you have to select any red element with a blue neighbor and\r\nmake it blue.The cost of painting the array is defined as the sum of the\r\nfirst k chosen elements and the last painted element. Your task is to\r\ncalculate the maximum possible cost of painting for the given array.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Array Recoloring.json"
}