{
    "link": "https://codeforces.com//contest/1550/problem/A",
    "problemId": "1045981",
    "problem_idx": "A",
    "shortId": "1550A",
    "contest_number": "1550",
    "problem_submissions": {
        "F": [
            122483395,
            122494928,
            122494758,
            122498831,
            122495349,
            122507186,
            122504855,
            122499174,
            122495286,
            122505655,
            122503411,
            122504082,
            122506733,
            122503920,
            122507265,
            122505173,
            122514546,
            122521422,
            122608494,
            122664141
        ],
        "E": [
            122476565,
            122473503,
            122481437,
            122485433,
            122484524,
            122485212,
            122477724,
            122500057,
            122485157,
            122486711,
            122488337,
            122498290,
            122489523,
            122484119,
            122495271,
            122476181,
            122481232,
            122481328,
            122483526,
            122494342
        ],
        "D": [
            122471547,
            122486544,
            122474791,
            122475055,
            122481071,
            122477408,
            122494393,
            122479516,
            122495901,
            122496325,
            122494541,
            122483595,
            122476325,
            122488807,
            122472450,
            122476646,
            122472723,
            122476521,
            122472515
        ],
        "C": [
            122458749,
            122460413,
            122460329,
            122460157,
            122463960,
            122460682,
            122465581,
            122460735,
            122465109,
            122500532,
            122457985,
            122461570,
            122463484,
            122466793,
            122463616,
            122461328,
            122473999,
            122456442,
            122457482,
            122463020,
            122460109,
            122461048
        ],
        "B": [
            122454763,
            122454362,
            122455252,
            122454378,
            122452343,
            122454794,
            122458968,
            122500982,
            122454363,
            122455298,
            122455088,
            122454989,
            122455874,
            122454863,
            122466413,
            122453075,
            122454714,
            122455929,
            122454807,
            122453314
        ],
        "A": [
            122451771,
            122451821,
            122451970,
            122451770,
            122451715,
            122451928,
            122452304,
            122501407,
            122451789,
            122452298,
            122451870,
            122452153,
            122452203,
            122451998,
            122462780,
            122451777,
            122452058,
            122452234,
            122451766,
            122451752
        ]
    },
    "name": "A. Find The Array",
    "statement": "Let\u2019s call an array a consisting of n positive (greater than 0) integers\r\nif the following condition is held for every i from 1 to n: either a_i =\r\n1, or at least one of the numbers a_i - 1 and a_i - 2 exists in the\r\narray as well.For example: the array [5, 3, 1] is beautiful: for a_1,\r\nthe number a_1 - 2 = 3 exists in the array; for a_2, the number a_2 - 2\r\n= 1 exists in the array; for a_3, the condition a_3 = 1 holds; the array\r\n[1, 2, 2, 2, 2] is beautiful: for a_1, the condition a_1 = 1 holds; for\r\nevery other number a_i, the number a_i - 1 = 1 exists in the array; the\r\narray [1, 4] is not beautiful: for a_2, neither a_2 - 2 = 2 nor a_2 - 1\r\n= 3 exists in the array, and a_2\r\nne 1; the array [2] is not beautiful: for a_1, neither a_1 - 1 = 1 nor\r\na_1 - 2 = 0 exists in the array, and a_1\r\nne 1; the array [2, 1, 3] is beautiful: for a_1, the number a_1 - 1 = 1\r\nexists in the array; for a_2, the condition a_2 = 1 holds; for a_3, the\r\nnumber a_3 - 2 = 1 exists in the array. You are given a positive integer\r\ns. Find the minimum possible size of a beautiful array with the sum of\r\nelements equal to s.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    while (t--) {\n        int s;\n        std::cin >> s;\n        \n        int x = 1;\n        while (x * x < s) {\n            x++;\n        }\n        \n        std::cout << x << \"\\n\";\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Find The Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/92864",
    "editorial": "The maximum sum we can construct with elements is , so we need at least\r\nelements to construct the sum equal to . Let\u00e2\u0080\u0099s show how to express with\r\nexactly elements.Let . By taking , we achieve a sum of using elements.\r\nis not less than and not greater than (since , and ). Thus, we can just\r\nadd to our array, and the sum becomes exactly .So, the solution is to\r\nfind the minimum such that .\r\n"
}