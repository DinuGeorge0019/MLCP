{"link": "https://codeforces.com//contest/1279/problem/B", "problemId": "504274", "problem_idx": "B", "shortId": "1279B", "contest_number": "1279", "problem_submissions": {"E": [67737947, 67733364, 67730576, 67739828, 67742536, 67737172, 67724903, 67736976, 67729524, 67727105, 67747837, 67731683, 67732984, 67748535, 67744932], "F": [67737545, 67718265, 67764598, 67761358, 67761175, 67737082, 67725475, 67770261, 67748335, 67724855, 67743206, 67734760, 67745652, 67744739, 67715547, 67721155, 67752838, 67725507, 67753025, 67734101, 67763755, 67725445, 67752215, 67728799, 67734922, 67753488], "D": [67712365, 67710004, 67715225, 67711743, 67720035, 67741233, 67733656, 67738820, 67706683, 67710710, 67712344, 67716189, 67712742, 67717775, 67716646, 67717595, 67717233, 67714949, 67709766], "C": [67708271, 67707793, 67712401, 67706993, 67715784, 67738909, 67733706, 67739694, 67710632, 67708442, 67708816, 67712768, 67706695, 67710203, 67712897, 67713466, 67711730, 67709788, 67706084], "B": [67703572, 67702979, 67708187, 67704555, 67708809, 67737826, 67733752, 67740661, 67706039, 67703968, 67706335, 67709187, 67703627, 67705748, 67708508, 67710463, 67705061, 67706427, 67703535], "A": [67701146, 67701133, 67701117, 67701163, 67704539, 67735636, 67733784, 67741171, 67702120, 67701143, 67701243, 67701332, 67701184, 67701399, 67702929, 67702323, 67701558, 67701229, 67701070]}, "name": "B. Verse For Santa", "statement": "New Year is coming! Vasya has prepared a New Year\u2019s verse and wants to\r\nrecite it in front of Santa Claus.Vasya\u2019s verse contains n parts. It\r\ntakes a_i seconds to recite the i-th part. Vasya can\u2019t change the order\r\nof parts in the verse: firstly he recites the part which takes a_1\r\nseconds, secondly the part which takes a_2 seconds, and so on. After\r\nreciting the verse, Vasya will get the number of presents equal to the\r\nnumber of parts he fully recited.Vasya can skip at most one part of the\r\nverse while reciting it (if he skips more than one part, then Santa will\r\ndefinitely notice it).Santa will listen to Vasya\u2019s verse for no more\r\nthan s seconds. For example, if s = 10, a = [100, 9, 1, 1], and Vasya\r\nskips the first part of verse, then he gets two presents.Note that it is\r\npossible to recite the whole verse (if there is enough time). Determine\r\nwhich part Vasya needs to skip to obtain the maximum possible number of\r\ngifts. If Vasya shouldn\u2019t skip anything, print . If there are multiple\r\nanswers, print any of them.You have to process t test cases.\r\n", "solutions": ["#include <cmath>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n#include <list>\n#include <time.h>\n#include <math.h>\n#include <random>\n#include <deque>\n#include <queue>\n#include <cassert>\n#include <unordered_map>\n#include <unordered_set>\n#include <iomanip>\n#include <bitset>\n#include <sstream>\n#include <chrono>\n#include <cstring>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#ifdef iq\n  mt19937 rnd(228);\n#else\n  mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\n#endif\n\nint main() {\n#ifdef iq\n  freopen(\"a.in\", \"r\", stdin);\n#endif\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  auto solve = [&] () {\n    int n, s;\n    cin >> n >> s;\n    vector <int> a(n);\n    vector <ll> pref(n);\n    ll t = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      t += a[i];\n      pref[i] = t;\n    }\n    int ans = -1;\n    int pos = -1;\n    for (int skip = 0; skip <= n; skip++) {\n      auto cost = [&] (int i) {\n        if (skip <= i) {\n          return pref[i] - a[skip];\n        } else {\n          return pref[i];\n        }\n      };\n      int l = -1, r = n;\n      while (l < r - 1) {\n        int m = (l + r) / 2;\n        if (cost(m) <= s) {\n          l = m;\n        } else {\n          r = m;\n        }\n      }\n      int was = ans;\n      ans = max(ans, l + 1 - (skip <= l));\n      if (ans != was) pos = skip;\n    }\n    if (pos == n) {\n      cout << 0 << '\\n';\n    } else {\n      cout << pos + 1 << '\\n';\n    }\n  };\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"], "input": "", "output": "", "tags": ["binary search", "brute force", "implementation"], "dificulty": "1300", "interactive": false}