{"link": "https://codeforces.com//contest/600/problem/A", "problemId": "41573", "problem_idx": "A", "shortId": "600A", "contest_number": "600", "problem_submissions": {"E": [14516781, 14521796, 14522661, 14523717, 30527329, 14524644, 14516280, 14515812, 14516214, 14518451, 14519071, 14519248, 14519280, 14518850, 14518744, 14518295, 14521024, 14524030, 14518640, 14519985, 14534724, 14534675], "D": [14515579, 14519010, 14518774, 14521193, 14533916, 14533879, 17533027, 77083288, 14526699, 14520082], "C": [14514280, 14514611, 14515088, 14516246, 14514489, 14514198, 14514520, 14514586, 14514814, 14515845, 14514811, 14514852, 14514847, 14516022, 14513813, 14515214, 14515296, 14517008, 14517583], "B": [14513498, 14513713, 14514312, 14515199, 64489984, 64489958, 64437360, 64437339, 64437310, 64437262, 64437238, 64437187, 64356527, 64356317, 64356304, 64356219, 64356053, 64356040, 64356029, 64355961, 64355802, 64355581, 64355572, 64355497, 64355269, 64355250, 64355067, 64355022, 64355018, 64355008, 64354957, 64354927, 64354893, 64354674, 64354610, 64354604, 64354499, 64354477, 64354377, 64354366, 64354314, 64354299, 64354208, 64354016, 64353840, 64353829, 64353816, 64353659, 64353647, 64353627, 64353521, 64353432, 64353406, 64353383, 64353315, 64353296, 64352793, 64352299, 64352204, 14513750, 14513852, 14513619, 14513719, 14513814, 14513671, 14513567, 14513744, 14513927, 14514916, 14513319, 14514212, 14514452, 14514809, 14515622], "A": [14513396, 14513543, 14514079, 14514797, 14513623, 14513416, 14513555, 14513558, 14513502, 14513418, 14513548, 14513680, 14517095, 14519574, 14514382, 14515226], "F": [15165948, 15165905, 15165817, 110063771, 77143032, 14560500]}, "name": "A. Extract Numbers", "statement": "You are given string . Let\u2019s call any largest sequence of consecutive\r\nsymbols without symbols \u201d (comma) and \u201d (semicolon). For example, there\r\nare four in string \"\": \"\", \"\", \"\", \"\". A word can be empty: for example,\r\nthe string =\"\" contains three empty words separated by \u201d.You should find\r\nall in the given string that are nonnegative INTEGER numbers without\r\nleading zeroes and build by them new string . String should contain all\r\nthat are numbers separating them by \u201d (the order of numbers should\r\nremain the same as in the string ). By all other you should build string\r\nin the same way (the order of numbers should remain the same as in the\r\nstring ).Here strings \"\", \"\" are INTEGER numbers, but \"\" and \"\" are\r\nnot.For example, for the string the string would be equal to \"\" and\r\nstring would be equal to \"\".\r\n", "solutions": ["/*\nYeah\n\nHere she comes again, she's feeling like she's already won\nI believe it's gonna end again, all for naught\nMy philosophy is things are just as wrong as they seem\nI believe it's gonna end this way, atrocity\n\nDo you believe in love like I believe in pain\nNobody died for you, somebody pray for me\n\nWhen you see me cut me down\nAnd I will force it underground\nThere's no one left to hurt but me\nAnd it's because of me, right?\n\nThere he walks away, he's feeling like he's having them on\nI believe he's gonna bend again and all for no\nMy philosophy is things are just as wrong as they seem\nI've gotta get you off of my mind, in oddity\n\nDo you believe in love like I believe in pain\nNobody died for you, somebody pray for me\n\nWhen you see me cut me down\nAnd I will force it underground\nThere's no one left to hurt but me\nAnd it's because of me, right?\n\nI want to see you suffer, suffer\n\nWhen you see me cut me down\nAnd I will force it underground\nThere's no one left to hurt but me\nAnd it's because of me, right?\n\nWhen you see me cut me down\nAnd when you see me cut me down\nAnd when you see me cut me down\nAnd it's because of me, suffer\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>  \n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <ctime> \n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bs 1000000007\n#define bsize 512\n\nconst int N = 100005;\n\nusing namespace std;\n\nstring st;\nvector<string> v1,v2;\n\nbool good(string st)\n{\n\tif (st.size()==0)\n\t\treturn false;\n\tfor (int i=0;i<st.size();i++)\n\t\tif (st[i]<'0'||st[i]>'9')\n\t\t\treturn false;\n\tif (st.size()>1&&st[0]=='0')\n\t\treturn false;\n\treturn true;\n}\n\nvoid add_string(string st)\n{\n\tif (good(st))\n\t\tv1.push_back(st);\n\telse\n\t\tv2.push_back(st);\n}\nint main(){\n\t//freopen(\"beavers.in\",\"r\",stdin);\n\t//freopen(\"beavers.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\",\"r\",stdin);\n\t//freopen(\"F:/output.txt\",\"w\",stdout);\n\tios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\t\n\tgetline(cin,st);\n\t\n\tstring temp=\"\";\n\t\n\tfor (int i=0;i<st.size();i++)\n\t{\n\t\tif (st[i]==';'||st[i]==',')\n\t\t{\n\t\t\tadd_string(temp);\n\t\t\ttemp=\"\";\n\t\t}\n\t\telse\n\t\t\ttemp+=st[i];\n\t}\n\t\n\tadd_string(temp);\n\t\n\tif (v1.size()==0)\n\t\tcout<<\"-\"<<endl;\n\telse\n\t{\n\t\tcout<<\"\\\"\";\n\t\tfor (int i=0;i<v1.size();i++)\n\t\t{\n\t\t\tif (i)\n\t\t\t\tcout<<\",\";\n\t\t\tcout<<v1[i];\n\t\t}\n\t\tcout<<\"\\\"\";\n\t\tcout<<endl;\n\t}\n\t\n\tif (v2.size()==0)\n\t\tcout<<\"-\"<<endl;\n\telse\n\t{\n\t\tcout<<\"\\\"\";\n\t\tfor (int i=0;i<v2.size();i++)\n\t\t{\n\t\t\tif (i)\n\t\t\t\tcout<<\",\";\n\t\t\tcout<<v2[i];\n\t\t}\n\t\tcout<<\"\\\"\";\n\t\tcout<<endl;\n\t}\n\t\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1600", "interactive": false}