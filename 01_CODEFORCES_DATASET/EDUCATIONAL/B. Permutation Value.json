{
    "link": "https://codeforces.com//contest/1743/problem/B",
    "problemId": "1590317",
    "problem_idx": "B",
    "shortId": "1743B",
    "contest_number": "1743",
    "problem_submissions": {
        "G": [
            176744926,
            176752632,
            176765710,
            176759446,
            176826731,
            176825958,
            176825876,
            176825841,
            176825795,
            176825757,
            176777747,
            176767399,
            176787833,
            176794001,
            176793915,
            176793787,
            176793693,
            176793601,
            176793457,
            176793414,
            176793075,
            176792582,
            176790966,
            176790830,
            176790739,
            176790602,
            176790480,
            176790442,
            176790394,
            176877236,
            176797381,
            177041275
        ],
        "F": [
            176737097,
            176733706,
            176744244,
            176746662,
            176734362,
            176741223,
            176737910,
            176729577,
            176742322,
            176771541,
            176747634,
            176866127,
            176744359,
            176742533,
            176764904,
            176749314,
            176748844,
            176759565,
            176751246,
            176746192,
            176742294,
            176760205
        ],
        "E": [
            176732507,
            176757486,
            176736176,
            176739966,
            176749212,
            176748013,
            176727666,
            176739006,
            176729866,
            176763689,
            176763186,
            176762781,
            176756640,
            176764718,
            176740887,
            176756959,
            176787283,
            176742950,
            176761500,
            176766019,
            176770369,
            176749818
        ],
        "D": [
            176723746,
            176718140,
            176716615,
            176721411,
            176719450,
            176723698,
            176718782,
            176720745,
            176721715,
            176722102,
            176729581,
            176725500,
            176730292,
            176719597,
            176730936,
            176731941,
            176724207,
            176723731,
            176736911
        ],
        "C": [
            176716029,
            176704815,
            176706962,
            176708929,
            176705118,
            176704124,
            176715109,
            176705993,
            176708271,
            176707432,
            176707937,
            176714968,
            176710289,
            176708841,
            176705755,
            176710426,
            176713787,
            176707796,
            176708736,
            176710057
        ],
        "B": [
            176712751,
            176699478,
            176698683,
            176699488,
            176698322,
            176698046,
            176699875,
            176699384,
            176699501,
            176699739,
            176704430,
            176700303,
            176700238,
            176699124,
            176702452,
            176707386,
            176700133,
            176698867,
            176703708
        ],
        "A": [
            176712234,
            176698003,
            176697838,
            176697817,
            176697799,
            176697771,
            176697968,
            176697810,
            176698111,
            176698066,
            176699952,
            176697901,
            176698001,
            176697928,
            176699293,
            176697926,
            176697958,
            176697832,
            176698850
        ]
    },
    "name": "B. Permutation Value",
    "statement": "You are given an integer n. You have to construct a permutation of size\r\nn.A is an array where each integer from 1 to s (where s is the size of\r\npermutation) occurs exactly once. For example, [2, 1, 4, 3] is a\r\npermutation of size 4; [1, 2, 4, 5, 3] is a permutation of size 5; [1,\r\n4, 3] is not a permutation (the integer 2 is absent), [2, 1, 3, 1] is\r\nnot a permutation (the integer 1 appears twice).A of a permutation is a\r\ncontiguous subsequence of that permutation. For example, the permutation\r\n[2, 1, 4, 3] has 10 subsegments: [2], [2, 1], [2, 1, 4], [2, 1, 4, 3],\r\n[1], [1, 4], [1, 4, 3], [4], [4, 3] and [3].The of the permutation is\r\nthe number of its subsegments which are also permutations. For example,\r\nthe value of [2, 1, 4, 3] is 3 since the subsegments [2, 1], [1] and [2,\r\n1, 4, 3] are permutations.You have to construct a permutation of size n\r\nwith among all permutations of size n.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n;\n    std::cin >> n;\n    \n    std::cout << 1;\n    for (int i = n; i > 1; i--) {\n        std::cout << \" \" << i;\n    }\n    std::cout << \"\\n\";\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Permutation Value.json",
    "editorial_link": "https://codeforces.com//blog/entry/108153",
    "editorial": "The subsegment , as well as the whole permutation, will always be a\r\npermutation, so the value is at least . Letâs try to find a way to\r\ngenerate a permutation of elements with value equal to .Every\r\npermutation must contain the number . Letâs try to construct the answer\r\nin such a way that if a subsegment contains the number , then it also\r\ncontains the number (if it is so, it can only be a permutation if it\r\ncontains all numbers). If we begin our permutation with the numbers and\r\n, we will reach our goal: the only subsegment which does not contain but\r\ncontains is , and the only subsegment which contains and also a\r\npermutation is the whole permutation itself. So, any permutation that\r\nbegins with can be the answer.\r\n",
    "hint": []
}