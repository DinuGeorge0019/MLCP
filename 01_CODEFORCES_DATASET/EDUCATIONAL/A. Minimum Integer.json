{
    "link": "https://codeforces.com//contest/1101/problem/A",
    "problemId": "281054",
    "problem_idx": "A",
    "shortId": "1101A",
    "contest_number": "1101",
    "problem_submissions": {
        "G": [
            48239479,
            48229345,
            48232833,
            48236005,
            48238584,
            48237077,
            48239817,
            48236726,
            48424442,
            48241897,
            48244236,
            48246271,
            48243763,
            48241853,
            48248346,
            48243669,
            48239804,
            48232428,
            48236056,
            48233716
        ],
        "F": [
            48234729,
            48238339,
            48245658,
            48241971,
            48243102,
            48243980,
            48248208,
            48253790,
            48249237,
            48251881,
            48251772,
            48254209,
            48250740,
            48252733,
            48257301,
            48253052,
            48236429,
            48245061,
            48242715,
            48241926,
            48292686,
            48258183
        ],
        "E": [
            48227685,
            48224274,
            48222676,
            48226514,
            48225235,
            48225759,
            48224993,
            48229382,
            48234805,
            48231496,
            48237158,
            48276590,
            48233129,
            48237913,
            48231111,
            48230324,
            48226575,
            48224137,
            48222074,
            48228244,
            48223937
        ],
        "D": [
            48225904,
            132803821,
            132802920,
            48232171,
            48230596,
            48230036,
            48246912,
            48230700,
            48231186,
            48232249,
            48228292,
            48232968,
            48229870,
            48235723,
            48238573,
            48253038,
            48236119,
            48237471,
            48242160,
            48224926,
            48233664,
            48227806,
            48238739,
            48236228
        ],
        "C": [
            48220755,
            48221737,
            48220938,
            48222851,
            48222128,
            48224023,
            48222001,
            48221817,
            48228289,
            48227053,
            48229439,
            48222389,
            48224672,
            48228555,
            48228217,
            48221108,
            48222667,
            48220453,
            48229806,
            48227541
        ],
        "B": [
            48218348,
            48218521,
            48218025,
            48219067,
            48219419,
            48219511,
            48219183,
            48218594,
            48221174,
            48217036,
            48221983,
            48224393,
            48219257,
            48217297,
            48224770,
            48217931,
            48218900,
            50490666,
            48220404,
            48221056
        ],
        "A": [
            48216068,
            48216088,
            48215851,
            48216101,
            48215964,
            48215856,
            48216330,
            48216376,
            48215843,
            48215822,
            48218304,
            48215863,
            48216823,
            48215814,
            48216519,
            48216032,
            48215829,
            48216427,
            48216203
        ]
    },
    "name": "A. Minimum Integer",
    "statement": "You are given q queries in the following form:.Can you answer all the\r\nqueries?.\r\n",
    "solutions": [
        "#include <algorithm>  \n#include <iostream>  \n#include <sstream>  \n#include <string>  \n#include <vector>  \n#include <queue>  \n#include <set>  \n#include <map>  \n#include <cstdio>  \n#include <cstdlib>  \n#include <cctype>  \n#include <cmath>  \n#include <cstring>\n#include <list>  \n#include <cassert>\n#include <climits>\n#include <bitset>\nusing namespace std;  \n\n#define PB push_back  \n#define MP make_pair  \n#define SZ(v) ((int)(v).size())  \n#define FOR(i,a,b) for(int i=(a);i<(b);++i)  \n#define REP(i,n) FOR(i,0,n)  \n#define FORE(i,a,b) for(int i=(a);i<=(b);++i)  \n#define REPE(i,n) FORE(i,0,n)  \n#define FORSZ(i,a,v) FOR(i,a,SZ(v))  \n#define REPSZ(i,v) REP(i,SZ(v))  \ntypedef long long ll;  \nint gcd(int a,int b) { return b==0?a:gcd(b,a%b); }\n\nint l,r,d;\n\nint solve() {\n\tif(d<l) return d;\n\treturn (r/d+1)*d;\n}\n\nvoid run() {\n\tscanf(\"%d%d%d\",&l,&r,&d);\n\tprintf(\"%d\\n\",solve());\n}\n\nint main() {\n\tint n; scanf(\"%d\",&n); FORE(i,1,n) run();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Minimum Integer.json",
    "editorial_link": "https://codeforces.com/blog/entry/64483",
    "editorial": "There are two basic cases we have to consider: either the element we\r\nwant to find is less than , or it is greater than .In the first case, we\r\nare interested in itself: it is the minimum positive number divisible by\r\n, and if it is less than , then it is the answer.In the second case, we\r\nhave to find minimum element that is greater than and is divisible by .\r\nThis can be done as follows: we calculate the number of elements\r\ndivisible by that are not greater than as , and then we take -th\r\nelement, which is .\r\n",
    "hint": []
}