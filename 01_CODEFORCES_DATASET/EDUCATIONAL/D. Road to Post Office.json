{
    "link": "https://codeforces.com//contest/702/problem/D",
    "problemId": "66881",
    "problem_idx": "D",
    "shortId": "702D",
    "contest_number": "702",
    "problem_submissions": {
        "E": [
            19486872,
            19487666,
            19486777,
            19488022,
            19488501,
            19486952,
            19489405,
            19490682,
            19489522,
            19488617,
            19490923,
            19486709,
            19522484,
            19490874,
            19489785,
            19489723,
            19491945,
            19490147,
            19488259
        ],
        "D": [
            19485847,
            19522818,
            19484850,
            19484926,
            19486392,
            19486665,
            19485668,
            19486132,
            19485860,
            19486710,
            19487180,
            19486570,
            19489538,
            19522515,
            19522418,
            19486300,
            19487524,
            19487454,
            19488567,
            19487473,
            19486660
        ],
        "C": [
            19483715,
            19483569,
            19483475,
            19484435,
            19484197,
            19484188,
            19484516,
            19484086,
            19484332,
            19484785,
            19484582,
            19484825,
            19522492,
            19484774,
            19485083,
            19485937,
            19486251,
            19485322,
            19485133
        ],
        "B": [
            19482582,
            19482877,
            19482445,
            19483458,
            19483246,
            19482500,
            19483149,
            19482917,
            19482947,
            19483579,
            19483004,
            19483922,
            19522499,
            19483767,
            19483896,
            19483055,
            19484158,
            19483561,
            19484180
        ],
        "A": [
            19482266,
            19482419,
            19482207,
            19482228,
            19482294,
            19482199,
            19482499,
            19482303,
            19482312,
            19482233,
            19482288,
            19482949,
            19522504,
            19482543,
            19482505,
            19484313,
            19482461,
            19482547,
            19482286
        ],
        "F": [
            127799040,
            19527903,
            19529247,
            19529141,
            19523290,
            19514117,
            19501229
        ]
    },
    "name": "D. Road to Post Office",
    "statement": "Vasiliy has a car and he wants to get from home to the post office. The\r\ndistance which he needs to pass equals to kilometers.Vasiliyâ€™s car is\r\nnot new it breaks after driven every kilometers and Vasiliy needs\r\nseconds to repair it. After repairing his car Vasiliy can drive again\r\n(but after kilometers it will break again, and so on). In the beginning\r\nof the trip the car is just from repair station.To drive one kilometer\r\non car Vasiliy spends seconds, to walk one kilometer on foot he needs\r\nseconds ().Your task is to find minimal time after which Vasiliy will be\r\nable to reach the post office. Consider that in every moment of time\r\nVasiliy can left his car and start to go on foot.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef signed long long ll;\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define FOR(x,to) for(x=0;x<(to);x++)\n#define FORR(x,arr) for(auto& x:arr)\n#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)\n#define ALL(a) (a.begin()),(a.end())\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\n//-------------------------------------------------------\n\nll D,K,A,B,T;\n\nvoid solve() {\n\tint i,j,k,l,r,x,y; string s;\n\t\n\tcin>>D>>K>>A>>B>>T;\n\tif(A*K+T>=B*K) {\n\t\tcout<<min(D,K)*A + max(0LL,D-K)*B << endl;\n\t}\n\telse {\n\t\tll mi=1LL<<60;\n\t\tfor(x=0;x<=min(D,K);x++) {\n\t\t\tll mv=D-x;\n\t\t\tll fix=max(0LL,(mv+K-1)/K-1);\n\t\t\tmi=min(mi,x*B + A*(D-x) + fix*T);\n\t\t}\n\t\tcout<<mi<<endl;\n\t}\n}\n\n\nint main(int argc,char** argv){\n\tstring s;int i;\n\tif(argc==1) ios::sync_with_stdio(false), cin.tie(0);\n\tFOR(i,argc-1) s+=argv[i+1],s+='\\n';\n\tFOR(i,s.size()) ungetc(s[s.size()-1-i],stdin);\n\tsolve(); return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\D. Road to Post Office.json",
    "editorial_link": "https://codeforces.com//blog/entry/46324?locale=en",
    "editorial": "To solve this problem we need to analyze some cases.If then Vasiliy can\r\nride car all road without breaking, so the answer is .If (i. e. it is\r\nbetter to do not repair the car), Vasiliy must ride car the first\r\nkilometers and then walks on foot, so the answer is .The only case left\r\nwhen it is better to ride car through all road until kilometers left.\r\nNow we need to understand what better repair the car and ride or do not\r\nrepair the car and walk on foot. Let , so Vasiliy necessarily must\r\nrepair the car times. Then the answer equals to .\r\n",
    "hint": []
}