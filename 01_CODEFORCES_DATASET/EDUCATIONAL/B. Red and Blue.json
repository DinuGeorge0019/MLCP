{
    "link": "https://codeforces.com//contest/1469/problem/B",
    "problemId": "847527",
    "problem_idx": "B",
    "shortId": "1469B",
    "contest_number": "1469",
    "problem_submissions": {
        "F": [
            102583473,
            102644474,
            102589987,
            102594210,
            102598891,
            102606787,
            102602998,
            102604144,
            102603740,
            102665234,
            102604943,
            102600529,
            102596981,
            102695061,
            102694126,
            102693059,
            102692990,
            102691774,
            102691554,
            102634847,
            102593976,
            102601060,
            102611713,
            102611193,
            102613178,
            102615015,
            102610571,
            133243413,
            102609965,
            102615327
        ],
        "E": [
            102573843,
            102644473,
            102578949,
            102577732,
            102585110,
            102591945,
            102586477,
            102582817,
            102595462,
            102579611,
            102664687,
            102648095,
            102648064,
            102594234,
            102584569,
            102634471,
            102624399,
            102623518,
            102608733,
            155214938,
            102768106,
            102593726,
            102593694,
            102597495,
            102592373,
            102595193,
            102588652,
            102589423,
            102593264
        ],
        "D": [
            102562850,
            102644472,
            102568881,
            102566821,
            102569601,
            102570954,
            102563048,
            102571352,
            102588415,
            102664675,
            102570617,
            102572568,
            102569075,
            102580450,
            102569951,
            102575804,
            102575811,
            102574711,
            102577038,
            102579322,
            102570202
        ],
        "C": [
            102552805,
            102644471,
            102555513,
            102554730,
            102555597,
            102558406,
            102554980,
            102553952,
            102556321,
            102664664,
            102560782,
            102559861,
            102555651,
            102570770,
            102554929,
            102563292,
            102558262,
            102561567,
            102566610,
            102569771,
            102557739
        ],
        "B": [
            102548072,
            102644469,
            102548784,
            102547413,
            102549611,
            102549952,
            102549039,
            102547745,
            102550684,
            102664647,
            102553929,
            102550781,
            102634199,
            102551181,
            102557688,
            102550308,
            102552089,
            102551269,
            102550296,
            102555698,
            102550742,
            102551593
        ],
        "A": [
            102546848,
            102644467,
            102547134,
            102546803,
            102547541,
            102546863,
            102546919,
            102546821,
            102547947,
            102664636,
            102549491,
            102548928,
            102547577,
            102555388,
            102547472,
            102548992,
            102546835,
            102546964,
            102551041,
            102547957,
            102549438
        ]
    },
    "name": "B. Red and Blue",
    "statement": "Monocarp had a sequence a consisting of n + m integers a_1, a_2,\r\ndots, a_{n + m}. He painted the elements into two colors, red and blue;\r\nn elements were painted red, all other m elements were painted\r\nblue.After painting the elements, he has written two sequences r_1, r_2,\r\ndots, r_n and b_1, b_2,\r\ndots, b_m. The sequence r consisted of all red elements of a ;\r\nsimilarly, the sequence b consisted of all blue elements of a\r\n.Unfortunately, the original sequence was lost, and Monocarp only has\r\nthe sequences r and b. He wants to restore the original sequence. In\r\ncase there are multiple ways to restore it, he wants to choose a way to\r\nrestore that maximizes the value of f(a) =\r\nmax(0, a_1, (a_1 + a_2), (a_1 + a_2 + a_3),\r\ndots, (a_1 + a_2 + a_3 +\r\ndots + a_{n + m}))Help Monocarp to calculate the maximum possible value\r\nof f(a).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing i64 = long long;\nusing u64 = unsigned long long;\nusing u32 = unsigned;\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    int t;\n    std::cin >> t;\n    while (t--) {\n        int n;\n        std::cin >> n;\n        int mx0 = 0, mx1 = 0, s = 0;\n        for (int i = 0; i < n; ++i) {\n            int x;\n            std::cin >> x;\n            s += x;\n            mx0 = std::max(mx0, s);\n        }\n        s = 0;\n        int m;\n        std::cin >> m;\n        for (int i = 0; i < m; ++i) {\n            int x;\n            std::cin >> x;\n            s += x;\n            mx1 = std::max(mx1, s);\n        }\n        std::cout << mx0 + mx1 << \"\\n\";\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Red and Blue.json",
    "editorial_link": "https://codeforces.com//blog/entry/86082",
    "editorial": "Denote as the sum of first elements of , and as the sum of first\r\nelements of . These values can be calculated in with prefix sums.The\r\nfirst solution is to use dynamic programming. Let be the maximum value\r\nof if we placed the first elements of and the first elements of .\r\nTransitions can be performed in : we either place an element from (then\r\nwe go to and update it with ), or place an element from (then we go to\r\nand update it with ). The answer is stored in , and this solution works\r\nin .The second solution: observe that the sum of several first elements\r\nof is the sum of several first elements of and several first elements of\r\n. So each prefix sum of (and the answer itself) is not greater than .\r\nIt\u00e2\u0080\u0099s easy to show how to obtain exactly this answer: let be the value of\r\nsuch that is maximized, and be the value of such that is maximized.\r\nLet\u00e2\u0080\u0099s place the first elements of , then the first elements of (so the\r\ncurrent sum is exactly ), and place all of the remaining elements in any\r\npossible order. So, the answer is . This solution works in .\r\n"
}