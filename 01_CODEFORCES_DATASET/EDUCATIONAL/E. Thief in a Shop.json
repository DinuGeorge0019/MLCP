{"link": "https://codeforces.com//contest/632/problem/E", "problemId": "50147", "problem_idx": "E", "shortId": "632E", "contest_number": "632", "problem_submissions": {"F": [16449954, 16449774, 16448025, 16447543, 16474130, 16447469, 16465805, 16465734, 16449676, 16449356, 16449961, 16450068, 16557410, 16449769, 16450214, 16449702, 16464012], "E": [16447028, 16449753, 16445979, 16453840, 16453803, 16448350, 16447568, 16449040, 16605043, 16448762, 16447224, 16448913, 16449761, 128072075, 44908882, 16457507], "D": [16446074, 16445153, 16444353, 16454357, 16446366, 16445038, 16445634, 16444742, 16453325, 16445984, 16447854, 16446133, 16445283, 16446954, 16447982, 16445318, 16444664, 16445724], "C": [16444421, 16444120, 16443606, 16443645, 16445009, 16444221, 16444738, 16443779, 16445075, 16444107, 16445524, 16449207, 16450843, 16448580, 16448209, 16447449, 16444580, 16444579, 16443960, 16444153, 24720150, 24720135], "B": [16443783, 16443777, 16443815, 16443887, 16444524, 16444113, 16444187, 16451169, 16443637, 16443942, 16443903, 16444676, 16444341, 16444136, 16444765, 16447115, 16444024, 16443821, 16443819], "A": [16443584, 16443594, 16443558, 16443577, 16443765, 16443750, 16443746, 16445513, 16443626, 16443702, 16443955, 16443808, 16443676, 16444067, 16446687, 16443663, 16443559, 16443628]}, "name": "E. Thief in a Shop", "statement": "A thief made his way to a shop.As usual he has his lucky knapsack with\r\nhim. The knapsack can contain objects. There are kinds of products in\r\nthe shop and an infinite number of products of each kind. The cost of\r\none product of kind is .The thief is greedy, so he will take exactly\r\nproducts (it\u2019s possible for some kinds to take several products of that\r\nkind).Find all the possible total costs of products the thief can nick\r\ninto his knapsack.\r\n", "solutions": ["#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n\ntypedef long long ll;\ntypedef long double ld;\n\nusing namespace std;\n\nint n, k;\nint dp[1000010];\nvector<int> vv;\n\nint main() {\n\tcin >> n >> k;\n\tint mn = 10000;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint a;\n\t\tcin >> a;\n\t\tmn = min(mn, a);\n\t\tvv.push_back(a);\n\t}\n\tfor (int i = 0; i < (int)vv.size(); ++i)\n\t\tvv[i] -= mn;\n\tsort(vv.begin(), vv.end());\n\tvv.resize(unique(vv.begin(), vv.end()) - vv.begin());\n\tint mx = k * vv.back();\n\tfor (int j = 0; j <= mx; ++j)\n\t\tdp[j] = k + 1;\n\tdp[0] = 0;\n\tfor (int i = 0; i < (int)vv.size(); ++i) {\n\t\tint x = vv[i];\n\t\tif (x == 0)\n\t\t\tcontinue;\n\t\tfor (int j = 0; j <= mx - x; ++j)\n\t\t\tdp[j + x] = min(dp[j + x], dp[j] + 1);\n\t}\n\tfor (int i = 0; i <= mx; ++i)\n\t\tif (dp[i] <= k)\n\t\t\tprintf(\"%d \", mn * k + i);\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["divide and conquer", "dp", "fft", "math"], "dificulty": "2400", "interactive": false}