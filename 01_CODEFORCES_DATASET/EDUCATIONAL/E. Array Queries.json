{
    "link": "https://codeforces.com//contest/797/problem/E",
    "problemId": "103032",
    "problem_idx": "E",
    "shortId": "797E",
    "contest_number": "797",
    "problem_submissions": {
        "F": [
            26392422,
            26393656,
            26389980,
            26393053,
            26392770,
            26393200,
            26401058,
            26400600,
            26393845,
            26538858,
            26399564,
            26404933
        ],
        "E": [
            26384593,
            26386641,
            26387413,
            26384179,
            26390646,
            26385085,
            26384145,
            26385218,
            26385422,
            26383237,
            26385301,
            26385048,
            26387123,
            26383986,
            26385186,
            26383971,
            26385690,
            26386757,
            26387505
        ],
        "D": [
            26383853,
            26385506,
            26386518,
            26386869,
            26388006,
            26386076,
            26386759,
            26387198,
            26384655,
            26384909,
            26400699,
            26386910,
            26386839,
            26385859,
            26386865,
            26387340,
            26385970,
            26387551,
            26388539,
            26386426
        ],
        "C": [
            26382881,
            26383936,
            26385046,
            26385741,
            26385840,
            26383373,
            26384974,
            26383476,
            26383055,
            26382583,
            26383371,
            26383953,
            26383269,
            26383187,
            26384315,
            26382972,
            26384647,
            26385000,
            26382428
        ],
        "B": [
            26382061,
            26382225,
            26383108,
            26384548,
            26383123,
            26382179,
            26382430,
            26382528,
            26381992,
            26382016,
            26382484,
            26382716,
            26382235,
            26382138,
            26382837,
            26382347,
            26382410,
            26382477,
            26381988
        ],
        "A": [
            26381703,
            26381847,
            26382576,
            26383357,
            26382358,
            26381775,
            26381835,
            26381732,
            26381711,
            26381736,
            26381944,
            26381723,
            26381696,
            26381784,
            26381802,
            26381687,
            26381777,
            26381801,
            26381706
        ]
    },
    "name": "E. Array Queries",
    "statement": "is an array of positive integers, all of which are not greater than .You\r\nhave to process queries to this array. Each query is represented by two\r\nnumbers and . Several operations are performed in each query; each\r\noperation changes to . There operations are applied until becomes\r\ngreater than . The answer to the query is the number of performed\r\noperations.\r\n",
    "solutions": [
        "// In the name of God\n\n#include <iostream>\n#include <algorithm>\n#include <fstream>\n#include <vector>\n#include <deque>\n#include <assert.h>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <stdio.h>\n#include <string.h>\n#include <utility>\n#include <math.h>\n#include <bitset>\n#include <iomanip>\n#include <complex>\n\nusing namespace std;\n\n#define rep(i, a, b) for (int i = (a), i##_end_ = (b); i < i##_end_; ++i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mp make_pair\n#define x first\n#define y second\n#define pb push_back\n#define SZ(x) (int((x).size()))\n#define ALL(x) (x).begin(), (x).end()\n\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool smin(T &a, const T &b)   { return a > b ? a = b : a;    }\ntemplate<typename T> inline bool smax(T &a, const T &b)   { return a < b ? a = b : a;    }\n\ntypedef long long LL;\n\nconst int N = (int) 1e5 + 5, sq = 330, mod = (int) 0;\nint dp[sq + 2][N], a[N];\nint main() {\n\tios_base::sync_with_stdio(0);\n\tint n;\n\tcin >> n;\n\tfor (int j = 0; j < n; ++j)\n\t\tcin >> a[j];\n\tfor (int jump = 1; jump <= sq; ++jump) {\n\t\tfor (int j = n - 1; j >= 0; --j) {\n\t\t\tint nxt = j + a[j] + jump;\n\t\t\tif (nxt >= n) {\n\t\t\t\tdp[jump][j] = 1;\n\t\t\t} else {\n\t\t\t\tdp[jump][j] = dp[jump][nxt] + 1;\n\t\t\t}\n\t\t}\n\t}\n\tint q;\n\tcin >> q;\n\twhile (q--) {\n\t\tint res = 0, pos, k;\n\t\tcin >> pos >> k;\n\t\t--pos;\n\t\tif (k <= sq) {\n\t\t\tcout << dp[k][pos] << '\\n';\n\t\t\tcontinue;\n\t\t}\n\t\twhile (pos < n) {\n\t\t\t++res;\n\t\t\tpos = pos + a[pos] + k;\n\t\t}\n\t\tcout << res << '\\n';\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\E. Array Queries.json",
    "editorial_link": "https://codeforces.com//blog/entry/51588",
    "editorial": "There are two possible solutions in time.First of them answers each\r\nquery using simple iteration changes to for each query until becomes\r\ngreater than , as stated in the problem. But it is too slow.Second\r\nsolution precalculates answers for each and : if , then , else . But\r\nthis uses memory and can be done in time.Now we can notice that if ,\r\nthen second solution will use only time and memory, and if , then first\r\nsolution will do not more than operations on each query. So we can\r\ncombine these two solutions.Time complexity: .\r\n",
    "hint": []
}