{"link": "https://codeforces.com//contest/1913/problem/C", "problemId": "2387089", "problem_idx": "C", "shortId": "1913C", "contest_number": "1913", "problem_submissions": {"F": [237765417, 237786045, 237798410, 237793751, 237794290, 237782267, 237795023, 237800140, 237807937, 237810699, 237812614, 249487858, 249487734, 237811339, 237810034, 237786173, 237918310, 238095706, 238317726, 238317705, 238317604, 238062834, 238062445, 237828170], "E": [237747038, 237760786, 237768219, 237770076, 237769118, 237750176, 237762212, 237777254, 237781408, 237770526, 237770804, 237785103, 237769588, 237762037, 237767968, 237768315, 237776019, 237777315, 237775619], "D": [237741941, 237751825, 237754635, 237754576, 237759161, 237795697, 237798473, 237753926, 237756867, 237764842, 237762933, 237761396, 237809126, 237799893, 237754034, 237759987, 237761087, 237760420, 237755829, 237761290], "C": [237735693, 237739173, 237740092, 237741221, 237739010, 237738520, 237799594, 237738193, 237740375, 237744478, 237744080, 237745844, 237762290, 237803855, 237741083, 237740358, 237744813, 237743742, 237745330, 237745113], "B": [237734023, 237735619, 237736194, 237737923, 237736443, 237735162, 237800569, 237735958, 237737285, 237740748, 237737318, 237739744, 237743140, 237806408, 237735801, 237736968, 237740846, 237738174, 237741145, 237740499], "A": [237733399, 237733472, 237733545, 237733680, 237733544, 237733357, 237734167, 237733513, 237734405, 237733701, 237733822, 237734094, 237807435, 237733584, 237733737, 237733530, 237733681, 237735085, 237733871]}, "name": "C. Game with Multiset", "statement": "In this problem, you are initially given an empty multiset. You have to\r\nprocess two types of queries: x add an element equal to 2^{x} to the\r\nmultiset; w say whether it is possible to take the sum of some subset of\r\nthe current multiset and get a value equal to w.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 18.12.2023 09:38:49       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  vector<int> cnt(30);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    string op;\n    cin >> op;\n    if (op == \"1\") {\n      int x;\n      cin >> x;\n      cnt[x] += 1;\n    } else {\n      int w;\n      cin >> w;\n      for (int i = 29; i >= 0; i--) {\n        int take = min(w >> i, cnt[i]);\n        w -= take << i;\n      }\n      cout << (w == 0 ? \"YES\" : \"NO\") << '\\n';\n    }\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "bitmasks", "brute force", "greedy"], "dificulty": "1300", "interactive": false}