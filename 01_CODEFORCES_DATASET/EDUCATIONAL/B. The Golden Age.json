{
    "link": "https://codeforces.com//contest/813/problem/B",
    "problemId": "108589",
    "problem_idx": "B",
    "shortId": "813B",
    "contest_number": "813",
    "problem_submissions": {
        "F": [
            27592959,
            27592462,
            27595859,
            27593693,
            27589826,
            27597032,
            27592495,
            27594242,
            27592969,
            27592265,
            27592101,
            27593647,
            27593448,
            27607698,
            27607690,
            27597005
        ],
        "D": [
            27591413,
            27596376,
            27595878,
            27592392,
            27596101,
            27595104,
            27676236,
            27675210,
            27591510,
            27603640,
            27593900,
            27624567,
            27624550,
            27624539,
            27628580,
            27593089,
            27592322,
            28282372,
            28281379
        ],
        "E": [
            27590671,
            27593775,
            27594164,
            27598623,
            27590165,
            27587725,
            27590977,
            27593884,
            27590632,
            27590190,
            27593976,
            27593899,
            27591757,
            27595354,
            27602821,
            27589094,
            27596364,
            27590212,
            27590714,
            27590708
        ],
        "C": [
            27586798,
            27589288,
            27588038,
            27588205,
            27585642,
            27587654,
            27587622,
            27598220,
            27588200,
            27597496,
            27586750,
            27587670,
            27588183,
            27589351,
            27598034,
            27587880,
            27588758,
            27588420,
            27587303,
            27587398,
            27597722,
            27588272
        ],
        "B": [
            27587426,
            27586981,
            27586763,
            27590844,
            27586387,
            27587082,
            27586616,
            27585981,
            27586358,
            27586732,
            27588430,
            27586365,
            27587378,
            27586643,
            27586207,
            27586121
        ],
        "A": [
            27586386,
            27585541,
            27587254,
            27590210,
            27585562,
            27585639,
            27585557,
            27585471,
            27585490,
            27585606,
            27586831,
            27585625,
            27586127,
            27585762,
            27585515,
            27585489,
            27585475
        ]
    },
    "name": "B. The Golden Age",
    "statement": "year in Berland is such a year that its number can be represented as ,\r\nwhere and are non-negative integer numbers. For example, if and then the\r\nyears and are (, ) and year isn’t as there is no such representation for\r\nit.Such interval of years that there are no years in it is called .You\r\nshould write a program which will find maximum length of which starts no\r\nearlier than the year and ends no later than the year . If all years in\r\nthe interval are then the answer is .\r\n",
    "solutions": [
        "#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nvector<long long> v;\nint main()\n{\n\tlong long x,y,l,r,i,j,ans=0;\n\tscanf(\"%I64d%I64d%I64d%I64d\",&x,&y,&l,&r);\n\tv.push_back(l-1);v.push_back(r+1);\n\tfor(i=1;;i*=x)\n\t{\n\t\tfor(j=1;;j*=y)\n\t\t{\n\t\t\tif(i+j>=l&&i+j<=r)v.push_back(i+j);\n\t\t\tif(j>r/y)break;\n\t\t}\n\t\tif(i>r/x)break;\n\t}\n\tsort(v.begin(),v.end());\n\tfor(i=1;i<v.size();++i)ans=max(ans,v[i]-v[i-1]-1);\n\tprintf(\"%I64d\",ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. The Golden Age.json",
    "editorial_link": "https://codeforces.com//blog/entry/52410",
    "editorial": "Notice that for has no more than powers which give numbers no greater\r\nthan .So letâs store all possible sums of all powers of and . Now the\r\nanswer to the query can be obtained in linear time by checking\r\ndifference between neighbouring unlucky years in sorted order.Donât\r\nforget that you should handle multiplying of such big numbers very\r\ncarefully. For example, instead of writingwhile (num <= 1e18) num =\r\nnum * xorwhile (num * x <= 1e18) num = num * xyou should writewhile (num\r\n<= 1e18 / x) num = num * xto avoid getting overflow errors of 64-bit\r\ntype.Integer division will work fine in that case because will never\r\nexceed if doesnât exceed .Overall complexity: .\r\n",
    "hint": []
}