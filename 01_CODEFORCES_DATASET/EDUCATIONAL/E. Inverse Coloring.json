{"link": "https://codeforces.com//contest/1027/problem/E", "problemId": "209492", "problem_idx": "E", "shortId": "1027E", "contest_number": "1027", "problem_submissions": {"G": [41777591, 41794075, 41789651, 41795096, 41939341, 41938165, 41796137, 42098879, 42133042], "E": [41771294, 41773308, 41779379, 41769311, 41773946, 41775704, 41772136, 41773355, 41779847, 41781989, 41784347, 41777571, 41784573, 41777063, 41778773, 41776995, 41786639, 41778631, 41778849, 41779109], "F": [41768065, 41785375, 41776031, 41777064, 64515193, 41778051, 41781324, 41779089, 41778653, 41776480, 41776867, 41774399, 41778108, 41783735, 41779480, 41782813, 41784214, 42675272, 42673408, 41785662, 41778618, 41786449, 41792717, 41792403, 41790072, 41787559, 41785600], "D": [41766114, 41769377, 41772019, 41765799, 41768093, 41767980, 41769938, 41769777, 41767951, 41766660, 41768756, 41770224, 41770243, 41773173, 41773790, 41772403, 41773900, 41774900, 41773430, 41773585], "C": [41765079, 41766031, 41768208, 41764342, 41765993, 41765549, 41767982, 41768445, 41764158, 41772730, 41766169, 41767810, 41767876, 41767390, 41770932, 41768551, 41769543, 41768596, 41768222, 41768699, 41769864, 41769626], "B": [41762630, 41763189, 41765301, 41762037, 41763563, 41762756, 41764132, 41765033, 41765562, 41762467, 41763527, 41764762, 41763245, 41763720, 41763112, 41766236, 41764943, 41765112, 41765051, 41766842], "A": [41761297, 41761064, 41763316, 41761011, 41761231, 41761105, 41761008, 41761632, 41761600, 41761296, 41761079, 41761346, 41761160, 41761251, 41761159, 41761563, 41761142, 41761529, 41761274, 41764617]}, "name": "E. Inverse Coloring", "statement": "You are given a square board, consisting of n rows and n columns. Each\r\ntile in it should be colored either white or black.Let\u2019s call some\r\ncoloring if each pair of adjacent rows are either the same or different\r\nin every position. The same condition should be held for the columns as\r\nwell.Let\u2019s call some coloring if it is and there is no of the single\r\ncolor, consisting of at least k tiles.Your task is to count the number\r\nof colorings of the board of the given size.Since the answer can be very\r\nlarge, print it modulo 998244353.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int MOD = 998244353;\nint add(int x, int y) {\n\tx += y;\n\tif (x >= MOD) return x - MOD;\n\treturn x;\n}\nint sub(int x, int y) {\n\tx -= y;\n\tif (x < 0) return x + MOD;\n\treturn x;\n}\nint mult(int x, int y) {\n\treturn ((ll)x * y) % MOD;\n}\n\nconst int N = 505;\nint n, k;\nint a[N];\nint b[N];\nint dp[N];\nint sum[N];\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int m = 1; m <= n; m++) {\n\t\tfor (int i = 0; i <= n + 2; i++) {\n\t\t\tdp[i] = sum[i] = 0;\n\t\t}\n\t\tdp[0] = 1;\n\t\tsum[1] = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tdp[i] = sub(sum[i], sum[max(0, i - m)]);\n\t\t\tsum[i + 1] = add(sum[i], dp[i]);\n\t\t}\n\t\ta[m] = dp[n];\n\t}\n\n\tfor (int i = 1; i <= n; i++)\n\t\tb[i] = sub(a[i], a[i - 1]);\n\n\t/*\n\tfor (int i = 1; i <= n; i++)\n\t\tprintf(\"%d \", a[i]);\n\tprintf(\"\\n\");\n*/\n\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tans = add(ans, mult(b[i], a[min(n, (k - 1) / i)]));\n\t}\n\tprintf(\"%d\\n\", mult(ans, 2));\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "dp", "math"], "dificulty": "2100", "interactive": false}