{
    "link": "https://codeforces.com//contest/1430/problem/A",
    "problemId": "755153",
    "problem_idx": "A",
    "shortId": "1430A",
    "contest_number": "1430",
    "problem_submissions": {
        "G": [
            95237045,
            95235075,
            95240737,
            97566243,
            95239114,
            95228241,
            95221926,
            95230929,
            95239632,
            95250364,
            95455283,
            95252471,
            95256236,
            95242546,
            95303013,
            98871928
        ],
        "F": [
            95220487,
            95228332,
            95223150,
            97566130,
            95216783,
            95250832,
            95242433,
            95256538,
            95247019,
            95248722,
            95240985,
            95228704,
            95232008,
            95232802,
            95230075,
            95232563,
            95238448,
            95465311,
            95234311,
            95232005
        ],
        "E": [
            95211511,
            95210553,
            95208920,
            97565966,
            95208366,
            95208320,
            95213012,
            95219246,
            95219352,
            95220042,
            95209230,
            95216025,
            95206937,
            95209011,
            95216031,
            95214609,
            95202690,
            95215844,
            95218385
        ],
        "D": [
            95208553,
            95206064,
            95205170,
            97565921,
            95205237,
            95202655,
            95224583,
            95213640,
            95216224,
            95211198,
            95204449,
            95212306,
            95215958,
            95200930,
            95207117,
            95208215,
            95216892,
            95212972,
            95215071
        ],
        "C": [
            95197013,
            95198163,
            95199698,
            97565869,
            95200959,
            95198168,
            95198409,
            95198669,
            95209890,
            95204911,
            95197315,
            95202373,
            95200953,
            95202547,
            95204796,
            95194169,
            95198706,
            95205881,
            95210665
        ],
        "B": [
            95195119,
            95195489,
            95196116,
            97565818,
            95196356,
            95194999,
            95195326,
            95195742,
            95196929,
            95195601,
            95195544,
            95196763,
            95197327,
            95194053,
            95194687,
            95199867,
            95195154,
            95196136,
            95196683
        ],
        "A": [
            95193928,
            95194100,
            95194842,
            97565779,
            95194326,
            95193977,
            95194039,
            95194134,
            95194416,
            95194244,
            95194071,
            95194430,
            95194685,
            95193941,
            95193947,
            95197083,
            95194045,
            95194254,
            95194714
        ]
    },
    "name": "A. Number of Apartments",
    "statement": "Recently a new building with a new layout was constructed in Monocarp\u2019s\r\nhometown. According to this new layout, the building consists of three\r\ntypes of apartments: three-room, five-room, and seven-room apartments.\r\nIt\u2019s also known that each room of each apartment has exactly one window.\r\nIn other words, a three-room apartment has three windows, a five-room\r\nfive windows, and a seven-room seven windows.Monocarp went around the\r\nbuilding and counted n windows. Now he is wondering, how many apartments\r\nof each type the building may have.Unfortunately, Monocarp only recently\r\nhas learned to count, so he is asking you to help him to calculate the\r\npossible quantities of three-room, five-room, and seven-room apartments\r\nin the building that has n windows. If there are multiple answers, you\r\ncan print any of them.Here are some examples: if Monocarp has counted 30\r\nwindows, there could have been 2 three-room apartments, 2 five-room\r\napartments and 2 seven-room apartments, since 2\r\ncdot 3 + 2\r\ncdot 5 + 2\r\ncdot 7 = 30; if Monocarp has counted 67 windows, there could have been 7\r\nthree-room apartments, 5 five-room apartments and 3 seven-room\r\napartments, since 7\r\ncdot 3 + 5\r\ncdot 5 + 3\r\ncdot 7 = 67; if Monocarp has counted 4 windows, he should have mistaken\r\nsince no building with the aforementioned layout can have 4 windows.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned ll\n#define uint unsigned\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define IT iterator\n#define PB push_back\n#define fi first\n#define se second\n#define For(i,j,k) for (int i=(int)(j);i<=(int)(k);i++)\n#define Rep(i,j,k) for (int i=(int)(j);i>=(int)(k);i--)\n#define CLR(a,v) memset(a,v,sizeof(a));\n#define CPY(a,b) memcpy(a,b,sizeof(a));\n#define debug puts(\"wzpakking\")\n#define y1 ysghysgsygsh\nusing namespace std;\n\nvoid solve(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tFor(i,0,n/5) For(j,0,(n-5*i)/7)\n\t\tif ((n-5*i-7*j)%3==0){\n\t\t\tcout<<(n-5*i-7*j)/3<<' '<<i<<' '<<j<<endl;\n\t\t\treturn; \n\t\t}\n\tcout<<-1<<endl;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile (T--) solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Number of Apartments.json",
    "editorial_link": "https://codeforces.com//blog/entry/83614",
    "editorial": "There are many possible solutions to this problem. The simplest one is\r\nto notice that, using several flats of size and one flat of some size\r\n(possibly also , possibly not), we can get any equal to , or . The only\r\nnumbers that don\u00e2\u0080\u0099t belong to these lists are , and , and it\u00e2\u0080\u0099s easy to\r\nsee that there is no answer for that numbers. So the solution is to try\r\nall possible sizes of one flat, and if the remaining number of windows\r\nis non-negative and divisible by , then take the required number of\r\nthree-room flats.\r\n"
}