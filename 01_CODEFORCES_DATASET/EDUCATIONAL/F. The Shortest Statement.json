{"link": "https://codeforces.com//contest/1051/problem/F", "problemId": "222362", "problem_idx": "F", "shortId": "1051F", "contest_number": "1051", "problem_submissions": {"F": [43140779, 43140701, 43140521, 43144878, 43149555, 43136128, 43135754, 43146222, 43141081, 43140208, 43140886, 43148136, 43125606, 43139391, 43143179, 43180670, 43137698, 43132665, 43136422, 43137213, 43136215, 43152919, 43140345], "E": [43135788, 43135396, 43135166, 43144968, 43139384, 43145873, 43148036, 43133440, 43138040, 43130161, 43150071, 43172602, 43169210, 43138739, 43141483, 43140870], "D": [43122761, 43123321, 43124505, 43127072, 43131033, 43132900, 43131873, 43120016, 43141171, 43141877, 43118771, 109385219, 43126836, 43129621, 43130021, 43126148, 43128304, 43128721, 43127454, 43124199, 43127027], "C": [43120001, 43120557, 43121091, 43122279, 43123187, 43129372, 43126529, 43136659, 43142859, 43145151, 43120361, 43120848, 43124838, 43124502, 43122781, 43124340, 43124338, 43124203, 43121537, 43122507], "B": [43118265, 43118662, 43118894, 43119173, 43118548, 43118066, 43121653, 43137307, 43143272, 43145683, 43118005, 43118512, 43121090, 43120908, 43119605, 43119200, 43119726, 43119810, 43118546, 43119160], "A": [43118136, 43118310, 43118532, 43118569, 43120138, 43261343, 43119567, 43119846, 43140090, 43144863, 43147178, 43123917, 43118256, 43120404, 43119598, 43118824, 43118544, 43118365, 43118914, 43118324, 43118586], "G": [43151141, 43245454]}, "name": "F. The Shortest Statement", "statement": "You are given a weighed undirected graph, consisting of n vertices and m\r\nedges.You should answer q queries, the i-th query is to find the\r\nshortest distance between vertices u_i and v_i.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef signed long long ll;\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define FOR(x,to) for(x=0;x<(to);x++)\n#define FORR(x,arr) for(auto& x:arr)\n#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)\n#define ALL(a) (a.begin()),(a.end())\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\n//-------------------------------------------------------\n\nint N,M,Q;\nvector<pair<int,ll>> E[101010],AE[101010];\n\ntemplate<int um> class UF {\n\tpublic:\n\tvector<int> par,rank;\n\tUF() {rank=vector<int>(um,0); for(int i=0;i<um;i++) par.push_back(i);}\n\tint operator[](int x) {return (par[x]==x)?(x):(par[x] = operator[](par[x]));}\n\tint operator()(int x,int y) {\n\t\tif((x=operator[](x))==(y=operator[](y))) return x;\n\t\tif(rank[x]>rank[y]) return par[x]=y;\n\t\trank[x]+=rank[x]==rank[y]; return par[y]=x;\n\t}\n};\nUF<500000> uf;\n\nint P[21][200005],D[200005];\nll DD[200005];\nvoid dfs(int cur) {\n\tFORR(e,E[cur]) if(e.first!=P[0][cur]) {\n\t\tD[e.first]=D[cur]+1;\n\t\tDD[e.first]=DD[cur]+e.second;\n\t\tP[0][e.first]=cur;\n\t\tdfs(e.first);\n\t}\n}\n\nint lca(int a,int b) {\n\tint ret=0,i,aa=a,bb=b;\n\tif(D[aa]>D[bb]) swap(aa,bb);\n\tfor(i=19;i>=0;i--) if(D[bb]-D[aa]>=1<<i) bb=P[i][bb];\n\tfor(i=19;i>=0;i--) if(P[i][aa]!=P[i][bb]) aa=P[i][aa], bb=P[i][bb];\n\treturn (aa==bb)?aa:P[0][aa];               // vertex\n}\n\nll dist(int a,int b) {\n\tint l=lca(a,b);\n\treturn DD[a]+DD[b]-2*DD[l];\n}\n\nvector<int> C;\nll dp[101010][45];\nll dp2[45][45];\n\nvoid solve() {\n\tint i,j,k,l,r,x,y,z; string s;\n\t\n\tcin>>N>>M;\n\tFOR(i,M) {\n\t\tcin>>x>>y>>r;\n\t\tx--,y--;\n\t\tif(uf[x]!=uf[y]) {\n\t\t\tE[x].push_back({y,r});\n\t\t\tE[y].push_back({x,r});\n\t\t\tuf(x,y);\n\t\t}\n\t\telse {\n\t\t\tAE[x].push_back({y,r});\n\t\t\tAE[y].push_back({x,r});\n\t\t}\n\t}\n\t\n\tdfs(0);\n\tFOR(i,19) FOR(x,N) P[i+1][x]=P[i][P[i][x]];\n\tFOR(i,N) if(AE[i].size()) C.push_back(i);\n\t\n\tFOR(i,N) FOR(x,C.size()) dp[i][x]=dist(i,C[x]);\n\tFOR(x,C.size()) {\n\t\tFOR(y,C.size()) dp2[x][y]=dp[C[x]][y];\n\t\tFORR(a,AE[C[x]]) {\n\t\t\ty=lower_bound(ALL(C),a.first)-C.begin();\n\t\t\tdp2[x][y]=min(dp2[x][y],a.second);\n\t\t}\n\t}\n\tFOR(z,C.size()) FOR(x,C.size()) FOR(y,C.size()) dp2[x][y]=min(dp2[x][y],dp2[x][z]+dp2[z][y]);\n\t\n\tcin>>Q;\n\twhile(Q--) {\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tu--,v--;\n\t\tll ret=dist(u,v);\n\t\tFOR(x,C.size()) FOR(y,C.size()) ret=min(ret,dp[u][x]+dp2[x][y]+dp[v][y]);\n\t\tcout<<ret<<endl;\n\t}\n\t\n\t\n}\n\n\nint main(int argc,char** argv){\n\tstring s;int i;\n\tif(argc==1) ios::sync_with_stdio(false), cin.tie(0);\n\tFOR(i,argc-1) s+=argv[i+1],s+='\\n'; FOR(i,s.size()) ungetc(s[s.size()-1-i],stdin);\n\tcout.tie(0); solve(); return 0;\n}\n"], "input": "", "output": "", "tags": ["graphs", "shortest paths", "trees"], "dificulty": "2400", "interactive": false}