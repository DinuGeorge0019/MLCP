{"link": "https://codeforces.com//contest/1051/problem/E", "problemId": "222361", "problem_idx": "E", "shortId": "1051E", "contest_number": "1051", "problem_submissions": {"F": [43140779, 43140701, 43140521, 43144878, 43149555, 43136128, 43135754, 43146222, 43141081, 43140208, 43140886, 43148136, 43125606, 43139391, 43143179, 43180670, 43137698, 43132665, 43136422, 43137213, 43136215, 43152919, 43140345], "E": [43135788, 43135396, 43135166, 43144968, 43139384, 43145873, 43148036, 43133440, 43138040, 43130161, 43150071, 43172602, 43169210, 43138739, 43141483, 43140870], "D": [43122761, 43123321, 43124505, 43127072, 43131033, 43132900, 43131873, 43120016, 43141171, 43141877, 43118771, 109385219, 43126836, 43129621, 43130021, 43126148, 43128304, 43128721, 43127454, 43124199, 43127027], "C": [43120001, 43120557, 43121091, 43122279, 43123187, 43129372, 43126529, 43136659, 43142859, 43145151, 43120361, 43120848, 43124838, 43124502, 43122781, 43124340, 43124338, 43124203, 43121537, 43122507], "B": [43118265, 43118662, 43118894, 43119173, 43118548, 43118066, 43121653, 43137307, 43143272, 43145683, 43118005, 43118512, 43121090, 43120908, 43119605, 43119200, 43119726, 43119810, 43118546, 43119160], "A": [43118136, 43118310, 43118532, 43118569, 43120138, 43261343, 43119567, 43119846, 43140090, 43144863, 43147178, 43123917, 43118256, 43120404, 43119598, 43118824, 43118544, 43118365, 43118914, 43118324, 43118586], "G": [43151141, 43245454]}, "name": "E. Vasya and Big Integers", "statement": "Vasya owns three big integers a, l, r. Let\u2019s define a partition of x\r\nsuch a sequence of strings s_1, s_2,\r\ndots, s_k that s_1 + s_2 +\r\ndots + s_k = x, where + is a concatanation of strings. s_i is the i-th\r\nelement of the partition. For example, number 12345 has the following\r\npartitions: [\"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\"], [\"\"] and lots\r\nof others.Let\u2019s call some partition of a if each of its elements .Vasya\r\nwant to know the number of partitions of number a, which has each of s_i\r\nsatisfy the condition l\r\nle s_i\r\nle r. Note that the comparison is the integer comparison, not the string\r\none.Help Vasya to count the amount of partitions of number a such that\r\nthey match all the given requirements. The result can be rather big, so\r\nprint it modulo 998244353.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef signed long long ll;\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define FOR(x,to) for(x=0;x<(to);x++)\n#define FORR(x,arr) for(auto& x:arr)\n#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)\n#define ALL(a) (a.begin()),(a.end())\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\n//-------------------------------------------------------\n\nvector<int> Zalgo(string s) {\n\tvector<int> v(1,s.size());\n\tfor(int i=1,l=-1,r=-1;i<s.size();i++) {\n\t\tif(i<=r && v[i-l]<r-i+1) v.push_back(v[i-l]);\n\t\telse {\n\t\t\tl=i; r=(i>r)?i:(r+1);\n\t\t\twhile(r<s.size() && s[r-i]==s[r]) r++;\n\t\t\tv.push_back((r--)-l);\n\t\t}\n\t}\n\tv.push_back(0);\n\treturn v;\n}\n\nstring A,L,R,LA,RA;\nint NA,NL,NR,LS,RS;;\nvector<int> LZ,RZ;\n\nll mo=998244353;\nll bt[2020202];\n\n\nvoid solve() {\n\tint i,j,k,l,r,x,y; string s;\n\t\n\tcin>>A>>L>>R;\n\tNA=A.size();\n\tNL=L.size();\n\tNR=R.size();\n\t\n\tLA=L+\"@\"+A;\n\tRA=R+\"@\"+A;\n\tLZ=Zalgo(LA);\n\tRZ=Zalgo(RA);\n\t\n\t\n\tbt[0]=1;\n\tbt[1]=mo-1;\n\tFOR(i,NA) {\n\t\tif(i) (bt[i]+=bt[i-1])%=mo;\n\t\tll now=bt[i];\n\t\tif(A[i]=='0') {\n\t\t\tif(L[0]=='0') {\n\t\t\t\t(bt[i+1]+=now)%=mo;\n\t\t\t\t(bt[i+2]+=mo-now)%=mo;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tx=min(NA-i,NL);\n\t\tif(x<NL) continue;\n\t\tif(LZ[NL+1+i]<x && A[i+LZ[NL+1+i]]<L[LZ[NL+1+i]]) x++;\n\t\ty=min(NA-i,NR);\n\t\tif(y==NR && RZ[NR+1+i]<y && A[i+RZ[NR+1+i]]>R[RZ[NR+1+i]]) y--;\n\t\t\n\t\tif(x<=y) {\n\t\t\t(bt[i+x]+=now)%=mo;\n\t\t\t(bt[i+y+1]+=mo-now)%=mo;\n\t\t}\n\t\t\n\t}\n\tcout<<((bt[NA]+bt[NA-1])%mo)<<endl;\n}\n\n\nint main(int argc,char** argv){\n\tstring s;int i;\n\tif(argc==1) ios::sync_with_stdio(false), cin.tie(0);\n\tFOR(i,argc-1) s+=argv[i+1],s+='\\n'; FOR(i,s.size()) ungetc(s[s.size()-1-i],stdin);\n\tcout.tie(0); solve(); return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "dp", "hashing", "strings"], "dificulty": "2600", "interactive": false}