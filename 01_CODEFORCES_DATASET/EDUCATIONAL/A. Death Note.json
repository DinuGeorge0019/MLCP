{
    "link": "https://codeforces.com//contest/1016/problem/A",
    "problemId": "204436",
    "problem_idx": "A",
    "shortId": "1016A",
    "contest_number": "1016",
    "problem_submissions": {
        "G": [
            41182699,
            41182152,
            41208590,
            41208565,
            41208533,
            41186176
        ],
        "E": [
            41176649,
            41174782,
            41175307,
            41175790,
            41176170,
            41175960,
            41179374,
            41176561,
            41175646,
            41175201,
            41179908,
            41184095,
            41179907,
            41172878,
            41174329,
            41178174,
            41177502,
            41177414,
            41176901,
            41187225,
            41186968,
            41177073,
            41179262,
            41178795,
            41177041
        ],
        "C": [
            41173342,
            41166585,
            41171261,
            41168340,
            41167894,
            41169421,
            41170385,
            41170240,
            41169071,
            41173849,
            41167601,
            41164969,
            41165695,
            41170115,
            41170716,
            41168026,
            41168718,
            41168530,
            41166879
        ],
        "F": [
            41171110,
            41181183,
            41180305,
            41183918,
            41185092,
            41183413,
            41183773,
            41181947,
            41183454,
            41180224,
            41185015,
            41178764,
            41188501,
            42098047,
            42098011,
            41192515,
            41197238,
            41187801
        ],
        "D": [
            41165638,
            41168213,
            41167884,
            41169638,
            41172158,
            41171342,
            41172221,
            41172202,
            41173341,
            41167097,
            41174977,
            41169216,
            41167575,
            41163502,
            41165286,
            41170742,
            41170760,
            41171944,
            41162657
        ],
        "B": [
            41161071,
            41162662,
            41164375,
            41162058,
            41164067,
            41164871,
            41164742,
            41161857,
            41162316,
            41161724,
            41169935,
            41161660,
            41162105,
            41161158,
            41162458,
            41162731,
            41163603,
            41163495,
            41169324
        ],
        "A": [
            41160184,
            41161181,
            41160522,
            41160409,
            41160935,
            41160830,
            41161646,
            41160641,
            41160349,
            41160611,
            41175572,
            41160281,
            41160461,
            41160190,
            41160493,
            41160416,
            41161519,
            41160623,
            41167976
        ]
    },
    "name": "A. Death Note",
    "statement": "You received a notebook which is called . This notebook has infinite\r\nnumber of pages. A rule is written on the last page (huh) of this\r\nnotebook. It says: \"You have to write names in this notebook during n\r\nconsecutive days. During the i-th day you have to write exactly a_i\r\nnames.\". You got scared (of course you got scared, who wouldn\u2019t get\r\nscared if he just receive a notebook which is named with a some strange\r\nrule written in it?).Of course, you decided to follow this rule. When\r\nyou calmed down, you came up with a strategy how you will write names in\r\nthe notebook. You have calculated that each page of the notebook can\r\ncontain exactly m names. You will start writing names from the first\r\npage. You will write names on the current page as long as the limit on\r\nthe number of names on this page is not exceeded. When the current page\r\nis over, you turn the page. Note that you turn the page when it ends, it\r\ndoesn\u2019t matter if it is the last day or not. If after some day the\r\ncurrent page still can hold at least one name, during the next day you\r\nwill continue writing the names from the current page.Now you are\r\ninterested in the following question: how many times will you turn the\r\npage during each day? You are interested in the number of pages you will\r\nturn each day from 1 to n.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N=202020;\nLL n, m, a[N];\nint main(){\n  scanf(\"%lld%lld\", &n, &m);\n  for(int i=1; i<=n; i++) scanf(\"%lld\", &a[i]);\n  LL cur=0;\n  for(int i=1; i<=n; i++){\n    cur+=a[i];\n    LL ans=cur/m;\n    cur%=m;\n    printf(\"%lld%c\", ans, \" \\n\"[i==n]);\n  }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Death Note.json",
    "editorial_link": "https://codeforces.com/blog/entry/61015",
    "editorial": "In this problem all we need is to maintain the variable which will\r\nrepresent the number of names written on the current page. Initially\r\nthis number equals zero. The answer for the -th day equals . This value\r\nrepresents the number of full pages we will write during the -th day.\r\nAfter the answering we need to set , where operation is taking modulo .\r\n"
}