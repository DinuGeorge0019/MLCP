{"link": "https://codeforces.com//contest/1809/problem/C", "problemId": "1839363", "problem_idx": "C", "shortId": "1809C", "contest_number": "1809", "problem_submissions": {"G": [198800857, 198819538, 198819377, 198819202, 198818781, 198818684, 198816759, 198811816, 198806762, 198815231, 198818773, 198822181, 198828608, 198822299, 203672607, 208381746, 198835108, 198831844, 198829525, 198853349, 198853245], "F": [198786104, 198791363, 198796885, 198804709, 198810152, 198814173, 198809216, 198791415, 198800965, 198804541, 198830839, 198809769, 198804908, 198811366, 198815172, 198805151, 198812101, 198817151, 198808903, 198814662], "E": [198775336, 198782430, 198786246, 199182668, 198794243, 198792695, 198792300, 198799038, 198776769, 198784470, 198788708, 198793376, 198789791, 198792668, 198843793, 198805320, 198800053, 198802037, 198804412, 198800677, 198799758], "D": [198768775, 198772012, 198776224, 198777641, 198882283, 198777443, 198779801, 198782367, 198766389, 198769656, 198777387, 198777057, 198779683, 198776616, 198772288, 198785016, 198783361, 198781028, 198791791, 198778758], "C": [198764545, 198765840, 198768929, 198772658, 198770321, 198766724, 198776128, 198761542, 198765111, 198760078, 198766275, 198773341, 198769090, 198764454, 198770468, 198769676, 198767761, 198771860, 198780776], "B": [198760964, 198755413, 198762260, 198758056, 198766256, 198759317, 198761525, 198757070, 198756430, 198755376, 198758155, 198765573, 198760583, 198758103, 198766309, 198762187, 198761139, 198766037, 198760442], "A": [198757842, 198756487, 198756930, 198755206, 198755963, 198755170, 198755335, 198755127, 198755119, 198756462, 198755191, 198755804, 198757456, 198755555, 198757141, 198756133, 198756023, 198760810, 198755407]}, "name": "C. Sum on Subarrays", "statement": "For an array a = [a_1, a_2,\r\ndots, a_n], let\u2019s denote its a[l, r] as the array [a_l, a_{l+1},\r\ndots, a_r].For example, the array a = [1, -3, 1] has 6 non-empty\r\nsubarrays: a[1,1] = [1]; a[1,2] = [1,-3]; a[1,3] = [1,-3,1]; a[2,2] =\r\n[-3]; a[2,3] = [-3,1]; a[3,3] = [1]. You are given two integers n and k.\r\nConstruct an array a consisting of n integers such that: all elements of\r\na are from -1000 to 1000; a has exactly k subarrays with positive sums;\r\nthe rest\r\ndfrac{(n+1)\r\ncdot n}{2}-k subarrays of a have negative sums.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n, k;\n    std::cin >> n >> k;\n    \n    int x = 0;\n    while ((x + 1) * (x + 2) / 2 <= k) {\n        x += 1;\n    }\n    \n    std::vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        if (i < x) {\n            a[i] = 2;\n        } else if (i == x) {\n            a[i] = -2 * x - 1 + 2 * (k - x * (x + 1) / 2);\n        } else {\n            a[i] = -1000;\n        }\n        std::cout << a[i] << \" \\n\"[i == n - 1];\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "math"], "dificulty": "1500", "interactive": false}