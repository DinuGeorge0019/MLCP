{
    "link": "https://codeforces.com//contest/1913/problem/A",
    "problemId": "2387087",
    "problem_idx": "A",
    "shortId": "1913A",
    "contest_number": "1913",
    "problem_submissions": {
        "F": [
            237765417,
            237786045,
            237798410,
            237793751,
            237794290,
            237782267,
            237795023,
            237800140,
            237807937,
            237810699,
            237812614,
            249487858,
            249487734,
            237811339,
            237810034,
            237786173,
            237918310,
            238095706,
            238317726,
            238317705,
            238317604,
            238062834,
            238062445,
            237828170
        ],
        "E": [
            237747038,
            237760786,
            237768219,
            237770076,
            237769118,
            237750176,
            237762212,
            237777254,
            237781408,
            237770526,
            237770804,
            237785103,
            237769588,
            237762037,
            237767968,
            237768315,
            237776019,
            237777315,
            237775619
        ],
        "D": [
            237741941,
            237751825,
            237754635,
            237754576,
            237759161,
            237795697,
            237798473,
            237753926,
            237756867,
            237764842,
            237762933,
            237761396,
            237809126,
            237799893,
            237754034,
            237759987,
            237761087,
            237760420,
            237755829,
            237761290
        ],
        "C": [
            237735693,
            237739173,
            237740092,
            237741221,
            237739010,
            237738520,
            237799594,
            237738193,
            237740375,
            237744478,
            237744080,
            237745844,
            237762290,
            237803855,
            237741083,
            237740358,
            237744813,
            237743742,
            237745330,
            237745113
        ],
        "B": [
            237734023,
            237735619,
            237736194,
            237737923,
            237736443,
            237735162,
            237800569,
            237735958,
            237737285,
            237740748,
            237737318,
            237739744,
            237743140,
            237806408,
            237735801,
            237736968,
            237740846,
            237738174,
            237741145,
            237740499
        ],
        "A": [
            237733399,
            237733472,
            237733545,
            237733680,
            237733544,
            237733357,
            237734167,
            237733513,
            237734405,
            237733701,
            237733822,
            237734094,
            237807435,
            237733584,
            237733737,
            237733530,
            237733681,
            237735085,
            237733871
        ]
    },
    "name": "A. Rating Increase",
    "statement": "Monocarp is a great solver of adhoc problems. Recently, he participated\r\nin an Educational Codeforces Round, and gained rating!Monocarp knew\r\nthat, before the round, his rating was a. After the round, it increased\r\nto b (b > a). He wrote both values one after another to not forget\r\nthem.However, he wrote them so close to each other, that he can’t tell\r\nnow where the first value ends and the second value starts.Please, help\r\nhim find some values a and b such that: neither of them has a leading\r\nzero; both of them are strictly greater than 0; b > a; they produce the\r\ngiven value ab when written one after another. If there are multiple\r\nanswers, you can print any of them.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 18.12.2023 09:34:55       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    string s;\n    cin >> s;\n    bool found = false;\n    for (int i = 1; i <= (int) s.size() - 1; i++) {\n      string a = s.substr(0, i);\n      string b = s.substr(i);\n      if (a[0] == '0' || b[0] == '0') {\n        continue;\n      }\n      if (a.size() < b.size() || (a.size() == b.size() && a < b)) {\n        cout << a << \" \" << b << '\\n';\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      cout << -1 << '\\n';\n    }\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Rating Increase.json",
    "editorial_link": "https://codeforces.com//blog/entry/123493",
    "editorial": "Since the length of the string is pretty small, itâs possible to iterate\r\nover all possible cuts of into and . First, you have to check if has a\r\nleading zero. If it doesnât, compare integer representations of and . In\r\norder to get an integer from a string, you can use for C++ or for\r\nPython.\r\n",
    "hint": []
}