{
    "link": "https://codeforces.com//contest/710/problem/D",
    "problemId": "68762",
    "problem_idx": "D",
    "shortId": "710D",
    "contest_number": "710",
    "problem_submissions": {
        "E": [
            20054996,
            20055960,
            20050515,
            20056207,
            20062379,
            20050639,
            20060515,
            27538320,
            24141101,
            20058483,
            20061563,
            20063242,
            20056323,
            20059072,
            20054898,
            20054597,
            20052086,
            20056820,
            20054542,
            36740748,
            20055879
        ],
        "C": [
            20054051,
            20051373,
            20056438,
            20051555,
            20054552,
            20057101,
            20058774,
            20058437,
            20052547,
            20053723,
            20053869,
            20053250,
            31838188,
            20053265,
            20052921,
            20048285,
            20051208,
            20051131,
            20052481
        ],
        "D": [
            20051723,
            20054925,
            20102628,
            20080042,
            20058096,
            20227651,
            20063470,
            20057421,
            20073897,
            20058831,
            20063211,
            20063051,
            20065659,
            20073500
        ],
        "B": [
            20047805,
            20048112,
            20047656,
            20048116,
            20049100,
            20050209,
            20048553,
            20053733,
            20048382,
            23338455,
            23338445,
            23338229,
            23337441,
            23337163,
            20047912,
            20048941,
            20047671,
            20047834,
            20048990,
            20047586,
            20047900,
            20049325,
            20050272
        ],
        "A": [
            20047538,
            20047664,
            20047537,
            20047609,
            20048066,
            20048101,
            20047871,
            20049535,
            20047569,
            20047558,
            20047774,
            20047559,
            20048643,
            20047690,
            20047542,
            20047577,
            20047828,
            20048745
        ],
        "F": [
            20058436,
            20060159,
            27715475,
            27715435,
            27715423,
            27715408,
            27715385,
            27715362,
            27715335,
            27714560,
            27714385,
            20065369,
            20065327,
            20065292,
            20065031,
            20056674,
            20065676,
            20065486,
            20065406,
            20065347,
            20065268,
            20061631,
            31301760,
            42656662,
            20137188
        ]
    },
    "name": "D. Two Arithmetic Progressions",
    "statement": "You are given two arithmetic progressions: and . Find the number of\r\nintegers such that and , for some integers .\r\n",
    "solutions": [
        "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <ctype.h>\n#include <deque>\n#include <queue>\n#include <cstring>\n#include <set>\n#include <list>\n#include <map>\n#include <random>\n#include <unordered_map>\n#include <stdio.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef std::vector<int> vi;\ntypedef std::vector<bool> vb;\ntypedef std::vector<string> vs;\ntypedef std::vector<double> vd;\ntypedef std::vector<long long> vll;\ntypedef std::vector<std::vector<int> > vvi;\ntypedef vector<vvi> vvvi;\ntypedef vector<vll> vvll;\ntypedef std::vector<std::pair<int, int> > vpi;\ntypedef vector<vpi> vvpi;\ntypedef std::pair<int, int> pi;\ntypedef std::pair<ll, ll> pll;\ntypedef std::vector<pll> vpll;\n\nconst long long mod = 1000000007;\n\n#define all(c) (c).begin(),(c).end()\n#define sz(c) (int)(c).size()\n#define forn(i, a, b) for(int i = a; i < b; i++)\n\n#define pb push_back\n#define mp make_pair\n\nlong long gcd(long long a, long long b){\n    if(a==0) return b;\n    if(b==0) return a;\n    if(a>b) return gcd(b, a%b);\n    return gcd(a,b%a);\n}\n\nll gcd (ll a, ll b, ll & x, ll & y) {\n    if (a == 0) {\n        x = 0; y = 1;\n        return b;\n    }\n    ll x1, y1;\n    ll d = gcd (b%a, a, x1, y1);\n    x = y1 - (b / a) * x1;\n    y = x1;\n    return d;\n}\n\nll invmod(ll a, ll modulo) {\n    ll x, y;\n    gcd(a, modulo, x, y);\n    return (x+modulo*modulo)%modulo;\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"rt\", stdin);\n    freopen(\"output.txt\", \"wt\", stdout);\n#endif\n    ll a1,a2,b1,b2,l,r;\n    cin>>a1>>b1>>a2>>b2>>l>>r;\n    ll d = gcd(a1,a2);\n    if((b1-b2)%d != 0) {\n        cout<<0;\n        return 0;\n    }\n    ll x = (b1%d + d)%d;\n    b1-=x;\n    b2-=x;\n    l-=x;\n    r-=x;\n    if(b1<0) {\n        b2-=b1;\n        l-=b1;\n        r-=b1;\n        b1=0;\n    }\n    if(b2<0) {\n        b1-=b2;\n        l-=b2;\n        r-=b2;\n        b2=0;\n    }\n    if(r<0) {\n        cout << 0;\n        return 0;\n    }\n    if(l<0) l = 0;\n    r-=r%d;\n    if(l%d!=0) l = l+d-l%d;\n    a1/=d;\n    a2/=d;\n    b1/=d;\n    b2/=d;\n    l/=d;\n    r/=d;\n    ll nlo1 = ((b2-b1)%a2 + a2) % a2;\n    ll k1 = (nlo1 * invmod(a1, a2)) % a2;\n    ll nlo2 = ((b1-b2)%a1 + a1) % a1;\n    ll l1 = (nlo2 * invmod(a2, a1)) % a1;\n    ll st = max(a1*k1 + b1, a2*l1+b2);\n    ll step = a1*a2;\n    if(st < l) {\n        st += step * ((l-st)/step);\n    }\n    if(st<l) st+=step;\n    if(st<l) st+=step;\n    if(st>r) {\n        cout<<0;\n        return 0;\n    }\n    cout << 1 + (r-st)/step;\n    \n    \n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\D. Two Arithmetic Progressions.json",
    "editorial_link": "https://codeforces.com//blog/entry/46761",
    "editorial": "I wanted to give this problem a lot of time ago. I thought it is very\r\nstandard problem, but I underestimated its difficulty. Let\u00e2\u0080\u0099s write down\r\nthe equation describing the problem: . So we have linear Diofant\r\nequation with two variables: . The solution has the form: , where the\r\nlast equation can be solved by extended Euclid algorithm and is any\r\nintegral number. The variable should satisfy two conditions: and . The\r\nvalues and are fixed, so we can get the segment of possible values for\r\nthe values . The length of the segment is the answer for the problem.\r\nC++ solution\r\n"
}