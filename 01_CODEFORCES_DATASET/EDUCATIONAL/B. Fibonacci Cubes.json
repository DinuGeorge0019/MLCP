{
    "link": "https://codeforces.com//contest/2111/problem/B",
    "problemId": "3419287",
    "problem_idx": "B",
    "shortId": "2111B",
    "contest_number": "2111",
    "problem_submissions": {
        "G": [
            322719568,
            322738251,
            322737232,
            322734882,
            322733848,
            322739705,
            322765348,
            322764688,
            322752005,
            322753587,
            322751319,
            322720568,
            322729631,
            322757116,
            322785461,
            322890645,
            323020347,
            322778439,
            322778419,
            322778201,
            322778119,
            322778020,
            322777882,
            322777223,
            322776997,
            322776001,
            322775936
        ],
        "E": [
            322697990,
            322695191,
            322705487,
            322705821,
            322705980,
            322713283,
            322724677,
            322738049,
            322690431,
            322700985,
            322700076,
            322704262,
            322702259,
            322707219,
            322704094,
            322705822,
            322703551
        ],
        "F": [
            322691387,
            322716243,
            322719103,
            322728613,
            322729993,
            322731051,
            322740913,
            322686943,
            322710192,
            322719720,
            322713672,
            322713636,
            322726013,
            322721562,
            322720556,
            322728230,
            322730210
        ],
        "D": [
            322678511,
            322686771,
            322684334,
            322692059,
            322689019,
            322692746,
            322686820,
            322741814,
            322683201,
            322689247,
            322687368,
            322686598,
            322691632,
            322687656,
            322691451,
            322694053,
            322684204
        ],
        "C": [
            322676707,
            322681404,
            322679043,
            322681662,
            322681314,
            322683752,
            322680197,
            322743070,
            322679811,
            322681807,
            322679034,
            322681517,
            322680587,
            322678741,
            322686213,
            322679235,
            322680369
        ],
        "B": [
            322676127,
            322679449,
            322677961,
            322679172,
            322678800,
            322680312,
            322678349,
            322745453,
            322678542,
            322679221,
            322677917,
            322679124,
            322677847,
            322677424,
            322681157,
            322677471,
            322677308
        ],
        "A": [
            322675651,
            322676474,
            322676120,
            322676736,
            322675861,
            322677535,
            322676082,
            322747128,
            322675974,
            322676468,
            322676128,
            322676492,
            322675977,
            322675843,
            322676405,
            322675792,
            322675708
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/143528",
    "editorial": "Notice the following: if we can fit the two largest cubes from the set\r\ninto the box, then we can also fit all the smaller cubes into it.To fit\r\nthe two largest cubes, it is sufficient that all sides of the box are at\r\nleast , and the larger of the sides of the box is at least .The first\r\ncondition is quite obvious; if it were not satisfied, we would not be\r\nable to fit even the largest cube into the box. The second condition,\r\nhowever, is a bit more interesting.Letâ€™s simplify the problem a bit and\r\nremove one dimension, meaning all cubes will turn into squares. We will\r\ncheck that the rectangle can accommodate all these squares. This\r\nresembles a picture where a Fibonacci spiral is drawn: Each time we draw\r\na square with a side of , the remaining area turns into a rectangle with\r\nsides and .Now, if we add a third dimension to the rectangle and to\r\nsquares, all cubes will also remain within the rectangular\r\nparallelepiped. The rectangle could serve as either the bottom or one of\r\nthe side faces. Thus, if the rectangle was a side face, then in the\r\npicture presented above, some larger cubes would be resting on smaller\r\ncubes, which is not allowed. However, if we redraw the squares in the\r\nrectangle slightly differently, all requirements will be met:\r\n",
    "name": "B. Fibonacci Cubes",
    "statement": "There are n Fibonacci cubes, where the side of the i-th cube is equal to\r\nf_{i}, where f_{i} is the i-th Fibonacci number.In this problem, the\r\nFibonacci numbers are defined as follows: f_{1} = 1 f_{2} = 2 f_{i} =\r\nf_{i - 1} + f_{i - 2} for i > 2 There are also m empty boxes, where the\r\ni-th box has a width of w_{i}, a length of l_{i}, and a height of\r\nh_{i}.For each of the m boxes, you need to determine whether all the\r\ncubes can fit inside that box. The cubes must be placed in the box\r\nfollowing these rules: The cubes can only be stacked in the box such\r\nthat the sides of the cubes are parallel to the sides of the box; Every\r\ncube must be placed either on the bottom of the box or on top of other\r\ncubes in such a way that all space below the cube is occupied; A larger\r\ncube cannot be placed on top of a smaller cube.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "math"
    ],
    "dificulty": "",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Fibonacci Cubes.json"
}