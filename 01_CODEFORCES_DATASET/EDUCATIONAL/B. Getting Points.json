{"link": "https://codeforces.com//contest/1902/problem/B", "problemId": "2362199", "problem_idx": "B", "shortId": "1902B", "contest_number": "1902", "problem_submissions": {"B": [235588094, 235541813, 235538695, 235540200, 235541986, 235546581, 235539624, 235542221, 235543196, 235570763, 235543003, 235539161, 235543236, 235569611, 235570026, 235542153, 235655407, 235543168, 235545066, 235549273, 235544565, 235544393], "D": [235587336, 235552561, 235553295, 235563680, 235553330, 235555395, 235568492, 235559700, 235568658, 235567617, 235560146, 235561416, 235554309, 235551620, 235562986, 235561764, 235586816, 235566705, 235566898, 235564749, 235564461], "E": [235583583, 235582606, 235582050, 235581289, 235558586, 235559098, 235551541, 235558190, 235559848, 235566108, 235566192, 235566094, 235564789, 235564113, 235549751, 235553064, 235566369, 235568437, 235561807, 235546129, 235601857, 235573551, 235578412, 235572635, 235576054, 235577219, 235558759], "F": [235562465, 235568838, 236129130, 236129102, 235556472, 235565709, 235569182, 235561417, 235572126, 235555263, 235543234, 235574528, 235579496, 235582447, 235591540, 235554289, 235597722, 235587185, 235557652, 235580838, 235744278, 235581308, 235591762, 235592390], "C": [235547363, 235542973, 235546654, 235544681, 235542274, 235544554, 235550388, 235549932, 235558653, 235546403, 235544913, 235545913, 235542697, 235566604, 235546411, 235656040, 235549867, 235560184, 235557908, 235596779, 235549641, 235614612, 235549186], "A": [235534144, 235534113, 235534651, 235534058, 235534240, 235534127, 235534119, 235534985, 235553076, 235538076, 235534100, 235534474, 235534171, 235570865, 235534497, 235654959, 235535402, 235534132, 235535287, 235538251, 235534330]}, "name": "B. Getting Points", "statement": "Monocarp is a student at Berland State University. Due to recent changes\r\nin the Berland education system, Monocarp has to study only one subject\r\nprogramming.The academic term consists of n days, and in order not to\r\nget expelled, Monocarp has to earn at least P points during those n\r\ndays. There are two ways to earn points completing practical tasks and\r\nattending lessons. For each practical task Monocarp fulfills, he earns t\r\npoints, and for each lesson he attends, he earns l points.Practical\r\ntasks are unlocked \"each week\" as the term goes on: the first task is\r\nunlocked on day 1 (and can be completed on any day from 1 to n), the\r\nsecond task is unlocked on day 8 (and can be completed on any day from 8\r\nto n), the third task is unlocked on day 15, and so on.Every day from 1\r\nto n, there is a lesson which can be attended by Monocarp. And every\r\nday, Monocarp chooses whether to study or to rest the whole day. When\r\nMonocarp decides to study, he attends a lesson and can complete tasks,\r\nwhich are already unlocked and not completed yet. If Monocarp rests the\r\nwhole day, he skips a lesson and ignores tasks.Monocarp wants to have as\r\nmany days off as possible, i. e. he wants to maximize the number of days\r\nhe rests. Help him calculate the maximum number of days he can rest!\r\n", "solutions": ["#include <iostream>\nusing namespace std;\n\nusing lint = long long;\n\nlint solve() {\n    lint N, P, L, T;\n    cin >> N >> P >> L >> T;\n    lint ng = -1, ok = N;\n\n    const lint ntask = 1 + (N - 1) / 7;\n\n    while (ok - ng > 1) {\n        lint c = (ok + ng) / 2;\n        lint tmp = min(ntask, c * 2) * T + L * c;\n        (tmp >= P ? ok : ng) = c;\n    }\n    return N - ok;\n}\n\nint main() {\n    cin.tie(nullptr)->sync_with_stdio(false);\n\n    int T;\n    cin >> T;\n    while (T--) cout << solve() << '\\n';\n}\n"], "input": "", "output": "", "tags": ["binary search", "brute force", "greedy"], "dificulty": "1100", "interactive": false}