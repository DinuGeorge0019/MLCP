{"link": "https://codeforces.com//contest/985/problem/C", "problemId": "184584", "problem_idx": "C", "shortId": "985C", "contest_number": "985", "problem_submissions": {"G": [38542149, 38512186, 38512236, 38513581, 38508155, 38634852, 38634344, 38634277, 38515048], "F": [38499146, 38499001, 38501533, 38502149, 44969812, 38501168, 38505525, 38502880, 38530512, 38499950, 38499753, 38505154, 38503491, 38504126, 38510981, 38505877, 38504312, 38507584, 38509250, 38506993, 38507253], "E": [38493702, 38497357, 38497944, 38499266, 38496305, 38496738, 38500977, 38502378, 38496622, 38497691, 38498718, 38497100, 38498488, 38496555, 38502188, 38501286, 38496578, 38488837, 38503513, 38500067, 38501389], "D": [38491674, 38495666, 38493742, 38495486, 38495900, 38495531, 38494634, 38495573, 38493765, 38502434, 38497951, 38500032, 38496113, 38498092], "C": [38489266, 38490508, 38491062, 38490764, 38489327, 38492089, 38489607, 38491317, 38489050, 38492258, 38493205, 38490810, 38490379, 38491131, 38492401, 38495949, 38492200, 38493338, 38495062], "B": [38486666, 38488118, 38487524, 38488045, 38487258, 38487260, 38487379, 38487785, 38486818, 38488660, 38487046, 38487281, 38487622, 38487410, 38487870, 38578001, 38491648, 38488972, 38488613, 38488764], "A": [38486349, 38486599, 38486409, 38487064, 38486426, 38486427, 38486493, 38486415, 38486362, 38487242, 38486378, 38489634, 38486554, 38486364, 38486402, 38577942, 38487704, 38486613, 38486447, 38487421]}, "name": "C. Liebig's Barrels", "statement": "You have wooden staves. The -th stave has length . You have to assemble\r\nbarrels consisting of staves each, you can use any staves to construct a\r\nbarrel. Each stave must belong to exactly one barrel.Let volume of\r\nbarrel be equal to the length of the stave in it. You want to assemble\r\nexactly barrels with the maximal total sum of volumes. But you have to\r\nmake them , so a difference between volumes of any pair of the resulting\r\nbarrels must not exceed , i.e. for any and .Print maximal total sum of\r\nvolumes of barrels or if it\u2019s impossible to satisfy the condition above.\r\n", "solutions": ["#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> cd;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\ntypedef pair<ld,ld> pd;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\ntypedef vector<cd> vcd;\n\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nconst int MOD = 1000000007;\nconst ll INF = 1e18;\nconst int MX = 100001;\n\nint n,k,l, need[MX];\nvi a;\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    cin >> n >> k >> l;\n    F0R(i,n*k) {\n        int x; cin >> x;\n        a.pb(x);\n    }\n    sort(all(a));\n    int num = 0;\n    for (int x: a) if (x-a[0] <= l) num ++;\n    if (num < n) {\n        cout << 0;\n        exit(0);\n    }\n    F0R(i,n) {\n        need[i] ++;\n        num --;\n    }\n    F0R(i,n) {\n        int z = min(k-1,num);\n        need[i] += z;\n        num -= z;\n    }\n    ll t = 0, ans = 0;\n    F0R(i,n) {\n        ans += a[t];\n        t += need[i];\n    }\n    cout << ans;\n}\n\n// read the question correctly (is y a vowel? what are the exact constraints?)\n// look out for SPECIAL CASES (n=1?) and overflow (ll vs int?)"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1500", "interactive": false}