{"link": "https://codeforces.com//contest/1027/problem/F", "problemId": "209493", "problem_idx": "F", "shortId": "1027F", "contest_number": "1027", "problem_submissions": {"G": [41777591, 41794075, 41789651, 41795096, 41939341, 41938165, 41796137, 42098879, 42133042], "E": [41771294, 41773308, 41779379, 41769311, 41773946, 41775704, 41772136, 41773355, 41779847, 41781989, 41784347, 41777571, 41784573, 41777063, 41778773, 41776995, 41786639, 41778631, 41778849, 41779109], "F": [41768065, 41785375, 41776031, 41777064, 64515193, 41778051, 41781324, 41779089, 41778653, 41776480, 41776867, 41774399, 41778108, 41783735, 41779480, 41782813, 41784214, 42675272, 42673408, 41785662, 41778618, 41786449, 41792717, 41792403, 41790072, 41787559, 41785600], "D": [41766114, 41769377, 41772019, 41765799, 41768093, 41767980, 41769938, 41769777, 41767951, 41766660, 41768756, 41770224, 41770243, 41773173, 41773790, 41772403, 41773900, 41774900, 41773430, 41773585], "C": [41765079, 41766031, 41768208, 41764342, 41765993, 41765549, 41767982, 41768445, 41764158, 41772730, 41766169, 41767810, 41767876, 41767390, 41770932, 41768551, 41769543, 41768596, 41768222, 41768699, 41769864, 41769626], "B": [41762630, 41763189, 41765301, 41762037, 41763563, 41762756, 41764132, 41765033, 41765562, 41762467, 41763527, 41764762, 41763245, 41763720, 41763112, 41766236, 41764943, 41765112, 41765051, 41766842], "A": [41761297, 41761064, 41763316, 41761011, 41761231, 41761105, 41761008, 41761632, 41761600, 41761296, 41761079, 41761346, 41761160, 41761251, 41761159, 41761563, 41761142, 41761529, 41761274, 41764617]}, "name": "F. Session in BSU", "statement": "Polycarp studies in Berland State University. Soon he will have to take\r\nhis exam. He has to pass exactly n exams.For the each exam i there are\r\nknown two days: a_i day of the first opportunity to pass the exam, b_i\r\nday of the second opportunity to pass the exam (a_i < b_i). Polycarp\r\nduring each day. For each exam Polycarp chooses by himself which day he\r\nwill pass this exam. He has to pass all the n exams.Polycarp wants to\r\npass all the exams as soon as possible. Print the minimum index of day\r\nby which Polycarp can pass all the n exams, or print if he cannot pass\r\nall the exams at all.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int N = (int)2e6 + 100;\nint n, m;\nint xs[N];\nint ed[N][2];\nint par[N];\nint sz[N];\nint a[N][2];\nint b[N];\n\nint getPar(int v) {\n\treturn par[v] == -1 ? v : par[v] = getPar(par[v]);\n}\nvoid unite(int v, int u) {\n\tv = getPar(v);\n\tu = getPar(u);\n\tb[v]++;\n\tif (v == u) return;\n\tif (sz[v] < sz[u]) swap(sz[v], sz[u]);\n\tpar[u] = v;\n\tsz[v] += sz[u];\n\tb[v] += b[u];\n\tfor (int i = 0; i < 2; i++) {\n\t\tint t = a[u][i];\n\t\tfor (int j = 0; j < 2; j++) {\n\t\t\tif (a[v][j] < t)\n\t\t\t\tswap(a[v][j], t);\n\t\t}\n\t}\n}\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t\tfor (int j = 0; j < 2; j++) {\n\t\t\tscanf(\"%d\", &ed[i][j]);\n\t\t\txs[m++] = ed[i][j];\n\t\t}\n\tsort(xs, xs + m);\n\tm = unique(xs, xs + m) - xs;\n\tfor (int i = 0; i < n; i++)\n\t\tfor (int j = 0; j < 2; j++)\n\t\t\ted[i][j] = lower_bound(xs, xs + m, ed[i][j]) - xs;\n\tfor (int i = 0; i < m; i++) {\n\t\tpar[i] = -1;\n\t\tsz[i] = 1;\n\t\ta[i][0] = i;\n\t\ta[i][1] = -1;\n\t\tb[i] = 0;\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tunite(ed[i][0], ed[i][1]);\n\tint ans = -1;\n\tfor (int v = 0; v < m; v++) {\n\t\tif (par[v] != -1) continue;\n\t\tif (b[v] > sz[v]) {\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tans = max(ans, a[v][sz[v] - b[v]]);\n\t}\n\tprintf(\"%d\\n\", xs[ans]);\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "dfs and similar", "dsu", "graph matchings", "graphs"], "dificulty": "2400", "interactive": false}