{"link": "https://codeforces.com//contest/1895/problem/F", "problemId": "2305460", "problem_idx": "F", "shortId": "1895F", "contest_number": "1895", "problem_submissions": {"F": [231327821, 231171975, 231177341, 231177139, 231181247, 231175451, 231179505, 231178754, 231171033, 231178007, 231174701, 231183326, 231187269, 231180010, 231181283, 231185538, 231191457, 231188914, 231183055, 231180065, 231188744], "E": [231166411, 231162837, 231168539, 231171744, 231170279, 231169982, 231169182, 231183134, 231173048, 231168317, 231174671, 231173323, 231173438, 231175391, 231175133, 231176680, 231179383, 231171479, 231175722, 231195510], "D": [231152062, 231147559, 231156462, 231152946, 231160742, 231157174, 231157872, 231159102, 231163758, 231163699, 231163345, 231153744, 231159964, 231158155, 231162193, 231160798, 231161526, 231144729, 231162242, 231164715, 231182588, 231152194], "C": [231148538, 231143114, 231150605, 231147252, 231154149, 231154615, 231153991, 231151789, 231144066, 231169078, 231151364, 231154661, 231154195, 231153927, 231153798, 231162003, 231153879, 231145977, 231148366, 231148040], "B": [231139170, 231136290, 231139512, 231137580, 231137719, 231135569, 231140209, 231138699, 231136948, 231136771, 231139306, 231136791, 231139010, 231138206, 231140302, 231137608, 231140161, 231139339, 231137240, 231137323], "A": [231135878, 231135554, 231135956, 231135743, 231135841, 231137384, 231140495, 231135913, 231135720, 231135699, 231136135, 231135592, 231135620, 231135621, 231136784, 231135521, 231136631, 231135611, 231135732, 231135594], "G": [231214354, 231210500, 231273875, 231214703, 231213900, 231213313]}, "name": "F. Fancy Arrays", "statement": "Let\u2019s call an array a of n non-negative integers if the following\r\nconditions hold: at least one from the numbers x, x + 1, ..., x+k-1\r\nappears in the array; consecutive elements of the array differ by at\r\nmost k (i.e. |a_i-a_{i-1}|\r\nle k for each i\r\nin [2, n]). You are given n, x and k. Your task is to calculate the\r\nnumber of arrays of length n. Since the answer can be large, print it\r\nmodulo 10^9+7.\r\n", "solutions": ["#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing ll=long long;\nusing ld=long double;\nconst ll ILL=2167167167167167167;\nconst int INF=2100000000;\nconst int mod=1e9+7;\n#define rep(i,a,b) for (int i=(int)(a);i<(int)(b);i++)\n#define all(p) p.begin(),p.end()\ntemplate<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;\ntemplate<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}\ntemplate<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}\ntemplate<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}\ntemplate<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}\ntemplate<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}\ntemplate<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}\nvoid yneos(bool a,bool upp=0){if(a) cout<<(upp?\"YES\\n\":\"Yes\\n\"); else cout<<(upp?\"NO\\n\":\"No\\n\");}\ntemplate<class T> void vec_out(vector<T> &p,int ty=0){\nif(ty==2){cout<<'{';for(int i=0;i<(int)p.size();i++){if(i){cout<<\",\";}cout<<'\"'<<p[i]<<'\"';}cout<<\"}\\n\";}\nelse{if(ty==1){cout<<p.size()<<\"\\n\";}for(int i=0;i<(int)(p.size());i++){if(i) cout<<\" \";cout<<p[i];}cout<<\"\\n\";}}\ntemplate<class T> T vec_min(vector<T> &a){assert(!a.empty());T ans=a[0];for(auto &x:a) chmin(ans,x);return ans;}\ntemplate<class T> T vec_max(vector<T> &a){assert(!a.empty());T ans=a[0];for(auto &x:a) chmax(ans,x);return ans;}\ntemplate<class T> T vec_sum(vector<T> &a){assert(!a.empty());T ans=a[0]-a[0];for(auto &x:a) ans+=x;return ans;}\nint pop_count(long long a){int res=0;while(a){res+=(a&1),a>>=1;}return res;}\n\nll jyo(ll x,ll y,ll z){\n  ll H=y; //\u3053\u3053\u304b\u3089\n       ll a=1,b=(x%z+z)%z,c=1;\n       while(H>0){\n         a*=2;\n         if(H%a!=0){\n           H-=a/2;\n           c*=b;\n           c%=z;\n         }\n        b*=b;\n         b%=z;\n      } //\u3053\u3053\u307e\u3067\n return c;\n}\n\n\n\ntemplate<class T>\nusing square_matrix=std::vector<std::vector<T>>;\ntemplate<class T,T (*add_op)(T,T),T(*add_e)(),T (*mul_op)(T,T),T(*mul_e)()>\nsquare_matrix<T> mul_matrix(square_matrix<T> l,square_matrix<T> r){\n    int n=l.size();\n    assert((int)l[0].size()==n&&(int)r.size()==n&&(int)r[0].size()==n);\n    square_matrix<T> val(n,std::vector<T>(n,add_e()));\n    for(int i=0;i<n;i++) for(int j=0;j<n;j++) for(int k=0;k<n;k++){\n        val[i][k]=add_op(val[i][k],mul_op(l[i][j],r[j][k]));\n    }\n    return val;\n}\ntemplate<class T,T (*add_op)(T,T),T(*add_e)(),T (*mul_op)(T,T),T(*mul_e)()>\nsquare_matrix<T> pow_matrix(square_matrix<T> l,long long times){\n    int n=l.size();\n    square_matrix<T> val(n,std::vector<T>(n,add_e()));\n    square_matrix<T> tmp(n,std::vector<T>(n,add_e()));\n    for(int i=0;i<n;i++) val[i][i]=mul_e();\n    while(times){\n        if(times&1){\n            for(int i=0;i<n;i++) for(int j=0;j<n;j++){\n                tmp[i][j]=add_e();\n            }\n            for(int i=0;i<n;i++) for(int j=0;j<n;j++) for(int k=0;k<n;k++){\n                tmp[i][k]=add_op(tmp[i][k],mul_op(val[i][j],l[j][k]));\n            }\n            swap(tmp,val);\n        }\n        for(int i=0;i<n;i++) for(int j=0;j<n;j++) tmp[i][j]=add_e();\n        for(int i=0;i<n;i++) for(int j=0;j<n;j++) for(int k=0;k<n;k++){\n            tmp[i][k]=add_op(tmp[i][k],mul_op(l[i][j],l[j][k]));\n        }\n        swap(tmp,l);\n        times>>=1;\n    }\n    return val;\n}\n\nusing mat_F=ll;\nmat_F add_op(mat_F a,mat_F b){\n    return (a+b)%mod;\n}\nmat_F add_e(){\n    return 0;\n}\nmat_F mul_op(mat_F a,mat_F b){\n    return (a*b)%mod;\n}\nmat_F mul_e(){\n    return 1;\n}\n#define calc mat_F,add_op,add_e,mul_op,mul_e\n\n\n\nvoid solve();\n// oddloop\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    \n    int t=1;\n    cin>>t;\n    rep(i,0,t) solve();\n}\n\nvoid solve(){\n    ll N,K,X;\n    cin>>N>>X>>K;\n    ll ans=jyo(2*K+1,N-1,mod)*K%mod;\n    if(X==0){\n        cout<<ans<<\"\\n\";\n        return;\n    }\n    ans=jyo(2*K+1,N-1,mod)*(X+K)%mod;\n    vector p(X,vector<ll>(X));\n    rep(i,0,X) rep(j,0,X){\n        if(abs(i-j)<=K) p[i][j]=1;\n    }\n    p=pow_matrix<calc>(p,N-1);\n    for(auto x:p) for(auto y:x) ans=(ans-y)%mod;\n    cout<<(ans%mod+mod)%mod<<\"\\n\";\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp", "math", "matrices"], "dificulty": "2600", "interactive": false}