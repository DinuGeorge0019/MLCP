{
    "link": "https://codeforces.com//contest/1155/problem/B",
    "problemId": "334462",
    "problem_idx": "B",
    "shortId": "1155B",
    "contest_number": "1155",
    "problem_submissions": {
        "F": [
            53147227,
            53157176,
            53156900,
            53156084,
            53154052,
            53160034,
            53156325,
            53151832,
            53154755,
            53148688,
            53161959,
            53262750,
            53737446,
            53737379,
            53175185
        ],
        "E": [
            53135994,
            53143627,
            53147598,
            53158466,
            53136989,
            53158165,
            53136136,
            53151523,
            53138725,
            53138756,
            53143870,
            53141750,
            53144225,
            53141600,
            53144263,
            53142970,
            53144678,
            53143027,
            53146492,
            53139061
        ],
        "D": [
            53132284,
            53136375,
            53137845,
            53140433,
            53131955,
            53144376,
            53152771,
            53133770,
            53130242,
            53133856,
            53135466,
            53137404,
            53132457,
            53137383,
            53135331,
            53136120,
            53161942,
            53136545,
            53137490,
            53137142
        ],
        "C": [
            53130521,
            53133027,
            53132212,
            53133949,
            53152978,
            53158707,
            53154112,
            53130838,
            53134553,
            53131325,
            53130045,
            53131332,
            53135487,
            53132186,
            53132107,
            53133338,
            53132645,
            53132555,
            53132260
        ],
        "B": [
            53127872,
            53130197,
            53129680,
            53129662,
            53128390,
            53156310,
            53155054,
            53129416,
            53131929,
            53128726,
            53127750,
            53128694,
            53130002,
            53129606,
            53130017,
            53128669,
            53130637,
            53130008,
            53131121
        ],
        "A": [
            53127037,
            53127563,
            53127047,
            53127010,
            53127272,
            53156874,
            53155461,
            53127028,
            53127341,
            53127201,
            53128346,
            53127115,
            53128140,
            53127708,
            53127365,
            53130750,
            53128472,
            53127451,
            53127014
        ]
    },
    "name": "B. Game with Telephone Numbers",
    "statement": "A telephone number is a sequence of 11 digits such that its first digit\r\nis .Vasya and Petya are playing a game. Initially they have a string s\r\nof length n (n is odd) consisting of digits. Vasya makes the first move,\r\nthen players alternate turns. In one move the player choose a character\r\nand erase it from the current string. For example, if the current string\r\n, after the player\u2019s move it may be , or . The game ends when the length\r\nof string s becomes . If the resulting string is a telephone number,\r\nVasya wins, otherwise Petya wins.You have to determine if Vasya has a\r\nwinning strategy (that is, if Vasya can win the game no matter which\r\ncharacters Petya chooses during his moves).\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int N = 100100;\nchar s[N];\nint n;\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d %s\", &n, s);\n\tint bal = 0;\n\tfor (int i = 0; i < n - 10; i++) {\n\t\tif (s[i] == '8')\n\t\t\tbal++;\n\t\telse\n\t\t\tbal--;\n\t}\n\tif (bal > 0)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Game with Telephone Numbers.json",
    "editorial_link": "https://codeforces.com/blog/entry/66687",
    "editorial": "Let\u00e2\u0080\u0099s understand how players should act. Vasya needs to delete the first\r\ndigit that is not equal to , because the first digit of telephone number\r\nshould be , and the first digit not equal to is preventing it.Petya\r\nneeds to delete the first digit equal to , for the same reasons.So, all\r\nthat we need to do is delete first digits not equal to (if they exist),\r\nand first digits equal to (again if they exist). It\u00e2\u0080\u0099s enough to stop\r\nwhen there is either no \u00e2\u0080\u0099s left or no non-\u00e2\u0080\u0099s because the latter moves\r\nwon\u00e2\u0080\u0099t change the result of the game anyway. Finally, if first digit of\r\nresulting string is , then Vasya wins, otherwise Petya.Overall\r\ncomplexity: .\r\n"
}