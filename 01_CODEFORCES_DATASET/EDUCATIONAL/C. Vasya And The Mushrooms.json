{
    "link": "https://codeforces.com//contest/1016/problem/C",
    "problemId": "204438",
    "problem_idx": "C",
    "shortId": "1016C",
    "contest_number": "1016",
    "problem_submissions": {
        "G": [
            41182699,
            41182152,
            41208590,
            41208565,
            41208533,
            41186176
        ],
        "E": [
            41176649,
            41174782,
            41175307,
            41175790,
            41176170,
            41175960,
            41179374,
            41176561,
            41175646,
            41175201,
            41179908,
            41184095,
            41179907,
            41172878,
            41174329,
            41178174,
            41177502,
            41177414,
            41176901,
            41187225,
            41186968,
            41177073,
            41179262,
            41178795,
            41177041
        ],
        "C": [
            41173342,
            41166585,
            41171261,
            41168340,
            41167894,
            41169421,
            41170385,
            41170240,
            41169071,
            41173849,
            41167601,
            41164969,
            41165695,
            41170115,
            41170716,
            41168026,
            41168718,
            41168530,
            41166879
        ],
        "F": [
            41171110,
            41181183,
            41180305,
            41183918,
            41185092,
            41183413,
            41183773,
            41181947,
            41183454,
            41180224,
            41185015,
            41178764,
            41188501,
            42098047,
            42098011,
            41192515,
            41197238,
            41187801
        ],
        "D": [
            41165638,
            41168213,
            41167884,
            41169638,
            41172158,
            41171342,
            41172221,
            41172202,
            41173341,
            41167097,
            41174977,
            41169216,
            41167575,
            41163502,
            41165286,
            41170742,
            41170760,
            41171944,
            41162657
        ],
        "B": [
            41161071,
            41162662,
            41164375,
            41162058,
            41164067,
            41164871,
            41164742,
            41161857,
            41162316,
            41161724,
            41169935,
            41161660,
            41162105,
            41161158,
            41162458,
            41162731,
            41163603,
            41163495,
            41169324
        ],
        "A": [
            41160184,
            41161181,
            41160522,
            41160409,
            41160935,
            41160830,
            41161646,
            41160641,
            41160349,
            41160611,
            41175572,
            41160281,
            41160461,
            41160190,
            41160493,
            41160416,
            41161519,
            41160623,
            41167976
        ]
    },
    "name": "C. Vasya And The Mushrooms",
    "statement": "Vasya\u2019s house is situated in a forest, and there is a mushroom glade\r\nnear it. The glade consists of two rows, each of which can be divided\r\ninto consecutive cells. For each cell Vasya knows how fast the mushrooms\r\ngrow in this cell (more formally, how many grams of mushrooms grow in\r\nthis cell each minute). Vasya spends exactly one minute to move to some\r\nadjacent cell. Vasya cannot leave the glade. Two cells are considered\r\nadjacent if they share a common side. When Vasya enters some cell, he\r\ninstantly collects all the mushrooms growing there.Vasya begins his\r\njourney in the left upper cell. Every minute Vasya must move to some\r\nadjacent cell, he cannot wait for the mushrooms to grow. He wants to\r\nvisit all the cells and maximize the total weight of the collected\r\nmushrooms. Initially, all mushrooms have a weight of . Note that Vasya\r\ndoesn\u2019t need to return to the starting cell.Help Vasya! Calculate the\r\nmaximum total weight of mushrooms he can collect.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N=303030;\nLL n, a[2][N], sa[2][N];\nLL rgt[2][N], lft[2][N];\nLL sum_to_rgt(int row, int li, int ri, int til){\n  if(li > ri) return 0;\n  LL ret=rgt[row][li]-rgt[row][ri+1];\n  //LL ret=rgt[row][ri]-rgt[row][li-1];\n  ret-=(n+n-til)*(sa[row][ri]-sa[row][li-1]);\n  return ret;\n}\nLL sum_to_lft(int row, int li, int ri, int til){\n  if(li > ri) return 0;\n  LL ret=lft[row][ri]-lft[row][li-1];\n  ret-=(n+1-til)*(sa[row][ri]-sa[row][li-1]);\n  return ret;\n}\nint main(){\n  scanf(\"%lld\", &n);\n  for(int i=0; i<2; i++)\n    for(int j=1; j<=n; j++){\n      scanf(\"%lld\", &a[i][j]);\n      sa[i][j]=sa[i][j-1]+a[i][j];\n    }\n  for(int i=0; i<2; i++)\n    for(int j=n, bns=n+n; j>=1; j--, bns--)\n      rgt[i][j]=rgt[i][j+1]+bns*a[i][j];\n  for(int i=0; i<2; i++)\n    for(int j=1, bns=n+n; j<=n; j++, bns--)\n      lft[i][j]=lft[i][j-1]+bns*a[i][j];\n  LL ans=0, pre=0;\n  for(int i=1, bns=0; i<=n; i++, bns+=2){\n    if(i&1){\n      {\n        LL tans=pre;\n        tans+=sum_to_rgt(0, i, n, bns+n-i);\n        tans+=sum_to_lft(1, i, n, bns+n-i+1);\n        ans=max(ans, tans);\n      }\n      pre+=a[0][i]*bns;\n      pre+=a[1][i]*(bns+1);\n    }else{\n      {\n        LL tans=pre;\n        tans+=sum_to_rgt(1, i, n, bns+n-i);\n        tans+=sum_to_lft(0, i, n, bns+n-i+1);\n        ans=max(ans, tans);\n      }\n      pre+=a[1][i]*bns;\n      pre+=a[0][i]*(bns+1);\n    }\n  }\n  ans=max(ans, pre);\n  printf(\"%lld\\n\", ans);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "implementation"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Vasya And The Mushrooms.json",
    "editorial_link": "https://codeforces.com/blog/entry/61015",
    "editorial": "A route visiting each cell exactly once can always be denoted as\r\nfollows: several (possibly zero) first columns of the glade are visited\r\nin a zigzag pattern, then Vasya goes to the right until the end of the\r\nglade, makes one step up or down and goes left until he visits all\r\nremaining cells: There are such routes. To calculate the weight of\r\ncollected mushrooms quickly, we will precompute three arrays for the\r\nfirst row of the glade and . will be used to compute the weight of\r\nmushrooms collected when Vasya moves to the right until the last column\r\nof the glade, when Vasya moves to the left from the last column, and to\r\nhandle the growth of mushrooms.Also we have to compute the same arrays\r\nfor the second row of the glade.Let\u00e2\u0080\u0099s iterate on the number of columns\r\nVasya will pass in a zigzag pattern and maintain the weight of mushrooms\r\nhe will collect while doing so. Then we have to add the weight of the\r\nmushrooms Vasya will gather while moving to the right, and then while\r\nmoving to the left. The first can be handled by arrays and , the second\r\nby arrays and .\r\n"
}