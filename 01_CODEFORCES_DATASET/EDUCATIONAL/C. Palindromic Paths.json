{
    "link": "https://codeforces.com//contest/1366/problem/C",
    "problemId": "646801",
    "problem_idx": "C",
    "shortId": "1366C",
    "contest_number": "1366",
    "problem_submissions": {
        "F": [
            83447668,
            83448434,
            83444622,
            83426763,
            83441574,
            83428280,
            83460965,
            83423891,
            83442353,
            83757770,
            83445090,
            83429919,
            83438895,
            83437207,
            83492622,
            83492442,
            83474062,
            83453556,
            83447806
        ],
        "G": [
            83429184,
            83428882,
            83457684,
            83412158,
            83433864,
            83437984,
            83494857,
            83757790,
            83510645,
            83444271,
            83455262,
            83440823,
            83444943,
            83578671,
            83450093
        ],
        "E": [
            83398532,
            83418602,
            83409360,
            83402434,
            83412489,
            83410962,
            83757722,
            83418361,
            83408316,
            83407997,
            83427080,
            83413277,
            83416924,
            83424580,
            83418188,
            83406625,
            83420403,
            83421638
        ],
        "D": [
            83393167,
            83406995,
            83402251,
            83397827,
            83397479,
            83404641,
            83397199,
            83402779,
            83757690,
            83407778,
            83401287,
            83402226,
            83406676,
            83407995,
            83406280,
            83407838,
            83409402,
            83421660,
            83414839,
            83414935
        ],
        "C": [
            83390782,
            83401605,
            83394916,
            83391593,
            83392337,
            83394149,
            83393867,
            83397548,
            83757664,
            83394207,
            83391231,
            83395559,
            83398133,
            83401855,
            83400985,
            83402206,
            83402544,
            83397821,
            83396193,
            83400630
        ],
        "B": [
            83389935,
            83490415,
            83397273,
            83390226,
            83389902,
            83389999,
            83390997,
            83390624,
            83757653,
            83390343,
            83389925,
            83392810,
            83391891,
            83392040,
            83392753,
            83394886,
            83392865,
            83391554,
            83391226,
            83391686
        ],
        "A": [
            83389637,
            83390640,
            83389645,
            83389626,
            83389634,
            83389655,
            83389755,
            83757620,
            83389748,
            83389663,
            83390083,
            83389875,
            83389821,
            83390216,
            83392108,
            83390187,
            83390121,
            83389679,
            83389858
        ]
    },
    "name": "C. Palindromic Paths",
    "statement": "You are given a matrix with n rows (numbered from 1 to n) and m columns\r\n(numbered from 1 to m). A number a_{i, j} is written in the cell\r\nbelonging to the i-th row and the j-th column, each number is either 0\r\nor 1.A chip is initially in the cell (1, 1), and it will be moved to the\r\ncell (n, m). During each move, it either moves to the next cell in the\r\ncurrent row, or in the current column (if the current cell is (x, y),\r\nthen after the move it can be either (x + 1, y) or (x, y + 1)). The chip\r\ncannot leave the matrix.Consider each path of the chip from (1, 1) to\r\n(n, m). A path is called if the number in the first cell is equal to the\r\nnumber in the last cell, the number in the second cell is equal to the\r\nnumber in the second-to-last cell, and so on.Your goal is to change the\r\nvalues in the minimum number of cells so that path is .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nvoid solve(){\n\tint n, m;\n\tcin >> n >> m;\n\tint s = n-1 + m-1;\n\tvector<vector<int> > freqs(n + m, vector<int>(2, 0));\n\tfor(int i = 0; i < n; i++){\n\t\tfor(int j = 0; j < m; j++){\n\t\t\tint a;\n\t\t\tcin >> a;\n\t\t\tif(i + j == (s - i - j)) continue;\n\t\t\tint r = min(i + j, s - i - j);\n\t\t\tfreqs[r][a]++;\n\t\t}\n\t}\n\tint ans = 0;\n\tfor(vector<int> z : freqs){\n\t\tans += min(z[0], z[1]);\n\t}\n\tcout << ans << '\\n';\n}\n\nint main(){\n\tios_base::sync_with_stdio(false), cin.tie(nullptr);\n\tint T;\n\tcin >> T;\n\twhile(T--) solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Palindromic Paths.json",
    "editorial_link": "https://codeforces.com//blog/entry/78735",
    "editorial": "Letâs group the cells by their distance from the starting point: the\r\ngroup consists of a single cell ; the group consists of the cells and ,\r\nand so on. In total, there are groups.Letâs analyze the groups and .\r\nThere are two cases: if or , then we are looking at the starting cell\r\nand the ending cell, and their contents should be equal; otherwise,\r\nsuppose two cells and belong to the same group. We can easily prove that\r\nthe contents of these two cells should be equal (for example, by\r\nanalyzing two paths that go through cell and coincide after this cell,\r\nbut one goes to from , and another from ) and, using induction, we can\r\nprove that the contents of all cells in a group should be equal. And\r\nsince the paths should be palindromic, the contents of the group should\r\nbe equal to the contents of the group . So, in each pair of groups, we\r\nshould calculate the number of âs and âs, and choose which of them to\r\nchange. Note that if is even, the central group has no pair, so it\r\nshould not be modified.\r\n",
    "hint": []
}