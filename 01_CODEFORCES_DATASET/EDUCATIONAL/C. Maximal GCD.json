{"link": "https://codeforces.com//contest/803/problem/C", "problemId": "104508", "problem_idx": "C", "shortId": "803C", "contest_number": "803", "problem_submissions": {"G": [26726035, 26727236, 26728097, 26728472, 26729664, 26728547, 26729890, 26729652, 26730512, 26730113, 26730878, 26731530, 26730264, 26729609, 26731875, 26731225, 26730998, 26731497, 85623556, 85623400, 85623203, 85610564, 26730604, 26731476, 26739085], "F": [26724381, 26725200, 26724999, 26724225, 26725048, 26726085, 26726135, 26725801, 26725931, 26726156, 26724237, 26725565, 26725769, 26725975, 26725077, 26727341, 219766415, 219762164, 86051599, 85608329, 85608294, 26727055, 26729462, 26724972, 26728098], "E": [26723728, 26723918, 26725958, 26726239, 26725998, 26724505, 26727035, 26727052, 26723853, 26725311, 26727501, 26726914, 26727667, 26727932, 26726295, 26728308, 219762036, 98250927, 85613733, 85609978, 26729021, 26728273, 26726912, 26725646], "D": [26722977, 26723233, 26723695, 26725081, 26724545, 26723805, 26724818, 26724584, 26727766, 26724054, 26726588, 26724927, 26726822, 26728941, 26727298, 26726013, 219765850, 219765028, 219764202, 219763496, 219763057, 219762723, 219441244, 219440803, 85611079, 85608311, 26727687, 26726965, 26728216, 26724323], "C": [26722334, 26722568, 26722532, 26722824, 26723265, 26722578, 26723153, 26723401, 26722404, 26722763, 26723297, 26723217, 26723235, 26723982, 26723346, 26723675, 242139836, 219765419, 219763158, 219763096, 219761007, 219442588, 146711212, 145821319, 145799672, 145735366, 145734989, 145733450, 98410618, 86049796, 85608695, 85608222, 26725413, 26725578, 26723041, 26729567, 26723237], "B": [26721944, 26722045, 26721880, 26722109, 26722081, 26722066, 26721973, 26722263, 26721992, 26722120, 26722619, 26722232, 26722292, 26722323, 26722429, 26722715, 219763640, 219440626, 219440279, 219439802, 219439698, 219439657, 219439387, 145736466, 145734257, 145732182, 145731921, 145731518, 145731457, 98408561, 86048023, 85606269, 85605951, 26723519, 26722908, 26722174, 26722306], "A": [26721819, 26721835, 26721801, 26721879, 26721871, 26721890, 26722559, 26722009, 26721857, 26721866, 26722146, 26721862, 26721911, 26721970, 26722141, 26722309, 219764352, 219763598, 219760906, 219439616, 145819775, 145737562, 145734009, 145733505, 145732992, 145731371, 98408337, 85608245, 85608205, 26725229, 26724294, 26721926, 26721904]}, "name": "C. Maximal GCD", "statement": "You are given positive integer number . You should create such sequence\r\nof positive numbers , that their sum is equal to and greatest common\r\ndivisor is maximal.Greatest common divisor of sequence is maximum of\r\nsuch numbers that every element of sequence is divisible by them.If\r\nthere is no possible sequence then output .\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <ctime>\n#include <string>\n#include <cstring>\n#include <complex>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\n\nint main()\n{\n//    freopen(\"input.txt\", \"r\", stdin);\n//    freopen(\"output.txt\", \"w\", stdout);\n\n    ll n, k;\n    scanf(\"%lld%lld\", &n, &k);\n    if (k > (ll)1e8)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    ll b = n / (k * (k + 1) / 2);\n    if (b == 0)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    ll r = 1;\n    for (ll x = 1; x * x <= n; x++)\n    {\n        if (n % x != 0) continue;\n        if (x <= b && x > r) r = x;\n        if (n / x <= b && n / x > r) r = n / x;\n    }\n    for (int i = 1; i < k; i++)\n        printf(\"%lld \", r * i);\n    n -= r * k * (k - 1) / 2;\n    printf(\"%lld\\n\", n);\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "math"], "dificulty": "1900", "interactive": false}