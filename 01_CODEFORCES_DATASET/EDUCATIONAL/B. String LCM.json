{"link": "https://codeforces.com//contest/1473/problem/B", "problemId": "864970", "problem_idx": "B", "shortId": "1473B", "contest_number": "1473", "problem_submissions": {"G": [104324184, 104387693, 104338182, 104349212, 104348798, 104346480, 104390780, 104390610, 104390495, 104389764, 104383982, 104383801, 104346655, 104341001, 104315264, 104352224, 104352185, 104375589, 104397435, 104397194, 104376606, 104352690, 104352754, 104352534, 104398919, 104398235, 104330024], "F": [104316672, 104314197, 104321921, 104322437, 104324528, 104322986, 104314395, 104317108, 104322022, 104311306, 136810058, 104327481, 104330457, 104324027, 104334280, 104334405, 104340043, 104329360, 104332558], "E": [104307026, 104303673, 104306129, 104311187, 104320601, 104327879, 104304639, 104302012, 104310767, 104318435, 104314089, 104313021, 104316783, 104313523, 104318767, 104312111, 104314876, 104327257, 104303395], "D": [104300616, 104298125, 104298419, 104305187, 104310558, 104332950, 104295784, 104297395, 104304904, 104298645, 104306694, 104301645, 104305953, 104307851, 104307522, 104307146, 104309694, 104303434, 104321617], "C": [104297127, 104291328, 104310275, 104297010, 104300137, 104335806, 104289962, 104291239, 104299846, 104320575, 104299422, 104297141, 104307584, 104296827, 104299646, 104301166, 104302797, 104297015, 104316440], "B": [104289189, 104283439, 104284166, 104288050, 104287625, 104337404, 104283726, 104283807, 104286751, 104285766, 104285844, 104292438, 104285398, 104287974, 104288404, 104287047, 104293072, 104288614, 104287425], "A": [104282920, 104280323, 104280823, 104280333, 104281130, 104338367, 104280298, 104280342, 104281217, 104281168, 104280838, 104286833, 104280557, 104280439, 104281300, 104280646, 104289104, 104281489, 104280913]}, "name": "B. String LCM", "statement": "Let\u2019s define a multiplication operation between a string a and a\r\npositive integer x: a\r\ncdot x is the string that is a result of writing x copies of a one after\r\nanother. For example, \"\"\r\ncdot\u00a02\u00a0= \"\", \"\"\r\ncdot\u00a05\u00a0= \"\".A string a is divisible by another string b if there exists\r\nan integer x such that b\r\ncdot x = a. For example, \"\" is divisible by \"\", but is not divisible by\r\n\"\" or \"\".LCM of two strings s and t (defined as LCM(s, t)) is the\r\nshortest non-empty string that is divisible by both s and t.You are\r\ngiven two strings s and t. Find LCM(s, t) or report that it does not\r\nexist. It can be shown that if LCM(s, t) exists, it is unique.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing i64 = long long;\nusing u64 = unsigned long long;\nusing u32 = unsigned;\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    int t;\n    std::cin >> t;\n    while (t--) {\n        std::string a, b;\n        std::cin >> a >> b;\n        int d = std::gcd(a.length(), b.length());\n        std::string a1, b1;\n        for (int i = 0; i < int(b.length()) / d; i++) {\n            a1 += a;\n        }\n        for (int i = 0; i < int(a.length()) / d; i++) {\n            b1 += b;\n        }\n        if (a1 == b1) {\n            std::cout << a1 << \"\\n\";\n        } else {\n            std::cout << \"-1\\n\";\n        }\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "math", "number theory", "strings"], "dificulty": "1000", "interactive": false}