{"link": "https://codeforces.com//contest/1000/problem/D", "problemId": "193657", "problem_idx": "D", "shortId": "1000D", "contest_number": "1000", "problem_submissions": {"G": [39718562, 39719543, 39731044, 39745353], "E": [39714455, 39714380, 39711396, 39717344, 39715216, 39714198, 39717274, 39714849, 39716315, 39710033, 39719087, 39714919, 39717269, 39719314, 39715149, 39718067, 39717227, 39715819, 39716698, 39714956], "F": [39713460, 39707084, 39730558, 39730512, 39730296, 39730270, 39730256, 39730239, 39730221, 39730211, 39730154, 39730127, 39730113, 39730102, 39730087, 39730070, 39730054, 39730038, 39730029, 39715353, 39714587, 39718375, 39717776, 39709495, 39717288, 39718275, 39707695, 39714904, 39719561, 39715859, 39716309, 41303353, 41303333, 39722296, 39721263, 39713335, 39715356, 39718313, 39720559, 39710578], "D": [39712036, 39711284, 39709815, 39710348, 39711331, 39711469, 39714291, 39712438, 39711322, 39711986, 39710186, 39711296, 39710596, 39711080, 39713011, 39710269, 39712921, 39714356, 39714670, 39711775], "C": [39709789, 39708273, 39708437, 39708497, 39707490, 39709711, 39711470, 39710285, 39709663, 39712657, 39707054, 39709385, 39707981, 39708400, 39708339, 39708579, 39711654, 39712280, 39711950, 39712277], "B": [39708786, 39709741, 39707292, 39706954, 39708573, 39707999, 39708997, 39708329, 39708450, 39715462, 39712282, 39720742, 39715883, 39713342, 39706846, 39709837, 39709912, 39706999, 39710604, 39710245, 39709682, 39713043], "A": [39706953, 39704546, 39704256, 39704278, 39704401, 39705070, 39705301, 39704306, 39704491, 39713520, 39705360, 39704298, 39704641, 39704487, 39704983, 39705096, 39704429, 39704776, 39705211, 39713228]}, "name": "D. Yet Another Problem On a Subsequence", "statement": "The sequence of integers a_1, a_2,\r\ndots, a_k is called a good array if a_1 = k - 1 and a_1 > 0. For\r\nexample, the sequences [3, -1, 44, 0], [1, -99] are good arrays, and the\r\nsequences [3, 7, 8], [2, 5, 4, 1], [0] are not.A sequence of integers is\r\ncalled good if it can be divided into a positive number of good arrays.\r\nEach good array should be a subsegment of sequence and each element of\r\nthe sequence should belong to exactly one array. For example, the\r\nsequences [2, -3, 0, 1, 4], [1, 2, 3, -3, -9, 4] are good, and the\r\nsequences [2, -3, 0, 1], [1, 2, 3, -3 -9, 4, 1] are not.For a given\r\nsequence of numbers, count the number of its that are good sequences,\r\nand print the number of such subsequences modulo .\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define fi first\n#define se second\n#define fin(s) freopen( s, \"r\", stdin );\n#define fout(s) freopen( s, \"w\", stdout );\n\nconst long long N = 1010;\nconst long long Q = 2e18;\nconst long long mod = 998244353;\nconst long long MAGIC = 30;\n\nusing namespace std;\n\nint n;\nint a[N];\nint d[N];\nint c[N][N];\n\nvoid solve()\n{\n        cin >> n;\n        for(int i = 1; i <= n; i++){\n                cin >> a[i];\n        }\n        for(int i = 1; i < N; i++){\n                for(int j = 0; j <= i; j++){\n                        if(j == 0 || i == j){\n                                c[i][j] = 1;\n                        }\n                        else{\n                                c[i][j] = c[i - 1][j - 1] + c[i - 1][j];\n                                if(c[i][j] >= mod){\n                                        c[i][j] -= mod;\n                                }\n                        }\n                }\n        }\n        int ans = 0;\n        for(int i = 1; i <= n; i++){\n                if(a[i] < 1){\n                        continue;\n                }\n                d[i] = 1;\n                for(int j = 1; j < i; j++){\n                        if(a[j] < 1){\n                                continue;\n                        }\n                        int col = i - j - 1;\n                        if(a[j] <= col){\n                                d[i] += 1ll * d[j] * c[col][a[j]] % mod;\n                                if(d[i] >= mod){\n                                        d[i] -= mod;\n                                }\n                        }\n                }\n                int col = n - i;\n                if(a[i] <= col){\n                        ans += 1ll * d[i] * c[col][a[i]] % mod;\n                        if(ans >= mod){\n                                ans -= mod;\n                        }\n                }\n        }\n        cout << ans << \"\\n\";\n}\n\nbool mtest = false; int main()\n{\n        //fin(\"input.txt\");\n        //fout(\"output.txt\");\n        //fin(\"island.in\");\n        //fout(\"island.out\");\n        ios_base::sync_with_stdio(0);\n        int TE = 1;\n        if(mtest)\n                cin >> TE;\n        while(TE--)\n                solve();\n        return 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "dp"], "dificulty": "1900", "interactive": false}