{"link": "https://codeforces.com//contest/1207/problem/B", "problemId": "393972", "problem_idx": "B", "shortId": "1207B", "contest_number": "1207", "problem_submissions": {"G": [59304889, 59306176, 59301627, 59302407, 59304210, 59305372, 59299826, 59307985, 59309136, 59355235, 59305105, 59306118, 59301046, 59312490, 59309174, 59287118, 59310203, 59295342, 59301224, 59539702, 59539581, 59351316], "F": [59294259, 59294479, 59293703, 59293849, 59293275, 59295696, 59294933, 59295843, 59294771, 59355160, 59296347, 59298285, 59281377, 59296537, 59297200, 59291269, 59286364, 59296630, 59287709, 59292729, 59290075], "E": [59292194, 59292083, 59291434, 59290312, 59295934, 59293256, 59291138, 59291830, 59292503, 59355130, 59293757, 59294706, 59287064, 59293320, 59294341, 59301962, 59302885, 59297608, 59313261, 59287955, 59288580], "D": [59288834, 59287831, 59288996, 59287685, 59289737, 59290739, 59290294, 59288360, 59289950, 59355097, 59292036, 59291781, 72384113, 59294418, 59290806, 59291351, 59299257, 59291468, 59299192, 59306695, 59285530, 59286504], "C": [59285396, 59284651, 59285140, 59282971, 59284725, 59287600, 59288738, 59284263, 59285344, 59354996, 59286662, 59287414, 59304338, 59287720, 59292924, 59296911, 59299362, 59300644, 59304203, 59281217, 59283117], "B": [59279519, 59278225, 59278842, 59278682, 59280115, 59279180, 59278245, 59278492, 59278908, 59354975, 59279326, 59282036, 59291564, 59283101, 59282410, 59293321, 59292638, 59301723, 59308496, 59277604, 59278398], "A": [59275875, 59276003, 59275839, 59276009, 59276337, 59276873, 59279814, 59276133, 59276212, 59354913, 59276348, 59277224, 59276516, 59275776, 59279300, 59292197, 59276302, 59302397, 59275866, 59275778, 59276055]}, "name": "B. Square Filling", "statement": "You are given two matrices A and B. Each matrix contains exactly n rows\r\nand m columns. Each element of A is either 0 or 1; each element of B is\r\ninitially 0.You may perform some operations with matrix B. During each\r\noperation, you choose any submatrix of B having size 2\r\ntimes 2, and replace every element in the chosen submatrix with 1. In\r\nother words, you choose two integers x and y such that 1\r\nle x < n and 1\r\nle y < m, and then set B_{x, y}, B_{x, y + 1}, B_{x + 1, y} and B_{x +\r\n1, y + 1} to 1.Your goal is to make matrix B equal to matrix A. Two\r\nmatrices A and B are equal if and only if every element of matrix A is\r\nequal to the corresponding element of matrix B.Is it possible to make\r\nthese matrices equal? If it is, you have to come up with a sequence of\r\noperations that makes B equal to A. Note that you don\u2019t have to minimize\r\nthe number of operations.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\nint a[55][55], b[55][55];\nint main() {\n    ios :: sync_with_stdio(0);\n    int n, m;\n    cin >> n >> m;\n    for(int i = 1; i <= n; i++) \n        for(int j = 1; j <= m; j++) cin >> a[i][j];\n    int ans = 0;\n    for(int i = 1; i < n; i++) {\n        for(int j = 1; j < m; j++) {\n            if(a[i][j] + a[i + 1][j] + a[i][j + 1] + a[i + 1][j + 1] == 4) {\n                b[i][j] = 1, b[i + 1][j] = 1, b[i][j + 1] = 1, b[i + 1][j + 1] = 1;\n                ans++;\n            }\n        }\n    }\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++) if(a[i][j] ^ b[i][j]) return puts(\"-1\"), 0;\n    cout << ans << endl;\n    for(int i = 1; i < n; i++) {\n        for(int j = 1; j < m; j++) {\n            if(a[i][j] + a[i + 1][j] + a[i][j + 1] + a[i + 1][j + 1] == 4) {\n                cout << i << ' ' << j << endl;\n            }\n        }\n    }\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "implementation"], "dificulty": "1200", "interactive": false}