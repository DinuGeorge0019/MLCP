{"link": "https://codeforces.com//contest/620/problem/F", "problemId": "45932", "problem_idx": "F", "shortId": "620F", "contest_number": "620", "problem_submissions": {"F": [15476784, 15481381, 15483385, 15501760, 15483713, 15483332, 15483269, 15486457, 110737274, 15560294, 15483002], "D": [15476004, 15475486, 15475046, 15475660, 15478283, 15474921, 15479173, 15478662, 15478888, 15480075, 15479882, 15476142, 15479569, 15476517, 15477414, 15476987, 15477430, 15481310], "E": [15473382, 15477169, 15483815, 15476430, 15478101, 15474547, 15477143, 15476019, 15475341, 15476219, 15475959, 15477453, 15479247, 15477250, 15479114, 15481223, 15479051, 15484874, 15484860, 15484177, 15484110, 15484033, 15483969, 15483912, 15483838, 15483788, 15478778, 15477351], "C": [15470876, 15472964, 15471929, 15471592, 15471646, 15471528, 15473335, 15473233, 15472403, 15472416, 15473511, 15471829, 15473844, 15472579, 15473548, 15472833, 15472615, 15472479, 15473711], "B": [15470277, 15471380, 15470857, 15470699, 15470633, 15470596, 15471005, 15471139, 15470850, 15471115, 15471308, 15470718, 15472406, 15471044, 15470836, 15471243, 15471685, 15471223], "A": [15470173, 15470408, 15470256, 15470217, 15470181, 15470174, 15470315, 15470332, 15470383, 15470351, 15470502, 15470184, 15471568, 15470376, 15470236, 15470211, 15470178, 15470460]}, "name": "F. Xors on Segments", "statement": "You are given an array with integers and queries. Each query is\r\ndescribed by two integers .Let\u2019s define the function . The function is\r\ndefined for only .For each query print the maximal value of the function\r\nover all .\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAX = 1000010;\n\nint z[MAX];\n\nconst int N = 50010;\n\nint a[N], g[N], b[N];\nint from[N], to[N], best[N];\n\nint main() {\n  z[0] = 0;\n  for (int i = 1; i < MAX; i++) {\n    z[i] = z[i - 1] ^ i;\n  }\n  int n, m;\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", a + i);\n    g[i] = z[a[i]];\n  }\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d %d\", from + i, to + i);\n    from[i]--; to[i]--;\n    best[i] = -1;\n  }\n  for (int i = 0; i < n; i++) {\n    int mx = 0;\n    for (int j = i; j < n; j++) {\n      int cur = g[i] ^ g[j] ^ (a[i] < a[j] ? a[i] : a[j]);\n      mx = max(mx, cur);\n      b[j] = mx;\n    }\n    for (int k = 0; k < m; k++) {\n      if (from[k] <= i && i <= to[k]) {\n        best[k] = max(best[k], b[to[k]]);\n      }\n    }\n  }\n  for (int k = 0; k < m; k++) {\n    printf(\"%d\\n\", best[k]);\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "strings", "trees"], "dificulty": "2800", "interactive": false}