{"link": "https://codeforces.com//contest/1861/problem/D", "problemId": "2187864", "problem_idx": "D", "shortId": "1861D", "contest_number": "1861", "problem_submissions": {"F": [221319232, 221334797, 221343700, 221334746, 221435327], "E": [221294949, 221294627, 221307083, 221304545, 221289987, 221293214, 221302482, 221312615, 221307967, 221303480, 221309861, 221307296, 221307859, 221320123, 221304501, 221805824, 221308535, 221309691, 221307994, 221314449, 221316461], "D": [221289547, 221296942, 221291864, 221307784, 221293468, 221297421, 221296816, 221288510, 221291806, 221295562, 221296430, 221296186, 221290647, 221296713, 221298445, 221297975, 221298865, 221297626, 221298343], "C": [221285558, 221285843, 221287563, 221293257, 221282816, 221283475, 221287126, 221284366, 221286970, 221291172, 221290155, 221290726, 221290133, 221287629, 221289108, 221291690, 221291845, 221290307, 221291196, 221291877], "B": [221280891, 221279490, 221280612, 221282637, 221278148, 221277443, 221280003, 221278598, 221281862, 221281453, 221282384, 221284462, 221279905, 221283500, 221283423, 221284241, 221280164, 221284009, 221283159], "A": [221277133, 221276828, 221277503, 221276971, 221276729, 221276717, 221276917, 221276888, 221277198, 221278164, 221278677, 221280809, 221276797, 221278399, 221277159, 221277434, 221276991, 221278067, 221276850]}, "name": "D. Sorting By Multiplication", "statement": "You are given an array a of length n, consisting of . You can perform\r\nthe following operation on this array any number of times (possibly\r\nzero): choose three integers l, r and x such that 1\r\nle l\r\nle r\r\nle n, and multiply every a_i such that l\r\nle i\r\nle r by x. Note that you can choose integer as x, it doesn\u2019t have to be\r\npositive.You have to calculate the minimum number of operations to make\r\nthe array a sorted in order (i. e. the condition a_1 < a_2 <\r\ndots < a_n must be satisfied).\r\n", "solutions": ["//~ while (clock()<=69*CLOCKS_PER_SEC)\n//~ #pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"O3\")\n//~ #pragma GCC target (\"avx2\")\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\nusing namespace std;\n\ntemplate <typename T>\nusing ordered_set =\n    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef LOCAL\n~debug() { cerr << endl; }\neni(!=) cerr << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n  *this << \"[\";\n  for (auto it = d.b; it != d.e; ++it)\n    *this << \", \" + 2 * (it == d.b) << *it;\n  ris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define shandom_ruffle random_shuffle\n\nusing ll=long long;\nusing pii=pair<int,int>;\nusing pll=pair<ll,ll>;\nusing vi=vector<int>;\nusing vll=vector<ll>;\nconst int nax=1000*1007;\n\nvoid ans(int v)\n{\n\tif (v)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n}\n\nint n;\n\nll tab[nax];\n\nint pref[nax];\nint suf[nax];\n\nint wyn;\n\nvoid test()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i=1; i<=n; i++)\n\t\tscanf(\"%lld\", &tab[i]);\n\tpref[0]=suf[n+1]=pref[1]=suf[n]=0;\n\tfor (int i=2; i<=n; i++)\n\t\tpref[i]=pref[i-1]+(tab[i]>=tab[i-1]);\n\tfor (int i=n-1; i>=1; i--)\n\t\tsuf[i]=suf[i+1]+(tab[i]>=tab[i+1]);\n\twyn=min(suf[1], pref[n]+1);\n\t//~ debug() << range(pref+1, pref+1+n);\n\t//~ debug() << range(suf+1, suf+1+n);\n\tfor (int i=1; i<n; i++)\n\t\twyn=min(wyn, pref[i]+1+suf[i+1]);\n\tprintf(\"%d\\n\", wyn);\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t\ttest();\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "greedy"], "dificulty": "1800", "interactive": false}