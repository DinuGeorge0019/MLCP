{
    "link": "https://codeforces.com//contest/1197/problem/C",
    "problemId": "376704",
    "problem_idx": "C",
    "shortId": "1197C",
    "contest_number": "1197",
    "problem_submissions": {
        "E": [
            57531154,
            57527419,
            57524743,
            57530013,
            57536981,
            57526074,
            57537246,
            57517565,
            57532671,
            57531296,
            57535739,
            57533494,
            57533139,
            57532015,
            57531974,
            57534465,
            57537214,
            57536595,
            57532983,
            57537941
        ],
        "F": [
            57526205,
            57536510,
            57543227,
            57542356,
            57545070,
            57550429,
            57543354,
            57546681,
            57528127,
            57549295,
            57552678,
            57550308,
            57548615,
            57551319,
            57581907,
            57549488,
            57548121,
            57552168,
            57768625,
            57596008
        ],
        "D": [
            57517769,
            57521167,
            57531349,
            57521225,
            57523524,
            57536466,
            57530751,
            57531287,
            57521039,
            57522693,
            57521081,
            57524029,
            57524614,
            57523599,
            57524677,
            65550218,
            65550195,
            57524514,
            57523363,
            57524805,
            57525867,
            57524276
        ],
        "C": [
            57514645,
            57521161,
            57515560,
            57517240,
            57519467,
            57517149,
            57517926,
            57531832,
            57516648,
            57519324,
            57516744,
            57516779,
            57517866,
            57515185,
            57519335,
            57518781,
            57516998,
            57518983,
            57516506,
            57517063
        ],
        "B": [
            57513686,
            57521152,
            57513883,
            57515172,
            57516705,
            57515562,
            57515187,
            57532696,
            57515047,
            57517088,
            57514854,
            57515032,
            57514991,
            57513966,
            57514537,
            57515780,
            57514347,
            57514964,
            57514669,
            57515319
        ],
        "A": [
            57513085,
            57521143,
            57513101,
            57513203,
            57513756,
            57513671,
            57513230,
            57532141,
            57513274,
            57513512,
            57513153,
            57513271,
            57513173,
            57513091,
            57513126,
            57513220,
            57513223,
            57513310,
            57513141,
            57513251
        ]
    },
    "name": "C. Array Splitting",
    "statement": "You are given a array a_1, a_2,\r\ndots, a_n (for each index i > 1 condition a_i\r\nge a_{i-1} holds) and an integer k.You are asked to divide this array\r\ninto k non-empty consecutive subarrays. Every element in the array\r\nshould be included in exactly one subarray. Let max(i) be equal to the\r\nmaximum in the i-th subarray, and min(i) be equal to the minimum in the\r\ni-th subarray. The cost of division is equal to\r\nsum\r\nlimits_{i=1}^{k} (max(i) - min(i)). For example, if a = [2, 4, 5, 5, 8,\r\n11, 19] and we divide it into 3 subarrays in the following way: [2, 4],\r\n[5, 5], [8, 11, 19], then the cost of division is equal to (4 - 2) +\r\n(5 - 5) + (19 - 8) = 13.Calculate the minimum cost you can obtain by\r\ndividing the array a into k non-empty consecutive subarrays.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int N = 300300;\nint n, k;\nint a[N];\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tn--;\n\tk--;\n\tint ans = a[n] - a[0];\n\tfor (int i = 0; i < n; i++)\n\t\ta[i] = a[i + 1] - a[i];\n\tsort(a, a + n);\n\treverse(a, a + n);\n\tfor (int i = 0; i < k; i++)\n\t\tans -= a[i];\n\tprintf(\"%d\\n\", ans);\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Array Splitting.json",
    "editorial_link": "https://codeforces.com/blog/entry/68615",
    "editorial": "Let\u00e2\u0080\u0099s carefully look at the coefficients with which the elements of the\r\narray will be included in the answer. If pair of adjacent elements and\r\nbelong to different subarrays then element will be included in the\r\nanswer with coefficient , and element with coefficient . So they add\r\nvalue to the answer.If element belongs to subarray with length then it\r\nwill be included in the sum with coefficient (because it will be\r\nincluded with coefficient and simultaneously). Elements at positions and\r\nwill be included with coefficients and respectively.So initially our\r\nanswer is . All we have to do is consider values and add up the minimal\r\nones to the answer.\r\n"
}