{
    "link": "https://codeforces.com//contest/1359/problem/A",
    "problemId": "634672",
    "problem_idx": "A",
    "shortId": "1359A",
    "contest_number": "1359",
    "problem_submissions": {
        "C": [
            81997007,
            81727058,
            81734733,
            81730835,
            81740916,
            81747939,
            81729612,
            81737303,
            81737447,
            81741656,
            81752868,
            81776094,
            81761832,
            81724495,
            81746226,
            81738450,
            81730327,
            81729715,
            81731437,
            81744227,
            81733481
        ],
        "F": [
            81812419,
            81764295,
            81854273,
            81854109,
            81853958,
            81778328,
            81787414,
            81786228,
            81796920,
            81794151,
            81788283,
            81787937,
            81784721,
            81790808,
            81789636,
            81804129,
            81796060,
            81778353,
            81798275,
            105524321,
            105524094,
            105524008,
            81799361,
            81796754,
            81795964,
            81808154,
            81868467,
            205746151,
            205745147,
            140844519
        ],
        "D": [
            81739116,
            81744503,
            81735878,
            81749048,
            81740279,
            81749196,
            81744086,
            81743897,
            81754255,
            81762454,
            81758312,
            81744429,
            81728105,
            81726622,
            81721526,
            81737234,
            81738327,
            81737186,
            81731810,
            81739976
        ],
        "E": [
            81734306,
            81750721,
            81743059,
            81759597,
            81729601,
            81756849,
            81752573,
            81749938,
            81761248,
            81768636,
            81784969,
            81729272,
            81731972,
            81733967,
            81747782,
            81743404,
            81743235,
            81742828,
            81736556,
            81742484
        ],
        "B": [
            81716705,
            81725433,
            81718596,
            81720832,
            81719267,
            81716337,
            81719010,
            81727250,
            81721619,
            81746513,
            81720940,
            81767813,
            81716284,
            81717634,
            81717996,
            81719942,
            81719713,
            81719807,
            81718363,
            81718512
        ],
        "A": [
            81715063,
            81720474,
            81715122,
            81715707,
            81715255,
            81715098,
            81715727,
            81721547,
            81715498,
            81744191,
            81715755,
            81770964,
            81715068,
            81715226,
            81715093,
            81715532,
            81715578,
            81715424,
            81715396,
            81715264
        ]
    },
    "name": "A. Berland Poker",
    "statement": "The game of Berland poker is played with a deck of n cards, m of which\r\nare jokers. k players play this game (n is divisible by k).At the\r\nbeginning of the game, each player takes\r\nfrac{n}{k} cards from the deck (so each card is taken by exactly one\r\nplayer). The player who has the maximum number of jokers is the winner,\r\nand he gets the number of points equal to x - y, where x is the number\r\nof jokers in the winner’s hand, and y is the maximum number of jokers\r\namong all other players. If there are two or more players with maximum\r\nnumber of jokers, all of them are winners and they get 0 points.Here are\r\nsome examples: n = 8, m = 3, k = 2. If one player gets 3 jokers and 1\r\nplain card, and another player gets 0 jokers and 4 plain cards, then the\r\nfirst player is the winner and gets 3 - 0 = 3 points; n = 4, m = 2, k =\r\n4. Two players get plain cards, and the other two players get jokers, so\r\nboth of them are winners and get 0 points; n = 9, m = 6, k = 3. If the\r\nfirst player gets 3 jokers, the second player gets 1 joker and 2 plain\r\ncards, and the third player gets 2 jokers and 1 plain card, then the\r\nfirst player is the winner, and he gets 3 - 2 = 1 point; n = 42, m = 0,\r\nk = 7. Since there are no jokers, everyone gets 0 jokers, everyone is a\r\nwinner, and everyone gets 0 points. Given n, m and k, calculate the\r\nmaximum number of points a player can get for winning the game.\r\n",
    "solutions": [
        "#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#endif\n//#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long double ld;\ntypedef long long ll;\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n//    freopen(\"input.txt\", \"r\", stdin);\n    int tst;\n    cin >> tst;\n    while (tst--) {\n        int n, m, k;\n        cin >> n >> m >> k;\n        int our = min(n / k, m);\n        int theirs = (m - our + k - 2) / (k - 1);\n        cout << our - theirs << '\\n';\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Berland Poker.json",
    "editorial_link": "https://codeforces.com//blog/entry/78116",
    "editorial": "There are many different ways to solve this problem. The easiest one, in\r\nmy opinion, is to iterate on the number of jokers the winner has (let it\r\nbe ) and the number of jokers the runner-up has (let it be ). Then the\r\nfollowing conditions should be met: (the winner doesnât have less jokers\r\nthan the runner-up); (the number of jokers in the winnerâs hand does not\r\nexceed the number of cards in his hand); (the number of jokers for these\r\ntwo players does not exceed the total number of jokers); (it is possible\r\nto redistribute remaining jokers among other players so that they have\r\nat most jokers). Iterating on and , then checking these constraints\r\ngives us a solution. It is possible to get a constant-time solution\r\nusing some greedy assumptions and math (the first player should get as\r\nmany jokers as possible, while the remaining jokers should be evenly\r\ndistributed among other players).\r\n",
    "hint": []
}