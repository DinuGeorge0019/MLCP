{"link": "https://codeforces.com//contest/1389/problem/C", "problemId": "686124", "problem_idx": "C", "shortId": "1389C", "contest_number": "1389", "problem_submissions": {"F": [88348682, 88338153, 88328943, 88335897, 88333690, 88373314, 88373278, 88339376, 88563610, 88324437, 88323357, 90193331, 88370216, 88338670, 88346193, 88335414, 88340450, 88343043, 88354834, 88350683, 88354635, 88351121, 88341928, 88353006, 88617212, 88617191, 88616644, 88339094], "G": [88341915, 88358421, 88361866, 88360257, 88360333, 88361126, 88563627, 88370757, 88366719, 88625823, 88368266], "E": [88316360, 88314884, 88313039, 88320696, 88327221, 88331067, 88563585, 88316358, 88316429, 88316758, 88324617, 88315489, 88322575, 88325697, 88318058, 88335501, 88333747, 88335296, 88331670, 88336084, 88330920], "D": [88313541, 88323588, 88322172, 88317239, 88320907, 88324683, 88563559, 88313756, 88311946, 88313492, 88320253, 88324924, 88317796, 88320516, 88314433, 88325709, 88322521, 88323822, 88326845, 88325546, 88326242], "C": [88305803, 88306793, 88305781, 88311961, 88313905, 88313498, 88563542, 88308288, 88306505, 88301578, 88306622, 88310987, 88310892, 88306012, 88305081, 88310508, 88309198, 88313956, 88307817, 88312102, 88315317], "B": [88302673, 88302689, 88302324, 88309761, 88336897, 88305352, 88563516, 88305445, 88304272, 88310119, 88303921, 88308221, 88312057, 88313228, 88301014, 88307222, 88306963, 88309964, 88398537, 88306205, 88308367, 88311740], "A": [88294762, 88294889, 88294798, 88296225, 88294786, 88295833, 88563453, 88295598, 88294725, 88294981, 88294767, 88294779, 88295244, 88294853, 88294700, 88297412, 88295036, 88299886, 88294845, 88296400, 88294879]}, "name": "C. Good String", "statement": "Let\u2019s call of some string t_1 t_2 t_3\r\ndots t_{n - 1} t_n as string t_2 t_3\r\ndots t_{n - 1} t_n t_1.Analogically, let\u2019s call of string t as string\r\nt_n t_1 t_2 t_3\r\ndots t_{n - 1}.Let\u2019s say string t is if its left cyclic shift is equal\r\nto its right cyclic shift.You are given string s which consists of\r\ndigits .What is the minimum number of characters you need to erase from\r\ns to make it good?\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__);fflush(stderr);\n#else\n\t#define eprintf(...) 42\n#endif\n\nusing ll = long long;\nusing ld = long double;\nusing uint = unsigned int;\nusing ull = unsigned long long;\ntemplate<typename T>\nusing pair2 = pair<T, T>;\nusing pii = pair<int, int>;\nusing pli = pair<ll, int>;\nusing pll = pair<ll, ll>;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n\nclock_t startTime;\ndouble getCurrentTime() {\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\nconst int N = 200200;\nconst int A = 10;\nchar s[N];\nint a[N];\nint ans;\nint n;\n\nint solveOne(int x) {\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++)\n\t\tif (a[i] == x)\n\t\t\tans++;\n\treturn ans;\n}\nint solveTwo(int x, int y) {\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (ans & 1) {\n\t\t\tif (a[i] == y)\n\t\t\t\tans++;\n\t\t} else {\n\t\t\tif (a[i] == x)\n\t\t\t\tans++;\n\t\t}\n\t}\n\tans -= (ans & 1);\n\treturn ans;\n}\n\nvoid solve() {\n\tscanf(\"%s\", s);\n\tn = strlen(s);\n\tfor (int i = 0; i < n; i++)\n\t\ta[i] = (int)(s[i] - '0');\n\tans = 0;\n\tfor (int i = 0; i < A; i++)\n\t\tans = max(ans, solveOne(i));\n\tfor (int i = 0; i < A; i++)\n\t\tfor (int j = 0; j < A; j++)\n\t\t\tif (i != j)\n\t\t\t\tans = max(ans, solveTwo(i, j));\n\tprintf(\"%d\\n\", n - ans);\n}\n\nint main()\n{\n\tstartTime = clock();\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) solve();\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "greedy", "two pointers"], "dificulty": "1500", "interactive": false}