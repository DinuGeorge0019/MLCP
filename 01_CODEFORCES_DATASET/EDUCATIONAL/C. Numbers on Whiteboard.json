{"link": "https://codeforces.com//contest/1430/problem/C", "problemId": "755155", "problem_idx": "C", "shortId": "1430C", "contest_number": "1430", "problem_submissions": {"G": [95237045, 95235075, 95240737, 97566243, 95239114, 95228241, 95221926, 95230929, 95239632, 95250364, 95455283, 95252471, 95256236, 95242546, 95303013, 98871928], "F": [95220487, 95228332, 95223150, 97566130, 95216783, 95250832, 95242433, 95256538, 95247019, 95248722, 95240985, 95228704, 95232008, 95232802, 95230075, 95232563, 95238448, 95465311, 95234311, 95232005], "E": [95211511, 95210553, 95208920, 97565966, 95208366, 95208320, 95213012, 95219246, 95219352, 95220042, 95209230, 95216025, 95206937, 95209011, 95216031, 95214609, 95202690, 95215844, 95218385], "D": [95208553, 95206064, 95205170, 97565921, 95205237, 95202655, 95224583, 95213640, 95216224, 95211198, 95204449, 95212306, 95215958, 95200930, 95207117, 95208215, 95216892, 95212972, 95215071], "C": [95197013, 95198163, 95199698, 97565869, 95200959, 95198168, 95198409, 95198669, 95209890, 95204911, 95197315, 95202373, 95200953, 95202547, 95204796, 95194169, 95198706, 95205881, 95210665], "B": [95195119, 95195489, 95196116, 97565818, 95196356, 95194999, 95195326, 95195742, 95196929, 95195601, 95195544, 95196763, 95197327, 95194053, 95194687, 95199867, 95195154, 95196136, 95196683], "A": [95193928, 95194100, 95194842, 97565779, 95194326, 95193977, 95194039, 95194134, 95194416, 95194244, 95194071, 95194430, 95194685, 95193941, 95193947, 95197083, 95194045, 95194254, 95194714]}, "name": "C. Numbers on Whiteboard", "statement": "Numbers 1, 2, 3,\r\ndots n (each integer from 1 to n once) are written on a board. In one\r\noperation you can erase any two numbers a and b from the board and write\r\none integer\r\nfrac{a + b}{2} instead.You should perform the given operation n - 1\r\ntimes and make the resulting number that will be left on the board as\r\nsmall as possible. For example, if n = 4, the following course of action\r\nis optimal: choose a = 4 and b = 2, so the new number is 3, and the\r\nwhiteboard contains [1, 3, 3]; choose a = 3 and b = 3, so the new number\r\nis 3, and the whiteboard contains [1, 3]; choose a = 1 and b = 3, so the\r\nnew number is 2, and the whiteboard contains [2]. It\u2019s easy to see that\r\nafter n - 1 operations, there will be left only one number. Your goal is\r\nto minimize it.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned ll\n#define uint unsigned\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define IT iterator\n#define PB push_back\n#define fi first\n#define se second\n#define For(i,j,k) for (int i=(int)(j);i<=(int)(k);i++)\n#define Rep(i,j,k) for (int i=(int)(j);i>=(int)(k);i--)\n#define CLR(a,v) memset(a,v,sizeof(a));\n#define CPY(a,b) memcpy(a,b,sizeof(a));\n#define debug puts(\"wzpakking\")\n#define y1 ysghysgsygsh\nusing namespace std;\n\nvoid solve(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tprintf(\"%d\\n\",2);\n\tint s=n;\n\tRep(i,n-1,1)\n\t{\n\t\tprintf(\"%d %d\\n\",s,i);\n\t\ts=(s+i+1)/2;\n\t}\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile (T--) solve();\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "dificulty": "1000", "interactive": false}