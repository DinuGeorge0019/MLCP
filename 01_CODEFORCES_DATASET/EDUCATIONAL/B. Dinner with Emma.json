{
    "link": "https://codeforces.com//contest/616/problem/B",
    "problemId": "45345",
    "problem_idx": "B",
    "shortId": "616B",
    "contest_number": "616",
    "problem_submissions": {
        "F": [
            15300786,
            15299144,
            15300407,
            15308014,
            15298659,
            15302230,
            15343881,
            15307137,
            15302999,
            15320984,
            15302125,
            15301613,
            15302389,
            16304774
        ],
        "E": [
            15294336,
            15296370,
            15296055,
            15299653,
            15294693,
            15294203,
            15295924,
            15295314,
            15296974,
            15298724,
            15298421,
            15296783,
            15296993,
            15297669,
            15298444,
            15297290,
            15298438,
            15297005,
            15297742,
            15294191,
            15296949
        ],
        "D": [
            15292434,
            15293329,
            15294173,
            15292753,
            15307747,
            15291461,
            15292962,
            15291869,
            15293349,
            15311532,
            15309884,
            15290895,
            15292938,
            15291478,
            15291995,
            15292322,
            15292029,
            15294220,
            15293485,
            15292134,
            15291999,
            15296150,
            15292776
        ],
        "C": [
            15291423,
            15291977,
            15292603,
            15292078,
            15290640,
            15291851,
            15293736,
            15291941,
            15292201,
            15291847,
            15290459,
            15291357,
            15293820,
            15291327,
            15293027,
            15292213,
            15291382,
            15291194,
            15291415,
            15291744
        ],
        "B": [
            15289897,
            15289576,
            15290149,
            15290568,
            15289808,
            15289641,
            15290425,
            15289878,
            15289727,
            15289729,
            15289456,
            15290134,
            15289943,
            15289714,
            15290242,
            15290500,
            15289857,
            15289675,
            15289746,
            15290000
        ],
        "A": [
            15289459,
            15289308,
            15289551,
            15290016,
            15289415,
            15289340,
            15289832,
            15289405,
            15289403,
            15289339,
            15289246,
            15289704,
            15289544,
            15307602,
            15289399,
            15289609,
            15325750,
            15289995,
            15289432,
            15289359,
            15289427,
            15289492
        ]
    },
    "name": "B. Dinner with Emma",
    "statement": "Jack decides to invite Emma out for a dinner. Jack is a modest student,\r\nhe doesn\u2019t want to go to an expensive restaurant. Emma is a girl with\r\nhigh taste, she prefers elite places.Munhattan consists of streets and\r\navenues. There is exactly one restaurant on the intersection of each\r\nstreet and avenue. The streets are numbered with integers from to and\r\nthe avenues are numbered with integers from to . The cost of dinner in\r\nthe restaurant at the intersection of the -th street and the -th avenue\r\nis .Jack and Emma decide to choose the restaurant in the following way.\r\nFirstly Emma chooses the street to dinner and then Jack chooses the\r\navenue. Emma and Jack makes their choice optimally: Emma wants to\r\nmaximize the cost of the dinner, Jack wants to minimize it. Emma takes\r\ninto account that Jack wants to minimize the cost of the dinner. Find\r\nthe cost of the dinner for the couple in love.\r\n",
    "solutions": [
        "#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n\ntypedef long long ll;\ntypedef double ld;\n\nusing namespace std;\n\n\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tint mx = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint mn = 2e9;\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tint a;\n\t\t\tcin >> a;\n\t\t\tmn = min(mn, a);\n\t\t}\n\t\tmx = max(mx, mn);\n\t}\n\tcout << mx << \"\\n\";\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "greedy"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Dinner with Emma.json",
    "editorial_link": "https://codeforces.com//blog/entry/22712",
    "editorial": "Firstly you should find the minimum value in each row and after that you\r\nshould find the maximum value over that minimums. It\u00e2\u0080\u0099s corresponding to\r\nthe strategy of Jack and Emma. C++ solution Complexity: .\r\n"
}