{
    "link": "https://codeforces.com//contest/616/problem/A",
    "problemId": "45344",
    "problem_idx": "A",
    "shortId": "616A",
    "contest_number": "616",
    "problem_submissions": {
        "F": [
            15300786,
            15299144,
            15300407,
            15308014,
            15298659,
            15302230,
            15343881,
            15307137,
            15302999,
            15320984,
            15302125,
            15301613,
            15302389,
            16304774
        ],
        "E": [
            15294336,
            15296370,
            15296055,
            15299653,
            15294693,
            15294203,
            15295924,
            15295314,
            15296974,
            15298724,
            15298421,
            15296783,
            15296993,
            15297669,
            15298444,
            15297290,
            15298438,
            15297005,
            15297742,
            15294191,
            15296949
        ],
        "D": [
            15292434,
            15293329,
            15294173,
            15292753,
            15307747,
            15291461,
            15292962,
            15291869,
            15293349,
            15311532,
            15309884,
            15290895,
            15292938,
            15291478,
            15291995,
            15292322,
            15292029,
            15294220,
            15293485,
            15292134,
            15291999,
            15296150,
            15292776
        ],
        "C": [
            15291423,
            15291977,
            15292603,
            15292078,
            15290640,
            15291851,
            15293736,
            15291941,
            15292201,
            15291847,
            15290459,
            15291357,
            15293820,
            15291327,
            15293027,
            15292213,
            15291382,
            15291194,
            15291415,
            15291744
        ],
        "B": [
            15289897,
            15289576,
            15290149,
            15290568,
            15289808,
            15289641,
            15290425,
            15289878,
            15289727,
            15289729,
            15289456,
            15290134,
            15289943,
            15289714,
            15290242,
            15290500,
            15289857,
            15289675,
            15289746,
            15290000
        ],
        "A": [
            15289459,
            15289308,
            15289551,
            15290016,
            15289415,
            15289340,
            15289832,
            15289405,
            15289403,
            15289339,
            15289246,
            15289704,
            15289544,
            15307602,
            15289399,
            15289609,
            15325750,
            15289995,
            15289432,
            15289359,
            15289427,
            15289492
        ]
    },
    "name": "A. Comparing Two Long Integers",
    "statement": "You are given two very long integers (leading zeroes are allowed). You\r\nshould check what number or is greater or determine that they are\r\nequal.The input size is very large so don’t use the reading of symbols\r\none by one. Instead of that use the reading of a whole line or token.As\r\ninput/output can reach huge size it is recommended to use fast\r\ninput/output methods: for example, prefer to use instead of in C++,\r\nprefer to use instead of in . Don’t use the function in instead of it\r\nuse the function .\r\n",
    "solutions": [
        "#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n\ntypedef long long ll;\ntypedef double ld;\n\nusing namespace std;\n\nchar a[2000000];\nchar b[2000000];\n\n\nint main() {\n\tscanf(\" %s\", a);\n\tscanf(\" %s\", b);\n\tint na = strlen(a);\n\tint nb = strlen(b);\n\tchar *a1 = a;\n\tchar *b1 = b;\n\twhile (na > 1 && a1[0] == '0') {\n\t\t++a1;\n\t\t--na;\n\t}\n\twhile (nb > 1 && b1[0] == '0') {\n\t\t++b1;\n\t\t--nb;\n\t}\n\tif (na != nb) {\n\t\tif (na > nb)\n\t\t\tcout << \">\";\n\t\telse\n\t\t\tcout << \"<\";\n\t}\n\telse {\n\t\tint x = strcmp(a1, b1);\n\t\tif (x == 0)\n\t\t\tcout << \"=\";\n\t\telse if (x < 0)\n\t\t\tcout << \"<\";\n\t\telse\n\t\t\tcout << \">\";\n\t}\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Comparing Two Long Integers.json",
    "editorial_link": "https://codeforces.com//blog/entry/22712",
    "editorial": "Note that solutions in Java with BigInteger class or input() function in\r\nPython2 will fail in this problem. The reason is the next: standard\r\nobjects stores numbers not in decimal system and need a lot of time to\r\nconvert numbers from decimal system. Actually they are working in ,\r\nwhere is the legth of the number. To solve this problem you should\r\nsimply read the numbers to strings and add leading zeroes to the shorter\r\none until the numbers will be of the same length. After that you should\r\nsimply compare them alphabetically. ++ solution Python solution\r\nComplexity: .\r\n",
    "hint": []
}