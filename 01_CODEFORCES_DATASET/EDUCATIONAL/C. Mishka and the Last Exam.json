{
    "link": "https://codeforces.com//contest/1093/problem/C",
    "problemId": "270224",
    "problem_idx": "C",
    "shortId": "1093C",
    "contest_number": "1093",
    "problem_submissions": {
        "F": [
            47064317,
            47066369,
            47072013,
            47063078,
            47070194,
            47066599,
            47069818,
            47071658,
            47069736,
            47073345,
            47066962,
            47067247,
            47069530,
            47073606,
            47073395,
            47061796,
            47063002,
            47067085,
            47069647
        ],
        "E": [
            47059940,
            47175053,
            47174990,
            47174965,
            47060977,
            47054377,
            47057431,
            47053669,
            47071310,
            47064501,
            47060021,
            47063571,
            47051018,
            47060722,
            47054485,
            47099037,
            47099010,
            47054662,
            47065797,
            47074158,
            47051089,
            47074689,
            47067318,
            47063903,
            47063526,
            47063507,
            47058046,
            47058483
        ],
        "G": [
            47051449,
            47054318,
            47060619,
            47069286,
            47064176,
            47054294,
            47058010,
            47064582,
            47059658,
            47045741,
            47069865,
            47071490,
            47044907,
            47068431,
            47054907,
            47076907,
            47070943,
            47045135,
            47052551,
            47065756,
            47061805,
            47064972
        ],
        "D": [
            47046394,
            47048590,
            47050157,
            47049421,
            47048833,
            47047771,
            47051232,
            47049608,
            47047579,
            47056236,
            47052390,
            47047717,
            47060889,
            47049097,
            47062998,
            47068801,
            47069194,
            47070905,
            47050207,
            47053679
        ],
        "C": [
            47043859,
            47045338,
            47046257,
            47046095,
            47044608,
            47045282,
            47047834,
            47047265,
            47045573,
            47053477,
            47049038,
            47043947,
            47058752,
            47044937,
            47064718,
            47070147,
            233878752,
            233878357,
            233877672,
            233874035,
            47071603,
            47073360,
            47045788,
            47044965
        ],
        "B": [
            47041242,
            47042516,
            47041777,
            47042122,
            47042500,
            47043090,
            47044535,
            47044930,
            47041021,
            47051714,
            47043546,
            47041074,
            47056563,
            47042532,
            47063756,
            47070397,
            47070118,
            47071889,
            47042554,
            47041254
        ],
        "A": [
            47040802,
            47041248,
            47040853,
            47040900,
            47040739,
            47042123,
            47040939,
            47043340,
            47040729,
            47052191,
            47041112,
            47040744,
            47075234,
            47055833,
            47041119,
            47063989,
            47070741,
            47069623,
            47071501,
            47041275,
            47040765
        ]
    },
    "name": "C. Mishka and the Last Exam",
    "statement": "Mishka is trying really hard to avoid being kicked out of the\r\nuniversity. In particular, he was doing absolutely nothing for the whole\r\nsemester, miraculously passed some exams so that just one is left.There\r\nwere n classes of that subject during the semester and on i-th class\r\nprofessor mentioned some non-negative integer a_i to the students. It\r\nturned out, the exam was to tell the whole sequence back to the\r\nprofessor. Sounds easy enough for those who attended every class,\r\ndoesn\u2019t it?Obviously Mishka didn\u2019t attend any classes. However,\r\nprofessor left some clues on the values of a to help out students like\r\nMishka: a was sorted in non-decreasing order (a_1\r\nle a_2\r\nle\r\ndots\r\nle a_n); n was even; the following sequence b, consisting of\r\nfrac n 2 elements, was formed and given out to students: b_i = a_i +\r\na_{n - i + 1}. Professor also mentioned that any sequence a, which\r\nproduces sequence b with the presented technique, will be\r\nacceptable.Help Mishka to pass that last exam. Restore any sorted\r\nsequence a of non-negative integers, which produces sequence b with the\r\npresented technique. It is guaranteed that there exists at least one\r\ncorrect sequence a, which produces the given sequence b.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 2e5 + 5;\nlong long b[maxn], a[maxn];\n\nint main() {\n    int n; scanf(\"%d\", &n);\n    for (int i = 0; i < n / 2; ++i) scanf(\"%lld\", &b[i]);\n    for (int i = 0, j = n - 1; i < n / 2; ++i, --j) {\n        long long x = max((i ? a[i - 1] : 0ll), (i ? b[i] - a[j + 1] : 0));\n        a[i] = x;\n        a[j] = b[i] - a[i];\n    }\n    for (int i = 0; i < n; ++i) printf(\"%lld \", a[i]);\n    puts(\"\");\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Mishka and the Last Exam.json",
    "editorial_link": "https://codeforces.com/blog/entry/63877",
    "editorial": "Let\u00e2\u0080\u0099s present the following greedy approach. The numbers will be\r\nrestored in pairs , and so on. Thus, we can have some limits on the\r\nvalues of the current pair (satisfying the criteria about sort).\r\nInitially, and they are updated with . Let be minimal possible in the\r\nanswer. Take and . That way was chosen in such a way that both and are\r\nwithin the restrictions and is also minimal possible. If was any greater\r\nthan we would move both limit up and limit down leaving less freedom for\r\nlater choices.Overall complexity: .Funnily enough, I coded some naive\r\nsolution just to test main correct and with restriction of on numbers it\r\npassed all tests in 300 ms at max. After I saw that I guessed why it\r\nworked in but it looked fun nonetheless.\r\n"
}