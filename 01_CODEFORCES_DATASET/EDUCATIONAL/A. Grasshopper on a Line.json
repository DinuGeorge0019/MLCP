{
    "link": "https://codeforces.com//contest/1837/problem/A",
    "problemId": "1937909",
    "problem_idx": "A",
    "shortId": "1837A",
    "contest_number": "1837",
    "problem_submissions": {
        "F": [
            207194085,
            207203613,
            207207682,
            207213171,
            207211865,
            207210824,
            207211176,
            207318425,
            207318356,
            207219269,
            207223400,
            207222112,
            207230081,
            209182293,
            207218386,
            207220953,
            207230258,
            207229992,
            207230774,
            207219053,
            207217652,
            207234599,
            207241428,
            207217300
        ],
        "E": [
            207188119,
            207194518,
            207187724,
            207193975,
            207201887,
            207200866,
            207200402,
            207204477,
            207201158,
            207203473,
            207202659,
            209182421,
            207206918,
            207295603,
            207295577,
            207295208,
            207212525,
            207205450,
            207220600,
            207221757,
            207209332,
            207208536,
            207213556,
            207215245,
            207197679
        ],
        "B": [
            207173438,
            207165428,
            207164196,
            207176139,
            207175678,
            207167732,
            207174974,
            207163573,
            207171463,
            207163877,
            207175371,
            207164199,
            207166728,
            209182537,
            207176961,
            207175758,
            207169369,
            207163934,
            207178400,
            207163937,
            207176249,
            207171837,
            207164338,
            207177413,
            207185470
        ],
        "D": [
            207172764,
            207180689,
            207175489,
            207169386,
            207180603,
            207183437,
            207177453,
            207182367,
            207184812,
            207187481,
            207183382,
            209182475,
            207187168,
            207187553,
            207189679,
            207186480,
            207191942,
            207180382,
            207189882,
            207187720,
            207180792
        ],
        "C": [
            207163791,
            207169258,
            207167268,
            207163200,
            207171135,
            207167990,
            207163968,
            207163247,
            207171084,
            207177546,
            207172770,
            209182511,
            207171094,
            207178509,
            207179374,
            207167154,
            207173221,
            207169406,
            207177662,
            207172590,
            207173505
        ],
        "A": [
            207156762,
            207156505,
            207156456,
            207156409,
            207157257,
            207156929,
            207156537,
            207156398,
            207156432,
            207157333,
            207156686,
            209182570,
            207157924,
            207157341,
            207156863,
            207156455,
            207156545,
            207156506,
            207157325,
            207156712,
            207156556
        ]
    },
    "name": "A. Grasshopper on a Line",
    "statement": "You are given two integers x and k. Grasshopper starts in a point 0 on\r\nan OX axis. In one move, it can jump some integer distance, , to the\r\nleft or to the right.What\u2019s the smallest number of moves it takes the\r\ngrasshopper to reach point x? What are these moves? If there are\r\nmultiple answers, print any of them.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++){\n    int x, k;\n    cin >> x >> k;\n    if (x % k != 0){\n      cout << 1 << endl;\n      cout << x << endl;\n    } else if (x % k != 1){\n      cout << 2 << endl;\n      cout << 1 << ' ' << x - 1 << endl;\n    } else {\n      cout << 2 << endl;\n      cout << -1 << ' ' << x + 1 << endl;\n    }\n  }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Grasshopper on a Line.json",
    "editorial_link": "https://codeforces.com//blog/entry/116752",
    "editorial": "When is not divisible by , the grasshopper can reach in just one\r\njump.Otherwise, you can show that two jumps are always enough. For\r\nexample, jumps and . is not divisible by any . Also, and can\u00e2\u0080\u0099t be\r\ndivisible by any at the same time.\r\n"
}