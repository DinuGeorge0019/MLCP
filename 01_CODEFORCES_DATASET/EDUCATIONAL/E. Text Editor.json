{"link": "https://codeforces.com//contest/1701/problem/E", "problemId": "1455053", "problem_idx": "E", "shortId": "1701E", "contest_number": "1701", "problem_submissions": {"F": [163251511, 163268194, 163257685, 163252572, 163254045, 163268305, 163279907, 163277017, 163279770, 163277875, 163278549, 163242709, 163276457, 163283113, 163287382, 163289836, 163287332, 163286601, 163290833, 163270658], "E": [163244868, 163259890, 163266161, 163272812, 163264648, 163275442, 163258821, 163268518, 163268841, 163260671, 163264743, 163281368, 163267683, 163251911, 163266438, 163264157, 163269030, 163266798, 163269366, 163285662], "D": [163228805, 163243794, 163241985, 163230350, 163241043, 163238273, 163235471, 163239458, 163247152, 163243702, 163253899, 163251145, 163245848, 163241441, 163251457, 163249655, 163254700, 163255033, 163238314, 163253263], "C": [163221033, 163229733, 163226787, 163222248, 163228927, 163224161, 163224146, 163230155, 163230384, 163234091, 163239295, 163237663, 163233141, 163239841, 163244784, 163239399, 163238796, 163229460, 163228482, 163229332], "B": [163216526, 163223020, 163218771, 163216500, 163222790, 163218690, 163217320, 163219287, 163222344, 163220198, 163229802, 163224763, 163220303, 163218845, 163218374, 163222260, 163227662, 163222420, 163219736, 163217995], "A": [163216029, 163216466, 163216829, 163216062, 163216261, 163216352, 163216058, 163216701, 163216924, 163216152, 163225075, 163216629, 163216398, 163216381, 163216162, 163216559, 163221320, 163216621, 163217196, 163216126]}, "name": "E. Text Editor", "statement": "You wanted to write a text t consisting of m lowercase Latin letters.\r\nBut instead, you have written a text s consisting of n lowercase Latin\r\nletters, and now you want to fix it by obtaining the text t from the\r\ntext s.Initially, the cursor of your text editor is at the end of the\r\ntext s (after its last character). In one move, you can do one of the\r\nfollowing actions: press the \"left\" button, so the cursor is moved to\r\nthe left by one position (or does nothing if it is pointing at the\r\nbeginning of the text, i. e. before its first character); press the\r\n\"right\" button, so the cursor is moved to the right by one position (or\r\ndoes nothing if it is pointing at the end of the text, i. e. after its\r\nlast character); press the \"home\" button, so the cursor is moved to the\r\nbeginning of the text (before the first character of the text); press\r\nthe \"end\" button, so the cursor is moved to the end of the text (after\r\nthe last character of the text); press the \"backspace\" button, so the\r\ncharacter before the cursor is removed from the text (if there is no\r\nsuch character, nothing happens). Your task is to calculate the minimum\r\nnumber of moves required to obtain the text t from the text s using the\r\ngiven set of actions, or determine it is impossible to obtain the text t\r\nfrom the text s.You have to answer T independent test cases.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 08.07.2022 18:52:09       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n, m;\n    cin >> n >> m;\n    string s;\n    string t;\n    cin >> s >> t;\n    int ptr = 0;\n    int pref = 0;\n    for (int i = 0; i < n; i++) {\n      if (ptr < m && s[i] == t[ptr]) {\n        if (i == ptr) {\n          pref += 1;\n        }\n        ptr += 1;\n      }\n    }\n    if (ptr < m) {\n      cout << -1 << '\\n';\n      continue;\n    }\n    int ans = n - pref;\n    const int inf = (int) 1e9;\n    vector<int> d0(m + 1, inf);\n    vector<int> d1(m + 1, inf);\n    vector<int> d2(m + 1, inf);\n    d0[0] = d1[0] = d2[0] = 0;\n    for (char c : s) {\n      vector<int> f0(m + 1, inf);\n      vector<int> f1(m + 1, inf);\n      vector<int> f2(m + 1, inf);\n      for (int i = 0; i <= m; i++) {\n        f0[i] = min(f0[i], d0[i] + 2);\n        f2[i] = min(f2[i], d2[i] + 1);\n        if (i < m && c == t[i]) {\n          f0[i + 1] = min(f0[i + 1], d0[i] + 1);\n          f1[i + 1] = min(f1[i + 1], d1[i]);\n          f2[i + 1] = min(f2[i + 1], d2[i] + 1);\n        }\n      }\n      for (int i = 0; i <= m; i++) {\n        f1[i] = min(f1[i], f0[i]);\n        f2[i] = min(f2[i], f1[i]);\n      }\n      swap(d0, f0);\n      swap(d1, f1);\n      swap(d2, f2);\n    }\n    ans = min(ans, d2[m] + 1);\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "greedy", "strings"], "dificulty": "2500", "interactive": false}