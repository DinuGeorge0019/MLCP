{"link": "https://codeforces.com//contest/1845/problem/B", "problemId": "1986289", "problem_idx": "B", "shortId": "1845B", "contest_number": "1845", "problem_submissions": {"F": [211475859, 211492939, 211497555, 211490825, 211491595, 211499186, 211501170, 211510297, 211505215, 211508507, 211523706, 211508142, 211526813, 211526845, 211523227, 211522513, 211521610, 211527973], "E": [211462563, 211461492, 211471272, 211472249, 211480189, 211485085, 211477384, 211480631, 211479180, 211479798, 211487222, 211476273, 211646872, 211490174, 211488484, 211525957, 211524499, 211523817, 211482860, 211491352, 211488220, 211483247, 211483585, 211488962, 211482756, 211497978], "B": [211453598, 211442082, 211444910, 211443511, 211441772, 211442686, 211445493, 211443115, 211444001, 211449977, 211446525, 211444666, 211443749, 211447761, 211449897, 211443106, 211444760, 211445575, 211449630, 211442921], "D": [211450415, 211448543, 211458729, 211462418, 211460113, 211454656, 211463763, 211469130, 211470306, 211471906, 211459492, 211645284, 211472007, 211475281, 211467877, 211468462, 211468425, 211461450, 211463088, 211470068, 211462856], "C": [211443935, 211445016, 211453965, 211452711, 211452512, 211450213, 211454682, 211448771, 211452473, 211462596, 211453195, 211455269, 211452431, 211458111, 211462223, 211458912, 211452900, 211451834, 211462935, 211452522], "A": [211441020, 211441082, 211441390, 211441217, 211441011, 211441288, 211441347, 211441228, 211442540, 211441983, 211441400, 211441604, 211441498, 211442268, 211443714, 211441364, 211441612, 211441912, 211442694, 211441281]}, "name": "B. Come Together", "statement": "Bob and Carol hanged out with Alice the whole day, but now it\u2019s time to\r\ngo home. Alice, Bob and Carol live on an infinite 2D grid in cells A, B,\r\nand C respectively. Right now, all of them are in cell A.If Bob (or\r\nCarol) is in some cell, he (she) can move to one of the neighboring\r\ncells. Two cells are called neighboring if they . For example, the cell\r\n(3, 5) has four neighboring cells: (2, 5), (4, 5), (3, 6) and (3, 4).Bob\r\nwants to return to the cell B, Carol to the cell C. Both of them want to\r\ngo along the shortest path, i. e. along the path that consists of the\r\nminimum possible number of cells. But they would like to walk together\r\nas well. What is the maximum possible number of cells that Bob and Carol\r\ncan walk together if each of them walks home using one of the shortest\r\npaths?\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n#define int long long\nint32_t main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    int t;cin>>t;\n    while(t--)\n    {\n        int x1,y1,x2,y2,x3,y3;cin>>x1>>y1>>x2>>y2>>x3>>y3;\n        int res=1+min(max(x2-x1,0LL),max(x3-x1,0LL))+min(max(x1-x2,0LL),max(x1-x3,0LL))+min(max(y2-y1,0LL),max(y3-y1,0LL))+min(max(y1-y2,0LL),max(y1-y3,0LL));\n        cout<<res<<'\\n';\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["geometry", "implementation", "math"], "dificulty": "900", "interactive": false}