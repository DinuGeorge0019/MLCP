{"link": "https://codeforces.com//contest/1073/problem/A", "problemId": "243296", "problem_idx": "A", "shortId": "1073A", "contest_number": "1073", "problem_submissions": {"G": [44873257, 44854949, 44872747, 44857777, 44904113, 44992378, 44992266, 44905426, 44884903, 44945894, 44917741], "F": [44867029, 44865010, 44864483, 44871287, 44872814, 44868847, 44879071, 44874774, 44882300, 44882274, 44882259, 44904164, 45084744, 45695799, 44888299], "E": [44859477, 44871290, 44861403, 44863217, 44864294, 44859185, 44863995, 44861353, 44862909, 44862761, 44864156, 44861997, 44866321, 44865560, 44864610, 44864622, 44866506, 44866536, 44864718, 44867428], "D": [44857129, 44872779, 44856075, 44857988, 44858337, 44861164, 44866799, 44854399, 44858649, 44887677, 44857825, 44863255, 44857894, 44856716, 44859464, 44857349, 44858547, 44860520, 44859062, 44858058], "C": [44852935, 44867793, 44850047, 44853493, 44853830, 44872109, 44870370, 44851223, 44852821, 44887759, 44853381, 44855264, 44855099, 44853761, 44855656, 44859785, 44852765, 44856270, 44855283, 44855046], "B": [44847780, 44861886, 44847247, 44849026, 44846682, 44849066, 44868560, 44847702, 44847526, 44848456, 44847355, 44849516, 44847583, 44849338, 44847283, 44847620, 44847641, 44850429, 44848272], "A": [44846309, 44861253, 44846364, 44847286, 44846147, 44847332, 44867659, 44846213, 44846204, 44846510, 44846224, 44846724, 44846207, 44847114, 44846296, 44846271, 44846181, 44848595, 44846401]}, "name": "A. Diverse Substring", "statement": "You are given a string s, consisting of n lowercase Latin letters.A\r\nsubstring of string s is a continuous segment of letters from s. For\r\nexample, \"\" is a substring of \"\" and \"\" is not. The length of the\r\nsubstring is the number of letters in it.Let\u2019s call some string of\r\nlength n if and only if there is no letter to appear strictly more than\r\nfrac n 2 times. For example, strings \"\" and \"\" are and strings \"\" and \"\"\r\nare not.Your task is to find substring of string s or report that there\r\nis none. Note that it is not required to maximize or minimize the length\r\nof the resulting substring.\r\n", "solutions": ["#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint main() {\n  int n;\n  string s;\n  cin >> n >> s;\n  for (int i = 0; i + 1 < n; i++) {\n    if (s[i] != s[i + 1]) {\n      cout << \"YES\" << endl;\n      cout << s.substr(i, 2) << endl;\n      return 0;\n    }\n  }\n  cout << \"NO\" << endl;\n}\n\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1000", "interactive": false}