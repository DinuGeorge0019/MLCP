{"link": "https://codeforces.com//contest/1697/problem/D", "problemId": "1427643", "problem_idx": "D", "shortId": "1697D", "contest_number": "1697", "problem_submissions": {"F": [160316028, 160335271, 160331836, 160345509, 160346300, 160344663, 160340959, 160455567, 160365066, 160450918], "E": [160306724, 160317216, 160317720, 160323985, 160325271, 160325964, 160354419, 160319599, 160322353, 160325146, 160325548, 160320808, 160330194, 160331332, 160324375, 160329677, 160325210, 160439973, 160435649, 160435501, 160334542, 160334158], "D": [160297103, 160308079, 160308707, 160309184, 160311087, 160315683, 160304446, 160307456, 160306088, 160309775, 160310589, 160312120, 160309909, 160314751, 160306875, 160306002, 160313672, 160319695, 160308549], "C": [160289797, 160295599, 160301341, 160300167, 160298909, 160307057, 160312096, 160291233, 160293256, 160294510, 160299611, 160297247, 160296258, 160299415, 160296418, 160293099, 160299382, 160299241, 160297402], "B": [160279508, 160282090, 160301342, 160292066, 160285118, 160283650, 160284312, 160283738, 160281629, 160287785, 160284110, 160279928, 160285652, 160285722, 160282180, 160283286, 160288457, 160284205, 160285201], "A": [160279237, 160279338, 160286569, 160289515, 160279504, 160279374, 160279443, 160279381, 160279282, 160282067, 160279274, 160279241, 160281284, 160279454, 160279294, 160279242, 160281815, 160279598, 160280937]}, "name": "D. Guess The String", "statement": "You may use in C++, in Java, in Python or in Pascal to flush the output.\r\nIf you use some other programming language, consult its documentation.\r\nYou may also refer to the guide on interactive problems:\r\nhttps://codeforces.com/blog/entry/45307.The jury has chosen a string s\r\nconsisting of n characters; each character of s is a lowercase Latin\r\nletter. Your task is to guess this string; initially, you know only its\r\nlength.You may ask queries of two types: 1 i the query of the first\r\ntype, where i is an integer from 1 to n. In response to this query, the\r\njury will tell you the character s_i; 2 l r the query of the second\r\ntype, where l and r are integers such that 1\r\nle l\r\nle r\r\nle n. In response to this query, the jury will tell you the number of\r\ndifferent characters among s_l, s_{l+1},\r\ndots, s_r. You are allowed to ask no more than 26 queries of the first\r\ntype, and no more than 6000 queries of the second type. Your task is to\r\nrestore the string s.For each test in this problem, the string s is\r\nfixed beforehand, and will be the same for every submission.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 12.06.2022 18:44:37       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  auto Ask = [&](int l, int r) {\n    cout << \"? 2\" << \" \" << l + 1 << \" \" << r + 1 << endl;\n    int x;\n    cin >> x;\n    return x;\n  };\n  auto AskOne = [&](int x) {\n    cout << \"? 1\" << \" \" << x + 1 << endl;\n    char foo;\n    cin >> foo;\n    return foo;\n  };\n  string s = \"\";\n  vector<int> b;\n  for (int i = 0; i < n; i++) {\n    sort(b.begin(), b.end());\n    int low = -1;\n    int high = (int) b.size() - 1;\n    while (low < high) {\n      int mid = (low + high + 1) >> 1;\n      if (Ask(b[mid], i) == (int) b.size() - mid) {\n        low = mid;\n      } else {\n        high = mid - 1;\n      }\n    }\n    if (low == -1) {\n      s += AskOne(i);\n      b.push_back(i);\n    } else {\n      s += s[b[low]];\n      b[low] = i;\n    }\n  }\n  cout << \"! \" << s << endl;\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "constructive algorithms", "interactive"], "dificulty": "1900", "interactive": false}