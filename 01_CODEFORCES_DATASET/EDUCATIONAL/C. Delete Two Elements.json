{
    "link": "https://codeforces.com//contest/1598/problem/C",
    "problemId": "1138072",
    "problem_idx": "C",
    "shortId": "1598C",
    "contest_number": "1598",
    "problem_submissions": {
        "G": [
            131442050,
            131445550,
            131474021,
            131733851,
            189236477,
            131533150,
            131521436,
            131521173,
            131520806,
            131458159
        ],
        "F": [
            131413919,
            131426175,
            131419948,
            131424974,
            131423465,
            131425512,
            131426044,
            131429617,
            131434101,
            131424856,
            131429061,
            135925566,
            131432789,
            131436462,
            131426160,
            131433379,
            131432739,
            131442015,
            131426352,
            131438575
        ],
        "E": [
            131409216,
            131417508,
            131411965,
            131416590,
            131414689,
            131417539,
            131419673,
            131417908,
            131417850,
            131413609,
            131419666,
            131418620,
            131426224,
            131434401,
            131422338,
            131425095,
            131423673,
            131432059,
            131428300
        ],
        "D": [
            131405446,
            131408232,
            131403803,
            131406730,
            131406693,
            131408831,
            131409679,
            131411498,
            131409766,
            131431099,
            131412818,
            131410917,
            131408763,
            131411240,
            131414979,
            131418536,
            131414491,
            131405913,
            131414013,
            131411546
        ],
        "C": [
            131402318,
            131402805,
            131401746,
            131403276,
            131404307,
            131403297,
            131407011,
            131405600,
            131402882,
            131404574,
            131406244,
            131405518,
            131403235,
            131406335,
            131403809,
            131404263,
            131402426,
            131410937,
            131406878
        ],
        "B": [
            131399659,
            131401435,
            131400062,
            131400441,
            131401570,
            131401020,
            131401164,
            131404218,
            131400433,
            131402267,
            131404703,
            131402822,
            131405775,
            131403060,
            131401809,
            131401389,
            131400640,
            131406015,
            131403932
        ],
        "A": [
            131398034,
            131398273,
            131398102,
            131398196,
            131398135,
            131398297,
            131398147,
            131400227,
            131399230,
            131398720,
            131400611,
            131612251,
            131398353,
            131399540,
            131399744,
            131398269,
            131398178,
            131398070,
            131401090,
            131399096
        ]
    },
    "name": "C. Delete Two Elements",
    "statement": "Monocarp has got an array a consisting of n integers. Let\u2019s denote k as\r\nthe mathematic mean of these elements (note that it\u2019s possible that k is\r\nnot an integer). The mathematic mean of an array of n elements is the\r\nsum of elements divided by the number of these elements (i. e. sum\r\ndivided by n).Monocarp wants to delete exactly two elements from a so\r\nthat the mathematic mean of the remaining (n - 2) elements is still\r\nequal to k.Your task is to calculate the number of pairs of positions\r\n[i, j] (i < j) such that if the elements on these positions are deleted,\r\nthe mathematic mean of (n - 2) remaining elements is equal to k (that\r\nis, it is equal to the mathematic mean of n elements of the original\r\narray a).\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 10.10.2021 12:09:06       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    long long sum = accumulate(a.begin(), a.end(), 0LL);\n    // sum / n == sum' / (n - 2)\n    __int128 goal8 = __int128(sum) * (n - 2);\n    if (goal8 % n != 0) {\n      cout << 0 << '\\n';\n      continue;\n    }\n    long long goal = sum - (long long) (goal8 / n);\n    map<long long, int> mp;\n    long long ans = 0;\n    for (int i = 0; i < n; i++) {\n      auto it = mp.find(a[i]);\n      if (it != mp.end()) {\n        ans += it->second;\n      }\n      mp[goal - a[i]] += 1;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "math",
        "two pointers"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Delete Two Elements.json",
    "editorial_link": "https://codeforces.com//blog/entry/95890",
    "editorial": "First of all, instead of the mathematic mean, let\u00e2\u0080\u0099s consider the sum of\r\nelements. If the mathematic mean is , then the sum of elements of the\r\narray is . Let\u00e2\u0080\u0099s denote the sum of elements in the original array as .\r\nNote is always an integer.If we remove two elements from the array, the\r\nresulting sum of elements should become . So, the sum of the elements we\r\nremove should be exactly .If is not an integer, the answer is (to check\r\nthat, you can simply compare with ). Otherwise, we have to find the\r\nnumber of pairs such that and . This is a well-known problem.To solve\r\nit, you can calculate the number of occurrences of each element and\r\nstore it in some associative data structure (for example, in C++). Let\r\nbe the number of occurrences of element . Then, you should iterate on\r\nthe element you want to remove and check how many elements match it,\r\nthat is, how many elements give exactly if you add to them. The number\r\nof these elements is just . Let\u00e2\u0080\u0099s sum up all these values for every\r\nelement in the array.Unfortunately, this sum is not the answer yet. We\r\nneed to take care of two things: if for some index , , then matches\r\nitself, so you have to subtract the number of such elements from the\r\nanswer; every pair of elements is counted twice: the first time when we\r\nconsider the first element of the pair, and the second time when we\r\nconsider the second element of the pair. So, don\u00e2\u0080\u0099t forget to divide the\r\nanswer by .\r\n"
}