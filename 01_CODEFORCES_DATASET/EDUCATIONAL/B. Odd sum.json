{"link": "https://codeforces.com//contest/797/problem/B", "problemId": "103029", "problem_idx": "B", "shortId": "797B", "contest_number": "797", "problem_submissions": {"F": [26392422, 26393656, 26389980, 26393053, 26392770, 26393200, 26401058, 26400600, 26393845, 26538858, 26399564, 26404933], "E": [26384593, 26386641, 26387413, 26384179, 26390646, 26385085, 26384145, 26385218, 26385422, 26383237, 26385301, 26385048, 26387123, 26383986, 26385186, 26383971, 26385690, 26386757, 26387505], "D": [26383853, 26385506, 26386518, 26386869, 26388006, 26386076, 26386759, 26387198, 26384655, 26384909, 26400699, 26386910, 26386839, 26385859, 26386865, 26387340, 26385970, 26387551, 26388539, 26386426], "C": [26382881, 26383936, 26385046, 26385741, 26385840, 26383373, 26384974, 26383476, 26383055, 26382583, 26383371, 26383953, 26383269, 26383187, 26384315, 26382972, 26384647, 26385000, 26382428], "B": [26382061, 26382225, 26383108, 26384548, 26383123, 26382179, 26382430, 26382528, 26381992, 26382016, 26382484, 26382716, 26382235, 26382138, 26382837, 26382347, 26382410, 26382477, 26381988], "A": [26381703, 26381847, 26382576, 26383357, 26382358, 26381775, 26381835, 26381732, 26381711, 26381736, 26381944, 26381723, 26381696, 26381784, 26381802, 26381687, 26381777, 26381801, 26381706]}, "name": "B. Odd sum", "statement": "You are given sequence of integer numbers of length . Your task is to\r\nfind such subsequence that its sum is odd and maximum among all such\r\nsubsequences. It\u2019s guaranteed that given sequence contains subsequence\r\nwith odd sum.Subsequence is a sequence that can be derived from another\r\nsequence by deleting some elements without changing the order of the\r\nremaining elements.You should write a program which finds sum of the\r\nbest subsequence.\r\n", "solutions": ["// In the name of God\n\n#include <iostream>\n#include <algorithm>\n#include <fstream>\n#include <vector>\n#include <deque>\n#include <assert.h>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <stdio.h>\n#include <string.h>\n#include <utility>\n#include <math.h>\n#include <bitset>\n#include <iomanip>\n#include <complex>\n\nusing namespace std;\n\n#define rep(i, a, b) for (int i = (a), i##_end_ = (b); i < i##_end_; ++i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mp make_pair\n#define x first\n#define y second\n#define pb push_back\n#define SZ(x) (int((x).size()))\n#define ALL(x) (x).begin(), (x).end()\n\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool smin(T &a, const T &b)   { return a > b ? a = b : a;    }\ntemplate<typename T> inline bool smax(T &a, const T &b)   { return a < b ? a = b : a;    }\n\ntypedef long long LL;\n\nconst int N = (int) 1e6 + 6, mod = (int) 0;\nint a[N];\nint main() {\n\tint n, m = 0, add = 0;\n\tcin >> n;\n\tfor (int j = 0; j < n; ++j) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (abs(x) % 2 == 0) {\n\t\t\tif (x >= 0) {\n\t\t\t\tadd += x;\n\t\t\t}\n\t\t} else {\n\t\t\ta[m++] = x;\n\t\t}\n\t}\n\tsort(a, a + m);\n\tint sum = 0, res = -2e9;\n\tfor (int j = m - 1; j >= 0; --j) {\n\t\tsum += a[j];\n\t\tif ((m - j) & 1) res = max(res, sum + add);\n\t}\n\tcout << res << endl;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "input": "", "output": "", "tags": ["dp", "greedy", "implementation"], "dificulty": "1400", "interactive": false}