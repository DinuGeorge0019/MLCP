{
    "link": "https://codeforces.com//contest/1221/problem/A",
    "problemId": "415607",
    "problem_idx": "A",
    "shortId": "1221A",
    "contest_number": "1221",
    "problem_submissions": {
        "G": [
            60878901,
            60954325,
            60892510,
            60889777,
            60939440,
            60957169,
            60954037,
            60954018,
            60887759,
            60892512,
            61066187,
            60888304,
            60953665,
            60884074
        ],
        "F": [
            60872429,
            60906430,
            60877026,
            60879328,
            60873795,
            60880496,
            60880041,
            60882317,
            60876205,
            60881638,
            60879016,
            60884701,
            60883109,
            60876230,
            60885368,
            60884882,
            60888631,
            60877275
        ],
        "E": [
            60865427,
            60906424,
            60870455,
            60872355,
            60881944,
            60867813,
            60873346,
            60871774,
            60882236,
            60957159,
            60869840,
            60865430,
            60870324,
            60874697,
            60871945,
            60886034,
            60875073,
            60873664,
            60883200,
            60875153,
            60886105,
            60887173
        ],
        "D": [
            60858978,
            60906413,
            60858963,
            60862133,
            60857697,
            60858483,
            60858390,
            60860167,
            60862000,
            60957149,
            60859058,
            60857548,
            60865511,
            60860504,
            60857388,
            60865183,
            60887076,
            60866989,
            60863673,
            60861492,
            60857971,
            60867806,
            60885376
        ],
        "C": [
            60854799,
            60906405,
            60854087,
            60858148,
            60855694,
            60855339,
            60856078,
            60857408,
            60859538,
            60957138,
            60855511,
            60854166,
            60860646,
            60858018,
            60854647,
            60856215,
            60857135,
            60857947,
            60855000,
            60855230,
            60864597,
            60884317
        ],
        "B": [
            60853702,
            60906395,
            60853284,
            60856858,
            60853405,
            60869020,
            60854977,
            60855791,
            60854474,
            60957129,
            60854297,
            60853117,
            60859658,
            60856090,
            60853528,
            60854286,
            60855985,
            60856982,
            60854601,
            60853843,
            60862970,
            60883738
        ],
        "A": [
            60853175,
            60906382,
            60852746,
            60855419,
            60852846,
            60852969,
            60852978,
            60853994,
            60853299,
            60957119,
            60852836,
            60852764,
            60858768,
            60853799,
            60852813,
            60853187,
            60854280,
            60853549,
            60853275,
            60852850,
            60861325,
            60883303
        ]
    },
    "name": "A. 2048 Game",
    "statement": "You are playing a variation of game . Initially you have a multiset s of\r\nn integers. Every integer in this multiset is a power of two. You may\r\nperform any number (possibly, zero) operations with this multiset.During\r\neach operation you choose two integers from s, remove them from s and\r\ninsert the number equal to their sum into s.For example, if s =\r\n{1, 2, 1, 1, 4, 2, 2\r\n} and you choose integers 2 and 2, then the multiset becomes\r\n{1, 1, 1, 4, 4, 2\r\n}.You win if the number 2048 belongs to your multiset. For example, if s\r\n=\r\n{1024, 512, 512, 4\r\n} you can win as follows: choose 512 and 512, your multiset turns into\r\n{1024, 1024, 4\r\n}. Then choose 1024 and 1024, your multiset turns into\r\n{2048, 4\r\n} and you win.You have to determine if you can win this game.You have to\r\nanswer q independent queries.\r\n",
    "solutions": [
        "#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#endif\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long double ld;\ntypedef long long ll;\nint n;\nvoid solve() {\n    cin >> n;\n    vector < int > all;\n    for (int i = 0; i < n; i++) {\n        int x;\n        cin >> x;\n        if (x > 2048) continue;\n        int y = 0;\n        while ((1 << y) < x) y++;\n        all.push_back(y);\n    }\n    sort(all.begin(), all.end());\n    reverse(all.begin(), all.end());\n    for (int i = 0; i < 11; i++) {\n        vector < int > nall;\n        int cnt = 0;\n        for (int j = 0; j < all.size(); j++) {\n            if (all[j] == i) cnt++;\n            else nall.push_back(all[j]);\n        }\n        for (int p = 0; p < cnt / 2; p++) nall.push_back(i + 1);\n        all = nall;\n    }\n    if (!all.empty()) cout << \"YES\" << '\\n';\n    else cout << \"NO\" << '\\n';\n}\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    //freopen(\"input.txt\", \"r\", stdin);\n    int q;\n    cin >> q;\n    while (q--) {\n        solve();\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. 2048 Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/69925",
    "editorial": "It\u00e2\u0080\u0099s obvious that we don\u00e2\u0080\u0099t need elements that are larger than .If the\r\nsum of the remaining elements is greater than or equal to 2048, then the\r\nanswer is , and otherwise.It\u00e2\u0080\u0099s true because for getting a integer that\r\nwasn\u00e2\u0080\u0099t in the multiset initially, we first need to get integer .\r\n"
}