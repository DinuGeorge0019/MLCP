{
    "link": "https://codeforces.com//contest/938/problem/E",
    "problemId": "157307",
    "problem_idx": "E",
    "shortId": "938E",
    "contest_number": "938",
    "problem_submissions": {
        "G": [
            35382589,
            142741934,
            35374754,
            35374730,
            35374710,
            35374477,
            46133767,
            35440047
        ],
        "F": [
            35355120,
            35364585,
            35363394,
            35363174,
            35367302,
            35374806,
            35369385,
            35368951,
            35367527,
            35361321,
            35357853,
            35375040,
            35422822
        ],
        "E": [
            35352538,
            35354313,
            35352415,
            35358415,
            35352081,
            35358431,
            35356947,
            35369123,
            35351851,
            35352768,
            35353204,
            35355446,
            35355331,
            35364623,
            35352359,
            35354851,
            35364184,
            35361370,
            35349789
        ],
        "D": [
            35346635,
            35346136,
            35347680,
            35354109,
            35356864,
            35352477,
            35380385,
            35375255,
            35364649,
            35366010,
            35347274,
            35349910,
            35350445,
            35351420,
            35351959,
            35348864,
            35350459,
            35349429,
            35350797,
            35351471,
            35353004
        ],
        "C": [
            35345282,
            35350127,
            35345829,
            35352431,
            35355200,
            35349840,
            35349239,
            35363657,
            35345361,
            35347976,
            35348608,
            35349044,
            35347701,
            35346898,
            35346389,
            35351193,
            35383156,
            35355323,
            35348814,
            35348388,
            35350097,
            35356762
        ],
        "B": [
            35342225,
            35343255,
            35342194,
            35342912,
            35343411,
            35345634,
            35362645,
            35360273,
            35342183,
            35342830,
            35342648,
            35343913,
            35343057,
            35342574,
            35342930,
            35343254,
            35345517,
            35342996,
            35357602
        ],
        "A": [
            35341839,
            35341862,
            35342757,
            35341910,
            35341845,
            35344578,
            35362076,
            35359775,
            35341793,
            35341960,
            35341885,
            35342136,
            35341987,
            35341868,
            35342317,
            35344022,
            35341914,
            35342769
        ]
    },
    "name": "E. Max History",
    "statement": "You are given an array of length . We define the following way:\r\nInitially , ; for every if then we set and then set . Calculate the sum\r\nof over all permutations of the array modulo .Note: two elements are\r\nconsidered different if their indices differ, so for every array there\r\nare exactly permutations.\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:336777216\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 19;\nint MOD = 1000000007;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-10;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<n;i++)\n#define Se second\n#define Fi first\n\nll mul_inv(ll a, ll b = MOD) {\n\tll t1 = a, t2 = b, t3;\n\tll v1 = 1, v2 = 0, v3;\n\twhile (t2 != 1) {\n\t\tll x = t1 / t2;\n\t\tt3 = t1 - x*t2;\n\t\tv3 = v1 - x*v2;\n\t\tt1 = t2, t2 = t3;\n\t\tv1 = v2, v2 = v3;\n\t}\n\treturn (v2 + b) % b;\n}\nll F[1000050];\nint in[1000050];\nmap <int, int> Mx;\nint main() {\n\tint N, i;\n\tscanf(\"%d\", &N);\n\tfor (i = 1; i <= N; i++) scanf(\"%d\", &in[i]);\n\tsort(in + 1, in + N + 1);\n\n\tfor (i = 1; i <= N; i++) Mx[in[i]]++;\n\n\tF[0] = 1;\n\tfor (i = 1; i <= N; i++) F[i] = F[i - 1] * i % MOD;\n\n\tll s = 0;\n\tll ans = 0;\n\tfor (auto it : Mx) {\n\t\tll vu = F[N] * mul_inv(N-s) % MOD;\n\t\tvu = (vu * it.first) % MOD;\n\t\tvu = (vu * it.second) % MOD;\n\t\tans = (ans + vu) % MOD;\n\t\ts += it.second;\n\t}\n\tans -= in[N] * F[N] % MOD;\n\tans = (ans + MOD) % MOD;\n\treturn !printf(\"%lld\\n\", ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\E. Max History.json",
    "editorial_link": "https://codeforces.com//blog/entry/57840",
    "editorial": "Hint 1: Count the number of times each number appears in the sum of all fa.\n\nHint 2: Try to find a sufficient and necessary condition that ai appears in fa of a permutation.\n\nMore hints\nHint 3: Prove that ai appears if and only if all elements appearing before it are strictly less than it (other than the largest element). And then try to solve the problem first in O(n2).\n\nNow try to solve to simplify your solution with O(n2).\n\nSolution\nIt is easy to see that i-th element appears in fa if and only if all elements appearing before it in the array are less than it, so if we define li as the number of elements less than ai the answer will be equal to:\n\n\nBy determining the index of ai, if it is on the index j then we have to choose j?-?1 of the li elements smaller than it and then permuting them and then permuting the other elements. We can find all li with complexity of O(n log n). If we were to implement this, the complexity would equal to O(n2).\n\nNow let's make our formula better. So let's open it like so:\n\n\nand then it equals to:\n\n\nand now let's take out the li! ,\n\n\nnow let's multiply the inside the first sigma by  and the second sigma by (n?-?li?-?1)! and it gets equal to:\n\n\nand it is easy to see it equals to:\n\n\nand using the fact that\n\n\nit will equal to:\n\n\nSo the final answer will equal to:\n\n\nof which can be easily implemented in O(n log n). Make sure to not add the answer for maximum number in the sequence.",
    "hint": []
}