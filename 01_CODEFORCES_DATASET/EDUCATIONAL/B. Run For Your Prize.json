{
    "link": "https://codeforces.com//contest/938/problem/B",
    "problemId": "157304",
    "problem_idx": "B",
    "shortId": "938B",
    "contest_number": "938",
    "problem_submissions": {
        "G": [
            35382589,
            142741934,
            35374754,
            35374730,
            35374710,
            35374477,
            46133767,
            35440047
        ],
        "F": [
            35355120,
            35364585,
            35363394,
            35363174,
            35367302,
            35374806,
            35369385,
            35368951,
            35367527,
            35361321,
            35357853,
            35375040,
            35422822
        ],
        "E": [
            35352538,
            35354313,
            35352415,
            35358415,
            35352081,
            35358431,
            35356947,
            35369123,
            35351851,
            35352768,
            35353204,
            35355446,
            35355331,
            35364623,
            35352359,
            35354851,
            35364184,
            35361370,
            35349789
        ],
        "D": [
            35346635,
            35346136,
            35347680,
            35354109,
            35356864,
            35352477,
            35380385,
            35375255,
            35364649,
            35366010,
            35347274,
            35349910,
            35350445,
            35351420,
            35351959,
            35348864,
            35350459,
            35349429,
            35350797,
            35351471,
            35353004
        ],
        "C": [
            35345282,
            35350127,
            35345829,
            35352431,
            35355200,
            35349840,
            35349239,
            35363657,
            35345361,
            35347976,
            35348608,
            35349044,
            35347701,
            35346898,
            35346389,
            35351193,
            35383156,
            35355323,
            35348814,
            35348388,
            35350097,
            35356762
        ],
        "B": [
            35342225,
            35343255,
            35342194,
            35342912,
            35343411,
            35345634,
            35362645,
            35360273,
            35342183,
            35342830,
            35342648,
            35343913,
            35343057,
            35342574,
            35342930,
            35343254,
            35345517,
            35342996,
            35357602
        ],
        "A": [
            35341839,
            35341862,
            35342757,
            35341910,
            35341845,
            35344578,
            35362076,
            35359775,
            35341793,
            35341960,
            35341885,
            35342136,
            35341987,
            35341868,
            35342317,
            35344022,
            35341914,
            35342769
        ]
    },
    "name": "B. Run For Your Prize",
    "statement": "You and your friend are participating in a TV show \"Run For Your\r\nPrize\".At the start of the show prizes are located on a straight line.\r\n-th prize is located at position . Positions of all prizes are distinct.\r\nYou start at position , your friend at position (and there is no prize\r\nin any of these two positions). You have to work as a team and collect\r\nall prizes in minimum possible time, in any order.You know that it takes\r\nexactly second to move from position to position or , both for you and\r\nyour friend. You also have trained enough to instantly pick up any\r\nprize, if its position is equal to your current position (and the same\r\nis true for your friend). Carrying prizes does not affect your speed (or\r\nyour friend\u2019s speed) at all.Now you may discuss your strategy with your\r\nfriend and decide who will pick up each prize. Remember that every prize\r\nmust be picked up, either by you or by your friend.What is the minimum\r\nnumber of seconds it will take to pick up all the prizes?\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:336777216\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 19;\nint MOD = 1000000007;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-10;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<n;i++)\n#define Se second\n#define Fi first\n\nint main() {\n\tint N, i;\n\tscanf(\"%d\", &N);\n\t\n\tint ans = 0;\n\twhile (N--) {\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\tans = max(ans, min(t - 1, 1000000 - t));\n\t}\n\treturn !printf(\"%d\\n\", ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Run For Your Prize.json",
    "editorial_link": "https://codeforces.com//blog/entry/57840",
    "editorial": "Hint 1: It's never profitable to go back. No prizes left where you have already gone.\n\nHint 2\nHint 2: The optimal collecting order will be: some prefix of prizes to you and the other prizes to your friend (some suffix).\n\nSolution\nYou can find the total time with the knowledge of the prefix length. The final formula is ."
}