{"link": "https://codeforces.com//contest/1051/problem/D", "problemId": "222360", "problem_idx": "D", "shortId": "1051D", "contest_number": "1051", "problem_submissions": {"F": [43140779, 43140701, 43140521, 43144878, 43149555, 43136128, 43135754, 43146222, 43141081, 43140208, 43140886, 43148136, 43125606, 43139391, 43143179, 43180670, 43137698, 43132665, 43136422, 43137213, 43136215, 43152919, 43140345], "E": [43135788, 43135396, 43135166, 43144968, 43139384, 43145873, 43148036, 43133440, 43138040, 43130161, 43150071, 43172602, 43169210, 43138739, 43141483, 43140870], "D": [43122761, 43123321, 43124505, 43127072, 43131033, 43132900, 43131873, 43120016, 43141171, 43141877, 43118771, 109385219, 43126836, 43129621, 43130021, 43126148, 43128304, 43128721, 43127454, 43124199, 43127027], "C": [43120001, 43120557, 43121091, 43122279, 43123187, 43129372, 43126529, 43136659, 43142859, 43145151, 43120361, 43120848, 43124838, 43124502, 43122781, 43124340, 43124338, 43124203, 43121537, 43122507], "B": [43118265, 43118662, 43118894, 43119173, 43118548, 43118066, 43121653, 43137307, 43143272, 43145683, 43118005, 43118512, 43121090, 43120908, 43119605, 43119200, 43119726, 43119810, 43118546, 43119160], "A": [43118136, 43118310, 43118532, 43118569, 43120138, 43261343, 43119567, 43119846, 43140090, 43144863, 43147178, 43123917, 43118256, 43120404, 43119598, 43118824, 43118544, 43118365, 43118914, 43118324, 43118586], "G": [43151141, 43245454]}, "name": "D. Bicolorings", "statement": "You are given a grid, consisting of 2 rows and n columns. Each cell of\r\nthis grid should be colored either black or white.Two cells are\r\nconsidered neighbours if they have a and share the same color. Two cells\r\nA and B belong to the same component if they are neighbours, or if there\r\nis a neighbour of A that belongs to the same component with B.Let\u2019s call\r\nsome bicoloring if it has exactly k components.Count the number of\r\nbicolorings. The number can be big enough, so print the answer modulo\r\n998244353.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef signed long long ll;\n\n#undef _P\n#define _P(...) (void)printf(__VA_ARGS__)\n#define FOR(x,to) for(x=0;x<(to);x++)\n#define FORR(x,arr) for(auto& x:arr)\n#define ITR(x,c) for(__typeof(c.begin()) x=c.begin();x!=c.end();x++)\n#define ALL(a) (a.begin()),(a.end())\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\n//-------------------------------------------------------\n\nint N,K;\nll mo=998244353;\n\nll from[2020][4];\nll to[2020][4];\n\nint hoge(int a,int b) {\n\tif(a==b) return 0;\n\tif(a==0) return 1;\n\tif(a==3) return 1;\n\tif(b==0) return 0;\n\tif(b==3) return 0;\n\treturn 2;\n}\n\nvoid solve() {\n\tint i,j,k,l,r,x,y; string s;\n\t\n\tcin>>N>>K;\n\tfrom[1][0]=from[1][3]=1;\n\tfrom[2][1]=from[2][2]=1;\n\tFOR(i,N-1) {\n\t\tZERO(to);\n\t\t\n\t\tfor(j=1;j<=2000;j++) {\n\t\t\tFOR(x,4) FOR(y,4) (to[j+hoge(x,y)][y]+=from[j][x])%=mo;\n\t\t}\n\t\t\n\t\tswap(from,to);\n\t}\n\t\n\tcout<<((from[K][0]+from[K][1]+from[K][2]+from[K][3])%mo)<<endl;\n}\n\n\nint main(int argc,char** argv){\n\tstring s;int i;\n\tif(argc==1) ios::sync_with_stdio(false), cin.tie(0);\n\tFOR(i,argc-1) s+=argv[i+1],s+='\\n'; FOR(i,s.size()) ungetc(s[s.size()-1-i],stdin);\n\tcout.tie(0); solve(); return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "dp"], "dificulty": "1700", "interactive": false}