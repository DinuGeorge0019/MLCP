{"link": "https://codeforces.com//contest/1027/problem/A", "problemId": "209488", "problem_idx": "A", "shortId": "1027A", "contest_number": "1027", "problem_submissions": {"G": [41777591, 41794075, 41789651, 41795096, 41939341, 41938165, 41796137, 42098879, 42133042], "E": [41771294, 41773308, 41779379, 41769311, 41773946, 41775704, 41772136, 41773355, 41779847, 41781989, 41784347, 41777571, 41784573, 41777063, 41778773, 41776995, 41786639, 41778631, 41778849, 41779109], "F": [41768065, 41785375, 41776031, 41777064, 64515193, 41778051, 41781324, 41779089, 41778653, 41776480, 41776867, 41774399, 41778108, 41783735, 41779480, 41782813, 41784214, 42675272, 42673408, 41785662, 41778618, 41786449, 41792717, 41792403, 41790072, 41787559, 41785600], "D": [41766114, 41769377, 41772019, 41765799, 41768093, 41767980, 41769938, 41769777, 41767951, 41766660, 41768756, 41770224, 41770243, 41773173, 41773790, 41772403, 41773900, 41774900, 41773430, 41773585], "C": [41765079, 41766031, 41768208, 41764342, 41765993, 41765549, 41767982, 41768445, 41764158, 41772730, 41766169, 41767810, 41767876, 41767390, 41770932, 41768551, 41769543, 41768596, 41768222, 41768699, 41769864, 41769626], "B": [41762630, 41763189, 41765301, 41762037, 41763563, 41762756, 41764132, 41765033, 41765562, 41762467, 41763527, 41764762, 41763245, 41763720, 41763112, 41766236, 41764943, 41765112, 41765051, 41766842], "A": [41761297, 41761064, 41763316, 41761011, 41761231, 41761105, 41761008, 41761632, 41761600, 41761296, 41761079, 41761346, 41761160, 41761251, 41761159, 41761563, 41761142, 41761529, 41761274, 41764617]}, "name": "A. Palindromic Twist", "statement": "You are given a string s consisting of n lowercase Latin letters. n is\r\neven.For each position i (1\r\nle i\r\nle n) in string s you are required to change the letter on this position\r\neither to the previous letter in alphabetic order or to the next one\r\n(letters \u201d and \u201d have only one of these options). Letter in every\r\nposition must be changed .For example, letter \u201d should be changed either\r\nto \u201d or to \u201d, letter \u201d should be changed to \u201d and letter \u201d should be\r\nchanged to \u201d.That way string \"\", for example, can be changed to \"\" (\u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d, \u201d\r\nrightarrow \u201d).String s is called a palindrome if it reads the same from\r\nleft to right and from right to left. For example, strings \"\" and \"\" are\r\npalindromes and strings \"\" and \"\" are not.Your goal is to check if it\u2019s\r\npossible to make string s a palindrome by applying the aforementioned\r\nchanges to every position. Print \"\" if string s can be transformed to a\r\npalindrome and \"\" otherwise.Each testcase contains several strings, for\r\neach of them you are required to solve the problem separately.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int N = 11111;\nint n;\nchar s[N];\n\nvoid solve() {\n\tscanf(\"%d\", &n);\n\tscanf(\"%s\", s);\n//\tn = strlen(s);\n\tfor (int i = 0; 2 * i < n; i++) {\n\t\tint x = (int)(s[i] - 'a'), y = (int)(s[n - 1 - i] - 'a');\n\t\tbool ok = false;\n\t\tfor (int mask = 0; !ok && mask < 4; mask++) {\n\t\t\tint xx = x, yy = y;\n\t\t\tif (mask & 1)\n\t\t\t\txx++;\n\t\t\telse\n\t\t\t\txx--;\n\t\t\tif (mask & 2)\n\t\t\t\tyy++;\n\t\t\telse\n\t\t\t\tyy--;\n\t\t\tif (xx >= 0 && xx < 26 && xx == yy) {\n\t\t\t\tok = true;\n\t\t\t\ts[i] = 'a' + xx;\n\t\t\t\ts[n - 1 - i] = 'a' + yy;\n\t\t\t}\n\t\t}\n\t\tif (!ok) {\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t}\n\t}\n\tprintf(\"YES\\n\");\n}\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) solve();\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1000", "interactive": false}