{
    "link": "https://codeforces.com//contest/1792/problem/D",
    "problemId": "1749562",
    "problem_idx": "D",
    "shortId": "1792D",
    "contest_number": "1792",
    "problem_submissions": {
        "F2": [
            190375653,
            190403355,
            190403314,
            190376566,
            190371354,
            190371009,
            190378681,
            190390688,
            190380339,
            190390744,
            190397281,
            190395571,
            190396332,
            190405095,
            190396914,
            190408873,
            190408290,
            190408068,
            190403016,
            190399709,
            190399068,
            190440777,
            190401995
        ],
        "F1": [
            190360560,
            190376613,
            190370799,
            190366049,
            190372835,
            190357166,
            190380441,
            190390644,
            190395529,
            190392693,
            190394679,
            190392495,
            190385352,
            190378233,
            190371980,
            190376961,
            190394240,
            190393976,
            190392996,
            190356477,
            190392540,
            190390220,
            190391148,
            190435798,
            190392761
        ],
        "E": [
            190349536,
            190396415,
            190356797,
            190355921,
            190355685,
            190354329,
            190356654,
            190379338,
            190367695,
            190364381,
            190379913,
            190372928,
            190374531,
            190346879,
            190354441,
            190356992,
            190357830,
            190369017,
            190404398,
            190369702,
            190375086,
            190345346,
            190361270
        ],
        "D": [
            190338681,
            190342485,
            190377665,
            190342856,
            190335191,
            190347677,
            190340391,
            190336758,
            190364512,
            190353489,
            190336022,
            190340377,
            190341608,
            190336712,
            190338416,
            190338462,
            190342927,
            190342951,
            190340969,
            190356126,
            190343824
        ],
        "C": [
            190332032,
            190336067,
            190327325,
            190335874,
            190328548,
            190335825,
            190331257,
            190329975,
            190341574,
            190346406,
            190329101,
            190331331,
            190332174,
            190331190,
            190328589,
            190329328,
            190333145,
            190331745,
            190324986,
            190335758
        ],
        "B": [
            190326313,
            190322698,
            190320989,
            190331751,
            190324446,
            190330720,
            190326021,
            190327400,
            190330429,
            190335776,
            190324890,
            190326657,
            190333559,
            190327470,
            190325870,
            190324745,
            190327323,
            190329410,
            190330842,
            190329835
        ],
        "A": [
            190321850,
            190318780,
            190318690,
            190319485,
            190319112,
            190319183,
            190319784,
            190318833,
            190324148,
            190321022,
            190318836,
            190320391,
            190319287,
            190319729,
            190318884,
            190319911,
            190320170,
            190319083,
            190321001,
            190322167
        ]
    },
    "name": "D. Fixed Prefix Permutations",
    "statement": "You are given n permutations a_1, a_2,\r\ndots, a_n, each of length m. Recall that a permutation of length m is a\r\nsequence of m integers from 1 to m.Let the beauty of a permutation p_1,\r\np_2,\r\ndots, p_m be the largest k such that p_1 = 1, p_2 = 2,\r\ndots, p_k = k. If p_1\r\nneq 1, then the beauty is 0.The product of two permutations p\r\ncdot q is a permutation r such that r_j = q_{p_j}.For each i from 1 to\r\nn, print the largest beauty of a permutation a_i\r\ncdot a_j over all j from 1 to n (possibly, i = j).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read()\n{\n\tint n=0,f=1,ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tn=n*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn n*f;\n}\nint a[50005][11],pos[50005][11];\nint cj[50005][11],cjp[50005][11];\nmap<int,int>ma;\nsigned main()\n{\n\tint t,n,m;\n\tt=read();\n\tfor(int greg=1;greg<=t;greg++)\n\t{\n\t\tn=read();\n\t\tm=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\ta[i][j]=read();\n\t\t\t\tpos[i][a[i][j]]=j;\n\t\t\t}\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tcj[i][j]=(m+1)*cj[i][j-1]+a[i][j];\n\t\t\t\tcjp[i][j]=(m+1)*cjp[i][j-1]+pos[i][j];\n\t\t\t}\n\t\t}\n\t\tma.clear();\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)ma[cjp[i][j]]++;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tint now=0;\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tif(ma[cj[i][j]]!=0)now=j;\n\t\t\t}\n\t\t\tprintf(\"%lld \",now);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "hashing",
        "math",
        "sortings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\D. Fixed Prefix Permutations.json",
    "editorial_link": "https://codeforces.com//blog/entry/111835",
    "editorial": "Let\u00e2\u0080\u0099s try to solve for one of the given permutations. Let it be some .\r\nHow to make the answer for it at least ? Well, we have to find another\r\npermutation such that . How about at least ? Well, the same: .Push to\r\nthe right side of the equation. . Now think. What does it actually mean\r\nfor some permutation to be multiplied by ? It stays the same. So the\r\nfirst elements of will be equal to the first elements of .Thus, you have\r\nto find a permumtation such that its inverse has the longest common\r\nprefix with . This can be done in multiple ways. For example, you can\r\nstore all inverses in a trie and traverse it with until you reach a dead\r\nend. Or simply push all prefixes of each inverse into a set and iterate\r\nover . Alternatively, you can just sort inverses and do lower_bound for\r\nin this list the permutation with longest common prefix will be either\r\nthe result or the one before it.Overall complexity: per testcase.\r\n"
}