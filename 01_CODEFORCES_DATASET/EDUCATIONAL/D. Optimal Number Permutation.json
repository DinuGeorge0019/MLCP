{
    "link": "https://codeforces.com//contest/622/problem/D",
    "problemId": "47918",
    "problem_idx": "D",
    "shortId": "622D",
    "contest_number": "622",
    "problem_submissions": {
        "F": [
            27693832,
            15938161,
            15938350,
            15937525,
            15940871,
            15940468,
            15941715,
            15935758,
            15942132,
            15939672,
            15962566,
            15966525,
            15955821,
            16477461,
            16135097
        ],
        "E": [
            15936192,
            15935128,
            15935464,
            15935136,
            15937412,
            15942338,
            15942779,
            15939453,
            15935850,
            15933034,
            15937053,
            15935414,
            15937343,
            15937472,
            15938233,
            15935244,
            15936698,
            15939486,
            15936424
        ],
        "D": [
            15933494,
            15933221,
            15933776,
            15937480,
            15935164,
            15939366,
            15936035,
            15940787,
            15933859,
            15935298,
            15934473,
            15934644,
            15933986,
            15934369,
            15934813,
            15934580,
            15935083,
            15935405,
            15937710
        ],
        "C": [
            15932039,
            15931591,
            15932212,
            15932351,
            15933060,
            15933265,
            15932091,
            15936323,
            15932756,
            15931784,
            15931982,
            15933549,
            15932246,
            15932409,
            15933086,
            15932288,
            15932372,
            15932233,
            15932181
        ],
        "B": [
            15931075,
            15931135,
            15931295,
            15931505,
            15932084,
            15932002,
            15931182,
            15931089,
            15931279,
            15931134,
            15931176,
            15931455,
            15931488,
            15931348,
            15931223,
            15931203,
            15931572,
            15931376,
            15931416
        ],
        "A": [
            15930972,
            15930991,
            15931097,
            15931150,
            15931799,
            15931265,
            15930996,
            15931213,
            15930997,
            15930976,
            15930999,
            15931143,
            15931011,
            15931015,
            15931009,
            15931021,
            15931298,
            15931086,
            15931092
        ]
    },
    "name": "D. Optimal Number Permutation",
    "statement": "You have array that contains all integers from to twice. You can\r\narbitrary permute any numbers in .Let number be in positions () in the\r\npermuted array . Let’s define the value the distance between the\r\npositions of the number . Permute the numbers in array to minimize the\r\nvalue of the sum .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define SZ(X) ((int)(X).size())\n#define ALL(X) (X).begin(), (X).end()\n#define REP(I, N) for (int I = 0; I < (N); ++I)\n#define REPP(I, A, B) for (int I = (A); I < (B); ++I)\n#define RI(X) scanf(\"%d\", &(X))\n#define RII(X, Y) scanf(\"%d%d\", &(X), &(Y))\n#define RIII(X, Y, Z) scanf(\"%d%d%d\", &(X), &(Y), &(Z))\n#define DRI(X) int (X); scanf(\"%d\", &X)\n#define DRII(X, Y) int X, Y; scanf(\"%d%d\", &X, &Y)\n#define DRIII(X, Y, Z) int X, Y, Z; scanf(\"%d%d%d\", &X, &Y, &Z)\n#define RS(X) scanf(\"%s\", (X))\n#define CASET int ___T, case_n = 1; scanf(\"%d \", &___T); while (___T-- > 0)\n#define MP make_pair\n#define PB push_back\n#define MS0(X) memset((X), 0, sizeof((X)))\n#define MS1(X) memset((X), -1, sizeof((X)))\n#define LEN(X) strlen(X)\n#define PII pair<int,int>\n#define VI vector<int>\n#define VPII vector<pair<int,int> >\n#define PLL pair<long long,long long>\n#define VPLL vector<pair<long long,long long> >\n#define F first\n#define S second\ntypedef long long LL;\nusing namespace std;\nconst int MOD = 1e9+7;\nconst int SIZE = 1e6+10;\n\nvoid print_array(vector<int>&arr){\n    REP(i,SZ(arr)){\n        if(i)printf(\" \");\n        printf(\"%d\",arr[i]);\n    }\n    puts(\"\");\n}\nint main(){\n    VI an;\n    DRI(n);\n    for(int i=n%2==0?1:2;i<n;i+=2){\n        an.PB(i);\n    }\n    for(int i=n-1;i>0;i-=2){\n        an.PB(i);\n    }\n    an.PB(n);\n    for(int i=n%2==0?2:1;i<n;i+=2){\n        an.PB(i);\n    }\n    an.PB(n);\n    for(int i=n-2;i>0;i-=2){\n        an.PB(i);\n    }\n    print_array(an);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\D. Optimal Number Permutation.json",
    "editorial_link": "https://codeforces.com//blog/entry/23442",
    "editorial": "This problem was suggested by Aleksa Plavsic allllekssssa. Letâs build\r\nthe answer with the sum equal to zero. Let be even. Letâs place odd\r\nnumbers in the first half of the array: the number in the positions and\r\n, the number in the positions and and so on. Similarly letâs place even\r\nnumbers in the second half: the number in the position and , the number\r\nin the positions and and so on. We can place the number in the leftover\r\npositions. We can build the answer for odd in a similar way. Easy to see\r\nthat our construction will give zero sum. C++ solution Complexity: .\r\n",
    "hint": []
}