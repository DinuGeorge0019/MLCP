{"link": "https://codeforces.com//contest/1132/problem/F", "problemId": "307700", "problem_idx": "F", "shortId": "1132F", "contest_number": "1132", "problem_submissions": {"E": [50850068, 50849530, 50845767, 50845285, 50999251, 50998220, 50984714, 50983025, 50849124, 50834937, 50849964, 50853384, 50853400, 50852279, 50851280, 50853752, 50855850, 50853199, 51446514, 50851785, 50834992, 50854163, 50845937], "G": [50842167, 50854823, 50857129, 50854920, 50844161, 50859138, 57119782, 50878894, 51002265, 50995547, 50857246, 50834458, 50982974, 50871478], "F": [50840202, 50838419, 50836444, 50982824, 50982298, 50914403, 50914340, 50845586, 50832740, 50838344, 50839910, 50835170, 50841485, 50845495, 50850234, 50846859, 50849525, 50847269, 50833261, 50843613, 50842907, 50837062, 50843690, 50848869], "D": [50834165, 50842583, 50852105, 50872042, 50872030, 50859910, 50859897, 50858488, 50851238, 50841187, 50848482, 50846027, 50850423, 50849233, 50840756, 50846142, 50842178, 50842159, 50851492, 50842299, 50850678, 50854836, 50842129, 50854102], "C": [50827032, 50833764, 50832215, 50839270, 50881672, 50828449, 50836070, 50832571, 50831895, 50835165, 50830486, 50829266, 50832724, 50834393, 50838461, 50842825, 50830636, 50837272, 50843085, 50842733, 50838178], "B": [50825116, 50826216, 50828719, 50855444, 50825477, 50825790, 50828172, 50826213, 50832189, 50825110, 50828347, 50828834, 50837439, 50825450, 50826572, 50843916, 50826867, 50835237], "A": [50824651, 50824679, 50826667, 50855859, 50824764, 50824716, 50825124, 50824755, 50829449, 50824659, 50826098, 50836545, 50824668, 50824888, 50845090, 50825359, 50834758]}, "name": "F. Clear the String", "statement": "You are given a string s of length n consisting of lowercase Latin\r\nletters. You may apply some operations to this string: in one operation\r\nyou can delete some contiguous substring of this string, if all letters\r\nin the substring you delete are equal. For example, after deleting\r\nsubstring from string we get the string .Calculate the minimum number of\r\noperations to delete the whole string s.\r\n", "solutions": ["#ifndef BZ\n#pragma GCC optimize \"-O3\"\n#endif\n#include <bits/stdc++.h>\n\n#define FASTIO\n#define ALL(v) (v).begin(), (v).end()\n#define rep(i, l, r) for (int i = (l); i < (r); ++i)\n\n#ifdef FASTIO\n#define scanf abacaba\n#define printf abacaba\n#endif\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nusing namespace std;\n\ntemplate<typename T> T mo(T x, T y) { x %= y; return x <= 0 ? x + y : x; }\n\nconst int MX = 507;\n\nint f[MX][MX];\nint g[MX];\nconst int INF = 1000 * 1000 * 1000 + 7;\nint main() {\n#ifdef FASTIO\n    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n#endif\n    int n;\n    cin >> n;\n    string s;\n    cin >> s;\n    s = \"$\" + s;\n    for (int i = 0; i <= n + 1; i++) {\n        for (int j = 0; j <= n + 1; j++) {\n            f[i][j] = INF;\n        }\n        f[i][i] = 1;\n    }\n    for (int l = n; l >= 1; l--) {\n        for (int i = 1; i <= n; i++) {\n            g[i] = INF;\n        }\n        g[l] = 0;\n        for (int r = l; r < n; r++) {\n            if (s[r + 1] == s[l]) {\n                g[r + 1] = min(g[r + 1], g[r]);\n            }\n            for (int k = r + 1; k <= n; k++) {\n                g[k] = min(g[k], g[r] + f[r + 1][k]);\n            }\n        }\n        for (int r = l; r <= n; r++) {\n            f[l][r] = g[r] + 1;\n        }\n    }\n\n    cout << f[1][n] << \"\\n\";\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2000", "interactive": false}