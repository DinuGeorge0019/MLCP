{"link": "https://codeforces.com//contest/1948/problem/B", "problemId": "2532314", "problem_idx": "B", "shortId": "1948B", "contest_number": "1948", "problem_submissions": {"G": [251472376, 251497915, 251480984, 251480163, 251489959, 251467292, 251485648, 251500573, 251486197, 251512722, 251521639, 251480657, 251509802, 251528428, 251520218, 251515719, 251959006, 251871508, 251537711, 251535946, 251529016, 251516034, 251533510, 251533892], "E": [251455000, 251464649, 251452268, 251480095, 251460808, 251464897, 251506007, 251480198, 251478117, 251501414, 251479798, 251486494, 251498878, 251484347, 251486715, 251474115, 251485874, 251484195, 251499420], "F": [251446403, 251454570, 251464038, 251471618, 251471081, 251484983, 251475462, 251495125, 251493237, 251458734, 251522756, 251503819, 251513774, 251502504, 251506031, 251513492, 251502955, 251521827, 251479729], "D": [251428147, 251500203, 251431497, 251439266, 251434727, 251440547, 251446816, 251446867, 251456743, 251442045, 251470051, 251447446, 251460726, 251467120, 251467499, 251465257, 251451922, 251465519, 251467189, 251458845], "C": [251425049, 251426495, 251431074, 251427750, 251427491, 251433261, 251437529, 251439503, 251431968, 251453203, 251439755, 251452383, 251446018, 251457382, 251439370, 251471934, 251459502, 251461525, 251447180], "B": [251421706, 251420680, 251422950, 251421537, 251420205, 251424082, 251426365, 251440040, 251423639, 251430207, 251430125, 251435004, 251430108, 251439531, 251427186, 251441008, 251448490, 251446251, 251436268], "A": [251419288, 251417353, 251417664, 251417432, 251417471, 251418376, 251419094, 251418141, 251417555, 251419693, 251424986, 251423459, 251419168, 251420360, 251418645, 251426543, 251449327, 251430256, 251427243]}, "name": "B. Array Fix", "statement": "You are given an integer array a of length n.You can perform the\r\nfollowing operation any number of times (possibly zero): take any\r\nelement of the array a, which is at least 10, delete it, and instead\r\ninsert the digits that element consisted of in the same position, in\r\norder they appear in that element.For example: if we apply this\r\noperation to the 3-rd element of the array [12, 3, 45, 67], then the\r\narray becomes [12, 3, 4, 5, 67]. if we apply this operation to the 2-nd\r\nelement of the array [2, 10], then the array becomes [2, 1, 0]. Your\r\ntask is to determine whether it is possible to make a sorted in\r\nnon-descending order using the aforementioned operation . In other\r\nwords, you have to determine if it is possible to transform the array a\r\nin such a way that a_1\r\nle a_2\r\nle\r\ndots\r\nle a_k, where k is the current length of the array a.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 15.03.2024 10:39:06\n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    bool fail = false;\n    int p = 0;\n    for (int x : a) {\n      if (x >= 10 && x / 10 >= p && x % 10 >= x / 10) {\n        p = x % 10;\n      } else {\n        if (x >= p) {\n          p = x;\n        } else {\n          fail = true;\n          break;\n        }\n      }\n    }\n    cout << (fail ? \"NO\" : \"YES\") << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "greedy", "implementation"], "dificulty": "1100", "interactive": false}