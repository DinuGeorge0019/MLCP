{
    "link": "https://codeforces.com//contest/845/problem/A",
    "problemId": "119171",
    "problem_idx": "A",
    "shortId": "845A",
    "contest_number": "845",
    "problem_submissions": {
        "F": [
            29662191,
            29658691,
            29662577,
            29662557,
            29659271,
            29663949,
            29653306,
            29665823,
            29656869,
            29668298
        ],
        "E": [
            29659390,
            29664188,
            29664063,
            29663215,
            29663046,
            29661461,
            29660552,
            29653793,
            29658574,
            29655087,
            29668158,
            29670073,
            29664054,
            35903704,
            29673169,
            29656703
        ],
        "G": [
            29653058,
            29648925,
            29654997,
            29656636,
            29656923,
            29653301,
            29656155,
            29657485,
            29658552,
            29655006,
            29655066,
            29653896,
            29654510,
            29655977,
            29654363,
            29657005,
            29659307
        ],
        "D": [
            29651798,
            29653616,
            29652569,
            29653638,
            29650642,
            29655985,
            29652243,
            29654023,
            29657108,
            29650588,
            29651844,
            29650739,
            29653419,
            29656251,
            29652823,
            29652595,
            29655002,
            29652809,
            29650646
        ],
        "C": [
            29648829,
            29651383,
            29648358,
            29648061,
            29648669,
            29648794,
            29648303,
            29648671,
            29648937,
            29648455,
            29648984,
            29648127,
            29648921,
            29649045,
            29649074,
            29650613,
            29649296,
            29649747,
            29649146
        ],
        "B": [
            29648130,
            29650436,
            29648956,
            29647280,
            29647747,
            29647255,
            29647572,
            29647971,
            29647530,
            29648013,
            29647504,
            29647868,
            29647800,
            29648160,
            29648934,
            29648366,
            29648191,
            29646728
        ],
        "A": [
            29647342,
            29649692,
            29646643,
            29646523,
            29646782,
            29646497,
            29646493,
            29646476,
            29646501,
            29647201,
            29646463,
            29646669,
            29646500,
            29646893,
            29647910,
            29647098,
            29646857,
            29647624
        ]
    },
    "name": "A. Chess Tourney",
    "statement": "Berland annual chess tournament is coming!Organizers have gathered chess\r\nplayers who should be divided into two teams with people each. The first\r\nteam is sponsored by BerOil and the second team is sponsored by\r\nBerMobile. Obviously, organizers should guarantee the win for the team\r\nof BerOil.Thus, organizers should divide all players into two teams with\r\npeople each in such a way that the first team always wins.Every chess\r\nplayer has its rating . It is known that chess player with the greater\r\nrating always wins the player with the lower rating. If their ratings\r\nare equal then any of the players can win.After teams assignment there\r\nwill come a drawing to form pairs of opponents: in each pair there is a\r\nplayer from the first team and a player from the second team. Every\r\nchess player should be in exactly one pair. Every pair plays once. The\r\ndrawing is totally random.Is it possible to divide all players into two\r\nteams with people each so that the player from the first team in every\r\npair wins of the results of the drawing?\r\n",
    "solutions": [
        "#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint a[205];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=2*n;i++)\n        scanf(\"%d\",&a[i]);\n    sort(a+1,a+2*n+1);\n    return 0*printf(\"%s\\n\",(a[n]==a[n+1] ? \"NO\" : \"YES\"));\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Chess Tourney.json",
    "editorial_link": "https://codeforces.com//blog/entry/53986",
    "editorial": "Letâs sort the input array in non-decreasing order. Now we should take\r\nthe first players to the first team and the last players to the second\r\nteam. That will guarantee that every member of the first team has\r\ngreater or equal rating than every member of the second team. Now the\r\nonly thing left is to check if all ratings in the first teams differ\r\nfrom all the ratings in the second team (if some are equal then in\r\nsorted order).\r\n",
    "hint": []
}