{"link": "https://codeforces.com//contest/863/problem/E", "problemId": "123495", "problem_idx": "E", "shortId": "863E", "contest_number": "863", "problem_submissions": {"F": [30585747, 30587406, 30587581, 30586987, 30589318, 30588386, 30614835, 30589226, 30587748, 30588069, 30589138, 30588637, 30589602, 30588953, 30587113, 30590006, 30591128, 30589525, 30591328], "E": [30584826, 30584892, 30586722, 30586370, 30585856, 30586447, 30586390, 30586258, 30587809, 30586316, 30587721, 30587855, 30587775, 30588242, 30587782, 30587403, 30589806], "D": [30584161, 30582889, 30583896, 30584983, 30584514, 30599512, 30585431, 30584907, 30584911, 30586408, 30585496, 30586610, 30586374, 30584958, 30587183, 30584596, 30585231, 30587520], "C": [30583486, 30584324, 30585366, 30584169, 30583738, 30584504, 30584405, 30584037, 30585386, 30584778, 30585657, 30585045, 30584141, 30586261, 30586674, 30591722, 30586154], "B": [30581979, 30583463, 30582674, 30582188, 30582199, 30582158, 30582064, 30582238, 30582609, 30582456, 30582868, 30582784, 30582689, 30582852, 30583217, 30606326, 30582212, 30582335], "A": [30581619, 30581704, 30581695, 30581653, 30581650, 30786677, 30581665, 30581657, 30581629, 30581763, 30581628, 30581791, 30581663, 30581713, 30581800, 30581819, 30581630, 30581694], "G": [57430904, 30596090]}, "name": "E. Turn Off The TV", "statement": "Luba needs your help again! Luba has TV sets. She knows that -th TV set\r\nwill be working from moment of time till moment , inclusive.Luba wants\r\nto switch off one of TV sets in order to free the socket. Let\u2019s call\r\nsome TV set if after switching it off the number of moments of time when\r\nat least one of TV sets is working won\u2019t decrease. Luba will be very\r\nupset if she has to switch off a non- TV set.Help Luba by telling her\r\nthe index of some TV set. If there is no any, print .\r\n", "solutions": ["#include \"bits/stdc++.h\"\nusing namespace std;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))\n#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))\nstatic const int INF = 0x3f3f3f3f; static const long long INFL = 0x3f3f3f3f3f3f3f3fLL;\ntypedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii; typedef long long ll;\ntemplate<typename T, typename U> static void amin(T &x, U y) { if (y < x) x = y; }\ntemplate<typename T, typename U> static void amax(T &x, U y) { if (x < y) x = y; }\n\nint main() {\n\tint n;\n\twhile (~scanf(\"%d\", &n)) {\n\t\tvector<int> L(n);\n\t\tvector<int> R(n);\n\t\tfor (int i = 0; i < n; ++ i)\n\t\t\tscanf(\"%d%d\", &L[i], &R[i]), -- L[i];\n\t\tvector<int> values;\n\t\trep(i, n) {\n\t\t\tvalues.push_back(L[i]);\n\t\t\tvalues.push_back(R[i]);\n\t\t}\n\t\tsort(values.begin(), values.end());\n\t\tvalues.erase(unique(values.begin(), values.end()), values.end());\n\t\tint X = (int)values.size();\n\t\tvector<int> add(X + 1);\n\t\trep(i, n) {\n\t\t\tint l = (int)(lower_bound(values.begin(), values.end(), L[i]) - values.begin());\n\t\t\tint r = (int)(lower_bound(values.begin(), values.end(), R[i]) - values.begin());\n\t\t\t++ add[l], -- add[r];\n\t\t}\n\t\trep(i, X)\n\t\t\tadd[i + 1] += add[i];\n\t\tvector<int> sum(X + 1);\n\t\trep(i, X)\n\t\t\tsum[i + 1] = sum[i] + (add[i] >= 2);\n\t\tint ans = -1;\n\t\trep(i, n) {\n\t\t\tint l = (int)(lower_bound(values.begin(), values.end(), L[i]) - values.begin());\n\t\t\tint r = (int)(lower_bound(values.begin(), values.end(), R[i]) - values.begin());\n\t\t\tif (sum[r] - sum[l] == r - l) {\n\t\t\t\tans = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans == -1 ? ans : ans + 1);\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "sortings"], "dificulty": "2000", "interactive": false}