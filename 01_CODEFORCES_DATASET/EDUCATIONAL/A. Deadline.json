{
    "link": "https://codeforces.com//contest/1288/problem/A",
    "problemId": "516087",
    "problem_idx": "A",
    "shortId": "1288A",
    "contest_number": "1288",
    "problem_submissions": {
        "F": [
            68819552,
            68808531,
            68807458,
            70134760,
            68807017,
            68813769,
            68812618,
            102301682,
            68810583,
            68807992,
            68818667,
            68814476,
            68814904,
            148920535,
            69079454,
            69075918,
            69087920,
            68817577,
            68867890,
            68867024
        ],
        "E": [
            68789304,
            68799414,
            70134713,
            68794162,
            68793417,
            68796419,
            68796122,
            68798077,
            68796394,
            68805226,
            68789819,
            68793916,
            68792563,
            68828678,
            68828570,
            68828548,
            68828508,
            68828405,
            68825187,
            68824325,
            68795790,
            68796556,
            68795660,
            68795978,
            68794855,
            68795573,
            68798172,
            68797193
        ],
        "D": [
            68783658,
            68790087,
            70134685,
            68790433,
            68784769,
            68786894,
            68787811,
            68794372,
            68789589,
            68795124,
            68786983,
            68787137,
            68787922,
            68782622,
            68788267,
            68791758,
            68788474,
            68787396,
            68786555,
            69711971,
            69711762,
            68788055,
            68792205
        ],
        "C": [
            68780932,
            68782036,
            70134661,
            68786063,
            68780437,
            68783287,
            68784254,
            68819757,
            68791290,
            86478943,
            68783597,
            68785836,
            68782781,
            68782659,
            68783955,
            68780494,
            68784922,
            68782777,
            68784716,
            68784512,
            68784035,
            68782534,
            68783571
        ],
        "B": [
            68779970,
            68780416,
            70134627,
            68782676,
            68781485,
            68781383,
            68781464,
            68781107,
            68781318,
            68782464,
            68780637,
            68781282,
            68782023,
            68779901,
            68781253,
            68780876,
            68782711,
            68780458,
            68781060,
            68780498,
            68781762
        ],
        "A": [
            68779722,
            68779812,
            70134580,
            68780111,
            68782502,
            68779822,
            68779930,
            68779750,
            68780171,
            68781059,
            68779815,
            68780062,
            68780122,
            68779758,
            68779835,
            68779859,
            68779825,
            68779886,
            68780036,
            68779829,
            68780004
        ]
    },
    "name": "A. Deadline",
    "statement": "Adilbek was assigned to a special project. For Adilbek it means that he\r\nhas n days to run a special program and provide its results. But there\r\nis a problem: the program needs to run for d days to calculate the\r\nresults.Fortunately, Adilbek can optimize the program. If he spends x (x\r\nis a non-negative integer) days optimizing the program, he will make the\r\nprogram run in\r\nleft\r\nlceil\r\nfrac{d}{x + 1}\r\nright\r\nrceil days (\r\nleft\r\nlceil a\r\nright\r\nrceil is the ceiling function:\r\nleft\r\nlceil 2.4\r\nright\r\nrceil = 3,\r\nleft\r\nlceil 2\r\nright\r\nrceil = 2). The program cannot be run and optimized simultaneously, so\r\nthe total number of days he will spend is equal to x +\r\nleft\r\nlceil\r\nfrac{d}{x + 1}\r\nright\r\nrceil.Will Adilbek be able to provide the generated results in no more\r\nthan n days?\r\n",
    "solutions": [
        "//#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n//defines\ntypedef long long ll;\ntypedef long double ld;\n#define TIME clock() * 1.0 / CLOCKS_PER_SEC\n#define prev _prev\n#define y0 _y0\n#define kill _kill\n\n//permanent constants\nconst ld pi = acos(-1.0);\nconst int day[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\nconst int digarr[10] = {6, 2, 5, 5, 4, 5, 6, 3, 7, 6};\nconst int dx[4] = {0, 1, 0, -1};\nconst int dy[4] = {1, 0, -1, 0};\nconst int dxo[8] = {-1, -1, -1, 0, 1, 1, 1, 0};\nconst int dyo[8] = {-1, 0, 1, 1, 1, 0, -1, -1};\nconst int alf = 26;\nconst int dig = 10;\nconst int two = 2;\nconst int th = 3;\nconst ll prost = 239;\nconst ll btc = 30;\nconst ld eps = 1e-10;\nconst ll INF = (ll)(1e18 + 239);\nconst int BIG = (int)(1e9 + 239);\nconst int MOD = 998244353; //(int)(1e9 + 7); //998244353;\nconst ll MOD2 = (ll)MOD * (ll)MOD;\n\n//random\nmt19937 rnd(239); //(chrono::high_resolution_clock::now().time_since_epoch().count());\n\n//constants\nconst int M = (int)(2e5 + 239);\nconst int N = (int)(2e3 + 239);\nconst int L = 20;\nconst int T = (1 << 20);\nconst int B = 500;\nconst int X = 1e4 + 239;\n\nvoid solve()\n{\n    int n, d;\n    cin >> n >> d;\n    if (n >= 1e5)\n    {\n        cout << \"YES\\n\";\n        return;\n    }\n    for (int x = 0; x <= n; x++)\n        if (x + ((d + x) / (x + 1)) <= n)\n        {\n            cout << \"YES\\n\";\n            return;\n        }\n    cout << \"NO\\n\";\n}\n\nint32_t main()\n{\n#ifdef ONPC\n    freopen(\"input.txt\", \"r\", stdin);\n#endif\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    int t;\n    cin >> t;\n    while (t--)\n        solve();\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "brute force",
        "math",
        "ternary search"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Deadline.json",
    "editorial_link": "https://codeforces.com//blog/entry/73105",
    "editorial": "At first, letâs note that if is integer and and are non-negative then .\r\nSo, instead of looking at we can consider .Itâs easier since the\r\nfunction is more common function and it can be proven that itâs concave\r\nupward. It means that this function has a unique minimum and, moreover,\r\nwe can calculate it: has minimum value in and .Since the ceiling\r\nfunction is monotonically increasing so we can assume that for all .So\r\nwe can just iterate from to and check the unequation . The total\r\ncomplexity is equal to .There is a simple optimization: because of the\r\nmonotone ceiling we can prove that we need to check only and .\r\n",
    "hint": []
}