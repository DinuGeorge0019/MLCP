{
    "link": "https://codeforces.com//contest/665/problem/B",
    "problemId": "55549",
    "problem_idx": "B",
    "shortId": "665B",
    "contest_number": "665",
    "problem_submissions": {
        "F": [
            35437149,
            27600620,
            27600570,
            27600365,
            207086930,
            17511081,
            17511048,
            17408931,
            17465318,
            17465113,
            17465105,
            17421220,
            17419616,
            17419504,
            17407442
        ],
        "E": [
            17404108,
            17403997,
            17404019,
            17404185,
            17404405,
            17405241,
            17404852,
            17406609,
            17403872,
            17404958,
            17406585,
            17405102,
            17402241,
            17404889,
            17406152,
            17407503,
            17407294,
            17402667,
            17407651,
            17402391
        ],
        "D": [
            17402746,
            17402888,
            17403061,
            17402886,
            17403632,
            17402659,
            17403180,
            17402538,
            17403092,
            17404017,
            17402765,
            17404460,
            17403586,
            17404039,
            17404874,
            17597162,
            17597147,
            17405860,
            17404856,
            17403614,
            17402947,
            17403487
        ],
        "B": [
            17402058,
            17402143,
            17401985,
            17401812,
            17402480,
            17401996,
            17402111,
            17401950,
            17401883,
            17402289,
            17402172,
            17404614,
            17405448,
            17402800,
            17402279,
            17402724,
            17403040,
            17404322,
            17403505,
            17404527
        ],
        "C": [
            17401652,
            17401814,
            17402423,
            17402078,
            17401921,
            17401528,
            17401657,
            17401538,
            17402228,
            17402780,
            17401867,
            17401866,
            17401442,
            17401822,
            17401577,
            17403531,
            17403479,
            17401483,
            17404073,
            17401636,
            17404128
        ],
        "A": [
            17401480,
            17401614,
            17401638,
            17401502,
            17401615,
            17401450,
            17401531,
            17402688,
            17401495,
            17401597,
            17401511,
            17401510,
            17405192,
            17401618,
            17401993,
            17401713,
            17402074,
            17402469,
            17404975,
            17408296,
            17406598
        ]
    },
    "name": "B. Shopping",
    "statement": "Ayush is a cashier at the shopping center. Recently his department has\r\nstarted a ”\" service which allows users to shop online. The store\r\ncontains items. customers have already used the above service. Each user\r\npaid for items. Let denote the -th item in the -th person’s order.Due to\r\nthe space limitations all the items are arranged in one single row. When\r\nAyush receives the -th order he will find one by one all the items () in\r\nthe row. Let denote the position of the item in the row at the moment of\r\nits collection. Then Ayush takes time equal to for the -th customer.When\r\nAyush accesses the -th element he keeps a new stock in the front of the\r\nrow and takes away the -th element. Thus the values are updating.Your\r\ntask is to calculate the total time it takes for Ayush to process all\r\nthe orders.You can assume that the market has endless stock.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, m, k;\n\nint tab[1007];\n\nint wyn;\n\nint x;\n\nint y;\n\nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i=1; i<=k; i++)\n    scanf(\"%d\", &tab[i]);\n    for (int i=1; i<=n*m; i++)\n    {\n        scanf(\"%d\", &x);\n        for (int i=1; i<=k; i++)\n        {\n            if (tab[i]==x)\n            {\n                y=i;\n            }\n        }\n        while(y>1)\n        {\n            swap(tab[y], tab[y-1]);\n            y--;\n            wyn++;\n        }\n        wyn++;\n    }\n    printf(\"%d\\n\", wyn);\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Shopping.json",
    "editorial_link": "https://codeforces.com//blog/entry/44466",
    "editorial": "The problem was suggested by Ayush Anand JeanValjean01. In this problem\r\nyou should simply do what was written in the problem statement. There\r\nare no tricks. C++ solution\r\n",
    "hint": []
}