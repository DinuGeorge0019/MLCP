{
    "link": "https://codeforces.com//contest/1221/problem/C",
    "problemId": "415609",
    "problem_idx": "C",
    "shortId": "1221C",
    "contest_number": "1221",
    "problem_submissions": {
        "G": [
            60878901,
            60954325,
            60892510,
            60889777,
            60939440,
            60957169,
            60954037,
            60954018,
            60887759,
            60892512,
            61066187,
            60888304,
            60953665,
            60884074
        ],
        "F": [
            60872429,
            60906430,
            60877026,
            60879328,
            60873795,
            60880496,
            60880041,
            60882317,
            60876205,
            60881638,
            60879016,
            60884701,
            60883109,
            60876230,
            60885368,
            60884882,
            60888631,
            60877275
        ],
        "E": [
            60865427,
            60906424,
            60870455,
            60872355,
            60881944,
            60867813,
            60873346,
            60871774,
            60882236,
            60957159,
            60869840,
            60865430,
            60870324,
            60874697,
            60871945,
            60886034,
            60875073,
            60873664,
            60883200,
            60875153,
            60886105,
            60887173
        ],
        "D": [
            60858978,
            60906413,
            60858963,
            60862133,
            60857697,
            60858483,
            60858390,
            60860167,
            60862000,
            60957149,
            60859058,
            60857548,
            60865511,
            60860504,
            60857388,
            60865183,
            60887076,
            60866989,
            60863673,
            60861492,
            60857971,
            60867806,
            60885376
        ],
        "C": [
            60854799,
            60906405,
            60854087,
            60858148,
            60855694,
            60855339,
            60856078,
            60857408,
            60859538,
            60957138,
            60855511,
            60854166,
            60860646,
            60858018,
            60854647,
            60856215,
            60857135,
            60857947,
            60855000,
            60855230,
            60864597,
            60884317
        ],
        "B": [
            60853702,
            60906395,
            60853284,
            60856858,
            60853405,
            60869020,
            60854977,
            60855791,
            60854474,
            60957129,
            60854297,
            60853117,
            60859658,
            60856090,
            60853528,
            60854286,
            60855985,
            60856982,
            60854601,
            60853843,
            60862970,
            60883738
        ],
        "A": [
            60853175,
            60906382,
            60852746,
            60855419,
            60852846,
            60852969,
            60852978,
            60853994,
            60853299,
            60957119,
            60852836,
            60852764,
            60858768,
            60853799,
            60852813,
            60853187,
            60854280,
            60853549,
            60853275,
            60852850,
            60861325,
            60883303
        ]
    },
    "name": "C. Perfect Team",
    "statement": "You may have already known that a standard ICPC team consists of exactly\r\nthree members. The perfect team however has more restrictions. A student\r\ncan have some specialization: coder or mathematician. So the team is\r\nconsidered perfect if it includes at least one coder, at least one\r\nmathematician and it consists of exactly three members.You are a coach\r\nat a very large university and you know that c of your students are\r\ncoders, m are mathematicians and x have no specialization.What is the\r\nmaximum number of full perfect teams you can distribute them into? Note\r\nthat some students can be left without a team and each student can be a\r\npart of no more than one team.You are also asked to answer q independent\r\nqueries.\r\n",
    "solutions": [
        "#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#endif\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long double ld;\ntypedef long long ll;\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    //freopen(\"input.txt\", \"r\", stdin);\n    int q;\n    cin >> q;\n    while (q--) {\n        ll c, m, x;\n        cin >> c >> m >> x;\n        cout << min({c, m, (c + m + x) / 3}) << '\\n';\n    }\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Perfect Team.json",
    "editorial_link": "https://codeforces.com//blog/entry/69925",
    "editorial": "Notice that if , then you can equalize them to the min and re-qualify\r\nthe rest into students without specialization. That won\u00e2\u0080\u0099t change the\r\nanswer.Now analyze the possible team formations: 1 of each kind, 2\r\ncoders and 1 mathematician or 1 coder and 2 mathematicians. Each of\r\nthese squads have 1 coder and 1 mathematician, so you can only choose\r\nthe type of the third member.The students without specialization can\r\nonly be used in the first kind of teams, so let\u00e2\u0080\u0099s use them first. After\r\nthat you might have been left with a nonzero count of coders and\r\nmathematicians. These are equal however, so can be added to the\r\nanswer.This solves each query in .You can also run a binary search and\r\nsolve each query in .\r\n"
}