{
    "link": "https://codeforces.com//contest/1257/problem/B",
    "problemId": "470637",
    "problem_idx": "B",
    "shortId": "1257B",
    "contest_number": "1257",
    "problem_submissions": {
        "D": [
            65057118,
            65056815,
            64811909,
            64812228,
            64902701,
            64852999,
            64814000,
            64812775,
            64810546,
            64816528,
            64811860,
            64815149,
            64813583,
            64859190,
            64812263,
            64833625,
            64835681,
            64837730,
            64812160,
            64814684,
            64816849,
            64813089,
            64816979,
            64819402,
            64816732
        ],
        "C": [
            65056409,
            64806576,
            64805235,
            64806785,
            64807190,
            64804696,
            64807450,
            64806032,
            64809153,
            64805479,
            64859181,
            64806083,
            64833699,
            64837249,
            64838553,
            64806562,
            64809106,
            64808660,
            64805745,
            64806256,
            64807560,
            64807194
        ],
        "G": [
            64897847,
            64897831,
            64897799,
            64897485,
            64897435,
            64897360,
            64897323,
            64897206,
            64897135,
            64897132,
            64832008,
            64834753,
            64834055,
            65121895,
            65107512,
            65106890,
            64896695,
            64896568,
            64824847,
            64838006,
            64831302,
            64827437,
            64838916,
            64835759,
            64897295,
            64843586,
            64835359,
            64859234,
            64838704,
            65758026,
            65701826,
            64838221,
            64811892,
            64819153,
            64825152,
            64845699,
            211233713
        ],
        "E": [
            64865638,
            64865598,
            64816641,
            64819423,
            64857985,
            64831912,
            64817543,
            64814313,
            64819647,
            64817584,
            64819210,
            64817767,
            64859197,
            64814324,
            64824835,
            64832464,
            64832777,
            64820509,
            64818561,
            64820860,
            64817451,
            64823687,
            64821709,
            64824423
        ],
        "F": [
            64821055,
            64823926,
            64819069,
            64824118,
            64836060,
            64833509,
            64822156,
            64828427,
            64823151,
            64859227,
            64836114,
            64824755,
            64828355,
            64829448,
            64829060,
            64827403,
            64826552,
            64828456,
            64828341,
            64826098,
            64830812
        ],
        "B": [
            64802390,
            64803311,
            64804526,
            64804462,
            64802487,
            64804783,
            64803616,
            64806366,
            64802273,
            64859169,
            64803153,
            64833735,
            64838243,
            64839005,
            64803686,
            64806451,
            64806108,
            64802622,
            64803655,
            64803331,
            64803958
        ],
        "A": [
            64800956,
            64800953,
            64801859,
            64801038,
            64800918,
            64800975,
            64800962,
            64803138,
            64800908,
            64859160,
            64801089,
            64833779,
            64838753,
            64839327,
            64800961,
            64801572,
            64801191,
            64800917,
            64801440,
            64800919,
            64801087
        ]
    },
    "name": "B. Magic Stick",
    "statement": "Recently Petya walked in the forest and found a magic stick.Since Petya\r\nreally likes numbers, the first thing he learned was spells for changing\r\nnumbers. So far, he knows only two spells that can be applied to a\r\ninteger: If the chosen number a is even, then the spell will turn it\r\ninto\r\nfrac{3a}{2}; If the chosen number a is greater than one, then the spell\r\nwill turn it into a-1. Note that if the number is even and greater than\r\none, then Petya can choose which spell to apply.Petya now has only one\r\nnumber x. He wants to know if his favorite number y can be obtained from\r\nx using the spells he knows. The spells can be used any number of times\r\nin any order. It is not required to use spells, Petya can leave x as it\r\nis.\r\n",
    "solutions": [
        "#include <algorithm>\n#include <cassert>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    int T;\n    cin >> T;\n\n    while (T-- > 0) {\n        int X, Y;\n        cin >> X >> Y;\n\n        if (X >= 4)\n            cout << \"YES\" << '\\n';\n        else if (X == 2 || X == 3)\n            cout << (Y <= 3 ? \"YES\" : \"NO\") << '\\n';\n        else if (X == 1)\n            cout << (Y <= 1 ? \"YES\" : \"NO\") << '\\n';\n        else\n            assert(false);\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Magic Stick.json",
    "editorial_link": "https://codeforces.com//blog/entry/71434",
    "editorial": "cannot be transformed into any other number. can be transformed into or\r\n, and can be transformed only into . It means that if , then only is\r\nreachable; and if or , then should be less than .Otherwise, we can make\r\nas large as we want, so if , any is reachable.\r\n",
    "hint": []
}