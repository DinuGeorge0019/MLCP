{
    "link": "https://codeforces.com//contest/691/problem/D",
    "problemId": "65089",
    "problem_idx": "D",
    "shortId": "691D",
    "contest_number": "691",
    "problem_submissions": {
        "C": [
            19083647,
            19083808,
            19079416,
            19082359,
            19081968,
            19086585,
            19089942,
            19082466,
            19085834,
            19085017,
            19082088,
            19085988,
            19089031,
            19086417,
            19086603,
            19089268
        ],
        "F": [
            19082074,
            19086159,
            19085359,
            19086998,
            19087635,
            19085577,
            19087897,
            19088254,
            19088045,
            19089684,
            19089140,
            19087588,
            19084174,
            19089793,
            19084959,
            19078904,
            19079917,
            19086444
        ],
        "E": [
            19080712,
            19082121,
            19082381,
            19085338,
            19084884,
            19082001,
            19083935,
            19084381,
            19080694,
            19083201,
            19085360,
            19086298,
            19084504,
            19094886,
            19094230,
            19085141,
            19083921,
            19082714,
            19083425,
            19082818
        ],
        "B": [
            19079418,
            19078374,
            19077920,
            19080120,
            19078121,
            19077835,
            19077976,
            19080406,
            19082283,
            19078348,
            19079694,
            19081373,
            19086345,
            19087378,
            19087538,
            19087384
        ],
        "D": [
            19078255,
            19080183,
            19080970,
            19083585,
            19083447,
            19079074,
            19081572,
            19083521,
            19078743,
            19079714,
            19083091,
            19078918,
            19106952,
            19081805,
            19078693,
            19081473,
            19084063,
            19081536
        ],
        "A": [
            19077023,
            19078801,
            19081051,
            19077284,
            19076999,
            19081615,
            19077051,
            19078735,
            19077123,
            19077029,
            19083487,
            19077036,
            19079311,
            19086617,
            19087885,
            19078564
        ]
    },
    "name": "D. Swaps in Permutation",
    "statement": "You are given a permutation of the numbers and pairs of positions .At\r\neach step you can choose a pair from the given positions and swap the\r\nnumbers in that positions. What is the lexicographically maximal\r\npermutation one can get?Let and be two permutations of the numbers . is\r\nlexicographically smaller than the if a number exists, so for and .\r\n",
    "solutions": [
        "/*\nDon't even think about reachin' me\n'Cause I won't be home\nDon't even think about stoppin' by\nDon't think of me at all\n\nI did, what I had to do\nAnd if there was a reason, it was you\n\nDon't even think about gettin' inside\nVoices in my head, voices\nI got scratches, all over my arms\nOne for each day, since I fell apart\n\nI did, what I had to do\nAnd if there was a reason, it was you, oh\n\nFootsteps in the hole, it was you, you\nOh oh\nPictures on my chest, it was you, it was you\n\nI did, what I had to do and if there was a reason\nThere wasn't no reason, no\nAnd if, there's something you'd like to do\nOh just let me continue, to blame you, oh oh\n\nFootsteps in the hole, it was you, you\nOh oh\nPictures on my chest, it was you, it was you\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n#define norm asdfasdgasdgsd\n\n#define eps 1e-9\n#define M_PI 3.141592653589793\n#define bs 1000000007\n#define bsize 350\n\nusing namespace std;\n\nconst int INF = 1e9;\nconst int N = 1000031;\n\nint n, k, ar[N];\nvector<int> vec[N];\nint w[N];\n\nint get(int x)\n{\n\tif (w[x] == x)\n\t\treturn x;\n\treturn w[x] = get(w[x]);\n}\n\nvoid merge(int a, int b)\n{\n\ta = get(a);\n\tb = get(b);\n\tw[a] = b;\n}\n\nint ans[N];\n\nint main(){\n\t//freopen(\"fabro.in\",\"r\",stdin);\n\t//freopen(\"fabro.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\", \"r\", stdin);\n\t//freopen(\"F:/output.txt\", \"w\", stdout);\n\tios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> ar[i];\n\t}\n\n\tfor (int i = 1; i <= n; i++)\n\t\tw[i] = i;\n\n\tfor (int i = 1; i <= k; i++)\n\t{\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tmerge(a, b);\n\t}\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint id = get(i);\n\t\tvec[id].push_back(ar[i]);\n\t}\n\n\tfor (int i = 1; i <= n; i++)\n\t\tsort(vec[i].begin(), vec[i].end());\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint id = get(i);\n\t\tint val = vec[id].back();\n\t\tvec[id].pop_back();\n\t\tans[i] = val;\n\t}\n\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (i > 1)\n\t\t\tcout << \" \";\n\t\tcout << ans[i];\n\t}\n\tcout << endl;\n\n\tcin.get(); cin.get();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dsu",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\D. Swaps in Permutation.json",
    "editorial_link": "https://codeforces.com//blog/entry/46075",
    "editorial": "The problem was suggested by Zi Song Yeoh zscoder. Consider a graph with\r\nvertices whose edges is the pairs from the input. Itâs possible to swap\r\nany two values with the positions in some connected component in that\r\ngraph. So we can sort the values from any component in decreasing order.\r\nEasy to see that after sorting the values of each component we will get\r\nthe lexicographically maximal permutation. C++ solution\r\n",
    "hint": []
}