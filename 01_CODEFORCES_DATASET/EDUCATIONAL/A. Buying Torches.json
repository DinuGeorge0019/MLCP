{"link": "https://codeforces.com//contest/1418/problem/A", "problemId": "727423", "problem_idx": "A", "shortId": "1418A", "contest_number": "1418", "problem_submissions": {"F": [92827621, 92992766, 92847130, 92847007, 92846498, 92840659, 92838710, 92837329, 92835778, 92821703, 92839298, 92833921, 92885700, 92870799, 92830172, 92989347, 92845726], "G": [92817256, 93890104, 93890054, 93890004, 93889956, 93889783, 93889650, 93889392, 93889084, 93888189, 93888010, 93887834, 93887831, 93887519, 93887334, 93887004, 93839244, 93839240, 93839237, 93835786, 93835763, 93835704, 93828053, 93828000, 92855419, 92854972, 92815447, 92815164, 92824652, 92823576, 92837977, 92824758, 92885721, 92823789, 92823462, 92820493, 92830232, 93485501, 92866692, 92833116, 92832754, 92824217, 92833610, 92830510, 92833625, 92828988, 92837204, 92830405, 92834428], "A": [92809737, 92851684, 92804370, 92802575, 92799307, 92799729, 92800647, 92885635, 92800218, 92800425, 92802031, 92799884, 92800952, 92799036, 92800270, 92799895, 92801328, 92799861, 92800242, 92800050, 92800040, 92801512], "D": [92806930, 92847621, 92803255, 92806570, 92812108, 92817724, 92809504, 92885678, 92808863, 92812638, 92810774, 92842221, 92815078, 92815207, 92817058, 92813567, 92813334, 92817631, 92827883, 92813906, 92816619, 92816135, 92820186], "E": [92805758, 92809090, 92809687, 92815513, 92824046, 92816662, 92885694, 92814615, 92816908, 92930467, 92820677, 92822734, 92822919, 92819310, 92822831, 92824275, 92815296, 92836469, 92823732, 92819866, 92826009], "C": [92798839, 92798564, 92801110, 92802769, 92810140, 92803375, 92885666, 92803075, 92805736, 92801242, 92805901, 92804239, 92807896, 92805622, 92804878, 92809071, 92805265, 92806697, 92803772, 92811897, 92812555], "B": [92797501, 92797816, 92799405, 92798968, 92805443, 92800263, 92885648, 92799516, 92803590, 92799029, 92802282, 92800352, 92804945, 92826085, 92800306, 92804932, 92801700, 92803543, 92799506, 92808871, 92806614]}, "name": "A. Buying Torches", "statement": "You are playing a very popular game called Cubecraft. Initially, you\r\nhave one stick and want to craft k torches. One torch can be crafted\r\nusing .Hopefully, you\u2019ve met a very handsome wandering trader who has\r\ntwo trade offers: exchange 1 stick for x sticks (you lose 1 stick and\r\ngain x sticks). exchange y sticks for 1 coal (you lose y sticks and gain\r\n1 coal). During one trade, you can use of these two trade offers. You\r\ncan use each trade offer any number of times you want to, in any\r\norder.Your task is to find the minimum number of trades you need to\r\ncraft at least k torches. The answer always exists under the given\r\nconstraints.You have to answer t independent test cases.\r\n", "solutions": ["#ifdef xay5421\n#define D(...) fprintf(stderr,__VA_ARGS__)\n#else\n#define D(...) ((void)0)\n//#define NDEBUG\n#endif\n#include<bits/stdc++.h>\n#define int long long\n#define LL long long\n#define MP make_pair\n#define PB push_back\n#define fi first\n#define se second\n#define ALL(x) (x).begin(),(x).end()\n#define SZ(x) ((int)(x).size())\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\n#define per(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\ntypedef pair<int,int>PII;typedef vector<int>VI;typedef vector<PII>VII;\ntemplate<typename T>void rd(T&x){int f=0,c;while(!isdigit(c=getchar()))f^=!(c^45);x=(c&15);while(isdigit(c=getchar()))x=x*10+(c&15);if(f)x=-x;}\ntemplate<typename T>void pt(T x,int c=-1){if(x<0)putchar('-'),x=-x;if(x>9)pt(x/10);putchar(x%10+48);if(c!=-1)putchar(c);}\nint T;\nsigned main(){\n\trd(T);\n\twhile(T--){\n\t\tint x,y,k;rd(x),rd(y),rd(k);\n\t\t--x;\n\t\tpt(max(0LL,(k+y*k+x-1-1)/x+k),'\\n');\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "1000", "interactive": false}