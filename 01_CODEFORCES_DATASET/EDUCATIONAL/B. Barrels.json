{
    "link": "https://codeforces.com//contest/1430/problem/B",
    "problemId": "755154",
    "problem_idx": "B",
    "shortId": "1430B",
    "contest_number": "1430",
    "problem_submissions": {
        "G": [
            95237045,
            95235075,
            95240737,
            97566243,
            95239114,
            95228241,
            95221926,
            95230929,
            95239632,
            95250364,
            95455283,
            95252471,
            95256236,
            95242546,
            95303013,
            98871928
        ],
        "F": [
            95220487,
            95228332,
            95223150,
            97566130,
            95216783,
            95250832,
            95242433,
            95256538,
            95247019,
            95248722,
            95240985,
            95228704,
            95232008,
            95232802,
            95230075,
            95232563,
            95238448,
            95465311,
            95234311,
            95232005
        ],
        "E": [
            95211511,
            95210553,
            95208920,
            97565966,
            95208366,
            95208320,
            95213012,
            95219246,
            95219352,
            95220042,
            95209230,
            95216025,
            95206937,
            95209011,
            95216031,
            95214609,
            95202690,
            95215844,
            95218385
        ],
        "D": [
            95208553,
            95206064,
            95205170,
            97565921,
            95205237,
            95202655,
            95224583,
            95213640,
            95216224,
            95211198,
            95204449,
            95212306,
            95215958,
            95200930,
            95207117,
            95208215,
            95216892,
            95212972,
            95215071
        ],
        "C": [
            95197013,
            95198163,
            95199698,
            97565869,
            95200959,
            95198168,
            95198409,
            95198669,
            95209890,
            95204911,
            95197315,
            95202373,
            95200953,
            95202547,
            95204796,
            95194169,
            95198706,
            95205881,
            95210665
        ],
        "B": [
            95195119,
            95195489,
            95196116,
            97565818,
            95196356,
            95194999,
            95195326,
            95195742,
            95196929,
            95195601,
            95195544,
            95196763,
            95197327,
            95194053,
            95194687,
            95199867,
            95195154,
            95196136,
            95196683
        ],
        "A": [
            95193928,
            95194100,
            95194842,
            97565779,
            95194326,
            95193977,
            95194039,
            95194134,
            95194416,
            95194244,
            95194071,
            95194430,
            95194685,
            95193941,
            95193947,
            95197083,
            95194045,
            95194254,
            95194714
        ]
    },
    "name": "B. Barrels",
    "statement": "You have n barrels lined up in a row, numbered from left to right from\r\none. Initially, the i-th barrel contains a_i liters of water.You can\r\npour water from one barrel to another. In one act of pouring, you can\r\nchoose two different barrels x and y (the x-th barrel shouldn’t be\r\nempty) and pour any possible amount of water from barrel x to barrel y\r\n(possibly, all water). You may assume that barrels have infinite\r\ncapacity, so you can pour any amount of water in each of them. Calculate\r\nthe maximum possible difference between the maximum and the minimum\r\namount of water in the barrels, if you can pour water k times.Some\r\nexamples: if you have four barrels, each containing 5 liters of water,\r\nand k = 1, you may pour 5 liters from the second barrel into the fourth,\r\nso the amounts of water in the barrels are [5, 0, 5, 10], and the\r\ndifference between the maximum and the minimum is 10; if all barrels are\r\nempty, you can’t make any operation, so the difference between the\r\nmaximum and the minimum amount is still 0.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned ll\n#define uint unsigned\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define IT iterator\n#define PB push_back\n#define fi first\n#define se second\n#define For(i,j,k) for (int i=(int)(j);i<=(int)(k);i++)\n#define Rep(i,j,k) for (int i=(int)(j);i>=(int)(k);i--)\n#define CLR(a,v) memset(a,v,sizeof(a));\n#define CPY(a,b) memcpy(a,b,sizeof(a));\n#define debug puts(\"wzpakking\")\n#define y1 ysghysgsygsh\nusing namespace std;\nint n,k,a[200005];\nvoid solve(){\n\tscanf(\"%d%d\",&n,&k);\n\tFor(i,1,n) scanf(\"%d\",&a[i]);\n\tsort(a+1,a+n+1);\n\tll s1=0;\n\tFor(i,n-k,n) s1+=a[i];\n\tcout<<s1<<endl;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile (T--) solve();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Barrels.json",
    "editorial_link": "https://codeforces.com//blog/entry/83614",
    "editorial": "A greedy strategy always works: take largest barrels, choose one barrel\r\namong them and pour all water from those barrels to the chosen barrel.\r\nThat way, we make the minimum amount equal to (itâs quite obvious that\r\nwe canât do anything better here), and the maximum amount as large as\r\npossible, so the difference between them will be as large as possible.\r\n",
    "hint": []
}