{"link": "https://codeforces.com//contest/1612/problem/F", "problemId": "1198240", "problem_idx": "F", "shortId": "1612F", "contest_number": "1612", "problem_submissions": {"F": [136454446, 136443408, 136448569, 136447134, 136456076, 136455474, 136456753, 136447271, 136463331, 136457585, 136451795, 136455146, 136466801, 136458322, 136466012, 136470454, 136470912, 136437898, 136449817], "G": [136441097, 136445642, 136443193, 136435909, 136444442, 136447874, 136444457, 136453773, 136451816, 136466000, 136464894, 136468423, 136436868, 136467114, 136451881, 136455169, 136439762, 136431665, 136483294, 136433577, 136448604], "E": [136432700, 136437971, 136478291, 136437457, 136451828, 136439707, 136440209, 136458464, 136439310, 136440686, 136441493, 136444282, 136445062, 136445391, 136571543, 136452932, 136447870, 136444392, 136446716, 136451569, 136449325, 136458083, 136453137, 136438833], "D": [136427875, 136432221, 136431776, 136429717, 136432159, 136428903, 136429714, 136434455, 136434329, 136431021, 136438170, 136439001, 136445408, 136437693, 136436906, 136425598, 136443833, 136454774, 136454860, 136431686], "C": [136427045, 136429953, 136429634, 136424300, 136429072, 136425761, 136426268, 136430944, 136430349, 136427934, 136434022, 136430101, 136430333, 136432880, 136433170, 136439471, 136433291, 136452483, 136456465, 136428370], "B": [136424559, 136426931, 136427614, 136426640, 136425629, 136432355, 136424153, 136427726, 136427375, 136424825, 136429445, 136426911, 136426490, 136429175, 136430275, 136436731, 136428475, 136450629, 136459018, 136425566], "A": [136423641, 136423524, 136423454, 136423614, 136423605, 136434187, 136423437, 136423664, 136423746, 136423549, 136423622, 136423647, 136423440, 136424189, 136425302, 136430159, 136424218, 136448121, 136459267, 136423589]}, "name": "F. Armor and Weapons", "statement": "Monocarp plays a computer game. There are n different sets of armor and\r\nm different weapons in this game. If a character equips the i-th set of\r\narmor and wields the j-th weapon, their power is usually equal to i + j;\r\nbut some combinations of armor and weapons synergize well. Formally,\r\nthere is a list of q ordered pairs, and if the pair (i, j) belongs to\r\nthis list, the power of the character equipped with the i-th set of\r\narmor and wielding the j-th weapon is not i + j, but i + j +\r\n1.Initially, Monocarp\u2019s character has got only the 1-st armor set and\r\nthe 1-st weapon. Monocarp can obtain a new weapon or a new set of armor\r\nin one hour. If he wants to obtain the k-th armor set or the k-th\r\nweapon, he must possess a combination of an armor set and a weapon that\r\ngets his power to k . Of course, after Monocarp obtains a weapon or an\r\narmor set, he can use it to obtain new armor sets or weapons, but he can\r\ngo with any of the older armor sets and/or weapons as well.Monocarp\r\nwants to obtain the n-th armor set the m-th weapon. What is the minimum\r\nnumber of hours he has to spend on it?\r\n", "solutions": ["// xtqqwq\n#include<bits/stdc++.h>\n\n#define pb push_back\n#define fi first\n#define se second\n#define mp make_pair\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef long double ld;\n\ntemplate <typename T> bool chkmin(T &x,T y){return x>y?x=y,1:0;}\ntemplate <typename T> bool chkmax(T &x,T y){return x<y?x=y,1:0;}\n\nint readint(){\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nint n,m,q;\nmap<int,int> a[200005];\nint d[61][200005];\n\nint main(){\n\tn=readint(); m=readint(); q=readint();\n\tint x,y;\n\tfor(int i=1;i<=q;i++){\n\t\tx=readint(); y=readint();\n\t\ta[x][y]=1;\n\t}\n\tmemset(d,-0x3f,sizeof(d));\n\td[0][1]=1;\n\tint ans=1<<30;\n\tfor(int i=0;i<60;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(d[i][j]<0) continue;\n\t\t\tchkmax(d[i+1][j],min(m,d[i][j]+j+(int)a[j].count(d[i][j])));\n\t\t\tchkmax(d[i+1][min(d[i][j]+j+(int)a[j].count(d[i][j]),n)],d[i][j]);\n\t\t}\n\t\tif(d[i+1][n]>=m) return printf(\"%d\\n\",i+1),0;\n\t\tint cnt=i;\n\t\tif(d[i][n]>=0){\n\t\t\tfor(int j=d[i][n];j<m;j+=n+(int)a[n].count(j)) cnt++;\n\t\t\tchkmin(ans,cnt);\n\t\t}\n\t\tfor(int j=n;j>=1;j--){\n\t\t\tif(d[i][j]==m){\n\t\t\t\tcnt=i;\n\t\t\t\tfor(int k=j;k<n;k+=m+(int)a[k].count(m)) cnt++;\n\t\t\t\tchkmin(ans,cnt);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["brute force", "dp", "greedy", "shortest paths"], "dificulty": "2800", "interactive": false}