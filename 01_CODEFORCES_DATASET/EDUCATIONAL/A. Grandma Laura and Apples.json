{
    "link": "https://codeforces.com//contest/632/problem/A",
    "problemId": "50143",
    "problem_idx": "A",
    "shortId": "632A",
    "contest_number": "632",
    "problem_submissions": {
        "F": [
            16449954,
            16449774,
            16448025,
            16447543,
            16474130,
            16447469,
            16465805,
            16465734,
            16449676,
            16449356,
            16449961,
            16450068,
            16557410,
            16449769,
            16450214,
            16449702,
            16464012
        ],
        "E": [
            16447028,
            16449753,
            16445979,
            16453840,
            16453803,
            16448350,
            16447568,
            16449040,
            16605043,
            16448762,
            16447224,
            16448913,
            16449761,
            128072075,
            44908882,
            16457507
        ],
        "D": [
            16446074,
            16445153,
            16444353,
            16454357,
            16446366,
            16445038,
            16445634,
            16444742,
            16453325,
            16445984,
            16447854,
            16446133,
            16445283,
            16446954,
            16447982,
            16445318,
            16444664,
            16445724
        ],
        "C": [
            16444421,
            16444120,
            16443606,
            16443645,
            16445009,
            16444221,
            16444738,
            16443779,
            16445075,
            16444107,
            16445524,
            16449207,
            16450843,
            16448580,
            16448209,
            16447449,
            16444580,
            16444579,
            16443960,
            16444153,
            24720150,
            24720135
        ],
        "B": [
            16443783,
            16443777,
            16443815,
            16443887,
            16444524,
            16444113,
            16444187,
            16451169,
            16443637,
            16443942,
            16443903,
            16444676,
            16444341,
            16444136,
            16444765,
            16447115,
            16444024,
            16443821,
            16443819
        ],
        "A": [
            16443584,
            16443594,
            16443558,
            16443577,
            16443765,
            16443750,
            16443746,
            16445513,
            16443626,
            16443702,
            16443955,
            16443808,
            16443676,
            16444067,
            16446687,
            16443663,
            16443559,
            16443628
        ]
    },
    "name": "A. Grandma Laura and Apples",
    "statement": "Grandma Laura came to the market to sell some apples. During the day she\r\nsold all the apples she had. But grandma is old, so she forgot how many\r\napples she had brought to the market.She precisely remembers she had\r\nbuyers and each of them bought exactly half of the apples she had at the\r\nmoment of the purchase and also she gave a half of an apple to some of\r\nthem as a gift (if the number of apples at the moment of purchase was\r\nodd), until she sold all the apples she had.So each buyer took some\r\nintegral positive number of apples, but maybe he didnâ€™t pay for a half\r\nof an apple (if the number of apples at the moment of the purchase was\r\nodd).For each buyer grandma remembers if she gave a half of an apple as\r\na gift or not. The cost of an apple is (the number is even).Print the\r\ntotal money grandma should have at the end of the day to check if some\r\nbuyers cheated her.\r\n",
    "solutions": [
        "#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n\ntypedef long long ll;\ntypedef long double ld;\n\nusing namespace std;\n\nint a[10000];\n\nint main() {\n\tint n, p;\n\tcin >> n >> p;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tif ((int)s.size() > 5)\n\t\t\ta[i] = 1;\n\t\telse\n\t\t\ta[i] = 0;\n\t}\n\tll now = 0;\n\tll nn = 0;\n\tfor (int i = n - 1; i >= 0; --i) {\n\t\tif (a[i] == 1) {\n\t\t\tnn += now * p;\n\t\t\tnn += p / 2;\n\t\t\tnow = now * 2 + 1;\n\t\t}\n\t\telse {\n\t\t\tnn += now * p;\n\t\t\tnow *= 2;\n\t\t}\n\t}\n\tcout << nn << \"\\n\";\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Grandma Laura and Apples.json",
    "editorial_link": "https://codeforces.com//blog/entry/43493",
    "editorial": "The problem was suggested by unprost. Consider the process from the end.\r\nThe last buyer will always buy a half of an apple and get a half for\r\nfree (so the last string always is halfplus). After that each buyer\r\nincreases the number of apples twice and also maybe by one. So we simply\r\nhave the binary presentation of the number of apples from the end. To\r\ncalculate the answer we should simply restore that value from the end\r\nand also calculate the total money grandma should have. ++ solution by\r\nme. ++ solution by unprost. Complexity: .\r\n"
}