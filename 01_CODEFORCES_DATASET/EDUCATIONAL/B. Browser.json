{
    "link": "https://codeforces.com//contest/915/problem/B",
    "problemId": "146469",
    "problem_idx": "B",
    "shortId": "915B",
    "contest_number": "915",
    "problem_submissions": {
        "G": [
            34149372,
            34145802,
            34144917,
            34149940,
            34145497,
            34145091,
            34146841,
            34133578,
            34140368,
            34156614,
            34136642,
            34149433,
            34141049,
            34151857,
            34143141,
            34142291,
            34153795,
            34152031,
            34149642
        ],
        "F": [
            34141740,
            34141911,
            34142659,
            34144461,
            34139648,
            34150037,
            34135451,
            34135325,
            34136765,
            34139507,
            34185912,
            34185895,
            34185884,
            34144212,
            34147801,
            34138374,
            34149691,
            34145676,
            34149957
        ],
        "E": [
            34139509,
            34136671,
            34139993,
            34142857,
            34141594,
            34143243,
            34138759,
            34150868,
            34131224,
            34145365,
            34144825,
            34146415,
            34139658,
            34148670,
            34147938,
            34144847,
            34142409,
            34147934,
            34152612
        ],
        "D": [
            34136912,
            34138946,
            34136834,
            34138837,
            34134917,
            34139148,
            34142081,
            34147574,
            34141584,
            34140548,
            34136477,
            34136703,
            34136486,
            34145522,
            34138909,
            34138016,
            34141644,
            34141385,
            34135263
        ],
        "C": [
            34133179,
            34132160,
            34132616,
            34134296,
            34131528,
            34132656,
            34145969,
            34144943,
            34139362,
            34131971,
            34135532,
            34132111,
            34166504,
            34134375,
            34134967,
            34134748,
            34132949,
            34134607,
            34133338
        ],
        "B": [
            34129725,
            34129567,
            34129784,
            34132321,
            34130243,
            34147501,
            34142325,
            34138326,
            34132523,
            34157084,
            34130697,
            34130455,
            34131022,
            34130794,
            34158518,
            34130482
        ],
        "A": [
            34127694,
            34127702,
            34127886,
            34130517,
            34127730,
            34147894,
            34141073,
            34137409,
            34128096,
            34127668,
            34127948,
            34127873,
            34127723,
            34128273,
            34128083,
            34127880
        ]
    },
    "name": "B. Browser",
    "statement": "Luba is surfing the Internet. She currently has opened tabs in her\r\nbrowser, indexed from to from left to right. The mouse cursor is\r\ncurrently located at the -th tab. Luba needs to use the tabs with\r\nindices from to (inclusive) for her studies, and she wants to close all\r\nthe tabs that don\u2019t belong to this segment as fast as possible.Each\r\nsecond Luba can either try moving the cursor to the left or to the right\r\n(if the cursor is currently at the tab , then she can move it to the tab\r\nor to the tab ) or try closing all the tabs to the left or to the right\r\nof the cursor (if the cursor is currently at the tab , she can close all\r\nthe tabs with indices from segment or from segment ). In the\r\naforementioned expressions and denote the minimum and maximum index of\r\nan unclosed tab, respectively. For example, if there were tabs initially\r\nand tabs , and are closed, then , .What is the minimum number of seconds\r\nLuba has to spend in order to leave opened?\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_DEPRECATE\n#pragma comment(linker, \"/STACK:167772160000\")\n#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <stdio.h>\n#include <cstdlib>\n#include <stdlib.h>\n#include <string>\n#include <list>\n#include <fstream>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#include <vector>\n#include <iomanip>\n#include <queue>\n#include <deque>\n#include <set>\n#include <stack>\n#include <sstream>\n#include <assert.h>\n#include <functional>\n#include <climits>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\n//typedef uint64_t ull;\n//typedef std::pair<long double,long double> pdd;\n#define for8(i) for( i = 1; i<=8; i++)\n#define fori(N)          for(int i = 0; i<(N); i++)\n#define forj(N)         for(int j = 0; j<(N); j++)\n#define fork(N)         for(int k = 0; k<(N); k++)\n#define forl(N)         for(int l = 0; l<(N); l++)\n#define ford(N)         for(int d = 0; d<(N); d++)\n#define fori1(N)          for(int i = 1; i<=(N); i++)\n#define forj1(N)         for(int j = 1; j<=(N); j++)\n#define fork1(N)         for(int k = 1; k<=(N); k++)\n#define ford1(N)         for(int d = 1; d<=(N); d++)\n#define PI (2*asin(1))\n#define read(n) scanf(\"%d\", &n);\n#define read2(n, m) scanf(\"%d%d\", &n, &m);\n#define readll(n) scanf(\"%I64d\", &n);\n#define mp make_pair\n\n\nint main()\n{\n\tios::sync_with_stdio(false); cin.tie(0);\n#if defined(_DEBUG) || defined(_RELEASE)\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\tint  n, pos, l, r;\n\tcin >> n >> pos >> l >> r;\n\tif (l == 1 && r == n) {\n\t\tcout << 0;\n\t\treturn 0;\n\t}\n\tif (l == 1 ) {\n\t\tcout << 1+abs(pos-r);\n\t\treturn 0;\n\t}\n\tif (r == n) {\n\t\tcout << 1 + abs(pos - l);\n\t\treturn 0;\n\t}\n\tcout << min(2 + abs(pos - l) + abs(r - l), 2 + abs(pos - r) + abs(r - l));\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Browser.json",
    "editorial_link": "https://codeforces.com//blog/entry/57123",
    "editorial": "If and then the answer is . If and or and then answer is or\r\nrespectively. And in the other case (when and ) the answer is .\r\n"
}