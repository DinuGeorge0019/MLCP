{"link": "https://codeforces.com//contest/1093/problem/F", "problemId": "270227", "problem_idx": "F", "shortId": "1093F", "contest_number": "1093", "problem_submissions": {"F": [47064317, 47066369, 47072013, 47063078, 47070194, 47066599, 47069818, 47071658, 47069736, 47073345, 47066962, 47067247, 47069530, 47073606, 47073395, 47061796, 47063002, 47067085, 47069647], "E": [47059940, 47175053, 47174990, 47174965, 47060977, 47054377, 47057431, 47053669, 47071310, 47064501, 47060021, 47063571, 47051018, 47060722, 47054485, 47099037, 47099010, 47054662, 47065797, 47074158, 47051089, 47074689, 47067318, 47063903, 47063526, 47063507, 47058046, 47058483], "G": [47051449, 47054318, 47060619, 47069286, 47064176, 47054294, 47058010, 47064582, 47059658, 47045741, 47069865, 47071490, 47044907, 47068431, 47054907, 47076907, 47070943, 47045135, 47052551, 47065756, 47061805, 47064972], "D": [47046394, 47048590, 47050157, 47049421, 47048833, 47047771, 47051232, 47049608, 47047579, 47056236, 47052390, 47047717, 47060889, 47049097, 47062998, 47068801, 47069194, 47070905, 47050207, 47053679], "C": [47043859, 47045338, 47046257, 47046095, 47044608, 47045282, 47047834, 47047265, 47045573, 47053477, 47049038, 47043947, 47058752, 47044937, 47064718, 47070147, 233878752, 233878357, 233877672, 233874035, 47071603, 47073360, 47045788, 47044965], "B": [47041242, 47042516, 47041777, 47042122, 47042500, 47043090, 47044535, 47044930, 47041021, 47051714, 47043546, 47041074, 47056563, 47042532, 47063756, 47070397, 47070118, 47071889, 47042554, 47041254], "A": [47040802, 47041248, 47040853, 47040900, 47040739, 47042123, 47040939, 47043340, 47040729, 47052191, 47041112, 47040744, 47075234, 47055833, 47041119, 47063989, 47070741, 47069623, 47071501, 47041275, 47040765]}, "name": "F. Vasya and Array", "statement": "Vasya has got an array consisting of n integers, and two integers k and\r\nlen in addition. All numbers in the array are either between 1 and k\r\n(inclusive), or equal to -1. The array is good if there is no segment of\r\nlen consecutive numbers.Vasya will replace each -1 with some number from\r\n1 to k (inclusive) in such a way that the resulting array is good. Tell\r\nhim the number of ways to do this replacement. Since the answer may be\r\nlarge, print it modulo 998244353.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1e5 + 5;\nconst int maxk = 100 + 5;\nconst int mod = 998244353;\nint a[maxn], to[maxk][maxn];\nint dp[maxk][maxn], s[maxk][maxn], offset[maxk];\n\nint main() {\n    int n, k, l; scanf(\"%d%d%d\", &n, &k, &l);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n    if (l == 1) {\n        puts(\"0\");\n        return 0;\n    }\n    --l;\n    for (int i = 1; i <= k; ++i) {\n        int last = n;\n        for (int j = n; j >= 1; --j) {\n            to[i][j] = last;\n            if (a[j] != -1 && a[j] != i) last = j - 1;\n        } \n    }\n    dp[0][0] = 1;\n    for (int i = 0; i <= n; ++i) {\n        // for (int j = 0; j <= k; ++j) printf(\"s[%d][%d] = %d\\n\", j, i, s[j][i]);\n        for (int j = 0; j <= k; ++j) (offset[j] += s[j][i]) %= mod;\n        // for (int j = 0; j <= k; ++j) printf(\"offset[%d] = %d\\n\", j, offset[j]);\n        for (int j = 0; j <= k; ++j) (dp[j][i] += offset[j]) %= mod;\n        if (i == n) break;\n        int sum = 0;\n        for (int j = 0; j <= k; ++j) (sum += dp[j][i]) %= mod;\n        for (int j = 1; j <= k; ++j) {\n            // printf(\"dp[%d][%d] = %d\\n\", j, i, dp[j][i]);\n            int way = (sum + mod - dp[j][i]) % mod;\n            if (a[i + 1] != -1 && a[i + 1] != j) continue;\n            int g = min(to[j][i + 1], i + 1 + l - 1);\n            // printf(\"i = %d j = %d way = %d to = %d\\n\", i, j, way, g);\n            (s[j][i + 1] += way) %= mod;\n            (s[j][g + 1] += mod - way) %= mod;\n        }\n    }\n    int ans = 0;\n    for (int i = 1; i <= k; ++i) (ans += dp[i][n]) %= mod;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2400", "interactive": false}