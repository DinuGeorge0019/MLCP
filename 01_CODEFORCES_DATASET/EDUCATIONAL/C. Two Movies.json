{
    "link": "https://codeforces.com//contest/1989/problem/C",
    "problemId": "2721696",
    "problem_idx": "C",
    "shortId": "1989C",
    "contest_number": "1989",
    "problem_submissions": {
        "F": [
            267852420,
            267715974,
            267712917,
            267719491,
            267734751,
            267735803,
            267741899,
            267747574,
            267768221,
            267767174,
            267766869,
            267748546,
            267750041,
            267754842,
            267760865,
            267768505,
            267763937,
            267766037,
            267765066,
            267764999,
            267764810
        ],
        "E": [
            267696430,
            267693533,
            267711891,
            267704153,
            267703845,
            267698823,
            267707139,
            267719026,
            267719849,
            267686019,
            267704171,
            267710707,
            267716623,
            267703403,
            267709172,
            267705649,
            267704995,
            267702509,
            267709118
        ],
        "D": [
            267685825,
            267682182,
            267696815,
            267692972,
            267693652,
            267703361,
            267692957,
            267722874,
            267708867,
            267680276,
            267687696,
            267691183,
            267686958,
            267692334,
            267690676,
            267692758,
            267695564,
            267692452,
            267700297
        ],
        "C": [
            267675529,
            267714300,
            267687642,
            267680264,
            267681105,
            267674205,
            267682216,
            267688126,
            267695068,
            267674713,
            267675536,
            267677226,
            267678584,
            267680860,
            267675171,
            267685177,
            267682170,
            267678912,
            267679841
        ],
        "B": [
            267671283,
            267671757,
            267674622,
            267674567,
            267676014,
            267669993,
            267681783,
            267674853,
            267678346,
            267669871,
            267670383,
            267672053,
            267670683,
            267671626,
            267671697,
            267673455,
            267674468,
            267674321,
            267671951
        ],
        "A": [
            267669443,
            267669849,
            267669717,
            267672060,
            267669107,
            267669168,
            267670166,
            267670012,
            267669413,
            267669118,
            267669169,
            267669489,
            267669101,
            267669245,
            267670092,
            267671181,
            267671315,
            267669875,
            267669241
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130937",
    "editorial": "Let's notice an important fact: if ai?bi\n, it is always optimal to choose a review for the movie with the better rating: taking the worse option doesn't increase the rating of any movie.\n\nUsing this fact, let's calculate several values:\n\nx\n  the rating of the first movie among people who liked the first movie more than the second one (ai>bi\n);\ny\n  the rating of the second movie among people who liked the second movie more than the first one (bi>ai\n);\nneg\n  the number of people who didn't like either movie;\npos\n  the number of people who liked both movies.\nNow we have to distribute the reviews of the viewers having ai=bi\n. To do this, we can iterate the contribution of such viewers to the rating of the first movie (denoted as i\n) from ?neg\n to pos\n. Then, the final rating of the first movie is x+i\n, and the final rating of the second movie is y+(pos?neg?i)\n. Among all the options, choose the one where the minimum of these two values is maximized.\n",
    "name": "C. Two Movies",
    "statement": "A movie company has released 2 movies. These 2 movies were watched by n\r\npeople. For each person, we know their attitude towards the first movie\r\n(liked it, neutral, or disliked it) and towards the second movie.If a\r\nperson is asked to leave a review for the movie, then: if that person\r\nliked the movie, they will leave a positive review, and the movie’s\r\nrating will increase by 1; if that person disliked the movie, they will\r\nleave a negative review, and the movie’s rating will decrease by 1;\r\notherwise, they will leave a neutral review, and the movie’s rating will\r\nnot change. Every person will review exactly one movie and for every\r\nperson, you can choose which movie they will review.The company’s rating\r\nis the minimum of the ratings of the two movies. Your task is to\r\ncalculate the maximum possible rating of the company.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>using namespace std; #define all(a) a.begin(),a.end()#define pb push_back#define sz(a) ((int)a.size()) using ll=long long;using u32=unsigned int;using u64=unsigned long long;using i128=__int128;using u128=unsigned __int128;using f128=__float128; using pii=pair<int,int>;using pll=pair<ll,ll>; template<typename T> using vc=vector<T>;template<typename T> using vvc=vc<vc<T>>;template<typename T> using vvvc=vc<vvc<T>>; using vi=vc<int>;using vll=vc<ll>;using vvi=vc<vi>;using vvll=vc<vll>; #define vv(type,name,n,...) \\    vector<vector<type>> name(n,vector<type>(__VA_ARGS__))#define vvv(type,name,n,m,...) \\    vector<vector<vector<type>>> name(n,vector<vector<type>>(m,vector<type>(__VA_ARGS__))) template<typename T> using min_heap=priority_queue<T,vector<T>,greater<T>>;template<typename T> using max_heap=priority_queue<T>; // https://trap.jp/post/1224/#define rep1(n) for(ll i=0; i<(ll)(n); ++i)#define rep2(i,n) for(ll i=0; i<(ll)(n); ++i)#define rep3(i,a,b) for(ll i=(ll)(a); i<(ll)(b); ++i)#define rep4(i,a,b,c) for(ll i=(ll)(a); i<(ll)(b); i+=(c))#define cut4(a,b,c,d,e,...) e#define rep(...) cut4(__VA_ARGS__,rep4,rep3,rep2,rep1)(__VA_ARGS__)#define per1(n) for(ll i=((ll)n)-1; i>=0; --i)#define per2(i,n) for(ll i=((ll)n)-1; i>=0; --i)#define per3(i,a,b) for(ll i=((ll)a)-1; i>=(ll)(b); --i)#define per4(i,a,b,c) for(ll i=((ll)a)-1; i>=(ll)(b); i-=(c))#define per(...) cut4(__VA_ARGS__,per4,per3,per2,per1)(__VA_ARGS__)#define rep_subset(i,s) for(ll i=(s); i>=0; i=(i==0?-1:(i-1)&(s))) template<typename T, typename S> constexpr T ifloor(const T a, const S b){return a/b-(a%b&&(a^b)<0);}template<typename T, typename S> constexpr T iceil(const T a, const S b){return ifloor(a+b-1,b);} template<typename T>void sort_unique(vector<T> &vec){    sort(vec.begin(),vec.end());    vec.resize(unique(vec.begin(),vec.end())-vec.begin());} template<typename T, typename S> constexpr bool chmin(T &a, const S b){if(a>b) return a=b,true; return false;}template<typename T, typename S> constexpr bool chmax(T &a, const S b){if(a<b) return a=b,true; return false;} template<typename T, typename S> istream& operator >> (istream& i, pair<T,S> &p){return i >> p.first >> p.second;}template<typename T, typename S> ostream& operator << (ostream& o, const pair<T,S> &p){return o << p.first << ' ' << p.second;} #ifdef i_am_noob#define bug(...) cerr << \"#\" << __LINE__ << ' ' << #__VA_ARGS__ << \"- \", _do(__VA_ARGS__)template<typename T> void _do(vector<T> x){for(auto i: x) cerr << i << ' ';cerr << \"\\n\";}template<typename T> void _do(set<T> x){for(auto i: x) cerr << i << ' ';cerr << \"\\n\";}template<typename T> void _do(unordered_set<T> x){for(auto i: x) cerr << i << ' ';cerr << \"\\n\";}template<typename T> void _do(T && x) {cerr << x << endl;}template<typename T, typename ...S> void _do(T && x, S&&...y) {cerr << x << \", \"; _do(y...);}#else#define bug(...) 777771449#endif template<typename T> void print(vector<T> x){for(auto i: x) cout << i << ' ';cout << \"\\n\";}template<typename T> void print(set<T> x){for(auto i: x) cout << i << ' ';cout << \"\\n\";}template<typename T> void print(unordered_set<T> x){for(auto i: x) cout << i << ' ';cout << \"\\n\";}template<typename T> void print(T && x) {cout << x << \"\\n\";}template<typename T, typename... S> void print(T && x, S&&... y) {cout << x << ' ';print(y...);} template<typename T> istream& operator >> (istream& i, vector<T> &vec){for(auto &x: vec) i >> x; return i;} vvi read_graph(int n, int m, int base=1){    vvi adj(n);    for(int i=0,u,v; i<m; ++i){        cin >> u >> v,u-=base,v-=base;        adj[u].pb(v),adj[v].pb(u);    }    return adj;} vvi read_tree(int n, int base=1){return read_graph(n,n-1,base);} template<typename T, typename S> pair<T,S> operator + (const pair<T,S> &a, const pair<T,S> &b){return {a.first+b.first,a.second+b.second};} template<typename T> constexpr T inf=0;template<> constexpr int inf<int> = 0x3f3f3f3f;template<> constexpr ll inf<ll> = 0x3f3f3f3f3f3f3f3f; template<typename T> vector<T> operator += (vector<T> &a, int val){for(auto &i: a) i+=val; return a;} template<typename T> T isqrt(const T &x){T y=sqrt(x+2); while(y*y>x) y--; return y;} #define ykh mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()) //#include<atcoder/all>//using namespace atcoder; //using mint=modint998244353;//using mint=modint1000000007; void ahcorz(){    int n; cin >> n;    vi a(n),b(n); cin >> a >> b;    int x=0,y=0;    vi f(n);    rep(n){        if(a[i]>=0&&b[i]<=0){            x+=a[i];            f[i]=1;        }        else if(a[i]<=0&&b[i]>=0){            y+=b[i];            f[i]=1;        }    }    rep(n) if(!f[i]){        if(x>y){            if(a[i]>0) y+=b[i];            else x+=a[i];        }        else{            if(a[i]>0) x+=a[i];            else y+=b[i];        }    }    print(min(x,y));} signed main(){    ios_base::sync_with_stdio(0),cin.tie(0);    cout << fixed << setprecision(20);    int t=1;    cin >> t;    while(t--) ahcorz();}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\C. Two Movies.json",
    "hint": []
}