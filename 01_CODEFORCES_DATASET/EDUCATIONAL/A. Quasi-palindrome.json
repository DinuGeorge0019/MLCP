{
    "link": "https://codeforces.com//contest/863/problem/A",
    "problemId": "123491",
    "problem_idx": "A",
    "shortId": "863A",
    "contest_number": "863",
    "problem_submissions": {
        "F": [
            30585747,
            30587406,
            30587581,
            30586987,
            30589318,
            30588386,
            30614835,
            30589226,
            30587748,
            30588069,
            30589138,
            30588637,
            30589602,
            30588953,
            30587113,
            30590006,
            30591128,
            30589525,
            30591328
        ],
        "E": [
            30584826,
            30584892,
            30586722,
            30586370,
            30585856,
            30586447,
            30586390,
            30586258,
            30587809,
            30586316,
            30587721,
            30587855,
            30587775,
            30588242,
            30587782,
            30587403,
            30589806
        ],
        "D": [
            30584161,
            30582889,
            30583896,
            30584983,
            30584514,
            30599512,
            30585431,
            30584907,
            30584911,
            30586408,
            30585496,
            30586610,
            30586374,
            30584958,
            30587183,
            30584596,
            30585231,
            30587520
        ],
        "C": [
            30583486,
            30584324,
            30585366,
            30584169,
            30583738,
            30584504,
            30584405,
            30584037,
            30585386,
            30584778,
            30585657,
            30585045,
            30584141,
            30586261,
            30586674,
            30591722,
            30586154
        ],
        "B": [
            30581979,
            30583463,
            30582674,
            30582188,
            30582199,
            30582158,
            30582064,
            30582238,
            30582609,
            30582456,
            30582868,
            30582784,
            30582689,
            30582852,
            30583217,
            30606326,
            30582212,
            30582335
        ],
        "A": [
            30581619,
            30581704,
            30581695,
            30581653,
            30581650,
            30786677,
            30581665,
            30581657,
            30581629,
            30581763,
            30581628,
            30581791,
            30581663,
            30581713,
            30581800,
            30581819,
            30581630,
            30581694
        ],
        "G": [
            57430904,
            30596090
        ]
    },
    "name": "A. Quasi-palindrome",
    "statement": "Let number be such number that adding some leading zeros (possible none)\r\nto it produces a palindromic string. String is called a palindrome, if\r\nit reads the same from left to right and from right to left.For example,\r\nnumbers and are , they can be transformed to strings \"\" and \"\",\r\nrespectively, which are palindromes.You are given some integer number .\r\nCheck if itâ€™s a number.\r\n",
    "solutions": [
        "#include \"bits/stdc++.h\"\nusing namespace std;\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))\n#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))\nstatic const int INF = 0x3f3f3f3f; static const long long INFL = 0x3f3f3f3f3f3f3f3fLL;\ntypedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii; typedef long long ll;\ntemplate<typename T, typename U> static void amin(T &x, U y) { if (y < x) x = y; }\ntemplate<typename T, typename U> static void amax(T &x, U y) { if (x < y) x = y; }\n\nint main() {\n\tstring S;\n\twhile (cin >> S) {\n\t\tbool ans = false;\n\t\trep(i, 10) {\n\t\t\tans |= S == string(S.rbegin(), S.rend());\n\t\t\tS = '0' + S;\n\t\t}\n\t\tputs(ans ? \"Yes\" : \"No\");\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Quasi-palindrome.json",
    "editorial_link": "https://codeforces.com//blog/entry/54708",
    "editorial": "You can check if the given is by removing all the trailing zeros and\r\nchecking if resulting string is a palindrome.\r\n",
    "hint": []
}