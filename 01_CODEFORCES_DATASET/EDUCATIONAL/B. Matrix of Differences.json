{"link": "https://codeforces.com//contest/1783/problem/B", "problemId": "1728811", "problem_idx": "B", "shortId": "1783B", "contest_number": "1783", "problem_submissions": {"G": [188483896, 188470188, 188490778, 188491718, 188493113, 188527457, 188526933, 188518837, 188481313], "F": [188457991, 188459741, 188468922, 188473664, 188468205, 188471208, 188461540, 188473366, 188477664, 188473046, 188489629, 188473873, 188484171, 188480546, 188485471, 188484623, 188483301, 188466307, 188469985, 188485060], "E": [188452364, 188453897, 188463917, 188466624, 188459377, 188459968, 188455446, 188466225, 188471180, 188466814, 188462880, 188467584, 188467423, 188462700, 188463311, 188503353, 188474118, 188475092, 188461623, 188502886, 188463602, 188475668], "D": [188448529, 188449082, 188455318, 188454045, 188455437, 188454808, 188471673, 188459878, 188455664, 188459984, 188457996, 188455008, 188460084, 188450967, 188459128, 188456144, 188459103, 188459237, 188463185], "C": [188443311, 188439911, 188447553, 188445874, 188449689, 188446252, 188448135, 188452418, 188447924, 188450344, 188449627, 188448578, 188449959, 188467122, 188452277, 188450824, 188449810, 188450396, 188451763, 188456895], "B": [188434637, 188433902, 188440591, 188436845, 188440180, 188437731, 188434593, 188440675, 188439917, 188436694, 188436264, 188437707, 188438645, 188437659, 188440538, 188439980, 188442461, 188440519, 188465336, 188436451], "A": [188432373, 188432255, 188432618, 188432523, 188433063, 188432771, 188432273, 188433871, 188432631, 188433273, 188432881, 188432854, 188433005, 188432822, 188435678, 188432922, 188432552, 188432977, 188432291, 188432577]}, "name": "B. Matrix of Differences", "statement": "For a square matrix of integers of size n\r\ntimes n, let\u2019s define its as follows: for each pair of side-adjacent\r\nelements x and y, write out the number |x-y|, and then find the number\r\nof different numbers among them.For example, for the matrix\r\nbegin{pmatrix} 1 & 3\r\n4 & 2\r\nend{pmatrix} the numbers we consider are |1-3|=2, |1-4|=3, |3-2|=1 and\r\n|4-2|=2; there are 3 different numbers among them (2, 3 and 1), which\r\nmeans that its beauty is equal to 3.You are given an integer n. You have\r\nto find a matrix of size n\r\ntimes n, where each integer from 1 to n^2 occurs exactly once, such that\r\nits is the maximum possible among all such matrices.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n;\n    std::cin >> n;\n    \n    std::vector a(n, std::vector<int>(n));\n    int l = 1, r = n * n;\n    int t = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            a[i][j] = t ? l++ : r--;\n            t ^= 1;\n        }\n        if (i & 1) std::reverse(a[i].begin(), a[i].end());\n    }\n    \n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            std::cout << a[i][j] << \" \\n\"[j == n - 1];\n        }\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "math"], "dificulty": "1100", "interactive": false}