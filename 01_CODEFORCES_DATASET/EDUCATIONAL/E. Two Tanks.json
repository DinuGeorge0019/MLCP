{"link": "https://codeforces.com//contest/1809/problem/E", "problemId": "1839365", "problem_idx": "E", "shortId": "1809E", "contest_number": "1809", "problem_submissions": {"G": [198800857, 198819538, 198819377, 198819202, 198818781, 198818684, 198816759, 198811816, 198806762, 198815231, 198818773, 198822181, 198828608, 198822299, 203672607, 208381746, 198835108, 198831844, 198829525, 198853349, 198853245], "F": [198786104, 198791363, 198796885, 198804709, 198810152, 198814173, 198809216, 198791415, 198800965, 198804541, 198830839, 198809769, 198804908, 198811366, 198815172, 198805151, 198812101, 198817151, 198808903, 198814662], "E": [198775336, 198782430, 198786246, 199182668, 198794243, 198792695, 198792300, 198799038, 198776769, 198784470, 198788708, 198793376, 198789791, 198792668, 198843793, 198805320, 198800053, 198802037, 198804412, 198800677, 198799758], "D": [198768775, 198772012, 198776224, 198777641, 198882283, 198777443, 198779801, 198782367, 198766389, 198769656, 198777387, 198777057, 198779683, 198776616, 198772288, 198785016, 198783361, 198781028, 198791791, 198778758], "C": [198764545, 198765840, 198768929, 198772658, 198770321, 198766724, 198776128, 198761542, 198765111, 198760078, 198766275, 198773341, 198769090, 198764454, 198770468, 198769676, 198767761, 198771860, 198780776], "B": [198760964, 198755413, 198762260, 198758056, 198766256, 198759317, 198761525, 198757070, 198756430, 198755376, 198758155, 198765573, 198760583, 198758103, 198766309, 198762187, 198761139, 198766037, 198760442], "A": [198757842, 198756487, 198756930, 198755206, 198755963, 198755170, 198755335, 198755127, 198755119, 198756462, 198755191, 198755804, 198757456, 198755555, 198757141, 198756133, 198756023, 198760810, 198755407]}, "name": "E. Two Tanks", "statement": "There are two water tanks, the first one fits a liters of water, the\r\nsecond one fits b liters of water. The first tank has c (0\r\nle c\r\nle a) liters of water initially, the second tank has d (0\r\nle d\r\nle b) liters of water initially.You want to perform n operations on\r\nthem. The i-th operation is specified by a single non-zero integer v_i.\r\nIf v_i > 0, then you try to pour v_i liters of water from the first tank\r\ninto the second one. If v_i < 0, you try to pour -v_i liters of water\r\nfrom the second tank to the first one.When you try to pour x liters of\r\nwater from the tank that has y liters currently available to the tank\r\nthat can fit z more liters of water, the operation only moves\r\nmin(x, y, z) liters of water.For all pairs of the initial volumes of\r\nwater (c, d) such that 0\r\nle c\r\nle a and 0\r\nle d\r\nle b, calculate the volume of water in the first tank after all\r\noperations are performed.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int n, a, b;\n    std::cin >> n >> a >> b;\n    \n    std::vector<int> v(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> v[i];\n    }\n    \n    std::vector ans(a + 1, std::vector<int>(b + 1));\n    for (int s = 0; s <= a + b; s++) {\n        int X = std::max(0, s - b);\n        int Y = std::min(a, s);\n        int lo = X, hi = Y;\n        for (int i = n - 1; i >= 0; i--) {\n            lo += v[i];\n            hi += v[i];\n            lo = std::max(lo, X);\n            hi = std::min(hi, Y);\n        }\n        int flo = lo, fhi = hi;\n        for (int i = 0; i < n; i++) {\n            flo = std::max(std::min(flo - v[i], Y), X);\n            fhi = std::max(std::min(fhi - v[i], Y), X);\n        }\n        for (int c = X; c <= Y; c++) {\n            int d = s - c;\n            if (c <= lo) {\n                ans[c][d] = flo;\n            } else if (c >= hi) {\n                ans[c][d] = fhi;\n            } else {\n                ans[c][d] = flo + c - lo;\n            }\n        }\n    }\n    \n    for (int c = 0; c <= a; c++) {\n        for (int d = 0; d <= b; d++) {\n            std::cout << ans[c][d] << \" \\n\"[d == b];\n        }\n    }\n    \n    return 0;\n}"], "input": "", "output": "", "tags": ["binary search", "dp", "implementation", "math"], "dificulty": "2400", "interactive": false}