{
    "link": "https://codeforces.com//contest/1487/problem/A",
    "problemId": "897747",
    "problem_idx": "A",
    "shortId": "1487A",
    "contest_number": "1487",
    "problem_submissions": {
        "G": [
            107454023,
            107463460,
            108576854,
            107460627,
            107450583,
            107451415,
            107430357,
            107444206,
            107450475,
            107450812,
            107922779,
            107446295,
            107455969,
            107448609,
            107460406,
            107464872,
            107461634,
            107460893,
            107461280,
            107537497
        ],
        "F": [
            107439893,
            107447022,
            107443885,
            107469668,
            107469505,
            107444768,
            107452696,
            107498096,
            107498067,
            107494456,
            107622368,
            107452390,
            107465180
        ],
        "E": [
            107424178,
            107424961,
            107432865,
            107429617,
            107432584,
            107450909,
            107426371,
            107427677,
            107427122,
            107429815,
            107619068,
            107618663,
            107432462,
            107430691,
            107435461,
            107433872,
            107429938,
            107432421,
            107433935,
            107430580,
            107430754
        ],
        "D": [
            107421373,
            107421309,
            107427665,
            107423119,
            107428301,
            107453801,
            107421667,
            107423926,
            107424261,
            107424540,
            107428634,
            107426278,
            107425386,
            107425551,
            107425722,
            107429097,
            107425401,
            107424375,
            107424284
        ],
        "C": [
            107420002,
            107418181,
            108576710,
            107420782,
            107436848,
            107423312,
            107458805,
            107419068,
            107421219,
            107421707,
            107421854,
            107426343,
            107423376,
            107421931,
            107421521,
            107423818,
            107421650,
            107421555,
            107422095,
            107421412
        ],
        "B": [
            107416333,
            107413010,
            108576679,
            107416798,
            107424397,
            107419739,
            107460613,
            107414304,
            107416812,
            107415960,
            107414948,
            107416874,
            107418655,
            107417622,
            107416871,
            107416648,
            107416339,
            107414794,
            107418914,
            107416654
        ],
        "A": [
            107410359,
            107409706,
            108576659,
            107410154,
            107409888,
            107412513,
            107461425,
            107409652,
            107410618,
            107410216,
            107410119,
            107412422,
            107409710,
            107411124,
            107409938,
            107409679,
            107409688,
            107409851,
            107409775,
            107410068
        ]
    },
    "name": "A. Arena",
    "statement": "n heroes fight against each other in the Arena. Initially, the i-th hero\r\nhas level a_i.Each minute, a fight between two different heroes occurs.\r\nThese heroes can be chosen arbitrarily ().When two heroes of equal\r\nlevels fight, nobody wins the fight. When two heroes of different levels\r\nfight, the one with the higher level wins, and his level increases by\r\n1.The winner of the tournament is the first hero that wins in at least\r\n100^{500} fights . A is a hero such that there exists a sequence of\r\nfights that this hero becomes the winner of the tournament.Calculate the\r\nnumber of among n heroes.\r\n",
    "solutions": [
        "#pragma GCC optimize (\"O3\")\n#pragma GCC target (\"sse4\")\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> cd;\n \ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\ntypedef pair<ld,ld> pd;\n \ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\ntypedef vector<cd> vcd;\n \n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n#define trav(a,x) for (auto& a : x)\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n \n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n#define ins insert\n\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\n \nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n \nconst int MOD = 1000000007;\nconst char nl = '\\n';\nconst int MX = 100001; //check the limits, dummy\n\nvoid solve() {\n\n    int N; cin >> N;\n    vi A(N); F0R(i, N) cin >> A[i];\n    int cnt[101];\n    F0R(i, 101) cnt[i] = 0;\n    F0R(i, N) cnt[A[i]]++;\n    int lo= 101; F0R(i, N) ckmin(lo, A[i]);\n    cout << N - cnt[lo] << nl;\n\n}\n \nint main() {\n\tios_base::sync_with_stdio(0); cin.tie(0);    \n\n    int T = 1;\n    cin >> T;\n    while(T--) {\n        solve();\n    }\n\n\treturn 0;\n}\n \n// read the question correctly (ll vs int)\n// template by bqi343\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Arena.json",
    "editorial_link": "https://codeforces.com//blog/entry/87873",
    "editorial": "If for some hero , no other hero is weaker than , then the -th hero\r\ncannot win any fights and is not a possible winner. Otherwise, the hero\r\nis a possible winner he may fight the weakest hero times and be declared\r\nthe winner.So the solution to the problem is calculating the number of\r\nminimum elements in the array , since all other elements denote possible\r\nwinners of the tournament.\r\n"
}