{"link": "https://codeforces.com//contest/612/problem/D", "problemId": "43952", "problem_idx": "D", "shortId": "612D", "contest_number": "612", "problem_submissions": {"F": [15015795, 15017252, 15017564, 15018652, 15015599, 15019361, 15017340, 15018654, 15018390], "E": [15010777, 15013400, 15012462, 15011810, 15012679, 15013333, 15013462, 15013944, 15012201, 15013667, 15013024, 15014276, 15013859, 15015715, 15015116, 15015247, 15029017, 15014027], "D": [15009323, 15008963, 15010162, 15010758, 15010353, 15011058, 15011357, 15011634, 15014470, 15010446, 15011643, 15012291, 15011559, 15012012, 15012245, 15011608, 15011635, 15028872, 15012187], "C": [15008569, 15009102, 15009409, 15009193, 15010189, 15009546, 15011006, 15009509, 15009168, 115507184, 115502940, 15010264, 15009734, 15009610, 15009584, 15010138, 15009962, 15009608, 15009629], "B": [15008273, 15008554, 15008493, 15008437, 15009218, 15008849, 15010423, 15011364, 15008522, 15009393, 15008208, 15008534, 15008851, 15008467, 15008897, 15008961, 15010023], "A": [15008217, 15008351, 15008267, 15008284, 15008898, 15008420, 15010012, 15010693, 15008295, 15008665, 15008737, 15008297, 15008383, 15008260, 15008327, 15008392, 15008492]}, "name": "D. The Union of k-Segments", "statement": "You are given segments on the coordinate axis and the number . The point\r\nis if it belongs to at least segments. Find the smallest (by the number\r\nof segments) set of segments on the coordinate axis which contains all\r\npoints and no others.\r\n", "solutions": ["/*\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>  \n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <ctime> \n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bs 1000000007\n#define bsize 512\n\nconst int N = 210000;\n\nusing namespace std;\n\nint n, k;\nvector<pair<int, int> > events;\nvector<pair<int, int> > ans;\nint cnt;\nint op;\nint main(){\n\t//freopen(\"beavers.in\",\"r\",stdin);\n\t//freopen(\"beavers.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\",\"r\",stdin);\n\t//freopen(\"F:/output.txt\",\"w\",stdout);\n\t//ios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\t\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint a, b;\n//\t\tcin >> a >> b;\n\t\tscanf(\"%d\", &a);\n\t\tscanf(\"%d\", &b);\n\t\tevents.push_back(make_pair(a, -1));\n\t\tevents.push_back(make_pair(b, 1));\n\t}\n\tsort(events.begin(), events.end());\n\n\tfor (int i = 0; i < events.size(); i++)\n\t{\n\t\tif (cnt == k - 1 && events[i].second == -1)//open\n\t\t{\n\t\t\top = events[i].first;\n\t\t}\n\t\tif (cnt == k&&events[i].second == 1)//close\n\t\t{\n\t\t\tans.push_back(make_pair(op, events[i].first));\n\t\t}\n\t\tcnt -= events[i].second;\n\t}\n\n\tcout << ans.size() << endl;\n\tfor (int i = 0; i < ans.size(); i++)\n\t{\n\t\tprintf(\"%d %d\\n\", ans[i].first, ans[i].second);\n//\t\tcout << ans[i].first << \" \" << ans[i].second << \"\\n\";\n\t}\n\n\tcin.get(); cin.get();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["greedy", "sortings"], "dificulty": "1800", "interactive": false}