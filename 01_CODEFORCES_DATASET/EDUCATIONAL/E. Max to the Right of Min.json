{"link": "https://codeforces.com//contest/1849/problem/E", "problemId": "2121802", "problem_idx": "E", "shortId": "1849E", "contest_number": "1849", "problem_submissions": {"F": [215983324, 215952856, 215937825, 216386632, 215955686, 215953676, 215963177, 215957010, 215951070, 215964780, 216982954, 215957194, 215972632, 215944919, 215944313, 215955103, 215959952, 215969003, 215980309, 215974158, 215944399, 215979671, 215977278], "E": [215924453, 215947662, 216386610, 215933511, 215933733, 215934077, 215914493, 215965756, 215977352, 215941711, 233941264, 215936437, 215935391, 215977463, 215969180, 215945577, 215912738, 215939893, 215950899, 215934318, 215964596, 215959218, 215957991, 215955934], "D": [215901738, 215911695, 216386594, 215909113, 215918034, 215916358, 215933169, 215909241, 215922975, 234220985, 215915496, 215918649, 215921028, 215919624, 215925910, 215965913, 215944986, 215923778, 215918733, 215917075, 215927258, 215909167, 215930917], "C": [215896251, 215894479, 216386570, 215900243, 215896179, 215907225, 215897874, 215899171, 215913186, 216103314, 215910665, 215904112, 215906218, 215893558, 215913416, 215898003, 215913451, 215905641, 215906717, 215916261, 215893733, 215907522], "B": [215891011, 215887978, 215890857, 215886817, 215889862, 215890551, 215889747, 215890405, 216103286, 215904981, 215895899, 215891636, 215886438, 215894588, 215888040, 215888730, 215892001, 215891534, 215895784, 215887055, 215895512], "A": [215887103, 215884849, 215885125, 215884783, 215885307, 215885029, 215884781, 215885053, 216103329, 215902406, 215889192, 215885764, 215884723, 215885605, 215884732, 215884795, 215885200, 215885812, 215885953, 215884704, 215884853]}, "name": "E. Max to the Right of Min", "statement": "You are given a permutation p of length n an array, consisting of\r\nintegers from 1 to n, all distinct.Let p_{l,r} denote a subarray an\r\narray formed by writing down elements from index l to index r,\r\ninclusive.Let\r\nmathit{maxpos}_{l,r} denote the of the maximum element on p_{l,r}.\r\nSimilarly, let\r\nmathit{minpos}_{l,r} denote the index of the minimum element on\r\nit.Calculate the number of subarrays p_{l,r} such that\r\nmathit{maxpos}_{l,r} >\r\nmathit{minpos}_{l,r}.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int n;\n    std::cin >> n;\n    \n    std::vector<int> p(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> p[i];\n    }\n    \n    std::vector<int> lmin(n, -1), rmin(n, n), lmax(n, -1), rmax(n, n);\n    std::vector<int> smin, smax;\n    for (int i = 0; i < n; i++) {\n        while (!smin.empty() && p[i] < p[smin.back()]) {\n            rmin[smin.back()] = i;\n            smin.pop_back();\n        }\n        if (!smin.empty()) {\n            lmin[i] = smin.back();\n        }\n        smin.push_back(i);\n        \n        while (!smax.empty() && p[i] > p[smax.back()]) {\n            rmax[smax.back()] = i;\n            smax.pop_back();\n        }\n        if (!smax.empty()) {\n            lmax[i] = smax.back();\n        }\n        smax.push_back(i);\n    }\n    \n    i64 ans = 0;\n    std::vector<int> s{-1};\n    std::vector<i64> sum{0LL};\n    for (int i = 0; i < n; i++) {\n        while (s.size() > 1 && p[i] < p[s.back()]) {\n            rmin[s.back()] = i;\n            s.pop_back();\n            sum.pop_back();\n        }\n        int l = std::upper_bound(s.begin(), s.end(), lmax[i]) - s.begin();\n        if (l < s.size()) {\n            ans += 1LL * (s[l] - std::max(s[l - 1], lmax[i]))\n                * (std::min(rmax[i], rmin[s[l]]) - i);\n            l++;\n            int m = std::partition_point(s.begin() + l, s.end(), [&](int x) {\n                return rmin[x] > rmax[i];\n            }) - s.begin();\n            ans += 1LL * (s[m - 1] - s[l - 1]) * rmax[i];\n            ans -= 1LL * (s.back() - s[l - 1]) * i;\n            ans += sum.back() - sum[m - 1];\n        }\n        sum.push_back(sum.back() + 1LL * (i - s.back()) * rmin[i]);\n        s.push_back(i);\n    }\n    \n    std::cout << ans << \"\\n\";\n    \n    return 0;\n}"], "input": "", "output": "", "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"], "dificulty": "2300", "interactive": false}