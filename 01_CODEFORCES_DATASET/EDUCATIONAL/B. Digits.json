{
    "link": "https://codeforces.com//contest/2043/problem/B",
    "problemId": "3103847",
    "problem_idx": "B",
    "shortId": "2043B",
    "contest_number": "2043",
    "problem_submissions": {
        "G": [
            298276621,
            298458376,
            298455954,
            298459741,
            298498128,
            298494225,
            298493989,
            298368643,
            298368617
        ],
        "F": [
            298243973,
            298258053,
            298242817,
            298260253,
            298257085,
            298250612,
            298241233,
            298252743,
            298266622,
            298254223,
            298258269,
            298270540,
            298270292,
            298270970,
            298272964,
            298350526,
            298284182,
            298276985,
            298272819,
            298283274,
            298421391,
            298417038,
            298257904
        ],
        "E": [
            298230325,
            298236565,
            298229495,
            298226934,
            298227308,
            298237122,
            298220698,
            298238215,
            298226770,
            298234499,
            298239196,
            298230091,
            298228297,
            298244169,
            298310355,
            298234798,
            298238168,
            298247710,
            298242187,
            298286367
        ],
        "D": [
            298219869,
            298216982,
            298222571,
            298218218,
            298213410,
            298224781,
            298213619,
            298219577,
            298216318,
            298221470,
            298226089,
            298219311,
            298219518,
            298230143,
            298226137,
            298226579,
            298229601,
            298224236,
            298231826
        ],
        "C": [
            298215825,
            298213305,
            298214855,
            298212674,
            298210052,
            298218770,
            298246686,
            298216835,
            298211668,
            298217178,
            298218473,
            298215699,
            298214498,
            298219482,
            298220559,
            298222653,
            298215672,
            298216539,
            298220531
        ],
        "B": [
            298205974,
            298203999,
            298204560,
            298204165,
            298201534,
            298206623,
            298209665,
            298205595,
            298204637,
            298205310,
            298207112,
            298207961,
            298204179,
            298210111,
            298210081,
            298211372,
            298204136,
            298203902,
            298209938
        ],
        "A": [
            298200061,
            298199218,
            298199258,
            298199378,
            298199175,
            298200132,
            298199984,
            298200407,
            298199812,
            298205860,
            298199259,
            298199630,
            298199502,
            298199251,
            298211149,
            298199244,
            298199260,
            298199390,
            298200087
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/137801",
    "editorial": "There are several ways to solve this problem. I will describe two of\r\nthem.We can try divisibility rules for all odd integers from to and find\r\nout whether they work for our numbers: is always the answer, since every\r\ninteger is divisible by : a number is divisible by iff its sum of digits\r\nis divisible by . Since our number consists of digits , then either or\r\nshould be divisible by ; so, or ; a number is divisible by iff its sum\r\nof digits is divisible by . This is a bit trickier than the case with ,\r\nbecause it is possible that both and are divisible by (not ), and it\r\nmakes the sum of digits divisible by ; a number is divisible by iff its\r\nlast digit is or . Just check that , and thatâs it; probably the\r\ntrickiest case: a number is divisible by iff, when this number is split\r\ninto blocks of digits (possibly with the first block shorter than\r\ndigits), the sign-alternating sum of these blocks is divisible by .\r\nLike, is divisible by because is divisible by . If we apply this rule to\r\nour numbers from the problem, we can use the fact that when , the number\r\ncan be split into several blocks of length , and each such block changes\r\nthe alternating sum by . So, if or , our number is divisible by . First,\r\nwe actually need a little bit of math. If you take a number consisting\r\nof digits equal to , it is always divisible by digits equal to . This is\r\nbecause, if you write some integer repeatedly, the resulting number will\r\nbe divisible by the original number, like, for example, is divisible by\r\n.So, if for some , the number is divisible by some digit, then for , the\r\nnumber will also be divisible for some digit.This means that there\r\nexists an integer such that for all integers , the results are the same\r\nif you use the same digit . So, we can set , and if is small enough, use\r\nbrute force.What is the value of ? The samples tell us that the number\r\nconsisting of ones is divisible by , , and (and divisibility by depends\r\nonly on ), so you can actually use . It is also possible to reduce to ,\r\nbut this is not required.So, the solution is: reduce to something like\r\nif it is greater than , then use brute force. You can either calculate\r\nthe remainder of a big number modulo small number using a for-loop, or,\r\nif you code in Java or Python, use built-in big integers (just be\r\ncareful with Python, modern versions of it forbid some operations with\r\nintegers longer than digits, you might need to override that behavior).\r\n",
    "name": "B. Digits",
    "statement": "Artem wrote the digit d on the board exactly n! times in a row. So, he\r\ngot the number dddddd\r\ndots ddd (exactly n! digits).Now he is curious about which digits from 1\r\nto 9 divide the number written on the board.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>#define ALL(x) begin(x), end(x)using namespace std;void file() {  freopen(\"1.in\", \"r\", stdin);  freopen(\"1.out\", \"w\", stdout);}using ll = long long; void Solve() {  int n, d;  cin >> n >> d;  vector<int> ans;  ans.push_back(1);  if((d % 3 == 0) || (n >= 3)) ans.push_back(3);  if(d == 5) ans.push_back(5);  if((d == 7) || (n >= 3)) ans.push_back(7);  if(d % 9 == 0) ans.push_back(9);  else if(d % 3 == 0) {    if(n >= 3) ans.push_back(9);  }else {    if(n >= 6) ans.push_back(9);  }  for(int x : ans) cout << x << \" \";  cout << \"\\n\";} int main() {  // file();  ios::sync_with_stdio(0), cin.tie(0);  int T;  cin >> T;  while(T--) Solve();  return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Digits.json",
    "hint": []
}