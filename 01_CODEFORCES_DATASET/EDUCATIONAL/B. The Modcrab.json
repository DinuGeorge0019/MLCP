{
    "link": "https://codeforces.com//contest/903/problem/B",
    "problemId": "138451",
    "problem_idx": "B",
    "shortId": "903B",
    "contest_number": "903",
    "problem_submissions": {
        "G": [
            33178321,
            33187453,
            33186301,
            33186897,
            33180699,
            33191173
        ],
        "F": [
            33174261,
            33178825,
            33181844,
            33178084,
            33183961,
            33180065,
            33185073,
            33176301,
            33183378,
            33188720,
            33182673,
            33185566,
            33181772,
            33181057,
            33184431,
            33176177
        ],
        "E": [
            33168457,
            33170258,
            33172872,
            33170814,
            33175293,
            33172943,
            33175009,
            33187458,
            33176493,
            33221819,
            33172057,
            33172327,
            33172721,
            33177599,
            33184047,
            33178079,
            33180655
        ],
        "C": [
            33161165,
            33161825,
            33162567,
            33163273,
            33167452,
            33160898,
            33163474,
            33159957,
            33161910,
            33167835,
            33159945,
            33162031,
            33164207,
            33164018,
            33160657,
            33163832,
            33161875
        ],
        "B": [
            33160080,
            33161172,
            33161528,
            33163824,
            33170257,
            33160007,
            33162660,
            33167319,
            33163497,
            33166907,
            33161299,
            33160216,
            33164455,
            33161461,
            33166773,
            33162803,
            33162955
        ],
        "A": [
            33158587,
            33158617,
            33158738,
            33158766,
            33160497,
            33158658,
            33158711,
            33158644,
            33158620,
            33165123,
            33158631,
            33158588,
            33159095,
            33158687,
            33158727,
            33158733
        ],
        "D": [
            33192267,
            78961090,
            33166706,
            33185032,
            33189320,
            33188936,
            33184706,
            33183639,
            33190417
        ]
    },
    "name": "B. The Modcrab",
    "statement": "Vova is again playing some computer game, now an RPG. In the game Vova\u2019s\r\ncharacter received a quest: to slay the fearsome monster called\r\nModcrab.After two hours of playing the game Vova has tracked the monster\r\nand analyzed its tactics. The Modcrab has health points and an attack\r\npower of . Knowing that, Vova has decided to buy a lot of strong healing\r\npotions and to prepare for battle.Vova\u2019s character has health points and\r\nan attack power of . Also he has a large supply of healing potions, each\r\nof which increases his current amount of health points by when Vova\r\ndrinks a potion. All potions are identical to each other. It is\r\nguaranteed that .The battle consists of multiple phases. In the\r\nbeginning of each phase, Vova can either attack the monster (thus\r\nreducing its health by ) or drink a healing potion (it increases Vova\u2019s\r\nhealth by ; ). Then, , the Modcrab attacks Vova, reducing his health by\r\n. The battle ends when Vova\u2019s (or Modcrab\u2019s) health drops to or lower.\r\nIt is possible that the battle ends in a middle of a phase after Vova\u2019s\r\nattack.Of course, Vova wants to win the fight. But also he wants to do\r\nit as fast as possible. So he wants to make up a strategy that will\r\nallow him to win the fight after the minimum possible number of\r\nphases.Help Vova to make up a strategy! You may assume that Vova never\r\nruns out of healing potions, and that he can always win.\r\n",
    "solutions": [
        "#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:336777216\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 20;\nconst ll MOD = 1000000007;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-9;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<n;i++)\n#define Se second\n#define Fi first\n\nint main() {\n\tint H1, A1, C1, H2, A2, i;\n\tscanf(\"%d %d %d %d %d\", &H1, &A1, &C1, &H2, &A2);\n\n\tint ans = INF;\n\tfor (i = 0; i <= 10000; i++) {\n\t\tint h = H1 + i*(C1 - A2);\n\t\tll tur = (h + A2 - 1) / A2;\n\t\tif (tur * A1 >= H2) {\n\t\t\tans = min(ans, (H2 + A1 - 1) / A1 + i);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t\tfor (int j = 1; j <= i; j++) printf(\"HEAL\\n\");\n\t\t\tfor (int j = 1; j <= (H2 + A1 - 1) / A1; j++) printf(\"STRIKE\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn !printf(\"%d\\n\", ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. The Modcrab.json",
    "editorial_link": "https://codeforces.com//blog/entry/56330",
    "editorial": "A simple greedy solution works: simulate the process until the Modcrab\r\nis dead, and make Vova drink a potion if his current health is less than\r\n, and monster\u00e2\u0080\u0099s current health is greater than (because in this case\r\nVova can\u00e2\u0080\u0099t finish the Modcrab in one strike, but the Modcrab can win if\r\nVova doesn\u00e2\u0080\u0099t heal). In any other situation Vova must attack.Since all\r\nparameters are up to , the number of phases won\u00e2\u0080\u0099t exceed .\r\n"
}