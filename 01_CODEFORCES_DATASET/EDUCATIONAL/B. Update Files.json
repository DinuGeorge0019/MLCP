{
    "link": "https://codeforces.com//contest/1606/problem/B",
    "problemId": "1163613",
    "problem_idx": "B",
    "shortId": "1606B",
    "contest_number": "1606",
    "problem_submissions": {
        "F": [
            133507404,
            133507818,
            133498109,
            133510274,
            133508292,
            133516889,
            133520516,
            133515497,
            133516080,
            133502968,
            134316313,
            133499324,
            134054804,
            133588873,
            133583029,
            133581709
        ],
        "D": [
            133486455,
            133493884,
            133513223,
            133492283,
            133485348,
            133494162,
            133496696,
            133482809,
            133492529,
            133517460,
            133476721,
            133498136,
            133495480,
            135925509,
            133485100,
            133479592,
            133499757,
            133522973,
            133486537,
            133503209,
            133499457
        ],
        "E": [
            133463795,
            133481392,
            133471511,
            133490729,
            133490179,
            133495042,
            133479686,
            133483637,
            133491209,
            133498277,
            133483064,
            133494409,
            133480178,
            133476474,
            135922690,
            133494013,
            133498349,
            133478322,
            133477984,
            133495608,
            133473401,
            133487605
        ],
        "C": [
            133458872,
            133464915,
            133459336,
            133460040,
            133464064,
            133462782,
            133466153,
            133471330,
            133463944,
            133471558,
            133463840,
            133462653,
            133461264,
            133462854,
            133461230,
            133467241,
            133464884,
            133472085,
            133464159,
            133466246
        ],
        "B": [
            133458354,
            133459359,
            133457772,
            133458154,
            133459800,
            133458862,
            133459689,
            133467167,
            133459191,
            133458183,
            133459448,
            133458263,
            133464726,
            133458679,
            133458193,
            133459842,
            133457910,
            133460625,
            133459355,
            133458301
        ],
        "A": [
            133457621,
            133458135,
            133457507,
            133457613,
            133457801,
            133457608,
            133458264,
            133457856,
            133457610,
            133457684,
            133457591,
            133457600,
            133457598,
            133457574,
            133457611,
            133457877,
            133457514,
            133458100,
            133457524,
            133457605
        ]
    },
    "name": "B. Update Files",
    "statement": "Berland State University has received a new update for the operating\r\nsystem. Initially it is installed only on the 1-st computer.Update files\r\nshould be copied to all n computers. The computers are not connected to\r\nthe internet, so the only way to transfer update files from one computer\r\nto another is to copy them using a patch cable (a cable connecting two\r\ncomputers directly). Only one patch cable can be connected to a computer\r\nat a time. Thus, from any computer where the update files are installed,\r\nthey can be copied to some other computer in exactly one hour.Your task\r\nis to find the minimum number of hours required to copy the update files\r\nto all n computers if there are only k patch cables in Berland State\r\nUniversity.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> pii;\n#define x first\n#define y second\n#define pb push_back\n#define mp make_pair\ntemplate <typename T> void chkmin(T &x,T y){y<x?x=y:T();}\ntemplate <typename T> void chkmax(T &x,T y){x<y?x=y:T();}\ntemplate <typename T> void readint(T &x)\n{\n\tint f=1;char c;x=0;\n\tfor(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+(c-'0');\n\tx*=f;\n}\nconst int MOD=998244353;\ninline int dmy(int x){return x>=MOD?x-MOD:x;}\ninline void inc(int &x,int y){x=dmy(x+y);}\nint qmi(int x,int y)\n{\n\tint ans=1;\n\tfor(;y;y>>=1,x=1ll*x*x%MOD)\n\t\tif(y&1)ans=1ll*ans*x%MOD;\n\treturn ans;\n}\nconst int MAXN=200005;\n\nvoid solve()\n{\n\tll n,k;\n\treadint(n),readint(k);\n\tll u=1,s=1,c=0;\n\tif(s>=n){printf(\"%lld\\n\",c);return;}\n\tfor(;u<=k;u*=2)\n\t{\n\t\ts+=u,++c;\n\t\tif(s>=n){printf(\"%lld\\n\",c);return;}\n\t}\n\tprintf(\"%lld\\n\",c+(n-s+k-1)/k);\n}\n\nint main()\n{\n\t#ifdef LOCAL\n\tfreopen(\"code.in\",\"r\",stdin);\n//\tfreopen(\"code.out\",\"w\",stdout);\n\t#endif\n\tint T;\n\treadint(T);\n\twhile(T--)solve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Update Files.json",
    "editorial_link": "https://codeforces.com//blog/entry/96454",
    "editorial": "Let be the current number of computers with the update already installed\r\n(initially it is ). Then, in hour, we can increase by . From here we can\r\nsee that the value of will double for the first few hours, and then,\r\nwhen it becomes greater than , it will begin to increase by exactly .The\r\nprocess when the number of computers doubles can be modeled using a\r\nloop, because the number of doublings does not exceed . And after that,\r\nwe have to increase the answer by to take the number of additions of\r\ninto account.Note that computing should be done without using fractional\r\ndata types; to calculate in integers, you should divide by using integer\r\ndivision (this will work provided that both and are non-negative, and ).\r\nIf you use real numbers, this may cause precision issues.\r\n"
}