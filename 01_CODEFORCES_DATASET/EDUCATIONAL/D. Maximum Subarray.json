{"link": "https://codeforces.com//contest/1796/problem/D", "problemId": "1802548", "problem_idx": "D", "shortId": "1796D", "contest_number": "1796", "problem_submissions": {"F": [195363403, 195358131, 195479952, 195352672, 197311670, 196155422, 195754330], "E": [195322604, 195319205, 195326482, 195321452, 195327641, 195860691, 195453420, 195453193, 195322745, 195328001, 195331101, 195332636, 195326730, 195325672, 195330089, 195730772, 195730423, 195326388, 195341037, 195326008, 195331716, 195328756, 195331573, 195338613, 195329663], "D": [195301353, 195304722, 195305253, 195303622, 195309683, 195303260, 195314948, 195309431, 195312674, 195316263, 195314478, 195311060, 195310198, 195308650, 195308315, 195293456, 195319263, 195305260, 195544976, 195315681], "C": [195293384, 195295362, 195292646, 195293592, 195298098, 195294172, 195296742, 195299256, 195301143, 195303080, 195303361, 195304837, 195724689, 195723906, 195300890, 195288215, 195295041, 195302705, 195306906, 195294076, 195307764], "B": [195288248, 195289700, 195287789, 195287682, 195290336, 195286518, 195290220, 195290123, 195290068, 195287181, 195292039, 195293913, 195289326, 195284427, 195288804, 195305536, 195289798, 195287403, 195298773], "A": [195283882, 195284135, 195283927, 195289942, 195285318, 195283838, 195283735, 195283820, 195283931, 195283631, 195283664, 195285369, 195285859, 195283473, 195283857, 195283713, 195284138, 195283860, 195284027]}, "name": "D. Maximum Subarray", "statement": "You are given an array a_1, a_2,\r\ndots, a_n, consisting of n integers. You are also given two integers k\r\nand x.You have to perform the following operation exactly once: add x to\r\nthe elements on k positions, and subtract x from all the others.For\r\nexample, if a = [2, -1, 2, 3], k = 1, x = 2, and we have picked the\r\nfirst element, then after the operation the array a = [4, -3, 0, 1].Let\r\nf(a) be the maximum possible sum of a subarray of a. The subarray of a\r\nis a contiguous part of the array a, i. e. the array a_i, a_{i + 1},\r\ndots, a_j for some 1\r\nle i\r\nle j\r\nle n. An empty subarray should also be considered, it has sum 0.Let the\r\narray a\u2019 be the array a after applying the aforementioned operation.\r\nApply the operation in such a way that f(a\u2019) is the maximum possible,\r\nand print the maximum possible value of f(a\u2019).\r\n", "solutions": ["#include <bits/stdc++.h>\n#define mod 998244353\n#define int long long\nusing namespace std;\nint n,a[2000005];\nint f[200005][22];\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tint n,k,x;\n\t\tcin >> n >> k >> x;\n\t\tfor(int i=1;i<=n;i++) cin >> a[i];\n\t\tint ans=0;\n\t\tif(x>=0)\n\t\t{\n\t\t\tfor(int p=0;p<=n;p++)\n\t\t\tfor(int i=0;i<=k+1;i++) f[p][i]=-1e18;\n\t\t\tf[0][0]=0;\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tfor(int j=0;j<=k+1;j++)\n\t\t\t\t{\n\t\t\t\t\tf[i][min(j+1,k+1)]=max(f[i][min(j+1,k+1)],f[i-1][j]+a[i]-x);\n\t\t\t\t\tf[i][0]=max(f[i][0],0ll);\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<=k+1;j++)\n\t\t\t\t{\n\t\t\t\t\tint cnt=min(j,k);\n\t\t\t\t\tans=max(ans,f[i][j]+cnt*x*2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int l=1;l<=min(n,k+1);l++)\n\t\t\t{\n\t\t\t\tint nw=0,mx=0;\n\t\t\t\tfor(int r=l;r<=n;r++)\n\t\t\t\t{\n\t\t\t\t\tnw+=a[r]-x;\n\t\t\t\t\tif(nw<=0) nw=0;\n\t\t\t\t\tmx=max(mx,nw);\n\t\t\t\t\tint len=r-l+1;\n\t\t\t\t\tif(len>n-k) ans=max(ans,mx+2*x*(k-n+len));\n\t\t\t\t\telse ans=max(ans,mx);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}\n/*\n1\n2 2 3\n-1 2\n*/"], "input": "", "output": "", "tags": ["data structures", "dp", "greedy", "two pointers"], "dificulty": "2000", "interactive": false}