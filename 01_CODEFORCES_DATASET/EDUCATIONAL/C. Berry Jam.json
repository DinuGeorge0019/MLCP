{"link": "https://codeforces.com//contest/1278/problem/C", "problemId": "498932", "problem_idx": "C", "shortId": "1278C", "contest_number": "1278", "problem_submissions": {"E": [67224918, 67231614, 67223912, 67253812, 67225741, 67224871, 67225251, 67224253, 67224097, 67228073, 67224351, 67238384, 67238891, 67235763, 67230622, 67227930, 67239651, 67240882, 67235370, 67231237, 67232624], "F": [67220843, 67234059, 67225490, 67229828, 67232198, 67228232, 67234554, 67236753, 67235814, 67235952, 67222634, 67222261, 67233844, 67234877, 67233597, 67235880, 168626483, 67236179, 67239000, 67242413, 67234942], "D": [67217029, 67303164, 67301866, 67298063, 67237371, 67236431, 67235408, 67220294, 67220865, 67220608, 67221489, 67220476, 67219646, 67219320, 67220067, 67226705, 67224401, 67222526, 67227114, 67223817, 67223367, 67231531, 67228179, 67226295], "C": [67214007, 67214267, 67217998, 67216889, 67218307, 67216554, 67216623, 67215042, 67215238, 67217005, 67217682, 67215492, 67219419, 67219630, 67218331, 67220921, 67220564, 67238779], "B": [67212862, 67212809, 67214461, 67213367, 67214581, 67214399, 67214511, 67213321, 67213424, 67214716, 67216187, 67217236, 67216491, 67238990, 67224941, 67214356, 67216320, 67214479, 67213910], "A": [67212605, 67233989, 67212600, 67213460, 67212650, 67212623, 67213201, 67212677, 67212601, 67212657, 67213584, 67212831, 67213003, 67213058, 67213442, 67213081, 67213875, 67213272, 67212886]}, "name": "C. Berry Jam", "statement": "Karlsson has recently discovered a huge stock of berry jam jars in the\r\nbasement of the house. More specifically, there were 2n jars of\r\nstrawberry and blueberry jam.All the 2n jars are arranged in a row. The\r\nstairs to the basement are exactly in the middle of that row. So when\r\nKarlsson enters the basement, he sees exactly n jars to his left and n\r\njars to his right.For example, the basement might look like this: Being\r\nthe starightforward man he is, he immediately starts eating the jam. In\r\none minute he chooses to empty either the first non-empty jar to his\r\nleft or the first non-empty jar to his right.Finally, Karlsson decided\r\nthat at the end the amount of full strawberry and blueberry jam jars\r\nshould become the same.For example, this might be the result: Jars are\r\nnumbered from 1 to 2n from left to right, so Karlsson initially stands\r\nbetween jars n and n+1.What is the minimum number of jars Karlsson is\r\nrequired to empty so that an equal number of full strawberry and\r\nblueberry jam jars is left?Your program should answer t independent test\r\ncases.\r\n", "solutions": ["#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\ntypedef pair<int,P> P1;\ntypedef pair<P,P> P2;\n#define pu push\n#define pb push_back\n#define mp make_pair\n#define eps 1e-7\n#define INF 1000000000\n#define fi first\n#define sc second\n#define rep(i,x) for(int i=0;i<x;i++)\n#define repn(i,x) for(int i=1;i<=x;i++)\n#define SORT(x) sort(x.begin(),x.end())\n#define ERASE(x) x.erase(unique(x.begin(),x.end()),x.end())\n#define POSL(x,v) (lower_bound(x.begin(),x.end(),v)-x.begin())\n#define POSU(x,v) (upper_bound(x.begin(),x.end(),v)-x.begin())\nint n;\nint a[200005];\nint pos[200005];\nvoid solve(){\n\tscanf(\"%d\",&n);\n\trepn(i,2*n) scanf(\"%d\",&a[i]);\n\trep(i,2*n+3) pos[i] = INF;\n\tpos[n] = n;\n\tint cur = n;\n\tfor(int i=2*n;i>=n+1;i--){\n\t\tif(a[i] == 2) cur++; else cur--;\n\t\tpos[cur] = min(pos[cur],i-n-1);\n\t}\n\tint ans = n+pos[n];\n\tcur = n;\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i] == 1) cur++; else cur--;\n\t\tans = min(ans,n-i+pos[cur]);\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n\tint t; cin >> t;\n\twhile(t--)solve();\n}"], "input": "", "output": "", "tags": ["data structures", "dp", "greedy", "implementation"], "dificulty": "1700", "interactive": false}