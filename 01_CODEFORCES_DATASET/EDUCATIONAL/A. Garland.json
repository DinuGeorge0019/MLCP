{
    "link": "https://codeforces.com//contest/1809/problem/A",
    "problemId": "1839361",
    "problem_idx": "A",
    "shortId": "1809A",
    "contest_number": "1809",
    "problem_submissions": {
        "G": [
            198800857,
            198819538,
            198819377,
            198819202,
            198818781,
            198818684,
            198816759,
            198811816,
            198806762,
            198815231,
            198818773,
            198822181,
            198828608,
            198822299,
            203672607,
            208381746,
            198835108,
            198831844,
            198829525,
            198853349,
            198853245
        ],
        "F": [
            198786104,
            198791363,
            198796885,
            198804709,
            198810152,
            198814173,
            198809216,
            198791415,
            198800965,
            198804541,
            198830839,
            198809769,
            198804908,
            198811366,
            198815172,
            198805151,
            198812101,
            198817151,
            198808903,
            198814662
        ],
        "E": [
            198775336,
            198782430,
            198786246,
            199182668,
            198794243,
            198792695,
            198792300,
            198799038,
            198776769,
            198784470,
            198788708,
            198793376,
            198789791,
            198792668,
            198843793,
            198805320,
            198800053,
            198802037,
            198804412,
            198800677,
            198799758
        ],
        "D": [
            198768775,
            198772012,
            198776224,
            198777641,
            198882283,
            198777443,
            198779801,
            198782367,
            198766389,
            198769656,
            198777387,
            198777057,
            198779683,
            198776616,
            198772288,
            198785016,
            198783361,
            198781028,
            198791791,
            198778758
        ],
        "C": [
            198764545,
            198765840,
            198768929,
            198772658,
            198770321,
            198766724,
            198776128,
            198761542,
            198765111,
            198760078,
            198766275,
            198773341,
            198769090,
            198764454,
            198770468,
            198769676,
            198767761,
            198771860,
            198780776
        ],
        "B": [
            198760964,
            198755413,
            198762260,
            198758056,
            198766256,
            198759317,
            198761525,
            198757070,
            198756430,
            198755376,
            198758155,
            198765573,
            198760583,
            198758103,
            198766309,
            198762187,
            198761139,
            198766037,
            198760442
        ],
        "A": [
            198757842,
            198756487,
            198756930,
            198755206,
            198755963,
            198755170,
            198755335,
            198755127,
            198755119,
            198756462,
            198755191,
            198755804,
            198757456,
            198755555,
            198757141,
            198756133,
            198756023,
            198760810,
            198755407
        ]
    },
    "name": "A. Garland",
    "statement": "You have a garland consisting of 4 colored light bulbs, the color of the\r\ni-th light bulb is s_i.Initially, all the light bulbs are turned off.\r\nYour task is to turn all the light bulbs on. You can perform the\r\nfollowing operation any number of times: select a light bulb and switch\r\nits state (turn it on if it was off, and turn it off if it was on). The\r\nonly restriction on the above operation is that you can apply the\r\noperation to a light bulb only if the previous operation was applied to\r\na light bulb of a different color (the first operation can be applied to\r\nany light bulb).Calculate the minimum number of operations to turn all\r\nthe light bulbs on, or report that this is impossible.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    std::string s;\n    std::cin >> s;\n    \n    std::sort(s.begin(), s.end());\n    \n    if (s[0] == s[3]) {\n        std::cout << -1 << \"\\n\";\n    } else if (s[0] == s[2] || s[1] == s[3]) {\n        std::cout << 6 << \"\\n\";\n    } else {\n        std::cout << 4 << \"\\n\";\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. Garland.json",
    "editorial_link": "https://codeforces.com//blog/entry/114300",
    "editorial": "Note that there are only a few configuration classes: , , , and . Letâs\r\ndiscuss each of them.If all bulbs are of the same color, then it is\r\nimpossible to turn all the bulbs on, because after you switch one light\r\nbulb, it is impossible to turn the others on.If there is a color with\r\nbulbs, then it is impossible to turn all the bulbs on in operations,\r\nwhich means there is a bulb that turns on, turns off and then turns on\r\nagain, i.e. the answer is at least operations. And there is a sequence\r\nof exactly operations (such an example was shown in the problem\r\nnotes).For configurations like and , it is enough to turn on the color\r\nbulbs not in a row (i.e. in order for the first case and for the second\r\none). So the answer for such configurations is .If all the bulbs are of\r\ndifferent colors, then nothing prevents you from turning them all on in\r\noperations.\r\n",
    "hint": []
}