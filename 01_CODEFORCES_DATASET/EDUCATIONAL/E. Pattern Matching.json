{"link": "https://codeforces.com//contest/1476/problem/E", "problemId": "881706", "problem_idx": "E", "shortId": "1476E", "contest_number": "1476", "problem_submissions": {"G": [105913861, 105944560, 105939646, 105923864, 105934727, 105937410, 105935084], "E": [105882617, 105882778, 105909929, 105895535, 105907314, 105884522, 105881576, 105889515, 105891029, 105897702, 105902043, 105904102, 105909138, 105899391, 105895913, 105970659, 105900322, 105895017, 105909435, 105904890], "D": [105872560, 105872434, 105872750, 105874690, 105888665, 105869131, 105875044, 105876453, 105878527, 105868738, 105873785, 105878660, 105867024, 105887668, 105877564, 105874050, 105886943, 105878950, 105887180], "C": [105865233, 105867141, 105882799, 105868688, 105880463, 105863560, 105866932, 105868909, 105872012, 105880982, 105868535, 105869296, 105877911, 105869813, 105870709, 105864538, 105872343, 105869274, 105872286], "B": [105854579, 105853524, 105854032, 105858231, 105859227, 105853292, 105853315, 105856769, 105859608, 105859912, 105854635, 105856976, 105853309, 105859505, 105858926, 105855562, 105860530, 105853840, 105860836], "A": [105850622, 105850650, 105852722, 105850820, 105851490, 105850582, 105850685, 105850741, 105851248, 105853267, 105850773, 105851638, 105850636, 105851230, 105852640, 105850665, 105852244, 105850634, 105851161], "F": [131696052, 106171367]}, "name": "E. Pattern Matching", "statement": "You are given n patterns p_1, p_2,\r\ndots, p_n and m strings s_1, s_2,\r\ndots, s_m. Each pattern p_i consists of k characters that are either\r\nlowercase Latin letters or wildcard characters (denoted by underscores).\r\nAll patterns are pairwise distinct. Each string s_j consists of k\r\nlowercase Latin letters.A string a matches a pattern b if for each i\r\nfrom 1 to k either b_i is a wildcard character or b_i=a_i.You are asked\r\nto rearrange the patterns in such a way that the first pattern the j-th\r\nstring matches is p[mt_j]. You are allowed to leave the order of the\r\npatterns unchanged.Can you perform such a rearrangement? If you can,\r\nthen print any valid order.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n//dengyaotriangle!\n\nconst int maxn=1e5+2;\n\nvector<int> adj[maxn];\nbool vis[maxn];\nbool ifa[maxn];\nvector<int> ans;\nvoid dfs(int u){\n    vis[u]=ifa[u]=1;\n    for(int i=0;i<adj[u].size();i++){\n        int v=adj[u][i];\n        if(vis[v]){\n            if(ifa[v]){cout<<\"NO\";exit(0);}\n        }else dfs(v);\n    }\n    ifa[u]=0;\n    ans.push_back(u);\n}\nint main(){\n    ios::sync_with_stdio(0);cin.tie(0);\n    int n,m,k;\n    cin>>n>>m>>k;\n    map<string,int> mp;\n    for(int i=1;i<=n;i++){\n        string h;cin>>h;mp[h]=i;\n    }\n    for(int i=1;i<=m;i++){\n        string x;cin>>x;int id;cin>>id;\n        bool ok=0;\n        for(int s=0;s<(1<<k);s++){\n            string t=x;\n            for(int i=0;i<k;i++)if((s>>i)&1)t[i]='_';\n            if(mp.find(t)!=mp.end()){\n                if(mp[t]==id)ok=1;\n                else{\n                    adj[mp[t]].push_back(id);\n                }\n            }\n        }\n        if(!ok){cout<<\"NO\";return 0;}\n    }\n    for(int i=1;i<=n;i++){\n        if(!vis[i])dfs(i);\n    }\n    cout<<\"YES\\n\";\n    for(int x:ans)cout<<x<<' ';\n    return 0;\n}"], "input": "", "output": "", "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "hashing", "sortings", "strings"], "dificulty": "2300", "interactive": false}