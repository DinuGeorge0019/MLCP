{
    "link": "https://codeforces.com//contest/813/problem/A",
    "problemId": "108588",
    "problem_idx": "A",
    "shortId": "813A",
    "contest_number": "813",
    "problem_submissions": {
        "F": [
            27592959,
            27592462,
            27595859,
            27593693,
            27589826,
            27597032,
            27592495,
            27594242,
            27592969,
            27592265,
            27592101,
            27593647,
            27593448,
            27607698,
            27607690,
            27597005
        ],
        "D": [
            27591413,
            27596376,
            27595878,
            27592392,
            27596101,
            27595104,
            27676236,
            27675210,
            27591510,
            27603640,
            27593900,
            27624567,
            27624550,
            27624539,
            27628580,
            27593089,
            27592322,
            28282372,
            28281379
        ],
        "E": [
            27590671,
            27593775,
            27594164,
            27598623,
            27590165,
            27587725,
            27590977,
            27593884,
            27590632,
            27590190,
            27593976,
            27593899,
            27591757,
            27595354,
            27602821,
            27589094,
            27596364,
            27590212,
            27590714,
            27590708
        ],
        "C": [
            27586798,
            27589288,
            27588038,
            27588205,
            27585642,
            27587654,
            27587622,
            27598220,
            27588200,
            27597496,
            27586750,
            27587670,
            27588183,
            27589351,
            27598034,
            27587880,
            27588758,
            27588420,
            27587303,
            27587398,
            27597722,
            27588272
        ],
        "B": [
            27587426,
            27586981,
            27586763,
            27590844,
            27586387,
            27587082,
            27586616,
            27585981,
            27586358,
            27586732,
            27588430,
            27586365,
            27587378,
            27586643,
            27586207,
            27586121
        ],
        "A": [
            27586386,
            27585541,
            27587254,
            27590210,
            27585562,
            27585639,
            27585557,
            27585471,
            27585490,
            27585606,
            27586831,
            27585625,
            27586127,
            27585762,
            27585515,
            27585489,
            27585475
        ]
    },
    "name": "A. The Contest",
    "statement": "Pasha is participating in a contest on one well-known website. This time\r\nhe wants to win the contest and will do anything to get to the first\r\nplace!This contest consists of problems, and Pasha solves th problem in\r\ntime units (his solutions are always correct). At any moment of time he\r\ncan be thinking about a solution to only one of the problems (that is,\r\nhe cannot be solving two problems at the same time). The time Pasha\r\nspends to send his solutions is negligible. Unfortunately, there are too\r\nmany participants, and the website is not always working. Pasha received\r\nthe information that the website will be working only during time\r\nperiods, th period is represented by its starting moment and ending\r\nmoment . Of course, Pasha can send his solution only when the website is\r\nworking. In other words, Pasha can send his solution at some moment iff\r\nthere exists a period such that .Pasha wants to know his best possible\r\nresult. We need to tell him the minimal moment of time by which he is\r\nable to have , if he acts optimally, or say that it’s impossible no\r\nmatter how Pasha solves the problems.\r\n",
    "solutions": [
        "#include<cstdio>\n#include<algorithm>\nusing namespace std;\ninline int read()\n{\n\tint x;char c;\n\twhile((c=getchar())<'0'||c>'9');\n\tfor(x=c-'0';(c=getchar())>='0'&&c<='9';)x=(x<<3)+(x<<1)+c-'0';\n\treturn x;\n}\nint main()\n{\n\tint n=read(),i,s=0,l,r;\n\tfor(i=1;i<=n;++i)s+=read();\n\tfor(i=read();i--;)\n\t{\n\t\tl=read();r=read();\n\t\tif(r>=s)return 0*printf(\"%d\",max(l,s));\n\t}\n\tputs(\"-1\");\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\A. The Contest.json",
    "editorial_link": "https://codeforces.com//blog/entry/52410",
    "editorial": "Notice that we can keep solved tasks and then submit all at once. So the\r\nsolution goes down to this: you should find the first moment of time\r\nthat the site works at that moment and . Also itâs convinient that the\r\nintervals are already sorted in increasing order.Letâs sum up all\r\nelements of array and write it to some variable . The answer is obtained\r\nthis way: if the sum lies in the current interval then the answer is the\r\nsum. Otherwise there are two cases. If there exists some interval that\r\nthen the answer is . In other case the answer is \"-1\".\r\n",
    "hint": []
}