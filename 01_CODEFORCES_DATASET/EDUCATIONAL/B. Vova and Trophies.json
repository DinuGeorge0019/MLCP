{
    "link": "https://codeforces.com//contest/1082/problem/B",
    "problemId": "64161",
    "problem_idx": "B",
    "shortId": "1082B",
    "contest_number": "1082",
    "problem_submissions": {
        "F": [
            46328946,
            46337799,
            46339884,
            46346150,
            46445422,
            46359069,
            46431759,
            46637242,
            46637151,
            46325175,
            46338896,
            46409182
        ],
        "G": [
            46323996,
            46323275,
            46334802,
            46323141,
            46326108,
            46329586,
            46321808,
            163694400,
            163693799,
            46332091,
            46330084,
            46336228,
            46329478,
            46334035,
            46334852,
            46340605,
            46341989,
            46332446,
            46341097,
            46318296,
            46328921,
            46335428
        ],
        "E": [
            46318513,
            46330600,
            46328796,
            46321883,
            46324879,
            46325643,
            46324793,
            46322771,
            46328316,
            46332015,
            46327943,
            46323542,
            46327890,
            46325362,
            46330431,
            46320019,
            46338363,
            46322189,
            46331138
        ],
        "D": [
            46316454,
            46320831,
            46325078,
            46317954,
            46322179,
            46323264,
            46336380,
            46328840,
            46322602,
            46323491,
            46324308,
            46330072,
            46325620,
            46329576,
            46325051,
            46330163,
            46325538,
            46319965,
            46324331
        ],
        "C": [
            46314364,
            46317118,
            46317698,
            46315803,
            46318057,
            46319400,
            46316833,
            46317944,
            46317349,
            46317946,
            46320711,
            46318098,
            46319780,
            46320328,
            46319548,
            46328045,
            46319609,
            46315734,
            46318281
        ],
        "B": [
            46313723,
            46315264,
            46315248,
            46314114,
            46315542,
            46315654,
            46315306,
            46315753,
            46315155,
            46315310,
            46317088,
            46316030,
            46316402,
            46316343,
            46315252,
            46358458,
            46314954,
            46314579,
            46315821
        ],
        "A": [
            46313553,
            46313861,
            46313655,
            46313685,
            46313732,
            46313657,
            46313638,
            46313650,
            46313676,
            46313977,
            46315097,
            46313735,
            46314264,
            46315003,
            46313777,
            46326534,
            46313605,
            46313586,
            46314557
        ]
    },
    "name": "B. Vova and Trophies",
    "statement": "Vova has won n trophies in different competitions. Each trophy is either\r\ngolden or silver. The trophies are arranged in a row.The of the\r\narrangement is the length of the longest subsegment consisting of golden\r\ntrophies. Vova wants to swap two trophies (not necessarily adjacent\r\nones) to make the arrangement as beautiful as possible that means, to\r\nmaximize the length of the longest such subsegment.Help Vova! Tell him\r\nthe maximum possible beauty of the arrangement if he is allowed to do at\r\nmost one swap.\r\n",
    "solutions": [
        "/*\nWe sail through endless skies\nStars shine like eyes\nThe black night sighs\nThe Moon in silver dreams\nFalls down in beams\nLight of the night\nThe Earth a purple blaze\nOf sapphire haze\nIn orbit always\n\nWhile down below the trees\nBathed in cool breeze\nSilver starlight breaks\nDawn from night\nAnd so we pass on by\nThe crimson eye\nOf great god Mars\nAs we travel the universe\n*/\n\n#pragma GCC optimize(\"O3\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>\n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n\n#include <memory.h>\n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n#define norm asdfasdgasdgsd\n#define have adsgagshdshfhds\n#define ends asdgahhfdsfshdshfd\n#define prev asdgSHJsfgsdfhdsh\n#define hash asdgasdgasdgdfrywewery\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bsize 512\n\n#define ldouble long double\nusing namespace std;\n\n#define bs 1000000007\n\nconst int N = 200031;\n\nint n;\nstring st;\nint ar[N];\nint cnt;\nint ans;\nint L[N],R[N];\n\nint main(){\n//\tfreopen(\"apache.in\",\"r\",stdin);\n//\tfreopen(\"apache.out\",\"w\",stdout);\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\tios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\n\tcin>>n;\n\tcin>>st;\n\tfor (int i=1;i<=n;i++){\n\t\tar[i]=(st[i-1]=='G');\n\t\tcnt+=ar[i];\n\t}\n\n\tfor (int i=1;i<=n;i++){\n\t\tL[i]=L[i-1]+1;\n\t\tif (ar[i]==0)\n\t\t\tL[i]=0;\n\t}\n\n\tfor (int i=n;i>=1;--i){\n\t\tR[i]=R[i+1]+1;\n\t\tif (ar[i]==0)\n\t\t\tR[i]=0;\n\t}\n\n\tfor (int i=1;i<=n;i++){\n\t\tans=max(ans,L[i]);\n\t\tans=max(ans,L[i-1]+R[i+1]+1);\n\t}\n\tans=min(ans,cnt);\n\tcout<<ans<<endl;\n\n//\tcin.get(); cin.get();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\EDUCATIONAL\\B. Vova and Trophies.json",
    "editorial_link": "https://codeforces.com/blog/entry/63544",
    "editorial": "Let be the maximal segment of gold cups that begins in the cup . Let be\r\nthe maximum segment of gold cups that ends in the cup . Also, let the\r\ntotal number of gold cups be .Note that it makes no sense to change the\r\ncups of the same color. Then let\u00e2\u0080\u0099s consider the silver cup, which will\r\nchange with the gold cup, let its number be . Then if , then we will\r\nupdate the answer with the value , and otherwise with the value . This\r\nwill not work if all the cups are golden. In this case, the answer is .\r\n"
}