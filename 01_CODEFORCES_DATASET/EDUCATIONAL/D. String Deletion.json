{"link": "https://codeforces.com//contest/1430/problem/D", "problemId": "755156", "problem_idx": "D", "shortId": "1430D", "contest_number": "1430", "problem_submissions": {"G": [95237045, 95235075, 95240737, 97566243, 95239114, 95228241, 95221926, 95230929, 95239632, 95250364, 95455283, 95252471, 95256236, 95242546, 95303013, 98871928], "F": [95220487, 95228332, 95223150, 97566130, 95216783, 95250832, 95242433, 95256538, 95247019, 95248722, 95240985, 95228704, 95232008, 95232802, 95230075, 95232563, 95238448, 95465311, 95234311, 95232005], "E": [95211511, 95210553, 95208920, 97565966, 95208366, 95208320, 95213012, 95219246, 95219352, 95220042, 95209230, 95216025, 95206937, 95209011, 95216031, 95214609, 95202690, 95215844, 95218385], "D": [95208553, 95206064, 95205170, 97565921, 95205237, 95202655, 95224583, 95213640, 95216224, 95211198, 95204449, 95212306, 95215958, 95200930, 95207117, 95208215, 95216892, 95212972, 95215071], "C": [95197013, 95198163, 95199698, 97565869, 95200959, 95198168, 95198409, 95198669, 95209890, 95204911, 95197315, 95202373, 95200953, 95202547, 95204796, 95194169, 95198706, 95205881, 95210665], "B": [95195119, 95195489, 95196116, 97565818, 95196356, 95194999, 95195326, 95195742, 95196929, 95195601, 95195544, 95196763, 95197327, 95194053, 95194687, 95199867, 95195154, 95196136, 95196683], "A": [95193928, 95194100, 95194842, 97565779, 95194326, 95193977, 95194039, 95194134, 95194416, 95194244, 95194071, 95194430, 95194685, 95193941, 95193947, 95197083, 95194045, 95194254, 95194714]}, "name": "D. String Deletion", "statement": "You have a string s consisting of n characters. Each character is either\r\nor .You can perform operations on the string. Each operation consists of\r\ntwo steps: select an integer i from 1 to the length of the string s,\r\nthen delete the character s_i (the string length gets reduced by 1, the\r\nindices of characters to the right of the deleted one also get reduced\r\nby 1); if the string s is not empty, delete the maximum length prefix\r\nconsisting of the same characters (the indices of the remaining\r\ncharacters and the string length get reduced by the length of the\r\ndeleted prefix). Note that both steps are mandatory in each operation,\r\nand their order cannot be changed.For example, if you have a string s =\r\n, the first operation can be one of the following: select i = 1: we\u2019ll\r\nget\r\nrightarrow\r\nrightarrow ; select i = 2: we\u2019ll get\r\nrightarrow\r\nrightarrow ; select i = 3: we\u2019ll get\r\nrightarrow\r\nrightarrow ; select i = 4: we\u2019ll get\r\nrightarrow\r\nrightarrow ; select i = 5: we\u2019ll get\r\nrightarrow\r\nrightarrow ; select i = 6: we\u2019ll get\r\nrightarrow\r\nrightarrow . You finish performing operations when the string s becomes\r\nempty. What is the maximum number of operations you can perform?\r\n", "solutions": ["#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned ll\n#define uint unsigned\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define IT iterator\n#define PB push_back\n#define fi first\n#define se second\n#define For(i,j,k) for (int i=(int)(j);i<=(int)(k);i++)\n#define Rep(i,j,k) for (int i=(int)(j);i>=(int)(k);i--)\n#define CLR(a,v) memset(a,v,sizeof(a));\n#define CPY(a,b) memcpy(a,b,sizeof(a));\n#define debug puts(\"wzpakking\")\n#define y1 ysghysgsygsh\nusing namespace std;\nchar s[200005];\nint q[200005],n;\nint rem[200005];\nbool check(int v){\n\tint p=1;\n\tFor(i,1,*q) rem[i]=q[i]-(i<=v);\n\tFor(i,1,v-1){\n\t\tp=max(p,i);\n\t\tfor (;p<=*q&&!rem[p];++p);\n\t\tif (p>*q) return 0;\n\t\t--rem[p];\n\t}\n\treturn 1;\n}\nvoid solve(){\n\tscanf(\"%d\\n%s\",&n,s+1);\n\t//n=strlen(s+1);\n\tq[0]=1; q[1]=1;\n\tFor(i,2,n)\n\t\tif (s[i]==s[i-1])\n\t\t\t++q[*q];\n\t\telse q[++*q]=1;\n\t//For(i,1,*q) cout<<q[i]<<endl;\n\tint l=1,r=*q,ans=-1;\n\twhile (l<=r){\n\t\tint mid=(l+r)/2;\n\t\tif (check(mid))\n\t\t\tans=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\tcout<<ans<<endl;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile (T--) solve();\n}"], "input": "", "output": "", "tags": ["binary search", "data structures", "greedy", "two pointers"], "dificulty": "1700", "interactive": false}