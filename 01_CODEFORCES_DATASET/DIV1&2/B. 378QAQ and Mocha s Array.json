{
    "link": "https://codeforces.com//contest/1975/problem/B",
    "problemId": "2665473",
    "problem_idx": "B",
    "shortId": "1975B",
    "contest_number": "1975",
    "problem_submissions": {
        "H": [
            262631844,
            262612241,
            262600659,
            262612635,
            263096548
        ],
        "G": [
            262620370,
            262584629,
            262630306,
            262578664,
            262622745,
            262588918,
            262593694,
            262594206,
            262595918,
            262599422,
            262708940,
            262706456,
            262598241,
            262653444,
            262620831,
            262602673,
            262607334,
            262630272,
            262607273,
            262706071,
            262602704,
            262606536,
            262606903,
            262607812,
            263091775,
            263089587,
            263088604,
            263088409,
            263086834,
            263086045,
            262606154,
            264861303,
            262776553,
            262774627,
            262774590,
            262661298,
            262661024,
            262660704,
            262660316,
            262660273,
            262649420,
            262647737,
            262637294,
            262637274,
            262636778,
            262636749,
            262636610,
            262628729,
            262609429
        ],
        "E": [
            262558741,
            262555523,
            262542791,
            262569978,
            262560342,
            262572286,
            262561563,
            262558869,
            262555295,
            262569100,
            262560726,
            262553867,
            262556464,
            262558648,
            262561133,
            262565554,
            262576529,
            262575502,
            262635435,
            262635401,
            262635086,
            262635019,
            262630627,
            262630590,
            262570080
        ],
        "F": [
            262544594,
            262562050,
            262557811,
            262552279,
            262571108,
            262585701,
            262572669,
            262581085,
            262582375,
            262578636,
            262570215,
            262564737,
            262572783,
            262580057,
            262586122,
            262583527,
            262590488,
            262590492,
            262629974,
            262593633
        ],
        "D": [
            262526751,
            262533906,
            262549799,
            262548001,
            262535765,
            262555432,
            262532809,
            262542647,
            262536556,
            262547635,
            262538823,
            262574019,
            262544846,
            262547400,
            262544181,
            262539052,
            262538393,
            262538893,
            262629935,
            262543856
        ],
        "A": [
            262522755,
            262521103,
            262521181,
            262521345,
            262530553,
            262521158,
            262521224,
            262521209,
            262523388,
            262521604,
            262521957,
            262521117,
            262521171,
            262521739,
            262524060,
            262521821,
            262521219,
            262521958
        ],
        "C": [
            262522159,
            262524942,
            262525029,
            262526905,
            262542130,
            262526806,
            262529464,
            262528086,
            262531414,
            262526373,
            262530226,
            262525393,
            262531728,
            262530061,
            262528640,
            262528306,
            262542306,
            262526711
        ],
        "B": [
            262521205,
            262521505,
            262522451,
            262522658,
            262534024,
            262523709,
            262523854,
            262522613,
            262526293,
            262523579,
            262524186,
            262521924,
            262522192,
            262523093,
            262522741,
            262523954,
            262521898,
            262521340
        ],
        "I": []
    },
    "editorial_link": "https://codeforces.com//blog/entry/129801",
    "editorial": "SolutionRead the hints.Suppose the minimum element of is . Then we\r\niterate over , if an element is not divisible by , then we add it to (\r\nis initially empty).If is still empty after iterating , the answer is\r\nyes. If isn\u00e2\u0080\u0099t empty, we check whether all elements of are divisible by\r\nthe minimum element of . If so, the answer is yes. Otherwise, the answer\r\nis no.\r\n",
    "name": "B. 378QAQ and Mocha s Array",
    "statement": "Mocha likes arrays, so before her departure, 378QAQ gave her an array a\r\nconsisting of n positive integers as a gift.Mocha thinks that a is if\r\nthere exist two numbers i and j (1\r\nleq i,j\r\nleq n, i\r\nneq j) such that for all k (1\r\nleq k\r\nleq n), a_k is divisible^\r\ndagger by either a_i or a_j.Determine whether a is beautiful.^\r\ndagger x is divisible by y if there exists an integer z such that x = y\r\ncdot z.\r\n",
    "solutions": [
        "/** *    author:  tourist *    created: 25.05.2024 10:28:35**/#include <bits/stdc++.h>\u00a0using namespace std;\u00a0#ifdef LOCAL#include \"algo/debug.h\"#else#define debug(...) 42#endif\u00a0int main() {  ios::sync_with_stdio(false);  cin.tie(0);  int tt;  cin >> tt;  while (tt--) {    int n;    cin >> n;    vector<int> a(n);    for (int i = 0; i < n; i++) {      cin >> a[i];    }    sort(a.begin(), a.end());    int g = 0;    for (int i = 1; i < n; i++) {      if (a[i] % a[0] != 0) {        g = __gcd(g, a[i]);      }    }    bool found = false;    for (int i = 1; i < n; i++) {      if (g % a[i] == 0) {        found = true;        break;      }    }    cout << (found ? \"YES\" : \"NO\") << '\\n';  }  return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "math",
        "sortings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\B. 378QAQ and Mocha s Array.json"
}