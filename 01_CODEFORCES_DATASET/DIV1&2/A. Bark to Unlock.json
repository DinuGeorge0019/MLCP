{
    "link": "https://codeforces.com//contest/868/problem/A",
    "problemId": "126216",
    "problem_idx": "A",
    "shortId": "868A",
    "contest_number": "868",
    "problem_submissions": {
        "E": [
            31023051,
            31024523,
            31024148,
            31025167,
            31018209,
            31025864,
            31026369,
            31028260,
            31026372,
            31044397,
            31026066,
            31027557,
            31023308,
            31023861,
            31019541,
            31162068,
            31021787
        ],
        "F": [
            31020755,
            31020638,
            33743391,
            31021116,
            31022470,
            31023238,
            31022737,
            31023926,
            31023102,
            31028638,
            31028134,
            31020706,
            31027648,
            31019840,
            31023078,
            31023660,
            31027919
        ],
        "D": [
            31018151,
            31017707,
            31016713,
            31018303,
            31025757,
            31018243,
            31018489,
            31024010,
            31018691,
            31020147,
            31017621,
            31017612,
            31016732,
            31017515,
            31015826,
            31017997,
            31021417
        ],
        "C": [
            31014273,
            31014407,
            31012209,
            31014307,
            31013815,
            31013945,
            31015314,
            31013335,
            31014790,
            31016275,
            31030598,
            31013440,
            31030706,
            31066551,
            31014026,
            31012823,
            31014457,
            31014258,
            31016540
        ],
        "B": [
            31013104,
            31012812,
            31013438,
            31013042,
            31012539,
            31026919,
            31016195,
            31015461,
            31013166,
            31014218,
            31022627,
            31012140,
            31012861,
            31016249,
            31011794,
            31012575,
            31013032,
            31014544
        ],
        "A": [
            31010698,
            31010763,
            31010903,
            31010896,
            31010747,
            31010833,
            31010957,
            31012028,
            31010858,
            31021512,
            31010696,
            31010727,
            31012054,
            31010635,
            31010757,
            31011798,
            31010661
        ],
        "G": [
            31179602
        ]
    },
    "name": "A. Bark to Unlock",
    "statement": "As technologies develop, manufacturers are making the process of\r\nunlocking a phone as user-friendly as possible. To unlock its new phone,\r\nArkady\u2019s pet dog Mu-mu has to bark the password once. The phone\r\nrepresents a password as a string of two lowercase English\r\nletters.Mu-mu\u2019s enemy Kashtanka wants to unlock Mu-mu\u2019s phone to steal\r\nsome sensible information, but it can only bark distinct words, each of\r\nwhich can be represented as a string of two lowercase English letters.\r\nKashtanka wants to bark several words (not necessarily distinct) one\r\nafter another to pronounce a string containing the password as a\r\nsubstring. Tell if it\u2019s possible to unlock the phone in this way, or\r\nnot.\r\n",
    "solutions": [
        "#include <cstdio>\n\nchar a[4], b[101][4];\n\nint main() {\n\tint i, j, n;\n\tscanf(\"%s%d\", a, &n);\n\tfor (i = 0; i < n; i++) scanf(\"%s\", b[i]);\n\tfor (i = 0; i < n; i++) if (b[i][0] == a[0] && b[i][1] == a[1]) {\n\t\tputs(\"YES\");\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < n; i++) for (j = 0; j < n; j++) if (b[i][0] == a[1] && b[j][1] == a[0]) {\n\t\tputs(\"YES\");\n\t\treturn 0;\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "strings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. Bark to Unlock.json",
    "editorial_link": "https://codeforces.com/blog/entry/55046",
    "editorial": "If the answer is \u00e2\u0080\u0099yes\u00e2\u0080\u0099, then the password is either one of the given\r\nstrings, or can be formed by taking the last letter and the first letter\r\nof some of the given strings (these strings can be the same). This can\r\nbe checked straightforwardly in time.\r\n"
}