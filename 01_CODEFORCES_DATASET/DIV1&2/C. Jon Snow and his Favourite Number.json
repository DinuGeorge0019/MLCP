{"link": "https://codeforces.com//contest/768/problem/C", "problemId": "94874", "problem_idx": "C", "shortId": "768C", "contest_number": "768", "problem_submissions": {"F": [24840431, 24838480, 24834630, 24841891, 24838353, 24840717, 24837763, 24842282, 24838721, 24833873, 24842120, 24844145, 24842096, 24840981, 24845191, 24842247, 24840284, 24847109, 24843919], "E": [24834774, 24835983, 24832451, 24837828, 24833805, 24837182, 24833920, 24836646, 24835033, 24838913, 24837846, 24833547, 24837106, 24837362, 24839266, 24837276, 24838051, 24835972, 24836022], "D": [24832202, 24833876, 24835915, 24835246, 24832704, 24834168, 24832774, 24838949, 24833061, 24836615, 24839525, 24834336, 24833791, 24835394, 24835786, 24835146, 24835911, 24837569, 24837832], "C": [24830784, 24831935, 24846692, 24833492, 24831356, 24831859, 24830894, 24833465, 24831521, 24835038, 24835013, 24830101, 24832003, 24831977, 24833696, 24832023, 24832927, 24833660, 24834203], "B": [24828716, 24830642, 24828869, 24830153, 24830045, 24829484, 24830872, 24829643, 24837759, 24831145, 24828453, 24830132, 24829454, 24830410, 24829830, 24830884, 24831500, 24831921], "A": [24825770, 24826388, 24825799, 24826247, 24825814, 24825782, 24825775, 24825815, 24827152, 24827361, 24826212, 24825822, 24826382, 24826002, 24825750, 24826264, 24826016, 24825780, 24828293], "G": [24850234, 25339793, 24854056, 24855563, 24855744]}, "name": "C. Jon Snow and his Favourite Number", "statement": "Jon Snow now has to fight with White Walkers. He has rangers, each of\r\nwhich has his own strength. Also Jon Snow has his favourite number .\r\nEach ranger can fight with a white walker only if the strength of the\r\nwhite walker equals his strength. He however thinks that his rangers are\r\nweak and need to improve. Jon now thinks that if he takes the bitwise\r\nXOR of strengths of some of rangers with his favourite number , he might\r\nget soldiers of high strength. So, he decided to do the following\r\noperation times: Arrange all the rangers in a straight line in the order\r\nof increasing strengths. Take the bitwise XOR (is written as ) of the\r\nstrength of each alternate ranger with and update it\u2019s strength.\r\nSuppose, Jon has rangers with strengths and he performs the operation\r\ntime with . He first arranges them in the order of their strengths, .\r\nThen he does the following: The strength of first ranger is updated to ,\r\ni.e. . The strength of second ranger remains the same, i.e. . The\r\nstrength of third ranger is updated to , i.e. . The strength of fourth\r\nranger remains the same, i.e. . The strength of fifth ranger is updated\r\nto , i.e. . The new strengths of the rangers are Now, Jon wants to know\r\nthe maximum and minimum strength of the rangers after performing the\r\nabove operations times. He wants your help for this task. Can you help\r\nhim?\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> pt;\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\nconst ld TAU=2*acos(-1);\nconst ld eps=1e-7;\nconst int inf=1e9+99;\nconst ll linf=1e18+88;\n\n\n\nint32_t main() {\n\tconst int N=1024;\n\tint n,k,x; scanf(\"%d%d%d\",&n,&k,&x);\n\tstatic int c1[N],c2[N];\n\tfor(;n--;) {\n\t\tint a; scanf(\"%d\",&a); ++c1[a];\n\t}\n\tfor(;k--;) {\n\t\tbool flip_next=1;\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tc2[i] += c1[i]>>1;\n\t\t\tc2[i^x] += c1[i]>>1;\n\t\t\tif(c1[i]&1) {\n\t\t\t\tif(flip_next) c2[i^x]++;\n\t\t\t\telse c2[i]++;\n\t\t\t\tflip_next = !flip_next;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<N;i++) c1[i]=c2[i], c2[i]=0;\n\t}\n\tint mn=N+7,mx=-1;\n\tfor(int i=0;i<N;i++) if(c1[i]) mx=i;\n\tfor(int i=N;--i>=0;) if(c1[i]) mn=i;\n\tprintf(\"%d %d\\n\",mx,mn);\n}\n\n\n"], "input": "", "output": "", "tags": ["brute force", "dp", "implementation", "sortings"], "dificulty": "1800", "interactive": false}