{
    "link": "https://codeforces.com//contest/1870/problem/A",
    "problemId": "2216414",
    "problem_idx": "A",
    "shortId": "1870A",
    "contest_number": "1870",
    "problem_submissions": {
        "G": [
            225207978,
            225118072,
            225116519,
            225114767,
            225113735,
            225113326,
            223895142,
            223905506,
            223908839,
            223914354,
            223924067,
            223915464,
            224102694,
            224102570,
            224101929,
            224101915,
            224101882,
            223930185,
            223922526,
            223898384,
            223902193
        ],
        "H": [
            223910262,
            223971766,
            225204927,
            223912817
        ],
        "F": [
            223881664,
            223880000,
            223885884,
            223900845,
            223885822,
            223925076,
            223908747,
            223887023,
            223881416,
            223893441,
            223967145,
            223892630,
            223898214,
            223897234,
            223895227,
            223893254,
            223897195,
            223887464,
            223885585,
            223897533
        ],
        "E": [
            223869750,
            223870667,
            223875420,
            223879930,
            223894576,
            223875622,
            223877104,
            223888049,
            223879090,
            223876643,
            223870896,
            223878535,
            223873841,
            223880057,
            223880667,
            223881985,
            223871304,
            223980583,
            223900716,
            223895756,
            223883035
        ],
        "D": [
            223864393,
            223860234,
            223865660,
            223863718,
            223865473,
            223859881,
            223865206,
            223867969,
            223868314,
            223865007,
            223866155,
            223863717,
            223863491,
            223869388,
            223869302,
            223866987,
            223863771,
            223868821,
            223873483,
            223869884
        ],
        "C": [
            223858926,
            223856692,
            223860376,
            223856772,
            223861967,
            223857013,
            223862311,
            223860027,
            223860530,
            223857444,
            223858871,
            223859210,
            223859070,
            223862641,
            223864669,
            223860558,
            223859030,
            223856443,
            223870325,
            223863825
        ],
        "B": [
            223855786,
            223853418,
            223854541,
            223852626,
            223857522,
            223852531,
            223856711,
            223853615,
            223855334,
            223852785,
            223853742,
            223853640,
            223854539,
            223856641,
            223856452,
            223856337,
            223854108,
            223864851,
            223860995,
            223858101
        ],
        "A": [
            223852532,
            223851971,
            223852416,
            223851983,
            223854260,
            223851952,
            223853042,
            223852087,
            223852502,
            223853463,
            223852096,
            223852189,
            223852238,
            223852875,
            223853328,
            223852660,
            223852270,
            223860422,
            223858579,
            223854841
        ]
    },
    "name": "A. MEXanized Array",
    "statement": "You are given three non-negative integers n, k, and x. Find the maximum\r\npossible sum of elements in an array consisting of non-negative\r\nintegers, which has n elements, its MEX is equal to k, and all its\r\nelements do not exceed x. If such an array does not exist, output -1.The\r\nMEX (minimum excluded) of an array is the smallest non-negative integer\r\nthat does not belong to the array. For instance: The MEX of [2,2,1] is\r\n0, because 0 does not belong to the array. The MEX of [3,1,0,1] is 2,\r\nbecause 0 and 1 belong to the array, but 2 does not. The MEX of\r\n[0,3,1,2] is 4, because 0, 1, 2 and 3 belong to the array, but 4 does\r\nnot.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define L(i, j, k) for(int i = (j); i <= (k); ++i)\n#define R(i, j, k) for(int i = (j); i >= (k); --i)\n#define ll long long \n#define vi vector < int > \n#define sz(a) ((int) (a).size())\n#define ll long long \n#define ull unsigned long long\n#define me(a, x) memset(a, x, sizeof(a)) \nusing namespace std;\nconst int N = 1e6 + 7;\nll n, k, x;\nvoid Main() {\n\tcin >> n >> k >> x;\n\tif(k > n) {\n\t\tcout << -1 << '\\n';\n\t} else if(k > x + 1) {\n\t\tcout << -1 << '\\n';\n\t} else {\n\t\tll sum = (ll) k * (k - 1) / 2;\n\t\tn -= k;\n\t\tsum += (k == x ? x - 1 : x) * n;\n\t\tcout << sum << '\\n';\n\t}\n}\nint main() {\n\tios :: sync_with_stdio(false);\n\tcin.tie(0); cout.tie(0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. MEXanized Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/120524",
    "editorial": "TutorialNote that if , then the answer is .Otherwise, there are two\r\ncases: If , then the suitable array looks like . If , then the suitable\r\narray looks like . In both cases, we can construct the array and\r\ncalculate its sum in linear time. The overall complexity is .\r\n"
}