{"link": "https://codeforces.com//contest/1017/problem/H", "problemId": "205998", "problem_idx": "H", "shortId": "1017H", "contest_number": "1017", "problem_submissions": {"D": [213438615, 41349796, 41350791, 41348185, 41349812, 41350101, 41348724, 41347389, 41349904, 41347605, 41349745, 41349033, 41348833, 41350403, 41348388, 41346916, 41354063, 41351152, 41351165, 41350393], "G": [41374563, 41365956, 41365630, 41370631, 41581755], "E": [41372644, 41354131, 41370166, 41371119, 41372376, 41372311, 41372287, 41351667, 41351074, 41355101, 41350783, 41352192, 41358773, 41351309, 41350915, 41353764, 41670429, 41352396, 41371198, 41367467, 41359456, 41372423, 41372409, 41364755, 41352601, 41351865, 41355587], "H": [41367702, 41388366, 41626780], "F": [41355954, 41350751, 41350606, 41351910, 41355898, 41353364, 41356617, 41361175, 41354830, 41361644, 41363928, 41363246, 41362644, 41355024, 41364885, 41350456, 41363913, 41365213, 41366266], "C": [41344757, 41346763, 41343411, 41343517, 41344074, 41345347, 41344535, 41344681, 41344025, 41345552, 41345435, 41344114, 41346166, 41344588, 41343025, 41345381, 41348981, 41347870, 41345665], "B": [41341663, 41342076, 41341369, 41340402, 41341632, 41341916, 41341844, 41341458, 41340722, 41342695, 41342729, 41341507, 41343151, 41342641, 41340890, 41341644, 41344184, 41342297, 41342415], "A": [41338985, 41339200, 41339204, 41344352, 41339618, 41339017, 41339766, 41339115, 41339233, 41339235, 41340222, 41339363, 41338992, 41339153, 41339052, 41339096, 41339145, 41339283, 41339775]}, "name": "H. The Films", "statement": "In \"\" world, there are m different film endings. Abendsen owns a storage\r\nand a shelf. At first, he has n ordered films on the shelf. In the i-th\r\nmonth he will do: Empty the storage. Put k_i\r\ncdot m films into the storage, k_i films for each ending. He will think\r\nabout a question: if he puts all the films from the shelf into the\r\nstorage, then randomly picks n films (from all the films in the storage)\r\nand rearranges them on the shelf, what is the probability that sequence\r\nof endings in [l_i, r_i] on the shelf will not be changed? Notice, he\r\njust thinks about this question, so the shelf will not actually be\r\nchanged.Answer all Abendsen\u2019s questions.Let the probability be fraction\r\nP_i. Let\u2019s say that the total number of ways to take n films from the\r\nstorage for i-th month is A_i, so P_i\r\ncdot A_i is always an integer. Print for each month P_i\r\ncdot A_i\r\npmod {998244353}.998244353 is a prime number and it is equal to 119\r\ncdot 2^{23} + 1.It is guaranteed that there will be only no more than\r\n100 different k values.\r\n", "solutions": ["#pragma GCC optimize (\"O3\")\n#pragma GCC target (\"sse4\")\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> cd;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\ntypedef pair<ld,ld> pd;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\ntypedef vector<cd> vcd;\n\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nconst int MOD = 998244353;\nconst ll INF = 1e18;\nconst int MX = 100001;\n\nll n,m,q, ans[MX];\nll fac[2*MX], ifac[2*MX];\nint e[MX], co[MX], special[MX];\nvi S;\n\nll po (ll b, ll p) { return !p?1:po(b*b%MOD,p/2)*(p&1?b:1)%MOD; }\nll inv (ll b) { return po(b,MOD-2); }\n\nll mul(const ll& a, const ll& b) {\n    return (a%MOD)*(b%MOD)%MOD;\n}\n\nll MUL(ll& a, const ll& b) { return a = mul(a,b); }\n\nvoid init() {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    cin >> n >> m >> q;\n    FOR(i,1,n+1) {\n        // e[i] = rand() % 300+1;\n        cin >> e[i];\n        co[e[i]] ++;\n    }\n    FOR(i,1,m+1) if ((ll)co[i]*co[i] > n) {\n        special[i] = 1;\n        S.pb(i);\n    }\n}\n\nvector<array<int,4>> v;\n\nbool cmp(array<int,4> a, array<int,4> b) {\n    if (a[0]/320 != b[0]/320) return a[0] < b[0];\n    return a[1] < b[1];\n}\n\nint tmp[MX], cur[MX];\nint l = 1, r = 0;\n\nvoid ad(int x, int y) {\n    if (!special[x]) {\n        if (y == 1) tmp[co[x]-cur[x]] ++;\n        else tmp[co[x]-cur[x]+1] --;\n    }\n    cur[x] += y;\n}\n\nvoid answer(array<int,4> a) {\n    while (l > a[0]) ad(e[--l],1);\n    while (r < a[1]) ad(e[++r],1);\n    while (l < a[0]) ad(e[l++],-1);\n    while (r > a[1]) ad(e[r--],-1);\n    \n    ans[a[3]] = 1;\n    for (int i = 1; i*i <= n; ++i) \n        MUL(ans[a[3]],po(i+a[2],tmp[i]));\n    \n    for (int i: S) \n        MUL(ans[a[3]],mul(fac[co[i]+a[2]],ifac[co[i]+a[2]-cur[i]]));\n}\n\nll zz[MX];\n\nvoid addFac() {\n    sort(all(v),[](array<int,4> a, array<int,4> b) { return a[2] < b[2]; });\n    for (int i = 0; i < sz(v); ) {\n        zz[1] = 1;\n        FOR(j,2,MX) zz[j] = mul(zz[j-1],m*v[i][2]+j-1);\n        int I = i;\n        while (i < sz(v) && v[i][2] == v[I][2]) {\n            MUL(ans[v[i][3]],zz[n-(v[i][1]-v[i][0])]);\n            i ++;\n        }\n    }\n}\n\nint main() {\n    init();\n    \n    fac[0] = ifac[0] = 1;\n    FOR(i,1,2*MX) {\n        fac[i] = mul(i,fac[i-1]);\n        ifac[i] = inv(fac[i]);\n    }\n    \n    F0R(i,q) {\n        int l,r,k; cin >> l >> r >> k;\n        // int l = rand() % n+1, r = rand() % n+1, k = rand() % m+1;\n        if (l > r) swap(l,r);\n        v.pb({l,r,k,i});\n    }\n    \n    sort(all(v),cmp);\n    for (auto a: v) answer(a);\n    addFac();\n    F0R(i,q) cout << ans[i] << \"\\n\";\n}\n\n/* Look for:\n* the exact constraints (multiple sets are too slow for n=10^6 :( ) \n* special cases (n=1?)\n* overflow (ll vs int?)\n* array bounds\n*/"], "input": "", "output": "", "tags": ["brute force"], "dificulty": "3300", "interactive": false}