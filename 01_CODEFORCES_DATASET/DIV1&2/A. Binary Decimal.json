{
    "link": "https://codeforces.com//contest/1530/problem/A",
    "problemId": "1049168",
    "problem_idx": "A",
    "shortId": "1530A",
    "contest_number": "1530",
    "problem_submissions": {
        "H": [
            122851665,
            122838743,
            122844195,
            122849012,
            122871696,
            122848567,
            122889728
        ],
        "G": [
            122840209,
            122852256,
            122900209,
            122846129,
            122844934,
            122847648,
            122853646,
            122874899,
            122880351,
            122921209
        ],
        "F": [
            122810446,
            122819713,
            122812617,
            122825773,
            122868869,
            122809297,
            122821188,
            122827035,
            122824965,
            122821818,
            122829815,
            122826847,
            122822005,
            122826789,
            122826175,
            122826918,
            122836373,
            122830797,
            122814894,
            122838442,
            122834199
        ],
        "E": [
            122803663,
            122805810,
            122805166,
            122812311,
            122817063,
            122814296,
            122807127,
            122808379,
            122800583,
            122808253,
            122808203,
            122811232,
            122807495,
            122807208,
            122811521,
            122828022,
            122805125,
            122810921
        ],
        "D": [
            122791676,
            122796247,
            122793005,
            122795921,
            122795213,
            122793368,
            122796651,
            122796980,
            122803859,
            122791210,
            122799331,
            122796501,
            122797048,
            122796533,
            122791355,
            122798720,
            122801973,
            122792843,
            122800740
        ],
        "C": [
            122785861,
            122787673,
            122786660,
            122785034,
            122784856,
            122787839,
            122786985,
            122784250,
            122795439,
            122782668,
            122786465,
            122789088,
            122786999,
            122788656,
            122784366,
            122787966,
            122789017,
            122785054,
            122790340
        ],
        "B": [
            122781549,
            122782427,
            122782526,
            122782097,
            122782078,
            122780831,
            122781690,
            122789087,
            122786285,
            122785455,
            122781801,
            122781479,
            122782615,
            122783296,
            122794583,
            122783767,
            122783971,
            122780469,
            122782275
        ],
        "A": [
            122775440,
            122775417,
            122775273,
            122775738,
            122775580,
            122775190,
            122775752,
            122790605,
            122781313,
            122775806,
            122775746,
            122775311,
            122776001,
            122775468,
            122776055,
            122775938,
            122777214,
            122775025,
            122775038
        ]
    },
    "name": "A. Binary Decimal",
    "statement": "Let\u2019s call a number a if it\u2019s a positive integer and all digits in its\r\ndecimal notation are either 0 or 1. For example, 1\r\n,010\r\n,111 is a binary decimal, while 10\r\n,201 and 787\r\n,788 are not.Given a number n, you are asked to represent n as a sum of\r\nsome (not necessarily distinct) binary decimals. Compute the smallest\r\nnumber of binary decimals required for that.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    while (t--) {\n        int n;\n        std::cin >> n;\n        \n        auto s = std::to_string(n);\n        \n        std::cout << (*std::max_element(s.begin(), s.end()) - '0') << \"\\n\";\n    }\n    \n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. Binary Decimal.json",
    "editorial_link": "https://codeforces.com//blog/entry/92951",
    "editorial": "Let be the largest decimal digit of .Note that we need at least binary\r\ndecimals to represent as a sum. Indeed, if we only use binary decimals,\r\nno digit of the sum will ever exceed . However, we need at least one\r\ndigit equal to .At the same time, it is easy to construct an answer with\r\nexactly terms. Start with all terms equal to , and consider each digit\r\nseparately. Let the -th digit of be . Pick any terms out of the terms we\r\nhave, and add to their -th digits.Therefore, the answer is .\r\n"
}