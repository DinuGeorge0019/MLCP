{"link": "https://codeforces.com//contest/1307/problem/G", "problemId": "542683", "problem_idx": "G", "shortId": "1307G", "contest_number": "1307", "problem_submissions": {"D": [71334675, 71329379, 71297375, 71300630, 71300597, 71296525, 71299736, 71299787, 71299649, 71294218, 71299266, 71353437, 71301135, 71298819, 71297533, 71302173, 71301113, 71306340, 71311289, 71303681, 71296481], "F": [71318320, 71328004, 71328410, 71313540, 71342732, 71342701, 71342679, 71342641, 71378556, 71386768, 71330817, 71353605, 71341156, 71340667, 71331133, 71325872, 71974189], "E": [71311504, 71318452, 71321704, 71329781, 71312470, 71310373, 71310234, 71311741, 71326064, 71325657, 71312968, 71315289, 71309289, 71345858, 71345831, 71345723, 71345591, 71345520, 71345206, 71344772, 71344661, 71308214, 71331493, 71309218, 71315974, 71328300, 71317669, 71329605], "G": [71303096, 71336439, 71307493, 71308346, 71320475, 71303320, 71313925, 71322572, 71322223, 71309226, 71311369, 71356337, 71319400, 71321748, 71313979, 71354003, 71316843, 71327328, 71316390, 71329594, 71321365], "C": [71291268, 71289526, 71293976, 71293545, 71288006, 71294250, 71293163, 71291197, 71300886, 71294829, 71291105, 71294718, 71292675, 71291425, 71296070, 71290915, 71292479, 71297176, 71298646, 71291499], "B": [71289205, 71287726, 71290885, 71290721, 71289353, 71290602, 71289374, 71288121, 71299427, 71291607, 71289046, 71290292, 71334215, 71288723, 71290619, 71288909, 71289266, 71289248, 71288946, 71288924], "A": [71287300, 71287160, 71287363, 71290273, 71290150, 71287273, 71287420, 71292915, 71295372, 71287966, 71287342, 71287721, 71287194, 71287212, 71288221, 71287271, 71287331, 71287368, 71290172, 71287362]}, "name": "G. Cow and Exercise", "statement": "Farmer John is obsessed with making Bessie exercise more!Bessie is out\r\ngrazing on the farm, which consists of n fields connected by m directed\r\nroads. Each road takes some time w_i to cross. She is currently at field\r\n1 and will return to her home at field n at the end of the day.Farmer\r\nJohn has plans to increase the time it takes to cross certain roads. He\r\ncan increase the time it takes to cross each road by a nonnegative\r\namount, but the total increase cannot exceed x_i for the i-th plan.\r\nDetermine the maximum he can make the shortest path from 1 to n for each\r\nof the q independent plans.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef double db;\nmt19937 mrand(random_device{}()); \nconst ll mod=1000000007;\nint rnd(int x) { return mrand() % x;}\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nvector<pair<int,ll>> ans;\n\n\nnamespace mincost {\n\tconst int V=250,E=40000,inf=0x20202020,_inf=0x20;\n\tconst ll inff=1ll<<60;\n\tll dis[V],c[E],cost;\n\tint q[V*30],vis[V],fst[V],pre[V],nxt[E],y[E],f[E],S,T,flow,tot,tn;\n\tvoid init(int s,int t,int Tn) {\n\t\ttot=1; tn=Tn;\n\t\trep(i,0,tn) fst[i]=0;\n\t\tS=s;T=t;\n\t}\n\tvoid add(int u,int v,int ff,ll cc) {\n\t\ttot++;y[tot]=v;nxt[tot]=fst[u];f[tot]=ff;c[tot]=cc;fst[u]=tot;\n\t\ttot++;y[tot]=u;nxt[tot]=fst[v];f[tot]=0;c[tot]=-cc;fst[v]=tot;\n\t}\n\tbool spfa() {\n\t\trep(i,0,tn) dis[i]=inff,vis[i]=0,pre[i]=0;\n\t\tdis[S]=0;q[0]=S;vis[S]=1;\n\t\tint t=1;\n\t\trep(i,0,t) {\n\t\t\tint u=q[i];\n\t\t\tfor (int j=fst[u];j;j=nxt[j]) {\n\t\t\t\tint v=y[j];\n\t\t\t\tif (f[j]&&dis[v]>dis[u]+c[j]) {\n\t\t\t\t\tdis[v]=dis[u]+c[j];\n\t\t\t\t\tpre[v]=j;\n\t\t\t\t\tif (!vis[v]) vis[v]=1,q[t++]=v;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvis[u]=0;\n\t\t}\n\t\treturn dis[T]!=inff;\n\t}\n\tvoid augment() {\n\t\tint p=T,_f=inf;\n\t\twhile (pre[p]) _f=min(_f,f[pre[p]]),p=y[pre[p]^1];\n\t\tflow+=_f;cost+=_f*dis[T];\n\t\tp=T;\n\t\twhile (pre[p]) f[pre[p]]-=_f,f[pre[p]^1]+=_f,p=y[pre[p]^1];\n\t\tans.pb(mp(flow,cost));\n\t}\n\tvoid solve() {\n\t\tflow=0,cost=0;\n\t\twhile (spfa()) augment();\n\t}\n}\n\nint n,m,u,v,w,q,x;\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tmincost::init(0,n-1,n);\n\trep(i,0,m) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tmincost::add(u-1,v-1,1,w);\n\t}\n\tmincost::solve();\n\tscanf(\"%d\",&q);\n\trep(i,0,q) {\n\t\tscanf(\"%d\",&x);\n\t\tdb r=1e30;\n\t\tfor (auto y:ans) r=min(r,1.*(y.se+x)/y.fi);\n\t\tprintf(\"%.10f\\n\",r);\n\t}\n}\n"], "input": "", "output": "", "tags": ["flows", "graphs", "shortest paths"], "dificulty": "3100", "interactive": false}