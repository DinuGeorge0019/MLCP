{
    "link": "https://codeforces.com//contest/768/problem/B",
    "problemId": "94873",
    "problem_idx": "B",
    "shortId": "768B",
    "contest_number": "768",
    "problem_submissions": {
        "F": [
            24840431,
            24838480,
            24834630,
            24841891,
            24838353,
            24840717,
            24837763,
            24842282,
            24838721,
            24833873,
            24842120,
            24844145,
            24842096,
            24840981,
            24845191,
            24842247,
            24840284,
            24847109,
            24843919
        ],
        "E": [
            24834774,
            24835983,
            24832451,
            24837828,
            24833805,
            24837182,
            24833920,
            24836646,
            24835033,
            24838913,
            24837846,
            24833547,
            24837106,
            24837362,
            24839266,
            24837276,
            24838051,
            24835972,
            24836022
        ],
        "D": [
            24832202,
            24833876,
            24835915,
            24835246,
            24832704,
            24834168,
            24832774,
            24838949,
            24833061,
            24836615,
            24839525,
            24834336,
            24833791,
            24835394,
            24835786,
            24835146,
            24835911,
            24837569,
            24837832
        ],
        "C": [
            24830784,
            24831935,
            24846692,
            24833492,
            24831356,
            24831859,
            24830894,
            24833465,
            24831521,
            24835038,
            24835013,
            24830101,
            24832003,
            24831977,
            24833696,
            24832023,
            24832927,
            24833660,
            24834203
        ],
        "B": [
            24828716,
            24830642,
            24828869,
            24830153,
            24830045,
            24829484,
            24830872,
            24829643,
            24837759,
            24831145,
            24828453,
            24830132,
            24829454,
            24830410,
            24829830,
            24830884,
            24831500,
            24831921
        ],
        "A": [
            24825770,
            24826388,
            24825799,
            24826247,
            24825814,
            24825782,
            24825775,
            24825815,
            24827152,
            24827361,
            24826212,
            24825822,
            24826382,
            24826002,
            24825750,
            24826264,
            24826016,
            24825780,
            24828293
        ],
        "G": [
            24850234,
            25339793,
            24854056,
            24855563,
            24855744
        ]
    },
    "name": "B. Code For 1",
    "statement": "Jon fought bravely to rescue the wildlings who were attacked by the\r\nwhite-walkers at Hardhome. On his arrival, Sam tells him that he wants\r\nto go to Oldtown to train at the Citadel to become a maester, so he can\r\nreturn and take the deceased Aemon’s place as maester of Castle Black.\r\nJon agrees to Sam’s proposal and Sam sets off his journey to the\r\nCitadel. However becoming a trainee at the Citadel is not a cakewalk and\r\nhence the maesters at the Citadel gave Sam a problem to test his\r\neligibility. Initially Sam has a list with a single element . Then he\r\nhas to perform certain operations on this list. In each operation Sam\r\nmust remove any element , such that , from the list and insert at the\r\nsame position , , sequentially. He must continue with these operations\r\nuntil all the elements in the list are either or .Now the masters want\r\nthe total number of s in the range to (-indexed). Sam wants to become a\r\nmaester but unfortunately he cannot solve this problem. Can you help Sam\r\nto pass the eligibility test?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> pt;\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\nconst ld TAU=2*acos(-1);\nconst ld eps=1e-7;\nconst int inf=1e9+99;\nconst ll linf=1e18+88;\n\n\n\nint32_t main() {\n\tll n,L,R; cin>>n>>L>>R;\n\tint Z=0;\n\tvector<int> bits;\n\tfor(;n;) {\n\t\tbits.pb(n&1);\n\t\tn/=2;\n\t}\n\treverse(bits.begin(),bits.end());\n\tfor(;bits.size();) {\n\t\tn=n*2+bits.back();\n\t\tbits.pop_back();\n\t}\n\tfor(int i=L;i<=R;i++) {\n\t\tint j=(i & (i-1));\n\t\tint k=i^j;\n\t\t// cerr<<i<<\" gives \"<<k<<endl;\n\t\tif(n&k) ++Z;\n\t}\n\tcout<<Z<<endl;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\B. Code For 1.json",
    "editorial_link": "https://codeforces.com//blog/entry/50550",
    "editorial": "It is easy to see that the total number\nof elements in the final list will be . The problem can be solved by\nlocating each element in the list and checking whether it is .The\nelement can be located in by using Divide and Conquer strategy. Answer\nis the total number of all such elements which equal . Complexity : Code\n",
    "hint": []
}