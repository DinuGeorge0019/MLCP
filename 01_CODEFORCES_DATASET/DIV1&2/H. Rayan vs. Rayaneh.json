{
    "link": "https://codeforces.com//contest/2034/problem/H",
    "problemId": "3057444",
    "problem_idx": "H",
    "shortId": "2034H",
    "contest_number": "2034",
    "problem_submissions": {
        "G2": [
            294090902,
            294102835,
            294091710
        ],
        "H": [
            294074360,
            294061476,
            294070650,
            294080097,
            294083247,
            294085834,
            294087678,
            294090336,
            294084822,
            294087654,
            294090587,
            294104472,
            294104397,
            294104185,
            294103049,
            294058057,
            294072183,
            294081941,
            294086147,
            294091448
        ],
        "G1": [
            294068700,
            294089598,
            294090555,
            294512628,
            294279844,
            294078743,
            294092614,
            294083324,
            294137051,
            298736856
        ],
        "F2": [
            294044355,
            294048880,
            294057967,
            294058547,
            294044212,
            294052710,
            294062635,
            294059190,
            294064262,
            294068869,
            294068913,
            294056682,
            294087439,
            294054148,
            294055470,
            294067548,
            294048518,
            294098694,
            297729208
        ],
        "F1": [
            294044201,
            294045676,
            294057746,
            294058488,
            294044581,
            294052242,
            294063014,
            294059348,
            294064621,
            294068676,
            294069032,
            294056298,
            294079209,
            294055715,
            294050068,
            294055587,
            294059717,
            294048439,
            294065367,
            294063971
        ],
        "E": [
            294039732,
            294035256,
            294043120,
            294044445,
            294061596,
            294042263,
            294051208,
            294051638,
            294059206,
            294057047,
            294047623,
            294072917,
            294043657,
            294040686,
            294046402,
            294070560,
            294044216,
            294048932,
            294047270
        ],
        "D": [
            294029209,
            294029423,
            294031077,
            294032177,
            294053262,
            294029511,
            294040505,
            294041118,
            294048071,
            294036073,
            294034324,
            294064606,
            294034084,
            294023836,
            294028591,
            294031360,
            294038809,
            294039055
        ],
        "C": [
            294019511,
            294017117,
            294018450,
            294020877,
            294023563,
            294033582,
            294025662,
            294021753,
            294020563,
            294027112,
            294020897,
            294016537,
            294062723,
            294021341,
            294029864,
            294018381,
            294021917,
            294017733,
            294050791,
            294028560
        ],
        "B": [
            294013321,
            294006563,
            294009984,
            294010387,
            294010473,
            294013337,
            294026398,
            294010402,
            294011621,
            294010156,
            294007642,
            294050334,
            294011602,
            294008120,
            294012362,
            294012172,
            294084096,
            294006809,
            294008731
        ],
        "A": [
            294004839,
            294004703,
            294005425,
            294005031,
            294006081,
            294004631,
            294006317,
            294005105,
            294006032,
            294005086,
            294004777,
            294047604,
            294005991,
            294004926,
            294006968,
            294005489,
            294006094,
            294004648,
            294005025
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/136579",
    "editorial": "Solution Step 1:\nAccording to B zoutâs Identity, we can compute and all its multipliers\nas an integer linear combination of . Step 2: A set {} is good (integer\nlinearly independent) if for every , {}. Step 3: A set {} is good if and\nonly if there exists a set {} such that for and . Step 4: The set {} can\nbe identified by determining {}. Assume , where and is prime. Step 5:\nLet Then {} is good if and only if and for every . Step 6: The answer is\na singleton if, for every pair of numbers and in the array, or . Since\nthe numbers are distinct, a good subset {} can always be found by\nsearching the first elements. Step 7: Define (count multipliers of ) as\nthe number of such that . This can be computed in . Step 8: A\ncorresponding set {} exists for a set {} if and only if for all . Step\n9: Iterate over all valid sets of the form {}, and check if a\ncorresponding {} exists. Note that since a good subset {} is found using\nanother method. Step 10: We know and also as Step 11: There are numbers\nin the form , where denotes the number of primes in the range . This\ncount is . Step 12: The value of is at most 6 (denoted as ), as and Step\n13: We can determine {} from {} in . The total time complexity is\n",
    "name": "H. Rayan vs. Rayaneh",
    "statement": "Rayan makes his final efforts to win Reyhaneh’s heart by claiming he is\r\nstronger than Rayaneh (i.e., computer in Persian). To test this,\r\nReyhaneh asks Khwarizmi for help. Khwarizmi explains that a set is if no\r\nelement in the set can be written as an integer linear combination of\r\nthe others. Rayan is given a set of integers each time and must identify\r\none of the largest possible integer linearly independent subsets.Note\r\nthat a single element is always considered an integer linearly\r\nindependent subset.An of a_1,\r\nldots, a_k is any sum of the form c_1\r\ncdot a_1 + c_2\r\ncdot a_2 +\r\nldots + c_k\r\ncdot a_k where c_1, c_2,\r\nldots, c_k are integers (which may be zero, positive, or negative).\r\n",
    "solutions": [
        "#include<bits/stdc++.h>#define L(i, j, k) for(int i = (j); i <= (k); ++i)#define R(i, j, k) for(int i = (j); i >= (k); --i)#define ll long long #define sz(a) ((int) (a).size())#define pb emplace_back#define me(a, x) memset(a, x, sizeof(a))#define vi vector<int>#define ull unsigned long long#define i128 __int128using namespace std;const int N = 1e6 + 7, mod = 998244353;const int V = 1e5;bool Prime[N];int p[N], tot;int mu[N];vi com[N];void init(int x) {\tL(i, 2, x) Prime[i] = 1;\tL(i, 2, x) {\t\tif(Prime[i]) {\t\t\tp[++tot] = i;\t\t\tL(j, 2, x / i) \t\t\t\tPrime[i * j] = 0;\t\t\t\tL(j, 1, x / i) {\t\t\t\tcom[i * j].pb(i);\t\t\t}\t\t}\t}\tmu[1] = 1;\tL(i, 1, x) \t\tL(j, 2, x / i)\t\t\tmu[i * j] -= mu[i];}int ans;int n;int a[N];int mut[N];vi tmp;int cur;bool vis[N];bool check(int x, int p) {\tif(x * p > V) {\t\tif(mut[x]) return 1;\t\telse return 0;\t}\tif(mut[x] != mut[x * p]) return 1;\telse return 0;}int get(int x, int p) {\tL(i, 1, n) if(a[i] % x == 0 && a[i] % (x * p) != 0) return a[i];\treturn -1;}void Main() {\tans = 0;\tcin >> n;\tL(i, 1, n) cin >> a[i];\tsort(a + 1, a + n + 1);\tL(i, 0, V) mut[i] = 0, vis[i] = 1;\tL(i, 1, n) vis[a[i]] = 1;\tL(i, 1, n) mut[a[i]] = 1;\tL(i, 1, tot) R(j, V / p[i], 1) mut[j] += mut[j * p[i]];\tans = 1;\tL(i, 1, n - 1) if(a[i + 1] % a[i]) ans = 2;\ttmp.clear();\tL(i, 1, V) if(mu[i] && sz(com[i]) >= 2) {\t\tL(m, 1, V / i) if(mut[i * m]) {\t\t\tif(sz(com[i]) <= ans - 1) break;\t\t\tL(j, 1, com[i][0] - 1) {\t\t\t\tif(!check(i * m, j))continue;\t\t\t\tint win = 1;\t\t\t\tfor(auto k : com[i])\t\t\t\t\tif(!check(i / k * j * m, k)) {\t\t\t\t\t\twin = 0;\t\t\t\t\t\tbreak;\t\t\t\t\t}\t\t\t\tif(win) {\t\t\t\t\tans = max(ans, sz(com[i]) + 1);\t\t\t\t\ttmp.clear();\t\t\t\t\ttmp.pb(get(i * m, j));\t\t\t\t\tfor(auto k : com[i]) tmp.pb(get(i / k * j * m, k));\t\t\t\t\tbreak;\t\t\t\t}\t\t\t}\t\t} \t}\tif(ans == 1) {\t\tcout << \"1\\n\" << a[1] << '\\n';\t} else if(ans == 2) {\t\tcout << \"2\\n\";\t\tL(i, 1, n - 1) if(a[i + 1] % a[i]) {\t\t\tcout << a[i] << ' ' << a[i + 1] << '\\n';\t\t\tbreak;\t\t}\t} else {\t\tcout << sz(tmp) << '\\n';\t\tfor(auto u : tmp) {\t\t\tcout << u << ' ';\t\t}\t\tcout << '\\n';\t} }int main() {\tios :: sync_with_stdio(false);\tcin.tie(0); cout.tie(0);\tinit(1e5);\tint t; cin >> t; while(t--) Main();\treturn 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "number theory"
    ],
    "dificulty": "3300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\H. Rayan vs. Rayaneh.json",
    "hint": []
}