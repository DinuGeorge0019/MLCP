{
    "link": "https://codeforces.com//contest/1842/problem/C",
    "problemId": "1978967",
    "problem_idx": "C",
    "shortId": "1842C",
    "contest_number": "1842",
    "problem_submissions": {
        "H": [
            210909272,
            210915649,
            210920105,
            210920155,
            210922877,
            210917228,
            210922837,
            210930795,
            210943236,
            210937664,
            210940497,
            210923705,
            210946319,
            210934622,
            210945105,
            210899880,
            210946698,
            210939780,
            210945932
        ],
        "F": [
            210904139,
            210906080,
            210912565,
            210912372,
            210898025,
            210899929,
            210907320,
            210916813,
            210914105,
            210920055,
            210921458,
            210913885,
            210930158,
            210926455,
            210915591,
            210926376,
            210920616,
            210915480,
            210926627
        ],
        "E": [
            210900474,
            210894310,
            210898608,
            210904065,
            210915135,
            210928274,
            210898671,
            210908613,
            210902774,
            210908660,
            210907798,
            210940198,
            210905531,
            210907005,
            210910569,
            210945488,
            210908738,
            210905745,
            210907496
        ],
        "D": [
            210896488,
            210888362,
            210895704,
            210886302,
            210889254,
            210887549,
            210895428,
            210893212,
            210903157,
            210896694,
            210890657,
            210891182,
            210892762,
            210896576,
            210915222,
            210891979,
            210892349,
            210897573
        ],
        "G": [
            210891898,
            210900879,
            210908657,
            210918356,
            210923373,
            210939093,
            210921066,
            210918175,
            210911260,
            210924814,
            210932494,
            210913130,
            210941401,
            210927457,
            210933616,
            210927314,
            210931000,
            210936010
        ],
        "C": [
            210877958,
            210881836,
            210878997,
            210877037,
            210879744,
            210878770,
            210882382,
            210884108,
            210887371,
            210884900,
            210892630,
            210896219,
            210883482,
            210884636,
            210910637,
            210882729,
            210933971,
            210885406
        ],
        "A": [
            210875095,
            210875812,
            210874424,
            210888796,
            210874470,
            210876122,
            210874664,
            210877287,
            210875659,
            210882217,
            210874539,
            210875197,
            210874805,
            210874426,
            210902716,
            210874934,
            210945780,
            210885821
        ],
        "B": [
            210874375,
            210878347,
            210876059,
            210890061,
            210876166,
            210875757,
            210877955,
            210879984,
            210877325,
            210880724,
            210876899,
            210877184,
            210877441,
            210885377,
            210916237,
            210877578,
            210940672,
            210885692
        ],
        "I": [
            210953525,
            211184344,
            211107115
        ]
    },
    "name": "C. Tenzing and Balls",
    "statement": "Tenzing has n balls arranged in a line. The color of the i-th ball from\r\nthe left is a_i.Tenzing can do the following operation any number of\r\ntimes: select i and j such that 1\r\nleq i < j\r\nleq |a| and a_i=a_j, remove a_i,a_{i+1},\r\nldots,a_j from the array (and decrease the indices of all elements to\r\nthe right of a_j by j-i+1). Tenzing wants to know the maximum number of\r\nballs he can remove.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 24.06.2023 10:08:39       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    const int inf = (int) 1e9;\n    vector<int> dp(n + 1, -inf);\n    dp[0] = 0;\n    for (int i = 0; i < n; i++) {\n      int v = dp[a[i]];\n      dp[a[i]] = max(dp[a[i]], dp[0] - i);\n      dp[0] = max(dp[0], v + i + 1);\n    }\n    cout << dp[0] << '\\n';\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\C. Tenzing and Balls.json",
    "editorial_link": "https://codeforces.com//blog/entry/117606",
    "editorial": "TutorialLet us write down the original index of each range we\r\ndelete.Firstly, it is impossible to delete ranges and where .Secondly,\r\nif we delete ranges and where , we must have deleted range before\r\ndeleting range . Yet, the effect of deleting range and then is the same\r\nas only deleting .Therefore, we can assume that in an optimal solution,\r\nthe ranges we delete are all disjoint. Therefore, we want to find some\r\ndisjoint range such that and is maximized.We can write a DP. denotes the\r\nminimum number of points we do not delete when considering the subarray\r\n. We have .This dp can be calculated in since we can store for each what\r\nthe minimum which satisfy .\r\n",
    "hint": []
}