{"link": "https://codeforces.com//contest/1214/problem/F", "problemId": "403809", "problem_idx": "F", "shortId": "1214F", "contest_number": "1214", "problem_submissions": {"G": [60015427, 60116387, 60017546, 60017495, 60020107, 60006609, 60352777, 60002997, 60009463, 60011243], "H": [60007228, 60007997, 60003236, 60009685, 60010066, 60011259, 60011282, 60010896, 60009334, 60014724, 60008843, 60014112, 60047947, 60007110, 60062101, 60075338], "F": [59997972, 59999955, 60011529, 60001435, 59997615, 60004519, 60003172, 60003385, 60014786, 60014588, 60009696, 60014299, 60009888, 60047758, 60003766, 59999966, 60002829, 60000810], "E": [59991588, 59992896, 59995584, 59992549, 59995811, 59995619, 59997178, 59995808, 59993809, 59992236, 59997269, 59997999, 59997711, 59993230, 59995040, 59995208, 59994715, 59993710, 59996947, 59988545], "D": [59988102, 59989658, 59989675, 59986719, 59990868, 59992865, 59990765, 59991828, 59988538, 59989605, 59989462, 59992741, 59999498, 59988876, 60017942, 59989391, 59991386, 59989567, 59990626, 60046854, 59985851], "C": [59984445, 59985337, 59984895, 59983957, 59985031, 59985481, 59984019, 59986980, 59984427, 59984066, 59984382, 59987002, 59982712, 59984754, 59984720, 59985711, 59985097, 59984496, 59982839, 59983656], "B": [59983717, 59984061, 59983687, 59983257, 59983195, 59983710, 59983075, 59985335, 59983154, 59983158, 59983522, 59985251, 59983191, 59983505, 59982763, 59984237, 59983907, 59983359, 59984573, 59982988], "A": [59982834, 59982716, 59982610, 59982747, 59982737, 59982711, 59982633, 59982961, 59982657, 59982623, 59982788, 59982811, 59983962, 59982673, 59985703, 59982891, 59983099, 59982727, 59985651, 59982701]}, "name": "F. Employment", "statement": "Two large companies \"Cecsi\" and \"Poca Pola\" are fighting against each\r\nother for a long time. In order to overcome their competitor, \"Poca\r\nPola\" started a super secret project, for which it has total n vacancies\r\nin all of their offices. After many tests and interviews n candidates\r\nwere selected and the only thing left was their employment.Because all\r\ncandidates have the same skills, it doesn\u2019t matter where each of them\r\nwill work. That is why the company decided to distribute candidates\r\nbetween workplaces so that the total distance between home and workplace\r\nover all candidates is minimal.It is well known that Earth is round, so\r\nit can be described as a circle, and all m cities on Earth can be\r\ndescribed as points on this circle. All cities are enumerated from 1 to\r\nm so that for each i (1\r\nle i\r\nle m - 1) cities with indexes i and i + 1 are neighbors and cities with\r\nindexes 1 and m are neighbors as well. People can move only along the\r\ncircle. The distance between any two cities equals to minimal number of\r\ntransitions between neighboring cities you have to perform to get from\r\none city to another. In particular, the distance between the city and\r\nitself equals 0.The \"Poca Pola\" vacancies are located at offices in\r\ncities a_1, a_2,\r\nldots, a_n. The candidates live in cities b_1, b_2,\r\nldots, b_n. It is possible that some vacancies are located in the same\r\ncities and some candidates live in the same cities. The \"Poca Pola\"\r\nmanagers are too busy with super secret project, so you were asked to\r\nhelp \"Poca Pola\" to distribute candidates between workplaces, so that\r\nthe sum of the distance between home and workplace over all candidates\r\nis minimum possible.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nmt19937 mrand(random_device{}()); \nconst ll mod=1000000007;\nint rnd(int x) { return mrand() % x;}\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nconst int N=401000;\nint m,n,mat[N];\nPII p[N],q[N];\nll cc[N];\n\nvoid add(PII *q,int i,int l,int r,int v,int ty=0) {\n\tint pl=lower_bound(q,q+n,mp(l,-1))-q;\n\tint pr=lower_bound(q,q+n,mp(r+1,-1))-q-1;\n//\tprintf(\"gg %d %d\\n\",pl,pr);\n\tif (pl>pr) return;\n\tif (ty==0) {\n\t\tpl-=i; pr-=i; \n\t} else {\n\t\tswap(pl,pr); pl=i-pl; pr=i-pr;\n\t}\n//\tprintf(\"add %d %d %d\\n\",pl,pr,v);\n\tif (pl>=0&&pr>=0) cc[pl]+=v,cc[pr+1]-=v;\n\telse if (pl<0&&pr<0) cc[pl+n]+=v,cc[pr+1+n]-=v;\n\telse {\n\t\tcc[pl+n]+=v; cc[n]-=v;\n\t\tcc[0]+=v; cc[pr+1]-=v;\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\",&m,&n);\n\trep(i,0,n) scanf(\"%d\",&p[i].fi),p[i].se=i;\n\trep(i,0,n) scanf(\"%d\",&q[i].fi),q[i].se=i;\n\tsort(p,p+n); sort(q,q+n);\n\trep(i,0,n) {\n\t\tadd(q,i,p[i].fi-m,p[i].fi-m/2-1,m-p[i].fi);\n\t\tadd(q,i,p[i].fi-m/2,p[i].fi-1,p[i].fi);\n\t\tadd(q,i,p[i].fi,p[i].fi+m/2,-p[i].fi);\n\t\tadd(q,i,p[i].fi+m/2+1,p[i].fi+m,p[i].fi+m);\n\t}\n\trep(i,0,n) {\n\t\tadd(p,i,q[i].fi-m,q[i].fi-m/2-1,-q[i].fi,1);\n\t\tadd(p,i,q[i].fi-m/2,q[i].fi,q[i].fi,1);\n\t\tadd(p,i,q[i].fi+1,q[i].fi+m/2,-q[i].fi,1);\n\t\tadd(p,i,q[i].fi+m/2+1,q[i].fi+m,q[i].fi,1);\n\t}\n\trep(i,1,n+1) cc[i]+=cc[i-1];\n\tint md=min_element(cc,cc+n)-cc;\n\trep(i,0,n) mat[p[i].se]=q[(i+md)%n].se;\n\tprintf(\"%lld\\n\",cc[md]);\n\trep(i,0,n) printf(\"%d%c\",mat[i]+1,\" \\n\"[i==n-1]);\n}\n"], "input": "", "output": "", "tags": ["greedy", "sortings"], "dificulty": "2700", "interactive": false}