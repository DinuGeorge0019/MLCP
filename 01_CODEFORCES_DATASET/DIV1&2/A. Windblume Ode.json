{
    "link": "https://codeforces.com//contest/1586/problem/A",
    "problemId": "1147381",
    "problem_idx": "A",
    "shortId": "1586A",
    "contest_number": "1586",
    "problem_submissions": {
        "I": [
            132349267,
            132252923,
            132320064,
            132673395,
            132289506,
            132263256
        ],
        "H": [
            132247560,
            132253721,
            134930470,
            132350321,
            132254025,
            132660661,
            132275048,
            132253966,
            132270155
        ],
        "G": [
            132239647,
            132244340,
            132241119,
            135794866,
            135794713,
            132234650,
            132248115,
            132244256,
            132257761,
            132255193,
            132256199,
            132255919,
            132258648,
            132257515,
            132250742,
            132255333,
            132257553,
            132255311
        ],
        "F": [
            132231955,
            132236161,
            132234366,
            132240633,
            132243967,
            132235859,
            132234337,
            132237395,
            132239493,
            132241376,
            132248866,
            132245654,
            132241416,
            132246161,
            132245018,
            132259456,
            132244979,
            132249686,
            132260019,
            132238761
        ],
        "E": [
            132228491,
            132224206,
            132228693,
            132232413,
            132231532,
            132229745,
            132230672,
            132232315,
            132218494,
            132235319,
            132232020,
            132237413,
            132239524,
            132237023,
            132236410,
            132236319,
            132238669,
            132240928,
            132230421,
            132229492
        ],
        "D": [
            132225001,
            132227375,
            132224444,
            132226879,
            132227724,
            132226231,
            132226626,
            132227371,
            132224235,
            132227654,
            132224635,
            132229641,
            132234990,
            132231067,
            132230536,
            132228432,
            132234258,
            132232998,
            132241147,
            132223955
        ],
        "C": [
            132221243,
            132218519,
            132219460,
            132219748,
            132219799,
            132222571,
            132220819,
            132219850,
            132232802,
            132223481,
            132218757,
            132219927,
            132230956,
            132218216,
            132224263,
            132222192,
            132227273,
            132228072,
            132226595,
            132220025
        ],
        "B": [
            132214722,
            132213701,
            132215490,
            132214516,
            132214317,
            132214601,
            132215162,
            132222197,
            132229955,
            132216968,
            132214347,
            132216468,
            132226751,
            132220812,
            132216772,
            132216742,
            132216324,
            132213579,
            132217316,
            132213929
        ],
        "A": [
            132213139,
            132213078,
            132214020,
            132213141,
            132213243,
            132213267,
            132213377,
            132220659,
            132228179,
            132218691,
            132213234,
            132214356,
            132213033,
            132224973,
            132214120,
            132214349,
            132213337,
            132213011,
            132242338,
            132213128
        ]
    },
    "name": "A. Windblume Ode",
    "statement": "You have obtained the elegant bow known as the Windblume Ode. Inscribed\r\nin the weapon is an array of n (n\r\nge 3) positive integers (i.e. different, no duplicates are allowed).Find\r\nthe largest subset (i.e. having the maximum number of elements) of this\r\narray such that its sum is a composite number. A positive integer x is\r\ncalled composite if there exists a positive integer y such that 1 < y <\r\nx and x is divisible by y.If there are multiple subsets with this\r\nlargest size with the composite sum, you can output any of them. It can\r\nbe proven that under the constraints of the problem such a non-empty\r\nsubset always exists.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define rep(i, n) for(int i = 0; i < (int)(n); i ++)\n#define rep1(i, n) for(int i = 1; i <= (int)(n); i ++)\n#define MP make_pair\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst int MOD = 998244353;\n\nint n, a[105];\nbool isp(int x)\n{\n\tfor(int i = 2; i * i <= x; i ++) if(x % i == 0) return false;\n\treturn true;\n}\nvoid solve()\n{\n\tscanf(\"%d\", &n);\n\trep(i, n) scanf(\"%d\", &a[i]);\n\tint sum = 0;\n\trep(i, n) sum += a[i];\n\tif(isp(sum)) {\n\t\tint mn = MOD;\n\t\trep(i, n) if(a[i] & 1) mn = min(mn, a[i]);\n\t\tprintf(\"%d\\n\", n - 1);\n\t\trep(i, n) if(mn != a[i]) printf(\"%d \", i + 1); printf(\"\\n\");\n\t} else {\n\t\tprintf(\"%d\\n\", n);\n\t\trep(i, n) printf(\"%d \", i + 1); printf(\"\\n\");\n\t}\n}\n\nint main()\n{\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile(T --) solve();\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. Windblume Ode.json",
    "editorial_link": "https://codeforces.com//blog/entry/96072",
    "editorial": "Let be equal to the sum of array . If is composite then is the largest\r\ncomposite subset of itself. Otherwise, since , must be a prime number\r\ngreater than , meaning must be odd. Now notice that because all elements\r\nof are distinct, if we remove any one number from , the remaining sum\r\nmust be strictly greater than . This leads us to the following solution:\r\nif is prime, removing any odd number from will give a composite subset\r\nof size . This is because that since is assumed to be odd, an odd number\r\nmust exist in , and the difference of two odd numbers is always even.\r\nSince we claim that this difference is at least , the new sum will\r\nalways be composite.\r\n",
    "hint": []
}