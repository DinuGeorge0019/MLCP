{
    "link": "https://codeforces.com//contest/768/problem/F",
    "problemId": "94877",
    "problem_idx": "F",
    "shortId": "768F",
    "contest_number": "768",
    "problem_submissions": {
        "F": [
            24840431,
            24838480,
            24834630,
            24841891,
            24838353,
            24840717,
            24837763,
            24842282,
            24838721,
            24833873,
            24842120,
            24844145,
            24842096,
            24840981,
            24845191,
            24842247,
            24840284,
            24847109,
            24843919
        ],
        "E": [
            24834774,
            24835983,
            24832451,
            24837828,
            24833805,
            24837182,
            24833920,
            24836646,
            24835033,
            24838913,
            24837846,
            24833547,
            24837106,
            24837362,
            24839266,
            24837276,
            24838051,
            24835972,
            24836022
        ],
        "D": [
            24832202,
            24833876,
            24835915,
            24835246,
            24832704,
            24834168,
            24832774,
            24838949,
            24833061,
            24836615,
            24839525,
            24834336,
            24833791,
            24835394,
            24835786,
            24835146,
            24835911,
            24837569,
            24837832
        ],
        "C": [
            24830784,
            24831935,
            24846692,
            24833492,
            24831356,
            24831859,
            24830894,
            24833465,
            24831521,
            24835038,
            24835013,
            24830101,
            24832003,
            24831977,
            24833696,
            24832023,
            24832927,
            24833660,
            24834203
        ],
        "B": [
            24828716,
            24830642,
            24828869,
            24830153,
            24830045,
            24829484,
            24830872,
            24829643,
            24837759,
            24831145,
            24828453,
            24830132,
            24829454,
            24830410,
            24829830,
            24830884,
            24831500,
            24831921
        ],
        "A": [
            24825770,
            24826388,
            24825799,
            24826247,
            24825814,
            24825782,
            24825775,
            24825815,
            24827152,
            24827361,
            24826212,
            24825822,
            24826382,
            24826002,
            24825750,
            24826264,
            24826016,
            24825780,
            24828293
        ],
        "G": [
            24850234,
            25339793,
            24854056,
            24855563,
            24855744
        ]
    },
    "name": "F. Barrels and boxes",
    "statement": "Tarly has two different type of items, food boxes and wine barrels.\r\nThere are food boxes and wine barrels. Tarly stores them in various\r\nstacks and each stack can consist of either food boxes or wine barrels\r\nbut not both. The stacks are placed in a line such that no two stacks of\r\nfood boxes are together and no two stacks of wine barrels are\r\ntogether.The height of a stack is defined as the number of items in the\r\nstack. Two stacks are considered different if either their heights are\r\ndifferent or one of them contains food and other contains wine.Jon Snow\r\ndoesn\u2019t like an arrangement if any stack of wine barrels has height less\r\nthan or equal to . What is the probability that Jon Snow will like the\r\narrangement if all arrangement are equiprobably?Two arrangement of\r\nstacks are considered different if exists such , that -th stack of one\r\narrangement is different from the -th stack of the other arrangement.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> pt;\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\nconst ld TAU=2*acos(-1);\nconst ld eps=1e-7;\nconst int inf=1e9+99;\nconst ll linf=1e18+88;\n\nconst int P=1e9+7;\nint powq(int x,int e) {\n\tif(!e) return 1;\n\tif(e&1) return int(1LL*x*powq(x,e-1)%P);\n\tx=powq(x,e>>1);\n\treturn int(1LL*x*x%P);\n}\nint inv(int x) { return powq(x,P-2); }\n\nconst int N=200<<10;\nint F[N],iF[N];\nint C(int n,int k) {\n\tif(k>n) return 0;\n\treturn int(1LL*F[n]*iF[k]%P*iF[n-k]%P);\n}\n\nint assign(int amt,int len) {\n\tamt-=len;\n\tif(amt<0) return 0;\n\treturn C(amt+len-1,len-1);\n}\n\nint32_t main() {\n\tF[0]=1;\n\tfor(int x=1;x<N;x++) F[x]=int(1LL*F[x-1]*x%P);\n\tiF[N-1]=inv(F[N-1]);\n\tfor(int x=N-1;--x>=0;) iF[x]=int(1LL*iF[x+1]*(x+1)%P);\n\n\tint f,w,h; cin>>f>>w>>h;\n\tif(!h || !w) {\n\t\tcout<<1<<endl;\n\t\treturn 0;\n\t}\n\tif(w<=h) {\n\t\tcout<<0<<endl;\n\t\treturn 0;\n\t}\n\tif(!f) {\n\t\tcout<<1<<endl;\n\t\treturn 0;\n\t}\n\n\tll tot=0;\n\tfor(int len=1;len<N-3;len++) {\n\t\tll WF = 1LL*assign(w,len)*assign(f,len);\n\t\tll FW = WF;\n\t\tll WFW = 1LL*assign(w,len+1)*assign(f,len);\n\t\tll FWF = 1LL*assign(w,len)*assign(f,len+1);\n\t\ttot += WF+FW+WFW+FWF;\n\t\ttot%=P;\n\t}\n\n\tll good=0;\n\tfor(int len=1;len<N-3;len++) {\n\t\tif(len*h > w) break;\n\t\tll WF = 1LL*assign(w-len*h,len)*assign(f,len);\n\t\tll FW = WF;\n\t\tll WFW = 1LL*assign(w-len*h-h,len+1)*assign(f,len);\n\t\tll FWF = 1LL*assign(w-len*h,len)*assign(f,len+1);\n\t\tgood += WF+FW+WFW+FWF;\n\t\tgood%=P;\n\t}\n\n\t// cerr<<good<<\", \"<<tot<<endl;\n\n\tll num=good%P;\n\tll den=tot%P;\n\tcout<<int(1LL*num*inv((int)den)%P)<<endl;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "combinatorics",
        "math",
        "number theory",
        "probabilities"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\F. Barrels and boxes.json",
    "editorial_link": "https://codeforces.com//blog/entry/50550",
    "editorial": "Set and Editorial by: arnabsamanta, apoorv_kulsh Every arrangement of\r\nstacks can expressed in the form of linear arrangement. In this linear\r\narrangement, every contiguous segment of wine barrels are separated by\r\nfood boxes. For the arrangement to be liked by Jon each of the\r\npartitions created by food boxes must contain either or greater than\r\nwine barrels. Let out of partitions have non-zero wine barrels then the\r\nremaining partitions must have wine barrels.. Total number of\r\narrangements with exactly u stacks of wine barrels are is the number of\r\nways of choosing partitions out of partitions. is the number of ways to\r\nplace wine barrels in these partitions which is equal to the coefficient\r\nof in . Finally we sum it up for all from to . So the time complexity\r\nbecomes with pre-processing of factorials. was the corner case for which\r\nthe answer was . We did not anticipate it will cause so much trouble.\r\nNot placing it in the pretests was a rookie mistake. Code\r\n"
}