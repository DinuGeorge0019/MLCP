{"link": "https://codeforces.com//contest/1023/problem/C", "problemId": "209191", "problem_idx": "C", "shortId": "1023C", "contest_number": "1023", "problem_submissions": {"F": [41706962, 41711449, 41703443, 41713059, 41716623, 41714553, 41714671, 41707623, 41713235, 41712334, 41728092, 41715075, 41696075, 41713356, 41714801, 41709605, 41719826, 41712664, 41715258, 41716252], "E": [41698618, 41698291, 41699659, 41704092, 41694722, 41704680, 41704917, 41699573, 41705681, 41707263, 41704649, 41710828, 41705364, 41701903, 41705217, 41705636, 41706969, 41702766, 41702871], "D": [41694804, 41690882, 41694456, 41696667, 41700369, 41697794, 41697937, 41696439, 41697953, 41699194, 41695409, 41701962, 41696987, 41693065, 41702154, 41698952, 41700314, 41697292, 41697057], "C": [41689677, 41687726, 41688316, 41690341, 41688011, 41691766, 41691373, 41708581, 41689935, 41688178, 41690416, 41703451, 41690697, 41687815, 41690419, 41689708, 41692238, 41691341, 41691501], "B": [41687853, 41686964, 41687392, 41687955, 41687163, 41687657, 41689074, 41696355, 41687990, 41690278, 41688421, 41705049, 41689143, 41688949, 41689104, 41687914, 41689486, 41689269, 41689603], "A": [41686640, 41686676, 41686712, 41686970, 41686742, 41686759, 41687401, 41696322, 41687071, 41686971, 41706549, 41687626, 41686813, 41686865, 41686818, 41686780, 41686879, 41726126], "G": [55938906, 48502404, 46583960, 42546293, 42609540]}, "name": "C. Bracket Subsequence", "statement": "A bracket sequence is a string containing only characters \"\" and \"\". A\r\nregular bracket sequence is a bracket sequence that can be transformed\r\ninto a correct arithmetic expression by inserting characters \"\" and \"\"\r\nbetween the original characters of the sequence. For example, bracket\r\nsequences \"\" and \"\" are regular (the resulting expressions are: \"\" and\r\n\"\"), and \"\", \"\" and \"\" are not.You are given a regular bracket sequence\r\ns and an integer number k. Your task is to find a regular bracket\r\nsequence of length exactly k such that it is also a subsequence of s.It\r\nis guaranteed that such sequence always exists.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\nusing lint = long long;\nusing pi = pair<lint, int>;\nconst int MAXN = 1000005;\nconst int mod = 1e9 + 7;\n\nint n, k;\nstring s;\nstack<int> stk;\nbool fu[MAXN];\n\nint main(){\n\tcin >> n >> k;\n\tcin >> s;\n\tint rem = (n - k) / 2;\n\tfor(int i=0; i<s.size(); i++){\n\t\tif(s[i] == '(') stk.push(i);\n\t\telse{\n\t\t\tif(rem > 0){\n\t\t\t\tfu[stk.top()] = 1;\n\t\t\t\tfu[i] = 1;\n\t\t\t\trem--;\n\t\t\t}\n\t\t\tstk.pop();\n\t\t}\n\t}\n\tfor(int i=0;i <s.size(); i++){\n\t\tif(!fu[i]) putchar(s[i]); \n\t}\n}\n"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1200", "interactive": false}