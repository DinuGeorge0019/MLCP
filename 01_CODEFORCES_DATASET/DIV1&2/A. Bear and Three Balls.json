{
    "link": "https://codeforces.com//contest/653/problem/A",
    "problemId": "52166",
    "problem_idx": "A",
    "shortId": "653A",
    "contest_number": "653",
    "problem_submissions": {
        "D": [
            16882408,
            16811537,
            16810665,
            16808469,
            16808880,
            16810169,
            16810193,
            16817835,
            16817684,
            16809816,
            16810008,
            16809541,
            16810009,
            16809483,
            16815488,
            16815467,
            16809743,
            16815857,
            16810399,
            16830307,
            16830297,
            16830295,
            16809555
        ],
        "C": [
            16814329,
            16808201,
            16807277,
            16809824,
            16809484,
            16809237,
            16808970,
            16808978,
            16808649,
            16810747,
            16824380,
            16810982,
            16808580,
            16808306,
            16809772,
            16808759,
            16815412,
            16808885,
            16810588
        ],
        "F": [
            16813454,
            16812764,
            16813359,
            16811313,
            16812655,
            16813981,
            16813203,
            16812204,
            16812853,
            16813207,
            16813077,
            16811759,
            16813557,
            16817070,
            16813698,
            16812540,
            16812526
        ],
        "E": [
            16812212,
            16809858,
            16810442,
            16814020,
            16811168,
            16811817,
            16811727,
            16814449,
            16814876,
            16813977,
            16814689,
            16810991,
            16810903,
            16815613,
            16810612,
            16812105,
            16811842
        ],
        "B": [
            16811122,
            16806823,
            16808941,
            16806712,
            16806895,
            16807172,
            16806271,
            16807190,
            16807288,
            16809090,
            16808193,
            16806845,
            16806473,
            16807895,
            16806798,
            16807486,
            16808397,
            16806933
        ],
        "A": [
            16810886,
            16805361,
            16805416,
            16805408,
            16805395,
            16805730,
            16805338,
            16805605,
            16805967,
            16806396,
            16807313,
            16805370,
            16805342,
            16805498,
            16805369,
            16805701,
            16806883,
            16805397
        ],
        "G": [
            16810637,
            16830434,
            16849997,
            16871778,
            16820127,
            16813576,
            16863345,
            16813594,
            16830285
        ]
    },
    "name": "A. Bear and Three Balls",
    "statement": "Limak is a little polar bear. He has balls, the -th ball has size .Limak\r\nwants to give one ball to each of his three friends. Giving gifts isn\u2019t\r\neasy there are two rules Limak must obey to make friends happy: No two\r\nfriends can get balls of the same size. No two friends can get balls of\r\nsizes that differ by more than . For example, Limak can choose balls\r\nwith sizes , and , or balls with sizes , and . But he can\u2019t choose balls\r\nwith sizes , and (two friends would get balls of the same size), and he\r\ncan\u2019t choose balls with sizes , and (because sizes and differ by more\r\nthan ).Your task is to check whether Limak can choose three balls that\r\nsatisfy conditions above.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nint n,a[51];\nint main() {\n\tscanf(\"%d\",&n);\n\trep(i,0,n) scanf(\"%d\",a+i);\n\tsort(a,a+n);\n\trep(i,0,n) rep(j,i+1,n) rep(k,j+1,n) if (a[k]==a[i]+2&&a[j]==a[i]+1) {\n\t\tputs(\"YES\");\n\t\treturn 0;\n\t}\n\tputs(\"NO\");\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. Bear and Three Balls.json",
    "editorial_link": "https://codeforces.com//blog/entry/43886",
    "editorial": "watch out for test like \"1 1 1 2 2 2 2 3 3 3\". It shows that it's not enough to sort number and check three neighbouring elements. You must remove repetitions. The easier solution is to write 3 for-loops, without any sorting. Do you see how?"
}