{"link": "https://codeforces.com//contest/1804/problem/D", "problemId": "1824143", "problem_idx": "D", "shortId": "1804D", "contest_number": "1804", "problem_submissions": {"H": [197133699, 197211600], "G": [197106837, 197116479, 197124948, 197127592, 197122958, 197137640, 197134544, 197138362], "F": [197093293, 197105349, 197095528, 197104786, 197106624, 197098643, 197101524, 197103930, 197102162, 197105107, 197108552, 197108666, 197107628, 197142671, 197140184, 197139967, 197139883, 197139641, 197111482, 197111626, 197113675, 197111909, 197110044, 197110987, 197113933], "E": [197089405, 197085286, 197090524, 197097633, 197097337, 197091345, 197092803, 197096473, 197096893, 197095376, 197096756, 197096855, 197096490, 197096936, 197101267, 197098474, 197101399, 197096360, 197103528, 197097046], "D": [197081706, 197080440, 197082836, 197086161, 197088893, 197081349, 197083999, 197084952, 197086950, 197076993, 197086858, 197086874, 197084897, 197084889, 197084721, 197084970, 197089163, 197084662, 197086535, 197082927], "C": [197078079, 197076920, 197078785, 197081523, 197083238, 197076107, 197077574, 197078670, 197077463, 197082879, 197080775, 197081089, 197078608, 197079622, 197080414, 197078487, 197079270, 197080239, 197080507, 197079932], "B": [197075523, 197075248, 197075383, 197077168, 197080868, 197074547, 197074457, 197076648, 197075635, 197080800, 197077487, 197076188, 197075795, 197076995, 197076635, 197075839, 197076655, 197076988, 197077650, 197075789], "A": [197073420, 197073942, 197073446, 197073814, 197078430, 197073370, 197073351, 197073646, 197073456, 197078319, 197074505, 197073977, 197073328, 197073488, 197073501, 197073461, 197073950, 197074331, 197075653, 197073687]}, "name": "D. Accommodation", "statement": "Annie is an amateur photographer. She likes to take pictures of giant\r\nresidential buildings at night. She just took a picture of a huge\r\nrectangular building that can be seen as a table of n\r\ntimes m windows. That means that the building has n floors and each\r\nfloor has exactly m windows. Each window is either dark or bright,\r\nmeaning there is light turned on in the room behind it.Annies knows that\r\neach apartment in this building is either one-bedroom or two-bedroom.\r\nEach one-bedroom apartment has exactly one window representing it on the\r\npicture, and each two-bedroom apartment has exactly two windows on the\r\nsame floor. Moreover, the value of m is guaranteed to be divisible by 4\r\nand it is known that each floor has exactly\r\nfrac{m}{4} two-bedroom apartments and exactly\r\nfrac{m}{2} one-bedroom apartments. The actual layout of apartments is\r\nunknown and can be different for each floor.Annie considers an apartment\r\nto be occupied if of its windows is bright. She now wonders, what are\r\nthe minimum and maximum possible number of occupied apartments if judged\r\nby the given picture?Formally, for each of the floors, she comes up with\r\nsome particular apartments layout with exactly\r\nfrac{m}{4} two-bedroom apartments (two consecutive windows) and\r\nfrac{m}{2} one-bedroom apartments (single window). She then counts the\r\ntotal number of apartments that have at least one bright window. What is\r\nthe minimum and maximum possible number she can get?\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int n, m;\n    std::cin >> n >> m;\n    \n    int smin = 0, smax = 0;\n    for (int i = 0; i < n; i++) {\n        std::string s;\n        std::cin >> s;\n        \n        int min = std::count(s.begin(), s.end(), '1');\n        int two = 0;\n        for (int j = 0; j < m - 1; j++) {\n            if (s[j] == '1' && s[j + 1] == '1') {\n                j++;\n                two++;\n            }\n        }\n        two = std::min(two, m / 4);\n        smin += min - two;\n        \n        int max = std::count(s.begin(), s.end(), '1');\n        two = 0;\n        for (int j = 0; j < m - 1; j++) {\n            if (s[j] != '1' || s[j + 1] != '1') {\n                j++;\n                two++;\n            }\n        }\n        two = std::min(two, m / 4);\n        smax += max - (m / 4 - two);\n    }\n    \n    std::cout << smin << \" \" << smax << \"\\n\";\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "greedy", "implementation"], "dificulty": "2000", "interactive": false}