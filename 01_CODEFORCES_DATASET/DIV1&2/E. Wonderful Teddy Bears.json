{
    "link": "https://codeforces.com//contest/2096/problem/E",
    "problemId": "3340249",
    "problem_idx": "E",
    "shortId": "2096E",
    "contest_number": "2096",
    "problem_submissions": {
        "G": [
            316282702,
            316284895,
            316262027,
            316272006,
            316277752,
            316279192,
            316281051,
            316278962,
            316288631,
            316286941,
            316281423,
            316285489
        ],
        "H": [
            316270847,
            316275626,
            316275749,
            316259798,
            316291783,
            316275154,
            316294187,
            316318441,
            316280378,
            316273398,
            316272387,
            316264455,
            316268497
        ],
        "F": [
            316260466,
            316272229,
            316301054,
            316261161,
            316293906,
            316262764,
            316270685,
            316270410,
            316276972,
            316268796,
            316271292,
            316272567,
            316270406,
            316288539,
            316420860
        ],
        "E": [
            316252685,
            316254528,
            316246634,
            316245551,
            316253683,
            316248237,
            316253871,
            316253467,
            316286029,
            316259336,
            316258807,
            316257597,
            316262285,
            316279990,
            316248771,
            316261220,
            316264600
        ],
        "D": [
            316249272,
            316248561,
            316238770,
            316241076,
            316247323,
            316244879,
            316247444,
            316253040,
            316244467,
            316252321,
            316251224,
            316250728,
            316247929,
            316262413,
            316244616,
            316248632,
            316249579
        ],
        "B": [
            316246564,
            316237445,
            316236137,
            316235278,
            316239997,
            316236170,
            316236360,
            316239677,
            316237672,
            316238226,
            316238848,
            316239973,
            316237530,
            316246361,
            316237890,
            316237351,
            316237544
        ],
        "C": [
            316244558,
            316245713,
            316242364,
            316239186,
            316245292,
            316242382,
            316244813,
            316248620,
            316240708,
            316244245,
            316245964,
            316243380,
            316243470,
            316251718,
            316241648,
            316242574,
            316244356
        ],
        "A": [
            316234703,
            316234789,
            316234688,
            316234623,
            316235661,
            316234613,
            316234706,
            316234661,
            316235315,
            316235129,
            316234677,
            316235246,
            316234969,
            316235161,
            316235908,
            316234860,
            316235003
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/142070",
    "editorial": "Step 1First, weâ€™ll treat all the black teddy bears as and all the pink\r\nteddy bears as .So we are given a binary array of length . In one\r\noperation, we can choose three consecutive elements and sort them in\r\nascending order. Now we need to find the minimum number of operations\r\nrequired to sort the array.There are four possible types of operations,\r\ndepending on the values of the elements: Operation A: Operation B:\r\nOperation C: Operation D:\r\n",
    "name": "E. Wonderful Teddy Bears",
    "statement": "You are the proud owner of n teddy bears, which are arranged in a row on\r\na shelf. Each teddy bear is colored either black or pink.An arrangement\r\nof teddy bears is if all the black teddy bears are to the left of all\r\nthe pink teddy bears. In other words, there exist a pair of indices (i,\r\nj) (1\r\nleq i < j\r\nleq n) such that the i-th teddy bear is pink, and the j-th teddy bear is\r\nblack.You want to reorder the teddy bears into a beautiful arrangement.\r\nYou are too short to reach the shelf, but luckily, you can send\r\ninstructions to a robot to move the teddy bears around. In a single\r\ninstruction, the robot can: Choose an index i (1\r\nle i\r\nle n - 2) and reorder the teddy bears at positions i, i + 1 and i + 2 so\r\nthat all the black teddy bears are to the left of all the pink teddy\r\nbears. What is the minimum number of instructions needed to reorder the\r\nteddy bears?\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\E. Wonderful Teddy Bears.json",
    "hint": []
}