{"link": "https://codeforces.com//contest/653/problem/E", "problemId": "52169", "problem_idx": "E", "shortId": "653E", "contest_number": "653", "problem_submissions": {"D": [16882408, 16811537, 16810665, 16808469, 16808880, 16810169, 16810193, 16817835, 16817684, 16809816, 16810008, 16809541, 16810009, 16809483, 16815488, 16815467, 16809743, 16815857, 16810399, 16830307, 16830297, 16830295, 16809555], "C": [16814329, 16808201, 16807277, 16809824, 16809484, 16809237, 16808970, 16808978, 16808649, 16810747, 16824380, 16810982, 16808580, 16808306, 16809772, 16808759, 16815412, 16808885, 16810588], "F": [16813454, 16812764, 16813359, 16811313, 16812655, 16813981, 16813203, 16812204, 16812853, 16813207, 16813077, 16811759, 16813557, 16817070, 16813698, 16812540, 16812526], "E": [16812212, 16809858, 16810442, 16814020, 16811168, 16811817, 16811727, 16814449, 16814876, 16813977, 16814689, 16810991, 16810903, 16815613, 16810612, 16812105, 16811842], "B": [16811122, 16806823, 16808941, 16806712, 16806895, 16807172, 16806271, 16807190, 16807288, 16809090, 16808193, 16806845, 16806473, 16807895, 16806798, 16807486, 16808397, 16806933], "A": [16810886, 16805361, 16805416, 16805408, 16805395, 16805730, 16805338, 16805605, 16805967, 16806396, 16807313, 16805370, 16805342, 16805498, 16805369, 16805701, 16806883, 16805397], "G": [16810637, 16830434, 16849997, 16871778, 16820127, 16813576, 16863345, 16813594, 16830285]}, "name": "E. Bear and Forgotten Tree 2", "statement": "A tree is a connected undirected graph consisting of vertices and edges.\r\nVertices are numbered through .Limak is a little polar bear. He once had\r\na tree with vertices but he lost it. He still remembers something about\r\nthe lost tree though.You are given pairs of vertices . Limak remembers\r\nthat for each there was between and . He also remembers that vertex was\r\nincident to exactly edges (its degree was equal to ).Is it possible that\r\nLimak remembers everything correctly? Check whether there exists a tree\r\nsatisfying the given conditions.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=301000;\nset<int> unv,e[N];\nint n,m,k,a[N],b[N],cp,t,q[N];\nvoid add(int u) {\n\tq[t++]=u; unv.erase(u);\n}\nvoid gao(int u) {\n\tt=0;\n\tadd(u);\n\trep(i,0,t) {\n\t\tu=q[i];\n\t\tint pre=1;\n\t\twhile (1) {\n\t\t\tauto x=unv.upper_bound(pre);\n\t\t\tif (x==unv.end()) break;\n\t\t\tint v=*x; pre=v;\n\t\t\tif (e[u].count(v)) continue;\n\t\t\tadd(v);\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\trep(i,0,m) {\n\t\tscanf(\"%d%d\",a+i,b+i);\n\t\te[a[i]].insert(b[i]);\n\t\te[b[i]].insert(a[i]);\n\t}\n\trep(i,2,n+1) unv.insert(i);\n\trep(i,2,n+1) if (unv.count(i)) {\n\t\tcp++;\n\t\tgao(i);\n\t\tbool fg=0;\n\t\trep(j,0,t) if (!e[1].count(q[j])) fg=1;\n\t\tif (!fg) {\n\t\t\tputs(\"impossible\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif (k<cp||k>n-1-SZ(e[1])) {\n\t\tputs(\"impossible\");\n\t\treturn 0;\n\t}\n\tputs(\"possible\");\n}\n"], "input": "", "output": "", "tags": ["dfs and similar", "dsu", "graphs", "trees"], "dificulty": "2400", "interactive": false}