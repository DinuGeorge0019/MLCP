{"link": "https://codeforces.com//contest/1863/problem/B", "problemId": "2186453", "problem_idx": "B", "shortId": "1863B", "contest_number": "1863", "problem_submissions": {"G": [221136551, 221139848, 221147121, 221150406, 221156272, 221151276, 221147870, 221157045, 221150654, 221158033, 221156995, 221150405, 221155989, 221155038, 221160627, 221149999, 221166719, 221155326, 221159641, 221165396], "F": [221121590, 221127771, 221128307, 221138108, 221130805, 221136021, 221136737, 221129060, 221140638, 221137056, 221128211, 221139417, 221137699, 221127026, 221139802, 221154849, 221135761, 221144061, 221150102, 221217304, 221142638], "E": [221110018, 221117203, 221116712, 221116632, 221114627, 221123945, 221125852, 221119344, 221123994, 221117191, 221120648, 221126771, 221126517, 221139461, 221119939, 221121938, 221123387, 221126376, 221121543, 221217383, 221127296], "D": [221102414, 221109581, 221105244, 221107918, 221106665, 221103992, 221113320, 221110649, 221111108, 221103919, 221112047, 221112174, 221110753, 221112715, 221104010, 221113678, 221110048, 221113375, 221110273, 221109100], "C": [221098267, 221102354, 221100311, 221098509, 221100896, 221098602, 221107809, 221105183, 221098239, 221098225, 221102929, 221105006, 221102283, 221103582, 221098969, 221099286, 221102760, 221106477, 221099714, 221101657], "A": [221096643, 221096074, 221096129, 221096043, 221095975, 221096016, 221096907, 221096642, 221101230, 221095943, 221096347, 221097350, 221096423, 221097791, 221095953, 221096058, 221096941, 221096889, 221096069, 221097073], "B": [221096498, 221097225, 221097260, 221096607, 221096286, 221096471, 221098534, 221098779, 221102915, 221096280, 221097328, 221098778, 221097955, 221099465, 221096389, 221096664, 221099499, 221099302, 221096756, 221098284], "I": [221276607, 221276430, 221275617, 221825420, 221197104], "H": [221188380, 221214363, 221182970, 221376731, 221376708, 221376397, 221187887]}, "name": "B. Split Sort", "statement": "You are given a permutation^{\r\ndagger} p_1, p_2,\r\nldots, p_n of integers 1 to n.You can change the current permutation by\r\napplying the following operation several (possibly, zero) times: choose\r\nsome x (2\r\nle x\r\nle n); create a new permutation by: first, writing down all elements of\r\np that are less than x, without changing their order; second, writing\r\ndown all elements of p that are greater than or equal to x, without\r\nchanging their order; replace p with the newly created permutation. For\r\nexample, if the permutation used to be [6, 4, 3, 5, 2, 1] and you choose\r\nx = 4, then you will first write down [3, 2, 1], then append this with\r\n[6, 4, 5]. So the initial permutation will be replaced by [3, 2, 1, 6,\r\n4, 5].Find the minimum number of operations you need to achieve p_i = i\r\nfor i = 1, 2,\r\nldots, n. We can show that it is always possible to do so.^{\r\ndagger} A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray).\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 30.08.2023 10:37:32       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> p(n);\n    for (int i = 0; i < n; i++) {\n      cin >> p[i];\n      --p[i];\n    }\n    vector<int> pos(n);\n    for (int i = 0; i < n; i++) {\n      pos[p[i]] = i;\n    }\n    int ans = 0;\n    for (int i = 0; i < n - 1; i++) {\n      ans += (pos[i] > pos[i + 1]);\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "math", "sortings"], "dificulty": "1100", "interactive": false}