{"link": "https://codeforces.com//contest/1654/problem/C", "problemId": "1337000", "problem_idx": "C", "shortId": "1654C", "contest_number": "1654", "problem_submissions": {"G": [150299206, 150291434, 150262682, 150264693, 150279932, 150262802, 150264575, 150265515, 150270995, 150269889, 150268570, 150658744, 150262050, 150410744], "F": [150251411, 150252834, 150256351, 150258591, 150257352, 150258765, 150260950, 150260548, 150253390, 155820292, 150253676, 150260302, 150259236, 150258476, 150253068, 150258272, 150260151, 150258857, 150253870], "E": [150249388, 150250832, 150247329, 150252856, 150255337, 150250196, 150255012, 150258473, 150245581, 150250984, 150250253, 150246690, 150250591, 150243463, 150281667, 150281018, 150257789, 150252457, 150252381, 150254404, 150260615], "D": [150242905, 150248369, 150245387, 150248435, 150250315, 150245874, 150249516, 150253299, 150250969, 150245477, 150245136, 150243688, 150246539, 150254801, 150249615, 150245204, 150245282, 150246887, 150243365], "C": [150236387, 150236280, 150236050, 150237265, 150241937, 150237951, 150242839, 150238439, 150239664, 150239447, 150236298, 150237311, 150240477, 150246874, 150236567, 150236644, 150238032, 150240021, 150238619], "B": [150233906, 150232250, 150249236, 150233827, 150235226, 150232832, 150239572, 150233210, 150235633, 150231291, 150231026, 150232476, 150233263, 150235368, 150231705, 150232694, 150231566, 150233122, 150232190], "A": [150228234, 150228426, 150228045, 150228869, 150232031, 150228616, 150230908, 150228192, 150232849, 150228032, 150227955, 150228792, 150228208, 150229654, 223450681, 150228295, 150228644, 150228162, 150228813, 150228169], "H": [150278254, 150276173, 150276315, 150560549]}, "name": "C. Alice and the Cake", "statement": "Alice has a cake, and she is going to cut it. She will perform the\r\nfollowing operation n-1 times: choose a piece of the cake (initially,\r\nthe cake is all one piece) with weight w\r\nge 2 and cut it into two smaller pieces of weight\r\nlfloor\r\nfrac{w}{2}\r\nrfloor and\r\nlceil\r\nfrac{w}{2}\r\nrceil (\r\nlfloor x\r\nrfloor and\r\nlceil x\r\nrceil denote floor and ceiling functions, respectively).After cutting\r\nthe cake in n pieces, she will line up these n pieces on a table in an\r\narbitrary order. Let a_i be the weight of the i-th piece in the line.You\r\nare given the array a. Determine whether there exists an initial weight\r\nand sequence of operations which results in a.\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define itn int\n#define all(x) (x).begin(), (x).end()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\n\nusing namespace std;\n\ninline int nxt() {\n\tint x;\n\tscanf(\"%d\", &x);\n\treturn x;\n}\n\nvoid solve() {\n\tint n = nxt();\n\tvector<long long> a(n);\n\tgenerate(all(a), nxt);\n\tlong long s = accumulate(all(a), 0ll);\n\tmultiset<long long> S(all(a));\n\tvector<long long> cur = {s};\n\tint rem = n - 1;\n\twhile (!cur.empty()) {\n\t\tauto x = cur.back();\n\t\tcur.pop_back();\n\t\tif (auto it = S.find(x); it != S.end()) {\n\t\t\tS.erase(it);\n\t\t} else if (rem == 0 || x == 1) {\n\t\t\tcout << \"No\\n\";\n\t\t\treturn;\n\t\t} else {\n\t\t\tcur.push_back(x / 2);\n\t\t\tcur.push_back((x + 1) / 2);\n\t\t\t--rem;\n\t\t}\n\t}\n\tcout << \"Yes\\n\";\n}\n\nint main() {\n\tint t = nxt();\n\twhile (t--) {\n\t\tsolve();\n\t}\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "greedy", "implementation", "sortings"], "dificulty": "1400", "interactive": false}