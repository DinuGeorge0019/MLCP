{"link": "https://codeforces.com//contest/868/problem/C", "problemId": "126218", "problem_idx": "C", "shortId": "868C", "contest_number": "868", "problem_submissions": {"E": [31023051, 31024523, 31024148, 31025167, 31018209, 31025864, 31026369, 31028260, 31026372, 31044397, 31026066, 31027557, 31023308, 31023861, 31019541, 31162068, 31021787], "F": [31020755, 31020638, 33743391, 31021116, 31022470, 31023238, 31022737, 31023926, 31023102, 31028638, 31028134, 31020706, 31027648, 31019840, 31023078, 31023660, 31027919], "D": [31018151, 31017707, 31016713, 31018303, 31025757, 31018243, 31018489, 31024010, 31018691, 31020147, 31017621, 31017612, 31016732, 31017515, 31015826, 31017997, 31021417], "C": [31014273, 31014407, 31012209, 31014307, 31013815, 31013945, 31015314, 31013335, 31014790, 31016275, 31030598, 31013440, 31030706, 31066551, 31014026, 31012823, 31014457, 31014258, 31016540], "B": [31013104, 31012812, 31013438, 31013042, 31012539, 31026919, 31016195, 31015461, 31013166, 31014218, 31022627, 31012140, 31012861, 31016249, 31011794, 31012575, 31013032, 31014544], "A": [31010698, 31010763, 31010903, 31010896, 31010747, 31010833, 31010957, 31012028, 31010858, 31021512, 31010696, 31010727, 31012054, 31010635, 31010757, 31011798, 31010661], "G": [31179602]}, "name": "C. Qualification Rounds", "statement": "Snark and Philip are preparing the problemset for the upcoming\r\npre-qualification round for semi-quarter-finals. They have a bank of\r\nproblems, and they want to select any non-empty subset of it as a\r\nproblemset. experienced teams are participating in the contest. Some of\r\nthese teams already know some of the problems. To make the contest\r\ninteresting for them, each of the teams should know at most half of the\r\nselected problems.Determine if Snark and Philip can make an interesting\r\nproblemset!\r\n", "solutions": ["#include <cstdio>\n\nint a[16];\n\nint main() {\n\tint i, j, k, n, m, t;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (i = 0; i < n; i++) {\n\t\tfor (j = t = 0; j < m; j++) {\n\t\t\tscanf(\"%d\", &k);\n\t\t\tt = t << 1 | k;\n\t\t}\n\t\ta[t] = 1;\n\t}\n\tfor (i = 1; i < 1 << 16; i++) {\n\t\tfor (j = 0; j < 16; j++) if (i >> j & 1 && !a[j]) break;\n\t\tif (j < 16) continue;\n\t\tfor (j = 0; j < 4; j++) {\n\t\t\tt = 0;\n\t\t\tfor (k = 0; k < 16; k++) if (i >> k & 1) t += k >> j & 1 ? 1 : -1;\n\t\t\tif (t > 0) break;\n\t\t}\n\t\tif (j == 4) {\n\t\t\tputs(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "dificulty": "1500", "interactive": false}