{
    "link": "https://codeforces.com//contest/1991/problem/D",
    "problemId": "2781504",
    "problem_idx": "D",
    "shortId": "1991D",
    "contest_number": "1991",
    "problem_submissions": {
        "H": [
            273210632,
            273212730,
            273219908,
            273194851,
            273200656,
            273213505,
            273204889,
            273220591,
            273225451,
            273220804,
            273226512,
            273222266,
            273229115,
            278405080,
            273216843
        ],
        "G": [
            273180456,
            273179521,
            273174064,
            273209283,
            273179708,
            273185549,
            273216085,
            273188851,
            273191410,
            273193985,
            273189153,
            273194518,
            273197531,
            273190195,
            273195818,
            273188177,
            273190908,
            273195464,
            273198241
        ],
        "F": [
            273160781,
            273160990,
            273158593,
            273158141,
            273171320,
            273168196,
            273159727,
            273170129,
            273173513,
            273170857,
            273165439,
            273182207,
            273174869,
            273166190,
            273163947,
            273173198,
            273175470,
            273163587,
            273174682,
            273170108
        ],
        "E": [
            273150868,
            273153734,
            273152235,
            273150823,
            273156934,
            273151786,
            273150935,
            273157824,
            273151366,
            273154414,
            273174335,
            273161395,
            273159133,
            273156803,
            273161464,
            273162124,
            273154749,
            273158567,
            273155964
        ],
        "D": [
            273143134,
            273144551,
            273142645,
            273141713,
            273147820,
            273143829,
            273141673,
            273145581,
            273156995,
            273145729,
            273149790,
            273146459,
            273144249,
            273145676,
            273154684,
            273150687,
            273147840,
            273144991,
            273148567
        ],
        "C": [
            273139495,
            273142387,
            273139319,
            273241170,
            273142853,
            273141897,
            273140491,
            273138783,
            273141460,
            273141958,
            273141853,
            273144830,
            273141321,
            273143714,
            273141051,
            273142758,
            273145128,
            273137630,
            273141184,
            273143400
        ],
        "B": [
            273133106,
            273134906,
            273133339,
            273134525,
            273138116,
            273135569,
            273133092,
            273135379,
            273136693,
            273135755,
            273136343,
            273135805,
            273132915,
            273135366,
            273136849,
            273139913,
            273132449,
            273135138,
            273136549
        ],
        "A": [
            273130858,
            273132065,
            273130939,
            273130875,
            273131982,
            273132539,
            273130929,
            273131106,
            273131228,
            273130992,
            273131052,
            273131178,
            273130862,
            273131382,
            273131308,
            273132778,
            273130871,
            273130965,
            273131362
        ],
        "I": [
            273238749,
            273429741
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/132021",
    "editorial": "For n?6\n, the minimum number of colors is always 4\n.\n\nProof\n\nFirst, we can show that the number of colors cannot be less than 4\n. This is because vertices 1\n, 3\n, 4\n, and 6\n form a clique, meaning they are all connected, so they must have different colors.\n\nNext, we can provide a construction where the number of colors is 4\n. For the i\n-th vertex, assign the color imod4+1\n. This ensures that any two vertices of the same color have a difference that is a multiple of 4\n, so their XOR is a multiple of 4\n, which is not a prime number.\n\nFor n<6\n, the example provides the coloring for all cases:\n\nn=1\n: A valid coloring is [1]\n.\nn=2\n: A valid coloring is [1,2]\n.\nn=3\n: A valid coloring is [1,2,2]\n.\nn=4\n: A valid coloring is [1,2,2,3]\n.\nn=5\n: A valid coloring is [1,2,2,3,3]\n.",
    "name": "D. Prime XOR Coloring",
    "statement": "You are given an undirected graph with n vertices, numbered from 1 to n.\r\nThere is an edge between vertices u and v if and only if u\r\noplus v is a prime number, where\r\noplus denotes the bitwise XOR operator.Color all vertices of the graph\r\nusing the minimum number of colors, such that no two vertices directly\r\nconnected by an edge have the same color.\r\n",
    "solutions": [
        "/** *    author:  tourist *    created: 28.07.2024 10:43:20**/#include <bits/stdc++.h>\u00a0using namespace std;\u00a0#ifdef LOCAL#include \"algo/debug.h\"#else#define debug(...) 42#endif\u00a0int main() {  ios::sync_with_stdio(false);  cin.tie(nullptr);  int tt;  cin >> tt;  while (tt--) {    int n;    cin >> n;    if (n <= 5) {      cout << n / 2 + 1 << '\\n';      for (int i = 0; i < n; i++) {        cout << (i + 3) / 2 << \" \\n\"[i == n - 1];      }    } else {      cout << 4 << '\\n';      for (int i = 0; i < n; i++) {        cout << i % 4 + 1 << \" \\n\"[i == n - 1];      }    }  }  return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "graphs",
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\D. Prime XOR Coloring.json"
}