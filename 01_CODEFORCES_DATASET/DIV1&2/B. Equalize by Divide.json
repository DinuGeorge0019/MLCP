{"link": "https://codeforces.com//contest/1799/problem/B", "problemId": "1800598", "problem_idx": "B", "shortId": "1799B", "contest_number": "1799", "problem_submissions": {"H": [195172140, 195179948, 195176943, 195177627, 195177612, 195187046, 195170243, 195186163, 195181900, 195178648, 195187740, 195188641, 195181162, 195197683, 195197622, 195197452, 195197330, 195195992, 195195702, 195195592, 195189428, 222390709, 195183885, 195192378], "G": [195165805, 195168765, 195163877, 195170080, 195166062, 195173874, 195159286, 195167233, 195175284, 195171112, 195175174, 195176292, 195166497, 195167039, 195174540, 195165113, 195172643, 195174992, 195179660], "F": [195162556, 195161415, 195167047, 195167029, 195169902, 195165660, 195176867, 195177074, 195171218, 195182224, 195179445, 195181473, 195185750, 195200279, 195171757, 195192151, 195177698, 195192345, 195178905, 195177004], "E": [195155464, 195155926, 195160608, 195157188, 195161547, 195155405, 195184653, 195161068, 195166323, 195173130, 195168387, 195173064, 195218892, 195198896, 195162114, 195161002, 195160161, 195165268, 195163227, 195160677], "D2": [195149687, 195148531, 195151569, 195149401, 195152435, 195149320, 195159443, 195154372, 195157592, 195155987, 195161428, 195244200, 195161041, 195153968, 195155870, 195151311, 195155278, 195159787, 195153371, 195151855], "D1": [195149644, 195148457, 195150430, 195149466, 195152497, 195149250, 195150661, 195154425, 195157658, 195153741, 195161504, 195150409, 195152774, 195155970, 195151278, 195153482, 195159732, 195149352, 195149899], "C": [195146230, 195145019, 195147190, 195145539, 195148295, 195145217, 195148636, 195146815, 195151203, 195151265, 195151601, 195146561, 195147507, 195149080, 195145370, 195151542, 195158458, 195147153, 195147120], "B": [195140902, 195141064, 195140888, 195140956, 195140810, 195141011, 195142268, 195146249, 195143844, 195142681, 195143326, 195142296, 195140849, 195142634, 195140165, 195142125, 195141309, 195141669, 195140680], "A": [195139293, 195139594, 195139424, 195139401, 195139388, 195139558, 195139905, 195143164, 195139695, 195139287, 195140212, 195139506, 195139370, 195139520, 195139228, 195140320, 195142809, 195139497, 195139286]}, "name": "B. Equalize by Divide", "statement": "You are given an array a_1, a_2,\r\nldots, a_n of positive integers.You can make this operation multiple\r\n(possibly zero) times: Choose two indices i, j (1\r\nleq i, j\r\nleq n, i\r\nneq j). Assign a_i :=\r\nlceil\r\nfrac{a_i}{a_j}\r\nrceil. Here\r\nlceil x\r\nrceil denotes x rounded up to the smallest integer\r\ngeq x. Is it possible to make all array elements equal by some sequence\r\nof operations (possibly empty)? If yes, print way to do it in at most\r\n30n operations.It can be proven, that under the problem constraints, if\r\nsome way exists to make all elements equal, there exists a way with at\r\nmost 30n operations.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n;\n    std::cin >> n;\n    \n    std::vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> a[i];\n    }\n    \n    if (std::count(a.begin(), a.end(), a[0]) == n) {\n        std::cout << 0 << \"\\n\";\n        return;\n    }\n    \n    if (std::count(a.begin(), a.end(), 1) > 0) {\n        std::cout << -1 << \"\\n\";\n        return;\n    }\n    \n    std::vector<std::pair<int, int>> ans;\n    while (std::count(a.begin(), a.end(), a[0]) < n && std::count(a.begin(), a.end(), 2) == 0) {\n        int i = 1;\n        while (a[0] == a[i]) {\n            i++;\n        }\n        if (a[0] > a[i]) {\n            ans.emplace_back(1, i + 1);\n            a[0] = (a[0] + a[i] - 1) / a[i];\n        } else {\n            ans.emplace_back(i + 1, 1);\n            a[i] = (a[i] + a[0] - 1) / a[0];\n        }\n    }\n    \n    if (std::count(a.begin(), a.end(), a[0]) < n) {\n        int i = std::find(a.begin(), a.end(), 2) - a.begin();\n        for (int j = 0; j < n; j++) {\n            while (a[j] != 2) {\n                ans.emplace_back(j + 1, i + 1);\n                a[j] = (a[j] + 1) / 2;\n            }\n        }\n    }\n    \n    std::cout << ans.size() << \"\\n\";\n    for (auto [x, y] : ans) {\n        std::cout << x << \" \" << y << \"\\n\";\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "dificulty": "1200", "interactive": false}