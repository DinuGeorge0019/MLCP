{
    "link": "https://codeforces.com//contest/768/problem/A",
    "problemId": "94872",
    "problem_idx": "A",
    "shortId": "768A",
    "contest_number": "768",
    "problem_submissions": {
        "F": [
            24840431,
            24838480,
            24834630,
            24841891,
            24838353,
            24840717,
            24837763,
            24842282,
            24838721,
            24833873,
            24842120,
            24844145,
            24842096,
            24840981,
            24845191,
            24842247,
            24840284,
            24847109,
            24843919
        ],
        "E": [
            24834774,
            24835983,
            24832451,
            24837828,
            24833805,
            24837182,
            24833920,
            24836646,
            24835033,
            24838913,
            24837846,
            24833547,
            24837106,
            24837362,
            24839266,
            24837276,
            24838051,
            24835972,
            24836022
        ],
        "D": [
            24832202,
            24833876,
            24835915,
            24835246,
            24832704,
            24834168,
            24832774,
            24838949,
            24833061,
            24836615,
            24839525,
            24834336,
            24833791,
            24835394,
            24835786,
            24835146,
            24835911,
            24837569,
            24837832
        ],
        "C": [
            24830784,
            24831935,
            24846692,
            24833492,
            24831356,
            24831859,
            24830894,
            24833465,
            24831521,
            24835038,
            24835013,
            24830101,
            24832003,
            24831977,
            24833696,
            24832023,
            24832927,
            24833660,
            24834203
        ],
        "B": [
            24828716,
            24830642,
            24828869,
            24830153,
            24830045,
            24829484,
            24830872,
            24829643,
            24837759,
            24831145,
            24828453,
            24830132,
            24829454,
            24830410,
            24829830,
            24830884,
            24831500,
            24831921
        ],
        "A": [
            24825770,
            24826388,
            24825799,
            24826247,
            24825814,
            24825782,
            24825775,
            24825815,
            24827152,
            24827361,
            24826212,
            24825822,
            24826382,
            24826002,
            24825750,
            24826264,
            24826016,
            24825780,
            24828293
        ],
        "G": [
            24850234,
            25339793,
            24854056,
            24855563,
            24855744
        ]
    },
    "name": "A. Oath of the Night's Watch",
    "statement": "The Nightâ€™s Watch oath.With that begins the watch of Jon Snow. He is\r\nassigned the task to support the stewards.This time he has stewards with\r\nhim whom he has to provide support. Each steward has his own strength.\r\nJon Snow likes to support a steward only if there exists at least one\r\nsteward who has strength strictly less than him and at least one steward\r\nwho has strength strictly greater than him.Can you find how many\r\nstewards will Jon support?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> pt;\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\nconst ld TAU=2*acos(-1);\nconst ld eps=1e-7;\nconst int inf=1e9+99;\nconst ll linf=1e18+88;\n\n\n\nint32_t main() {\n\tint n; scanf(\"%d\",&n);\n\tstatic int a[100<<10];\n\tfor(int i=0;i<n;i++) scanf(\"%d\",a+i);\n\tint mn=*min_element(a,a+n);\n\tint mx=*max_element(a,a+n);\n\tint Z=0;\n\tfor(int i=0;i<n;i++) if(a[i]!=mx && a[i]!=mn) ++Z;\n\tprintf(\"%d\\n\",Z);\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. Oath of the Night's Watch.json",
    "editorial_link": "https://codeforces.com//blog/entry/50550",
    "editorial": "Set and Editorial by: vntshh You just have to find the number of\r\nelements greater than the minimum number occurring in the array and less\r\nthan the maximum number occurring in the array. This can be done in by\r\ntraversing the array once and finding the minimum and maximum of the\r\narray, and then in another traversal, find the good numbers. Complexity:\r\nCode\r\n",
    "hint": []
}