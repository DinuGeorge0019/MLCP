{"link": "https://codeforces.com//contest/1740/problem/D", "problemId": "1611413", "problem_idx": "D", "shortId": "1740D", "contest_number": "1740", "problem_submissions": {"H": [178379430, 178389839, 178370970, 178389787, 178394159, 178405718, 178393380, 178400994, 178473578], "G": [178363447, 178373152, 178390136, 178380782, 178380133, 178366412, 178381208, 178372252, 178364309, 178377085, 178379805, 178389960, 178394186, 178390668, 178429073, 178399239, 178398964, 178398319, 178393777, 178389532, 178457114, 178457090, 178457069, 178456881, 178456598], "F": [178342509, 178355726, 178353094, 178359313, 178375325, 178347566, 178343206, 178355344, 178419766, 178363409, 178364030, 178360259, 178371042, 178378751, 178405026, 178404845, 178404014, 178403791, 178403569, 178376955, 178368121, 178355891, 178355560, 178363171, 178364934], "E": [178337370, 178346224, 178348715, 178344194, 178352039, 178338198, 178335731, 178340043, 178343562, 178350554, 178352735, 178349059, 178343925, 178345775, 178364103, 178352981, 178344981, 178359372, 178346165, 178350475], "D": [178334153, 178339631, 178345824, 178338369, 178344365, 178352777, 178346625, 178336331, 178336614, 178338914, 178339308, 178344306, 178335725, 178354316, 178351979, 178370227, 178339993, 178338550, 178340955, 178340858], "C": [178329483, 178334722, 178336471, 178331649, 178333101, 178332328, 178330724, 178331197, 178330550, 178331983, 178331086, 178337583, 178330090, 178335594, 178335112, 178340402, 178335550, 178333891, 178336207, 178332182], "B": [178326239, 178328080, 178333593, 178327287, 178329054, 178327314, 178327001, 178329448, 178327787, 178327568, 178327277, 178328845, 178326455, 178328799, 178328762, 178333879, 178327499, 178329269, 178328122, 178330549], "A": [178322883, 178322996, 178323296, 178323217, 178323002, 178322816, 178327673, 178322982, 178323305, 178322810, 178323224, 178323080, 178322764, 178323327, 178324186, 178325267, 178322814, 178324090, 178323226, 178322754], "I": [179538712]}, "name": "D. Knowledge Cards", "statement": "Pak Chanek, a renowned scholar, invented a card puzzle using his\r\nknowledge. In the puzzle, you are given a board with n rows and m\r\ncolumns. Let (r, c) represent the cell in the r-th row and the c-th\r\ncolumn.Initially, there are k cards stacked in cell (1, 1). Each card\r\nhas an integer from 1 to k written on it. More specifically, the i-th\r\ncard of the stack in cell (1, 1) has the number a_i written on it. It is\r\nknown that no two cards have the same number written on them. In other\r\nwords, the numbers written on the cards are a permutation of integers\r\nfrom 1 to k. All other cells are empty.You need to move the k cards to\r\ncell (n, m) to create another stack of cards. Let b_i be the number\r\nwritten on the i-th card of the stack in cell (n, m). You should create\r\nthe stack in cell (n, m) in such a way so that b_i = i for all 1\r\nleq i\r\nleq k.In one move, you can remove the from a cell and place it onto an\r\nadjacent cell (a cell that shares a common side). If the target cell\r\nalready contains one or more cards, you place your card . You must do\r\neach operation while satisfying the following restrictions: Each cell\r\nother than (1,1) and (n,m) must not have more than one card on it. You\r\ncannot move a card onto cell (1,1). You cannot move a card from cell\r\n(n,m). Given the values of n, m, k and the array a, determine if the\r\npuzzle is solvable.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n, m, k;\n    std::cin >> n >> m >> k;\n    \n    std::vector<int> a(k);\n    for (int i = 0; i < k; i++) {\n        std::cin >> a[i];\n        a[i] = k - a[i];\n    }\n    \n    std::vector<bool> f(k);\n    int siz = 0;\n    for (int i = 0, j = 0; i < k; i++) {\n        while (!f[i]) {\n            f[a[j++]] = true;\n            siz++;\n        }\n        if (siz > n * m - 3) {\n            std::cout << \"TIDAK\\n\";\n            return;\n        }\n        f[i] = false;\n        siz--;\n    }\n    std::cout << \"YA\\n\";\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "data structures"], "dificulty": "1500", "interactive": false}