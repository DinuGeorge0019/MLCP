{
    "link": "https://codeforces.com//contest/1609/problem/C",
    "problemId": "1205811",
    "problem_idx": "C",
    "shortId": "1609C",
    "contest_number": "1609",
    "problem_submissions": {
        "H": [
            137263072,
            140966657,
            137541381,
            137373776,
            137353707,
            137353217
        ],
        "G": [
            137246775,
            137257898,
            137258174,
            137261032,
            137258429,
            137256905,
            137250571,
            137257690,
            137251480,
            137263274,
            137259638,
            137276051,
            137269427,
            137261135,
            137260806,
            137259792,
            137262185,
            137263614,
            137264862,
            137254900,
            137261420,
            137264154
        ],
        "F": [
            137240106,
            137246731,
            137244466,
            137246785,
            137246316,
            137246745,
            137260178,
            137270360,
            137247766,
            137257633,
            137249504,
            137249777,
            137249032,
            137252722,
            137252015,
            137251624,
            137252333,
            137250283,
            137261839,
            137252294,
            137249612
        ],
        "E": [
            137234780,
            137235959,
            137233979,
            137232935,
            137235656,
            137237935,
            137233267,
            137237781,
            137236310,
            137235301,
            137237711,
            137241732,
            137237330,
            137241596,
            137235797,
            137236926,
            137239464,
            137239281,
            137241206,
            137238999
        ],
        "D": [
            137226570,
            137230215,
            137231182,
            137228712,
            137232181,
            137231416,
            137229857,
            137231314,
            137233347,
            137230846,
            137231581,
            137229849,
            137233415,
            137234328,
            137231105,
            137231235,
            137232699,
            137231119,
            137233860,
            137235117
        ],
        "C": [
            137224003,
            137226381,
            137228113,
            137226088,
            137228622,
            137227880,
            137227092,
            137227813,
            137229692,
            137227035,
            137228022,
            137226433,
            137228702,
            137230474,
            137231768,
            137227164,
            137229482,
            137228456,
            137229353,
            137230487
        ],
        "B": [
            137222196,
            137223090,
            137224802,
            137223100,
            137224371,
            137223720,
            137223346,
            137224383,
            137222999,
            137223539,
            137224162,
            137223482,
            137224120,
            137224040,
            137223954,
            137223074,
            137224144,
            137224291,
            137224533,
            137224451
        ],
        "A": [
            137221600,
            137221784,
            137221681,
            137221800,
            137221985,
            137221740,
            137221875,
            137222467,
            137221786,
            137221979,
            137222676,
            137221642,
            137222045,
            137222137,
            137226851,
            137224172,
            137221659,
            137222130,
            137222631,
            137222150
        ]
    },
    "name": "C. Complex Market Analysis",
    "statement": "While performing complex market analysis William encountered the\r\nfollowing problem:For a given array a of size n and a natural number e,\r\ncalculate the number of pairs of natural numbers (i, k) which satisfy\r\nthe following conditions: 1\r\nle i, k i + e\r\ncdot k\r\nle n. Product a_i\r\ncdot a_{i + e}\r\ncdot a_{i + 2\r\ncdot e}\r\ncdot\r\nldots\r\ncdot a_{i + k\r\ncdot e} is a prime number. A prime number (or a prime) is a natural\r\nnumber greater than 1 that is not a product of two smaller natural\r\nnumbers.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 28.11.2021 17:38:41       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  const int M = (int) 1e6 + 10;\n  vector<bool> pr(M, true);\n  pr[0] = pr[1] = false;\n  for (int i = 2; i < M; i++) {\n    if (pr[i]) {\n      for (int j = i + i; j < M; j += i) {\n        pr[j] = false;\n      }\n    }\n  }\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n, e;\n    cin >> n >> e;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    vector<int> L(n);\n    vector<int> R(n);\n    for (int z = 0; z < e; z++) {\n      int i = z;\n      int cc = 0;\n      while (i < n) {\n        if (a[i] > 1) {\n          L[i] = cc + 1;\n          cc = 0;\n        } else {\n          cc += 1;\n        }\n        i += e;\n      }\n      cc = 0;\n      i -= e;\n      while (i >= 0) {\n        if (a[i] > 1) {\n          R[i] = cc + 1;\n          cc = 0;\n        } else {\n          cc += 1;\n        }\n        i -= e;\n      }\n    }\n    long long ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (pr[a[i]]) {\n        ans += L[i] * 1LL * R[i] - 1;\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "dp",
        "implementation",
        "number theory",
        "schedules",
        "two pointers"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\C. Complex Market Analysis.json",
    "editorial_link": "https://codeforces.com//blog/entry/97350",
    "editorial": "Note that the product of natural numbers is a prime number if, and only\r\nif, of these numbers equal to one and one number is prime.Next, let\u00e2\u0080\u0099s\r\ngroup all of our numbers into groups which are ones. It\u00e2\u0080\u0099s important that\r\nthese groups are separated by a prime numbers. If the current number is\r\nneither a one nor a prime, it means we stop building a group for the\r\ncurrent index.Let\u00e2\u0080\u0099s say we now have of these groups, then for each we\r\nmust add product , where is the number of ones in group . Also a group\r\nof ones doesn\u00e2\u0080\u0099t necessarily have to be connected to the subsequent group\r\nof ones, so to get the answer we must take into the account their\r\nproduct with the next prime (if there is one) and the previous prime (if\r\nthere is one) for this group.\r\n"
}