{
    "link": "https://codeforces.com//contest/1523/problem/B",
    "problemId": "1000212",
    "problem_idx": "B",
    "shortId": "1523B",
    "contest_number": "1523",
    "problem_submissions": {
        "F": [
            117916146,
            117914065,
            117905350,
            117900425,
            117909780,
            117912951,
            117923029,
            117905457,
            117920531,
            117920496,
            117911483,
            117908634,
            117907048,
            117936734,
            117936707,
            117936638,
            117936633,
            117936625,
            117936608,
            117905940,
            117911622,
            117911227,
            117910828,
            117920430,
            117916378,
            117911950,
            117912347,
            117936103,
            117935723
        ],
        "G": [
            117899863,
            117912955,
            117908386,
            117915802,
            117906341,
            117903204,
            117907803,
            117932659,
            117932628,
            117911801,
            118597582,
            117989759,
            117915684,
            117936837,
            117918793,
            117916945,
            117917431
        ],
        "D": [
            117881477,
            117886244,
            117886334,
            117887661,
            118167966,
            117918101,
            117929591,
            117890786,
            117890676,
            117893739,
            118119250,
            117887458,
            117887290,
            117893940,
            117890382,
            118081143,
            117890914,
            117883607,
            117887959,
            117895275,
            117888883,
            117902109,
            117889374
        ],
        "E": [
            117878219,
            117881962,
            117910641,
            117881787,
            117884807,
            117893823,
            117886171,
            117885405,
            117882043,
            117890552,
            117888754,
            117897027,
            117898439,
            117887443,
            117893294,
            117903524,
            117892701,
            117896279,
            117896129
        ],
        "C": [
            117876664,
            117878149,
            117877887,
            117879093,
            117889641,
            117882853,
            117877348,
            117879069,
            117877404,
            117877723,
            117880898,
            117876222,
            117880296,
            117876946,
            117880601,
            117879874,
            117879926,
            117880242,
            117902829
        ],
        "B": [
            117875490,
            117875567,
            117880589,
            117875816,
            117876680,
            117877360,
            117875700,
            117876723,
            117878349,
            117876280,
            117877999,
            117880072,
            117876899,
            117875787,
            117877756,
            117876654,
            117875833,
            117878179,
            117879465
        ],
        "A": [
            117874746,
            117874821,
            117882081,
            117874974,
            117874835,
            117874828,
            117874778,
            117874933,
            117874911,
            117874900,
            117876005,
            117883186,
            117874918,
            117874908,
            117875902,
            117874738,
            117874753,
            117874913,
            117876371
        ],
        "H": [
            117981868,
            117981132,
            118023855,
            118349130,
            117933591,
            118312467,
            118312428,
            119224810
        ]
    },
    "name": "B. Lord of the Values",
    "statement": "While trading on his favorite exchange trader William realized that he\r\nfound a vulnerability. Using this vulnerability he could change the\r\nvalues of certain internal variables to his advantage. To play around he\r\ndecided to change the values of all internal variables from a_1, a_2,\r\nldots, a_n to -a_1, -a_2,\r\nldots, -a_n. For some unknown reason, the number of service variables is\r\nalways an even number.William understands that with his every action he\r\nattracts more and more attention from the exchange\u2019s security team, so\r\nthe number of his actions must not exceed 5\r\n,000 and after every operation no variable can have an absolute value\r\ngreater than 10^{18}. William can perform actions of two types for two\r\nchosen variables with indices i and j, where i < j: Perform assignment\r\na_i = a_i + a_j Perform assignment a_j = a_j - a_i William wants you to\r\ndevelop a strategy that will get all the internal variables to the\r\ndesired values.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 30.05.2021 17:40:11       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      int foo;\n      cin >> foo;\n    }\n    cout << 3 * n << '\\n';\n    for (int i = 1; i <= n; i += 2) {\n      cout << \"1 \" << i << \" \" << i + 1 << '\\n';\n      cout << \"2 \" << i << \" \" << i + 1 << '\\n';\n      cout << \"1 \" << i << \" \" << i + 1 << '\\n';\n      cout << \"2 \" << i << \" \" << i + 1 << '\\n';\n      cout << \"1 \" << i << \" \" << i + 1 << '\\n';\n      cout << \"2 \" << i << \" \" << i + 1 << '\\n';\n    }\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\B. Lord of the Values.json",
    "editorial_link": "https://codeforces.com//blog/entry/91271",
    "editorial": "Notice that for transforming any pair of numbers into a pair a sequence\r\nof operations such as can be performed. Since is even we can apply this\r\nsequence of operations for all pairs of numbers for all from to .Final\r\ncomplexity: .\r\n"
}