{"link": "https://codeforces.com//contest/1804/problem/C", "problemId": "1824142", "problem_idx": "C", "shortId": "1804C", "contest_number": "1804", "problem_submissions": {"H": [197133699, 197211600], "G": [197106837, 197116479, 197124948, 197127592, 197122958, 197137640, 197134544, 197138362], "F": [197093293, 197105349, 197095528, 197104786, 197106624, 197098643, 197101524, 197103930, 197102162, 197105107, 197108552, 197108666, 197107628, 197142671, 197140184, 197139967, 197139883, 197139641, 197111482, 197111626, 197113675, 197111909, 197110044, 197110987, 197113933], "E": [197089405, 197085286, 197090524, 197097633, 197097337, 197091345, 197092803, 197096473, 197096893, 197095376, 197096756, 197096855, 197096490, 197096936, 197101267, 197098474, 197101399, 197096360, 197103528, 197097046], "D": [197081706, 197080440, 197082836, 197086161, 197088893, 197081349, 197083999, 197084952, 197086950, 197076993, 197086858, 197086874, 197084897, 197084889, 197084721, 197084970, 197089163, 197084662, 197086535, 197082927], "C": [197078079, 197076920, 197078785, 197081523, 197083238, 197076107, 197077574, 197078670, 197077463, 197082879, 197080775, 197081089, 197078608, 197079622, 197080414, 197078487, 197079270, 197080239, 197080507, 197079932], "B": [197075523, 197075248, 197075383, 197077168, 197080868, 197074547, 197074457, 197076648, 197075635, 197080800, 197077487, 197076188, 197075795, 197076995, 197076635, 197075839, 197076655, 197076988, 197077650, 197075789], "A": [197073420, 197073942, 197073446, 197073814, 197078430, 197073370, 197073351, 197073646, 197073456, 197078319, 197074505, 197073977, 197073328, 197073488, 197073501, 197073461, 197073950, 197074331, 197075653, 197073687]}, "name": "C. Pull Your Luck", "statement": "While James is gone on business, Vesper takes her time and explores what\r\nthe legendary Casino Royale has to offer to people who are fond of\r\ncompetitive programming.Her attention was grabbed by the very new \"Pull\r\nYour Luck\" roulette which functions in a pretty peculiar way. The\r\nroulette\u2019s wheel consists of n sectors number from 0 to n - 1. There is\r\nno ball and the winning sector is determined by a static arrow pointing\r\nto one of the sectors. Sectors\u2019 indexes go in the natural order and the\r\nwheel always spins in the direction of indexes increment. That means\r\nthat sector i + 1 goes right after sector i for all i from 0 to n - 2,\r\nand sector 0 goes right after sector n - 1.After a bet is made, the\r\nplayer is allowed to pull the triggering handle herself and cause the\r\nwheel to spin. If the player\u2019s initial pull is made with the force equal\r\nto positive integer f, the wheel will spin for f seconds. During the\r\nfirst second it will advance f sectors, the next second it will advance\r\nf - 1 sectors, then f - 2 sectors, and so on until it comes to a\r\ncomplete stop. After the wheel comes to a complete stop, the sector\r\nwhich the arrow is pointing to is the winning one.The roulette\u2019s arrow\r\ncurrently points at sector x. Vesper knows that she can pull the handle\r\nwith any integer force from 1 to p inclusive. Note that it is not\r\nallowed to pull the handle with force 0, i. e. not pull it all. The\r\nbiggest prize is awarded if the winning sector is 0. Now Vesper wonders\r\nif she can make sector 0 win by pulling the triggering handle exactly\r\nonce?\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n, x, p;\n    std::cin >> n >> x >> p;\n    \n    for (int i = 1; i <= std::min(p, 2 * n); i++) {\n        if ((x + 1LL * i * (i + 1) / 2) % n == 0) {\n            std::cout << \"Yes\\n\";\n            return;\n        }\n    }\n    std::cout << \"No\\n\";\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int t;\n    std::cin >> t;\n    \n    while (t--) {\n        solve();\n    }\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "math", "number theory"], "dificulty": "1500", "interactive": false}