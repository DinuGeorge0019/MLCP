{"link": "https://codeforces.com//contest/1307/problem/B", "problemId": "542678", "problem_idx": "B", "shortId": "1307B", "contest_number": "1307", "problem_submissions": {"D": [71334675, 71329379, 71297375, 71300630, 71300597, 71296525, 71299736, 71299787, 71299649, 71294218, 71299266, 71353437, 71301135, 71298819, 71297533, 71302173, 71301113, 71306340, 71311289, 71303681, 71296481], "F": [71318320, 71328004, 71328410, 71313540, 71342732, 71342701, 71342679, 71342641, 71378556, 71386768, 71330817, 71353605, 71341156, 71340667, 71331133, 71325872, 71974189], "E": [71311504, 71318452, 71321704, 71329781, 71312470, 71310373, 71310234, 71311741, 71326064, 71325657, 71312968, 71315289, 71309289, 71345858, 71345831, 71345723, 71345591, 71345520, 71345206, 71344772, 71344661, 71308214, 71331493, 71309218, 71315974, 71328300, 71317669, 71329605], "G": [71303096, 71336439, 71307493, 71308346, 71320475, 71303320, 71313925, 71322572, 71322223, 71309226, 71311369, 71356337, 71319400, 71321748, 71313979, 71354003, 71316843, 71327328, 71316390, 71329594, 71321365], "C": [71291268, 71289526, 71293976, 71293545, 71288006, 71294250, 71293163, 71291197, 71300886, 71294829, 71291105, 71294718, 71292675, 71291425, 71296070, 71290915, 71292479, 71297176, 71298646, 71291499], "B": [71289205, 71287726, 71290885, 71290721, 71289353, 71290602, 71289374, 71288121, 71299427, 71291607, 71289046, 71290292, 71334215, 71288723, 71290619, 71288909, 71289266, 71289248, 71288946, 71288924], "A": [71287300, 71287160, 71287363, 71290273, 71290150, 71287273, 71287420, 71292915, 71295372, 71287966, 71287342, 71287721, 71287194, 71287212, 71288221, 71287271, 71287331, 71287368, 71290172, 71287362]}, "name": "B. Cow and Friend", "statement": "Bessie has way too many friends because she is everyone\u2019s favorite cow!\r\nHer new friend Rabbit is trying to hop over so they can play! More\r\nspecifically, he wants to get from (0,0) to (x,0) by making multiple\r\nhops. He is only willing to hop from one point to another point on the\r\n2D plane if the Euclidean distance between the endpoints of a hop is one\r\nof its n favorite numbers: a_1, a_2,\r\nldots, a_n. What is the minimum number of hops Rabbit needs to get from\r\n(0,0) to (x,0)? Rabbit may land on points with non-integer coordinates.\r\nIt can be proved that Rabbit can always reach his destination.Recall\r\nthat the Euclidean distance between points (x_i, y_i) and (x_j, y_j) is\r\nsqrt{(x_i-x_j)^2+(y_i-y_j)^2}.For example, if Rabbit has favorite\r\nnumbers 1 and 3 he could hop from (0,0) to (4,0) in two hops as shown\r\nbelow. Note that there also exists other valid ways to hop to (4,0) in 2\r\nhops (e.g. (0,0)\r\nrightarrow (2,-\r\nsqrt{5})\r\nrightarrow (4,0)). In other words, each time Rabbit chooses some number\r\na_i and hops with distance equal to a_i in any direction he wants. The\r\nsame number can be used multiple times.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef double db;\nmt19937 mrand(random_device{}()); \nconst ll mod=1000000007;\nint rnd(int x) { return mrand() % x;}\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nconst int N=101000;\nint n,x,a[N],_;\nvoid solve() {\n\tscanf(\"%d%d\",&n,&x);\n\tint mx=0,suc=0;;\n\trep(i,0,n) {\n\t\tscanf(\"%d\",a+i);\n\t\tmx=max(mx,a[i]);\n\t\tif (a[i]==x) suc=1;\n\t}\n\tif (suc) {\n\t\tputs(\"1\");\n\t\treturn;\n\t}\n\tint r=(x+mx-1)/mx;\n\tprintf(\"%d\\n\",max(2,r));\n}\n\nint main() {\n\tfor (scanf(\"%d\",&_);_;_--) {\n\t\tsolve();\n\t}\n}\n"], "input": "", "output": "", "tags": ["geometry", "greedy", "math"], "dificulty": "1300", "interactive": false}