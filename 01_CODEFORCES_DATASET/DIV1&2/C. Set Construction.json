{"link": "https://codeforces.com//contest/1761/problem/C", "problemId": "1651703", "problem_idx": "C", "shortId": "1761C", "contest_number": "1761", "problem_submissions": {"F1": [181783681, 181789408, 181787826, 181807817, 181793725, 181798874, 181812117, 181796851, 181792193, 181797286, 181792466, 181800291, 181799120, 181798951, 181797538, 181796549, 181801616, 181795934, 181802212, 181805577, 181795481], "E": [181767412, 181775228, 181773318, 181773199, 181776029, 181768641, 181774177, 181773946, 181778599, 181783359, 181770606, 181780149, 181779791, 181784860, 181784163, 181786738, 181799018, 181784766, 181805355, 181777139], "B": [181758217, 181754631, 181753022, 181750562, 181750818, 181752710, 181752904, 181761535, 181751867, 181753244, 181749713, 181752562, 181752197, 181751335, 181785787, 181754006, 181756438, 181751473, 181751400, 181750387], "C": [181757137, 181757883, 181756839, 181754860, 181753609, 181755220, 181756960, 181758423, 181755837, 181756467, 181755169, 181757040, 181757304, 181769451, 181757169, 181757887, 181761524, 181755570, 181754021, 181753237], "D": [181754215, 181780914, 181764059, 181764559, 181763628, 181762248, 181763698, 181768454, 181766485, 181764872, 181761188, 181770079, 181765691, 181765764, 181766812, 181780108, 181774890, 181778415, 181762397, 181766534], "A": [181747969, 181747996, 181753999, 181748106, 181748091, 181748074, 181748126, 181748232, 181748177, 181750270, 181748024, 181748492, 181748221, 181748149, 181749212, 181750341, 181748955, 181748081, 181748111, 181748040], "G": [181798925, 181813421], "F2": [181809122, 181811738, 181814199, 181819747, 181813452, 181813278, 181812897, 181812682, 181812626, 181812463, 181811716, 181806789]}, "name": "C. Set Construction", "statement": "You are given a binary matrix b (all elements of the matrix are 0 or 1)\r\nof n rows and n columns.You need to construct a n sets A_1, A_2,\r\nldots, A_n, for which the following conditions are satisfied: Each set\r\nis nonempty and consists of distinct integers between 1 and n inclusive.\r\nAll sets are distinct. For all pairs (i,j) satisfying 1\r\nleq i, j\r\nleq n, b_{i,j}=1 if and only if A_i\r\nsubsetneq A_j. In other words, b_{i, j} is 1 if A_i is a proper subset\r\nof A_j and 0 otherwise. Set X is a proper subset of set Y, if X is a\r\nnonempty subset of Y, and X\r\nneq Y.It\u2019s guaranteed that for all test cases in this problem, such n\r\nsets exist. If there are multiple solutions, you can output any of them.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 20.11.2022 18:47:10       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<vector<int>> g(n, vector<int>(n));\n    for (int i = 0; i < n; i++) {\n      string foo;\n      cin >> foo;\n      for (int j = 0; j < n; j++) {\n        if (foo[j] == '1') {\n          g[i][j] = 1;\n        }\n      }\n      g[i][i] = 1;\n    }\n    for (int k = 0; k < n; k++) {\n      for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n          g[i][j] |= (g[i][k] & g[k][j]);\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      vector<int> v;\n      for (int j = 0; j < n; j++) {\n        if (g[j][i]) {\n          v.push_back(j);\n        }\n      }\n      cout << v.size();\n      for (int x : v) {\n        cout << \" \" << x + 1;\n      }\n      cout << '\\n';\n    }\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "dificulty": "1400", "interactive": false}