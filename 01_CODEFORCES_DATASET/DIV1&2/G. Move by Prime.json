{"link": "https://codeforces.com//contest/653/problem/G", "problemId": "52171", "problem_idx": "G", "shortId": "653G", "contest_number": "653", "problem_submissions": {"D": [16882408, 16811537, 16810665, 16808469, 16808880, 16810169, 16810193, 16817835, 16817684, 16809816, 16810008, 16809541, 16810009, 16809483, 16815488, 16815467, 16809743, 16815857, 16810399, 16830307, 16830297, 16830295, 16809555], "C": [16814329, 16808201, 16807277, 16809824, 16809484, 16809237, 16808970, 16808978, 16808649, 16810747, 16824380, 16810982, 16808580, 16808306, 16809772, 16808759, 16815412, 16808885, 16810588], "F": [16813454, 16812764, 16813359, 16811313, 16812655, 16813981, 16813203, 16812204, 16812853, 16813207, 16813077, 16811759, 16813557, 16817070, 16813698, 16812540, 16812526], "E": [16812212, 16809858, 16810442, 16814020, 16811168, 16811817, 16811727, 16814449, 16814876, 16813977, 16814689, 16810991, 16810903, 16815613, 16810612, 16812105, 16811842], "B": [16811122, 16806823, 16808941, 16806712, 16806895, 16807172, 16806271, 16807190, 16807288, 16809090, 16808193, 16806845, 16806473, 16807895, 16806798, 16807486, 16808397, 16806933], "A": [16810886, 16805361, 16805416, 16805408, 16805395, 16805730, 16805338, 16805605, 16805967, 16806396, 16807313, 16805370, 16805342, 16805498, 16805369, 16805701, 16806883, 16805397], "G": [16810637, 16830434, 16849997, 16871778, 16820127, 16813576, 16863345, 16813594, 16830285]}, "name": "G. Move by Prime", "statement": "Pussycat Sonya has an array consisting of positive integers. There are\r\npossible subsequences of the array. For each subsequence she counts the\r\nminimum number of operations to make all its elements equal. Each\r\noperation must be one of two: Choose some element of the subsequence and\r\nmultiply it by some prime number. Choose some element of the subsequence\r\nand divide it by some prime number. The chosen element must be divisible\r\nby the chosen prime number. What is the sum of minimum number of\r\noperations for all possible subsequences? Find and print this sum modulo\r\n.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\n\ntypedef pair<ll,ll> PLL;\nnamespace Factor {\n\tconst int N=1010000;\n\tll C,fac[10010],n,mut,a[1001000];\n\tint T,cnt,i,l,prime[N],p[N],psize,_cnt;\n\tll _e[100],_pr[100];\n\tvector<ll> d;\n\tinline ll mul(ll a,ll b,ll p) {\n\t\tif (p<=1000000000) return a*b%p;\n\t\telse if (p<=1000000000000ll) return (((a*(b>>20)%p)<<20)+(a*(b&((1<<20)-1))))%p;\n\t\telse {\n\t\t\tll d=(ll)floor(a*(long double)b/p+0.5);\n\t\t\tll ret=(a*b-d*p)%p;\n\t\t\tif (ret<0) ret+=p;\n\t\t\treturn ret;\n\t\t}\n\t}\n\tvoid prime_table(){\n\t\tint i,j,tot,t1;\n\t\tfor (i=1;i<=psize;i++) p[i]=i;\n\t\tfor (i=2,tot=0;i<=psize;i++){\n\t\t\tif (p[i]==i) prime[++tot]=i;\n\t\t\tfor (j=1;j<=tot && (t1=prime[j]*i)<=psize;j++){\n\t\t\t\tp[t1]=prime[j];\n\t\t\t\tif (i%prime[j]==0) break;\n\t\t\t}\n\t\t}\n\t}\n\tvoid init(int ps) {\n\t\tpsize=ps;\n\t\tprime_table();\n\t}\n\tll powl(ll a,ll n,ll p) {\n\t\tll ans=1;\n\t\tfor (;n;n>>=1) {\n\t\t\tif (n&1) ans=mul(ans,a,p);\n\t\t\ta=mul(a,a,p);\n\t\t}\n\t\treturn ans;\n\t}\n\tbool witness(ll a,ll n) {\n\t\tint t=0;\n\t\tll u=n-1;\n\t\tfor (;~u&1;u>>=1) t++;\n\t\tll x=powl(a,u,n),_x=0;\n\t\tfor (;t;t--) {\n\t\t\t_x=mul(x,x,n);\n\t\t\tif (_x==1 && x!=1 && x!=n-1) return 1;\n\t\t\tx=_x;\n\t\t}\n\t\treturn _x!=1;\n\t}\n\tbool miller(ll n) {\n\t\tif (n<2) return 0;\n\t\tif (n<=psize) return p[n]==n;\n\t\tif (~n&1) return 0;\n\t\tfor (int j=0;j<=7;j++) if (witness(rand()%(n-1)+1,n)) return 0;\n\t\treturn 1;\n\t}\n\tll gcd(ll a,ll b) {\n\t\tll ret=1;\n\t\twhile (a!=0) {\n\t\t\tif ((~a&1) && (~b&1)) ret<<=1,a>>=1,b>>=1;\n\t\t\telse if (~a&1) a>>=1; else if (~b&1) b>>=1;\n\t\t\telse {\n\t\t\t\tif (a<b) swap(a,b);\n\t\t\t\ta-=b;\n\t\t\t}\n\t\t}\n\t\treturn ret*b;\n\t}\n\tll rho(ll n) {\n\t\tfor (;;) {\n\t\t\tll X=rand()%n,Y,Z,T=1,*lY=a,*lX=lY;\n\t\t\tint tmp=20;\n\t\t\tC=rand()%10+3;\n\t\t\tX=mul(X,X,n)+C;*(lY++)=X;lX++;\n\t\t\tY=mul(X,X,n)+C;*(lY++)=Y;\n\t\t\tfor(;X!=Y;) {\n\t\t\t\tll t=X-Y+n;\n\t\t\t\tZ=mul(T,t,n);\n\t\t\t\tif(Z==0) return gcd(T,n);\n\t\t\t\ttmp--;\n\t\t\t\tif (tmp==0) {\n\t\t\t\t\ttmp=20;\n\t\t\t\t\tZ=gcd(Z,n);\n\t\t\t\t\tif (Z!=1 && Z!=n) return Z;\n\t\t\t\t}\n\t\t\t\tT=Z;\n\t\t\t\tY=*(lY++)=mul(Y,Y,n)+C;\n\t\t\t\tY=*(lY++)=mul(Y,Y,n)+C;\n\t\t\t\tX=*(lX++);\n\t\t\t}\n\t\t}\n\t}\n\tvoid _factor(ll n) {\n\t\tfor (int i=0;i<cnt;i++) {\n\t\t\tif (n%fac[i]==0) n/=fac[i],fac[cnt++]=fac[i];}\n\t\tif (n<=psize) {\n\t\t\tfor (;n!=1;n/=p[n]) fac[cnt++]=p[n];\n\t\t\treturn;\n\t\t}\n\t\tif (miller(n)) fac[cnt++]=n;\n\t\telse {\n\t\t\tll x=rho(n);\n\t\t\t_factor(x);_factor(n/x);\n\t\t}\n\t}\n\tvoid dfs(ll x,int dep) {\n\t\tif (dep==_cnt) d.pb(x);\n\t\telse {\n\t\t\tdfs(x,dep+1);\n\t\t\tfor (int i=1;i<=_e[dep];i++) dfs(x*=_pr[dep],dep+1);\n\t\t}\n\t}\n\tvoid norm() {\n\t\tsort(fac,fac+cnt);\n\t\t_cnt=0;\n\t\trep(i,0,cnt) if (i==0||fac[i]!=fac[i-1]) _pr[_cnt]=fac[i],_e[_cnt++]=1;\n\t\t\telse _e[_cnt-1]++;\n\t}\n\tvector<ll> getd() {\n\t\td.clear();\n\t\tdfs(1,0);\n\t\treturn d;\n\t}\n\tvector<ll> factor(ll n) {\n\t\tcnt=0;\n\t\t_factor(n);\n\t\tnorm();\n\t\treturn getd();\n\t}\n\tvector<PLL> factorG(ll n) {\n\t\tcnt=0;\n\t\t_factor(n);\n\t\tnorm();\n\t\tvector<PLL> d;\n\t\trep(i,0,_cnt) d.pb(mp(_pr[i],_e[i]));\n\t\treturn d;\n\t}\n\tbool is_primitive(ll a,ll p) {\n\t\tassert(miller(p));\n\t\tvector<PLL> D=factorG(p-1);\n\t\trep(i,0,SZ(D)) if (powl(a,(p-1)/D[i].fi,p)==1) return 0;\n\t\treturn 1;\n\t}\n}\n\nconst int N=301010;\nll fac[N],inv[N],sm[N],ms[N];\nint x,ans,n;\nmap<int,int> hs[N];\nll comb(int x,int y) {\n\tif (y<0||y>x) return 0;\n\treturn fac[x]*inv[y]%mod*inv[x-y]%mod;\n}\nll solve(VI &d) {\n\tint cnt=0;\n\tll ret=0;\n//\trep(i,0,SZ(d)) printf(\"%d \",d[i]);\n//\tputs(\"\");\n\trep(i,0,SZ(d)) {\n\t\tret+=i*(ms[cnt+d[i]]-ms[cnt]);\n\t\tret%=mod;\n\t\tcnt+=d[i];\n\t}\n\tcnt=0;\n\tper(i,0,SZ(d)) {\n\t\tret-=i*(ms[cnt+d[i]]-ms[cnt]);\n\t\tret%=mod;\n\t\tcnt+=d[i];\n\t}\n\treturn ret;\n}\nint main() {\n\tFactor::init(1000000);\n\tscanf(\"%d\",&n);\n\tfac[0]=inv[0]=1;\n\trep(i,1,n+1) fac[i]=fac[i-1]*i%mod,inv[i]=powmod(fac[i],mod-2);\n\tsm[0]=0;\n\trep(i,1,n) sm[i]=(sm[i-1]+comb(n-1,i-1))%mod;\n\trep(i,1,n+1) ms[i]=(ms[i-1]+sm[i-1])%mod;\n\trep(i,1,n+1) {\n\t\tscanf(\"%d\",&x);\n\t\tvector<PLL> d=Factor::factorG(x);\n\t\tfor (auto p:d) hs[p.fi][p.se]++;\n\t}\n\trep(i,1,300001) if (!hs[i].empty()) {\n\t\tint mx=(--hs[i].end())->fi;\n\t\tVI d=VI(mx+1,0);\n\t\td[0]=n;\n\t\tfor (auto p:hs[i]) d[p.fi]+=p.se,d[0]-=p.se;\n\t\tans=(ans+solve(d))%mod;\n\t}\n\tif (ans<0) ans+=mod;\n\tprintf(\"%d\\n\",ans);\n}\n\n/*\nint comb[1010][1010];\nint main() {\n//\trep(i,)\n\tcomb[0][0]=1;\n\trep(i,1,1001) {\n\t\tcomb[i][0]=comb[i][i]=1;\n\t\trep(j,1,i) {\n\t\t\tcomb[i][j]+=comb[i-1][j-1]+comb[i-1][j];\n\t\t\tif (comb[i][j]>=mod) comb[i][j]%mod;\n\t\t}\n\t}\n\trep(i,1,11) rep(j,1,11) {\n\t\tll ret=0;\n\t\tfor (int x=1;x<=i+1&&x<=j;x++) ret=(ret+comb[i][x-1]*comb[j][x]);\n\t\tprintf(\"%d %d %d %d\\n\",i,j,comb[i+j][j-1]-comb[j][j-i-1],ret);\n\t}\n}*/\n"], "input": "", "output": "", "tags": ["combinatorics", "math", "number theory"], "dificulty": "3100", "interactive": false}