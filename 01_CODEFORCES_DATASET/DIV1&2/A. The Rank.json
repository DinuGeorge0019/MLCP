{
    "link": "https://codeforces.com//contest/1017/problem/A",
    "problemId": "205991",
    "problem_idx": "A",
    "shortId": "1017A",
    "contest_number": "1017",
    "problem_submissions": {
        "D": [
            213438615,
            41349796,
            41350791,
            41348185,
            41349812,
            41350101,
            41348724,
            41347389,
            41349904,
            41347605,
            41349745,
            41349033,
            41348833,
            41350403,
            41348388,
            41346916,
            41354063,
            41351152,
            41351165,
            41350393
        ],
        "G": [
            41374563,
            41365956,
            41365630,
            41370631,
            41581755
        ],
        "E": [
            41372644,
            41354131,
            41370166,
            41371119,
            41372376,
            41372311,
            41372287,
            41351667,
            41351074,
            41355101,
            41350783,
            41352192,
            41358773,
            41351309,
            41350915,
            41353764,
            41670429,
            41352396,
            41371198,
            41367467,
            41359456,
            41372423,
            41372409,
            41364755,
            41352601,
            41351865,
            41355587
        ],
        "H": [
            41367702,
            41388366,
            41626780
        ],
        "F": [
            41355954,
            41350751,
            41350606,
            41351910,
            41355898,
            41353364,
            41356617,
            41361175,
            41354830,
            41361644,
            41363928,
            41363246,
            41362644,
            41355024,
            41364885,
            41350456,
            41363913,
            41365213,
            41366266
        ],
        "C": [
            41344757,
            41346763,
            41343411,
            41343517,
            41344074,
            41345347,
            41344535,
            41344681,
            41344025,
            41345552,
            41345435,
            41344114,
            41346166,
            41344588,
            41343025,
            41345381,
            41348981,
            41347870,
            41345665
        ],
        "B": [
            41341663,
            41342076,
            41341369,
            41340402,
            41341632,
            41341916,
            41341844,
            41341458,
            41340722,
            41342695,
            41342729,
            41341507,
            41343151,
            41342641,
            41340890,
            41341644,
            41344184,
            41342297,
            41342415
        ],
        "A": [
            41338985,
            41339200,
            41339204,
            41344352,
            41339618,
            41339017,
            41339766,
            41339115,
            41339233,
            41339235,
            41340222,
            41339363,
            41338992,
            41339153,
            41339052,
            41339096,
            41339145,
            41339283,
            41339775
        ]
    },
    "name": "A. The Rank",
    "statement": "John Smith knows that his son, Thomas Smith, is among the best students\r\nin his class and even in his school. After the students of the school\r\ntook the exams in English, German, Math, and History, a table of results\r\nwas formed.There are n students, each of them has a id (from 1 to n).\r\nThomas\u2019s id is 1. Every student has four scores correspond to his or her\r\nEnglish, German, Math, and History scores. The students are given in\r\norder of increasing of their ids.In the table, the students will be\r\nsorted by the sum of their scores. So, a student with the largest sum\r\nwill get the first place. If two or more students have the same sum,\r\nthese students will be sorted by their ids. Please help John find out\r\nthe rank of his son.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> cd;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\ntypedef pair<ld,ld> pd;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\ntypedef vector<cd> vcd;\n\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nconst int MOD = 1000000007;\nconst ll INF = 1e18;\nconst int MX = 100001;\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    int n; cin >> n;\n    int z;\n    vi v;\n    F0R(i,n) {\n        int a,b,c,d; cin >> a >> b >> c >> d;\n        v.pb(a+b+c+d);\n        if (i == 0) z = a+b+c+d;\n    }\n    sort(v.rbegin(),v.rend());\n    F0R(i,sz(v)) if (v[i] == z) {\n        cout << i+1;\n        exit(0);\n    }\n}\n\n/* Look for:\n* the exact constraints (multiple sets are too slow for n=10^6 :( ) \n* special cases (n=1?)\n* overflow (ll vs int?)\n* array bounds\n*/"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\A. The Rank.json",
    "editorial_link": "https://codeforces.com/blog/entry/61081",
    "editorial": "For each student, add his/her scores together and count how many\r\nstudents have strictly lower scores than Thomas.Complexity: or .\r\n"
}