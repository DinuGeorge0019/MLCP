{
    "link": "https://codeforces.com//contest/1991/problem/C",
    "problemId": "2781503",
    "problem_idx": "C",
    "shortId": "1991C",
    "contest_number": "1991",
    "problem_submissions": {
        "H": [
            273210632,
            273212730,
            273219908,
            273194851,
            273200656,
            273213505,
            273204889,
            273220591,
            273225451,
            273220804,
            273226512,
            273222266,
            273229115,
            278405080,
            273216843
        ],
        "G": [
            273180456,
            273179521,
            273174064,
            273209283,
            273179708,
            273185549,
            273216085,
            273188851,
            273191410,
            273193985,
            273189153,
            273194518,
            273197531,
            273190195,
            273195818,
            273188177,
            273190908,
            273195464,
            273198241
        ],
        "F": [
            273160781,
            273160990,
            273158593,
            273158141,
            273171320,
            273168196,
            273159727,
            273170129,
            273173513,
            273170857,
            273165439,
            273182207,
            273174869,
            273166190,
            273163947,
            273173198,
            273175470,
            273163587,
            273174682,
            273170108
        ],
        "E": [
            273150868,
            273153734,
            273152235,
            273150823,
            273156934,
            273151786,
            273150935,
            273157824,
            273151366,
            273154414,
            273174335,
            273161395,
            273159133,
            273156803,
            273161464,
            273162124,
            273154749,
            273158567,
            273155964
        ],
        "D": [
            273143134,
            273144551,
            273142645,
            273141713,
            273147820,
            273143829,
            273141673,
            273145581,
            273156995,
            273145729,
            273149790,
            273146459,
            273144249,
            273145676,
            273154684,
            273150687,
            273147840,
            273144991,
            273148567
        ],
        "C": [
            273139495,
            273142387,
            273139319,
            273241170,
            273142853,
            273141897,
            273140491,
            273138783,
            273141460,
            273141958,
            273141853,
            273144830,
            273141321,
            273143714,
            273141051,
            273142758,
            273145128,
            273137630,
            273141184,
            273143400
        ],
        "B": [
            273133106,
            273134906,
            273133339,
            273134525,
            273138116,
            273135569,
            273133092,
            273135379,
            273136693,
            273135755,
            273136343,
            273135805,
            273132915,
            273135366,
            273136849,
            273139913,
            273132449,
            273135138,
            273136549
        ],
        "A": [
            273130858,
            273132065,
            273130939,
            273130875,
            273131982,
            273132539,
            273130929,
            273131106,
            273131228,
            273130992,
            273131052,
            273131178,
            273130862,
            273131382,
            273131308,
            273132778,
            273130871,
            273130965,
            273131362
        ],
        "I": [
            273238749,
            273429741
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/132021",
    "editorial": "If the array contains both odd and even numbers, it is impossible to zero the array. This is because any operation will maintain the presence of both odd and even elements.\n\nOtherwise, if all elements in the array are either odd or even, it is feasible to zero the array in no more than 31\n operations.\n\nThe operation strategy works by iteratively narrowing the range of all elements. Initially, the range of all elements is between [0,230]\n. Starting from x=229\n, we use each power of 2\n as x\n, reducing the exponent by one each time (i.e., 229,228,,20\n). After each operation, the range of all elements is halved, narrowed down to [0,x]\n. Continuing this process, after 30\n operations, all elements will become 0\n or 1\n. If all elements are 1\n after 30\n operations, perform one last operation with x=1\n to turn all 1s\n into 0s\n.",
    "name": "C. Absolute Zero",
    "statement": "You are given an array a of n integers.In one operation, you will\r\nperform the following two-step move: Choose an integer x (0\r\nle x\r\nle 10^{9}). Replace each a_i with |a_i - x|, where |v| denotes the\r\nabsolute value of v. For example, by choosing x = 8, the array [5, 7,\r\n10] will be changed into [|5-8|, |7-8|, |10-8|] = [3,1,2].Construct a\r\nsequence of operations to make all elements of a equal to 0 in at most\r\n40 operations or determine that it is impossible. You do need to\r\nminimize the number of operations.\r\n",
    "solutions": [
        "/** *    author:  tourist *    created: 28.07.2024 10:37:52**/#include <bits/stdc++.h> using namespace std; #ifdef LOCAL#include \"algo/debug.h\"#else#define debug(...) 42#endif int main() {  ios::sync_with_stdio(false);  cin.tie(nullptr);  int tt;  cin >> tt;  while (tt--) {    int n;    cin >> n;    vector<int> a(n);    for (int i = 0; i < n; i++) {      cin >> a[i];    }    bool ok = true;    for (int i = 1; i < n; i++) {      if (a[i] % 2 != a[0] % 2) {        ok = false;        break;      }    }    if (!ok) {      cout << -1 << '\\n';      continue;    }    ranges::sort(a);    cout << 32 << '\\n';    cout << a[0];    for (int i = 29; i >= 0; i--) {      cout << \" \" << (1 << i);    }    cout << \" \" << 1 << '\\n';  }  return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\C. Absolute Zero.json",
    "hint": [
        "Hint Can you decrease maximum by half in one operation?"
    ]
}