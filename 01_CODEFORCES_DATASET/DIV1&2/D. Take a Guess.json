{"link": "https://codeforces.com//contest/1556/problem/D", "problemId": "1093325", "problem_idx": "D", "shortId": "1556D", "contest_number": "1556", "problem_submissions": {"H": [127528421, 127373567, 127527040, 127375388, 127394013, 127386870, 127381921, 127387937, 127394050, 127389040, 127428317, 127427887, 127554513, 127394843, 127394720, 127394710, 127394566, 127388015, 127563493, 127391319, 127413892, 127413850, 127391995, 190714866, 127387774], "G": [127390700, 127387983, 127394350, 127373122, 127379900, 127386180, 127417272, 127382224, 127382638, 127388751, 127407653, 127407647, 127407608, 127407584, 127407566, 127386088, 127384803, 127387460, 127387640], "F": [127355517, 127358676, 127354501, 127360575, 127359102, 127358993, 127363463, 127363603, 127365708, 127364449, 127360085, 127362064, 127372929, 127362249, 127375013, 127359868, 127372641, 127367693, 127374334, 127375402], "E": [127351296, 127352912, 127351562, 127356521, 127354559, 127354907, 127360891, 127356050, 127360001, 127359317, 127356239, 127358250, 127364802, 127356923, 127358834, 127355363, 127366513, 127364481, 127365791, 127370671], "D": [127346830, 127349657, 127348248, 127352056, 127350226, 127351918, 127354957, 127351335, 127356577, 127354677, 127353022, 127352794, 127358047, 127352764, 127356062, 127349435, 127357493, 127359353, 127355308, 127356263], "C": [127342221, 127343475, 127345171, 127346052, 127344444, 127347970, 127343862, 127341055, 127350101, 127347701, 127344590, 127346041, 127349062, 127346563, 127349912, 127346975, 127349244, 127343756, 127348599, 127364090], "A": [127338005, 127334498, 127334512, 127336074, 127334497, 127335667, 127334534, 127334495, 127334713, 127336416, 127334993, 127336217, 127334858, 127334721, 127334712, 127334514, 127335446, 127334480, 127334660, 127334680], "B": [127336233, 127336922, 127337115, 127340977, 127338217, 127339999, 127337368, 127336161, 127338774, 127342382, 127338043, 127341949, 127339720, 127340565, 127339178, 127338941, 127341395, 127336543, 127339094, 127344978]}, "name": "D. Take a Guess", "statement": "William has a certain sequence of integers a_1, a_2,\r\ndots, a_n in his mind, but due to security concerns, he does not want to\r\nreveal it to you completely. William is ready to respond to no more than\r\n2\r\ncdot n of the following questions: What is the result of a bitwise AND\r\nof two items with indices i and j (i\r\nneq j) What is the result of a bitwise OR of two items with indices i\r\nand j (i\r\nneq j) You can ask William these questions and you need to find the k-th\r\nsmallest number of the sequence.Formally the k-th smallest number is\r\nequal to the number at the k-th place in a 1-indexed array sorted in\r\nnon-decreasing order. For example in array [5, 3, 3, 10, 1] 4th smallest\r\nnumber is equal to 5, and 2nd and 3rd are 3.\r\n", "solutions": ["//Awwawa! Dis cold yis ratten buy Pikachu!\n#include <bits/stdc++.h>\n#define ll long long\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define vi vector<int>\n#define pi pair<int, int>\n#define mod 998244353\ntemplate<typename T> bool chkmin(T &a, T b){return (b < a) ? a = b, 1 : 0;}\ntemplate<typename T> bool chkmax(T &a, T b){return (b > a) ? a = b, 1 : 0;}\nll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b >> 1); ns = ns * ns % mod; if (b & 1) ns = ns * a % mod; return ns;}\nusing namespace std;\nconst int maxn = 10005;\nvi r[maxn], g;\nvi ask(int u, int v) {\n    cout << \"and \" << u << ' ' << v << endl; fflush(stdout);\n    int res; scanf(\"%d\", &res);\n    int ed; \n    cout << \"or \" << u << ' ' << v << endl; fflush(stdout);\n    scanf(\"%d\", &ed);\n    vi ff(30);\n    for (int i = 0; i < 30; i++) {\n        int u = (res >> i) & 1, v = (ed >> i) & 1;\n        ff[i] = u + v;\n    }\n    return ff;\n}\nint a[maxn];\nint main() {\n    int n, k;\n    cin >> n >> k;\n    for (int i = 2; i <= n; i++)\n        r[i] = ask(1, i);\n    g = ask(2, 3);\n    for (int i = 0; i < 30; i++) {\n        int fx = (r[2][i] + r[3][i] - g[i]) / 2;\n        a[1] += (fx) << i;\n        for (int j = 2; j <= n; j++) {\n            a[j] += (r[j][i] - fx) << i;\n        }\n    }\n    sort(a + 1, a + n + 1);\n    cout << \"finish \" << a[k] << endl; fflush(stdout);\n    return (0-0); //<3\n}"], "input": "", "output": "", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "dificulty": "1800", "interactive": false}