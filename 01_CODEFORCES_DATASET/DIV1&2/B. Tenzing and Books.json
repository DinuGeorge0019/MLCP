{
    "link": "https://codeforces.com//contest/1842/problem/B",
    "problemId": "1978966",
    "problem_idx": "B",
    "shortId": "1842B",
    "contest_number": "1842",
    "problem_submissions": {
        "H": [
            210909272,
            210915649,
            210920105,
            210920155,
            210922877,
            210917228,
            210922837,
            210930795,
            210943236,
            210937664,
            210940497,
            210923705,
            210946319,
            210934622,
            210945105,
            210899880,
            210946698,
            210939780,
            210945932
        ],
        "F": [
            210904139,
            210906080,
            210912565,
            210912372,
            210898025,
            210899929,
            210907320,
            210916813,
            210914105,
            210920055,
            210921458,
            210913885,
            210930158,
            210926455,
            210915591,
            210926376,
            210920616,
            210915480,
            210926627
        ],
        "E": [
            210900474,
            210894310,
            210898608,
            210904065,
            210915135,
            210928274,
            210898671,
            210908613,
            210902774,
            210908660,
            210907798,
            210940198,
            210905531,
            210907005,
            210910569,
            210945488,
            210908738,
            210905745,
            210907496
        ],
        "D": [
            210896488,
            210888362,
            210895704,
            210886302,
            210889254,
            210887549,
            210895428,
            210893212,
            210903157,
            210896694,
            210890657,
            210891182,
            210892762,
            210896576,
            210915222,
            210891979,
            210892349,
            210897573
        ],
        "G": [
            210891898,
            210900879,
            210908657,
            210918356,
            210923373,
            210939093,
            210921066,
            210918175,
            210911260,
            210924814,
            210932494,
            210913130,
            210941401,
            210927457,
            210933616,
            210927314,
            210931000,
            210936010
        ],
        "C": [
            210877958,
            210881836,
            210878997,
            210877037,
            210879744,
            210878770,
            210882382,
            210884108,
            210887371,
            210884900,
            210892630,
            210896219,
            210883482,
            210884636,
            210910637,
            210882729,
            210933971,
            210885406
        ],
        "A": [
            210875095,
            210875812,
            210874424,
            210888796,
            210874470,
            210876122,
            210874664,
            210877287,
            210875659,
            210882217,
            210874539,
            210875197,
            210874805,
            210874426,
            210902716,
            210874934,
            210945780,
            210885821
        ],
        "B": [
            210874375,
            210878347,
            210876059,
            210890061,
            210876166,
            210875757,
            210877955,
            210879984,
            210877325,
            210880724,
            210876899,
            210877184,
            210877441,
            210885377,
            210916237,
            210877578,
            210940672,
            210885692
        ],
        "I": [
            210953525,
            211184344,
            211107115
        ]
    },
    "name": "B. Tenzing and Books",
    "statement": "Tenzing received 3n books from his fans. The books are arranged in 3\r\nstacks with n books in each stack. Each book has a non-negative integer\r\ndifficulty rating.Tenzing wants to read some (possibly zero) books. At\r\nfirst, his is 0.To read the books, Tenzing will choose a non-empty\r\nstack, read the book on the top of the stack, and then discard the book.\r\nIf Tenzing’s knowledge is currently u, then his knowledge will become\r\nu|v after reading a book with difficulty rating v. Here | denotes the\r\nbitwise OR operation. Note that Tenzing can stop reading books whenever\r\nhe wants.Tenzing’s favourite number is x. Can you help Tenzing check if\r\nit is possible for his knowledge to become x?\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 24.06.2023 10:04:08       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n, x;\n    cin >> n >> x;\n    int res = 0;\n    for (int it = 0; it < 3; it++) {\n      vector<int> a(n);\n      for (int i = 0; i < n; i++) {\n        cin >> a[i];\n      }\n      for (int y : a) {\n        if ((y & x) != y) {\n          break;\n        }\n        res |= y;\n      }\n    }\n    cout << (res == x ? \"Yes\" : \"No\") << '\\n';\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "greedy",
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\B. Tenzing and Books.json",
    "editorial_link": "https://codeforces.com//blog/entry/117606",
    "editorial": "TutorialObserve the bitwise OR: if a bit of the knowledge changes to ,\r\nit will never become .It tells us, if a book has difficulty rating , and\r\n, Tenzing will never read this book because it will change a bit in to\r\n.We called a number valid if . For each sequence, we can find a longest\r\nprefix of it such that all numbers in this prefix are valid. Find the\r\nbitwise OR of the three prefix and check whether it equals to .Time\r\ncomplexity: per test case.\r\n",
    "hint": []
}