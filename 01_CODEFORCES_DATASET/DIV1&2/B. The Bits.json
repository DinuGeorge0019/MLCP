{
    "link": "https://codeforces.com//contest/1017/problem/B",
    "problemId": "205992",
    "problem_idx": "B",
    "shortId": "1017B",
    "contest_number": "1017",
    "problem_submissions": {
        "D": [
            213438615,
            41349796,
            41350791,
            41348185,
            41349812,
            41350101,
            41348724,
            41347389,
            41349904,
            41347605,
            41349745,
            41349033,
            41348833,
            41350403,
            41348388,
            41346916,
            41354063,
            41351152,
            41351165,
            41350393
        ],
        "G": [
            41374563,
            41365956,
            41365630,
            41370631,
            41581755
        ],
        "E": [
            41372644,
            41354131,
            41370166,
            41371119,
            41372376,
            41372311,
            41372287,
            41351667,
            41351074,
            41355101,
            41350783,
            41352192,
            41358773,
            41351309,
            41350915,
            41353764,
            41670429,
            41352396,
            41371198,
            41367467,
            41359456,
            41372423,
            41372409,
            41364755,
            41352601,
            41351865,
            41355587
        ],
        "H": [
            41367702,
            41388366,
            41626780
        ],
        "F": [
            41355954,
            41350751,
            41350606,
            41351910,
            41355898,
            41353364,
            41356617,
            41361175,
            41354830,
            41361644,
            41363928,
            41363246,
            41362644,
            41355024,
            41364885,
            41350456,
            41363913,
            41365213,
            41366266
        ],
        "C": [
            41344757,
            41346763,
            41343411,
            41343517,
            41344074,
            41345347,
            41344535,
            41344681,
            41344025,
            41345552,
            41345435,
            41344114,
            41346166,
            41344588,
            41343025,
            41345381,
            41348981,
            41347870,
            41345665
        ],
        "B": [
            41341663,
            41342076,
            41341369,
            41340402,
            41341632,
            41341916,
            41341844,
            41341458,
            41340722,
            41342695,
            41342729,
            41341507,
            41343151,
            41342641,
            41340890,
            41341644,
            41344184,
            41342297,
            41342415
        ],
        "A": [
            41338985,
            41339200,
            41339204,
            41344352,
            41339618,
            41339017,
            41339766,
            41339115,
            41339233,
            41339235,
            41340222,
            41339363,
            41338992,
            41339153,
            41339052,
            41339096,
            41339145,
            41339283,
            41339775
        ]
    },
    "name": "B. The Bits",
    "statement": "Rudolf is on his way to the castle. Before getting into the castle, the\r\nsecurity staff asked him a question:Given two binary numbers a and b of\r\nlength n. How many different ways of swapping two digits in a (only in\r\na, not b) so that bitwise OR of these two numbers will be changed? In\r\nother words, let c be the bitwise OR of a and b, you need to find the\r\nnumber of ways of swapping two bits in a so that bitwise OR will not be\r\nequal to c.Note that binary numbers can contain leading zeros so that\r\nlength of each number is exactly n.Bitwise OR is a binary operation. A\r\nresult is a binary number which contains a one in each digit if there is\r\na one in at least one of the two numbers. For example, 01010_2 10011_2 =\r\n11011_2.Well, to your surprise, you are not Rudolf, and you donâ€™t need\r\nto help him\r\nldots You are the security staff! Please find the number of ways of\r\nswapping two bits in a so that bitwise OR will be changed.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> cd;\n\ntypedef pair<int, int> pi;\ntypedef pair<ll,ll> pl;\ntypedef pair<ld,ld> pd;\n\ntypedef vector<int> vi;\ntypedef vector<ld> vd;\ntypedef vector<ll> vl;\ntypedef vector<pi> vpi;\ntypedef vector<pl> vpl;\ntypedef vector<cd> vcd;\n\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define pb push_back\n#define f first\n#define s second\n#define lb lower_bound\n#define ub upper_bound\n#define all(x) x.begin(), x.end()\n\nconst int MOD = 1000000007;\nconst ll INF = 1e18;\nconst int MX = 100001;\n\nstring a,b;\nll ans = 0;\nint n;\nll co[4];\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    cin >> n;\n    cin >> a >> b;\n    F0R(i,n) {\n        co[2*(a[i]-'0')+(b[i]-'0')] ++;\n    }\n    //F0R(i,4) cout << co[i] << \" \";\n    //cout << \"\\n\";\n    cout << co[3]*co[0]+co[2]*co[1]+co[2]*co[0];\n}\n\n/* Look for:\n* the exact constraints (multiple sets are too slow for n=10^6 :( ) \n* special cases (n=1?)\n* overflow (ll vs int?)\n* array bounds\n*/"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1&2\\B. The Bits.json",
    "editorial_link": "https://codeforces.com/blog/entry/61081",
    "editorial": "Let txy\n be the number of indexes i\n such that ai=x\n and bi=y\n.\n\nThe answer is t00?t10+t00?t11+t01?t10\n.",
    "hint": []
}