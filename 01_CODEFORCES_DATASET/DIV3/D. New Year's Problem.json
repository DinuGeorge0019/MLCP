{
    "link": "https://codeforces.com//contest/1619/problem/D",
    "problemId": "1234625",
    "problem_idx": "D",
    "shortId": "1619D",
    "contest_number": "1619",
    "problem_submissions": {
        "G": [
            140078255,
            140073592,
            140089436,
            140078390,
            140089746,
            140079476,
            145924145,
            151265654,
            141670945,
            140147260
        ],
        "F": [
            140065181,
            140063048,
            140076024,
            140070362,
            140081694,
            140073270,
            140077189,
            140077988,
            140079343,
            140077681,
            140080239,
            140066442,
            140086181,
            140083843,
            140081135,
            140087882,
            140074406,
            140085836
        ],
        "E": [
            140056688,
            140034731,
            140064173,
            140064735,
            140063371,
            140067175,
            140068525,
            140064758,
            140060381,
            140065082,
            140053212,
            140051892,
            140072728,
            140067484,
            140070209,
            140073990,
            140083979,
            140064170
        ],
        "D": [
            140049695,
            140056611,
            140052445,
            140059443,
            140054727,
            140062375,
            140050362,
            140046453,
            140049546,
            140054923,
            140069697,
            140074223,
            140057739,
            140070163,
            140060824,
            140054342,
            140053714,
            140047137
        ],
        "C": [
            140041270,
            140047619,
            140037577,
            140053359,
            140066154,
            140055677,
            140034474,
            140041067,
            140041491,
            140044199,
            140042854,
            140041981,
            140038481,
            140037319,
            140043801,
            140042895,
            140046624,
            140037654
        ],
        "B": [
            140028867,
            140058223,
            140027097,
            140049372,
            140023898,
            140046113,
            140024005,
            140028515,
            140025918,
            140030098,
            140028524,
            140024247,
            140024021,
            140025866,
            140024580,
            140024963,
            140030726,
            140023456
        ],
        "A": [
            140018513,
            140037253,
            140018425,
            140048050,
            140017040,
            140043315,
            140017477,
            140024037,
            140017841,
            140019535,
            140020013,
            143793925,
            140020824,
            140018421,
            140017149,
            140018606,
            140017171,
            140021392,
            140017164
        ],
        "H": [
            140381628,
            140278376
        ]
    },
    "name": "D. New Year's Problem",
    "statement": "Vlad has n friends, for each of whom he wants to buy gift for the New\r\nYear.There are m shops in the city, in each of which he can buy a gift\r\nfor any of his friends. If the j-th friend (1\r\nle j\r\nle n) receives a gift bought in the shop with the number i (1\r\nle i\r\nle m), then the friend receives p_{ij} units of joy. The rectangular\r\ntable p_{ij} is given in the input.Vlad has time to visit at most n-1\r\nshops (where n is the number of ). He chooses which shops he will visit\r\nand for which friends he will buy gifts in each of them.Let the j-th\r\nfriend receive a_j units of joy from Vlad\u2019s gift. Let\u2019s find the value\r\nalpha=\r\nmin\r\n{a_1, a_2,\r\ndots, a_n\r\n}. Vlad\u2019s goal is to buy gifts so that the value of\r\nalpha is as large as possible. In other words, Vlad wants to maximize\r\nthe minimum of the joys of his friends.For example, let m = 2, n = 2.\r\nLet the joy from the gifts that we can buy in the first shop: p_{11} =\r\n1, p_{12}=2, in the second shop: p_{21} = 3, p_{22}=4.Then it is enough\r\nfor Vlad to go only to the second shop and buy a gift for the first\r\nfriend, bringing joy 3, and for the second bringing joy 4. In this case,\r\nthe value\r\nalpha will be equal to\r\nmin\r\n{3, 4\r\n} = 3Help Vlad choose gifts for his friends so that the value of\r\nalpha is as high as possible. Please note that each friend must receive\r\none gift. Vlad can visit at most n-1 shops (where n is the number of ).\r\nIn the shop, he can buy any number of gifts.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nifstream fin(\"AAtest.in.txt\");\nll n,m,t,a[100005],b[100005],vas,arv,u,v,z;\n\nint main(){\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cerr.tie(0);\n    cin>>t;\n    while(t--){\n        cin>>m>>n;\n        ll ma[n+5][m+5];\n        for(int i=0; i<n; i++) a[i]=-1,b[i]=-1;\n        vas=0;\n        for(int i=0; i<m; i++) for(int j=0; j<n; j++){\n            cin>>ma[j][i];\n            if(ma[j][i]>a[j]) a[j]=ma[j][i];\n        }\n        arv=1e9;\n        for(int i=0; i<n; i++) arv=min(arv,a[i]);\n        for(int i=0; i<m; i++){\n            u=0; v=0;\n            for(int j=0; j<n; j++){\n                z=min(ma[j][i],arv);\n                if(z>=u) v=u,u=z;\n                else if(z>v) v=z;\n            }\n            vas=max(vas,v);\n        }\n        cout<<vas<<\"\\n\";\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. New Year's Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/98159",
    "editorial": "Note that if we cannot get joy , then we cannot get , and if we can get\r\nat least , then we can get at least . These facts allow us to use binary\r\nsearch to find the answer.Now we need to understand how exactly we can\r\nrecognize whether we can gain joy at least or not. We can enter at most\r\nshops, so we always need to take two gifts from some store, which means\r\nthere must be a store in which we can find two or more gifts with\r\npleasure at least . Also, each friend should receive a gift, which means\r\nthat we should be able to buy each gift with pleasure at least . It\r\ntakes O (nm) to check that both of these conditions are met. The total\r\nsolution works in O (nm log (nm)).\r\n"
}