{"link": "https://codeforces.com//contest/1899/problem/E", "problemId": "2331132", "problem_idx": "E", "shortId": "1899E", "contest_number": "1899", "problem_submissions": {"F": [233143025, 233133982, 233130296, 233135870, 233148550, 233134446, 233142101, 233143528, 233137718, 233124178, 233156213, 233142736, 233146627, 233148250, 233151072, 233160085, 233144575, 233142191, 233145257], "G": [233138408, 233146326, 233159108, 233167876, 233139809, 233174157, 233151111, 233162558, 233172488, 233169093, 233111352, 233167938, 242655902, 233290539, 233290341, 233290070, 233289390, 233245121, 233170983, 233290531, 233287729, 233172360, 233175792, 233169702, 233171345, 233192789, 233177667, 233175782, 233178766], "E": [233114571, 233127232, 233121824, 233122699, 233130644, 233123626, 233133888, 233135449, 233124510, 233138032, 233128201, 233131969, 233135507, 233133374, 233128056, 233141353, 233143922, 233131851, 233131472, 233136155], "D": [233111699, 233121597, 233118099, 233117874, 233205451, 233126502, 233118119, 233124806, 233129661, 233120822, 233191880, 233146423, 233118570, 233129133, 233128652, 233206707, 233122554, 233128504, 233129136, 233124567, 233125679, 233129711], "C": [233108190, 233112630, 233112731, 233109007, 233111806, 233112675, 233116595, 233114564, 233114241, 233115530, 233131350, 233124886, 233117819, 233122046, 233110706, 233117591, 233116329, 233117499, 233115669, 233122737], "B": [233106685, 233108026, 233109547, 233105619, 233103878, 233109223, 233117329, 233111321, 233108212, 233111255, 233135350, 233111178, 233113286, 233109355, 233206110, 233136456, 233114316, 233109473, 233113702, 233110574, 233113403], "A": [233102009, 233097462, 233097385, 233097622, 233097414, 233102057, 233099804, 233098553, 233136611, 233099117, 233097804, 233097758, 233102063, 233104551, 233097360, 233101589, 233099162, 233098150]}, "name": "E. Queue Sort", "statement": "Vlad found an array a of n integers and decided to sort it in\r\nnon-decreasing order.To do this, Vlad can apply the following operation\r\nany number of times: Extract the first element of the array and insert\r\nit at the end; Swap element with the previous one until it becomes the\r\nfirst or until it becomes greater than the previous one. Note that both\r\nactions are part of the operation, and for one operation, you apply both\r\nactions.For example, if you apply the operation to the array [4, 3, 1,\r\n2, 6, 4], it will change as follows: [\r\ncolor{red}{4}, 3, 1, 2, 6, 4]; [3, 1, 2, 6, 4,\r\ncolor{red}{4}]; [3, 1, 2, 6,\r\ncolor{red}{4}, 4]; [3, 1, 2,\r\ncolor{red}{4}, 6, 4].Vlad doesn\u2019t have time to perform all the\r\noperations, so he asks you to determine the minimum number of operations\r\nrequired to sort the array or report that it is impossible.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint32_t main() {\n        ios_base::sync_with_stdio(0);\n        cin.tie(0);\n        int t;\n        cin >> t;\n        while (t--) {\n                int n;\n                cin >> n;\n                vector<int> a(n);\n                for (int i = 0; i < n; i++) cin >> a[i];\n                int x = *min_element(a.begin(), a.end());\n                for (int i = 0; i < n; i++) {\n                        if (a[i] == x) {\n                                if (is_sorted(a.begin() + i, a.end())) {\n                                        cout << i << '\\n';\n                                } else {\n                                        cout << -1 << '\\n';\n                                }\n                                break;\n                        }\n                }\n        }\n}"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1300", "interactive": false}