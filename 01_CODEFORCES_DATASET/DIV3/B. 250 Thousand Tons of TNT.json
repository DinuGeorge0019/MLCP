{"link": "https://codeforces.com//contest/1899/problem/B", "problemId": "2331129", "problem_idx": "B", "shortId": "1899B", "contest_number": "1899", "problem_submissions": {"F": [233143025, 233133982, 233130296, 233135870, 233148550, 233134446, 233142101, 233143528, 233137718, 233124178, 233156213, 233142736, 233146627, 233148250, 233151072, 233160085, 233144575, 233142191, 233145257], "G": [233138408, 233146326, 233159108, 233167876, 233139809, 233174157, 233151111, 233162558, 233172488, 233169093, 233111352, 233167938, 242655902, 233290539, 233290341, 233290070, 233289390, 233245121, 233170983, 233290531, 233287729, 233172360, 233175792, 233169702, 233171345, 233192789, 233177667, 233175782, 233178766], "E": [233114571, 233127232, 233121824, 233122699, 233130644, 233123626, 233133888, 233135449, 233124510, 233138032, 233128201, 233131969, 233135507, 233133374, 233128056, 233141353, 233143922, 233131851, 233131472, 233136155], "D": [233111699, 233121597, 233118099, 233117874, 233205451, 233126502, 233118119, 233124806, 233129661, 233120822, 233191880, 233146423, 233118570, 233129133, 233128652, 233206707, 233122554, 233128504, 233129136, 233124567, 233125679, 233129711], "C": [233108190, 233112630, 233112731, 233109007, 233111806, 233112675, 233116595, 233114564, 233114241, 233115530, 233131350, 233124886, 233117819, 233122046, 233110706, 233117591, 233116329, 233117499, 233115669, 233122737], "B": [233106685, 233108026, 233109547, 233105619, 233103878, 233109223, 233117329, 233111321, 233108212, 233111255, 233135350, 233111178, 233113286, 233109355, 233206110, 233136456, 233114316, 233109473, 233113702, 233110574, 233113403], "A": [233102009, 233097462, 233097385, 233097622, 233097414, 233102057, 233099804, 233098553, 233136611, 233099117, 233097804, 233097758, 233102063, 233104551, 233097360, 233101589, 233099162, 233098150]}, "name": "B. 250 Thousand Tons of TNT", "statement": "Alex is participating in the filming of another video of BrMeast, and\r\nBrMeast asked Alex to prepare 250 thousand tons of TNT, but Alex didn\u2019t\r\nhear him well, so he prepared n boxes and arranged them in a row waiting\r\nfor trucks. The i-th box from the left weighs a_i tons.All trucks that\r\nAlex is going to use hold the same number of boxes, denoted by k.\r\nLoading happens the following way: The first k boxes goes to the first\r\ntruck, The second k boxes goes to the second truck,\r\ndotsb The last k boxes goes to the\r\nfrac{n}{k}-th truck. Upon loading is completed, each truck must have k\r\nboxes. In other words, if at some point it is not possible to load\r\nexactly k boxes into the truck, then the loading option with that k is\r\nnot possible.Alex hates justice, so he wants the maximum absolute\r\ndifference between the total weights of two trucks to be as great as\r\npossible. If there is only one truck, this value is 0.Alex has quite a\r\nlot of connections, so for every 1\r\nleq k\r\nleq n, he can find a company such that each of its trucks can hold\r\nexactly k boxes. Print the maximum absolute difference between the total\r\nweights of any two trucks.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint32_t main() {\n        ios_base::sync_with_stdio(0);\n        cin.tie(0);\n        int t;\n        cin >> t;\n        while (t--) {\n                int n;\n                cin >> n;\n                vector<int> a(n);\n                for (int i = 0; i < n; i++) cin >> a[i];\n                vector<int64_t> pref(n + 1);\n                for (int i = 0; i < n; i++) pref[i + 1] = pref[i] + a[i];\n                int64_t res = -1;\n                for (int i = 1; i <= n; i++) {\n                        if (n % i) continue;\n                        int64_t nim = 1e18, xam = -1e18;\n                        for (int j = i; j <= n; j += i) {\n                                nim = min(nim, pref[j] - pref[j - i]);\n                                xam = max(xam, pref[j] - pref[j - i]);\n                        }\n                        res = max(res, xam - nim);\n                }\n                cout << res << '\\n';\n        }\n}"], "input": "", "output": "", "tags": ["brute force", "implementation", "number theory"], "dificulty": "1100", "interactive": false}