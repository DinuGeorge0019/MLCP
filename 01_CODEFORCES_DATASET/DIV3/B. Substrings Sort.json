{
    "link": "https://codeforces.com//contest/988/problem/B",
    "problemId": "186727",
    "problem_idx": "B",
    "shortId": "988B",
    "contest_number": "988",
    "problem_submissions": {
        "F": [
            38850795,
            38857750,
            38858170,
            38851497,
            38853401,
            38851133,
            38851544,
            38859838,
            38848093,
            38907880,
            38907831
        ],
        "E": [
            38844731,
            38844693,
            38848592,
            38858719,
            45955063,
            38853668,
            38847637,
            38853437,
            38839299,
            38861890,
            38864917,
            38858969,
            38857001,
            38858857,
            38858182,
            38859392,
            38864208,
            38855992,
            38859515
        ],
        "D": [
            38840392,
            38848969,
            38851772,
            38843233,
            38946024,
            38842418,
            38844498,
            38868323,
            38844694,
            44031526,
            44031416,
            38848128,
            38864951,
            38847308,
            38850578,
            38849097,
            38853027,
            38857525,
            38900563,
            38852549,
            38852551,
            38854050
        ],
        "C": [
            38837549,
            38839564,
            38842456,
            38840172,
            38945961,
            38836792,
            38841053,
            38844962,
            38841756,
            38846652,
            38845827,
            38864928,
            38839933,
            38843822,
            38844819,
            38846434,
            38850120,
            38847359,
            38847106,
            38847820,
            38842193
        ],
        "B": [
            38835102,
            38835826,
            38836723,
            38836527,
            38945931,
            38930097,
            38834357,
            38837106,
            38835693,
            38837985,
            38835772,
            38840393,
            38864939,
            38841754,
            38836363,
            38841437,
            38840823,
            38838916,
            38847752,
            38851402,
            38836768
        ],
        "A": [
            38833122,
            38833181,
            38833533,
            38833575,
            38945641,
            38945626,
            38929615,
            38833067,
            38833623,
            38833881,
            38833289,
            38833348,
            38834787,
            38833528,
            38833829,
            38833852,
            38833420,
            38836476,
            38849551,
            38833125,
            38833682
        ]
    },
    "name": "B. Substrings Sort",
    "statement": "You are given n strings. Each string consists of lowercase English\r\nletters. Rearrange (reorder) the given strings in such a way that for\r\nevery string, all strings that are placed before it are its .String a is\r\na of string b if it is possible to choose several letters in b in such a\r\nway that they form a. For example, string \"\" is contained as a in\r\nstrings \"\", \"\" and \"\", but is not contained as a in strings \"\", \"\" and\r\n\"\".\r\n",
    "solutions": [
        "/// In The Name Of God\n\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n\n#include <bits/stdc++.h>\n\n#define f first\n#define s second\n\n#define pb push_back\n#define pp pop_back\n#define mp make_pair\n\n#define sz(x) (int)x.size()\n#define sqr(x) ((x) * 1ll * (x))\n#define all(x) x.begin(), x.end()\n\n#define rep(i, l, r) for (int i = (l); i <= (r); i++)\n#define per(i, l, r) for (int i = (l); i >= (r); i--)\n\n#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);\n\n#define nl '\\n'\n#define ioi exit(0);\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nconst int N = (int)5e5 + 7;\nconst int inf = (int)1e9 + 7;\nconst int mod = (int)1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\n\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};\nconst int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nusing namespace std;\n\nint n;\nbool bad[N];\nstring s[N];\n\nint get(int p) {\n\tbad[p] = 1;\n\tint cnt = 0;\n\trep(i, 1, n) {\n\t\tif (bad[i]) continue;\n\t\tint f = s[i].find(s[p]);\n\t\tif (f != -1) ++cnt;\n\t}\n\tbad[p] = 0;\n\treturn cnt;\n}\nint main() {\n\t#ifdef IOI2018\n\t\tfreopen (\"in.txt\", \"r\", stdin);\n\t#endif\n\tKazakhstan\n\tcin >> n;\n\trep(i, 1, n) cin >> s[i];\n\tvector <int> ans;\n\tper(i, n - 1, 0) {\n\t\trep(j, 1, n) {\n\t\t\tif (bad[j]) continue;\n\t\t\tif (get(j) == i) {\n\t\t\t\tans.pb(j);\n\t\t\t\tbad[j] = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (sz(ans) != n) cout << \"NO\", ioi\n\tcout << \"YES\\n\";\n\tfor (auto it : ans) cout << s[it] << nl;\n\tioi\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "sortings",
        "strings"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Substrings Sort.json",
    "editorial_link": "https://codeforces.com/blog/entry/59810",
    "editorial": "Firstly, sort all the strings by their lengths (if there are several\r\nstrings of the same length, their order does not matter because if the\r\nanswer is \"\" then all the strings of the same length should be equal).\r\nThen for each check that is a substring of . If it doesnât hold for some\r\nthen the answer is \"\". Otherwise the answer is \"\" and the sorted array\r\nis the correct order of strings.\r\n",
    "hint": []
}