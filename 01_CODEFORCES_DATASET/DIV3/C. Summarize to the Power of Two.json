{"link": "https://codeforces.com//contest/1005/problem/C", "problemId": "196283", "problem_idx": "C", "shortId": "1005C", "contest_number": "1005", "problem_submissions": {"F": [40138065, 40147546, 40139536, 40144099, 40139733, 40144938, 40143679, 40171160, 40146303, 40189217], "E1": [40128340, 40127186, 40134838, 40136234, 40136089, 40143692, 40135301, 40137180, 40144323, 40124841, 40127912, 40131265, 40133189, 40133105, 40133937, 40134875, 40135625, 40134421, 40131595, 40135137], "D": [40125067, 40124979, 40128112, 40136992, 40132454, 40129148, 40135768, 40128554, 40130545, 40126741, 40124080, 40124881, 40127069, 40127363, 40130715, 40128279, 40129716, 40130196, 40122168, 40126677], "C": [40122844, 40120537, 40121740, 40127956, 40126845, 40126210, 40127542, 40132586, 40121476, 40122273, 40121226, 40121504, 40123842, 40124485, 40124848, 40125814, 40188075, 40124052, 40125727, 40127465, 71194295, 40123366], "B": [40118557, 40118253, 40123880, 40122022, 40117993, 40119623, 40121553, 40121128, 40129302, 40117431, 40118713, 40118894, 40119013, 40119692, 40120886, 40121682, 40120694, 40121733, 40125463, 40118716], "A": [40117449, 40117425, 40122790, 40118389, 40117428, 40118037, 40118019, 40118741, 40117459, 40117842, 40117471, 40117684, 40117553, 40117896, 40118376, 40119285, 40118988, 40117794, 40123668, 40117617], "E2": [40142192, 40138140, 40137960, 97340051, 97338094, 40194804, 40187840]}, "name": "C. Summarize to the Power of Two", "statement": "A sequence a_1, a_2,\r\ndots, a_n is called good if, for each element a_i, there exists an\r\nelement a_j (i\r\nne j) such that a_i+a_j is a power of two (that is, 2^d for some\r\nnon-negative integer d).For example, the following sequences are good:\r\n[5, 3, 11] (for example, for a_1=5 we can choose a_2=3. Note that their\r\nsum is a power of two. Similarly, such an element can be found for a_2\r\nand a_3), [1, 1, 1, 1023], [7, 39, 89, 25, 89], []. Note that, by\r\ndefinition, an empty sequence (with a length of 0) is good.For example,\r\nthe following sequences are not good: [16] (for a_1=16, it is impossible\r\nto find another element a_j such that their sum is a power of two), [4,\r\n16] (for a_1=4, it is impossible to find another element a_j such that\r\ntheir sum is a power of two), [1, 3, 2, 8, 8, 8] (for a_3=2, it is\r\nimpossible to find another element a_j such that their sum is a power of\r\ntwo). You are given a sequence a_1, a_2,\r\ndots, a_n. What is the minimum number of elements you need to remove to\r\nmake it good? You can delete an arbitrary set of elements.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair <int, int> pii;\ntypedef pair <long long, long long> pll;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\n\n#define endl \"\\n\"\n#define ft first\n#define sd second\n#define openfiles ifstream cin (\"input.txt\"); ofstream cout (\"output.txt\");\n#define INF 2000000000\n#define INFLL 2000000000000000000\n#define pii pair<int, int>\n#define pb push_back\n#define in insert\n#define faster ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#define EPS 0.0000000000001\n#define kolvobit 22\n//#define KlishkevichVadimka\n\n    int n, m, old;\n    map<int, int> A;\n\nint main()\n{\n#ifndef KlishkevichVadimka\n    faster\n#else\n    openfiles\n#endif\n\n    cin >> n;\n\n    for (int i = 0; i < n; i++) {\n        int x;\n        cin >> x;\n        A[x]++;\n    }\n\n    int sc = 0;\n\n    for (auto i : A) {\n\n        bool t = 0;\n        int x = (i.ft);\n\n        for (int j = 1; j < 34; j++) {\n            int y = (1 << j) - x;\n            if (y > 0 && A.count(y) && (y != x) || (y == x && A[y] > 1)) {\n                t = 1;\n                break;\n            }\n        }\n\n        if (!t) sc += i.sd;\n    }\n\n    cout << sc;\n\n}\n\n\n\n\n\n\n\n\n\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "implementation"], "dificulty": "1300", "interactive": false}