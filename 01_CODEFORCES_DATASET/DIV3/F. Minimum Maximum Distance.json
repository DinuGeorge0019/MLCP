{
    "link": "https://codeforces.com//contest/1881/problem/F",
    "problemId": "2259907",
    "problem_idx": "F",
    "shortId": "1881F",
    "contest_number": "1881",
    "problem_submissions": {
        "G": [
            227881682,
            227890897,
            227853197,
            227853881,
            227975243,
            227899786,
            227901394,
            227911349,
            227907618,
            227893303,
            227897169,
            227918994,
            227917936,
            227914137,
            227899980,
            227912585,
            227907908,
            227897166,
            227915427,
            230763040,
            227916848,
            227913341,
            227920356,
            227867452,
            228095818,
            227915038
        ],
        "F": [
            227862562,
            227861356,
            227870757,
            227856965,
            227974789,
            227875295,
            227869909,
            227878015,
            227879864,
            227885516,
            227883744,
            227872766,
            227871133,
            227860506,
            227889327,
            230763024,
            227881722,
            227900442,
            227886326,
            227835034,
            228095806,
            227892673
        ],
        "E": [
            227850824,
            227843540,
            227942027,
            227858077,
            227874342,
            227854004,
            227852561,
            227851500,
            227864039,
            227865490,
            227859415,
            227863643,
            227846602,
            227918283,
            227845118,
            227881868,
            230762984,
            227865398,
            227875008,
            227858082,
            227872189,
            228095799,
            227883249
        ],
        "D": [
            227844854,
            227839094,
            227848716,
            227843412,
            227838899,
            227847809,
            227840878,
            227858992,
            227854380,
            227853013,
            227858090,
            227884786,
            227839966,
            227871576,
            230762965,
            227859752,
            227867911,
            227861846,
            227874828,
            228095791,
            227866894
        ],
        "C": [
            227838508,
            227835537,
            227842531,
            227866399,
            228637953,
            227849689,
            227840361,
            227848329,
            227855215,
            227848107,
            227840529,
            227850980,
            227881582,
            227837426,
            227868576,
            230762944,
            227849495,
            227862177,
            227853530,
            227898622,
            228095784,
            227862705
        ],
        "B": [
            227831568,
            227831942,
            227835393,
            227838918,
            227835692,
            227835105,
            227836643,
            227839535,
            227838170,
            227834145,
            227842440,
            227842178,
            227832528,
            227844145,
            230762918,
            227842892,
            227850062,
            227840218,
            227885672,
            228095774,
            227845241
        ],
        "A": [
            227829772,
            227829881,
            227830670,
            227836999,
            227830954,
            227830777,
            227830578,
            227833236,
            227838249,
            227829831,
            227837181,
            227833271,
            227908499,
            227830499,
            230762881,
            227836954,
            227841775,
            227831030,
            227889886,
            228095766,
            227839571
        ]
    },
    "name": "F. Minimum Maximum Distance",
    "statement": "You have a tree with n vertices, some of which are marked. A tree is a\r\nconnected undirected graph without cycles.Let f_i denote the maximum\r\ndistance from vertex i to any of the marked vertices.Your task is to\r\nfind the minimum value of f_i among all vertices. For example, in the\r\ntree shown in the example, vertices 2, 6, and 7 are marked. Then the\r\narray f(i) = [2, 3, 2, 4, 4, 3, 3]. The minimum f_i is for vertices 1\r\nand 3.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n \nusing namespace std;\n#define ll long long\n#define rep(i,m,n) for (ll i=m;i<=n;i++)\n#define reb(i,m,n) for (ll i=m;i>=n;i--)\n#define rv(i,vt) for (auto i:vt)\n#define pb push_back\n#define ii pair<ll,ll>\n#define F first\n#define S second\n#define sz(v) (int)v.size()\n#define iii tuple<ll,ll,ll>\n#define dd pair<double,double>\nconst ll N=1e6+5,mod=1e9+7;\nll n,m;\nvector<ll> ke[N];\nll sz[N],dis[N];\nvoid prep(){\n\n}\nvoid dfs (ll u, ll p){\n    rv(v,ke[u]) if (v!=p){\n        dfs(v,u);\n        sz[u]|=sz[v];\n    }\n}\nvoid dfs1 (ll u, ll p){\n    rv(v,ke[u]) if (v!=p && sz[v]){\n        dis[v]=dis[u]+1;\n        dfs1(v,u);\n    }\n}\nvoid solve()\n{\n    cin>>n;\n    rep(i,1,n) sz[i]=0;\n    cin>>m;\n    ll root=0;\n    rep(i,1,m){\n        ll x;\n        cin>>x;\n        root=x;\n        sz[x]=1;\n    }\n    rep(i,1,n) ke[i].clear();\n    rep(i,1,n-1){\n        ll u,v;\n        cin>>u>>v;\n        ke[u].pb(v);\n        ke[v].pb(u);\n    }\n    dfs(root,0);\n    dfs1(root,0);\n    ll mx=-1,x=0;\n    rep(i,1,n) if (sz[i] && dis[i]>mx) mx=dis[i],x=i;\n    dis[x]=0;\n    dfs1(x,0);\n    mx=-1;\n    rep(i,1,n) if (sz[i]) mx=max(mx,dis[i]);\n    cout<<(mx+1)/2;\n}\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll tests=1;\n    cin>>tests;\n    prep();\n    while (tests--){\n        solve();\n        cout<<endl;\n}\n    cerr << \"\\n\" << (double)clock() / CLOCKS_PER_SEC * 1000 << \" ms\";\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "trees"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F. Minimum Maximum Distance.json",
    "editorial_link": "https://codeforces.com//blog/entry/121327",
    "editorial": "Letâs run a breadth-first traversal from any labeled vertex and find the\r\nfarthest other labeled vertex from it. Then we run a traversal from and\r\nfind the farthest labeled vertex from it (it may coincide with ). Then\r\nthe answer is , where is the distance between and . It is worth\r\nconsidering separately the case when there is only one labeled vertex in\r\nthe tree. Then the answer is .\r\n",
    "hint": []
}