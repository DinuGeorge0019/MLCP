{"link": "https://codeforces.com//contest/1690/problem/B", "problemId": "1423050", "problem_idx": "B", "shortId": "1690B", "contest_number": "1690", "problem_submissions": {"F": [159806986, 159794535, 159803560, 159795356, 159803611, 159810003, 161958741, 159901379, 159799120, 159805990, 159805447, 159834670, 159815479, 159815758, 159832304, 159791660, 159812232, 159823656, 159820324, 159819489, 159793231, 159818514], "G": [159789082, 159825164, 159831504, 159831419, 159832391, 159839709, 159834673, 159846076, 159851606, 159849999, 159835741, 159843351, 159856244, 159825213, 159841650, 159850090, 159841330, 159847201, 159833351, 159855753], "E": [159767819, 159765301, 159753624, 159775193, 159777984, 159782869, 159901400, 159779470, 159776567, 159781160, 159789988, 159788967, 159791938, 159787307, 159768121, 159785541, 159787298, 159790761, 159810098, 159800474, 159767523, 159788062], "D": [159735426, 159753255, 159744844, 159759311, 159761856, 159749129, 159760845, 159762141, 159745073, 159747365, 159767078, 159764956, 159753841, 159768103, 159754604, 159758954, 159769246, 159761854, 159752872, 159766823], "A": [159733481, 159728723, 159728980, 159730869, 159729579, 159730292, 159735804, 159735374, 159729478, 159730047, 159903613, 159739525, 159731331, 159729145, 159767995, 159729359, 159733585, 159735989, 159738194, 159732884, 159737457], "B": [159731273, 159733842, 159733916, 159746458, 159736988, 159735973, 159743542, 159743382, 159735141, 159735777, 159750550, 159745379, 159735239, 159770854, 159740998, 159742110, 159755056, 159746312, 159757832, 159745537], "C": [159728882, 159740086, 159737931, 159750746, 159754739, 159743933, 159755874, 159756762, 159741517, 159742259, 159760507, 159757905, 159746715, 159768067, 159748475, 159749851, 159762561, 159752246, 159835353, 159760474]}, "name": "B. Array Decrements", "statement": "Kristina has two arrays a and b, each containing n non-negative\r\nintegers. She can perform the following operation on array a any number\r\nof times: apply a decrement to each non-zero element of the array, that\r\nis, replace the value of each element a_i such that a_i > 0 with the\r\nvalue a_i - 1 (1\r\nle i\r\nle n). If a_i was 0, its value does not change. Determine whether\r\nKristina can get an array b from an array a in some number of operations\r\n(probably zero). In other words, can she make a_i = b_i after some\r\nnumber of operations for each 1\r\nle i\r\nle n?For example, let n = 4, a = [3, 5, 4, 1] and b = [1, 3, 2, 0]. In\r\nthis case, she can apply the operation twice: after the first\r\napplication of the operation she gets a = [2, 4, 3, 0]; after the second\r\nuse of the operation she gets a = [1, 3, 2, 0]. Thus, in two operations,\r\nshe can get an array b from an array a.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int inf = 1'000'000'001;\nconst int infll = (inf - 1) * (inf - 1) + 1;\nconst int mod = inf + 6;\nvoid solve(){\n    int n;\n    cin >> n;\n    vector<int> a(n), b(n);\n    for(int i = 0;i < n;i++){\n        cin >> a[i];\n    }\n    for(int i = 0;i < n;i++){\n        cin >> b[i];\n    }\n    int ind = (max_element(a.begin(), a.end())) - a.begin();\n    int x = a[ind] - b[ind];\n    bool ok = true;\n    for(int i = 0;i < n;i++){\n        if(a[i] - b[i] > x){\n            ok = false;\n        }\n        if(a[i] < b[i])ok = false;\n        if(a[i] - b[i] <= x){\n            if(max(0ll, a[i] - x) != b[i])ok = false;\n        }\n    }\n    cout << (ok ? \"YES\\n\" : \"NO\\n\");\n}\nint32_t main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    int t = 1;\n    cin >> t;\n    while (t--){\n        solve();\n    }\n}"], "input": "", "output": "", "tags": ["greedy", "implementation"], "dificulty": "800", "interactive": false}