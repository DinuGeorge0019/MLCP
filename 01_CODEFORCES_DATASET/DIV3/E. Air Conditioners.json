{"link": "https://codeforces.com//contest/1547/problem/E", "problemId": "1041929", "problem_idx": "E", "shortId": "1547E", "contest_number": "1547", "problem_submissions": {"G": [121944344, 121945250, 121969047, 121966817, 121967594, 121972943, 121975745, 121977858, 122032964, 121981350, 122056223, 121979237, 121981913, 121981376, 121980625, 122155991, 121975434, 121991454, 121995068, 121976725, 121981904, 121989177], "F": [121935413, 121935594, 121941387, 121951169, 121954987, 121958658, 121946378, 121960440, 121957223, 121947189, 121953926, 121961168, 121956579, 122155975, 121957484, 121963743, 121963233, 121983907, 130067043, 121967696, 121964782], "E": [121927323, 121930033, 121934266, 121934350, 121934750, 121950868, 121938700, 121947044, 121939016, 121918151, 121943738, 121951247, 121943401, 122155944, 121929091, 121938064, 121948603, 121929249, 121954857, 121951226], "D": [121920905, 121925537, 121926615, 121928957, 121929027, 121935132, 121933601, 121938327, 121930818, 121951066, 121937525, 121939215, 121938926, 122155930, 121923421, 121931871, 121939814, 121923678, 121938027, 121939755], "C": [121917301, 121919644, 121922161, 121925361, 121925131, 121930197, 121927618, 121931352, 121926041, 121941579, 121930327, 121931481, 121932549, 122155920, 121946724, 121926871, 121930207, 121920117, 121930152, 121928271], "B": [121913269, 121913944, 121915637, 121917152, 121916079, 121921759, 121916250, 121921748, 121918400, 121932403, 121917513, 121922124, 121917559, 122155902, 121918020, 121915357, 121920773, 121914177, 121922706, 121919941], "A": [121912871, 121922538, 121912963, 121913157, 121913099, 121914913, 121913485, 121917366, 121913258, 121918822, 121913536, 121914396, 121913813, 122155895, 121942243, 121912931, 121913822, 121912948, 121914731, 121913859]}, "name": "E. Air Conditioners", "statement": "On a strip of land of length n there are k air conditioners: the i-th\r\nair conditioner is placed in cell a_i (1\r\nle a_i\r\nle n). Two or more air conditioners cannot be placed in the same cell\r\n(i.e. all a_i are distinct).Each air conditioner is characterized by one\r\nparameter: temperature. The i-th air conditioner is set to the\r\ntemperature t_i. For each cell i (1\r\nle i\r\nle n) find it\u2019s temperature, that can be calculated by the formula\r\nmin_{1\r\nle j\r\nle k}(t_j + |a_j - i|),where |a_j - i| denotes absolute value of the\r\ndifference a_j - i.In other words, the temperature in cell i is equal to\r\nthe minimum among the temperatures of air conditioners, increased by the\r\ndistance from it to the cell i.Let\u2019s look at an example. Consider that\r\nn=6, k=2, the first air conditioner is placed in cell a_1=2 and is set\r\nto the temperature t_1=14 and the second air conditioner is placed in\r\ncell a_2=5 and is set to the temperature t_2=16. In that case\r\ntemperatures in cells are: temperature in cell 1 is:\r\nmin(14 + |2 - 1|, 16 + |5 - 1|)=\r\nmin(14 + 1, 16 + 4)=\r\nmin(15, 20)=15; temperature in cell 2 is:\r\nmin(14 + |2 - 2|, 16 + |5 - 2|)=\r\nmin(14 + 0, 16 + 3)=\r\nmin(14, 19)=14; temperature in cell 3 is:\r\nmin(14 + |2 - 3|, 16 + |5 - 3|)=\r\nmin(14 + 1, 16 + 2)=\r\nmin(15, 18)=15; temperature in cell 4 is:\r\nmin(14 + |2 - 4|, 16 + |5 - 4|)=\r\nmin(14 + 2, 16 + 1)=\r\nmin(16, 17)=16; temperature in cell 5 is:\r\nmin(14 + |2 - 5|, 16 + |5 - 5|)=\r\nmin(14 + 3, 16 + 0)=\r\nmin(17, 16)=16; temperature in cell 6 is:\r\nmin(14 + |2 - 6|, 16 + |5 - 6|)=\r\nmin(14 + 4, 16 + 1)=\r\nmin(18, 17)=17. For each cell from 1 to n find the temperature in it.\r\n", "solutions": ["#ifndef CONTESTSMTH_HEADER_H\n#define CONTESTSMTH_HEADER_H\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\n\ntemplate <typename K, typename V = __gnu_pbds::null_type>\nusing tree = __gnu_pbds::tree<K, V, less<K>, __gnu_pbds::rb_tree_tag, __gnu_pbds::tree_order_statistics_node_update>;\ntemplate <typename K, typename V = __gnu_pbds::null_type>\nusing htable = __gnu_pbds::gp_hash_table<K, V>;\nusing llong = long long;\nauto isz = [](const auto& c) { return int(c.size()); };\n#ifdef VSE\nmt19937 rng(0);\n#else\nmt19937 rng((size_t) make_shared<char>().get());\n#endif\n\n#endif //CONTESTSMTH_HEADER_H\n\n#ifndef CONTESTSMTH_UTILS_H\n#define CONTESTSMTH_UTILS_H\n\n\n\ntemplate <typename T, T val = T()>\nauto make_vector(size_t d) {\n    return vector<T>(d, val);\n}\n\ntemplate <typename T, T val = T(), typename ...Ds>\nauto make_vector(size_t d, Ds... ds) {\n    return vector<decltype(make_vector<T, val>(ds...))>(d, make_vector<T, val>(ds...));\n}\n\nllong min(int a, llong b) {\n    return min<llong>(a, b);\n}\n\nllong min(llong a, int b) {\n    return min<llong>(a, b);\n}\n\nllong max(int a, llong b) {\n    return max<llong>(a, b);\n}\n\nllong max(llong a, int b) {\n    return max<llong>(a, b);\n}\n\ntemplate <typename T>\nvoid relmax(T& a, const T& b) {\n    a = max(a, b);\n}\n\ntemplate <typename T>\nvoid relmin(T& a, const T& b) {\n    a = min(a, b);\n}\n\n#endif //CONTESTSMTH_UTILS_H\n\n\nstruct Solver {\n    void solve() {\n        int n, k;\n        cin >> n >> k;\n        priority_queue<pair<int, int>> q;\n        vector<int> x(k), y(k);\n        vector<int> a(n, int(2e9));\n        for (int i = 0; i < k; i++) {\n            cin >> x[i];\n            --x[i];\n        }\n        for (int i = 0; i < k; i++) {\n            cin >> y[i];\n            q.emplace(-y[i], x[i]);\n            a[x[i]] = y[i];\n        }\n\n        while (!q.empty()) {\n            auto [vy, vx] = q.top();\n            q.pop();\n            if (vx && a[vx] + 1 < a[vx - 1]) {\n                a[vx - 1] = a[vx] + 1;\n                q.emplace(-a[vx - 1], vx - 1);\n            }\n            if (vx + 1 < n && a[vx] + 1 < a[vx + 1]) {\n                a[vx + 1] = a[vx] + 1;\n                q.emplace(-a[vx + 1], vx + 1);\n            }\n        }\n        for (int i : a) {\n            cout << i << \" \";\n        }\n        cout << \"\\n\";\n    }\n};\n\nint main(int argc, char** argv) {\n#ifdef VSE\n    if (argc > 1) assert(freopen(argv[1], \"r\", stdin));\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    int t = 1;\n    cin >> t;\n    for (int it = 1; it <= t; it++) {\n        Solver().solve();\n    }\n    return 0;\n}\n\n"], "input": "", "output": "", "tags": ["data structures", "dp", "implementation", "shortest paths", "sortings", "two pointers"], "dificulty": "1500", "interactive": false}