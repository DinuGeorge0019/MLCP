{
    "link": "https://codeforces.com//contest/1624/problem/F",
    "problemId": "1256442",
    "problem_idx": "F",
    "shortId": "1624F",
    "contest_number": "1624",
    "problem_submissions": {
        "G": [
            142264977,
            142276263,
            142255328,
            142255380,
            142278979,
            142222438,
            142247481,
            142272907,
            142266089,
            142251678,
            142253083,
            142252160,
            142248179,
            142250137,
            142248523,
            142250039,
            142416148,
            142259210
        ],
        "F": [
            142255179,
            142272384,
            142268450,
            142243695,
            142285199,
            142258439,
            142236940,
            142264135,
            142393598,
            142331291,
            142248865,
            142296070,
            142276188,
            142284965,
            142276430,
            142260372
        ],
        "E": [
            142241464,
            142238534,
            142272316,
            142277777,
            142260025,
            142286074,
            142269495,
            142256319,
            142287785,
            142271217,
            142263215,
            142270151,
            142270566,
            142278137,
            142274750,
            142273040,
            142294098,
            142253958,
            142282423
        ],
        "D": [
            142225549,
            142220300,
            142226787,
            142230709,
            142223377,
            142265701,
            142282535,
            142273740,
            142234006,
            142223224,
            142236057,
            142230240,
            142221633,
            142230396,
            142243861,
            142238174,
            142223929,
            142233332,
            142233395,
            142227832
        ],
        "C": [
            142213147,
            142208364,
            142214903,
            142219856,
            142212618,
            142318538,
            142204231,
            142234937,
            142218849,
            142237305,
            142214526,
            142460843,
            142215423,
            142217168,
            142221355,
            142216799,
            142211503,
            142211985,
            142216819,
            142218405,
            142219857,
            142213500
        ],
        "B": [
            142197546,
            142199713,
            142206530,
            142215517,
            142199960,
            142202251,
            142206682,
            142220881,
            142202886,
            142198089,
            142210906,
            142196708,
            142210091,
            142205820,
            142205637,
            142211178,
            142207927,
            142211494,
            142209546
        ],
        "A": [
            142188870,
            142188452,
            142198531,
            142195180,
            142189107,
            142194205,
            142188426,
            142189618,
            142189485,
            142189892,
            142201064,
            142189063,
            142189404,
            142192459,
            142193156,
            142190543,
            142204194,
            142190164
        ]
    },
    "name": "F. Interacdive Problem",
    "statement": "We decided to play a game with you and guess the number x (1\r\nle x < n), where you know the number n.You can make queries like this: :\r\nthis command assigns x = x + c (1\r\nle c < n) and then returns you the value\r\nlfloor\r\nfrac{x}{n}\r\nrfloor (x divide by n and round down).You win if you guess the current\r\nnumber with no more than 10 queries.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class...Args>\nvoid debug(Args... args) {\n    auto tmp = {(cout << args << ' ', 0)...};\n    cout << endl;\n}\nusing ll = long long;\nusing ull = unsigned long long;\nconst int N = 1e3 + 10;\nconst int mod = 998244353;\nint ask(int x) {\n    cout << \"+ \" << x << endl;\n    int y;\n    cin >> y;\n    return y;\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int n;\n    cin >> n;\n    int l = 1, r = n - 1;\n    int lst = 0;\n    while (l < r) {\n        int x = (l + r) / 2 + 1;\n        int y = n - x % n;\n        int v = ask(y);\n        l += y;\n        x += y;\n        r += y;\n        if (v == lst) {\n            r = x - 1;\n        } else {\n            l = x;\n        }\n        lst = v;\n    }\n    cout << \"! \" << l << endl;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F. Interacdive Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/98942",
    "editorial": "After each query we know the value, then we need to find to find the\r\ncurrent value. To find it, we will use a binary search.Suppose is in the\r\nhalf-interval, in order to understand which half it is in, we will make\r\na query, select the middle of the half-interval and make a query. After\r\nthat, will either change, which means that was in the half-interval, or\r\nnot, then it was in the half-interval. Now you just need to properly\r\nshift the half-interval to accommodate the query change.\r\n"
}