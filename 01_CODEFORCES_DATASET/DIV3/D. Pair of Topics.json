{
    "link": "https://codeforces.com//contest/1324/problem/D",
    "problemId": "560263",
    "problem_idx": "D",
    "shortId": "1324D",
    "contest_number": "1324",
    "problem_submissions": {
        "F": [
            73054270,
            73065556,
            73059176,
            73065084,
            73062305,
            73067024,
            73059856,
            73063932,
            73057486,
            73044832,
            73066147,
            73064314,
            73050991,
            73068503,
            73056693,
            73068743,
            73052567,
            73072067,
            73067317
        ],
        "D": [
            73040639,
            73032866,
            73027867,
            73035134,
            73830730,
            73040900,
            73034199,
            73041603,
            73041893,
            73039400,
            73030102,
            73036508,
            73039182,
            73043928,
            73037342,
            73043874,
            73046595,
            73050863,
            73040463,
            73039200
        ],
        "E": [
            73039379,
            73044039,
            73041492,
            73041070,
            73050415,
            73046726,
            73048264,
            73049396,
            73051216,
            73055090,
            73048254,
            73047762,
            73057013,
            73049889,
            73066804,
            73056073,
            73038769,
            73127806,
            73056264,
            73050880
        ],
        "C": [
            73027564,
            73028513,
            73042083,
            73030836,
            73032053,
            73030173,
            73031129,
            73033349,
            73032347,
            73043701,
            73030001,
            73034619,
            73039260,
            73030506,
            73031218,
            73027677,
            73054056,
            73034579,
            73032723
        ],
        "B": [
            73024859,
            73025917,
            73029672,
            73087132,
            73084344,
            73028176,
            73026383,
            73025561,
            73026159,
            73028367,
            73028047,
            73036513,
            73025105,
            73030025,
            73029700,
            73025213,
            73026085,
            73024555,
            73033601,
            73026846,
            73023952
        ],
        "A": [
            73023467,
            73023622,
            73025341,
            73025903,
            73023578,
            73023714,
            73023863,
            73024673,
            73025477,
            73026756,
            73024229,
            73024181,
            73024019,
            73023479,
            73023850,
            73023303,
            73028896,
            73023916,
            73029846
        ]
    },
    "name": "D. Pair of Topics",
    "statement": "The next lecture in a high school requires two topics to be discussed.\r\nThe i-th topic is interesting by a_i units for the teacher and by b_i\r\nunits for the students.The pair of topics i and j (i < j) is called if\r\na_i + a_j > b_i + b_j (i.e. it is more interesting for the teacher).Your\r\ntask is to find the number of pairs of topics.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n \nusing namespace std;\n \n#define F first\n#define S second\ntypedef long long   ll;\ntypedef long double ld;\ntypedef pair<ll, ll> pll;  \n\n\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    int k;\n    cin >> k;\n    vector<ll> a, b, c, d;\n    a.resize(k);\n    b.resize(k);\n    for (int i = 0; i < k; i++)\n    \tcin >> a[i];\n    for (int i = 0; i < k; i++)\n    \tcin >> b[i];\n    for (int i = 0; i < k; i++)\n    \ta[i] -= b[i];\n\n    for (int i = 0; i < k; i++)\n    \tif (a[i] > 0)\n    \t\tc.push_back(a[i]);\n    \telse\n    \t\td.push_back(a[i]);\n\n\tsort(c.begin(), c.end());\n\tsort(d.rbegin(), d.rend());\n\tint j = 0;\n\tll ans = 0;\n\tfor (int i = 0; i < c.size(); i++) {\n\t\twhile (j < d.size() && c[i] + d[j] > 0)\n\t\t\tj++;\n\t\tans += j;\n\t}\n\tans += ((long long)c.size() * (c.size() - 1)) / 2;\t\n\n\tcout << ans << endl;\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "data structures",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Pair of Topics.json",
    "editorial_link": "https://codeforces.com//blog/entry/74714",
    "editorial": "Letâs rewrite the inequality from to . This looks much simpler. Letâs\r\nbuild the array where and sort this array. Now our problem is to find\r\nthe number of pairs such that .Letâs iterate over all elements of from\r\nleft to right. For simplicity, we consider only \"greater\" summands.\r\nBecause our sum () must be greater than , then at least one of these\r\nsummands will be positive. So, if , just skip it. Now and we need to\r\ncalculate the number of such that and . It means that each (for some )\r\nwill be okay. Such leftmost position can be found with or binary search.\r\nThen add the value to the answer and consider the next element.Time\r\ncomplexity: .\r\n",
    "hint": []
}