{
    "link": "https://codeforces.com//contest/1980/problem/B",
    "problemId": "2679074",
    "problem_idx": "B",
    "shortId": "1980B",
    "contest_number": "1980",
    "problem_submissions": {
        "F2": [
            264034665,
            264025304,
            264247676,
            264019993,
            264024427,
            264029852,
            264023188,
            264027216,
            297729485,
            297729442,
            297728361,
            297728328
        ],
        "G": [
            264011385,
            263992122,
            268025366,
            264215525,
            264011872,
            264084430,
            264264232,
            264263765,
            264069123,
            264079559,
            264078668
        ],
        "F1": [
            263976190,
            263977123,
            263986480,
            263993424,
            264008757,
            263990594,
            264002101,
            263997926,
            264028649,
            263987133,
            263983649,
            263982394,
            264008279,
            263992416,
            264001050,
            263982241,
            263973003,
            297724971,
            263994302,
            263989092,
            263991078
        ],
        "E": [
            263949022,
            263952956,
            263961437,
            263972191,
            263952206,
            263972111,
            263965559,
            263972356,
            263979958,
            263960816,
            263958713,
            263958124,
            263952216,
            263968394,
            263952644,
            263960173,
            263957033,
            263960055,
            263959465,
            263968735
        ],
        "D": [
            263937338,
            263941014,
            263940806,
            263951978,
            263959721,
            263955612,
            263952654,
            263955258,
            263970236,
            263929153,
            263938177,
            263937870,
            263931692,
            263943850,
            263942483,
            263952145,
            263949853,
            263944438,
            263947463,
            263956473
        ],
        "C": [
            263918738,
            263918609,
            263924884,
            263925019,
            263927010,
            263934895,
            263950793,
            263933470,
            263946468,
            263911344,
            263918263,
            263919725,
            263911878,
            263921063,
            263925590,
            263921654,
            263927275,
            263926350,
            263931913,
            263931664
        ],
        "B": [
            263905986,
            263904943,
            263911595,
            263912040,
            263903286,
            263919041,
            263916463,
            263913479,
            263919564,
            263901644,
            263907263,
            263909074,
            263903306,
            263904343,
            263907275,
            263910981,
            263913905,
            263915385,
            263916132,
            263900094
        ],
        "A": [
            263898827,
            263896737,
            263896710,
            263899946,
            263896564,
            263900183,
            263902852,
            263902771,
            263905894,
            263896600,
            263896618,
            263897271,
            263897395,
            263896553,
            263899202,
            263896419,
            263897066,
            263897350,
            263900369,
            263899316,
            263897377
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/130135",
    "editorial": "Let be the value of the cube with the number .Let\u00e2\u0080\u0099s sort all the cubes\r\nby non-growth. Then let\u00e2\u0080\u0099s look at the value of the -th cube in order.\r\nSince the cubes are removed by non-growth, all cubes with large values\r\nwill be removed, some (perhaps not all) cubes with the same value, and\r\ncubes with smaller values will not be removed.If the value of the -th\r\ncube is greater than , then Dmitry\u00e2\u0080\u0099s favorite cube will not be removed,\r\nbecause all the removed cubes will have more values. If it is less than\r\n, then the favorite cube will always be removed, since the cube with the\r\nlower value will also be removed.If the value of the th cube is equal to\r\n, then some cubes with this value will be removed. However, if there are\r\nseveral such cubes, then perhaps not all of them will be removed. If the\r\nth cube is missing (for ) or if its value is less than , then all cubes\r\nwith this value will be removed, and the answer is . Otherwise, only a\r\npart of the cubes with the value will be removed, and the answer is ,\r\nbecause cubes with the same values are indistinguishable when sorting.\r\n",
    "name": "B. Choosing Cubes",
    "statement": "Dmitry has n cubes, numbered from left to right from 1 to n. The cube\r\nwith index f is his favorite.Dmitry threw all the cubes on the table,\r\nand the i-th cube showed the value a_i (1\r\nle a_i\r\nle 100). After that, he arranged the cubes in non-increasing order of\r\ntheir values, from largest to smallest. If two cubes show the same\r\nvalue, they can go in any order.After sorting, Dmitry removed the first\r\nk cubes. Then he became interested in whether he removed his favorite\r\ncube (note that its position could have changed after sorting).For\r\nexample, if n=5, f=2, a = [4,\r\ncolor{green}3, 3, 2, 3] (the favorite cube is highlighted in green), and\r\nk = 2, the following could have happened: After sorting a=[4,\r\ncolor{green}3, 3, 3, 2], since the favorite cube ended up in the second\r\nposition, it will be removed. After sorting a=[4, 3,\r\ncolor{green}3, 3, 2], since the favorite cube ended up in the third\r\nposition, it will not be removed.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;\u00a0int main() {    int t; cin >> t;    while (t--) {        int n, f, k; cin >> n >> f >> k;        vector<int> a(n);        for (int i = 0; i < n; i++) cin >> a[i];        int x = a[f - 1];        sort(a.begin(), a.end(), greater<>());        int mn = n + 1, mx = -1;        for (int i = 0; i < n; i++) {            if (a[i] == x) {                mn = min(mn, i);                mx = max(mx, i);            }        }        if (mn >= k) {            cout << \"NO\\n\";        } else if (mx < k) {            cout << \"YES\\n\";        } else {            cout << \"MAYBE\\n\";        }    }}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "sortings",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Choosing Cubes.json"
}