{
    "link": "https://codeforces.com//contest/1992/problem/E",
    "problemId": "2748267",
    "problem_idx": "E",
    "shortId": "1992E",
    "contest_number": "1992",
    "problem_submissions": {
        "G": [
            270004158,
            270000712,
            270020186,
            270006424,
            270010291,
            270026135,
            270032635,
            270035721,
            270033149,
            270036718,
            270041253,
            270830404,
            270035615,
            270034895,
            270041739,
            270045150,
            269953500,
            270015289,
            269950486
        ],
        "F": [
            269972577,
            270018896,
            269993465,
            269987867,
            269991929,
            270003873,
            269994703,
            270009199,
            270016540,
            270005935,
            270127981,
            270013136,
            270020087,
            270019936,
            270018379,
            269963694,
            270043761,
            270005597,
            269985278
        ],
        "D": [
            269954705,
            269930808,
            269933166,
            269942867,
            269936957,
            269946925,
            269942518,
            269941050,
            269944797,
            269962503,
            269960047,
            269956728,
            269964646,
            270000105,
            269992943,
            269953387,
            270024549,
            269937412
        ],
        "E": [
            269950946,
            269964630,
            269972651,
            269967159,
            269979484,
            269986612,
            269986054,
            269986867,
            269983914,
            269989311,
            269990694,
            269983845,
            269996015,
            269971543,
            269983529,
            270000206,
            270015715,
            269961487
        ],
        "C": [
            269920653,
            269918264,
            269915470,
            269928750,
            269924685,
            269919119,
            269916880,
            269924258,
            269918590,
            269936939,
            269921649,
            269929196,
            269923650,
            269913996,
            269998285,
            269933575,
            270027835,
            269914944
        ],
        "B": [
            269901952,
            269907735,
            269910847,
            269907929,
            269906378,
            269906593,
            269906048,
            269911414,
            269907898,
            269912483,
            269907733,
            269916021,
            269911764,
            269906789,
            270003910,
            269961585,
            270031623,
            269906408
        ],
        "A": [
            269898839,
            269900621,
            269899306,
            269900117,
            269900634,
            269898982,
            269898946,
            269899343,
            269899743,
            269900745,
            269900678,
            269900839,
            269903685,
            269898938,
            270007186,
            269957657,
            270033185,
            269900065
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/131461",
    "editorial": "TutorialNotice that is strictly less than , i.e., it has no more than\r\ndigits. The number of characters in the strange calculation is equal to\r\n, where is the number of digits in n. Letâs iterate over the value of ,\r\nand then determine the boundaries and for it, such that and . Then:\r\nLetâs iterate over all from to . To quickly check the strange\r\ncalculation, letâs only find its first digits. This way, we can find all\r\nsuitable pairs .Solution complexity: .\r\n",
    "name": "E. Novice s Mistake",
    "statement": "One of the first programming problems by K1o0n looked like this:\r\n\"Noobish_Monk has n (1\r\nle n\r\nle 100) friends. Each of them gave him a (1\r\nle a\r\nle 10000) apples for his birthday. Delighted with such a gift,\r\nNoobish_Monk returned b (1\r\nle b\r\nle\r\nmin(10000, a\r\ncdot n)) apples to his friends. How many apples are left with\r\nNoobish_Monk?\"K1o0n wrote a solution, but accidentally considered the\r\nvalue of n as a string, so the value of n\r\ncdot a - b was calculated differently. Specifically: when multiplying\r\nthe string n by the integer a, he will get the string s=\r\nunderbrace{n + n +\r\ndots + n + n}_{a\r\ntext{times}} when subtracting the integer b from the string s, the last\r\nb characters will be removed from it. If b is greater than or equal to\r\nthe length of the string s, it will become empty. Learning about this,\r\nErnKor became interested in how many pairs (a, b) exist for a given n,\r\nsatisfying the constraints of the problem, on which K1o0n’s solution\r\ngives the correct answer.\"The solution gives the correct answer\" means\r\nthat it outputs a string, and this string, when converted to an integer,\r\nequals the correct answer, i.e., the value of n\r\ncdot a - b.\r\n",
    "solutions": [
        "#include <bits/stdc++.h> using namespace std; #define int long long#define inf 0x3F3F3F3F3F3F3F3F const int MXN = 2e5 + 5; mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); void _(){\tint n;\tcin >> n;\tstring x = to_string(n);\tvector<array<int, 2>> v;\tfor (int a = 1; a <= 10000; a++)\t{\t\tint len = (int)x.length() * a;\t\tfor (int b = min(10000LL, len - 1); b >= 1 && len - b <= 10; b--)\t\t{\t\t\tint nwlen = len - b;\t\t\tstring nw = \"\";\t\t\twhile (nw.length() + x.length() <= nwlen) nw += x;\t\t\tint left = nwlen - (int)nw.length();\t\t\tif (left) nw += x.substr(0, left);\t\t\t// cout << nw << '\\n';\t\t\tint y = stoll(nw);\t\t\tif (y == n * a - b)\t\t\t{\t\t\t\tv.push_back({a, b});\t\t\t}\t\t}\t}\tcout << v.size() << '\\n';\tfor (array<int, 2> &x : v) cout << x[0] << ' ' << x[1] << '\\n';} signed main(){\tios_base::sync_with_stdio(0);\tcin.tie(0);\tint t;\tcin >> t;\twhile (t--)\t{\t\t_();\t}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "math",
        "strings"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Novice s Mistake.json",
    "hint": []
}