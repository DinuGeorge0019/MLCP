{
    "link": "https://codeforces.com//contest/1176/problem/B",
    "problemId": "356084",
    "problem_idx": "B",
    "shortId": "1176B",
    "contest_number": "1176",
    "problem_submissions": {
        "F": [
            55366536,
            55370553,
            55370076,
            55361482,
            55349957,
            55373782,
            55383169,
            55421204,
            55381361
        ],
        "D": [
            55352843,
            55361188,
            55360704,
            55370696,
            55358745,
            55347526,
            55359651,
            55356479,
            55361066,
            55360096,
            55360897,
            55358553,
            55352085,
            55359124,
            55360813,
            55363517,
            55362204,
            55360723,
            55360975,
            55364720
        ],
        "E": [
            55349152,
            55349756,
            55351649,
            55354804,
            55365594,
            55358360,
            55348657,
            55350850,
            55353780,
            55351477,
            62626593,
            55421378,
            55390144,
            55390011,
            55389979,
            55389924,
            55350785,
            55361448,
            55351241,
            55350527,
            55353065,
            55353378,
            55348945,
            55354346,
            55353391
        ],
        "C": [
            55342677,
            55351695,
            55338466,
            55345985,
            55363580,
            55342563,
            55343971,
            55347250,
            55345645,
            55345777,
            55347227,
            55345382,
            55347101,
            55344713,
            55348024,
            55345956,
            55344452,
            55349792,
            55346750
        ],
        "B": [
            55338190,
            55339928,
            55338713,
            55340244,
            55360985,
            55338545,
            55340194,
            55344577,
            55338952,
            55340812,
            55340557,
            55340932,
            55341245,
            55341745,
            55340147,
            55340311,
            55339019,
            55342585,
            55340210
        ],
        "A": [
            55337291,
            55337321,
            55338350,
            55337635,
            55360313,
            55337458,
            55338052,
            55339410,
            55337348,
            55337956,
            55338200,
            55338309,
            55337308,
            55337677,
            55337569,
            55337795,
            55337752,
            55337587,
            55338006
        ]
    },
    "name": "B. Merge it ",
    "statement": "You are given an array a consisting of n integers a_1, a_2,\r\ndots , a_n.In one operation you can choose two elements of the array and\r\nreplace them with the element equal to their sum (it does not matter\r\nwhere you insert the new element). For example, from the array [2, 1, 4]\r\nyou can obtain the following arrays: [3, 4], [1, 6] and [2, 5].Your task\r\nis to find the maximum possible number of elements divisible by 3 that\r\nare in the array after performing this operation an arbitrary (possibly,\r\nzero) number of times.You have to answer t independent queries.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn=105;\nint T,n,a[Maxn],cnt[5],ans;\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tcnt[0]=cnt[1]=cnt[2]=0;\n\t\tans=0;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%d\",&a[i]),cnt[a[i]%3]++;\n\t\tans+=min(cnt[1],cnt[2]);\n\t\tcnt[1]-=ans,cnt[2]-=ans;\n\t\tans+=cnt[1]/3+cnt[2]/3;\n\t\tprintf(\"%d\\n\",cnt[0]+ans);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Merge it .json",
    "editorial_link": "https://codeforces.com/blog/entry/67598",
    "editorial": "Let be the number of elements of with the remainder modulo . Then the\r\ninitial answer can be represented as and we have to compose numbers with\r\nremainders and somehow optimally. It can be shown that the best way to\r\ndo it is the following: firstly, while there is at least one remainder\r\nand at least one remainder , let\u00e2\u0080\u0099s compose them into one . After this,\r\nat least one of the numbers will be zero, then we have to compose\r\nremaining numbers into numbers divisible by . If then the maximum\r\nremaining number of elements we can obtain is (because ), and in the\r\nother case ( the maximum number of elements is (because ).\r\n"
}