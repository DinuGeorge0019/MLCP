{
    "link": "https://codeforces.com//contest/1790/problem/C",
    "problemId": "1753648",
    "problem_idx": "C",
    "shortId": "1790C",
    "contest_number": "1790",
    "problem_submissions": {
        "G": [
            190854632,
            190862960,
            190871236,
            190852228,
            190874097,
            190860078,
            190864244,
            190870017,
            190877879,
            190877235,
            190904434,
            190907790,
            190907701,
            190907675,
            190907628,
            190907581,
            190906892,
            190854527,
            190922421
        ],
        "F": [
            190826149,
            190835977,
            190846761,
            190834910,
            190847927,
            190872422,
            190808806,
            190840036,
            190828723,
            190808476,
            190910332,
            190837355,
            196429864,
            190917553,
            190917160,
            190851135,
            190842374,
            190851773,
            190863031,
            190852368,
            190851643,
            190838344
        ],
        "E": [
            190812975,
            190818965,
            190827893,
            190863212,
            190836271,
            190829765,
            190825221,
            190876565,
            190808314,
            190824525,
            190821638,
            190829372,
            190820356,
            190812061,
            190820330,
            190820963,
            190806991,
            190818524,
            190819724,
            190846451
        ],
        "D": [
            190803665,
            190801014,
            190809824,
            190809927,
            190814214,
            190816750,
            190829094,
            190855040,
            190798110,
            190788994,
            190804480,
            190888100,
            190808920,
            190796914,
            191055501,
            190801526,
            190807925,
            190805582,
            190795106,
            190877973,
            190877812,
            190877739,
            190807212,
            190809993,
            190794263
        ],
        "C": [
            190799607,
            190794832,
            190803346,
            190801723,
            190802374,
            190811887,
            190835627,
            190842540,
            190791067,
            190792160,
            190797002,
            190796740,
            190791871,
            191053177,
            190792454,
            190799052,
            190800065,
            190792126,
            190796861,
            190801470,
            190788102
        ],
        "B": [
            190787414,
            190782870,
            190784109,
            190786307,
            190786713,
            190787527,
            190838763,
            190837244,
            190783518,
            190783528,
            190787197,
            190780535,
            190781020,
            190992563,
            190781621,
            190782537,
            190779326,
            190778124,
            190780824,
            190788703,
            190964430,
            190781997
        ],
        "A": [
            190775165,
            190772612,
            190774942,
            190772740,
            190773567,
            190776157,
            190841892,
            190833157,
            190774181,
            190772373,
            190774417,
            190772590,
            190773736,
            190991523,
            190774168,
            190774263,
            190772401,
            190772891,
            190774182,
            192760356,
            190775235,
            190774848
        ]
    },
    "name": "C. Premutation",
    "statement": "A sequence of n numbers is called if it contains all integers from 1 to\r\nn exactly once. For example, the sequences [3, 1, 4, 2], [1] and [2,1]\r\nare permutations, but [1,2,1], [0,1] and [1,3,4] are not.Kristina had a\r\npermutation p of n elements. She wrote it on the whiteboard n times in\r\nsuch a way that: while writing the permutation at the i-th (1\r\nle i\r\nle n) time she skipped the element p_i So, she wrote in total n\r\nsequences of length n-1 each.For example, suppose Kristina had a\r\npermutation p = [4,2,1,3] of length 4. Then she did the following: Wrote\r\nthe sequence [2, 1, 3], skipping the element p_1=4 from the original\r\npermutation. Wrote the sequence [4, 1, 3], skipping the element p_2=2\r\nfrom the original permutation. Wrote the sequence [4, 2, 3], skipping\r\nthe element p_3=1 from the original permutation. Wrote the sequence [4,\r\n2, 1], skipping the element p_4=3 from the original permutation. You\r\nknow all n of sequences that have been written on the whiteboard, but\r\nyou do not know the order in which they were written. They are given in\r\n. Reconstruct the original permutation from them.For example, if you\r\nknow the sequences [4, 2, 1], [4, 2, 3], [2, 1, 3], [4, 1, 3], then the\r\noriginal permutation will be p = [4, 2, 1, 3].\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int mod=1e9+7;\nint t,a[110][110],c[110];\nvoid solve(){\n        int n,i,j,mx;cin>>n;\n        for(i=0;i<110;i++)c[i]=0;\n        for(i=0;i<n;i++){\n                for(j=0;j<n-1;j++){\n                        cin>>a[i][j];\n                        a[i][j]--;\n                }\n                c[a[i][0]]++;\n        }\n        mx=max_element(c,c+n)-c;\n        for(i=0;i<n;i++){\n                if(a[i][0]==mx)continue;\n                cout<<mx+1;\n                for(j=0;j<n-1;j++)cout<<' '<<a[i][j]+1;\n                cout<<'\\n';\n                return;\n        }\n}\nsigned main(){\n        ios::sync_with_stdio(false);cin.tie(nullptr);\n        cin>>t;\n        while(t--)solve();\n        return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Premutation.json",
    "editorial_link": "https://codeforces.com//blog/entry/111948",
    "editorial": "When Kristina writes sequences on the whiteboard, she removes an element\r\nwith each index exactly once. Thus, the first element of the permutation\r\nwill be deleted only once on the first step. All sequences except one\r\nwill start with itTo solve the problem, find a sequence such that: it\r\nstarts with some element all sequences other than this one begin with\r\nsome element Then this permutation will describe the sequence of numbers\r\nremaining after removing the th element, and the first element itself\r\nwill be equal to the number . The initial permutation will look like [].\r\n",
    "hint": []
}