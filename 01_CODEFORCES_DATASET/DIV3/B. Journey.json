{
    "link": "https://codeforces.com//contest/2051/problem/B",
    "problemId": "3099575",
    "problem_idx": "B",
    "shortId": "2051B",
    "contest_number": "2051",
    "problem_submissions": {
        "G": [
            297891656,
            297890696,
            297899138,
            297892259,
            297912620,
            297920714,
            297934708,
            297929892,
            297931851,
            297911736,
            297927208,
            297928317,
            297947772,
            297909767,
            297942983,
            297993500,
            297875875,
            297873133,
            297875271
        ],
        "F": [
            297856552,
            297878644,
            297873030,
            297875253,
            297891474,
            297895628,
            297891515,
            297904684,
            297959623,
            297914765,
            297882921,
            297895179,
            297910575,
            297923862,
            297919187,
            297917128,
            297916364,
            297943956,
            297865687,
            297864877,
            297909911
        ],
        "E": [
            297841786,
            297836575,
            297839584,
            297846936,
            297869096,
            297865734,
            297862813,
            297854892,
            297860094,
            297876823,
            297874225,
            297892538,
            297862291,
            297876371,
            297877246,
            297922331,
            297840776,
            297834266,
            297852254,
            297850894
        ],
        "D": [
            297824998,
            297828255,
            297829120,
            297836876,
            297843401,
            297839448,
            297844425,
            297835789,
            297837071,
            297862412,
            297866230,
            297845487,
            297868513,
            297862250,
            297899798,
            297831894,
            297830585,
            297845610,
            297833477
        ],
        "C": [
            297817405,
            297821512,
            297822005,
            297826169,
            297828699,
            297832899,
            297832376,
            297822832,
            297823992,
            297849370,
            297841820,
            297834151,
            297857822,
            297848820,
            297891200,
            297825348,
            297827127,
            297840542,
            297824191
        ],
        "B": [
            297813648,
            297815534,
            297817642,
            297818888,
            297819929,
            297820049,
            297826062,
            297814904,
            297817786,
            297837190,
            297825933,
            297817655,
            297849719,
            297836185,
            297885765,
            297815546,
            297824155,
            297835551,
            297813164
        ],
        "A": [
            297812430,
            297812527,
            297814260,
            297815468,
            297814137,
            297814651,
            297817327,
            297812582,
            297812492,
            297830581,
            297819762,
            297812887,
            297821437,
            297881803,
            297812726,
            297821513,
            297830979,
            297812442
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/137623",
    "editorial": "Processing every day separately is too slow. Instead, we will use the\r\nfact that every three days, the number of kilometers Monocarp walks\r\nrepeats, and process days in \"triples\".During every three days, Monocarp\r\nwalks exactly kilometers, so we can do the following: while , subtract\r\nfrom and increase the answer by ; and finally, process the remaining\r\ndays, since there will be at most of them.However, this works in per\r\ntest case, so it is still too slow. We need to improve the part when we\r\nsubtract from until becomes less than this sum. Does this sound\r\nfamiliar?The number of times we need to subtract from is exactly , and\r\nthe number we get after that is by definition of integer division and\r\nremainder. This allows us to process all \"triples\" in , instead of\r\nrunning a loop in .The solution we get works in per test case.\r\n",
    "name": "B. Journey",
    "statement": "Monocarp decided to embark on a long hiking journey.He decided that on\r\nthe first day he would walk a kilometers, on the second day he would\r\nwalk b kilometers, on the third day he would walk c kilometers, on the\r\nfourth day, just like on the first, he would walk a kilometers, on the\r\nfifth day, just like on the second, he would walk b kilometers, on the\r\nsixth day, just like on the third, he would walk c kilometers, and so\r\non.Monocarp will complete his journey on the day when he has walked at\r\nleast n kilometers in total. Your task is to determine the day on which\r\nMonocarp will complete his journey.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>#define ll long longusing namespace std; int main(){    ios::sync_with_stdio(false);    cin.tie(nullptr);        int t;    cin >> t;        while(t--){        ll n, a, b, c;        cin >> n >> a >> b >> c;         ll cs = a + b + c;        ll k = (n - 1) / cs;        ll to = k * cs;        ll rem = n - to;        ll ans = k * 3;                if(rem <= a){            ans +=1;        }        else if(rem <= a + b){            ans +=2;        }        else{            ans +=3;        }        cout << ans << \"\\n\";    }}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Journey.json",
    "hint": []
}