{
    "link": "https://codeforces.com//contest/2008/problem/A",
    "problemId": "2850006",
    "problem_idx": "A",
    "shortId": "2008A",
    "contest_number": "2008",
    "problem_submissions": {
        "H": [
            279136956,
            279175231,
            279161763,
            279179363,
            279181586,
            279168976,
            279216022,
            279614299,
            279182476,
            279209636,
            279208468,
            279207341,
            279210332,
            279350027,
            279217913,
            279220559,
            279216550,
            279220895,
            279220924,
            279302743
        ],
        "G": [
            279119447,
            279152222,
            279151084,
            279131568,
            279192199,
            279163482,
            279207144,
            279160784,
            279362880,
            279111562,
            279178333,
            279161657,
            279296750,
            279200995,
            279191409,
            279192959,
            279209224,
            279173816,
            279190595,
            279189666,
            279155886,
            279187798
        ],
        "F": [
            279104606,
            279131689,
            279118881,
            279127227,
            279115943,
            279103916,
            279131962,
            279356689,
            279077044,
            279134534,
            279099699,
            279292527,
            279106499,
            279150166,
            279167659,
            279130886,
            279186290,
            279121299,
            279117301,
            279134844
        ],
        "E": [
            279097264,
            279123319,
            279112502,
            279113482,
            279140821,
            279152927,
            279147312,
            279181553,
            279142676,
            279163125,
            279188714,
            279161254,
            279138336,
            279154142,
            279156092,
            279140491,
            279154770,
            279110096,
            279153681,
            279116556
        ],
        "D": [
            279079188,
            279103941,
            279108267,
            279089266,
            279105270,
            279092186,
            279119277,
            279128075,
            279092080,
            279120640,
            279166364,
            279126815,
            279110851,
            279134432,
            279119823,
            279121959,
            279088289,
            279095604,
            279098547
        ],
        "C": [
            279075309,
            279090563,
            279107974,
            279084125,
            279095019,
            279080293,
            279095460,
            279192216,
            279081252,
            279108974,
            279132485,
            279093671,
            279089579,
            279098258,
            279105761,
            279109828,
            279083132,
            279080197,
            279089704
        ],
        "B": [
            279070569,
            279078207,
            279107778,
            279079153,
            279085265,
            279120271,
            279088210,
            279097026,
            279076070,
            279110876,
            279124102,
            279123495,
            279082667,
            279084060,
            279083489,
            279098074,
            279099366,
            279076888,
            279076970,
            279080147
        ],
        "A": [
            279068125,
            279068165,
            279106509,
            279068333,
            279073493,
            279112154,
            279077178,
            279083226,
            279068010,
            279081658,
            279079540,
            279073175,
            279071802,
            279068979,
            279070906,
            279069965,
            279068711,
            279069909,
            279068403
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/133509",
    "editorial": "First of all, this task is the same as: \"divide an array into two arrays\r\nwith equal sum\". So, obviously, we need to check if the sum of all\r\nelements is even which implies that the number of ones is even. Then, we\r\ncan out half of 2s in one array and the other half in another, but if\r\nnumber of 2s is odd, then one array will have a greater sum then\r\nanother, so we need to put two 1s there. So, if we don\u00e2\u0080\u0099t have two ones\r\nwhile the number of 2s is odd then the answer is \"NO\". Also, if sum is\r\nodd, the answer is also \"NO\". In all other cases, the answer is \"YES\".\r\n",
    "name": "A. Sakurako s Exam",
    "statement": "Today, Sakurako has a math exam. The teacher gave the array, consisting\r\nof a ones and b twos.In an array, Sakurako place either a \u201d or a \u201d in\r\nfront of each element so that the sum of all elements in the array\r\nequals 0.Sakurako is not sure if it is possible to solve this problem,\r\nso determine whether there is a way to assign signs such that the sum of\r\nall elements in the array equals 0.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;\u00a0namespace std {\u00a0template <int D, typename T>struct Vec : public vector<Vec<D - 1, T>> {    static_assert(D >= 1);    template <typename... Args>    Vec(int n = 0, Args... args) : vector<Vec<D - 1, T>>(n, Vec<D - 1, T>(args...)) {}};\u00a0template <typename T>struct Vec<1, T> : public vector<T> {    Vec(int n = 0, T val = T()) : std::vector<T>(n, val) {}};\u00a0template <class Fun>class y_combinator_result {    Fun fun_;\u00a0   public:    template <class T>    explicit y_combinator_result(T &&fun) : fun_(std::forward<T>(fun)) {}\u00a0    template <class... Args>    decltype(auto) operator()(Args &&...args) {        return fun_(std::ref(*this), std::forward<Args>(args)...);    }};\u00a0template <class Fun>decltype(auto) y_combinator(Fun &&fun) {    return y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));}\u00a0}  // namespace std\u00a0int32_t main() {    ios_base::sync_with_stdio(0);    cin.tie(0);\u00a0    int t;    cin >> t;    while (t--) {        int a, b;        cin >> a >> b;        if (a % 2) {            cout << \"NO\\n\";        } else {            if (a == 0) {                if (b % 2) {                    cout << \"NO\\n\";                } else {                    cout << \"YES\\n\";                }            } else {                cout << \"YES\\n\";            }        }    }}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Sakurako s Exam.json"
}