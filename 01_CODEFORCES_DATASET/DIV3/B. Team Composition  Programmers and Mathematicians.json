{
    "link": "https://codeforces.com//contest/1611/problem/B",
    "problemId": "1202185",
    "problem_idx": "B",
    "shortId": "1611B",
    "contest_number": "1611",
    "problem_submissions": {
        "G": [
            136919698,
            136924345,
            136928058,
            137125236
        ],
        "D": [
            136909432,
            136888068,
            136869096,
            136875871,
            136873458,
            136872703,
            136892897,
            136874114,
            136878310,
            136876576,
            136982847,
            136873530,
            136877831,
            136975464,
            136882777,
            136872332,
            136878705,
            136879548,
            136882637,
            136884556,
            136875995,
            136885445
        ],
        "C": [
            136904645,
            136879235,
            136858847,
            136855243,
            136861532,
            136858913,
            136876501,
            136863657,
            136864973,
            136856130,
            136982821,
            136863847,
            136868283,
            136968820,
            136869195,
            136914947,
            136862897,
            136869863,
            136862192,
            136866525,
            136860324,
            136867113
        ],
        "F": [
            136894434,
            136926092,
            136925788,
            136894423,
            136887654,
            136898905,
            136890793,
            136892527,
            136897622,
            136914432,
            136920232,
            136982943,
            136925360,
            136906595,
            136919174,
            136903703,
            136921493,
            136918298,
            136922728,
            136905212,
            136914690,
            136921349
        ],
        "E2": [
            136882323,
            136916663,
            136883396,
            136897153,
            136890210,
            136911911,
            136900593,
            136909227,
            136895787,
            136903952,
            136982885,
            136896820,
            136917983,
            136900669,
            136888044,
            136899257,
            136899662,
            136904447,
            136915639,
            136920739,
            136912069
        ],
        "E1": [
            136879967,
            136917077,
            136876615,
            136879938,
            136883345,
            136903050,
            136866650,
            136906813,
            136891861,
            136885925,
            136982868,
            136892962,
            136889119,
            136896344,
            136885342,
            136893182,
            136895321,
            136895279,
            136895954,
            136895593,
            136897796
        ],
        "B": [
            136853549,
            136850019,
            136845917,
            136846742,
            136848311,
            136849660,
            136855952,
            136851245,
            136847523,
            136844081,
            136855128,
            136851469,
            136843577,
            136850258,
            136848183,
            136852060,
            136853372,
            136855929,
            136847562,
            136850988
        ],
        "A": [
            136844450,
            136846022,
            136842097,
            136842084,
            136843783,
            136847130,
            136842440,
            136842943,
            136843633,
            136841984,
            136846854,
            136846415,
            136848083,
            136843263,
            136843590,
            136843624,
            136845033,
            136842923,
            136842870,
            136846917
        ]
    },
    "name": "B. Team Composition  Programmers and Mathematicians",
    "statement": "The All-Berland Team Programming Contest will take place very soon. This\r\nyear, teams of four are allowed to participate.There are a programmers\r\nand b mathematicians at Berland State University. How many maximum teams\r\ncan be made if: each team must consist of exactly 4 students, teams of 4\r\nmathematicians or 4 programmers are unlikely to perform well, so the\r\ndecision was made not to compose such teams. Thus, each team must have\r\nat least one programmer at least one mathematician.Print the required\r\nmaximum number of teams. Each person can be a member of no more than one\r\nteam.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nlong long func(long long a,long long b){\n    if(!a||!b)return 0;\n    long long res=0;\n    for(long long i=1;i!=4;++i){\n        long long resto=4-i;\n        if(!(a/i)||!(b/resto))continue;\n        long long reduz=std::min(a/i,b/resto);\n        res=std::max(res,reduz+func(a-(i*reduz),b-(resto*reduz)));\n    }\n    return res;\n}\nint main()\n{\n    int t;\n    std::cin>>t;\n    for(int __=0;__!=t;++__){\n        long long a,b;std::cin>>a>>b;\n        long long times=(a+b)/4;\n        times=std::min(times,a);\n        times=std::min(times,b);\n        std::cout<<times<<\"\\n\";\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Team Composition  Programmers and Mathematicians.json",
    "editorial_link": "https://codeforces.com//blog/entry/97288",
    "editorial": "If necessary, change the values of and so that is always true. Consider\r\ntwo cases.1. Let . Then:, .This means that the set is at least times\r\nlarger than , and we can form teams of the form , where one participant\r\nwill be a programmer and three will be mathematicians.2. Let . Then\r\nassume that . Letâs substitute this value into the inequality:, , Then\r\nwe compose commands of the form . Since making such a command decreases\r\nthe value of by 2. The new value , . The condition still holds. Then\r\nmake commands of the form .The total number of commands is . Thatâs what\r\nwe wanted to get.\r\n",
    "hint": []
}