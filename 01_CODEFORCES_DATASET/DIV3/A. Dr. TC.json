{
    "link": "https://codeforces.com//contest/2106/problem/A",
    "problemId": "3350606",
    "problem_idx": "A",
    "shortId": "2106A",
    "contest_number": "2106",
    "problem_submissions": {
        "G1": [
            317037524,
            317062262,
            317061590,
            317052941,
            317066213,
            317065911
        ],
        "F": [
            317035761,
            317047729,
            317029292,
            317067306,
            317073415,
            317070219,
            317022800,
            317030307,
            317028689,
            317050113,
            317855906,
            317044171,
            317050574,
            317045837,
            317043135,
            317044827,
            317050773,
            317041440
        ],
        "E": [
            317020313,
            317010744,
            317046134,
            317035937,
            317029339,
            317046150,
            317010414,
            317018526,
            317021744,
            317013609,
            317950136,
            317028070,
            317036331,
            317032678,
            317025857,
            317036190,
            317040887
        ],
        "D": [
            316999946,
            317027974,
            317011069,
            317020862,
            317037534,
            317031860,
            316984555,
            317007925,
            317005998,
            317006604,
            317007086,
            317010692,
            317015300,
            317015795,
            317017807,
            317018294,
            316999673
        ],
        "C": [
            316988591,
            316986472,
            316999853,
            317026133,
            316999286,
            317002344,
            316991443,
            316988219,
            317000196,
            316978313,
            316994740,
            316996215,
            317004560,
            317006037,
            317004240,
            317004181,
            316991883
        ],
        "B": [
            316981000,
            316979542,
            316988448,
            316988900,
            316993570,
            316993687,
            317000718,
            316983017,
            316992142,
            316991120,
            316981211,
            316985408,
            316994310,
            316999518,
            316991380,
            316984785,
            316983692
        ],
        "A": [
            316977086,
            316978937,
            316978575,
            316978826,
            316982345,
            316979125,
            316997396,
            316978412,
            316977215,
            316981299,
            316977127,
            316977164,
            316982363,
            316981149,
            316979807,
            316979304,
            316977212
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/142254",
    "editorial": "(Author & Analysis: SpyrosAliv) SolutionEvery character of is flipped in\r\nexactly one string. Therefore, if , we need to add to the answer (since\r\nthe - character will stay for strings), and if we need to add (since\r\nthe - character will be in exactly one string).\r\n",
    "name": "A. Dr. TC",
    "statement": "In order to test his patients’ intelligence, Dr. TC created the\r\nfollowing test.First, he creates a binary string^{\r\ntext{ }} s having n characters. Then, he creates n binary strings a_1,\r\na_2,\r\nldots, a_n. It is known that a_i is created by first copying s, then\r\nflipping the i’th character (\r\ntexttt{1} becomes\r\ntexttt{0} and vice versa). After creating all n strings, he arranges\r\nthem into a grid where the i’th row is a_i. For example, If s =\r\ntexttt{101}, a = [\r\ntexttt{001},\r\ntexttt{111},\r\ntexttt{100}]. If s =\r\ntexttt{0000}, a = [\r\ntexttt{1000},\r\ntexttt{0100},\r\ntexttt{0010},\r\ntexttt{0001}]. The patient needs to count the number of 1s written on\r\nthe board in less than a second. Can you pass the test?^{\r\ntext{ }}A binary string is a string that only consists of characters\r\ntexttt{1} and\r\ntexttt{0}.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Dr. TC.json",
    "hint": []
}