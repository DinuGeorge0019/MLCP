{
    "link": "https://codeforces.com//contest/1216/problem/C",
    "problemId": "416602",
    "problem_idx": "C",
    "shortId": "1216C",
    "contest_number": "1216",
    "problem_submissions": {
        "E2": [
            60986734,
            60981170,
            60997115,
            60985637,
            60997177,
            60997976,
            60992623,
            69195725,
            60998670,
            61247650,
            60997442,
            60997640
        ],
        "E1": [
            60986701,
            60981381,
            60991296,
            60984645,
            60985839,
            60989738,
            60990832,
            60978683,
            60998375,
            60989797,
            60998466,
            60993985,
            60980914,
            60997704,
            60988736,
            60984723,
            60990990,
            60986601
        ],
        "C": [
            60981669,
            60990425,
            60975750,
            60975663,
            61086862,
            60983090,
            60984718,
            61533112,
            60981907,
            60982789,
            60976823,
            60986723,
            61054057,
            60989611,
            60976831,
            60974484,
            60977137,
            60972899,
            60979313
        ],
        "F": [
            60975517,
            60986121,
            60989454,
            61044084,
            60994589,
            60996911,
            60992052,
            60996768,
            60996199,
            60997941,
            61058200,
            60986086,
            60984536
        ],
        "D": [
            60970305,
            60969422,
            60979167,
            60973557,
            60979158,
            60977757,
            60974574,
            60971427,
            60975880,
            60986777,
            60980642,
            60979989,
            60972197,
            60998997,
            60971823,
            60978440,
            60977872,
            60980072,
            60979415,
            60982329
        ],
        "B": [
            60968540,
            60973425,
            60969453,
            60969948,
            60968651,
            60970421,
            60969221,
            60967329,
            60973241,
            60969188,
            60971106,
            60972717,
            61055106,
            60990306,
            60977585,
            60967750,
            60969441,
            60969185,
            60970105,
            60969050
        ],
        "A": [
            60966562,
            60966712,
            60966606,
            60967078,
            60966914,
            60966840,
            60966749,
            60973994,
            60967597,
            60966646,
            60968186,
            60966855,
            61054672,
            60987474,
            60967039,
            60966387,
            60966654,
            60966714,
            60966479,
            60966739
        ]
    },
    "name": "C. White Sheet",
    "statement": "There is a white sheet of paper lying on a rectangle table. The sheet is\r\na rectangle with its sides parallel to the sides of the table. If you\r\nwill take a look from above and assume that the bottom left corner of\r\nthe table has coordinates (0, 0), and coordinate axes are left and\r\nbottom sides of the table, then the bottom left corner of the white\r\nsheet has coordinates (x_1, y_1), and the top right (x_2, y_2).After\r\nthat two black sheets of paper are placed on the table. Sides of both\r\nblack sheets are also parallel to the sides of the table. Coordinates of\r\nthe bottom left corner of the first black sheet are (x_3, y_3), and the\r\ntop right (x_4, y_4). Coordinates of the bottom left corner of the\r\nsecond black sheet are (x_5, y_5), and the top right (x_6, y_6).\r\nDetermine if some part of the white sheet can be seen from the above\r\nafter the two black sheets are placed. The part of the white sheet can\r\nbe seen if there is at least one point lying the white sheet and of both\r\nblack sheets.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define rep(X,A,B) for(int X=A;X<=B;X++)\n#define tep(X,A,B) for(int X=A;X>=B;X--)\n#define LL long long\nconst int N=500010;\nconst int M=1000010;\nusing namespace std;\n\nstruct nn{\n\tint xa,xb,ya,yb;\n\tvoid READ(){\n\t\tscanf(\"%d%d%d%d\",&xa,&ya,&xb,&yb);\n\t}\n}a[5];\n\nint CV(nn A,nn B){\n\tif(A.xa==B.xa&&A.ya==B.ya&&A.xb==B.xb&&A.yb==B.yb)return 1;\n\treturn 0;\n}\n\nvoid INIT(int i){\n\ta[i].xa=max(a[i].xa,a[1].xa);\n\ta[i].ya=max(a[i].ya,a[1].ya);\n\ta[i].xb=min(a[i].xb,a[1].xb);\n\ta[i].yb=min(a[i].yb,a[1].yb);\n}\n\nint CHK(nn A,nn B){\n\tif(A.xa==B.xa&&A.xb==B.xb)return 1;\n\tif(A.ya==B.ya&&A.yb==B.yb)return 2;\n\treturn 0;\n}\n\nint SOLVE(){\n\tif(CV(a[2],a[1])||CV(a[3],a[1]))return 1;\n\tint na=CHK(a[2],a[1]),nb=CHK(a[3],a[1]);\n\tif(na+nb==0)return 0;\n\tif(na!=nb)return 0;\n\tif(na==2){\n\t\tif(a[2].xa>a[3].xa)swap(a[2],a[3]);\n\t\tif(a[2].xa>a[1].xa||a[3].xb<a[1].xb)return 0;\n\t\tif(a[2].xb>=a[3].xa)return 1;\n\t\treturn 0;\n\t}\n\telse{\n\t\tif(a[2].ya>a[3].ya)swap(a[2],a[3]);\n\t\tif(a[2].ya>a[1].ya||a[3].yb<a[1].yb)return 0;\n\t\tif(a[2].yb>=a[3].ya)return 1;\n\t\treturn 0;\t\n\t}\n}\n\nint main(){\n\trep(i,1,3)a[i].READ();\n\tINIT(2);INIT(3);\n\tif(SOLVE())printf(\"NO\\n\");\n\telse printf(\"YES\\n\");\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. White Sheet.json",
    "editorial_link": "https://codeforces.com//blog/entry/69954",
    "editorial": "There are at least two solution to the problem. I\u00e2\u0080\u0099ll describe both of\r\nthem.The first solution: firstly let\u00e2\u0080\u0099s notice that the point we search\r\ncan have non-integer coordinates, but if the answer exists then there\r\nwill be the answer such that its point has at most half-integer\r\ncoordinates. So let\u00e2\u0080\u0099s multiply all coordinates by two and solve the\r\nproblem with integer coordinates. The second thing is that for some\r\nthere is only two points we need to check top point with this and bottom\r\npoint with this . The same for some . So we can iterate over all\r\npossible values of and check if the point lies outside of both black\r\nrectangles. The same with point . Then do the same for points and .\r\nshould be in range and should be in range . Time complexity is linear on\r\nsize of the white rectangle.The second solution is most tricky but has\r\nthe better time complexity. Let be the intersection of white rectangle\r\nand the first black rectangle, the same but with the second black\r\nrectangle and be the intersection of and . Then it is obvious that the\r\nanswer exists if and doesn\u00e2\u0080\u0099t cover the whole white rectangle (). Time\r\ncomplexity: .\r\n"
}