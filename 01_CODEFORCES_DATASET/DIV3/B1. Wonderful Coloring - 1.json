{
    "link": "https://codeforces.com//contest/1551/problem/B1",
    "problemId": "1055220",
    "problem_idx": "B1",
    "shortId": "1551B1",
    "contest_number": "1551",
    "problem_submissions": {
        "D2": [
            123504570,
            123491119,
            123485402,
            123508709,
            123487387,
            123490299,
            123498497,
            123519517,
            123503570,
            123507308,
            123506328,
            123496338,
            123525324,
            123509854,
            123500000,
            123499688,
            123500681,
            123520243,
            123521810,
            123560543,
            123489816
        ],
        "D1": [
            123496540,
            123479404,
            123460900,
            123501007,
            123476769,
            123477339,
            123486676,
            123509110,
            123490131,
            123493249,
            123493173,
            123482125,
            123490880,
            123500902,
            123489510,
            123491442,
            123487788,
            123505201,
            123513198,
            123560527,
            123477927
        ],
        "E": [
            123487760,
            123503517,
            123508061,
            123512161,
            123512376,
            123522062,
            123512340,
            123494473,
            123520187,
            123519199,
            123522642,
            123508385,
            123509676,
            123525566,
            123522562,
            123529567,
            123525043,
            123524224,
            123527690,
            123529206
        ],
        "F": [
            123483346,
            123518773,
            123505149,
            123522554,
            123530029,
            123525813,
            123677834
        ],
        "C": [
            123463062,
            123471764,
            123465961,
            123494616,
            123466015,
            123470689,
            123479667,
            123473982,
            123478387,
            123473235,
            123485341,
            123504214,
            123476344,
            123474463,
            123482794,
            123487070,
            123509871,
            123495332,
            123505971,
            123560511,
            123471519
        ],
        "B1": [
            123458055,
            123450157,
            123447323,
            123480992,
            123471662,
            123459271,
            123448891,
            123453516,
            123457018,
            123473105,
            123465306,
            123457521,
            123473064,
            123450150,
            123457907,
            123454507,
            123450845,
            123454392,
            123459478,
            123486711,
            123560483,
            123451550
        ],
        "B2": [
            123455203,
            123463888,
            123460727,
            123523874,
            123456743,
            123463349,
            123471479,
            123467608,
            123467523,
            123462292,
            123471295,
            123468067,
            123463785,
            123466840,
            123469959,
            123475307,
            123473651,
            123478743,
            123500344,
            123560494,
            123462370
        ],
        "A": [
            123443367,
            123443254,
            123447159,
            123446121,
            123445546,
            123443509,
            123444177,
            123443572,
            123444116,
            123444163,
            123445991,
            123474697,
            123444077,
            123443229,
            123447862,
            123443364,
            123443226,
            123449045,
            123446138,
            123560465,
            123443541
        ]
    },
    "name": "B1. Wonderful Coloring - 1",
    "statement": "Paul and Mary have a favorite string s which consists of lowercase\r\nletters of the Latin alphabet. They want to paint it using pieces of\r\nchalk of two colors: red and green. Let’s call a coloring of a string\r\nwonderful if the following conditions are met: each letter of the string\r\nis either painted in exactly one color (red or green) or isn’t painted;\r\neach two letters which are painted in the same color are different; the\r\nnumber of letters painted in red is equal to the number of letters\r\npainted in green; the number of painted letters of this coloring is\r\namong all colorings of the string which meet the first three conditions.\r\nE. g. consider a string s equal to \"\". One of the wonderful colorings of\r\nthe string is shown in the figure. Paul and Mary want to learn by\r\nthemselves how to find a wonderful coloring of the string. But they are\r\nvery young, so they need a hint. Help them find k the number of red (or\r\ngreen, these numbers are equal) letters in a wonderful coloring.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std ;\n\n#define ll              long long \n#define pb              push_back\n#define all(v)          v.begin(),v.end()\n#define sz(a)           (ll)a.size()\n#define F               first\n#define S               second\n#define INF             2000000000000000000\n#define popcount(x)     __builtin_popcountll(x)\n#define pll             pair<ll,ll>\n#define pii             pair<int,int>\n#define ld              long double\n\nconst int M = 1000000007;\nconst int MM = 998244353;\n\ntemplate<typename T, typename U> static inline void amin(T &x, U y){ if(y<x) x=y; }\ntemplate<typename T, typename U> static inline void amax(T &x, U y){ if(x<y) x=y; }\n\n#ifdef LOCAL\n#define debug(...) debug_out(#__VA_ARGS__, __VA_ARGS__)\n#else\n#define debug(...) 2351\n#endif\n\n\nint _runtimeTerror_()\n{\n    int n,k = 2;\n    // cin >> n;\n    string s;\n    cin >> s;\n    n = sz(s);\n    map<int,vector<int>> mp;\n    vector<int> ans(n+1,0);\n\n    for(int i=0;i<n;++i)\n    {\n        mp[s[i]-'0'].push_back(i);\n    }\n    vector<int> t;\n    for(auto &[i,v]:mp)\n    {\n        while(sz(v) > k)\n            v.pop_back();\n        for(auto &j:v)\n            t.push_back(j);\n    }\n    while(sz(t) % k != 0)\n        t.pop_back();\n    int cur = 0;\n    // debug(t);\n    cout << sz(t) / 2 << \"\\n\";\n    return 0;\n    for(int i=0;i<sz(t);++i)\n    {\n        ans[t[i]] = cur + 1;\n        cur = (cur + 1) % k;\n    }\n    for(int i=1;i<=n;++i)\n        cout << ans[i] << \" \";\n    cout <<\"\\n\";\n    return 0;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    #ifdef runSieve\n        sieve();\n    #endif\n    #ifdef NCR\n        initialize();\n    #endif\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n        _runtimeTerror_();\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B1. Wonderful Coloring - 1.json",
    "editorial_link": "https://codeforces.com//blog/entry/93149",
    "editorial": "Letâs calculate the number of letters which occur exactly once in the\r\nstring and letters that occur more than once and , respectively.If a\r\nletter occurs more than once, one of its occurrences may be painted in\r\nred and another one may be painted in green. We cannot paint all other\r\noccurrences because there will be two equal letters painted in one\r\ncolor, but this is unacceptable by the statement. So there are no more\r\nthan occurrences of letters that occur more than once to be painted in\r\nred. Letâs select such occurrences and paint them. We need to paint\r\nadditionally the letters which occur exactly once by meeting the same\r\nconditions as we meet painting the whole string.Thereâs no way to paint\r\nthese letters and not meet the first two conditions. So we must select\r\nthe maximal count of the letters so that we will be able to paint some\r\nset of remaining letters in green so that the number of red letters will\r\nbe equal to the number of green letters. This number is equal to .So the\r\nfinal answer is equal to .\r\n",
    "hint": []
}