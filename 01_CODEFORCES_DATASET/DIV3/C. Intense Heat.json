{
    "link": "https://codeforces.com//contest/1003/problem/C",
    "problemId": "194983",
    "problem_idx": "C",
    "shortId": "1003C",
    "contest_number": "1003",
    "problem_submissions": {
        "E": [
            39924193,
            39917808,
            39923474,
            39917540,
            39932885,
            39926804,
            39919143,
            39925938,
            39924942,
            39926556,
            39916485,
            39925183,
            39923509,
            39920705,
            39924767,
            39925403,
            39927398,
            39926899
        ],
        "F": [
            39919506,
            39935298,
            39943902,
            40106973,
            40297506,
            39953456,
            39925614,
            39922839
        ],
        "C": [
            39912024,
            39905824,
            39904178,
            39906213,
            39904627,
            42751959,
            39907680,
            39905143,
            39911684,
            39902878,
            39905375,
            39904334,
            39906247,
            39910129,
            39910619,
            39907113,
            39906670,
            39906706,
            39905022,
            39908497
        ],
        "B": [
            39905186,
            39902197,
            39901483,
            39902052,
            39901889,
            39904203,
            39903228,
            39903078,
            39906991,
            39902754,
            39902358,
            39904660,
            39907858,
            39906542,
            39904875,
            39903839,
            39904869,
            39907658,
            39906314
        ],
        "D": [
            39904096,
            39911298,
            39910719,
            39910712,
            39908080,
            42751939,
            39912030,
            39914322,
            39908951,
            39910733,
            39921416,
            39908636,
            39908754,
            39914171,
            39914980,
            39914769,
            39914559,
            39912864,
            39917039,
            39913107
        ],
        "A": [
            39900356,
            39897220,
            39898269,
            39897962,
            39896936,
            39904258,
            39898551,
            39897613,
            39900244,
            39896869,
            39897844,
            39899297,
            39896960,
            39897545,
            39899825,
            39897411,
            39897414,
            39897064,
            39897008
        ]
    },
    "name": "C. Intense Heat",
    "statement": "The heat during the last few days has been really intense. Scientists\r\nfrom all over the Berland study how the temperatures and weather change,\r\nand they claim that this summer is abnormally hot. But any scientific\r\nclaim sounds a lot more reasonable if there are some numbers involved,\r\nso they have decided to actually calculate some value which would\r\nrepresent how high the temperatures are.Mathematicians of Berland State\r\nUniversity came up with a special . This value is calculated as\r\nfollows:Suppose we want to analyze the segment of n consecutive days. We\r\nhave measured the temperatures during these n days; the temperature\r\nduring i-th day equals a_i.We denote the of a segment of some\r\nconsecutive days as the arithmetic mean of the temperature measures\r\nduring this segment of days. So, if we want to analyze the from day x to\r\nday y, we calculate it as\r\nfrac{\r\nsum\r\nlimits_{i = x}^{y} a_i}{y - x + 1} (note that division is performed\r\nwithout any rounding). The is the maximum of over all segments of not\r\nless than k consecutive days. For example, if analyzing the measures [3,\r\n4, 1, 2] and k = 3, we are interested in segments [3, 4, 1], [4, 1, 2]\r\nand [3, 4, 1, 2] (we want to find the maximum value of over these\r\nsegments).You have been hired by Berland State University to write a\r\nprogram that would compute the of a given period of days. Are you up to\r\nthis task?\r\n",
    "solutions": [
        "#include \"bits/stdc++.h\"\n#define MAXN 100009\n#define INF 1000000007\n#define mp(x,y) make_pair(x,y)\n#define all(v) v.begin(),v.end()\n#define pb(x) push_back(x)\n#define wr cout<<\"----------------\"<<endl;\n#define ppb() pop_back()\n#define tr(ii,c) for(__typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)\n#define ff first\n#define ss second\n#define my_little_dodge 46\n#define debug(x)  cerr<< #x <<\" = \"<< x<<endl;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int,int> PII;\n\ntemplate<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}\ntemplate<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}\nint n, k;\nint a[MAXN];\nint main()\n{\n    //~ freopen(\"file.in\", \"r\", stdin);\n    scanf(\"%d%d\", &n,&k);\n    for(int i=1;i<=n;i++){\n    \tscanf(\"%d\", a+i);\n    \ta[i]+=a[i-1];\n\t}\n\tdouble ans = 0;\n    for(int i=k;i<=n;i++)\n    \tfor(int j=i;j<=n;j ++){\n    \t\tdouble s = a[j] - a[j-i];\n    \t\ts /= i;\n    \t\tumax(ans, s);\n\t\t}\n    printf(\"%.6lf\\n\",ans);\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "implementation",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Intense Heat.json",
    "editorial_link": "https://codeforces.com/blog/entry/60417",
    "editorial": "This task is very straight-forward implementation problem. So we can\r\niterate over all segments of the given array, calculate their sum, and\r\nif the length of the current segment is not less than , try to update\r\nthe answer with the mean of this segment.Overall complexity is .\r\n",
    "hint": []
}