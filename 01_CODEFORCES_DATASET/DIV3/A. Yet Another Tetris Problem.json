{
    "link": "https://codeforces.com//contest/1324/problem/A",
    "problemId": "560260",
    "problem_idx": "A",
    "shortId": "1324A",
    "contest_number": "1324",
    "problem_submissions": {
        "F": [
            73054270,
            73065556,
            73059176,
            73065084,
            73062305,
            73067024,
            73059856,
            73063932,
            73057486,
            73044832,
            73066147,
            73064314,
            73050991,
            73068503,
            73056693,
            73068743,
            73052567,
            73072067,
            73067317
        ],
        "D": [
            73040639,
            73032866,
            73027867,
            73035134,
            73830730,
            73040900,
            73034199,
            73041603,
            73041893,
            73039400,
            73030102,
            73036508,
            73039182,
            73043928,
            73037342,
            73043874,
            73046595,
            73050863,
            73040463,
            73039200
        ],
        "E": [
            73039379,
            73044039,
            73041492,
            73041070,
            73050415,
            73046726,
            73048264,
            73049396,
            73051216,
            73055090,
            73048254,
            73047762,
            73057013,
            73049889,
            73066804,
            73056073,
            73038769,
            73127806,
            73056264,
            73050880
        ],
        "C": [
            73027564,
            73028513,
            73042083,
            73030836,
            73032053,
            73030173,
            73031129,
            73033349,
            73032347,
            73043701,
            73030001,
            73034619,
            73039260,
            73030506,
            73031218,
            73027677,
            73054056,
            73034579,
            73032723
        ],
        "B": [
            73024859,
            73025917,
            73029672,
            73087132,
            73084344,
            73028176,
            73026383,
            73025561,
            73026159,
            73028367,
            73028047,
            73036513,
            73025105,
            73030025,
            73029700,
            73025213,
            73026085,
            73024555,
            73033601,
            73026846,
            73023952
        ],
        "A": [
            73023467,
            73023622,
            73025341,
            73025903,
            73023578,
            73023714,
            73023863,
            73024673,
            73025477,
            73026756,
            73024229,
            73024181,
            73024019,
            73023479,
            73023850,
            73023303,
            73028896,
            73023916,
            73029846
        ]
    },
    "name": "A. Yet Another Tetris Problem",
    "statement": "You are given some Tetris field consisting of n columns. The initial\r\nheight of the i-th column of the field is a_i blocks. On top of these\r\ncolumns you can place figures of size 2\r\ntimes 1 (i.e. the height of this figure is 2 blocks and the width of\r\nthis figure is 1 block). Note that you rotate these figures.Your task is\r\nto say if you can clear the whole field by placing such figures.More\r\nformally, the problem can be described like this:The following process\r\noccurs while : You place one figure 2\r\ntimes 1 (choose some i from 1 to n and replace a_i with a_i + 2); then,\r\nwhile all a_i are greater than zero, replace each a_i with a_i - 1. And\r\nyour task is to determine if it is possible to clear the whole field\r\n(i.e. finish the described process), choosing the places for new figures\r\nproperly.You have to answer t independent test cases.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n \nusing namespace std;\n \n#define F first\n#define S second\ntypedef long long   ll;\ntypedef long double ld;\ntypedef pair<ll, ll> pll;  \n\nll n;\nvector<ll> m;\n\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; i++) {\n    \tint k;\n    \tcin >> k;\n    \tvector<int> a;\n    \ta.resize(k);\n    \tfor (int j = 0; j < k; j++)\n    \t\tcin >> a[j];\n    \tbool good = true;\n    \tfor (int j = 1; j < k; j++)\n    \t\tif (abs(a[j] - a[0]) % 2)\n    \t\t\tgood = false;\n    \tif (good)\n    \t\tcout << \"YES\" << endl;\n    \telse\n    \t\tcout << \"NO\" << endl;\n    }\n\n\n\n\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "number theory"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Yet Another Tetris Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/74714",
    "editorial": "The answer is \"\" only if all have the same parity (i.e. all are odd or\r\nall are even). Thatâs because placing the block doesnât change the\r\nparity of the element and the operation changes the parity of all\r\nelements in the array.\r\n",
    "hint": []
}