{
    "link": "https://codeforces.com//contest/1360/problem/D",
    "problemId": "629824",
    "problem_idx": "D",
    "shortId": "1360D",
    "contest_number": "1360",
    "problem_submissions": {
        "H": [
            81251920,
            81290028,
            81293330,
            81291112,
            81294740,
            81299062,
            81297186,
            81294484,
            81304607,
            81300361,
            81303070,
            81250599,
            81295409,
            81298287,
            81304237,
            81231948
        ],
        "G": [
            81250908,
            81261609,
            81276322,
            81265591,
            81276387,
            81264433,
            81272613,
            81280948,
            81267380,
            81269754,
            81289390,
            81293762,
            81279290,
            81296348,
            81288695,
            81287798
        ],
        "F": [
            81230412,
            81252303,
            81257057,
            81259404,
            81265576,
            81254763,
            81259977,
            81264927,
            81254624,
            81249372,
            81271302,
            81279300,
            81267710,
            81275581,
            81282413,
            81255521
        ],
        "E": [
            81216064,
            81240455,
            81234957,
            81246045,
            81233772,
            81233068,
            81236233,
            81262156,
            81246598,
            81264349,
            81235887,
            81262591,
            81252163,
            81263497,
            81254477,
            81259978
        ],
        "B": [
            81215775,
            81207436,
            81205722,
            81209946,
            81206365,
            81207859,
            81208440,
            81216311,
            81225212,
            81217601,
            81209275,
            81216781,
            81209546,
            81211074,
            81219408,
            81270897
        ],
        "A": [
            81211901,
            81203807,
            81203057,
            81203650,
            81203478,
            81204406,
            81203639,
            81224692,
            81237119,
            81214495,
            81204306,
            81209285,
            81203552,
            81206909,
            81211432,
            81273150
        ],
        "C": [
            81206744,
            81215880,
            81216577,
            81223025,
            81214552,
            81214398,
            81216644,
            81210331,
            81222555,
            81225820,
            81221447,
            81224269,
            81240900,
            81218199,
            81226927,
            81268532
        ],
        "D": [
            81205489,
            81225350,
            81222950,
            81235831,
            81222076,
            81219822,
            81226333,
            81233523,
            81233797,
            81230395,
            81227841,
            81245779,
            81245445,
            81255431,
            81237048,
            81264054
        ]
    },
    "name": "D. Buying Shovels",
    "statement": "Polycarp wants to buy n shovels. The shop sells packages with shovels.\r\nThe store has k types of packages: the package of the i-th type consists\r\nof exactly i shovels (1\r\nle i\r\nle k). The store has an infinite number of packages of each\r\ntype.Polycarp wants to choose type of packages and then buy several (one\r\nor more) packages of this type. What is the smallest number of packages\r\nPolycarp will have to buy to get exactly n shovels?For example, if n=8\r\nand k=7, then Polycarp will buy 2 packages of 4 shovels.Help Polycarp\r\nfind the minimum number of packages that he needs to buy, given that he:\r\nwill buy exactly n shovels in total; the sizes of packages he will buy\r\nare all the same and the number of shovels in each package is an integer\r\nfrom 1 to k, inclusive.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std ;\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define re register\n#define int long long\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nint n, k ; \nsigned main()\n{\n\tint T = gi() ; \n\twhile( T-- ) {\n\t\tn = gi(), k = gi() ; int ans = n ; \n\t\tfor( re int i = 1; i <= sqrt(n); ++ i ) {\n\t\t\tif( n % i ) continue ; \n\t\t\tif( i <= k ) ans = min( ans, n / i ) ;\n\t\t\tif( ( n / i ) <= k ) ans = min( ans, i ) ;\n\t\t}\n\t\tprintf(\"%lld\\n\", ans ) ;\n\t}\n\treturn 0 ;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Buying Shovels.json",
    "editorial_link": "https://codeforces.com//blog/entry/77846",
    "editorial": "If Polycarp buys packages of shovels and gets exactly shovels in total,\r\nthen , that is, and are divisors of . Then the problem reduces to the\r\nfollowing, you need to find the maximum divisor of the number not\r\ngreater than . To do this, iterate over all the numbers from to\r\ninclusive and check whether is divisible by . If so, then and are both\r\ndivisors of and you can use them to try to improve the answer.\r\n"
}