{
    "link": "https://codeforces.com//contest/1702/problem/E",
    "problemId": "1456430",
    "problem_idx": "E",
    "shortId": "1702E",
    "contest_number": "1702",
    "problem_submissions": {
        "F": [
            163542113,
            163514028,
            163524616,
            163733546,
            163545296,
            163524924,
            163529358,
            163536513,
            163519866,
            163525233,
            163564879,
            163534380,
            163538783,
            163561947,
            163540969,
            163535655,
            163561064,
            163562404,
            163544085,
            163519016
        ],
        "G2": [
            163534991,
            163559407,
            163548172,
            163549996,
            163554176,
            163540379,
            163557182,
            163571429,
            163575000,
            163545502,
            163571447,
            163565952,
            163549470,
            163566226,
            163577860,
            163531079,
            163555250,
            163574346,
            163573572
        ],
        "G1": [
            163534865,
            163559321,
            163548387,
            163550273,
            163555106,
            163540096,
            163557483,
            163571026,
            163549886,
            163545065,
            163540644,
            163566213,
            163549672,
            163557387,
            163546571,
            163531433,
            163554999,
            163574214,
            163573379
        ],
        "E": [
            163505777,
            163504465,
            163513283,
            163513644,
            163510195,
            163546834,
            163520208,
            163505881,
            163516258,
            163517435,
            163526737,
            163516735,
            163506369,
            163532804,
            163528744,
            163567339,
            163567093,
            163519899,
            163524058,
            163508144
        ],
        "D": [
            163487820,
            163493027,
            163495875,
            163501404,
            163498661,
            163506170,
            163499925,
            163492796,
            163488953,
            163500375,
            163495848,
            163492570,
            163483263,
            163496253,
            163491216,
            163495136,
            163508155,
            163491736,
            163485984
        ],
        "C": [
            163479124,
            163482190,
            163488652,
            163621464,
            163492523,
            163493122,
            163498422,
            163492339,
            163483795,
            163482325,
            165952921,
            163494102,
            163486863,
            163484454,
            163478228,
            163483131,
            163484825,
            163489721,
            163494820,
            163481705,
            163480845
        ],
        "B": [
            163471434,
            163474194,
            163479257,
            163481288,
            163480379,
            163488341,
            163485489,
            163475757,
            163474641,
            163485384,
            163491538,
            163474852,
            163473580,
            163475855,
            163477521,
            163484846,
            163484562,
            163474319,
            163475121
        ],
        "A": [
            163468217,
            163469784,
            163473310,
            163468633,
            163472585,
            163470981,
            163470350,
            163469302,
            163470110,
            163473679,
            163468658,
            163468889,
            163468241,
            163490145,
            163470656,
            163480525,
            163486237,
            163468246,
            163469702
        ]
    },
    "name": "E. Split Into Two Sets",
    "statement": "Polycarp was recently given a set of n (number n even) dominoes. Each\r\ndomino contains two integers from 1 to n.Can he divide all the dominoes\r\ninto two sets so that all the numbers on the dominoes of each set are\r\ndifferent? Each domino must go into exactly one of the two sets.For\r\nexample, if he has 4 dominoes:\r\n{1, 4\r\n},\r\n{1, 3\r\n},\r\n{3, 2\r\n} and\r\n{4, 2\r\n}, then Polycarp will be able to divide them into two sets in the\r\nrequired way. The first set can include the first and third dominoes (\r\n{1, 4\r\n} and\r\n{3, 2\r\n}), and the second set the second and fourth ones (\r\n{1, 3\r\n} and\r\n{4, 2\r\n}).\r\n",
    "solutions": [
        "/*\nPlaying Div.3, easy edition\n*/\n#include <bits/stdc++.h>\n#define ll long long\n#define rep(i,m,n) for (auto i=m;i<=n;i++)\n#define reb(i,m,n) for (auto i=m;i>=n;i--)\n#define rv(i,vt) for (auto i:vt)\n#define ii pair<ll,ll>\n#define vi vector<ll>\n#define F first\n#define S second\n#define pb push_back\nusing namespace std;\nconst ll N=1e6+5,mod=1e9+7;\nll n,k,c,a[N],col[N];\nii p[N];\nstring s;\nvector<ll> ke[N];\nbool ok=1;\nvoid dfs (ll u){\n    rv(v,ke[u]) if (!col[v]) col[v]=3-col[u],dfs(v);\n    else if (col[v]==col[u]) ok=0;\n}\nvoid solo()\n{\n    cin>>n;\n    rep(i,1,n) col[i]=a[i]=0,ke[i].clear();\n    ok=1;\n    rep(i,1,n) cin>>p[i].F>>p[i].S,a[p[i].F]++,a[p[i].S]++;\n    rep(i,1,n) if (a[i]!=2 || p[i].F==p[i].S){\n        cout<<\"NO\";\n        return;\n    }\n    rep(i,1,n){\n        ke[p[i].F].pb(p[i].S);\n        ke[p[i].S].pb(p[i].F);\n    }\n    rep(i,1,n) if (!col[i]) col[i]=1,dfs(i);\n    if (ok)\n    cout<<\"YES\";\n    else cout<<\"NO\";\n}\nint main()\n{\n   ios_base::sync_with_stdio(0);\n   cin.tie(0);\n   cout.tie(0);\n   ll ts=1;\n   cin>>ts;\n   while (ts--){\n       solo();\n       cout<<endl;\n   }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Split Into Two Sets.json",
    "editorial_link": "https://codeforces.com//blog/entry/104763",
    "editorial": "Polycarp has dominoes, on each domino there are numbers it turns out,\r\nthere will be numbers in total.We need to divide numbers (each number\r\nfrom to ) into two sets so that all numbers in each set are different\r\neach set will consist of numbers. It turns out that all numbers from to\r\nmust occur exactly times, no more and no less.Let\u00e2\u0080\u0099s imagine it all as a\r\nbipartite graph, where there are vertices from to , and dominoes are\r\nedges. Since each number occurs exactly times, then we have a lot of\r\ncycles. In which the edges of each number must be included in different\r\nsets, in other words, the cycles must be of even length.This can be\r\nchecked in by a simple enumeration.\r\n"
}