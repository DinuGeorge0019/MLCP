{
    "link": "https://codeforces.com//contest/1932/problem/E",
    "problemId": "2483352",
    "problem_idx": "E",
    "shortId": "1932E",
    "contest_number": "1932",
    "problem_submissions": {
        "F": [
            247041710,
            247046104,
            247061921,
            247064848,
            247065969,
            247067691,
            247069162,
            247061542,
            247047981,
            247066270,
            247064434,
            247030399,
            247061453,
            247062334,
            247071817,
            247074345,
            247065688,
            247070314,
            247059158
        ],
        "E": [
            247027158,
            247035724,
            247041508,
            247047392,
            247034566,
            247041281,
            247042901,
            247046269,
            247024107,
            247043959,
            247047309,
            247065699,
            247024211,
            247033451,
            247040047,
            247039052,
            247047772,
            247051378,
            247048000
        ],
        "D": [
            247025048,
            247024422,
            247027652,
            247025385,
            247027600,
            247026819,
            247026306,
            247030155,
            247057812,
            247034591,
            247024028,
            247050558,
            247039827,
            247050562,
            247026148,
            247035436,
            247033238,
            247031618,
            247035376
        ],
        "C": [
            247015841,
            247009093,
            247007805,
            247004912,
            247003665,
            247007946,
            247004168,
            247011243,
            247008047,
            247006061,
            247009525,
            247006826,
            247014290,
            247003444,
            247011933,
            247011062,
            247018803,
            247012040,
            247018641
        ],
        "B": [
            247001265,
            246998420,
            246995287,
            246992797,
            246996723,
            246996283,
            246995886,
            247000182,
            247000282,
            246995830,
            246996405,
            246997168,
            246998810,
            246995354,
            247001435,
            246999756,
            247001109,
            246996459,
            247006888
        ],
        "A": [
            246992414,
            246989927,
            246990007,
            246989302,
            246989500,
            246989572,
            246991281,
            246989684,
            246995787,
            246990634,
            246991174,
            246992575,
            246993925,
            246989365,
            246994593,
            246993034,
            246991641,
            246989247,
            246991878
        ],
        "G": [
            247104441,
            247824611,
            247147433,
            247796255
        ]
    },
    "name": "E. Final Countdown",
    "statement": "You are in a nuclear laboratory that is about to explode and destroy the\r\nEarth. You must save the Earth before the final countdown reaches zero.\r\nThe countdown consists of n (1\r\nle n\r\nle 4\r\ncdot 10^5) mechanical indicators, each showing one decimal digit. You\r\nnoticed that when the countdown changes its state from x to x-1, it\r\ndoesn’t happen in one move. Instead, each change of a single digit takes\r\none second. So, for example, if the countdown shows , then it will\r\nchange to in one second, because only one digit is changed, but if the\r\ncountdown shows , then it will change to in three seconds, because the\r\nthree last digits are changed.Find out how much time is left before the\r\ncountdown reaches zero.\r\n",
    "solutions": [
        "#include <iostream>\n\n#define endl '\\n'\n\nusing namespace std;\n\nconst int MAXN = 4e5+100;\n\nint t, n;\nstring s;\nint b[MAXN+10];\n\nint main(){\n\tios::sync_with_stdio(0);cin.tie(0);\n\n\tcin >> t;\n\n\twhile(t--){\n\t\tcin >> n >> s;\n\n\t\tint sm = 0;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tsm += (s[i] - '0');\n\t\t\tb[i+10] = sm;\n\t\t}\n\n\t\tfor(int i=n+9; i>=1; i--){\n\t\t\tb[i-1] += b[i]/10;\n\t\t\tb[i] %= 10;\n\t\t}\n\t\t\t\n\t\t\t\n\t\tbool flg = false;\n\t\tfor(int i=0; i<n+10; i++){\n\t\t\tif(b[i] != 0) flg = true;\n\n\t\t\tif(flg) cout << b[i];\n\t\t}\n\t\tcout << endl;\n\n\n\t\tfor(int i=0; i<n+10; i++)\n\t\t\tb[i] = 0;\n\t}\n\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Final Countdown.json",
    "editorial_link": "https://codeforces.com//blog/entry/126196",
    "editorial": "Letâs assume that the number is initially displayed on the countdown.\r\nLetâs see how many times each of the indicators will switch. Indicator\r\nnumber (if we number the indicators from right to left, starting with 0)\r\nwill switch exactly times. Thus, the answer is equal to .To calculate\r\nthis sum, letâs split the number into individual digits and add their\r\ncontributions. Let the digits of the number be . The contribution of the\r\ndigit to the final sum is . Thus, the answer is equal to . Changing the\r\norder of summation, we get .To calculate this sum, we need to\r\npre-calculate the suffix sums (this can be done in linear time), and\r\nthen add each of the sums to the corresponding decimal digit of the\r\nfinal number, carrying over to the higher digits (this can also be done\r\nin linear time).\r\n",
    "hint": []
}