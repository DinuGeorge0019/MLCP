{
    "link": "https://codeforces.com//contest/977/problem/B",
    "problemId": "181253",
    "problem_idx": "B",
    "shortId": "977B",
    "contest_number": "977",
    "problem_submissions": {
        "F": [
            37953040,
            37954853,
            37956923,
            37956444,
            37956668,
            37955836,
            37936561,
            37948514,
            37950875,
            37954682,
            37954155,
            37963825,
            37947599,
            37954392,
            37949871,
            37951784,
            37954414,
            37960538,
            37955846,
            37949841
        ],
        "E": [
            37949370,
            37951257,
            37951081,
            37951485,
            37948712,
            37951230,
            37942528,
            37944878,
            37947562,
            38096112,
            37946372,
            37950654,
            37948745,
            37952883,
            37949399,
            37959345,
            37958962,
            37949557,
            38007916,
            37947057,
            37944768,
            37952160,
            37971056,
            37970300,
            37954498
        ],
        "D": [
            37945678,
            37944291,
            37945496,
            37944981,
            37944238,
            37945846,
            37945470,
            37942551,
            37956640,
            37950668,
            37945626,
            37943157,
            37942510,
            37940098,
            37964266,
            37963856,
            37963743,
            37943936,
            37943935,
            37953517,
            37949143,
            37938125
        ],
        "C": [
            37939418,
            37938533,
            37938833,
            37938453,
            37937230,
            37937332,
            37943206,
            37937093,
            37939874,
            37940598,
            37939826,
            37936805,
            37937760,
            37936881,
            37937722,
            37945760,
            37936821,
            37939453,
            37939008,
            37934533
        ],
        "B": [
            37934918,
            37934879,
            37935006,
            37934743,
            37934120,
            37933912,
            37939150,
            37934910,
            37935223,
            37935851,
            37937416,
            37932759,
            37932271,
            37935451,
            37935231,
            37937590,
            37933409,
            37934080,
            37933977,
            37934387
        ],
        "A": [
            37931506,
            37934128,
            37931332,
            37932430,
            37932516,
            37931234,
            37933447,
            37932411,
            37934760,
            37932666,
            37934427,
            37931097,
            37932757,
            37931225,
            37931938,
            37935268,
            37931464,
            37934315,
            37931090,
            37931415
        ]
    },
    "name": "B. Two-gram",
    "statement": "Two-gram is an ordered pair (i.e. string of length two) of capital Latin\r\nletters. For example, \"\", \"\", \"\" three distinct two-grams.You are given\r\na string s consisting of n capital Latin letters. Your task is to find\r\ntwo-gram contained in the given string (i.e. two consecutive characters\r\nof the string) maximal number of times. For example, for string s = \"\"\r\nthe answer is two-gram \"\", which contained in s three times. In other\r\nwords, find any most frequent two-gram.Note that occurrences of the\r\ntwo-gram can overlap with each other.\r\n",
    "solutions": [
        "/*input\n5\nZZZAA\n\n*/\n#include <bits/stdc++.h>\n#define ll long long\n#define db(a) cerr<<#a<<\" = \"<<a<<'\\n'\nusing namespace std;\n\nint main(){\n\tmap<pair<char, char>, int> m;\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\n\tfor(int i=0; i<n-1; i++){\n\t\tm[ make_pair(s[i], s[i+1]) ]++;\n\t}\n\n\tint mx = 0;\n\tpair<char, char> b;\n\n\tfor(auto i : m){\n\t\tif(i.second > mx){\n\t\t\tmx = i.second;\n\t\t\tb = i.first;\n\t\t}\n\t}\n\n\tcout << b.first<<b.second << endl;\n}\n\t"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Two-gram.json",
    "editorial_link": "https://codeforces.com//blog/entry/59281",
    "editorial": "There are at least two different approaches to this problem:You can\r\niterate over all substrings of of length and calculate for each of them\r\nthe number of its occurrences in (and try to update the result with the\r\ncurrent substring).Also you can iterate over all two-grams in the\r\nalphabet and do the same as in the aforementioned solution.\r\n",
    "hint": []
}