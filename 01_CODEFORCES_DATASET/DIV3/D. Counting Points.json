{
    "link": "https://codeforces.com//contest/2074/problem/D",
    "problemId": "3258843",
    "problem_idx": "D",
    "shortId": "2074D",
    "contest_number": "2074",
    "problem_submissions": {
        "G": [
            310132242,
            310132793,
            310111376,
            310125781,
            310197618,
            310146608,
            312938343,
            310315994,
            310128989
        ],
        "F": [
            310098470,
            310107235,
            310132603,
            310144290,
            310142350,
            310095240,
            310088922,
            310104486,
            310111882,
            310114360,
            310055545,
            310114532,
            310087064,
            310071130,
            310070363,
            310121029,
            310125190,
            310260930
        ],
        "E": [
            310064080,
            310090608,
            310082677,
            310187214,
            310134023,
            310030414,
            310069610,
            310080288,
            310088548,
            310077001,
            310137549,
            310085816,
            310080720,
            310101939,
            310119390,
            310098102,
            310080639,
            310067165
        ],
        "D": [
            310047067,
            310080743,
            310088823,
            310333806,
            310109105,
            310020176,
            322969380,
            310038637,
            310047803,
            310058834,
            310047053,
            310029205,
            310058830,
            316604351,
            316604194,
            310015658,
            310029425,
            310034360,
            310056377,
            310044018,
            310037025
        ],
        "C": [
            310035807,
            310055765,
            310043440,
            310186815,
            310075269,
            310008768,
            310020745,
            310018683,
            310030298,
            310025444,
            310031238,
            310017984,
            310032803,
            316602404,
            310098070,
            310093063,
            310019759,
            310037963,
            310019264,
            310027779,
            310011693
        ],
        "B": [
            309999438,
            310009990,
            310009090,
            310185181,
            310027758,
            309994239,
            309999685,
            310010932,
            309995321,
            310001699,
            310004547,
            310000352,
            316602154,
            309997891,
            310006026,
            309998747,
            310004146,
            309998590,
            310001033
        ],
        "A": [
            309992369,
            309993663,
            310000316,
            309993456,
            309989823,
            309991387,
            309991527,
            309990219,
            309997446,
            309999713,
            309990178,
            316601575,
            309993103,
            309994717,
            309990137,
            309990642,
            309990073,
            309992095
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/140540",
    "editorial": "For some value of and a circle centered on with radius , we can find the\r\nrange of where the points lie on using simple algebra.Here, we can see\r\nthat when , there are different integer values of in this range.Now,\r\nthink of how to deal with when multiple circles cover the same value of\r\n. This is not too hard; you can compute the value of for all of them and\r\ntake the largest one. The rest can be ignored as the largest value of\r\ncovers all of them.The implementation is not hard; it simply boils down\r\nto using a or some data structure to record the maximum value of for\r\neach value of that holds at least one point. The problem is solved in\r\ntime complexity .It is possible to solve the problem by fixing the value\r\nof instead of the value of , but it is significantly more tedious to\r\nimplement.\r\n",
    "name": "D. Counting Points",
    "statement": "The pink soldiers drew n circles with their center of the plane. Also,\r\nthey have told that ^{\r\ntext{ }}.Please find the number of integer points at least one circle.\r\nFormally, the problem is defined as follows.You are given an integer\r\nsequence x_1,x_2,\r\nldots,x_n and a positive integer sequence r_1,r_2,\r\nldots,r_n, where it is known that\r\nsum_{i=1}^n r_i = m.You must count the number of integer pairs (x,y)\r\nthat satisfy the following condition. There exists an index i such that\r\n(x-x_i)^2 + y^2\r\nle r_i^2 (1\r\nle i\r\nle n). ^{\r\ntext{ }}Is this information really useful? Don’t ask me; I don’t really\r\nknow.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "geometry",
        "implementation",
        "two pointers"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Counting Points.json",
    "hint": []
}