{
    "link": "https://codeforces.com//contest/1551/problem/A",
    "problemId": "1055219",
    "problem_idx": "A",
    "shortId": "1551A",
    "contest_number": "1551",
    "problem_submissions": {
        "D2": [
            123504570,
            123491119,
            123485402,
            123508709,
            123487387,
            123490299,
            123498497,
            123519517,
            123503570,
            123507308,
            123506328,
            123496338,
            123525324,
            123509854,
            123500000,
            123499688,
            123500681,
            123520243,
            123521810,
            123560543,
            123489816
        ],
        "D1": [
            123496540,
            123479404,
            123460900,
            123501007,
            123476769,
            123477339,
            123486676,
            123509110,
            123490131,
            123493249,
            123493173,
            123482125,
            123490880,
            123500902,
            123489510,
            123491442,
            123487788,
            123505201,
            123513198,
            123560527,
            123477927
        ],
        "E": [
            123487760,
            123503517,
            123508061,
            123512161,
            123512376,
            123522062,
            123512340,
            123494473,
            123520187,
            123519199,
            123522642,
            123508385,
            123509676,
            123525566,
            123522562,
            123529567,
            123525043,
            123524224,
            123527690,
            123529206
        ],
        "F": [
            123483346,
            123518773,
            123505149,
            123522554,
            123530029,
            123525813,
            123677834
        ],
        "C": [
            123463062,
            123471764,
            123465961,
            123494616,
            123466015,
            123470689,
            123479667,
            123473982,
            123478387,
            123473235,
            123485341,
            123504214,
            123476344,
            123474463,
            123482794,
            123487070,
            123509871,
            123495332,
            123505971,
            123560511,
            123471519
        ],
        "B1": [
            123458055,
            123450157,
            123447323,
            123480992,
            123471662,
            123459271,
            123448891,
            123453516,
            123457018,
            123473105,
            123465306,
            123457521,
            123473064,
            123450150,
            123457907,
            123454507,
            123450845,
            123454392,
            123459478,
            123486711,
            123560483,
            123451550
        ],
        "B2": [
            123455203,
            123463888,
            123460727,
            123523874,
            123456743,
            123463349,
            123471479,
            123467608,
            123467523,
            123462292,
            123471295,
            123468067,
            123463785,
            123466840,
            123469959,
            123475307,
            123473651,
            123478743,
            123500344,
            123560494,
            123462370
        ],
        "A": [
            123443367,
            123443254,
            123447159,
            123446121,
            123445546,
            123443509,
            123444177,
            123443572,
            123444116,
            123444163,
            123445991,
            123474697,
            123444077,
            123443229,
            123447862,
            123443364,
            123443226,
            123449045,
            123446138,
            123560465,
            123443541
        ]
    },
    "name": "A. Polycarp and Coins",
    "statement": "Polycarp must pay n burles at the checkout. He has coins of two nominal\r\nvalues: 1 burle and 2 burles. Polycarp likes both kinds of coins\r\nequally. So he doesn’t want to pay with more coins of one type than with\r\nthe other.Thus, Polycarp wants to minimize the difference between the\r\ncount of coins of 1 burle and 2 burles being used. Help him by\r\ndetermining two non-negative integer values c_1 and c_2 which are the\r\nnumber of coins of 1 burle and 2 burles, respectively, so that the total\r\nvalue of that number of coins is n (i. e. c_1 + 2\r\ncdot c_2 = n), and the absolute value of the difference between c_1 and\r\nc_2 is as little as possible (i. e. you must minimize |c_1-c_2|).\r\n",
    "solutions": [
        "// Har Har Mahadev\n#include<bits/stdc++.h>\nusing namespace std ;\n\n#define ll              long long \n#define pb              push_back\n#define all(v)          v.begin(),v.end()\n#define sz(a)           (ll)a.size()\n#define F               first\n#define S               second\n#define INF             2000000000000000000\n#define popcount(x)     __builtin_popcountll(x)\n#define pll             pair<ll,ll>\n#define pii             pair<int,int>\n#define ld              long double\n\nconst int M = 1000000007;\nconst int MM = 998244353;\n\ntemplate<typename T, typename U> static inline void amin(T &x, U y){ if(y<x) x=y; }\ntemplate<typename T, typename U> static inline void amax(T &x, U y){ if(x<y) x=y; }\n\n#ifdef LOCAL\n#define debug(...) debug_out(#__VA_ARGS__, __VA_ARGS__)\n#else\n#define debug(...) 2351\n#endif\n\n\nint _runtimeTerror_()\n{\n    int n;\n    cin >> n;\n    if(n % 3 == 0)\n        cout << n/3 << \" \" << n/3 << \"\\n\";\n    else if(n % 3 == 1)\n        cout << (n / 3 + 1) << \" \" << n/3 << \"\\n\";\n    else\n        cout << (n/3) << \" \" << n / 3 + 1 << \"\\n\";\n    return 0;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    #ifdef runSieve\n        sieve();\n    #endif\n    #ifdef NCR\n        initialize();\n    #endif\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n        _runtimeTerror_();\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Polycarp and Coins.json",
    "editorial_link": "https://codeforces.com//blog/entry/93149",
    "editorial": "Letâs initialize variables and by the same value of . Then we need to\r\ngather additionally the remainder of dividing by .If the remainder is\r\nequal to , we donât need to gather anything else because the variables\r\nand have been already set to the correct answer: because and no absolute\r\nvalue can be less than . Otherwise, because and in this case, but thatâs\r\nimpossible if isnât divisible by 3.If the remainder is equal to , then\r\nwe need to gather additionally burle using one coin of burle so letâs\r\nincrease by . In this case, , hence , this value cannot be less than ,\r\nas it was proved above.If the remainder is equal to , then we need to\r\ngather additionally burles using one coin of burles so letâs increase by\r\n. In this case, , hence , this value cannot be less than .There are no\r\nother remainders of dividing by so these cases cover the whole solution.\r\n",
    "hint": []
}