{
    "link": "https://codeforces.com//contest/978/problem/E",
    "problemId": "182880",
    "problem_idx": "E",
    "shortId": "978E",
    "contest_number": "978",
    "problem_submissions": {
        "G": [
            38172491,
            38169204,
            38172434,
            38174884,
            38174212,
            38202570,
            38174356,
            38174504,
            38170439,
            38179076,
            38174120,
            38175016,
            38177179,
            38173974,
            38173883,
            38177077,
            38179217,
            38177915,
            38175210
        ],
        "F": [
            38167756,
            38167382,
            38169838,
            38171846,
            38171022,
            38202583,
            38171851,
            38172094,
            38166947,
            38172200,
            38170297,
            38172407,
            38173744,
            38170844,
            38171837,
            38173600,
            38173445,
            38173729,
            38171096,
            38172672
        ],
        "E": [
            38166000,
            38165982,
            38167458,
            38167818,
            38167975,
            38202586,
            38169135,
            38168502,
            38165451,
            38168025,
            38168912,
            38170344,
            38169652,
            38168636,
            38170345,
            38170564,
            38171323,
            38171232,
            38166984
        ],
        "D": [
            38164294,
            38164281,
            38166043,
            38165411,
            38166520,
            38202587,
            38166943,
            38167185,
            38174671,
            38184115,
            38165897,
            38167133,
            38167961,
            38167926,
            38167171,
            38168834,
            38168604,
            38168704,
            38168070,
            38165126
        ],
        "C": [
            38162269,
            38159839,
            38162952,
            38162443,
            38163682,
            38202588,
            38163454,
            38163549,
            38164049,
            38162683,
            38163806,
            38164073,
            38165403,
            38165313,
            38165695,
            38165203,
            38164723,
            38162539,
            38162894
        ],
        "B": [
            38160472,
            38157775,
            38159643,
            38159599,
            38161723,
            38159684,
            38162382,
            38159493,
            38159452,
            38160053,
            38159583,
            38160909,
            38164410,
            38160958,
            38160311,
            38159735,
            38160488
        ],
        "A": [
            38158198,
            38157375,
            38157656,
            38157773,
            38158120,
            38202594,
            38157741,
            38157702,
            38160301,
            38157750,
            38158544,
            38157695,
            38157893,
            38159292,
            38163521,
            38158147,
            38158142,
            38157847,
            38158925
        ]
    },
    "name": "E. Bus Video System",
    "statement": "The busses in Berland are equipped with a video surveillance system. The\r\nsystem records information about changes in the number of passengers in\r\na bus after stops.If x is the number of passengers in a bus just before\r\nthe current bus stop and y is the number of passengers in the bus just\r\nafter current bus stop, the system records the number y-x. So the system\r\nrecords show how number of passengers changed.The test run was made for\r\nsingle bus and n bus stops. Thus, the system recorded the sequence of\r\nintegers a_1, a_2,\r\ndots, a_n (exactly one number for each bus stop), where a_i is the\r\nrecord for the bus stop i. The bus stops are numbered from 1 to n in\r\nchronological order.Determine the number of possible ways how many\r\npeople could be in the bus before the first bus stop, if the bus has a\r\ncapacity equals to w (that is, at any time in the bus there should be\r\nfrom 0 to w passengers inclusive).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define DIM 1007\nusing namespace std;\n\nlong long n,w,a[DIM],mx,curr,mn;\n\nint main()\n{\n    cin>>n>>w;\n    for(int i = 1; i<=n;++i)\n    {\n        cin>>a[i];\n        curr+=a[i];\n        mx = max(mx,curr);\n        mn = min(mn,curr);\n    }\n\n    long long first = -mn;\n    long long last = w - mx;\n\n    if(first > last) cout<<0;\n    else cout<<last -first+1;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Bus Video System.json",
    "editorial_link": "https://codeforces.com/blog/entry/59430",
    "editorial": "Firstly we should find the minimum and maximum numbers of passengers,\r\nwhich could be in a bus if initially it was empty. Let . We should\r\niterate through the bus stops. For the -th bus stop, we add to and\r\nupdate with a value of the minimum number of passengers and the maximum\r\nnumber of passengers . If , it is an invalid case and we should print ,\r\nbecause the maximum number of passengers should be less or equal to .Let\r\nis a minimum possible number of passengers in the bus before the first\r\nstop and maximum possible.If then in the bus initially were at least\r\npassengers. Because we should make , else, .If , then , else, .After\r\nthat we should compare and . If print . In the other case, print ,\r\nbecause each of those values is correct.\r\n"
}