{"link": "https://codeforces.com//contest/1857/problem/E", "problemId": "2150546", "problem_idx": "E", "shortId": "1857E", "contest_number": "1857", "problem_submissions": {"G": [217667474, 217665550, 217689340, 217662818, 217685310, 217676468, 217687922, 217701057, 217700197, 217807896, 217807827, 217712091, 217684113, 217720675, 217807627, 217677400, 217731532, 217711676, 217719652, 217714022, 217712604, 217718357, 217710888], "F": [217659021, 217648989, 217664891, 217627744, 217669247, 217691937, 217689514, 217664113, 217674769, 217680535, 217666261, 217699208, 217671748, 217807538, 217701131, 217674808, 217679890, 217683947, 217696220, 217689116, 217681500, 217688375], "B": [217642867, 217642809, 217629703, 217685667, 217635907, 217630271, 217642640, 217631148, 217634501, 217636716, 217631884, 217632923, 217807034, 217775927, 217633962, 217640699, 217644829, 217637634, 217632935, 217633927, 217650168, 217644229], "D": [217638870, 217638947, 217636496, 217634474, 217647504, 217644974, 217647862, 217645462, 217646166, 217647061, 217646308, 217648033, 217807098, 217775952, 217684716, 217643681, 217658546, 217653658, 217651018, 217652036, 217655292, 217662419], "E": [217634664, 217632006, 217641596, 217642974, 217661622, 217655519, 217656154, 217657341, 217663115, 217656176, 217655704, 217660327, 217807112, 217775966, 217649059, 217656810, 217665253, 217663579, 217661514, 217671790, 217665209, 217669853], "C": [217623043, 217660653, 217633113, 217671603, 217641405, 217641348, 217633280, 217640705, 217639467, 217642154, 217639690, 217640983, 217807070, 217775937, 217639411, 217632787, 217649913, 217647923, 217645015, 217643972, 217637879, 217653046], "A": [217621356, 217622367, 217617259, 217636401, 217628184, 217620735, 217618278, 217621503, 217622297, 217628772, 217620627, 217617547, 217806999, 217775914, 217772364, 217772351, 217620412, 217618442, 217617205, 217621216, 217619220, 217624745, 217618215, 217619189]}, "name": "E. Power of Points", "statement": "You are given n points with integer coordinates x_1,\r\ndots x_n, which lie on a number line.For some integer s, we construct\r\nsegments [s,x_1], [s,x_2],\r\ndots, [s,x_n]. Note that if x_i<s, then the segment will look like\r\n[x_i,s]. The segment [a, b] covers all integer points a, a+1, a+2,\r\ndots, b.We define the of a point p as the number of segments that\r\nintersect the point with coordinate p, denoted as f_p.Your task is to\r\ncompute\r\nsum\r\nlimits_{p=1}^{10^9}f_p for each s\r\nin\r\n{x_1,\r\ndots,x_n\r\n}, i.e., the sum of f_p for all integer points from 1 to 10^9.For\r\nexample, if the initial coordinates are [1,2,5,7,1] and we choose s=5,\r\nthen the segments will be: [1,5],[2,5],[5,5],[5,7],[1,5]. And the powers\r\nof the points will be: f_1=2, f_2=3, f_3=3, f_4=3, f_5=5, f_6=1, f_7=1,\r\nf_8=0,\r\ndots, f_{10^9}=0. Their sum is 2+3+3+3+5+1+1=18.\r\n", "solutions": ["#define _USE_MATH_DEFINES\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<numeric>\n#include<cmath>\n#include<fstream>\n#include<random>\n#include<set>\n#include<unordered_set>\n#include<string>\n#include<map>\n#include<unordered_map>\n#include<queue>\n#include<stack>\n#include<fstream>\n#include<time.h>\n\nusing namespace std;\n\n#define all(a) a.begin(), a.end()\n#define Max(a) *max_element(all(a))\n#define Min(a) *min_element(all(a))\n\nusing ll = long long;\nusing ld = long double;\n\n#define int long long\n\nvoid solve() {\n    int n;\n    cin >> n;\n    vector<pair<int,int>> a(n);\n    vector<int> ans(n);\n    for (int i = 0; i < n; ++i) {\n        cin >> a[i].first;\n        a[i].second = i;\n    }\n    sort(a.begin(), a.end());\n    int cur = 0;\n    for (int i = 0; i < n; ++i) {\n        cur += a[i].first - a[0].first + 1;\n    }\n    ans[a[0].second] = cur;\n    for (int i = 1; i < n; ++i) {\n        cur += i * (a[i].first - a[i - 1].first);\n        cur -= (n - i) * (a[i].first - a[i - 1].first);\n        ans[a[i].second] = cur;\n    }\n    for (int i = 0; i < n; ++i) cout << ans[i] << ' ';\n    cout << '\\n';\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cout.precision(40);\n\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n\n}"], "input": "", "output": "", "tags": ["math", "sortings"], "dificulty": "1500", "interactive": false}