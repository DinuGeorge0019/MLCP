{
    "link": "https://codeforces.com//contest/1931/problem/A",
    "problemId": "2475289",
    "problem_idx": "A",
    "shortId": "1931A",
    "contest_number": "1931",
    "problem_submissions": {
        "F": [
            246296614,
            246179146,
            246170709,
            246427101,
            246168970,
            246184751,
            246142511,
            246197019,
            246158218,
            246183570,
            246192932,
            246194240,
            246199021,
            246174982,
            246201540,
            246206249,
            246216038,
            246222369,
            246240052,
            246211567,
            246197899,
            246223747
        ],
        "G": [
            246224407,
            246211674,
            246427115,
            246216950,
            246178382,
            246228243,
            246242246,
            246253076,
            246240374,
            246248007,
            246244943,
            246744089,
            246744073,
            246239134,
            246236944,
            246245770,
            246244778,
            246254011,
            246234171,
            246248699,
            246240032,
            246253831
        ],
        "E": [
            246145017,
            246150097,
            246427087,
            246155582,
            246195821,
            246176212,
            246149318,
            246169708,
            246178779,
            246172407,
            246188216,
            246161369,
            246185423,
            246181694,
            246183495,
            246193379,
            246171079,
            246199408,
            246183302,
            246209824
        ],
        "D": [
            246131952,
            246140825,
            246427074,
            246138649,
            246151523,
            246177165,
            246158520,
            246213160,
            246149697,
            246155814,
            246156229,
            246153154,
            246212032,
            246171283,
            246159489,
            246157679,
            246169805,
            246152904,
            246183153,
            246222515,
            246168860
        ],
        "C": [
            246118618,
            246131841,
            246427065,
            246129262,
            246123759,
            246146869,
            246133651,
            246123342,
            246138388,
            246137410,
            246146418,
            246146559,
            246141259,
            246136926,
            246145784,
            246141739,
            246129334,
            246133557,
            246144848,
            246141577,
            246142975
        ],
        "B": [
            246116325,
            246124823,
            246427047,
            246120211,
            246135267,
            246122553,
            246118446,
            246120092,
            246126650,
            246128147,
            246123393,
            246121355,
            246123132,
            246132595,
            246128338,
            246121578,
            246122252,
            246127915,
            246132875,
            246130521
        ],
        "A": [
            246114920,
            246119306,
            246427041,
            246116261,
            246126876,
            246117989,
            246115257,
            246116831,
            246118165,
            246120823,
            246116864,
            246121057,
            246117063,
            246121282,
            246122222,
            246117088,
            246116504,
            246117727,
            246121061,
            246119450
        ]
    },
    "name": "A. Recovering a Small String",
    "statement": "Nikita had a word consisting of exactly 3 lowercase Latin letters. The\r\nletters in the Latin alphabet are numbered from 1 to 26, where the\r\nletter \"\" has the index 1, and the letter \"\" has the index 26.He encoded\r\nthis word as the sum of the positions of all the characters in the\r\nalphabet. For example, the word \"\" he would encode as the integer 3 +\r\n1 + 20 = 24, because the letter \"\" has the index 3 in the alphabet, the\r\nletter \"\" has the index 1, and the letter \"\" has the index 20.However,\r\nthis encoding turned out to be ambiguous! For example, when encoding the\r\nword \"\", the integer 1 + 22 + 1 = 24 is also obtained.Determine the\r\nlexicographically smallest word of 3 letters that could have been\r\nencoded.A string a is lexicographically smaller than a string b if and\r\nonly if one of the following holds: a is a prefix of b, but a\r\nne b; in the first position where a and b differ, the string a has a\r\nletter that appears earlier in the alphabet than the corresponding\r\nletter in b.\r\n",
    "solutions": [
        "// Problem: A. Recovering a Small String\n// Contest: Codeforces - Codeforces Round 925 (Div. 3)\n// URL: https://codeforces.com/contest/1931/problem/0\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\n#define all(s) s.begin(), s.end()\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\n\nconst int _N = 1e5 + 5;\n\nint T;\n\nvoid solve() {\n\tint n; cin >> n;\n\tfor (int i = 1; i <= 26; i++) {\n\t\tfor (int j = 1; j <= 26; j++) {\n\t\t\tfor (int k = 1; k <= 26; k++) {\n\t\t\t\tif (i + j + k == n) {\n\t\t\t\t\tstring s;\n\t\t\t\t\ts.push_back(i + 'a' - 1);\n\t\t\t\t\ts.push_back(j + 'a' - 1);\n\t\t\t\t\ts.push_back(k + 'a' - 1);\n\t\t\t\t\tcout << s << '\\n';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nint main() {\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> T;\n\twhile (T--) {\n\t\tsolve();\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Recovering a Small String.json",
    "editorial_link": "https://codeforces.com//blog/entry/125878",
    "editorial": "The problem can be solved by simply going through all the letter\r\ncombinations and searching for the lexicographically minimal one among\r\nthem.It is also possible to consider a string consisting of three\r\nletters \"a\", and, going through it from the end until the value of is\r\ngreater than zero, increase the letters to the maximum possible value\r\nand subtract the corresponding difference from .\r\n"
}