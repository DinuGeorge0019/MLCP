{
    "link": "https://codeforces.com//contest/1833/problem/B",
    "problemId": "1929815",
    "problem_idx": "B",
    "shortId": "1833B",
    "contest_number": "1833",
    "problem_submissions": {
        "F": [
            206599548,
            206499044,
            206510645,
            206497958,
            206917535,
            206498356,
            206512969,
            206501833,
            206507754,
            206504303,
            206775083,
            206513772,
            206514120,
            206515332,
            206518320,
            206514205,
            206521502,
            206515630,
            206524274,
            206520741,
            206520948,
            206526178,
            206521131
        ],
        "G": [
            206512331,
            206521465,
            206506545,
            206477170,
            206519573,
            206523410,
            206530322,
            206518526,
            206777759,
            206531078,
            206532207,
            206527389,
            206532553,
            206535240,
            206530738,
            206539901,
            206510414,
            206533541,
            209018213,
            206536054,
            206538842,
            206866462,
            206539276
        ],
        "E": [
            206494444,
            206500619,
            206508800,
            206912480,
            206752261,
            206508820,
            206500946,
            206513913,
            206499318,
            206515052,
            206776677,
            206501077,
            206501029,
            206508081,
            206504803,
            206505276,
            206514758,
            206507981,
            206532142,
            206514436,
            206505945,
            206510447,
            206508190
        ],
        "D": [
            206478490,
            206489393,
            206482509,
            206516497,
            206493139,
            206494430,
            206493405,
            206772261,
            206483249,
            206490999,
            206496792,
            206494490,
            206495499,
            206492096,
            206495671,
            206562276,
            206493504,
            206494409,
            206497119,
            206489160,
            206496422
        ],
        "C": [
            206468900,
            206472444,
            206487689,
            206481281,
            206470369,
            206469924,
            206472556,
            206474926,
            206470601,
            206467341,
            206478011,
            206475881,
            206470693,
            206472518,
            206472870,
            206562261,
            206473668,
            206473209,
            206471774,
            206472820,
            206477277
        ],
        "B": [
            206461337,
            206465386,
            206481088,
            206469699,
            206465480,
            206464242,
            206462159,
            206470246,
            206468314,
            206462993,
            206468820,
            206467031,
            206466013,
            206465802,
            206464804,
            206466201,
            206465451,
            206463520,
            206466366,
            206465332
        ],
        "A": [
            206458073,
            206459090,
            206464738,
            206461735,
            206459482,
            206458188,
            206458127,
            206458669,
            206459064,
            206459476,
            206460428,
            206459198,
            206458554,
            206458909,
            206458986,
            206459453,
            206458429,
            206458492,
            206458602
        ]
    },
    "name": "B. Restore the Weather",
    "statement": "You are given an array a containing the weather forecast for Berlandia\r\nfor the last n days. That is, a_i is the estimated air temperature on\r\nday i (1\r\nle i\r\nle n).You are also given an array b the air temperature that was\r\nactually present on each of the days. However, all the values in array b\r\nare mixed up. Determine which day was which temperature, if you know\r\nthat the weather never differs from the forecast by more than k degrees.\r\nIn other words, if on day i the real air temperature was c, then the\r\nequality |a_i - c|\r\nle k is always true.For example, let an array a = [1, 3, 5, 3, 9] of\r\nlength n = 5 and k = 2 be given and an array b = [2, 5, 11, 2, 4]. Then,\r\nso that the value of b_i corresponds to the air temperature on day i, we\r\ncan rearrange the elements of the array b so: [2, 2, 5, 4, 11]. Indeed:\r\nOn the 1st day, |a_1 - b_1| = |1 - 2| = 1, 1\r\nle 2 = k is satisfied; On the 2nd day |a_2 - b_2| = |3 - 2| = 1, 1\r\nle 2 = k is satisfied; On the 3rd day, |a_3 - b_3| = |5 - 5| = 0, 0\r\nle 2 = k is satisfied; On the 4th day, |a_4 - b_4| = |3 - 4| = 1, 1\r\nle 2 = k is satisfied; On the 5th day, |a_5 - b_5| = |9 - 11| = 2, 2\r\nle 2 = k is satisfied.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n, k;\n    std::cin >> n >> k;\n    std::vector<int> a(n), b(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> a[i];\n    }\n    for (int i = 0; i < n; i++) {\n        std::cin >> b[i];\n    }\n    std::vector<std::pair<int, int>> p(n);\n    for (int i = 0; i < n; i++) {\n        p[i] = {a[i], i};\n    }\n    std::sort(p.begin(), p.end());\n    std::sort(b.begin(), b.end());\n    std::vector<int> res(n);\n    for (int i = 0; i < n; i++) {\n        res[p[i].second] = b[i];\n    }\n    for (auto x : res) {\n        std::cout << x << \" \";\n    }\n    std::cout << \"\\n\";\n}\n\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n \n    int t = 1;\n    std::cin >> t;\n \n    while (t--) {\n        solve();\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Restore the Weather.json",
    "editorial_link": "https://codeforces.com//blog/entry/116636",
    "editorial": "Letâs solve the problem using a greedy algorithm. Based on the array ,\r\nform an array of pairs {temperature, day number} and sort it in\r\nascending order of temperature. Also sort the array in ascending order.\r\nNow, the values and are the predicted and real temperature on day\r\n.Indeed, consider the minimum temperatures and . The difference between\r\nthem is . If we consider the value or at , there will be at least since\r\nand . Since it is guaranteed that it is possible to rearrange the\r\nelements in the array , and the elements and have the smallest\r\ndifference, it is definitely not greater than .\r\n",
    "hint": []
}