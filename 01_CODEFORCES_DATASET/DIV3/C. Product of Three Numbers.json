{
    "link": "https://codeforces.com//contest/1294/problem/C",
    "problemId": "521709",
    "problem_idx": "C",
    "shortId": "1294C",
    "contest_number": "1294",
    "problem_submissions": {
        "F": [
            69345723,
            69341742,
            69353873,
            69354168,
            69362489,
            69359650,
            69346353,
            69348606,
            69346845,
            69359883,
            69366706,
            69362024,
            69366917,
            69346932,
            69357467,
            69365166,
            69348414,
            69365647,
            69364629
        ],
        "E": [
            69338805,
            69351779,
            69339037,
            69344007,
            69344151,
            69343043,
            69361056,
            69360226,
            69364740,
            69351017,
            69346873,
            69323356,
            69353170,
            69364089,
            69360143,
            69354125,
            69351861,
            69359421,
            69360122,
            69354120
        ],
        "D": [
            69326821,
            69327425,
            69329129,
            69327902,
            69327595,
            69331659,
            69323447,
            69329706,
            69328760,
            69337985,
            69335298,
            69329000,
            69425046,
            69424930,
            69331368,
            69329469,
            69336157,
            69331418,
            69331535,
            69332903,
            69334125
        ],
        "C": [
            69316704,
            69318571,
            69324078,
            69319609,
            69320098,
            69321493,
            69318537,
            69320636,
            69318004,
            69321999,
            69327286,
            69331832,
            69318703,
            69317985,
            69329221,
            69324244,
            69332444,
            69322784,
            69323291
        ],
        "B": [
            69312164,
            69313583,
            69315904,
            69322215,
            69312293,
            69313735,
            69314120,
            69311768,
            69311366,
            69316184,
            69310957,
            69317833,
            69313722,
            69313259,
            69323626,
            69316316,
            69314611,
            69315633,
            69316963
        ],
        "A": [
            69304908,
            69306368,
            69307420,
            69304625,
            69304112,
            69305282,
            69304786,
            69304157,
            69304143,
            69307552,
            69304615,
            69309994,
            69304636,
            69303953,
            69304661,
            69308930,
            69306713,
            69306352,
            69305710
        ]
    },
    "name": "C. Product of Three Numbers",
    "statement": "You are given one integer number n. Find three a, b, c such that 2\r\nle a, b, c and a\r\ncdot b\r\ncdot c = n or say that it is impossible to do it.If there are several\r\nanswers, you can print any.You have to answer t independent test cases.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define PB push_back\n#define LL long long\n#define PII pair<int,int>\n#define FI first\n#define SE second\nconst int INF=0x3f3f3f3f;\nconst int N=1e6+7,mod=1e9+7;\nint n,m;\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        scanf(\"%d\",&n);\n        int cnt=0;\n        int a[5]={0};\n        for(int i=2;i*i<=n;i++){\n            if(n%i==0){\n                a[++cnt]=i;\n                if(cnt==2){\n                    a[++cnt]=n/i;\n                    break;\n                }\n                n/=i;\n            }\n        }\n        if(a[3]==0){\n            printf(\"NO\\n\");\n            continue;\n        }\n        if(a[1]==a[2]||a[2]==a[3]||a[3]==a[1]){\n            printf(\"NO\\n\");continue;\n        }\n        printf(\"YES\\n%d %d %d\\n\",a[1],a[2],a[3]);\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Product of Three Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/73274",
    "editorial": "Suppose . Letâs try to minimize and maximize . Let be the minimum\r\ndivisor of greater than . Then let be the minimum divisor of that isnât\r\nequal and . If isnât equal , and then the answer is \"\", otherwise the\r\nanswer is \"\".Time complexity: per query.\r\n",
    "hint": []
}