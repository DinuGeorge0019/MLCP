{
    "link": "https://codeforces.com//contest/1102/problem/B",
    "problemId": "280228",
    "problem_idx": "B",
    "shortId": "1102B",
    "contest_number": "1102",
    "problem_submissions": {
        "F": [
            48140951,
            48147190,
            48151952,
            48147273,
            48149693,
            48148209,
            48149357,
            48156228,
            48324719,
            48156492,
            48211275,
            48210647,
            48465963
        ],
        "E": [
            48133168,
            48134978,
            48134782,
            48135856,
            48131616,
            48151765,
            48145873,
            48128235,
            48131297,
            48136054,
            48139969,
            48138178,
            48141535,
            48140000,
            50612473,
            49117474,
            48143805,
            48143096,
            48141761,
            48140639,
            48142040,
            48138664
        ],
        "D": [
            48130363,
            48129370,
            48132705,
            48133131,
            48146366,
            48139447,
            48153130,
            48141036,
            48138860,
            48132737,
            48132907,
            48132415,
            48134717,
            48134475,
            48133518,
            48130113,
            48138869,
            48135563,
            48136818,
            48135753
        ],
        "C": [
            48124610,
            48124428,
            48127226,
            48130117,
            48124395,
            48129801,
            48133951,
            48124097,
            48123397,
            48126329,
            48125852,
            48124992,
            48127428,
            48126645,
            48127128,
            48125282,
            48126002,
            48129026,
            48128077,
            48129849
        ],
        "B": [
            48122561,
            48122504,
            48125142,
            48127847,
            48123165,
            48123788,
            48132434,
            48120816,
            48121994,
            48123399,
            48123616,
            48121594,
            48124256,
            48123685,
            48122759,
            48123296,
            48123050,
            48125935,
            48125539,
            48126168
        ],
        "A": [
            48119616,
            48119377,
            48119214,
            48122772,
            48119115,
            48118984,
            48121381,
            48121124,
            48118971,
            48118958,
            48120635,
            48119936,
            48118948,
            48119353,
            48120109,
            48119913,
            48119534,
            48118997,
            48120967,
            48119662,
            48120313
        ]
    },
    "name": "B. Array K-Coloring",
    "statement": "You are given an array a consisting of n integer numbers.You have to\r\ncolor this array in k colors in such a way that: Each element of the\r\narray should be colored in some color; For each i from 1 to k there\r\nshould be element colored in the i-th color in the array; For each i\r\nfrom 1 to k all elements colored in the i-th color should be .\r\nObviously, such coloring might be impossible. In this case, print \"\".\r\nOtherwise print \"\" and coloring (i.e. numbers c_1, c_2,\r\ndots c_n, where 1\r\nle c_i\r\nle k and c_i is the color of the i-th element of the given array)\r\nsatisfying the conditions above. If there are multiple answers, you can\r\nprint .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint n,k,freq[5001],id[5001],rem,ans[5001],a[5001];\nbool can[5001][5001];\nvoid no(){puts(\"NO\");exit(0);}\nint main(){\n// \tfreopen(\"input.txt\",\"r\",stdin);\n\tscanf(\"%d%d\",&n,&k);\n\tmemset(ans,-1,sizeof ans);\n\tfor(int i = 0;i < n;i++)scanf(\"%d\",a + i);\n\tfor(int i = 0;i < n;i++){\n\t\tif(rem != k){\n\t\t\tans[i] = rem++;\n\t\t\tcan[a[i]][rem - 1] = 1;\n\t\t}\n\t\telse {\n\t\t\twhile(id[a[i]] < k && can[a[i]][id[a[i]]])id[a[i]]++;\n\t\t\tif(id[a[i]] == k || can[a[i]][id[a[i]]])break;\n\t\t\tans[i] = id[a[i]];\n\t\t\tcan[a[i]][id[a[i]]] = 1;\n\t\t}\n\t}\n\tfor(int i = 0;i < n;i++)if(ans[i] == -1)no();\n\tputs(\"YES\");\n\tfor(int i = 0;i < n;i++)printf(\"%d \",ans[i] + 1);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Array K-Coloring.json",
    "editorial_link": "https://codeforces.com//blog/entry/64439",
    "editorial": "How can we solve this problem ? Firstly, let\u00e2\u0080\u0099s sort the initial array\r\n(but maintain the initial order of the elements in the array to restore\r\nthe answer). Then let\u00e2\u0080\u0099s just distribute all the colors . Let\u00e2\u0080\u0099s color the\r\nfirst element in the first color, the second one in the second, the -th\r\nelement in the -th color, the -th in the first color, and so on. So we\r\ncolor the -th element in the color ( is just modulo operation). We can\r\nsee that the answer is \"\" if there is an element with frequency at least\r\nin the array (by pigeonhole principle). Otherwise our solution builds\r\nthe correct answer. So we can try to find such element in the array\r\nnaively, using counting sort or many other approaches.Time complexity or\r\n.\r\n"
}