{
    "link": "https://codeforces.com//contest/1108/problem/B",
    "problemId": "286768",
    "problem_idx": "B",
    "shortId": "1108B",
    "contest_number": "1108",
    "problem_submissions": {
        "F": [
            48844825,
            48862163,
            48848324,
            48848130,
            48852294,
            48850212,
            48838457,
            48838256,
            48836252,
            48909101,
            48845595,
            48850104,
            48843426,
            48844816,
            48883602
        ],
        "E1": [
            48835917,
            48840618,
            48808903,
            48835183,
            48832250,
            48823205,
            48832522,
            48828568,
            48833167,
            48832156,
            48841738,
            48836232,
            48828690,
            48847940,
            48835833,
            48836036,
            48834638,
            48838866,
            48844104
        ],
        "E2": [
            48835709,
            48844109,
            48822818,
            48835022,
            48838613,
            48845982,
            48955072,
            48856736,
            48884776,
            48838175,
            48842079,
            48839961,
            48846288,
            48846487,
            48844520,
            48843523
        ],
        "D": [
            48819956,
            48826572,
            48809346,
            48824842,
            48817280,
            48817540,
            48824822,
            48819948,
            48824552,
            48909120,
            48824055,
            48812013,
            48824784,
            48817759,
            48822110,
            48828365,
            48827975,
            48821821,
            48832316,
            48824776
        ],
        "C": [
            48816726,
            48823616,
            48805698,
            48816182,
            48814495,
            48812589,
            48819587,
            48815831,
            48817913,
            48909136,
            48819613,
            48817733,
            48820640,
            48837755,
            48816702,
            48811230,
            48820437,
            48818121,
            48821557,
            48818894
        ],
        "B": [
            48812488,
            48806606,
            48811060,
            48806723,
            48809336,
            48805383,
            48812792,
            48811800,
            48810047,
            48909150,
            48813994,
            48807942,
            48810147,
            48809048,
            48810769,
            48806352,
            48811586,
            48811107,
            48808604,
            48810570
        ],
        "A": [
            48804415,
            48868180,
            48868032,
            48808820,
            48801772,
            48803106,
            48804293,
            48801670,
            48804786,
            48802995,
            48802478,
            48909143,
            48804883,
            48801594,
            48807139,
            48804067,
            48807170,
            48802448,
            48806432,
            48806874,
            48802749,
            48804777
        ]
    },
    "name": "B. Divisors of Two Integers",
    "statement": "Recently you have received two integer numbers x and y. You forgot them,\r\nbut you remembered a list containing all divisors of x (including 1 and\r\nx) and all divisors of y (including 1 and y). If d is a divisor of both\r\nnumbers x and y at the same time, there are two occurrences of d in the\r\nlist.For example, if x=4 and y=6 then the given list can be any\r\npermutation of the list [1, 2, 4, 1, 2, 3, 6]. Some of the possible\r\nlists are: [1, 1, 2, 4, 6, 3, 2], [4, 6, 1, 1, 2, 3, 2] or [1, 6, 3, 2,\r\n4, 1, 2].Your problem is to restore suitable integer numbers x and y\r\nthat would yield the same list of divisors (possibly in different\r\norder).It is guaranteed that the answer exists, i.e. the given list of\r\ndivisors corresponds to some integers x and y.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\n#define fn \"test\"\n#define fn1 \"\"\n\nusing namespace std;\n\nconst int mn = 1 * (int)(1e5) + 10;\nconst int mod = 1 * (int)(1e9) + 7;\nconst int mm = 1 * (int)(1e3) + 10;\nconst int base = 1 * (int)(1e9);\nconst bool aNs = 0;\n\nint tt, ntest = 1;\n\nvoid docfile()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    if (ifstream(fn\".inp\"))\n    {\n        freopen(fn\".inp\", \"r\", stdin);\n        if (!aNs) freopen(fn\".out\", \"w\", stdout);\n\t\telse freopen (fn\".ans\", \"w\", stdout);\n    }else if (ifstream(fn1\".inp\"))\n    {\n        freopen(fn1\".inp\", \"r\", stdin);\n        freopen(fn1\".out\", \"w\", stdout);\n    }\n}\n\ntemplate <typename T>\nvoid read(T& x)\n{\n    x = 0; T f = 1;\n    char ch = getchar();\n    while (!isdigit(ch)) f = ch == '-' ? - f : f, ch = getchar();\n    while (isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n    x *= f;\n}\n\ntemplate <typename T>\nvoid write (T a)\n{\n    if (a < 0)\n    {\n        putchar ('-');\n        write (-a);\n        return;\n    }\n    if (a < 10)\n    {\n        putchar ('0' + a);\n        return;\n    }\n    write (a / 10);\n    putchar ((char)('0' + (a % 10)));\n}\n\nbool ok[mn];\n\nvoid enter()\n{\n    int n;\n    cin >> n;\n    vector<int> a (n + 3);\n    map<int, int> mu;\n    int ma = 0, ma1 = 0;\n    for (int i = 1; i <= n; ++ i)\n    {\n        cin >> a[i];\n        ma = max (ma, a[i]);\n    }\n    int l = ma;\n    for (int i = 1; i <= n; ++ i)\n    {\n        if (ma % a[i] == 0 && !ok[a[i]])\n        {\n            ok[a[i]] = 1;\n            // ma /= a[i];\n        }\n        else ma1 = max (ma1, a[i]);\n    }\n    cout << l << \" \" << ma1;\n}\n\nvoid solve()\n{\n\n}\n\nvoid print_result()\n{\n\n}\n\nint main()\n{\n    docfile();\n    //cin>>ntest;\n    for (tt = 1; tt <= ntest; ++ tt)\n    {\n        enter();\n        solve();\n        print_result();\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Divisors of Two Integers.json",
    "editorial_link": "https://codeforces.com//blog/entry/64751",
    "editorial": "Letâs take a look on the maximum element of the given array. Suddenly,\r\nthis number is (or , the order doesnât matter). Okay, what would we do\r\nif we know and merged list of divisors of and ? Letâs remove all\r\ndivisors of and see what we got. The maximum element in the remaining\r\narray is . So, the problem is solved.\r\n",
    "hint": []
}