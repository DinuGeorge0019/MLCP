{
    "link": "https://codeforces.com//contest/1512/problem/C",
    "problemId": "953476",
    "problem_idx": "C",
    "shortId": "1512C",
    "contest_number": "1512",
    "problem_submissions": {
        "F": [
            112516327,
            112629362,
            112497737,
            112483852,
            112534163,
            112519872,
            112523049,
            112540058,
            112525363,
            112533614,
            112536448,
            112537516,
            112544404,
            112530297,
            112526420,
            112533603,
            112542746,
            112531433,
            112535093,
            112548605
        ],
        "E": [
            112506564,
            112508563,
            112524736,
            112502446,
            112533858,
            112527958,
            112508864,
            112509889,
            112512903,
            112509017,
            112528173,
            112510675,
            112503998,
            112512724,
            112513625,
            112519008,
            112528502,
            112521867
        ],
        "D": [
            112497785,
            112621054,
            112497203,
            112490115,
            112495508,
            112500809,
            112498955,
            112500271,
            112498910,
            112498077,
            112497611,
            112500088,
            112496071,
            112507407,
            112502827,
            112504464,
            112507164,
            112504475,
            112499401
        ],
        "G": [
            112491483,
            112631083,
            112630603,
            112513531,
            112508947,
            112527906,
            112512550,
            112511636,
            112507446,
            112625521,
            112625074,
            112532760,
            112528600,
            112518587,
            112526144,
            112524205,
            112510843,
            112509683,
            112548005,
            112537281,
            112544284,
            112538205,
            112540767,
            112537278,
            112515598,
            112508304
        ],
        "C": [
            112487593,
            112496919,
            112486052,
            112489997,
            112495797,
            112491587,
            112494910,
            112492048,
            112490369,
            112490198,
            112493048,
            112491868,
            112497975,
            112496210,
            112497381,
            112497156,
            112499855,
            112493193
        ],
        "B": [
            112477709,
            112619015,
            112504560,
            112479565,
            112478849,
            112478748,
            112478214,
            112479649,
            112478387,
            112478327,
            112480204,
            112478667,
            112478450,
            112495691,
            112481506,
            112480872,
            112481214,
            112491490,
            112490040,
            112481549
        ],
        "A": [
            112470316,
            112478350,
            112469960,
            112470719,
            112470865,
            112469918,
            112470988,
            112470608,
            112469614,
            112470404,
            112469899,
            112471014,
            112475792,
            112469758,
            112471653,
            112470464,
            112470688,
            112473832
        ]
    },
    "name": "C. A-B Palindrome",
    "statement": "You are given a string s consisting of the characters ”, ”, and ”. You\r\nneed to replace all the characters with ” in the string s by ” or ” so\r\nthat the string becomes a palindrome and has a characters ” and b\r\ncharacters ”. Note that each of the characters ” is replaced from the\r\nothers.A string t of length n is called a palindrome if the equality\r\nt[i] = t[n-i+1] is true for all i (1\r\nle i\r\nle n).For example, if s=\"\", a=4 and b=4, then you can replace the\r\ncharacters ” in the following ways: \"\"; \"\". For the given string s and\r\nthe numbers a and b, replace all the characters with ” in the string s\r\nby ” or ” so that the string becomes a palindrome and has a characters ”\r\nand b characters ”.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\ntypedef unsigned long long ull;\ntypedef long long ll;\ntemplate<class T1,class T2,class T3>T1 ksm(T1 a,T2 b,T3 mod){T1 ans=1;while(b){if(b&1)ans=(ans*a)%mod;a=(a*a)%mod;b>>=1;}return ans;}\n#ifndef ONLINE_JUDGE\ntemplate<class T>T __gcd(T a,T b){ll r;while(b>0){r=a%b;a=b;b=r;}return a;}\n#endif\n#define inf INT_MAX\n#define Max(x,y) x=max(x,y)\n#define Min(x,y) x=min(x,y)\n#define Out(t) printf(\"%s\\n\",(t)?\"YES\":\"NO\")\nconst double pi=acos(-1.);\nconst int def=100010;\nconst int mod=1000000007;\nusing namespace std;\n\nint a[2];\nstring s;\n\nstring solve()\n{\tint n=s.length();\n\tif(a[0]+a[1]!=n)return \"-1\";\n\tfor(int i=0;i<n/2;i++){\n\t\tif(s[i]!='?'||s[n-i-1]!='?'){\n\t\t\tif(s[i]!='?'&&s[n-i-1]!='?'){\n\t\t\t\tif(s[i]!=s[n-i-1])return \"-1\";\n\t\t\t}else{\n\t\t\t\tif(s[i]=='?')\n\t\t\t\t\ts[i]=s[n-i-1];\n\t\t\t\telse\n\t\t\t\t\ts[n-i-1]=s[i];\n\t\t\t}\n\t\t\ta[s[i]-'0']-=2;\n\t\t\tif(a[s[i]-'0']<0)return \"-1\";\n\t\t}\n\t}\n\tif(n%2){\n\t\tif(s[n/2]=='?'){\n\t\t\tif(a[0]%2)s[n/2]='0';\n\t\t\telse if(a[1]%2)s[n/2]='1';\n\t\t\telse return \"-1\";\n\t\t\ta[s[n/2]-'0']--;\n\t\t}else{\n\t\t\ta[s[n/2]-'0']--;\n\t\t\tif(a[s[n/2]-'0']<0)return \"-1\";\n\t\t}\n\t}\n\tfor(int i=0;i<n/2;i++){\n\t\tif(s[i]=='?'){\n\t\t\tif(a[0])\n\t\t\t\ts[i]=s[n-i-1]='0';\n\t\t\telse\n\t\t\t\ts[i]=s[n-i-1]='1';\n\t\t\ta[s[i]-'0']-=2;\n\t\t\tif(a[s[i]-'0']<0)return \"-1\";\n\t\t}\n\t}\n\treturn s;\n}\n\nint main()\n{\tint _=1,__=1;\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"/Users/py/Documents/workspace/C++/try.in\",\"r\",stdin);\n\tfreopen(\"/Users/py/Documents/workspace/C++/try.out\",\"w\",stdout);\n\t#endif\n\tfor(((1)?scanf(\"%d\",&_):EOF);_;_--,__++){\n\t\tscanf(\"%d%d\",&a[0],&a[1]);\n\t\tcin>>s;\n\t\tcout<<solve()<<endl;\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. A-B Palindrome.json",
    "editorial_link": "https://codeforces.com//blog/entry/89535",
    "editorial": "First, letâs find such positions () such that â (symbols in symmetric\r\npositions are uniquely determined): If â, then ; If , then at the end we\r\nwill not get a palindrome in any way, so the answer is â. Note that\r\nafter such a replacement, the remaining characters â are split into\r\npairs, except maybe the central one. If the center character is â then\r\nit is necessary to put the character â if is odd, or â if is odd (if\r\nneither , nor is odd, then the answer is â).Now the remaining characters\r\nâ are split into pairs (i.e. if â, then â). This allows the remaining\r\ncharacters â and â to be replaced greedily: If â and , then â and\r\ndecrease for ; If â and , then â and decrease for ; Otherwise the answer\r\nis â.\r\n",
    "hint": []
}