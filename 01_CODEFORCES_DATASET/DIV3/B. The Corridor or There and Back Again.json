{
    "link": "https://codeforces.com//contest/1872/problem/B",
    "problemId": "2198221",
    "problem_idx": "B",
    "shortId": "1872B",
    "contest_number": "1872",
    "problem_submissions": {
        "G": [
            222269305,
            222264289,
            222298879,
            222305481,
            222270629,
            222342415,
            222314228,
            222291632,
            222286722,
            222275567,
            222284367,
            222291047,
            222268166,
            222301101,
            222308831,
            222296849,
            222307124,
            222314609,
            222306727,
            222303618,
            222298039
        ],
        "F": [
            222253211,
            222274310,
            222263563,
            222275177,
            222283950,
            222342119,
            222263399,
            222275335,
            222259168,
            222301153,
            222293375,
            222280986,
            222289895,
            222284461,
            222268231,
            222282384,
            222274185,
            222276754,
            222273355,
            222290954
        ],
        "E": [
            222242579,
            222246400,
            222249497,
            222247597,
            222248802,
            222342265,
            222249154,
            222255647,
            222250780,
            222252960,
            222255367,
            222257063,
            222301644,
            222264271,
            222254606,
            222261852,
            222259585,
            222256505,
            222256891,
            222259676
        ],
        "D": [
            222233540,
            222240242,
            222235638,
            222238483,
            222241578,
            222341675,
            222240111,
            222249058,
            222245456,
            222243309,
            222249106,
            222245814,
            222245292,
            222248919,
            222247848,
            222246403,
            222250509,
            222246737,
            222246669,
            222248764
        ],
        "C": [
            222228280,
            222236162,
            222231841,
            222233925,
            222238951,
            222341397,
            222235622,
            222239086,
            222238021,
            222238244,
            222243551,
            222237799,
            222238155,
            222240804,
            222242295,
            222252499,
            222244345,
            222233052,
            222239640,
            222243679
        ],
        "B": [
            222223320,
            222228834,
            222223279,
            222226962,
            222230878,
            222341232,
            222228304,
            222229555,
            222234022,
            222230767,
            222235368,
            222229693,
            222228951,
            222233130,
            222233112,
            222230666,
            222236695,
            222242522,
            222228111,
            222239768
        ],
        "A": [
            222220034,
            222220138,
            222220149,
            222220934,
            222220877,
            222220135,
            222220624,
            222220385,
            222220004,
            222220348,
            222220097,
            222222211,
            222223046,
            222220972,
            222222909,
            222223854,
            222229902,
            222220171,
            222223172
        ]
    },
    "name": "B. The Corridor or There and Back Again",
    "statement": "You are in a corridor that extends infinitely to the right, divided into\r\nsquare rooms. You start in room 1, proceed to room k, and then return to\r\nroom 1. You can choose the value of k. Moving to an adjacent room takes\r\n1 second.Additionally, there are n traps in the corridor: the i-th trap\r\nis located in room d_i and will be activated s_i seconds\r\nboldsymbol{d_i}. Once a trap is activated, you cannot enter or exit a\r\nroom with that trap. Determine the maximum value of k that allows you to\r\ntravel from room 1 to room k and then return to room 1 safely.For\r\ninstance, if n=1 and d_1=2, s_1=2, you can proceed to room k=2 and\r\nreturn safely (the trap will activate at the moment 1+s_1=1+2=3, it\r\ncan’t prevent you to return back). But if you attempt to reach room k=3,\r\nthe trap will activate at the moment 1+s_1=1+2=3, preventing your return\r\n(you would attempt to enter room 2 on your way back at second 3, but the\r\nactivated trap would block you). Any larger value for k is also not\r\nfeasible. Thus, the answer is k=2.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define vll vector<ll>\n#define vvll vector<vll>\n#define pll pair<ll,ll>\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        ll n;\n        cin >> n;\n        ll ans = 1e18;\n        for (ll i = 0; i < n; i++) {\n            ll a, b;\n            // 2 (k - a) < s\n            // 2k - 2a < s\n            // 2k < 2a+s\n            // k < (2a+s+1)/2\n            cin >> a >> b;\n            ans = min(ans, (2*a+b-1)/2);\n        }\n        cout << ans << '\\n';\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. The Corridor or There and Back Again.json",
    "editorial_link": "https://codeforces.com//blog/entry/120165",
    "editorial": "Letâs see when we can reach room and return back. In this case, the time\r\ndifference between entering and exiting room is equal to . Therefore, it\r\nis necessary for all traps to satisfy: . Now we need to find the maximum\r\nthat satisfies these conditions. To do this, we can either iterate\r\nthrough all from to , or use binary search for the answer, or notice\r\nthat Therefore, the maximum suitable will be .\r\n",
    "hint": []
}