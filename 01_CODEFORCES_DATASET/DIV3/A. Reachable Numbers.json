{
    "link": "https://codeforces.com//contest/1157/problem/A",
    "problemId": "336204",
    "problem_idx": "A",
    "shortId": "1157A",
    "contest_number": "1157",
    "problem_submissions": {
        "G": [
            53354096,
            53391965,
            53390867
        ],
        "F": [
            53343664,
            53360675,
            53361624,
            53364566,
            53357704,
            53359903,
            53361988,
            53361938,
            53362589
        ],
        "D": [
            53340379,
            53350471,
            53354170,
            53343980,
            53350301,
            53365956,
            53362535,
            53355323,
            53360133,
            53358327,
            53360447,
            53351641,
            53363339,
            53362459,
            53373877,
            53363141,
            53362698,
            53354329,
            53341889,
            53357655
        ],
        "E": [
            53335726,
            53354513,
            53342966,
            53357089,
            53326973,
            53337039,
            53343435,
            53334056,
            53346417,
            53344822,
            53341358,
            53352604,
            53344787,
            53355380,
            53351750,
            53373916,
            53343916,
            53337525,
            53354885,
            53347360
        ],
        "C2": [
            53332882,
            53338253,
            53340523,
            53360290,
            53337905,
            53344895,
            53348129,
            53339890,
            53350634,
            53347512,
            53397823,
            53341730,
            53345378,
            53373863,
            53335877,
            53380825,
            53366273,
            53365566,
            53365157,
            53364677,
            53340346
        ],
        "C1": [
            53329688,
            53331267,
            53335293,
            53360618,
            53332134,
            53331740,
            53332999,
            53331325,
            53335930,
            53335387,
            53334852,
            53338537,
            53337135,
            53345489,
            53379146,
            53336165,
            53333762,
            53348248,
            53334974
        ],
        "B": [
            53326629,
            53325954,
            53329930,
            53342495,
            53324816,
            53325500,
            53426742,
            53328079,
            53325908,
            53330675,
            53327539,
            53330292,
            53325880,
            53330636,
            53328572,
            53373831,
            53329602,
            53328749,
            53327714
        ],
        "A": [
            53324361,
            53324269,
            53324359,
            53326455,
            53324227,
            53324256,
            53426571,
            53324495,
            53324422,
            53326078,
            53325046,
            53327429,
            53324265,
            53327238,
            53324911,
            53373799,
            53324760,
            53341107,
            53324803,
            53324767
        ]
    },
    "name": "A. Reachable Numbers",
    "statement": "Letâ€™s denote a function f(x) in such a way: we add 1 to x, then, while\r\nthere is at least one trailing zero in the resulting number, we remove\r\nthat zero. For example, f(599) = 6: 599 + 1 = 600\r\nrightarrow 60\r\nrightarrow 6; f(7) = 8: 7 + 1 = 8; f(9) = 1: 9 + 1 = 10\r\nrightarrow 1; f(10099) = 101: 10099 + 1 = 10100\r\nrightarrow 1010\r\nrightarrow 101. We say that some number y is from x if we can apply\r\nfunction f to x some (possibly zero) times so that we get y as a result.\r\nFor example, 102 is reachable from 10098 because f(f(f(10098))) =\r\nf(f(10099)) = f(101) = 102; and any number is reachable from itself.You\r\nare given a number n; your task is to count how many different numbers\r\nare reachable from n.\r\n",
    "solutions": [
        "#include <unordered_map>\n#include <unordered_set>\n#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <cassert>\n#include <climits>\n#include <iomanip>\n#include <numeric>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <cmath>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <ctime>\n#include <set>\n#include <map>\nusing namespace std;\n#define il inline\n#define elif else if\n\n// Type\n#define ld double\n#define ll long long\n#define ull unsigned ll\n\n// Vector\n#define vc vector\n#define Pb push_back\n#define Pf push_front\n#define All(x) x.begin(),x.end()\n\n// Memory\n#define Ms(_data) memset(_data,0,sizeof(_data))\n#define Msn(_data,_num) memset(_data,_num,sizeof(_data))\n\n// Template\n#define _cl class\n#define _tp template\n#define _tyn typename\n\n// Pair\n#define Mp make_pair\n#define F first\n#define S second\n#define pii pair<int,int>\n#define pli pair<ll,int>\n#define pil pair<int,ll>\n#define pll pair<ll,ll>\n\n// Loop\n#define For(i,j) for( int (i) = 1 ; (i) <= (j) ; ++(i) )\n#define For0(i,j) for( int (i) = 0 ; (i) < (j) ; ++(i) )\n#define Forx(i,j,k) for( int (i) = (j) ; (i) <= (k) ; ++(i) )\n#define Forstep(i,j,k,st) for( int (i) = (j) ; (i) <= (k) ; (i) += (st) )\n#define fOR(i,j) for( int (i) = (j) ; (i) >= 1 ; --(i) )\n#define fOR0(i,j) for( int (i) = (j)-1 ; (i) >= 0 ; --(i) )\n#define fORx(i,j,k) for( int (i) = (k) ; (i) >= (j) ; --(i) )\n\n// Read\nstruct InputReader{\n\t#define bs 1000001\n\tchar buf[bs]; int p;\n\til InputReader(){ p = bs; }\n\til void Flush(){ p = 0; fread(buf,1,bs,stdin); }\n\til char C(){ if(p >= bs) Flush(); return buf[p++]; }\n\til char Readnum(){ char ch = C(); while( !isdigit(ch) && ch != '-' ) ch = C(); return ch; }\n\til void Readalpha( char &c ){ c = C(); while( !isalpha(c) ) c = C(); }\n\tint operator() (){\n\t\tint ans = 0, fu = 1; char ch = Readnum();\n\t\tif( ch == '-' ) fu = -1, ch = C();\n\t\twhile( ch >= '0' && ch <= '9' ){\n\t\t\tans = ans*10 + ch-'0';\n\t\t\tch = C();\n\t\t}\n\t\treturn ans * fu;\n\t}\n\tll Readll(){\n\t\tll ans = 0LL, fu = 1LL; char ch = Readnum();\n\t\tif( ch == '-' ) fu = -1LL, ch = C();\n\t\twhile( ch >= '0' && ch <= '9' ){\n\t\t\tans = ans*10LL + ch-'0';\n\t\t\tch = C();\n\t\t}\n\t\treturn ans * fu;\n\t}\n\til void Readstring( string &x ){\n\t\tx.clear(); char ch = C();\n\t\twhile( !isdigit(ch)  &&  !isalpha(ch)  &&  ch != '#'  &&  ch != '.' ) ch = C();\n\t\twhile( isdigit(ch)  ||  isalpha(ch)  ||  ch == '#'  ||  ch == '.' ){\n\t\t\tx += ch;\n\t\t\tch = C();\n\t\t}\n\t}\n\til void Readchstring( char s[] ){\n\t\tint len = 0; char ch = C();\n\t\twhile( !isdigit(ch)  &&  !isalpha(ch)  /*&&  ch != '*'  &&  ch != '?'*/ ) ch = C();\n\t\twhile( isdigit(ch)  ||  isalpha(ch)  /*||  ch == '*'  ||  ch == '?'*/ ){\n\t\t\ts[len++] = ch;\n\t\t\tch = C();\n\t\t}\n\t\ts[len] = '\\0';\n\t}\n\til void Specialread( char &c ){\n\t\tc = C();\n\t\twhile( !isdigit(c) && !isalpha(c) && c != '#'  &&  c != '.'  &&  c != '='  &&  c != 'B' ) c = C();\n\t}\n\t#undef bs\n}In;\nil void Read( int &x ){ x = In(); }\nil void Read( int &x, int &y ){ x = In(); y = In(); }\nil void Read( int &x1 , int &x2 , int &x3 ){ x1 = In(); x2 = In(); x3 = In(); }\nil void Read( int &x1 , int &x2 , int &x3 , int &x4 ){ x1 = In(); x2 = In(); x3 = In(); x4 = In(); }\nil void Read( ll &x ){ x = In.Readll(); }\nil void Read( ll &x, ll &y ){ x = In.Readll(); y = In.Readll(); }\nil void Read( ll &x1 , ll &x2 , ll &x3 ){ x1 = In.Readll(); x2 = In.Readll(); x3 = In.Readll(); }\nil void Read( ll &x1 , ll &x2 , ll &x3 , ll &x4 ){ x1 = In.Readll(); x2 = In.Readll(); x3 = In.Readll(); x4 = In.Readll(); }\n_tp<_tyn T> void Read( T a[] , int st , int ed ){ Forx(i,st,ed) Read(a[i]); }\n#define iRead(k) int k; Read(k);\n#define iRead2(a,b) iRead(a); iRead(b);\n#define iRead3(a,b,c) iRead2(a,b); iRead(c);\n#define iRead4(a,b,c,d) iRead2(a,b); iRead2(c,d);\n#define lRead(k) ll k; Read(k);\n#define lRead2(a,b) lRead(a); lRead(b);\n#define lRead3(a,b,c) lRead2(a,b); lRead(c);\n#define lRead4(a,b,c,d) lRead2(a,b); lRead2(c,d);\n\n// File\n#define Fin(a) freopen(a,\"r\",stdin)\n#define Fout(a) freopen(a,\"w\",stdout)\nil void FILEIO(){\n\t#ifdef intLSY\n\t\tFin(\"in.in\");\n\t#endif\n}\nil void FILEIO( string pname ){\n\t#ifndef intLSY\n\t\tFin((pname+\".in\").c_str());\n\t\tFout((pname+\".out\").c_str());\n\t#else\n\t\tFin(\"in.in\");\n\t#endif\n}\nil void FILEIO_OICONTEST( string pname ){\n\tFin((pname+\".in\").c_str());\n\t#ifndef intLSY\n\t\tFout((pname+\".out\").c_str());\n\t#endif\n}\nvoid Printtime(){\n\t#ifdef intLSY\n\t\tdouble _timeuse = clock()* 1000.0 / CLOCKS_PER_SEC;\n\t\tfprintf(stderr,\"\\n\\nTime usage:\\n%.0lf ms\\n\",_timeuse);\n\t#endif\n}\nvoid END(){ Printtime(); exit(0); }\n_tp<_tyn T>void END( T mes ){ cout << mes << endl; END(); }\n\n// Debug\n#define B cerr << \"BreakPoint\" << endl;\n#define O(x) cerr << #x << \" \" << x << endl;\n#define O_(x) cerr << #x << \" \" << x << \"  \";\n#define ERR(x) cerr << \"ERR! #\" << x << endl;\n#define Msz(x) cerr << \"Sizeof \" << #x << \" \" << sizeof(x)/1024/1024 << \" MB\" << endl;\n_tp<_tyn T>void Print( T a[] , int s , int t , char sp = ' ' , char ed = '\\n' ){\n\tif( s > t ) return;\n\tfor( int i = s ; i < t ; i++ )\n\t\tcout << a[i] << sp;\n\tcout << a[t] << ed;\n\tcout.flush();\n}\n_tp<_tyn T>void Print( T a , int s = 0 , int t = -1 , char sp = ' ' , char ed = '\\n' ){\n\tif( t == -1 ) t = a.size()-1;\n\tfor( int i = s ; i <= t ; i++ )\n\t\tcout << a[i] << sp;\n\tcout << ed;\n\tcout.flush();\n}\n\n// Optimize\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define Mymax(a,b) (a) = max((a),(b))\n#define Mymin(a,b) (a) = min((a),(b))\n#define INF (0x3f3f3f3f)\n#define LINF ((long long)(0x3f3f3f3f3f3f3f3f))\n\n///////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////\nmap<int,bool> vis;\nint ans = 0;\nint x;\n\nint main(){\n\tFILEIO();\n\n\tRead(x);\n\tif( x == 0 ) END(1);\n\twhile(x){\n\t\tif(!vis.count(x)){\n\t\t\t++ans;\n\t\t\tvis[x] = 1;\n\t\t}else break;\n\t\tx = x+1;\n\t\twhile( x%10 == 0 and x ) x /= 10;\n\t}\n\tprintf(\"%d\\n\",ans);\n\n\tEND();\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Reachable Numbers.json",
    "editorial_link": "https://codeforces.com/blog/entry/66737",
    "editorial": "The key fact in this problem is that the answer is not very large (in\r\nfact, itÃ¢Â€Â™s not greater than ). Why is it so? Every times we apply\r\nfunction to our current number, it gets divided by (at least), and the\r\nnumber of such divisions is bounded as .So we can just do the following:\r\nstore all reachable numbers somewhere, and write a loop that adds\r\ncurrent number to reachable numbers, and sets (we should end this loop\r\nwhen already belongs to reachable numbers). The most convenient way to\r\nstore reachable numbers is to use any data structure from your favourite\r\nprogramming language that implemenets a set, but, in fact, the\r\nconstrains were so small that it was possible to store all reachable\r\nnumbers in an array.\r\n",
    "hint": []
}