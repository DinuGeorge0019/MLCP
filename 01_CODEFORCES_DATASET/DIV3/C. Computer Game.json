{
    "link": "https://codeforces.com//contest/1183/problem/C",
    "problemId": "363543",
    "problem_idx": "C",
    "shortId": "1183C",
    "contest_number": "1183",
    "problem_submissions": {
        "F": [
            56110414,
            56117769,
            56118798,
            66995010,
            56101090,
            56148730,
            138937022,
            56112000
        ],
        "E": [
            56097887,
            56113357,
            56105226,
            56104643,
            56101888,
            56093414,
            56111233,
            56103293,
            56103078,
            56104487,
            56109659,
            56103780,
            56109510,
            56105711,
            56106565
        ],
        "H": [
            56097697,
            56113570,
            56105740,
            66667587,
            56101720,
            56109616,
            56111456,
            56108240,
            56103716,
            56105330,
            56106283,
            56109916,
            56106467
        ],
        "G": [
            56092005,
            56104084,
            56123883,
            56112098,
            56110719,
            56101673,
            56117506,
            56115328,
            59651445,
            56098320,
            138935815
        ],
        "D": [
            56088183,
            56091373,
            56093338,
            56090767,
            56087401,
            56085787,
            56095559,
            56092469,
            56089592,
            56093522,
            56092856,
            56094699,
            56091582,
            56093930,
            56090315,
            56096981,
            56094561
        ],
        "C": [
            56084972,
            56088064,
            56089777,
            56097980,
            56081517,
            56107044,
            56091000,
            56085493,
            56085540,
            56091330,
            56090250,
            56088370,
            56086037,
            56089714,
            56086123
        ],
        "B": [
            56081558,
            56084832,
            56083510,
            59085942,
            56083305,
            56103674,
            56097880,
            56086061,
            56083097,
            56081660,
            56086915,
            56086136,
            56085025,
            56087421,
            56081700,
            56084942,
            56082678
        ],
        "A": [
            56080149,
            56079717,
            56079676,
            57264074,
            56080781,
            56088646,
            56082120,
            56081323,
            56079728,
            56079791,
            56082274,
            56082965,
            56079889,
            56079932,
            56079796
        ]
    },
    "name": "C. Computer Game",
    "statement": "Vova is playing a computer game. There are in total n turns in the game\r\nand Vova really wants to play all of them. The initial charge of his\r\nlaptop battery (i.e. the charge before the start of the game) is\r\nk.During each turn Vova can choose what to do: If the current charge of\r\nhis laptop battery is strictly greater than a, Vova can , and then the\r\ncharge of his laptop battery will decrease by a; if the current charge\r\nof his laptop battery is strictly greater than b (b<a), Vova can his\r\nlaptop, and then the charge of his laptop battery will decrease by b; if\r\nthe current charge of his laptop battery is less than or equal to a and\r\nb at the same time then Vova cannot do anything and loses the game.\r\n.Vova wants to complete the game (Vova can complete the game if after\r\neach of n turns the charge of the laptop battery is ). Vova has to play\r\n. Among all possible ways to complete the game, Vova wants to choose the\r\none where the number of turns when he () is the possible. It is possible\r\nthat Vova cannot complete the game at all.Your task is to find out the\r\npossible number of turns Vova can (make the ) or report that Vova cannot\r\ncomplete the game.You have to answer q independent queries.\r\n",
    "solutions": [
        "#include <stdio.h>\n\n#define lli long long int\n\nint main() {\n\tlli q, k, n, a, b, mini, sisa, delta, ans;\n\tscanf(\"%lld\", &q);\n\twhile (q--) {\n\t\tscanf(\"%lld %lld %lld %lld\", &k, &n, &a, &b);\n\t\tmini = n * b;\n\t\tans = -1;\n\t\tif (k > mini) {\n\t\t\tsisa = k - mini - 1;\n\t\t\tdelta = a - b;\n\t\t\tans = sisa / delta;\n\t\t\tif (n < ans)\n\t\t\t\tans = n;\n\t\t}\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Computer Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/68003",
    "editorial": "Firstly, about the problem description. Vova really needs to i. e. play\r\n. Exactly turns. Among all possible ways to do it he need choose one\r\nwhere the number of turns when he (this is the first type turn!) is\r\n.Suppose the answer is . Then the charge of the battery after turns will\r\nbe . If this value is greater than then the answer is . Otherwise we\r\nneed to replace some turns when Vova with turns when Vova . The charge\r\nof the battery will increase by avfter one replacement. We have to\r\nobtain with some replacements. The number of turns to do it is equals to\r\n, where is divided by rounded up. If then the answer is . Otherwise the\r\nanswer is .\r\n",
    "hint": []
}