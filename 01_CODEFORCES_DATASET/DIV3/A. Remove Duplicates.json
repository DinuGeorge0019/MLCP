{
    "link": "https://codeforces.com//contest/978/problem/A",
    "problemId": "182876",
    "problem_idx": "A",
    "shortId": "978A",
    "contest_number": "978",
    "problem_submissions": {
        "G": [
            38172491,
            38169204,
            38172434,
            38174884,
            38174212,
            38202570,
            38174356,
            38174504,
            38170439,
            38179076,
            38174120,
            38175016,
            38177179,
            38173974,
            38173883,
            38177077,
            38179217,
            38177915,
            38175210
        ],
        "F": [
            38167756,
            38167382,
            38169838,
            38171846,
            38171022,
            38202583,
            38171851,
            38172094,
            38166947,
            38172200,
            38170297,
            38172407,
            38173744,
            38170844,
            38171837,
            38173600,
            38173445,
            38173729,
            38171096,
            38172672
        ],
        "E": [
            38166000,
            38165982,
            38167458,
            38167818,
            38167975,
            38202586,
            38169135,
            38168502,
            38165451,
            38168025,
            38168912,
            38170344,
            38169652,
            38168636,
            38170345,
            38170564,
            38171323,
            38171232,
            38166984
        ],
        "D": [
            38164294,
            38164281,
            38166043,
            38165411,
            38166520,
            38202587,
            38166943,
            38167185,
            38174671,
            38184115,
            38165897,
            38167133,
            38167961,
            38167926,
            38167171,
            38168834,
            38168604,
            38168704,
            38168070,
            38165126
        ],
        "C": [
            38162269,
            38159839,
            38162952,
            38162443,
            38163682,
            38202588,
            38163454,
            38163549,
            38164049,
            38162683,
            38163806,
            38164073,
            38165403,
            38165313,
            38165695,
            38165203,
            38164723,
            38162539,
            38162894
        ],
        "B": [
            38160472,
            38157775,
            38159643,
            38159599,
            38161723,
            38159684,
            38162382,
            38159493,
            38159452,
            38160053,
            38159583,
            38160909,
            38164410,
            38160958,
            38160311,
            38159735,
            38160488
        ],
        "A": [
            38158198,
            38157375,
            38157656,
            38157773,
            38158120,
            38202594,
            38157741,
            38157702,
            38160301,
            38157750,
            38158544,
            38157695,
            38157893,
            38159292,
            38163521,
            38158147,
            38158142,
            38157847,
            38158925
        ]
    },
    "name": "A. Remove Duplicates",
    "statement": "Petya has an array a consisting of n integers. He wants to remove\r\nduplicate (equal) elements.Petya wants to leave only the rightmost entry\r\n(occurrence) for each element of the array. The relative order of the\r\nremaining unique elements should not be changed.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define DIM 57\nusing namespace std;\n\nlong long n,a[DIM],used[1007];\nint main()\n{\n    cin>>n;\n    for(int i = 1; i<= n; ++i)\n        cin>>a[i];\n\n    vector<long long> ans;\n    for(int i = n;i>=1;--i)\n        if(used[a[i]]==0)\n    {\n        used[a[i]] = 1;\n        ans.push_back(a[i]);\n    }\n\n    reverse(ans.begin(),ans.end());\n    cout<<ans.size()<<endl;\n    for(auto i:ans)\n        cout<<i<<' ';\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Remove Duplicates.json",
    "editorial_link": "https://codeforces.com/blog/entry/59430",
    "editorial": "We will store integers which we already met in a set . Let\u00e2\u0080\u0099s iterate\r\nthrough the given array from the right to the left. Let the current\r\nelement is equal to . So, if does not contain in we add in a\r\nvector-answer and add in .After we considered all elements the answer\r\nsequence contains in the vector in reversed order. So we should reverse\r\nthe vector and simply print all its elements.\r\n"
}