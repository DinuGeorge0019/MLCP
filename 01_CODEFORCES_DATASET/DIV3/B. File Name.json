{
    "link": "https://codeforces.com//contest/978/problem/B",
    "problemId": "182877",
    "problem_idx": "B",
    "shortId": "978B",
    "contest_number": "978",
    "problem_submissions": {
        "G": [
            38172491,
            38169204,
            38172434,
            38174884,
            38174212,
            38202570,
            38174356,
            38174504,
            38170439,
            38179076,
            38174120,
            38175016,
            38177179,
            38173974,
            38173883,
            38177077,
            38179217,
            38177915,
            38175210
        ],
        "F": [
            38167756,
            38167382,
            38169838,
            38171846,
            38171022,
            38202583,
            38171851,
            38172094,
            38166947,
            38172200,
            38170297,
            38172407,
            38173744,
            38170844,
            38171837,
            38173600,
            38173445,
            38173729,
            38171096,
            38172672
        ],
        "E": [
            38166000,
            38165982,
            38167458,
            38167818,
            38167975,
            38202586,
            38169135,
            38168502,
            38165451,
            38168025,
            38168912,
            38170344,
            38169652,
            38168636,
            38170345,
            38170564,
            38171323,
            38171232,
            38166984
        ],
        "D": [
            38164294,
            38164281,
            38166043,
            38165411,
            38166520,
            38202587,
            38166943,
            38167185,
            38174671,
            38184115,
            38165897,
            38167133,
            38167961,
            38167926,
            38167171,
            38168834,
            38168604,
            38168704,
            38168070,
            38165126
        ],
        "C": [
            38162269,
            38159839,
            38162952,
            38162443,
            38163682,
            38202588,
            38163454,
            38163549,
            38164049,
            38162683,
            38163806,
            38164073,
            38165403,
            38165313,
            38165695,
            38165203,
            38164723,
            38162539,
            38162894
        ],
        "B": [
            38160472,
            38157775,
            38159643,
            38159599,
            38161723,
            38159684,
            38162382,
            38159493,
            38159452,
            38160053,
            38159583,
            38160909,
            38164410,
            38160958,
            38160311,
            38159735,
            38160488
        ],
        "A": [
            38158198,
            38157375,
            38157656,
            38157773,
            38158120,
            38202594,
            38157741,
            38157702,
            38160301,
            38157750,
            38158544,
            38157695,
            38157893,
            38159292,
            38163521,
            38158147,
            38158142,
            38157847,
            38158925
        ]
    },
    "name": "B. File Name",
    "statement": "You can not just take the file and send it. When Polycarp trying to send\r\na file in the social network \"Codehorses\", he encountered an unexpected\r\nproblem. If the name of the file contains three or more \"\" (lowercase\r\nLatin letters \"\") in a row, the system considers that the file content\r\ndoes not correspond to the social network topic. In this case, the file\r\nis not sent and an error message is displayed.Determine the minimum\r\nnumber of characters to remove from the file name so after that the name\r\ndoes not contain \"\" as a substring. Print if the file name does not\r\ninitially contain a forbidden substring \"\".You can delete characters in\r\narbitrary positions (not necessarily consecutive). If you delete a\r\ncharacter, then the length of a string is reduced by 1. For example, if\r\nyou delete the character in the position 2 from the string \"\", then the\r\nresulting string is \"\".\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long n,c;\nstring s;\nvector<long long> vec;\n\nint main()\n{\n    cin>>n>>s;\n    for(int i = 0; i<n;++i)\n    {\n        //cout<<c<<' ';\n        if(s[i] == 'x') c++;\n        else\n        {\n            vec.push_back(c);//cout<<c<<' ';\n            c = 0;\n        }\n    }\n    vec.push_back(c);\n    long long res = 0;\n    for(auto i:vec)\n        if(i>=3)\n        res+=i - 2;\n\n    cout<<res;\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. File Name.json",
    "editorial_link": "https://codeforces.com/blog/entry/59430",
    "editorial": "Letâs iterate through the given string from the left to the right. In a\r\nvariable we will store the number of letters \"\" which were before the\r\ncurrent letter in a row. If the current letter does not equal to \"\" we\r\nshould make . In the other case, the current letter equals to \"\". If ,\r\nwe should increase by one. In the other case, we should add one to the\r\nanswer because the current letter should be removed.\r\n",
    "hint": []
}