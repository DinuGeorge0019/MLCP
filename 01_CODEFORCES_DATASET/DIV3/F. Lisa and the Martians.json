{
    "link": "https://codeforces.com//contest/1851/problem/F",
    "problemId": "2115028",
    "problem_idx": "F",
    "shortId": "1851F",
    "contest_number": "1851",
    "problem_submissions": {
        "F": [
            215583047,
            215569492,
            215579077,
            215566307,
            215574419,
            215578454,
            215575870,
            215577530,
            215600568,
            215575641,
            215585936,
            215588041,
            215589152,
            215586581,
            215589298,
            215588709,
            215587486,
            216018365,
            215590568,
            215575574
        ],
        "G": [
            215575283,
            215598343,
            215593159,
            215608828,
            215590713,
            215597061,
            215596537,
            215602648,
            215584695,
            215594862,
            215612719,
            215611638,
            215605638,
            215614880,
            215606881,
            215615959,
            215606526,
            216018381,
            215609478,
            215603760
        ],
        "E": [
            215554147,
            215554902,
            215554482,
            215549142,
            215560459,
            215554036,
            215562257,
            215556727,
            215561636,
            215565663,
            215559271,
            215553466,
            215557917,
            215563847,
            215562734,
            215562948,
            215560103,
            216018352,
            215576817,
            215612963
        ],
        "D": [
            215533409,
            215535460,
            215534208,
            215534687,
            215544754,
            215542789,
            215542369,
            215538307,
            215549445,
            215557571,
            215540094,
            215538955,
            215546789,
            215540331,
            215545020,
            215541882,
            215571406,
            216018332,
            215565562,
            215552208
        ],
        "C": [
            215518745,
            215521123,
            215523873,
            215521189,
            215525356,
            215529106,
            215527649,
            215544242,
            215522653,
            215536104,
            215522716,
            215526033,
            215531440,
            215519368,
            215532583,
            215551484,
            215548134,
            216018314,
            215549325,
            215536690
        ],
        "B": [
            215513234,
            215513521,
            215514166,
            215512941,
            215516397,
            215517695,
            215518324,
            215516319,
            215512960,
            215513498,
            215512779,
            215518016,
            215520983,
            215513367,
            215522456,
            215515383,
            215523869,
            216018292,
            215522857,
            215529428
        ],
        "A": [
            215510383,
            215510586,
            215509986,
            215743464,
            215510085,
            215510245,
            215511678,
            215512593,
            215510630,
            215510455,
            215509888,
            215510070,
            215513854,
            215516572,
            215510721,
            215514161,
            215521066,
            215511827,
            216018280,
            215514844,
            215514533
        ]
    },
    "name": "F. Lisa and the Martians",
    "statement": "Lisa was kidnapped by martians! It okay, because she has watched a lot\r\nof TV shows about aliens, so she knows what awaits her. Let’s call\r\ninteger if it is and 2^k, for example, when k = 12, the numbers 51,\r\n1960, 0 are , and the numbers\r\npi, -1,\r\nfrac{21}{8}, 4096 are not.The aliens will give Lisa n numbers a_1, a_2,\r\nldots, a_n. Then they will ask her to name any number x. After that,\r\nLisa will select a pair of numbers a_i, a_j (i\r\nneq j) in the given sequence and count (a_i\r\noplus x)\r\n& (a_j\r\noplus x). The operation\r\noplus means Bitwise exclusive OR, the operation\r\n& means Bitwise And. For example, (5\r\noplus 17)\r\n& (23\r\noplus 17) = (00101_2\r\noplus 10001_2)\r\n& (10111_2\r\noplus 10001_2) = 10100_2\r\n& 00110_2 = 00100_2 = 4.Lisa is sure that the higher the calculated\r\nvalue, the higher her chances of returning home. Help the girl choose\r\nsuch i, j, x that maximize the calculated value.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"Ofast\",\"inline\",\"-ffast-math\")\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n\n#define int long long\n\nconst int MOD=998244353;\nint n,k;pair<int,int> answer,pt;\npair<int,int> a[200001];\nint get_(int x,int y) {\n   for(int i=0;i<k;++i)\n      if((x>>i)%2==0&&(y>>i)%2==0)\n         x+=(1<<i);\n      else if((x>>i)%2==1&&(y>>i)%2==1) x-=(1<<i);\n   return x;\n}\nvoid Delta() {\n   cin >> n >> k;\n   for(int i=1;i<=n;++i) {\n      cin >> a[i].first;\n      a[i].second=i;\n   }\n   sort(a+1,a+1+n);\n   int mn=2147483647;\n   for(int i=1,v;i<n;++i) {\n      v=a[i].first^a[i+1].first;\n      if(v<mn) {\n         answer={a[i].second,a[i+1].second};\n         pt={a[i].first,a[i+1].first};\n         mn=v;\n      }\n   }\n   cout << answer.first << ' ' << answer.second << ' ' << get_(pt.first,pt.second) << endl;\n}\nsigned main() {\n   ios_base::sync_with_stdio(0);\n   cin.tie(0);cout.tie(0);\n   int T;cin >> T;\n   while(T--) Delta();\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "greedy",
        "math",
        "strings",
        "trees"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F. Lisa and the Martians.json",
    "editorial_link": "https://codeforces.com//blog/entry/118667",
    "editorial": "Letâs use the data structure called a bitwise trie. Fix some , where all\r\nfor have already been added to the trie. We will iterate over the bits\r\nin from the -th bit to the -th bit. Since , if there exists with the\r\nsame bit at the corresponding position in , we will go into that branch\r\nof the trie and append to the corresponding bit . Otherwise, our path is\r\nuniquely determined. When we reach a leaf, the bits on the path will\r\ncorrespond to the optimal number for . The complexity of this solution\r\nis . Sort in non-decreasing order. We will prove that the answer is some\r\npair of adjacent numbers. Let the answer be numbers (). If , then .\r\nOtherwise, they have a common prefix of bits, after which there is a\r\ndiffering bit. That is, at some position , has a and has a . Since , can\r\nhave either or at this position, but in the first case it is more\r\nadvantageous to choose as the answer, and in the second case it is more\r\nadvantageous to choose as the answer. The complexity of this solution is\r\n. The problem can be easily reduced to finding a pair of numbers with\r\nthe minimum . If you donât know about the bitwise trie and the sorting\r\ntrick, such a problem can be solved using AVX instructions. The\r\ncomplexity of this solution is .\r\n",
    "hint": []
}