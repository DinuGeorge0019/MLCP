{
    "link": "https://codeforces.com//contest/1409/problem/D",
    "problemId": "717432",
    "problem_idx": "D",
    "shortId": "1409D",
    "contest_number": "1409",
    "problem_submissions": {
        "F": [
            91841452,
            91841006,
            91847094,
            91849145,
            91853876,
            91853063,
            91844676,
            91826529,
            91863527,
            91862569,
            91861696,
            91867633,
            91863103,
            91860709,
            91861645,
            91851313,
            91859301,
            91874305,
            91863916,
            91868988
        ],
        "E": [
            91827324,
            91839984,
            91836314,
            91835556,
            91831349,
            91852207,
            91886381,
            91857615,
            91843090,
            91845624,
            91838339,
            91851120,
            91837678,
            91852948,
            91866189,
            91853121,
            91849423,
            91856636,
            91853663
        ],
        "D": [
            91824220,
            91828702,
            91829052,
            91826254,
            91834063,
            91852756,
            91824308,
            91834176,
            91832475,
            91841859,
            91848714,
            91840119,
            91835288,
            91844671,
            91837282,
            91846495,
            91838632
        ],
        "C": [
            91818297,
            91820814,
            91822012,
            91821252,
            91820474,
            91823540,
            91825047,
            91828813,
            91828605,
            91824227,
            91820725,
            91829115,
            91823214,
            91824095,
            91821560,
            91823224,
            91828004,
            91829526
        ],
        "B": [
            91812965,
            91813416,
            91816401,
            91808485,
            91814835,
            91816697,
            91810019,
            91810994,
            91822185,
            91815944,
            91811525,
            91819746,
            91813210,
            91817451,
            91814034,
            91810729,
            91815998,
            91816789
        ],
        "A": [
            91801654,
            91804481,
            91803475,
            91801145,
            91812176,
            91802127,
            91801025,
            91800872,
            91805502,
            91801293,
            91801197,
            91802135,
            91802754,
            91805435,
            91802071,
            91800716,
            91803654,
            91812308
        ]
    },
    "name": "D. Decrease the Sum of Digits",
    "statement": "You are given a positive integer n. In one move, you can increase n by\r\none (i.e. make n := n + 1). Your task is to find the minimum number of\r\nmoves you need to perform in order to make the sum of digits of n be\r\nless than or equal to s.You have to answer t independent test cases.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\nconst ll NN = 2e5 + 5;\nll t, n, s;\nint main()\n{\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    cin >> t;\n    while(t--)\n    {\n    \tcin >> n >> s;\n    \tstring z = to_string(n);\n    \tll l = z.length();\n    \tll hz = 0;\n    \tll lst = -1;\n    \tll hzz = 0;\n    \tfor(ll i = 0; i < l; i++)\n    \t{\n    \t\thz += (z[i] - '0');\n    \t\tif(z[i] == '9')\n    \t\t\tcontinue;\n    \t\tif(hz < s)\n    \t\t{\n    \t\t\tlst = i;\n    \t\t}\n    \t}\n    \tif(hz <= s)\n    \t{\n    \t\t\n    \t}\n    \telse\n    \tif(lst == -1)\n    \t{\n    \t\tz = \"1\";\n    \t\tfor(ll i = 0; i < l; i++)\n    \t\t\tz += \"0\";\n    \t}\n    \telse\n    \tif(lst < l)\n    \t{\n    \t\tz[lst]++;\n    \t\tfor(ll i = lst + 1; i < l; i++)\n    \t\t\tz[i] = '0';\n    \t}\n    \tcout << stoll(z) - n<< \"\\n\";\n    }\n}   "
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Decrease the Sum of Digits.json",
    "editorial_link": "https://codeforces.com//blog/entry/82284",
    "editorial": "Firstly, letâs check if the initial fits the conditions. If it is, print\r\nand continue. Otherwise, letâs solve the problem greedily. At first,\r\nletâs try to set the last digit to zero. Let . We need exactly moves to\r\ndo that. Letâs add this number to and to the answer and check if the\r\ncurrent fits the conditions. If it isnât, letâs try to set the previous\r\nlast digit to zero. Let . Then we need moves to do that. Letâs add this\r\nnumber to and to the answer and check if the current fits the\r\nconditions. If it isnât, repeat the same with the third digit and so on.\r\nThis cycle can do no more than iterations. And we can fing the sum of\r\ndigits of in at most iterations too (decimal logarithm of ).So, the\r\ntotal time complexity is .\r\n",
    "hint": []
}