{"link": "https://codeforces.com//contest/1759/problem/F", "problemId": "1648494", "problem_idx": "F", "shortId": "1759F", "contest_number": "1759", "problem_submissions": {"F": [181486431, 181479495, 181489489, 181466769, 181483185, 181500440, 181479543, 181508353, 181496922, 181508604, 181502097, 181497795, 181503761, 181501121, 181501100, 182192682, 181496069, 181511199, 181495619, 181501990, 181512733], "G": [181470898, 181483472, 181480216, 181488242, 181502797, 181484371, 181507280, 181493093, 181484604, 181488245, 181490344, 181510187, 181485442, 181512835, 182192660, 181500575, 181492430, 181509509, 181504672, 181446586, 181490393], "E": [181450176, 181453080, 181473014, 181457235, 181548790, 181548755, 181473778, 181464085, 181473138, 181449179, 181478384, 181476879, 181463313, 181471764, 181473740, 181474544, 181476651, 182192601, 181478540, 181483700, 181477015, 181481741, 181472562], "D": [181443496, 181444277, 181441833, 181437034, 181457789, 181451248, 181439090, 181453349, 181472631, 181466901, 181447966, 181451433, 181466503, 181456985, 182192572, 181463756, 181472096, 181464200, 181477006, 181465670], "C": [181435248, 181438210, 181438160, 181482829, 181440135, 181444414, 181434276, 181441512, 181453016, 181445968, 181476131, 181438815, 181451647, 181444648, 182192589, 181451437, 181447044, 181435084, 181471203, 181450921], "B": [181429291, 181432153, 181430076, 181428597, 181432762, 181432848, 181428082, 181432814, 181439780, 181430739, 181437168, 181430902, 181432277, 181435548, 182192550, 181441779, 181435486, 181429956, 181463543, 181435148], "A": [181427407, 181427808, 181427983, 181427097, 181427278, 181428509, 181430809, 181428221, 181434045, 181429427, 181427311, 181428005, 181429365, 182192516, 181435730, 181429174, 181427774, 181455253, 181429200]}, "name": "F. All Possible Digits", "statement": "A positive number x of length n in base p (2\r\nle p\r\nle 10^9) is written on the blackboard. The number x is given as a\r\nsequence a_1, a_2,\r\ndots, a_n (0\r\nle a_i < p) the digits of x in order from left to right (most\r\nsignificant to least significant).Dmitry is very fond of all the digits\r\nof this number system, so he wants to see each of them at least once.In\r\none operation, he can: take any number x written on the board, increase\r\nit by 1, and write the new value x + 1 on the board. For example, p=5\r\nand x=234_5. Initially, the board contains the digits 2, 3 and 4; Dmitry\r\nincreases the number 234_5 by 1 and writes down the number 240_5. On the\r\nboard there are digits 0, 2, 3, 4; Dmitry increases the number 240_5 by\r\n1 and writes down the number 241_5. Now the board contains all the\r\ndigits from 0 to 4. Your task is to determine the minimum number of\r\noperations required to make all the digits from 0 to p-1 appear on the\r\nboard at least once.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n#include <array>\n\nusing namespace std;\n\ntemplate<class T> void ckmin(T &a, T b) { a = min(a, b); }\ntemplate<class T> void ckmax(T &a, T b) { a = max(a, b); }\n\n#define pb push_back\n#define mp make_pair\n#define cotu cout\n#define itn int\n#define Red ios_base::sync_with_stdio(0);cin.tie(0)\n#define F first\n#define S second\n#define sz(x) (int)x.size()\n#define all(x) (x).begin(), (x).end()\n#define rep(i, n) for(int i = 0; i < n; i++)\n#define repr(i,n) for(int i = n - 1; i >= 0; --i)\n#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)\n#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)\n#define Repr(i, a, n) for(int i = (n); i >= (a); --i)\n#define setp(x) fixed << setprecision(x)\n\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vvi;\n\nconst int inf = int(1e9);\nconst ll INF = ll(1e17);\nconst ll mod = 998244353;\nconst double PI = acos(-1.0);\n\nll bp(ll a, ll n, ll md = mod){\n    ll r = 1;\n    while(n){\n        if(n & 1) r = r * a % md;\n        a = a * a % md;\n        n >>= 1;\n    }\n    return r;\n}\ntemplate<typename T_vector> // neal\nvoid output_vector(const T_vector &v, bool add_one = false, int start = -1, int end = -1) {\n    if (start < 0) start = 0;\n    if (end < 0) end =  int(v.size());\n\n    for (int i = start; i < end; i++)\n        cout << v[i] + (add_one ? 1 : 0) << (i < end - 1 ? ' ' : '\\n');\n}\n\nconst int N = 400400;\nint tree[N * 4];\n\nint get_min(int l, int r, int v, int tl, int tr) {\n    //\u0432\u0430\u0440\u0438\u0430\u043d\u0442 1\n    if (l <= tl && tr <= r) {\n        return tree[v];\n    }\n\n    //\u0432\u0430\u0440\u0438\u0430\u043d\u0442 2\n    if (tr < l || r < tl) {\n        return 0;\n    }\n\n    //\u0432\u0430\u0440\u0438\u0430\u043d\u0442 3\n    int tm = (tl + tr) / 2;\n    return max(get_min(l, r, v * 2 + 1,     tl,     tm),    //\u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u0443\u043c\u043c\u044b.\n               get_min(l, r, v * 2 + 2, tm + 1, tr));\n}\n\nvoid update(int idx, int val, int v, int tl, int tr) {\n    //\u0432\u0430\u0440\u0438\u0430\u043d\u0442 1\n    if (idx <= tl && tr <= idx) {       //\u0422\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 idx == tl == tr\n        tree[v] = val;\n        return;\n    }\n    //\u0432\u0430\u0440\u0438\u0430\u043d\u0442 2\n    if (tr < idx || idx < tl) {\n        return;\n    }\n\n    int tm = (tl + tr) / 2;\n    update(idx, val, v * 2 + 1,     tl,     tm);\n    update(idx, val, v * 2 + 2, tm + 1, tr);\n    tree[v] = max(tree[v * 2 + 1], tree[v * 2 + 2]);    //\u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u0443\u043c\u043c\u044b.\n}\n\nint n, k;\nbool isJoined(vector<pii> p) {\n    int mx = -1;\n    sort(begin(p), end(p));\n//    if(p.empty() || p[0].F != 0) return false;\n    for(auto &i : p) {\n        if(i.F > mx + 1) return false;\n        mx = max(mx, i.S);\n    }\n    return mx == k - 1;\n}\nvoid solve(){\n    cin >> n >> k;\n    int a[n];\n    vector<pii> d;\n    for(int i = 0; i < n; ++i) cin >> a[i], d.pb({a[i], a[i]});\n    int l = 0, r = k - a[n - 1] - 1, ans = -1;\n    while(l <= r) {\n        int m = l + r >> 1;\n        d.pb({a[n - 1], a[n - 1] + m});\n        if(isJoined(d)) {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n        d.pop_back();\n    }\n    if(ans != -1) {\n        cout << ans << endl;\n        return;\n    }\n    int curAns = r + 1;\n    d.pb({0, 0});\n    int x = n - 2;\n    while(x >= 0) {\n        if(a[x] == k - 1) {\n            x--;\n        } else {\n            a[x]++;\n            d.pb({a[x], a[x]});\n            break;\n        }\n    }\n    d.pb({a[n - 1], k - 1});\n    if(x == -1) d.pb({1, 1});\n\n    l = 0, r = k - 1, ans = -1;\n    while(l <= r) {\n        int m = l + r >> 1;\n        d.pb({0, m});\n        if(isJoined(d)) {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n        d.pop_back();\n    }\n    cout << curAns + ans << endl;\n\n\n}\n\nint main()\n{\n    // freopen(\"input.txt\", \"r\", stdin);\n    // freopen(\"output.txt\", \"w\", stdout);\n    Red;\n    int T;\n    T = 1;\n    cin >> T;\n    for(int i = 1; i <= T; ++i){\n        // cout << \"Case #\" << i << \": \";\n        solve();\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["binary search", "data structures", "greedy", "math", "number theory"], "dificulty": "1800", "interactive": false}