{
    "link": "https://codeforces.com//contest/1095/problem/A",
    "problemId": "275101",
    "problem_idx": "A",
    "shortId": "1095A",
    "contest_number": "1095",
    "problem_submissions": {
        "E": [
            47572493,
            47577391,
            47577601,
            47571130,
            47573480,
            47573851,
            47579488,
            47579243,
            47583313,
            47572977,
            47576569,
            47582897,
            47574546,
            47577946,
            47581685,
            47573841,
            47582231,
            47584199,
            47573945,
            47583101
        ],
        "F": [
            47566370,
            47573294,
            47562701,
            47573988,
            47579057,
            47581403,
            47572438,
            47566223,
            47578405,
            47576558,
            47583994,
            47577257,
            47570463,
            47582128,
            47586705,
            47807775,
            47807743,
            47807736,
            47807702,
            47586605,
            47608877,
            47573085,
            47580349,
            47588876,
            47585818
        ],
        "D": [
            47563209,
            47614712,
            47567371,
            47571011,
            47564325,
            47567777,
            47568284,
            47567860,
            47577158,
            47566286,
            47577441,
            47568324,
            47562890,
            47577182,
            47571848,
            47568920,
            47581067,
            47574935,
            47575170,
            47568243,
            47568626
        ],
        "C": [
            47559007,
            47560130,
            47566278,
            47559870,
            47560866,
            47562972,
            47564210,
            47560920,
            47562511,
            47560682,
            47563534,
            47559786,
            51809567,
            47573250,
            47561981,
            47566916,
            47564246,
            47565270,
            47562848,
            47563772,
            47565179
        ],
        "B": [
            47555392,
            47555193,
            47564009,
            47556364,
            47556516,
            47555175,
            47555868,
            47555467,
            47557131,
            47554642,
            47557601,
            47555771,
            47557598,
            47556456,
            47555954,
            47558351,
            47557404,
            47558162,
            47559339,
            47556593
        ],
        "A": [
            47554038,
            47554188,
            47553996,
            47553824,
            47555088,
            47553896,
            47554204,
            47554208,
            47554977,
            47553891,
            47554134,
            47554837,
            47554623,
            47554538,
            47554565,
            47555784,
            47555600,
            47554171,
            47557808,
            47555100
        ]
    },
    "name": "A. Repeating Cipher",
    "statement": "Polycarp loves ciphers. He has invented his own cipher called .Repeating\r\ncipher is used for strings. To encrypt the string s=s_{1}s_{2}\r\ndots s_{m} (1\r\nle m\r\nle 10), Polycarp uses the following algorithm: he writes down s_1 ones,\r\nhe writes down s_2 twice, he writes down s_3 three times, ... he writes\r\ndown s_m m times. For example, if s=\"\" the process is: \"\"\r\nto \"\"\r\nto \"\". So the encrypted s=\"\" is \"\".Given string t the result of\r\nencryption of some string s. Your task is to decrypt it, i. e. find the\r\nstring s.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define disp(x) cout<<x<<\" \";\ntypedef long long ll;\n#define fo(i,a,b) for(int i=a;i<=b;i++)\n#define endl '\\n'\n#define show(x) cout<<x<<endl;\n#define rf(i,a,b) for(int i=a;i>=b;i--) \n#define pret(x) cout<<x<<endl; return 0;\n#define fast_io ios_base::sync_with_stdio(0);\n#define let(x,y) cout<<x<<\" \"<<y<<endl;\ntypedef vector<int> vi;\nll MOD=1e9+7;\nll MAX=9223372036854775807;\n\nint main(){\n\tfast_io;\n\tstring s;\n\tint n;\n\tcin>>n>>s;\n\tint curr=1;\n\tint i=0;\n\twhile(i<n){\n\t\tcout<<s[i];\n\t\ti+=curr;\n\t\tcurr++;\n\t}\t\n\tcout<<endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Repeating Cipher.json",
    "editorial_link": "https://codeforces.com//blog/entry/64130",
    "editorial": "There are many possible approaches in this problem, I will describe one\r\nof the easiest.Let\u00e2\u0080\u0099s print the initial string by the following\r\nalgorithm: firstly, init the variable . Then, while the encrypted string\r\nisn\u00e2\u0080\u0099t empty, print the first character of this string, remove first\r\ncharacters from it and increase by one.\r\n"
}