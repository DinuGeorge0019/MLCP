{
    "link": "https://codeforces.com//contest/1772/problem/D",
    "problemId": "1699971",
    "problem_idx": "D",
    "shortId": "1772D",
    "contest_number": "1772",
    "problem_submissions": {
        "G": [
            185866908,
            185868804,
            185873335,
            185913962,
            185953726,
            185952520,
            186850297,
            186850227
        ],
        "F": [
            185855303,
            185865062,
            185861633,
            185852805,
            185857933,
            185851728,
            185860856,
            185855787,
            185864352,
            185856328,
            185859258,
            185858451,
            185854822,
            185861128,
            185859138,
            185859632,
            185864434,
            185848000
        ],
        "E": [
            185833320,
            185824865,
            185853135,
            185836538,
            185842386,
            185826244,
            185841572,
            185838582,
            185836735,
            185840815,
            185835557,
            185845402,
            185841206,
            185838785,
            185849100,
            185834339,
            185850985,
            185860647
        ],
        "D": [
            185819090,
            185847079,
            185843120,
            185824661,
            185823461,
            185842011,
            185826918,
            185829038,
            185828215,
            185825456,
            185830337,
            185829367,
            185832845,
            185833254,
            185834612,
            216833286,
            185829200,
            185833219,
            185836837
        ],
        "C": [
            185812558,
            185814879,
            185826142,
            185808094,
            185813274,
            185814811,
            185816864,
            185820487,
            185822215,
            185810534,
            185819302,
            185820777,
            185825870,
            185828411,
            185818012,
            185822938,
            185815452,
            185822870
        ],
        "B": [
            185806303,
            185808530,
            185810358,
            185820249,
            185807477,
            185807452,
            185807615,
            185812963,
            185808450,
            185814127,
            185808442,
            185811020,
            185818101,
            185811312,
            185806644,
            185817751,
            185807928,
            185811595
        ],
        "A": [
            185798273,
            185798668,
            185799351,
            185798230,
            185798228,
            185798156,
            185800228,
            185799343,
            185809092,
            185800941,
            185802793,
            185811122,
            185800618,
            185798345,
            185801366,
            185799187,
            185805016
        ]
    },
    "name": "D. Absolute Sorting",
    "statement": "You are given an array a consisting of n integers. The array is sorted\r\nif a_1\r\nle a_2\r\nle\r\ndots\r\nle a_n.You want to make the array a sorted by applying the following\r\noperation : choose an integer x, then for every i\r\nin [1, n], replace a_i by |a_i - x|. Find any value of x that will make\r\nthe array sorted, or report that there is no such value.\r\n",
    "solutions": [
        "/*\nFeeling so sleepy\n*/\n#include <bits/stdc++.h>\n#define ll long long\n#define rep(i,m,n) for (ll i=m;i<=n;i++)\n#define reb(i,m,n) for (ll i=m;i>=n;i--)\n#define rv(i,vt) for (auto i:vt)\n#define ii pair<ll,ll>\n#define vi vector<ll>\n#define F first\n#define S second\n#define pb push_back\n#define sz(v) (int)v.size()\n#define iii tuple<ll,ll,ll>\nusing namespace std;\nconst ll N=1e6+5,mod=1e9+7;\nll n,q,a[N],k,res,l[N],r[N];\nvoid elixprep(){\n    \n}\nvoid elix()\n{\n    cin>>n;\n    rep(i,1,n) cin>>a[i];\n    rep(i,2,n) if (a[i]==a[i-1]) l[i]=r[i]=-1;\n    else if (a[i]>a[i-1]){\n        ll u=a[i],v=a[i-1];\n        ll rs=v;\n        u-=v;\n        rs+=u/2;\n        l[i]=-1;\n        r[i]=rs;\n    }\n    else if (a[i]<a[i-1]){\n        ll u=a[i],v=a[i-1];\n        ll rs=u;\n        v-=u;\n        rs+=(v+1)/2;\n        l[i]=rs;\n        r[i]=-1;\n    }\n    ll L=0,R=1000000000;\n    rep(i,2,n){\n        if (l[i]!=-1) L=max(L,l[i]);\n        if (r[i]!=-1) R=min(R,r[i]);\n    }\n    if (L>R) cout<<-1;\n    else cout<<L;\n}\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll tests=1;\n    cin>>tests;\n    elixprep();\n    while (tests--){\n        elix();\n        cout<<endl;\n}\n    cerr << \"\\n\" << (double)clock() / CLOCKS_PER_SEC * 1000 << \" ms\";\n}\n//listen to trap music. it won't help"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Absolute Sorting.json",
    "editorial_link": "https://codeforces.com//blog/entry/110313",
    "editorial": "What does it actually mean for an array to be sorted? That means and and\r\nso on.For each pair of adajacent elements, let\u00e2\u0080\u0099s deduce which values put\r\nthem in the correct order. Any value of that puts all pairs in the\r\ncorrect order will be the answer.Consider any and and solve the\r\ninequality . If , then any value of works. Let be smaller than .If is\r\nsmaller than or equal to , then the inequality becomes . Thus, they\r\ndon\u00e2\u0080\u0099t change their order, and any works.If is greater than or equal to ,\r\nthen the inequality becomes . Thus, they always change their order, and\r\nnone of work.If is between and , then the inequality becomes . Thus,\r\nthey only remain in the same order for any integer such that .In union,\r\nthat tells us that all values of that work for such a pair are .The\r\nsimilar analysis can be applied to , which results in the required being\r\nfor such pairs.Finally, how to find out if some value of passes all\r\nconditions? Among all conditions of form , in order for some to work, it\r\nshould be less than or equal to even the smallest of them. Similarly,\r\namong all conditions of form , in order for some to work, it should be\r\ngreater than or equal to even the largest of them.Thus, take the minimum\r\nover the pairs of one type. Take the maximum over the pairs of another\r\ntype. If two resulting values are contradictory, then there is no\r\nanswer. Otherwise, any value inside the resulting range of works.Overall\r\ncomplexity: per testcase.\r\n"
}