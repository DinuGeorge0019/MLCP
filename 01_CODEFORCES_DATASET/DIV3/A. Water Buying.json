{"link": "https://codeforces.com//contest/1118/problem/A", "problemId": "300355", "problem_idx": "A", "shortId": "1118A", "contest_number": "1118", "problem_submissions": {"E": [50187972, 50178585, 50177854, 50187885, 50190255, 50191148, 50185548, 50187581, 50187155, 50189680, 50192489, 50176894, 50191143, 50188012, 50189444, 50186952, 50192839, 50194191, 50192878, 50194811, 50194112], "F1": [50184628, 50182187, 50182069, 50185126, 50186144, 50175246, 50268639, 50268627, 50268547, 50268534, 50268507, 50268495, 50268478, 50177703, 50177673, 50189880, 50187751, 50178618, 50180765, 50182959, 50195988, 50179367, 50193234, 50188527, 50175539, 50191073, 50183885, 50182277], "C": [50180516, 50189313, 50189314, 50174569, 50182199, 50186326, 50196284, 50176517, 50179801, 50190327, 50186281, 50179237, 50179193, 50195343, 50178816, 50179289, 50198041, 50178779, 50215543, 50180475, 50179046], "D1": [50173332, 50175414, 50179356, 50180631, 50185124, 50180428, 50182811, 50183080, 50182930, 50182441, 50190772, 50187897, 50183718, 50184678, 50183560, 50184764, 50183014, 50185852, 50188218, 50190752], "D2": [50173254, 50175301, 50179259, 50186552, 50187970, 50180477, 50182733, 50182917, 50182838, 50182532, 50190661, 50187874, 50183954, 50184600, 50183758, 50184505, 50183208, 50185955, 50185683, 50189545, 50190850], "B": [50171883, 50174314, 50178899, 50169507, 50171162, 50173488, 50172475, 50172202, 50172480, 50172037, 50171388, 50171487, 50171892, 50174620, 50175080, 50173570, 50171467, 50173112, 50174638, 50174514], "A": [50167992, 50168657, 50171109, 50166868, 50167018, 50167896, 50168002, 50167192, 50167986, 50168375, 50170469, 50167469, 50167941, 50167556, 50168146, 50168540, 50168781, 50167258, 50168367, 50169680]}, "name": "A. Water Buying", "statement": "Polycarp wants to cook a soup. To do it, he needs to buy exactly n\r\nliters of water.There are only two types of water bottles in the nearby\r\nshop 1-liter bottles and 2-liter bottles. There are infinitely many\r\nbottles of these two types in the shop.The bottle of the first type\r\ncosts a burles and the bottle of the second type costs b burles\r\ncorrespondingly.Polycarp wants to spend as few money as possible. Your\r\ntask is to find the minimum amount of money (in burles) Polycarp needs\r\nto buy exactly n liters of water in the nearby shop if the bottle of the\r\nfirst type costs a burles and the bottle of the second type costs b\r\nburles. You also have to answer q independent queries.\r\n", "solutions": ["#include<bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\nusing namespace std;\n\n// #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\n#define ll long long int\n#define ld long double\n#define pb push_back\n#define mp make_pair\n\nvector <ll> v;\n\nll fep(ll x, ll y, ll mod)\n{ll res=1;while(y>0){if(y&1)res=(res*x)%mod;\n    y=y>>1;x=(x*x)%mod;}return res%mod;}\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\n\tll n,i,j,x,y,a,b,sm=0;\n\tstring s;\n\t\n\tcin >> n;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tcin >> x >> a >> b;\n\t\tif(2*a<b)\n\t\t{\n\t\t\tcout << a*x << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(x%2==1)\n\t\t\tcout << a+(x/2)*b << endl;\n\t\telse\n\t\t\tcout << (x/2)*b << endl;\n\t}\n\t\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "800", "interactive": false}