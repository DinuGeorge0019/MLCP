{
    "link": "https://codeforces.com//contest/1741/problem/E",
    "problemId": "1580861",
    "problem_idx": "E",
    "shortId": "1741E",
    "contest_number": "1741",
    "problem_submissions": {
        "G": [
            175658655,
            175776548,
            175778289,
            175654398,
            175880793,
            175656924,
            175637609,
            175729544,
            176113562
        ],
        "F": [
            175634710,
            175634330,
            175639332,
            175634963,
            175641391,
            175642288,
            175651066,
            175638700,
            175650758,
            175650474,
            175650413,
            175696195,
            175630855,
            175641068,
            175713558,
            175713496,
            175713405,
            175713348,
            175712166,
            175712032,
            175710248,
            175653725,
            188881508,
            175657954,
            175660445,
            175647171
        ],
        "E": [
            175612842,
            175607012,
            175602583,
            175610869,
            175597285,
            175603137,
            175605173,
            175613578,
            175612154,
            175602225,
            175611227,
            175622904,
            175609226,
            175636862,
            175596615,
            175626249,
            175618084,
            175609955,
            175614301,
            175619312
        ],
        "D": [
            175600792,
            175598753,
            175587861,
            175602078,
            175590264,
            175593902,
            175593998,
            175614050,
            175599808,
            175588551,
            175598698,
            175602136,
            175595713,
            175593039,
            175644398,
            175600557,
            175714317,
            175605116,
            175598500,
            175596629,
            175607880
        ],
        "C": [
            175590194,
            175585809,
            175713811,
            175588824,
            175588091,
            175585251,
            175586131,
            175579401,
            175581660,
            175576056,
            175582459,
            175579198,
            175578713,
            175576074,
            175578615,
            175581737,
            175586416,
            175584583,
            175585714,
            175593866
        ],
        "B": [
            175579146,
            175570687,
            175567044,
            175573608,
            175578477,
            175570022,
            175570101,
            175572940,
            175567692,
            175571900,
            175569281,
            175569338,
            175568386,
            175570488,
            175571800,
            175575494,
            175567609,
            175569238,
            175585403
        ],
        "A": [
            175563566,
            175564993,
            175563738,
            175564174,
            175564333,
            175564490,
            175563949,
            175567859,
            175563695,
            175565037,
            175565795,
            175565035,
            175564013,
            175564907,
            175683101,
            175567126,
            175709307,
            175566606,
            175563970,
            175564612,
            175568510
        ]
    },
    "name": "E. Sending a Sequence Over the Network",
    "statement": "The sequence a is sent over the network as follows: sequence a is split\r\ninto segments (each element of the sequence belongs to exactly one\r\nsegment, each segment is a group of consecutive elements of sequence);\r\nfor each segment, its length is written next to it, either to the left\r\nof it or to the right of it; the resulting sequence b is sent over the\r\nnetwork. For example, we needed to send the sequence a = [1, 2, 3, 1, 2,\r\n3]. Suppose it was split into segments as follows: [\r\ncolor{red}{1}] + [\r\ncolor{blue}{2, 3, 1}] + [\r\ncolor{green}{2, 3}]. Then we could have the following sequences: b = [1,\r\ncolor{red}{1}, 3,\r\ncolor{blue}{2, 3, 1},\r\ncolor{green}{2, 3}, 2], b = [\r\ncolor{red}{1}, 1, 3,\r\ncolor{blue}{2, 3, 1}, 2,\r\ncolor{green}{2, 3}], b = [\r\ncolor{red}{1}, 1,\r\ncolor{blue}{2, 3, 1}, 3, 2,\r\ncolor{green}{2, 3}], b = [\r\ncolor{red}{1}, 1,\r\ncolor{blue}{2, 3, 1}, 3,\r\ncolor{green}{2, 3}, 2]. If a different segmentation had been used, the\r\nsent sequence might have been different.The sequence b is given. Could\r\nthe sequence b be sent over the network? In other words, is there such a\r\nsequence a that converting a to send it over the network could result in\r\na sequence b?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define dprintf(...) printf(__VA_ARGS__)\nusing namespace std;\ntypedef long long LL;\n\nvoid solve() {\n  int n; cin >> n;\n  vector<int> b(n);\n  for (int i = 0; i < n; i++) cin >> b[i];\n\n  vector<int> dp(n+1, 0);\n  dp[n] = 1;\n\n  for (int i = n-1; i >= 0; i--) {\n    if (i+1+b[i] <= n) {\n      dp[i] |= dp[i+1+b[i]];\n    }\n    if (i - b[i] >= 0) {\n      dp[i - b[i]] |= dp[i+1];\n    }\n  }\n\n  printf(\"%s\\n\", dp[0] ? \"YES\" : \"NO\");\n}\n\nint main() {\n  ios::sync_with_stdio(false); cin.tie(0);\n\n  int T; cin >> T;\n  for (int cs = 1; cs <= T; cs++) {\n    solve();\n  }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Sending a Sequence Over the Network.json",
    "editorial_link": "https://codeforces.com//blog/entry/107908",
    "editorial": "Letâs introduce the dynamics. if on the prefix the answer is . Then in\r\nthis sequence the numbers corresponding to the sizes of the segments\r\nfrom the partition into subsegments will be called .A number at position\r\nin the sequence , if it is , is either to the right or to the left of\r\nthe segment. If it is to the left of the segment, it can only be\r\ninteresting if . Then . If it is on the right side of the segment, then\r\nif , then . The answer for the whole sequence is if .\r\n",
    "hint": []
}