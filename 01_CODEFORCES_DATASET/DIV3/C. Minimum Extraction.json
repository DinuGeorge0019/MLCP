{
    "link": "https://codeforces.com//contest/1607/problem/C",
    "problemId": "1168760",
    "problem_idx": "C",
    "shortId": "1607C",
    "contest_number": "1607",
    "problem_submissions": {
        "H": [
            134109261,
            134122573,
            134127039,
            134129159,
            134120326,
            134124082,
            134115613,
            134086394,
            222081291
        ],
        "G": [
            134100516,
            134111114,
            134120315,
            134119987,
            134103409,
            134125077,
            134090777,
            134124686,
            134161401,
            134108011,
            134124515,
            134135421,
            134120363,
            134127386,
            134118374
        ],
        "F": [
            134088119,
            134094606,
            134109434,
            134113674,
            134106214,
            134130777,
            134116309,
            134123514,
            134126664,
            134098669,
            134116441,
            138590174,
            134109926,
            134122503,
            134115728,
            134132308
        ],
        "E": [
            134075767,
            134075550,
            134083203,
            134090648,
            134082456,
            134081369,
            134087482,
            134106728,
            134090817,
            134098958,
            134102790,
            134115817,
            134085769,
            134078748,
            138590168,
            134089452,
            134089115,
            134093726,
            134096883,
            134087185,
            134095967,
            134093434
        ],
        "D": [
            134073147,
            134079470,
            134081268,
            134078614,
            134077065,
            134080878,
            134074693,
            134077504,
            134095837,
            134113769,
            134103320,
            134076699,
            134075433,
            138590165,
            134084570,
            134083055,
            134085492,
            134086301,
            134077797,
            134088883,
            134092149
        ],
        "C": [
            134069725,
            134073680,
            134076697,
            134075904,
            134072982,
            134074821,
            134078550,
            134074603,
            134077620,
            134094573,
            134099873,
            134073307,
            134072872,
            138590159,
            134078305,
            134075739,
            134077550,
            134078439,
            134072306,
            134082344,
            134079268
        ],
        "B": [
            134067338,
            134069577,
            134073071,
            134074024,
            134071494,
            134070714,
            134072150,
            134072633,
            134073059,
            134091344,
            134097562,
            134068544,
            134068492,
            138590150,
            134072771,
            134079913,
            134074563,
            134075669,
            134092880,
            134071701,
            134074168
        ],
        "A": [
            134063636,
            134063717,
            134066145,
            134063736,
            134063629,
            134070558,
            134064987,
            134064160,
            134064799,
            134089110,
            134068267,
            134064265,
            134063696,
            138590140,
            134064218,
            134065711,
            134066701,
            134063772,
            134064096,
            134065356,
            134065091
        ]
    },
    "name": "C. Minimum Extraction",
    "statement": "Yelisey has an array a of n integers.If a has length strictly greater\r\nthan 1, then Yelisei can apply an operation called to it: First, Yelisei\r\nfinds the minimal number m in the array. If there are several identical\r\nminima, Yelisey can choose any of them. Then the selected minimal\r\nelement is removed from the array. After that, m is subtracted from each\r\nremaining element. Thus, after each operation, the length of the array\r\nis reduced by 1.For example, if a = [1, 6, -4, -2, -4], then the minimum\r\nelement in it is a_3 = -4, which means that after this operation the\r\narray will be equal to a=[1 {- (-4)}, 6 {- (-4)}, -2 {- (-4)}, -4 {-\r\n(-4)}] = [5, 10, 2, 0].Since Yelisey likes big numbers, he wants the\r\nnumbers in the array a to be as big as possible.Formally speaking, he\r\nwants to make the of the numbers in array a to be (i.e. he want to\r\nmaximize a minimum). To do this, Yelisey can apply the operation to the\r\narray as many times as he wants (possibly, zero). Note that the\r\noperation cannot be applied to an array of length 1.Help him find what\r\nmaximal value can the minimal element of the array have after applying\r\nseveral (possibly, zero) operations to the array.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nint a[450000];\nsigned main(int argc, char** argv) {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tint n;\n\t\tcin >> n;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcin >> a[i];\n\t\tsort(a+1,a+n+1);\n\t\tint ans=-1e18;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tans=max(ans,a[i]-a[i-1]);\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "sortings"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Minimum Extraction.json",
    "editorial_link": "https://codeforces.com//blog/entry/96604",
    "editorial": "Note that the order of numbers in the array does not affect anything. If\r\nyou swap two elements in the original array, the set of elements at each\r\nstep will not change in any way. Letâs sort the original array and\r\ndenote it by .We denote by the state of array after applying operations\r\nof . The minimum element in is , so the elements of array will be equal\r\nto , and therefore the minimum of them will be .Constructing an array ,\r\nwe can notice that its elements are equal to . We know that the elements\r\nof are the difference between corresponding elements of the array and ,\r\nso Thus, the elements of the array are the differences between elements\r\nof starting with third and , the minimum of which is . It is not\r\ndifficult to show in a similar way (for example by induction) that the\r\nelements of are equal to , the minimum of which is .So the \"candidates\"\r\nfor the answer are simply differences of adjacent elements of the array\r\n. Indeed, if we look at , it will undergo changes as follows: . You can\r\nnotice that the minimum elements starting with after the first operation\r\nare exactly , , and , respectively.Thus, to solve the problem, it was\r\nsufficient to sort the array in ascending order, then take the maximum\r\nof the original first element and the differences of all adjacent\r\nelements\r\n",
    "hint": []
}