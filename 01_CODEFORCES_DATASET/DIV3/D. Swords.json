{
    "link": "https://codeforces.com//contest/1216/problem/D",
    "problemId": "416603",
    "problem_idx": "D",
    "shortId": "1216D",
    "contest_number": "1216",
    "problem_submissions": {
        "E2": [
            60986734,
            60981170,
            60997115,
            60985637,
            60997177,
            60997976,
            60992623,
            69195725,
            60998670,
            61247650,
            60997442,
            60997640
        ],
        "E1": [
            60986701,
            60981381,
            60991296,
            60984645,
            60985839,
            60989738,
            60990832,
            60978683,
            60998375,
            60989797,
            60998466,
            60993985,
            60980914,
            60997704,
            60988736,
            60984723,
            60990990,
            60986601
        ],
        "C": [
            60981669,
            60990425,
            60975750,
            60975663,
            61086862,
            60983090,
            60984718,
            61533112,
            60981907,
            60982789,
            60976823,
            60986723,
            61054057,
            60989611,
            60976831,
            60974484,
            60977137,
            60972899,
            60979313
        ],
        "F": [
            60975517,
            60986121,
            60989454,
            61044084,
            60994589,
            60996911,
            60992052,
            60996768,
            60996199,
            60997941,
            61058200,
            60986086,
            60984536
        ],
        "D": [
            60970305,
            60969422,
            60979167,
            60973557,
            60979158,
            60977757,
            60974574,
            60971427,
            60975880,
            60986777,
            60980642,
            60979989,
            60972197,
            60998997,
            60971823,
            60978440,
            60977872,
            60980072,
            60979415,
            60982329
        ],
        "B": [
            60968540,
            60973425,
            60969453,
            60969948,
            60968651,
            60970421,
            60969221,
            60967329,
            60973241,
            60969188,
            60971106,
            60972717,
            61055106,
            60990306,
            60977585,
            60967750,
            60969441,
            60969185,
            60970105,
            60969050
        ],
        "A": [
            60966562,
            60966712,
            60966606,
            60967078,
            60966914,
            60966840,
            60966749,
            60973994,
            60967597,
            60966646,
            60968186,
            60966855,
            61054672,
            60987474,
            60967039,
            60966387,
            60966654,
            60966714,
            60966479,
            60966739
        ]
    },
    "name": "D. Swords",
    "statement": "There were n types of swords in the theater basement which had been used\r\nduring the plays. Moreover there were x swords of each type. y people\r\nhave broken into the theater basement and each of them has taken exactly\r\nz swords of some . Note that different people might have taken different\r\ntypes of swords. Note that the values x, y and z are unknown for you.The\r\nnext morning the director of the theater discovers the loss. He counts\r\nall swords exactly a_i swords of the i-th type are left untouched.The\r\ndirector has no clue about the initial number of swords of each type in\r\nthe basement, the number of people who have broken into the basement and\r\nhow many swords each of them have taken.For example, if n=3, a = [3, 12,\r\n6] then one of the possible situations is x=12, y=5 and z=3. Then the\r\nfirst three people took swords of the first type and the other two\r\npeople took swords of the third type. Note that you don\u2019t know values x,\r\ny and z beforehand but know values of n and a.Thus he seeks for your\r\nhelp. Determine the number of people y, which could have broken into the\r\ntheater basement, and the number of swords z each of them has taken.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 2e5 + 10;\nint a[N];\n\nint gcd(int A, int B) {\n  return B ? gcd(B, A % B) : A;\n}\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  ll sum = 0;\n  int maxn = 0;\n  for(int i = 1; i <= n; ++i) {  \n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n    maxn = max(maxn, a[i]);\n  }\n  int pos = 0;\n  for(int i = 1; i <= n; ++i) {\n    pos = gcd(pos, maxn - a[i]);\n  }\n  printf(\"%lld %d\\n\", (1ll * maxn * n - sum) / pos, pos);\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Swords.json",
    "editorial_link": "https://codeforces.com//blog/entry/69954",
    "editorial": "Firstly, let\u00e2\u0080\u0099s notice that for the fixed value of our problem is reduced\r\nto the following: we are given numbers . We need to choose such values\r\nthat . And among all such values we need to choose values in a way to\r\nminimize . And the sum of is ! Of course, for the fixed value the\r\nminimum sum of can be only one.Let\u00e2\u0080\u0099s start with . It is obvious that if\r\nthe maximum value in the array is the value equals (for ). Assume that\r\neach from to has some divisor . Then if we multiply by and divide each\r\nby the answer will only become better. How to calculate this value of\r\nfast? We can see that this value equals to ! And it can be proven that\r\nthis value of is always optimal and we can easily determine for such\r\n.Time complexity: .\r\n"
}