{"link": "https://codeforces.com//contest/1311/problem/F", "problemId": "547481", "problem_idx": "F", "shortId": "1311F", "contest_number": "1311", "problem_submissions": {"E": [71808916, 71808599, 93123368, 71844658, 71866557, 71838628, 71799873], "F": [71796868, 71806217, 71793472, 71796876, 71799840, 71794628, 71797683, 71798778, 71801869, 71798514, 71800897, 71799483, 71790429, 71801970, 71792412, 71808363, 71786195, 71809262, 71804250, 71795148, 71802574], "D": [71789526, 71792384, 71787369, 71788637, 71807660, 71784383, 71788643, 71785457, 71791043, 71788249, 71788689, 71786913, 71784594, 71790030, 71782423, 71790272, 71801279, 71813581, 71789490, 71790803, 71785471, 71796175], "C": [71780601, 71787244, 71778720, 71777956, 71779055, 71778652, 71779823, 71780370, 71778687, 71783497, 71778399, 71780701, 71778150, 71779429, 71783732, 71786917, 71780561, 71786514, 71779237, 71783097], "B": [71777211, 71782922, 71775982, 71774247, 71774556, 71775523, 71776728, 71774631, 71774172, 71777830, 71773973, 71777033, 71796675, 71772169, 71780446, 71783294, 71775698, 71782264, 71797768, 71775685], "A": [71772411, 71773163, 71770634, 71770076, 71770517, 71771510, 71769980, 71769842, 71770112, 71771016, 71769997, 71771281, 71773789, 71770312, 71772059, 71777686, 71771553, 71771635, 71774048, 71770666]}, "name": "F. Moving Points", "statement": "There are n points on a coordinate axis OX. The i-th point is located at\r\nthe integer point x_i and has a speed v_i. It is guaranteed that no two\r\npoints occupy the same coordinate. All n points move with the constant\r\nspeed, the coordinate of the i-th point at the moment t (t ) is\r\ncalculated as x_i + t\r\ncdot v_i.Consider two points i and j. Let d(i, j) be the minimum\r\npossible distance between these two points over any possible moments of\r\ntime (even ). It means that if two points i and j coincide at some\r\nmoment, the value d(i, j) will be 0.Your task is to calculate the value\r\nsum\r\nlimits_{1\r\nle i < j\r\nle n} d(i, j) (the sum of minimum distances over all pairs of points).\r\n", "solutions": ["#include <cstdio>\n#include <algorithm>\nusing namespace std;\npair<int,int> p[200005];\nint d1[200005],d2[200005];\nlong long BIT1[200005],BIT2[200005],BITcnt1[200005],BITcnt2[200005];\nint lowbit(int x)\n{\n    return x&(-x);\n}\nvoid update(long long* BIT,int x,long long d)\n{\n    while(x<=200004)\n    {\n        BIT[x]+=d;\n        x+=lowbit(x);\n    }\n}\nlong long query(long long* BIT,int x)\n{\n    long long ret=0;\n    while(x)\n    {\n        ret+=BIT[x];\n        x-=lowbit(x);\n    }\n    return ret;\n}\nint main()\n{\n    int n,cnt1,cnt2;\n    long long ans;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&p[i].first);\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&p[i].second);\n    sort(p,p+n);\n    cnt1=0;\n    cnt2=0;\n    for(int i=0;i<n;i++)\n        if(p[i].second>=0)\n            d1[cnt1++]=p[i].second;\n        else d2[cnt2++]=-p[i].second;\n    sort(d1,d1+cnt1);\n    sort(d2,d2+cnt2);\n    cnt1=unique(d1,d1+cnt1)-d1;\n    cnt2=unique(d2,d2+cnt2)-d2;\n    ans=0;\n    for(int i=n-1;i>=0;i--)\n    {\n        if(p[i].second>=0)\n        {\n            ans+=(query(BIT1,cnt1)-query(BIT1,lower_bound(d1,d1+cnt1,p[i].second)-d1))-(query(BITcnt1,cnt1)-query(BITcnt1,lower_bound(d1,d1+cnt1,p[i].second)-d1))*p[i].first;\n            update(BIT1,lower_bound(d1,d1+cnt1,p[i].second)-d1+1,p[i].first);\n            update(BITcnt1,lower_bound(d1,d1+cnt1,p[i].second)-d1+1,1);\n        }\n        else\n        {\n            ans+=query(BIT2,lower_bound(d2,d2+cnt2,-p[i].second)-d2+1)-query(BITcnt2,lower_bound(d2,d2+cnt2,-p[i].second)-d2+1)*p[i].first;\n            ans+=query(BIT1,cnt1)-query(BITcnt1,cnt1)*p[i].first;\n            update(BIT2,lower_bound(d2,d2+cnt2,-p[i].second)-d2+1,p[i].first);\n            update(BITcnt2,lower_bound(d2,d2+cnt2,-p[i].second)-d2+1,1);\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "dificulty": "1900", "interactive": false}