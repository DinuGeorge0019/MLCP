{
    "link": "https://codeforces.com//contest/1772/problem/E",
    "problemId": "1699972",
    "problem_idx": "E",
    "shortId": "1772E",
    "contest_number": "1772",
    "problem_submissions": {
        "G": [
            185866908,
            185868804,
            185873335,
            185913962,
            185953726,
            185952520,
            186850297,
            186850227
        ],
        "F": [
            185855303,
            185865062,
            185861633,
            185852805,
            185857933,
            185851728,
            185860856,
            185855787,
            185864352,
            185856328,
            185859258,
            185858451,
            185854822,
            185861128,
            185859138,
            185859632,
            185864434,
            185848000
        ],
        "E": [
            185833320,
            185824865,
            185853135,
            185836538,
            185842386,
            185826244,
            185841572,
            185838582,
            185836735,
            185840815,
            185835557,
            185845402,
            185841206,
            185838785,
            185849100,
            185834339,
            185850985,
            185860647
        ],
        "D": [
            185819090,
            185847079,
            185843120,
            185824661,
            185823461,
            185842011,
            185826918,
            185829038,
            185828215,
            185825456,
            185830337,
            185829367,
            185832845,
            185833254,
            185834612,
            216833286,
            185829200,
            185833219,
            185836837
        ],
        "C": [
            185812558,
            185814879,
            185826142,
            185808094,
            185813274,
            185814811,
            185816864,
            185820487,
            185822215,
            185810534,
            185819302,
            185820777,
            185825870,
            185828411,
            185818012,
            185822938,
            185815452,
            185822870
        ],
        "B": [
            185806303,
            185808530,
            185810358,
            185820249,
            185807477,
            185807452,
            185807615,
            185812963,
            185808450,
            185814127,
            185808442,
            185811020,
            185818101,
            185811312,
            185806644,
            185817751,
            185807928,
            185811595
        ],
        "A": [
            185798273,
            185798668,
            185799351,
            185798230,
            185798228,
            185798156,
            185800228,
            185799343,
            185809092,
            185800941,
            185802793,
            185811122,
            185800618,
            185798345,
            185801366,
            185799187,
            185805016
        ]
    },
    "name": "E. Permutation Game",
    "statement": "Two players are playing a game. They have a permutation of integers 1,\r\n2, ..., n (a permutation is an array where each element from 1 to n\r\noccurs exactly once). The permutation is not sorted in either ascending\r\nor descending order (i. e. the permutation does not have the form [1, 2,\r\ndots, n] or [n, n-1,\r\ndots, 1]).Initially, all elements of the permutation are colored red.\r\nThe players take turns. On their turn, the player can do one of three\r\nactions: rearrange the elements of the permutation in such a way that\r\nall elements keep their positions (note that elements can be swapped\r\nwith each other, but it’s not obligatory); change the color of one red\r\nelement to blue; skip the turn. The first player wins if the permutation\r\nis sorted in ascending order (i. e. it becomes [1, 2,\r\ndots, n]). The second player wins if the permutation is sorted in\r\ndescending order (i. e. it becomes [n, n-1,\r\ndots, 1]). If the game lasts for 100^{500} turns and nobody wins, it\r\nends in a draw.Your task is to determine the result of the game if both\r\nplayers play optimally.\r\n",
    "solutions": [
        "/*\nFeeling so sleepy\n*/\n#include <bits/stdc++.h>\n#define ll long long\n#define rep(i,m,n) for (ll i=m;i<=n;i++)\n#define reb(i,m,n) for (ll i=m;i>=n;i--)\n#define rv(i,vt) for (auto i:vt)\n#define ii pair<ll,ll>\n#define vi vector<ll>\n#define F first\n#define S second\n#define pb push_back\n#define sz(v) (int)v.size()\n#define iii tuple<ll,ll,ll>\nusing namespace std;\nconst ll N=1e6+5,mod=1e9+7;\nll n,a[N],la,lb,lmx;\nvoid elixprep(){\n    \n}\nvoid elix()\n{\n    cin>>n;\n    la=lb=lmx=0;\n    rep(i,1,n){\n        cin>>a[i];\n        if (a[i]!=i && a[i]!=(n-i+1)) lmx++;\n        else if (a[i]!=i) la++;\n        else if (a[i]!=(n-i+1)) lb++;\n    }\n    bool ok=0;\n    while (la!=0 || lb!=0){\n        if (ok==0){\n            if (la!=0) la--;\n            else if (lb!=0) lmx--;\n            if (la==0 && lmx==0){\n                cout<<\"First\";\n                return;\n            }\n        }\n        else{\n            {\n            if (lb!=0) lb--;\n            else if (la!=0) lmx--;\n            if (lb==0 && lmx==0){\n                cout<<\"Second\";\n                return;\n            }\n            }\n        }\n        ok^=1;\n    }\n    cout<<\"Tie\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll tests=1;\n    cin>>tests;\n    elixprep();\n    while (tests--){\n        elix();\n        cout<<endl;\n}\n    cerr << \"\\n\" << (double)clock() / CLOCKS_PER_SEC * 1000 << \" ms\";\n}\n//listen to trap music. it won't help"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Permutation Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/110313",
    "editorial": "Note that it makes no sense to use the first type of operation if it\r\ndoes not lead to an instant win, because the opponent can return the\r\nprevious state of the array with their next move.So the winner is the\r\none who has time to color \"their\" elements in blue first. Letâs denote\r\nas the number of elements that only the first player needs to color, as\r\nthe number of elements only the second player needs to color, both\r\nplayers needs to color.To win, the first player needs to have time to\r\npaint elements, and they have no more than moves to do it, because\r\notherwise the second player can prevent the win of the first player. So\r\nthe winning condition for the first player is . Similarly, for the\r\nsecond player, with the only difference that they have move less\r\n(because they go second), which means the condition is . If none of\r\nthese conditions are met, then neither player has a winning strategy,\r\nwhich means they will both reduce the game to a draw.\r\n",
    "hint": []
}