{
    "link": "https://codeforces.com//contest/1619/problem/C",
    "problemId": "1234624",
    "problem_idx": "C",
    "shortId": "1619C",
    "contest_number": "1619",
    "problem_submissions": {
        "G": [
            140078255,
            140073592,
            140089436,
            140078390,
            140089746,
            140079476,
            145924145,
            151265654,
            141670945,
            140147260
        ],
        "F": [
            140065181,
            140063048,
            140076024,
            140070362,
            140081694,
            140073270,
            140077189,
            140077988,
            140079343,
            140077681,
            140080239,
            140066442,
            140086181,
            140083843,
            140081135,
            140087882,
            140074406,
            140085836
        ],
        "E": [
            140056688,
            140034731,
            140064173,
            140064735,
            140063371,
            140067175,
            140068525,
            140064758,
            140060381,
            140065082,
            140053212,
            140051892,
            140072728,
            140067484,
            140070209,
            140073990,
            140083979,
            140064170
        ],
        "D": [
            140049695,
            140056611,
            140052445,
            140059443,
            140054727,
            140062375,
            140050362,
            140046453,
            140049546,
            140054923,
            140069697,
            140074223,
            140057739,
            140070163,
            140060824,
            140054342,
            140053714,
            140047137
        ],
        "C": [
            140041270,
            140047619,
            140037577,
            140053359,
            140066154,
            140055677,
            140034474,
            140041067,
            140041491,
            140044199,
            140042854,
            140041981,
            140038481,
            140037319,
            140043801,
            140042895,
            140046624,
            140037654
        ],
        "B": [
            140028867,
            140058223,
            140027097,
            140049372,
            140023898,
            140046113,
            140024005,
            140028515,
            140025918,
            140030098,
            140028524,
            140024247,
            140024021,
            140025866,
            140024580,
            140024963,
            140030726,
            140023456
        ],
        "A": [
            140018513,
            140037253,
            140018425,
            140048050,
            140017040,
            140043315,
            140017477,
            140024037,
            140017841,
            140019535,
            140020013,
            143793925,
            140020824,
            140018421,
            140017149,
            140018606,
            140017171,
            140021392,
            140017164
        ],
        "H": [
            140381628,
            140278376
        ]
    },
    "name": "C. Wrong Addition",
    "statement": "Tanya is learning how to add numbers, but so far she is not doing it\r\ncorrectly. She is adding two numbers a and b using the following\r\nalgorithm: If one of the numbers is shorter than the other, Tanya adds\r\nleading zeros so that the numbers are the same length. The numbers are\r\nprocessed from right to left (that is, from the least significant digits\r\nto the most significant). In the first step, she adds the last digit of\r\na to the last digit of b and writes their sum in the answer. At each\r\nnext step, she performs the same operation on each pair of digits in the\r\nsame place and writes the result to the side of the answer. For example,\r\nthe numbers a = 17236 and b = 3465 Tanya adds up as follows:\r\nlarge{\r\nbegin{array}{r} +\r\nbegin{array}{r} 17236\r\n03465\r\nend{array}\r\nhline\r\nbegin{array}{r} 1106911\r\nend{array}\r\nend{array}} calculates the sum of 6 + 5 = 11 and writes 11 in the\r\nanswer. calculates the sum of 3 + 6 = 9 and writes the result to the\r\nleft side of the answer to get 911. calculates the sum of 2 + 4 = 6 and\r\nwrites the result to the left side of the answer to get 6911. calculates\r\nthe sum of 7 + 3 = 10, and writes the result to the left side of the\r\nanswer to get 106911. calculates the sum of 1 + 0 = 1 and writes the\r\nresult to the left side of the answer and get 1106911. As a result, she\r\ngets 1106911.You are given two positive integers a and s. Find the\r\nnumber b such that by adding a and b as described above, Tanya will get\r\ns. Or determine that no suitable b exists.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nifstream fin(\"AAtest.in.txt\");\nll t,a,s,b;\n\nll rek(ll a,ll s){\n    if(s){\n        ll b;\n        ll va=a%10, vs=s%10;\n        a/=10; s/=10;\n        //cout<<va<<\" \"<<vs<<\" \"<<a<<\" \"<<s<<\"\\n\";\n        if(vs>=va){\n            b=rek(a,s);\n            if(b!=-1){\n                b*=10;\n                b+=vs-va;\n                return b;\n            }\n        }\n        if(s%10==1 && vs<va && (a<=s/10)){\n            b=rek(a,s/10);\n            if(b!=-1){\n                b*=10;\n                b+=vs-va+10;\n                return b;\n            }\n        }\n        return -1;\n    }\n    else return 0;\n}\n\nint main(){\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cerr.tie(0);\n    cin>>t;\n    while(t--){\n        cin>>a>>s;\n        b=rek(a,s);\n        cout<<b<<\"\\n\";\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Wrong Addition.json",
    "editorial_link": "https://codeforces.com//blog/entry/98159",
    "editorial": "Let\u00e2\u0080\u0099s compute the answer to the array , where is the digit at the\r\nposition in the number we are looking for. Let be the position of the\r\nlast digit in number , be the position of the last digit in number .\r\nThen denote , , and consider the cases: if , then the sum of was exactly\r\n, then . if , then the sum was greater than and we need to look at the\r\nnext digit of the number . If there isn\u00e2\u0080\u0099t one, we can\u00e2\u0080\u0099t get the answer\r\nwe\u00e2\u0080\u0099ll output . Otherwise we recalculate and reduce by one. if now and ,\r\nthen . Otherwise, we deduce , since we cannot get more than when adding\r\ntwo digits, and the cases where have already been considered before.\r\nAfter considering the cases, reduce and by one and repeat the checks as\r\nlong as or . In the situation where , but , we will still have uncheked\r\ndigits of number , so we will also output . Otherwise, we output an\r\narray with the answer without leading zeros.\r\n"
}