{"link": "https://codeforces.com//contest/1833/problem/C", "problemId": "1929816", "problem_idx": "C", "shortId": "1833C", "contest_number": "1833", "problem_submissions": {"F": [206599548, 206499044, 206510645, 206497958, 206917535, 206498356, 206512969, 206501833, 206507754, 206504303, 206775083, 206513772, 206514120, 206515332, 206518320, 206514205, 206521502, 206515630, 206524274, 206520741, 206520948, 206526178, 206521131], "G": [206512331, 206521465, 206506545, 206477170, 206519573, 206523410, 206530322, 206518526, 206777759, 206531078, 206532207, 206527389, 206532553, 206535240, 206530738, 206539901, 206510414, 206533541, 209018213, 206536054, 206538842, 206866462, 206539276], "E": [206494444, 206500619, 206508800, 206912480, 206752261, 206508820, 206500946, 206513913, 206499318, 206515052, 206776677, 206501077, 206501029, 206508081, 206504803, 206505276, 206514758, 206507981, 206532142, 206514436, 206505945, 206510447, 206508190], "D": [206478490, 206489393, 206482509, 206516497, 206493139, 206494430, 206493405, 206772261, 206483249, 206490999, 206496792, 206494490, 206495499, 206492096, 206495671, 206562276, 206493504, 206494409, 206497119, 206489160, 206496422], "C": [206468900, 206472444, 206487689, 206481281, 206470369, 206469924, 206472556, 206474926, 206470601, 206467341, 206478011, 206475881, 206470693, 206472518, 206472870, 206562261, 206473668, 206473209, 206471774, 206472820, 206477277], "B": [206461337, 206465386, 206481088, 206469699, 206465480, 206464242, 206462159, 206470246, 206468314, 206462993, 206468820, 206467031, 206466013, 206465802, 206464804, 206466201, 206465451, 206463520, 206466366, 206465332], "A": [206458073, 206459090, 206464738, 206461735, 206459482, 206458188, 206458127, 206458669, 206459064, 206459476, 206460428, 206459198, 206458554, 206458909, 206458986, 206459453, 206458429, 206458492, 206458602]}, "name": "C. Vlad Building Beautiful Array", "statement": "Vlad was given an array a of n positive integers. Now he wants to build\r\na array b of length n from it.Vlad considers an array if all the numbers\r\nin it are positive and have the same parity. That is, all numbers in the\r\narray are than zero and are either all even or all odd.To build the\r\narray b, Vlad can assign each b_i either the value a_i or a_i - a_j,\r\nwhere any j from 1 to n can be chosen.To avoid trying to do the\r\nimpossible, Vlad asks you to determine whether it is possible to build a\r\narray b of length n using his array a.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nvoid solve() {\n    int n;\n    std::cin >> n;\n    std::vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> a[i];\n    }\n    std::sort(a.begin(), a.end());\n    a.resize(std::unique(a.begin(), a.end()) - a.begin());\n    n = (int) a.size();\n    std::vector<bool> ok(2, false);\n    std::vector t(n, std::vector<bool>(2, false));\n    for (int i = 0; i < n; i++) {\n        int x = a[i] & 1;\n        t[i][x] = true;\n        if (ok[1]) {\n            t[i][x ^ 1] = true;\n        }\n        ok[x] = true;\n    }\n    std::vector<int> cnt(2, 0);\n    for (auto x : t) {\n        cnt[0] += x[0];\n        cnt[1] += x[1];\n    }\n    if (cnt[0] == n || cnt[1] == n) {\n        std::cout << \"Yes\" << \"\\n\";\n    } else {\n        std::cout << \"No\" << \"\\n\";\n    }\n}\n\nsigned main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n \n    int t = 1;\n    std::cin >> t;\n \n    while (t--) {\n        solve();\n    }\n}"], "input": "", "output": "", "tags": ["greedy", "math"], "dificulty": "800", "interactive": false}