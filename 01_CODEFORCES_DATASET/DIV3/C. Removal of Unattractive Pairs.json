{"link": "https://codeforces.com//contest/1907/problem/C", "problemId": "2365624", "problem_idx": "C", "shortId": "1907C", "contest_number": "1907", "problem_submissions": {"E": [235922096, 235913995, 235900143, 235903340, 235921667, 235901704, 235905781, 236028309, 235900905, 235914797, 235900953, 235904410, 235901939, 235904392, 235896353, 235889597, 235895501, 235901631, 235906746, 235904536], "G": [235905776, 235944172, 240754131, 236224108, 239539892], "D": [235889060, 235907893, 235885826, 235889907, 235880968, 235891188, 235887305, 235888897, 235891138, 235883950, 235891896, 235891023, 235886777, 235889881, 237694958, 235867800, 235908732, 235892927, 235897779, 235896975], "F": [235888366, 235927475, 235911089, 235918673, 235897756, 235921167, 235919938, 235923351, 235911206, 235921824, 235923367, 235927696, 235932260, 235934792, 235914612, 235925488, 235926925, 235918432, 235922859], "C": [235881778, 235895243, 235879309, 235877991, 235891348, 235879417, 235877691, 235876696, 235876979, 235890394, 235881961, 235879314, 235876924, 235882981, 236028314, 235898937, 235877137, 235881599, 235886820, 235888590], "B": [235864949, 235883426, 235872876, 235865746, 235868017, 235866431, 235870498, 236028285, 235870319, 235871004, 235871121, 235872127, 235871434, 235867930, 235865841, 235901960, 235870212, 235875746, 235875948, 235874656], "A": [235860107, 235867323, 235860491, 235859890, 235861006, 235859799, 235860028, 235860311, 235859823, 235863201, 235863210, 235860674, 236211486, 235860837, 235860015, 235864893, 235860651, 235867283, 235865532, 235861983]}, "name": "C. Removal of Unattractive Pairs", "statement": "Vlad found a string s consisting of n lowercase Latin letters, and he\r\nwants to make it as short as possible.To do this, he can remove pair of\r\nadjacent characters from s any number of times, provided they are . For\r\nexample, if s=, then by removing one pair of characters he can obtain\r\nthe strings , , , and , but he cannot obtain (because the removed\r\nletters were the same) or (because the removed letters were not\r\nadjacent).What is the minimum length Vlad can achieve by applying any\r\nnumber of deletions?\r\n", "solutions": ["#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<map>\n#include<array>\n#include<set>\n#include<map>\n#include<queue>\n#include<iomanip>\n#include<numeric>\nusing namespace std;\nint cnt[26];\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0), cout.tie(0);\n\tint t;\n\tcin >> t;\n\tfor (; t--;) {\n\t\tint n;\n\t\tstring s;\n\t\tcin >> n >> s;\n\t\tfor (int i = 0; i ^ 26; ++i)\n\t\t\tcnt[i] = 0;\n\t\tfor (int i = 0; i ^ n; ++i)\n\t\t\t++cnt[s[i] - 'a'];\n\t\tpriority_queue<int>q;\n\t\tfor (int i = 0; i ^ 26; ++i) {\n\t\t\tif (cnt[i])\n\t\t\t\tq.emplace(cnt[i]);\n\t\t}\n\t\tfor (; q.size() > 1;) {\n\t\t\tint u = q.top();\n\t\t\tq.pop();\n\t\t\tint v = q.top();\n\t\t\tq.pop();\n\t\t\tif (--u)\n\t\t\t\tq.emplace(u);\n\t\t\tif (--v)\n\t\t\t\tq.emplace(v);\n\t\t}\n\t\tcout << (q.size() ? q.top() : 0) << '\\n';\n\t}\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "math", "strings"], "dificulty": "1200", "interactive": false}