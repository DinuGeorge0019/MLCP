{
    "link": "https://codeforces.com//contest/1744/problem/E1",
    "problemId": "1588810",
    "problem_idx": "E1",
    "shortId": "1744E1",
    "contest_number": "1744",
    "problem_submissions": {
        "F": [
            176553227,
            176553544,
            176566357,
            176560159,
            176546102,
            176578517,
            176584245,
            176547600,
            176565814,
            176583243,
            176570293,
            176568891,
            176580658,
            176549125,
            176552417
        ],
        "E2": [
            176537039,
            176543155,
            176544098,
            176552866,
            176557487,
            176561438,
            176571338,
            176588976,
            176584430,
            176552304,
            176570770,
            176580914,
            176566759,
            176538612,
            176549104,
            176542275,
            176597567,
            176547159
        ],
        "E1": [
            176523424,
            176527685,
            176528090,
            176524133,
            176549768,
            176542439,
            176540904,
            176551294,
            176537989,
            176588085,
            176549982,
            176562357,
            176580820,
            176565848,
            176529066,
            176530377,
            176532213,
            176534352,
            176532004,
            176541146
        ],
        "D": [
            176517006,
            176523243,
            176521839,
            176520437,
            176527121,
            176527329,
            176532848,
            176530724,
            176509817,
            176532455,
            176530899,
            176528083,
            176525625,
            176540526,
            176519966,
            176526382,
            176517877,
            176524396,
            176521192,
            176681646,
            176520869
        ],
        "C": [
            176513410,
            176510113,
            176517214,
            176516278,
            176522404,
            176518415,
            176520721,
            176522857,
            176528070,
            176508309,
            176517716,
            176518546,
            176530395,
            176509852,
            176512457,
            176513429,
            176518278,
            176517008,
            176516387
        ],
        "B": [
            176508945,
            176505988,
            176509682,
            176510843,
            176515767,
            176510929,
            176512338,
            176516029,
            176510777,
            176510381,
            176514031,
            176513353,
            176516140,
            176505686,
            176508808,
            176509484,
            176509527,
            176511738,
            176510683
        ],
        "A": [
            176504550,
            176503461,
            176503689,
            176506263,
            176508578,
            176504919,
            176506102,
            176511212,
            176505675,
            176504917,
            176508718,
            176507229,
            176505489,
            176503181,
            176503369,
            176503975,
            176503284,
            176505909,
            176504558
        ]
    },
    "name": "E1. Divisible Numbers  easy version ",
    "statement": "You are given 4 positive integers a, b, c, d with a < c and b < d. Find\r\nany pair of numbers x and y that satisfies the following conditions: a <\r\nx\r\nleq c, b < y\r\nleq d, x\r\ncdot y is divisible by a\r\ncdot b.Note that required x and y may not exist.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nint t;\nlong long a,b,c,d,e,g,r;\n\nint main(){\n\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin>>t;\n    for(int i=1;i<=t;i++){\n        cin>>a>>b>>c>>d;\n        for(long long f=a+1;f<=c;f++){\n            e=__gcd(a*b,f);\n            g=a*b/e;\n            r=b/g+1;\n            if(g*r<=d){\n                cout<<f<<\" \"<<g*r<<\"\\n\";\n                break;\n            }else if(f==c){\n                cout<<-1<<\" \"<<-1<<\"\\n\";\n            }\n        }\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E1. Divisible Numbers  easy version .json",
    "editorial_link": "https://codeforces.com//blog/entry/108101",
    "editorial": "Let's look at the slow solution first, which will lead us to the full one. Let's iterate over the number x\n from a+1\n to c\n.\n\nGiven a number x\n, we want to find a y\n from b+1\n to d\n such that x?y\n is divisible by a?b\n. Since x?y\n must be divisible by a?b\n, the following conclusion can be drawn: y\n must be divisible by a?bgcd(a?b,x)\n. Let's denote this number as s\n. Now our task is to check if there is a multiple of s\n between b+1\n and d\n. The problem can be solved in many ways, you can simply consider the largest multiple of s\n that does not exceed d\n \u0097 it is equal to ?ds??s\n We compare this number with b+1\n, and if it matches, then we have found a suitable pair.\n\nNow let's note that we do not need to iterate over all the values ??of x\n, because from the number x\n we are only interested in gcd(x,a?b)\n \u0097 and this is one of the divisors of a?b\n!\n\nEven though the product a?b\n can be large, we can still consider all divisors of this number, since a\n and b\n themselves are up to 109\n. Let's find the divisors of a\n and b\n separately, then notice that any divisor of a?b\n \u0097 is a??b?\n, where a?\n \u0097 is some divisor a\n, and b?\n \u0097 is some divisor b\n.\n\nLet's calculate the running time. We need to factorize the numbers a\n and b\n into prime factors, this can be done in O(a???)\n. Next, you need to iterate over pairs of divisors a\n and b\n. Recall the estimate for the number of divisors of a number (https://oeis.org/A066150): the number x\n up to 109\n has no more than 1344\n divisors. Therefore, we can sort through the pairs for 13442\n. We learned how to find the optimal y\n for O(1)\n. We get that for each test case we have learned to solve the problem in O(a???+(13442))\n."
}