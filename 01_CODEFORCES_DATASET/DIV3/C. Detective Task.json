{
    "link": "https://codeforces.com//contest/1675/problem/C",
    "problemId": "1389920",
    "problem_idx": "C",
    "shortId": "1675C",
    "contest_number": "1675",
    "problem_submissions": {
        "G": [
            156006050,
            156007549,
            173914008,
            156574492,
            156062725,
            156044046
        ],
        "F": [
            155975284,
            155982189,
            155975181,
            155974056,
            155981368,
            155963854,
            155982839,
            155978540,
            155977742,
            155982621,
            155974644,
            155983326,
            155979741,
            155983593,
            155987528,
            155986330,
            155979073,
            155983357,
            155982704,
            155980054
        ],
        "B": [
            155956678,
            155933030,
            155935424,
            155929465,
            155930941,
            155933422,
            155931092,
            155933639,
            155934497,
            155933616,
            155938056,
            155932878,
            155937699,
            155932330,
            155932424,
            155935419,
            155934167,
            155935968,
            155938228,
            155943045
        ],
        "E": [
            155952600,
            155969940,
            155962457,
            155964374,
            155963814,
            155983208,
            155966957,
            155966086,
            155964414,
            155966097,
            155967685,
            155966676,
            155968339,
            155969173,
            155968619,
            155969521,
            155968330,
            155970439,
            155974921,
            155969157
        ],
        "D": [
            155947749,
            155955293,
            155954858,
            155948070,
            155952887,
            155947902,
            155952914,
            155950857,
            155960245,
            155955600,
            155958049,
            155956959,
            155958393,
            155952984,
            155959572,
            155957851,
            155953914,
            155962460,
            155960783,
            155957979
        ],
        "C": [
            155940658,
            155941257,
            155944890,
            155941178,
            155942028,
            155946945,
            155940227,
            155941361,
            155945588,
            155943949,
            155946857,
            155944434,
            155950008,
            155942914,
            155943655,
            155945930,
            155959132,
            155949802,
            155946391,
            155951636
        ],
        "A": [
            155928116,
            155927077,
            155928841,
            155925983,
            155926500,
            155932074,
            155926390,
            155927710,
            155930181,
            155927610,
            155931371,
            155927746,
            155927018,
            155927300,
            155927241,
            155926796,
            155928901,
            155928154,
            155927537,
            155926656
        ]
    },
    "name": "C. Detective Task",
    "statement": "Polycarp bought a new expensive painting and decided to show it to his n\r\nfriends. He hung it in his room. n of his friends entered and exited\r\nthere one by one. At one moment there was no more than one person in the\r\nroom. In other words, the first friend entered and left first, then the\r\nsecond, and so on.It is known that at the beginning (before visiting\r\nfriends) a picture hung in the room. At the end (after the n-th friend)\r\nit turned out that it disappeared. At what exact moment it disappeared\r\nthere is no information.Polycarp asked his friends one by one. He asked\r\neach one if there was a picture when he entered the room. Each friend\r\nanswered one of three: (response encoded with ); (response encoded as );\r\n(response is encoded with ). Everyone except the thief either doesn\u2019t\r\nremember or told the . The thief can say anything (any of the three\r\noptions).Polycarp cannot understand who the thief is. He asks you to\r\nfind out the number of those who can be considered a thief according to\r\nthe answers.\r\n",
    "solutions": [
        "#include <cmath>\n#include <cstdio>\n#include <string>\n#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline int read(){\n\tint t = 0,f = 1;\n\tregister char c = getchar();\n\twhile (c < 48 || c > 57) f = (c == '-') ? (-1) : (f),c = getchar();\n\twhile (c >= 48 && c <= 57) t = (t << 1) + (t << 3) + (c ^ 48),c = getchar();\n\treturn f * t;\n}\n\ninline int reads(char* s){\n\tint t = 0;\n\tregister char c = getchar();\n\twhile (c != '1' && c != '0' && c != '?') c = getchar();\n\twhile (c == '1' || c == '0' || c == '?') s[++t] = c,c = getchar();\n\treturn t;\n}\n\nconst int N = 2e5 + 10;\nint T,n,ans,pre[N + 1],suf[N + 1];\nchar inp[N + 1];\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n\tfreopen(\"out.out\",\"w\",stdout);\n\t#endif\n\tT = read();\n\twhile (T--){\n\t\tn = reads(inp);\n\t\tans = 0;\n\t\tfor (int i = 0;i <= n + 1;i++) pre[i] = suf[i] = 0;\n\t\tfor (int i = 1;i <= n;i++){\n\t\t\tpre[i] = pre[i - 1];\n\t\t\tif (inp[i] == '1' || inp[i] == '?') ++pre[i];\n\t\t}\n\t\tfor (int i = n;i >= 1;i--){\n\t\t\tsuf[i] = suf[i + 1];\n\t\t\tif (inp[i] == '1') ++suf[i];\n\t\t}\n\t\tfor (int i = 1;i <= n;i++){\n\t\t\tif (pre[i - 1] == i - 1 && suf[i + 1] == 0) ++ans;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Detective Task.json",
    "editorial_link": "https://codeforces.com//blog/entry/102550",
    "editorial": "First, let\u00e2\u0080\u0099s note that we will have a transition from to only once,\r\notherwise it turns out that first the picture disappeared, then it\r\nappeared and disappeared back, but we can consider that a friend in the\r\nmiddle, who answered lied to us, but this is not true, because even\r\nbefore him the picture disappeared.So we need to find this transition.\r\nSince we can also meet , we find the index of the leftmost (in case of\r\nabsence, we take ) and mark it as , and the index of rightmost (in case\r\nof absence, we take ) and mark as . Answer the number of indices between\r\nthem (inclusive), because only they could lie. There could not be a\r\nthief to the left of , since either the friend under the index lied, or\r\nthe picture was not stolen before . There could not be a thief to the\r\nright of , since either the painting had already been stolen in the\r\npresence of \u00e2\u0080\u0099s friend, or it was he who lied.\r\n"
}