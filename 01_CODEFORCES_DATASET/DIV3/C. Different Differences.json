{
    "link": "https://codeforces.com//contest/1772/problem/C",
    "problemId": "1699970",
    "problem_idx": "C",
    "shortId": "1772C",
    "contest_number": "1772",
    "problem_submissions": {
        "G": [
            185866908,
            185868804,
            185873335,
            185913962,
            185953726,
            185952520,
            186850297,
            186850227
        ],
        "F": [
            185855303,
            185865062,
            185861633,
            185852805,
            185857933,
            185851728,
            185860856,
            185855787,
            185864352,
            185856328,
            185859258,
            185858451,
            185854822,
            185861128,
            185859138,
            185859632,
            185864434,
            185848000
        ],
        "E": [
            185833320,
            185824865,
            185853135,
            185836538,
            185842386,
            185826244,
            185841572,
            185838582,
            185836735,
            185840815,
            185835557,
            185845402,
            185841206,
            185838785,
            185849100,
            185834339,
            185850985,
            185860647
        ],
        "D": [
            185819090,
            185847079,
            185843120,
            185824661,
            185823461,
            185842011,
            185826918,
            185829038,
            185828215,
            185825456,
            185830337,
            185829367,
            185832845,
            185833254,
            185834612,
            216833286,
            185829200,
            185833219,
            185836837
        ],
        "C": [
            185812558,
            185814879,
            185826142,
            185808094,
            185813274,
            185814811,
            185816864,
            185820487,
            185822215,
            185810534,
            185819302,
            185820777,
            185825870,
            185828411,
            185818012,
            185822938,
            185815452,
            185822870
        ],
        "B": [
            185806303,
            185808530,
            185810358,
            185820249,
            185807477,
            185807452,
            185807615,
            185812963,
            185808450,
            185814127,
            185808442,
            185811020,
            185818101,
            185811312,
            185806644,
            185817751,
            185807928,
            185811595
        ],
        "A": [
            185798273,
            185798668,
            185799351,
            185798230,
            185798228,
            185798156,
            185800228,
            185799343,
            185809092,
            185800941,
            185802793,
            185811122,
            185800618,
            185798345,
            185801366,
            185799187,
            185805016
        ]
    },
    "name": "C. Different Differences",
    "statement": "An array a consisting of k integers is if a_1 < a_2 <\r\ndots < a_k. For example, the arrays [1, 3, 5], [1, 2, 3, 4], [3, 5, 6]\r\nare strictly increasing; the arrays [2, 2], [3, 7, 5], [7, 4, 3], [1, 2,\r\n2, 3] are not.For a strictly increasing array a of k elements, let’s\r\ndenote the as the number of different elements in the array [a_2 - a_1,\r\na_3 - a_2,\r\ndots, a_k - a_{k-1}]. For example, the characteristic of the array [1,\r\n3, 4, 7, 8] is 3 since the array [2, 1, 3, 1] contains 3 different\r\nelements: 2, 1 and 3.You are given two integers k and n (k\r\nle n). Construct an increasing array of k integers from 1 to n with\r\ncharacteristic.\r\n",
    "solutions": [
        "/*\nFeeling so sleepy\n*/\n#include <bits/stdc++.h>\n#define ll long long\n#define rep(i,m,n) for (ll i=m;i<=n;i++)\n#define reb(i,m,n) for (ll i=m;i>=n;i--)\n#define rv(i,vt) for (auto i:vt)\n#define ii pair<ll,ll>\n#define vi vector<ll>\n#define F first\n#define S second\n#define pb push_back\n#define sz(v) (int)v.size()\n#define iii tuple<ll,ll,ll>\nusing namespace std;\nconst ll N=1e6+5,mod=1e9+7;\nll n,q,a[N],k,res;\nvoid elixprep(){\n    \n}\nvoid elix()\n{\n    cin>>k>>n;\n    ll tmp=1,res=1,id=1;\n    while (n-res+1>=k-id+1 && id<=k){\n        cout<<res<<\" \";\n        tmp++;\n        res+=tmp;\n        id++;\n    }\n    res-=tmp;\n    rep(i,id,k) res++,cout<<res<<\" \";\n}\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll tests=1;\n    cin>>tests;\n    elixprep();\n    while (tests--){\n        elix();\n        cout<<endl;\n}\n    cerr << \"\\n\" << (double)clock() / CLOCKS_PER_SEC * 1000 << \" ms\";\n}\n//listen to trap music. it won't help"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Different Differences.json",
    "editorial_link": "https://codeforces.com//blog/entry/110313",
    "editorial": "We can transform the problem as follows. Let . We need to find an array\r\nso that the sum of elements in it is not greater than , all elements are\r\npositive integers, and the number of different elements is the maximum\r\npossible.Suppose we need different elements in . What can be the minimum\r\npossible sum of elements in ? Itâs easy to see that should have the\r\nfollowing form: . This array contains exactly different elements, these\r\ndifferent elements are as small as possible (so their sum is as small as\r\npossible), and all duplicates are âs. So, if the sum of this array is\r\nnot greater than , then it is possible to have the number of different\r\nelements in equal to .The rest is simple. We can iterate on , find the\r\nmaximum possible , construct the difference array, and then use it to\r\nconstruct the array itself.\r\n",
    "hint": []
}