{"link": "https://codeforces.com//contest/1759/problem/D", "problemId": "1648492", "problem_idx": "D", "shortId": "1759D", "contest_number": "1759", "problem_submissions": {"F": [181486431, 181479495, 181489489, 181466769, 181483185, 181500440, 181479543, 181508353, 181496922, 181508604, 181502097, 181497795, 181503761, 181501121, 181501100, 182192682, 181496069, 181511199, 181495619, 181501990, 181512733], "G": [181470898, 181483472, 181480216, 181488242, 181502797, 181484371, 181507280, 181493093, 181484604, 181488245, 181490344, 181510187, 181485442, 181512835, 182192660, 181500575, 181492430, 181509509, 181504672, 181446586, 181490393], "E": [181450176, 181453080, 181473014, 181457235, 181548790, 181548755, 181473778, 181464085, 181473138, 181449179, 181478384, 181476879, 181463313, 181471764, 181473740, 181474544, 181476651, 182192601, 181478540, 181483700, 181477015, 181481741, 181472562], "D": [181443496, 181444277, 181441833, 181437034, 181457789, 181451248, 181439090, 181453349, 181472631, 181466901, 181447966, 181451433, 181466503, 181456985, 182192572, 181463756, 181472096, 181464200, 181477006, 181465670], "C": [181435248, 181438210, 181438160, 181482829, 181440135, 181444414, 181434276, 181441512, 181453016, 181445968, 181476131, 181438815, 181451647, 181444648, 182192589, 181451437, 181447044, 181435084, 181471203, 181450921], "B": [181429291, 181432153, 181430076, 181428597, 181432762, 181432848, 181428082, 181432814, 181439780, 181430739, 181437168, 181430902, 181432277, 181435548, 182192550, 181441779, 181435486, 181429956, 181463543, 181435148], "A": [181427407, 181427808, 181427983, 181427097, 181427278, 181428509, 181430809, 181428221, 181434045, 181429427, 181427311, 181428005, 181429365, 182192516, 181435730, 181429174, 181427774, 181455253, 181429200]}, "name": "D. Make It Round", "statement": "Inflation has occurred in Berlandia, so the store needs to change the\r\nprice of goods.The current price of good n is given. It is allowed to\r\nincrease the price of the good by k times, with 1\r\nle k\r\nle m, k is an integer. Output the roundest possible new price of the\r\ngood. That is, the one that has the maximum number of zeros at the\r\nend.For example, the number is more round than the number (three zeros\r\nat the end of and only one at the end of ).If there are several possible\r\nvariants, output the one in which the new price is maximal.If it is\r\nimpossible to get a rounder price, output n\r\ncdot m (that is, the maximum possible price).\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n#include <array>\n\nusing namespace std;\n\ntemplate<class T> void ckmin(T &a, T b) { a = min(a, b); }\ntemplate<class T> void ckmax(T &a, T b) { a = max(a, b); }\n\n#define pb push_back\n#define mp make_pair\n#define cotu cout\n#define itn int\n#define Red ios_base::sync_with_stdio(0);cin.tie(0)\n#define F first\n#define S second\n#define sz(x) (int)x.size()\n#define all(x) (x).begin(), (x).end()\n#define rep(i, n) for(int i = 0; i < n; i++)\n#define repr(i,n) for(int i = n - 1; i >= 0; --i)\n#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)\n#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)\n#define Repr(i, a, n) for(int i = (n); i >= (a); --i)\n#define setp(x) fixed << setprecision(x)\n\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<vector<int> > vvi;\n\nconst int inf = int(1e9);\nconst ll INF = ll(1e17);\nconst ll mod = 998244353;\nconst double PI = acos(-1.0);\n\nll bp(ll a, ll n, ll md = mod){\n    ll r = 1;\n    while(n){\n        if(n & 1) r = r * a % md;\n        a = a * a % md;\n        n >>= 1;\n    }\n    return r;\n}\ntemplate<typename T_vector> // neal\nvoid output_vector(const T_vector &v, bool add_one = false, int start = -1, int end = -1) {\n    if (start < 0) start = 0;\n    if (end < 0) end =  int(v.size());\n\n    for (int i = start; i < end; i++)\n        cout << v[i] + (add_one ? 1 : 0) << (i < end - 1 ? ' ' : '\\n');\n}\n\nint cnt(ll x) {\n    int c = 0;\n    while(x % 10 == 0) {\n        x /= 10, ++c;\n    }\n    return c;\n}\n\nvoid solve(){\n    ll n, m;\n    cin >> n >> m;\n    ll sN = n;\n    int c1 = 0, c2 = 0;\n    while(n % 2 == 0) {\n        n /= 2;\n        c1++;\n    }\n    while(n % 5 == 0) {\n        n /= 5;\n        c2++;\n    }\n\n    ll d = 1;\n    while(c1 < c2 and d * 2 <= m) d *= 2, c1++;\n    while(c2 < c1 and d * 5 <= m) d *= 5, c2++;\n    while(d * 10 <= m) d *= 10;\n    ll h = m / d;\n    d *= h;\n    cout << d * sN << endl;\n\n}\n\nint main()\n{\n    // freopen(\"input.txt\", \"r\", stdin);\n    // freopen(\"output.txt\", \"w\", stdout);\n    Red;\n    int T;\n    T = 1;\n    cin >> T;\n    for(int i = 1; i <= T; ++i){\n        // cout << \"Case #\" << i << \": \";\n        solve();\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["brute force", "number theory"], "dificulty": "1400", "interactive": false}