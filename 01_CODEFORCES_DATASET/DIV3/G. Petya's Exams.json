{"link": "https://codeforces.com//contest/978/problem/G", "problemId": "182882", "problem_idx": "G", "shortId": "978G", "contest_number": "978", "problem_submissions": {"G": [38172491, 38169204, 38172434, 38174884, 38174212, 38202570, 38174356, 38174504, 38170439, 38179076, 38174120, 38175016, 38177179, 38173974, 38173883, 38177077, 38179217, 38177915, 38175210], "F": [38167756, 38167382, 38169838, 38171846, 38171022, 38202583, 38171851, 38172094, 38166947, 38172200, 38170297, 38172407, 38173744, 38170844, 38171837, 38173600, 38173445, 38173729, 38171096, 38172672], "E": [38166000, 38165982, 38167458, 38167818, 38167975, 38202586, 38169135, 38168502, 38165451, 38168025, 38168912, 38170344, 38169652, 38168636, 38170345, 38170564, 38171323, 38171232, 38166984], "D": [38164294, 38164281, 38166043, 38165411, 38166520, 38202587, 38166943, 38167185, 38174671, 38184115, 38165897, 38167133, 38167961, 38167926, 38167171, 38168834, 38168604, 38168704, 38168070, 38165126], "C": [38162269, 38159839, 38162952, 38162443, 38163682, 38202588, 38163454, 38163549, 38164049, 38162683, 38163806, 38164073, 38165403, 38165313, 38165695, 38165203, 38164723, 38162539, 38162894], "B": [38160472, 38157775, 38159643, 38159599, 38161723, 38159684, 38162382, 38159493, 38159452, 38160053, 38159583, 38160909, 38164410, 38160958, 38160311, 38159735, 38160488], "A": [38158198, 38157375, 38157656, 38157773, 38158120, 38202594, 38157741, 38157702, 38160301, 38157750, 38158544, 38157695, 38157893, 38159292, 38163521, 38158147, 38158142, 38157847, 38158925]}, "name": "G. Petya's Exams", "statement": "Petya studies at university. The current academic year finishes with n\r\nspecial days. Petya needs to pass m exams in those special days. The\r\nspecial days in this problem are numbered from 1 to n.There are three\r\nvalues about each exam: s_i the day, when questions for the i-th exam\r\nwill be published, d_i the day of the i-th exam (s_i < d_i), c_i number\r\nof days Petya needs to prepare for the i-th exam. For the i-th exam\r\nPetya should prepare in days between s_i and d_i-1, inclusive. There are\r\nthree types of activities for Petya in each day: to spend a day doing\r\nnothing (taking a rest), to spend a day passing exactly one exam or to\r\nspend a day preparing for exactly one exam. So he can\u2019t pass/prepare for\r\nmultiple exams in a day. He can\u2019t mix his activities in a day. If he is\r\npreparing for the i-th exam in day j, then s_i\r\nle j < d_i.It is allowed to have breaks in a preparation to an exam and\r\nto alternate preparations for different exams in consecutive days. So\r\npreparation for an exam is not required to be done in consecutive\r\ndays.Find the schedule for Petya to prepare for all exams and pass them,\r\nor report that it is impossible.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define DIM 107\nusing namespace std;\n\nlong long n,m,d[DIM],c[DIM],k[DIM],is[DIM];\n\nvector<long long> blt[DIM];\n\npriority_queue<pair<long long,long long>,vector<pair<long long,long long> >,greater<pair<long long,long long> > > q;\n\nint main()\n{\n    cin>>n>>m;\n\n    for(int i = 1;i <= m;++i)\n    {\n        long long s;\n        cin>>s>>d[i]>>c[i];\n        blt[s].push_back(i);\n        is[d[i]] = i;\n    }\n\n    vector<long long> ans;\n    for(int i = 1; i <= n; ++i)\n    {\n       // cout<<i<<' ';\n        for(auto j:blt[i])\n            q.push({d[j],j});\n\n      //  cout<<q.size()<<' ';\n        if(is[i]!=0)\n        {\n            if(k[is[i]]<c[is[i]]) return cout<<-1,0;\n           // cout<<m+1<<\"     \";\n            ans.push_back(m+1);\n           // q.pop();\n            continue;\n        }\n\n        while(q.size() && k[q.top().second] == c[q.top().second])\n            q.pop();\n\n        if(q.size() == 0) {ans.push_back(0);\n        //cout<<0<<\"         \";\n        }\n        else\n        {\n            k[q.top().second]++;\n            ans.push_back(q.top().second);\n           // cout<<q.top().second<<\"     \";\n        }\n\n        while(q.size() && k[q.top().second] == c[q.top().second])\n            q.pop();\n    }\n\n    for(auto i:ans) cout<<i<<' ';\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1700", "interactive": false}