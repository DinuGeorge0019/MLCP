{"link": "https://codeforces.com//contest/1234/problem/C", "problemId": "426513", "problem_idx": "C", "shortId": "1234C", "contest_number": "1234", "problem_submissions": {"F": [61647149, 61645384, 61650555, 61651870, 61667991, 62194838, 61712119, 61666405, 61729878, 61729799, 61664234, 68329269, 61680222, 61752962], "E": [61637715, 61643598, 61648539, 61642595, 61643656, 61651547, 61650480, 61652692, 61641203, 61649142, 61659878, 61650257, 61653772, 61654963, 61657548, 61649045, 61654746, 61657468, 61654998, 61655416], "C": [61632575, 61627606, 61654578, 61628592, 61630466, 61624366, 61638436, 61629236, 61652967, 61631133, 61636961, 61642219, 61643521, 61637365, 61636499, 61632963, 61634943, 61633612, 61629926, 61640840], "B1": [61622243, 61619256, 61623667, 61618942, 61620065, 61620401, 61621233, 61618288, 61620321, 61625306, 61621149, 61623370, 61622245, 61622135, 61620954, 61622191, 61621982, 61619236, 61622554, 61619031], "B2": [61622177, 61619354, 61626675, 61618859, 61617735, 61620174, 61619049, 61620082, 61618293, 61625056, 61620210, 61624129, 61619541, 61622218, 61620837, 61628084, 61621947, 61619088, 61624726, 61619187], "D": [61620922, 61632151, 61634663, 61631934, 61627516, 61628612, 61627461, 61639106, 61624471, 61635660, 61628357, 61634636, 61632191, 61627962, 61627805, 61636954, 61642587, 61638100, 61640694, 61630321], "A": [61612861, 61620182, 61616933, 61612804, 61614828, 61613376, 61613863, 61613458, 61613474, 61619474, 61614252, 61614656, 61613262, 61614503, 61613228, 61614047, 61614323, 61618981, 61616841, 61613092]}, "name": "C. Pipes", "statement": "You are given a system of pipes. It consists of two rows, each row\r\nconsists of n pipes. The top left pipe has the coordinates (1, 1) and\r\nthe bottom right (2, n).There are six types of pipes: two types of\r\nstraight pipes and four types of curved pipes. Here are the examples of\r\nall six types: Types of pipes You can turn each of the given pipes 90\r\ndegrees clockwise or counterclockwise (so the types 1 and 2 can become\r\neach other and types 3, 4, 5, 6 can become each other).You want to turn\r\nsome pipes in a way that the water flow can start at (1, 0) (to the left\r\nof the top left pipe), move to the pipe at (1, 1), flow somehow by to\r\nthe pipe at (2, n) and flow right to (2, n + 1).Pipes are connected if\r\nthey are adjacent in the system and their ends are connected. Here are\r\nexamples of connected pipes: Examples of connected pipes Let\u2019s describe\r\nthe problem using some example: The first example input And its solution\r\nis below: The first example answer As you can see, the water flow is the\r\npoorly drawn blue line. To obtain the answer, we need to turn the pipe\r\nat (1, 2) 90 degrees clockwise, the pipe at (2, 3) 90 degrees, the pipe\r\nat (1, 6) 90 degrees, the pipe at (1, 7) 180 degrees and the pipe at (2,\r\n7) 180 degrees. Then the flow of water can reach (2, n + 1) from (1,\r\n0).You have to answer q independent queries.\r\n", "solutions": ["#include <iostream>\n#include <iomanip>\n#include <random>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <numeric>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <sstream>\n#include <bitset>\n#include <cassert>\n#include <fstream>\n#include <queue>\n\n#define len(X) ((int)(X).size())\n\n#ifdef __LOCAL\n\t#define DBG(X) cout << #X << \"=\" << (X) << endl;\n#else\n\t#define DBG(X)\n#endif\n\nusing std::cin;\nusing std::cout;\nusing std::vector;\nusing std::string;\nusing std::pair;\nusing std::swap;\nusing std::sort;\nusing std::lower_bound;\nusing std::unique;\n\nusing int64 = long long int;\nusing pii   = pair<int, int>;\nusing pii64 = pair<int64, int64>;\n\nconst int NIL = -1;\n\nvoid init_IO() {\n\tstd::ios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcout.tie(nullptr);\n}\n\nconst int MAX_N = (int)2e5 + 777;\n\nchar M[2][MAX_N];\nint n;\n\nvoid solve() {\n\tcin >> n;\n\n\tfor(int i = 0; i < 2; ++i) {\n\t\tstring line;\n\t\tcin >> line;\n\n\t\tfor(int j = 0; j < n; ++j) {\n\t\t\tM[i][j] = line[j];\t\n\t\t}\n\t}\n\n\tint cur = 0;\n\n\tfor(int j = 0; j < n; ++j) {\n\t\tif(M[cur][j] > '2') {\n\t\t\tif(M[cur ^ 1][j] <= '2') {\n\t\t\t\tcout << \"NO\\n\";\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcur ^= 1;\n\t\t}\n\t}\n\n\tcout << (cur == 1 ? \"YES\\n\" : \"NO\\n\");\n}\n\nint main() {\n\tinit_IO();\n\n\tint T;\n\tcin >> T;\n\n\twhile(T--)\n\t\tsolve();\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "implementation"], "dificulty": "1500", "interactive": false}