{"link": "https://codeforces.com//contest/1472/problem/C", "problemId": "854353", "problem_idx": "C", "shortId": "1472C", "contest_number": "1472", "problem_submissions": {"F": [103262561, 103276963, 103283145, 103236120, 103299603, 103280037, 103283982, 103299636, 103262171, 103266435, 103266707, 103276432, 103305724, 103305561, 103312140, 103296820, 103289516], "G": [103247133, 103238309, 103265834, 103256471, 103273915, 103293538, 103298242, 103268903, 103231487, 103253031, 103265141, 103262744, 103269566, 103284052, 103274415], "E": [103232102, 103223895, 103237385, 103272807, 103242184, 103256098, 103261560, 103284295, 103272410, 103347793, 103285217, 103237054, 103246827, 103233098, 103239873, 103242625, 103245603, 103246214, 103227701, 103253419], "D": [103207950, 103207957, 103217168, 103202671, 103216674, 103217143, 103225940, 103215649, 103278518, 103287434, 103203579, 103227081, 103193660, 103216373, 103212463, 103198886, 103214065, 103204468, 103205436], "C": [103194323, 103193866, 103191356, 103198459, 103198975, 103205574, 103191182, 103243332, 103280810, 103289310, 103198851, 103199943, 103206511, 103207377, 103204240, 103192503, 103203543, 103196542, 103198696], "B": [103191009, 103189264, 103188527, 103213801, 103193697, 103201611, 103200035, 103198875, 103286479, 103291761, 103193834, 103194538, 103187178, 103193610, 103194731, 103188054, 103194899, 103190639, 103190538], "A": [103186521, 103187194, 103186563, 103201739, 103187144, 103188906, 103207506, 103187635, 103246273, 103293364, 103186560, 103189197, 103194552, 103186844, 103187875, 103186517, 103187671, 103186808, 103186538]}, "name": "C. Long Jumps", "statement": "Polycarp found under the Christmas tree an array a of n elements and\r\ninstructions for playing with it: At first, choose index i (1\r\nleq i\r\nleq n) starting position in the array. Put the chip at the index i (on\r\nthe value a_i). While i\r\nleq n, add a_i to your score and move the chip a_i positions to the\r\nright (i.e. replace i with i + a_i). If i > n, then Polycarp ends the\r\ngame. For example, if n = 5 and a = [7, 3, 1, 2, 3], then the following\r\ngame options are possible: Polycarp chooses i = 1. Game process: i = 1\r\noverset{+7}{\r\nlongrightarrow} 8. The score of the game is: a_1 = 7. Polycarp chooses i\r\n= 2. Game process: i = 2\r\noverset{+3}{\r\nlongrightarrow} 5\r\noverset{+3}{\r\nlongrightarrow} 8. The score of the game is: a_2 + a_5 = 6. Polycarp\r\nchooses i = 3. Game process: i = 3\r\noverset{+1}{\r\nlongrightarrow} 4\r\noverset{+2}{\r\nlongrightarrow} 6. The score of the game is: a_3 + a_4 = 3. Polycarp\r\nchooses i = 4. Game process: i = 4\r\noverset{+2}{\r\nlongrightarrow} 6. The score of the game is: a_4 = 2. Polycarp chooses i\r\n= 5. Game process: i = 5\r\noverset{+3}{\r\nlongrightarrow} 8. The score of the game is: a_5 = 3. Help Polycarp to\r\nfind out the maximum score he can get if he chooses the starting index\r\nin an optimal way.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N_MAX = 200002;\n\nint t;\n\nint n;\n\nll a[N_MAX];\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> t;\n    while(t--)\n    {\n        cin >> n;\n        for(int i = 1; i <= n; i++)\n            cin >> a[i];\n        for(int i = n; i >= 1; i--)\n            if(i + a[i] <= n)\n                a[i] += a[i + a[i]];\n        ll ans = 0;\n        for(int i = 1; i <= n; i++)\n            ans = max(ans, a[i]);\n        cout << ans << \"\\n\";\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "graphs"], "dificulty": "1100", "interactive": false}