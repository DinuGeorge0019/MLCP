{
    "link": "https://codeforces.com//contest/1931/problem/D",
    "problemId": "2475292",
    "problem_idx": "D",
    "shortId": "1931D",
    "contest_number": "1931",
    "problem_submissions": {
        "F": [
            246296614,
            246179146,
            246170709,
            246427101,
            246168970,
            246184751,
            246142511,
            246197019,
            246158218,
            246183570,
            246192932,
            246194240,
            246199021,
            246174982,
            246201540,
            246206249,
            246216038,
            246222369,
            246240052,
            246211567,
            246197899,
            246223747
        ],
        "G": [
            246224407,
            246211674,
            246427115,
            246216950,
            246178382,
            246228243,
            246242246,
            246253076,
            246240374,
            246248007,
            246244943,
            246744089,
            246744073,
            246239134,
            246236944,
            246245770,
            246244778,
            246254011,
            246234171,
            246248699,
            246240032,
            246253831
        ],
        "E": [
            246145017,
            246150097,
            246427087,
            246155582,
            246195821,
            246176212,
            246149318,
            246169708,
            246178779,
            246172407,
            246188216,
            246161369,
            246185423,
            246181694,
            246183495,
            246193379,
            246171079,
            246199408,
            246183302,
            246209824
        ],
        "D": [
            246131952,
            246140825,
            246427074,
            246138649,
            246151523,
            246177165,
            246158520,
            246213160,
            246149697,
            246155814,
            246156229,
            246153154,
            246212032,
            246171283,
            246159489,
            246157679,
            246169805,
            246152904,
            246183153,
            246222515,
            246168860
        ],
        "C": [
            246118618,
            246131841,
            246427065,
            246129262,
            246123759,
            246146869,
            246133651,
            246123342,
            246138388,
            246137410,
            246146418,
            246146559,
            246141259,
            246136926,
            246145784,
            246141739,
            246129334,
            246133557,
            246144848,
            246141577,
            246142975
        ],
        "B": [
            246116325,
            246124823,
            246427047,
            246120211,
            246135267,
            246122553,
            246118446,
            246120092,
            246126650,
            246128147,
            246123393,
            246121355,
            246123132,
            246132595,
            246128338,
            246121578,
            246122252,
            246127915,
            246132875,
            246130521
        ],
        "A": [
            246114920,
            246119306,
            246427041,
            246116261,
            246126876,
            246117989,
            246115257,
            246116831,
            246118165,
            246120823,
            246116864,
            246121057,
            246117063,
            246121282,
            246122222,
            246117088,
            246116504,
            246117727,
            246121061,
            246119450
        ]
    },
    "name": "D. Divisible Pairs",
    "statement": "Polycarp has two favorite integers x and y (they can be equal), and he\r\nhas found an array a of length n.Polycarp considers a pair of indices\r\nlangle i, j\r\nrangle (1\r\nle i < j\r\nle n) if: a_i + a_j is divisible by x; a_i - a_j is divisible by y. For\r\nexample, if x=5, y=2, n=6, a=[1, 2, 7, 4, 9, 6], then the only pairs\r\nare:\r\nlangle 1, 5\r\nrangle: a_1 + a_5 = 1 + 9 = 10 (10 is divisible by 5) and a_1 - a_5 =\r\n1 - 9 = -8 (-8 is divisible by 2);\r\nlangle 4, 6\r\nrangle: a_4 + a_6 = 4 + 6 = 10 (10 is divisible by 5) and a_4 - a_6 =\r\n4 - 6 = -2 (-2 is divisible by 2). Find the number of pairs in the array\r\na.\r\n",
    "solutions": [
        "// Problem: D. Divisible Pairs\n// Contest: Codeforces - Codeforces Round 925 (Div. 3)\n// URL: https://codeforces.com/contest/1931/problem/D\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\n#define all(s) s.begin(), s.end()\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\n\nconst int _N = 1e5 + 5;\n\nint T;\n\nvoid solve() {\n\tint n, x, y; cin >> n >> x >> y;\n\tvector<int> a(n + 1);\n\tfor (int i = 1; i <= n; i++) cin >> a[i];\n\tmap<pair<int, int>, int> mp;\n\tll ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tans += mp[{(x - a[i] % x) % x, a[i] % y}];\n\t\tmp[{a[i] % x, a[i] % y}]++;\n\t}\n\tcout << ans << '\\n';\n\treturn;\n}\n\nint main() {\n\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\tcin >> T;\n\twhile (T--) {\n\t\tsolve();\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Divisible Pairs.json",
    "editorial_link": "https://codeforces.com//blog/entry/125878",
    "editorial": "Let\u00e2\u0080\u0099s consider a good pair.Since , it follows that , which implies that\r\nis either or . Therefore, for some , this holds true if .Since , it\r\nfollows that , which implies that .Thus, for some fixed , all will fit\r\nthe following criteria: ; ; .We will iterate through from left to right\r\nand maintain the count of elements with specific pairs using a on the\r\nprefix.\r\n"
}