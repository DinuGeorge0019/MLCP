{"link": "https://codeforces.com//contest/1883/problem/B", "problemId": "2278973", "problem_idx": "B", "shortId": "1883B", "contest_number": "1883", "problem_submissions": {"E": [229254391, 229228116, 229229123, 229229517, 229233192, 229225859, 229230943, 229238433, 229232300, 229233333, 229233942, 229263811, 229236033, 229236789, 229237333, 232949915, 229218375, 229241000, 229246670], "F": [229246429, 229232660, 229238625, 229233199, 229237512, 229241178, 229249370, 229237347, 229246925, 229236557, 229248336, 229241012, 229242598, 229250481, 229269234, 229251378, 232949748, 229222527, 229246156, 229254662], "G2": [229234009, 229254791, 229266437, 229254654, 229255057, 229265822, 229259707, 229267425, 229264812, 229264031, 229272506, 229274536, 229255952, 229271136, 229260211, 229270293, 232949665, 229301663, 229269692, 229270153], "G1": [229219524, 229255068, 229244230, 229249885, 229247413, 229253349, 229238825, 229266363, 229254833, 229263379, 229254509, 229274732, 229249349, 229257348, 229245372, 229258069, 232949701, 229234873, 229255834, 229262816], "C": [229213933, 229214044, 229209127, 229216055, 229214618, 229213072, 229215254, 229214649, 229223998, 229215021, 229215102, 229214748, 229219318, 229218539, 229216356, 232950046, 232950017, 229210060, 229232319, 229224513], "D": [229213159, 229218603, 229213694, 229223552, 229218966, 229217944, 229218306, 229218892, 229224727, 229227006, 229220642, 229221160, 229233957, 229224237, 229229032, 229232139, 232949956, 229214096, 229236853, 229237124], "A": [229205950, 229205653, 229203982, 229205587, 229204174, 229205183, 229204022, 229204395, 229217540, 229206219, 229206377, 229205661, 229204875, 229205824, 229205309, 232950152, 229204753, 229214596, 229210814], "B": [229205861, 229208946, 229205494, 229209640, 229210752, 229208113, 229209050, 229207130, 229220907, 229209362, 229209632, 229208425, 229209627, 229209608, 229210310, 232950093, 229206777, 229217319, 229218711]}, "name": "B. Chemistry", "statement": "You are given a string s of length n, consisting of lowercase Latin\r\nletters, and an integer k.You need to check if it is possible to remove\r\nk characters from the string s in such a way that the remaining\r\ncharacters can be rearranged to form a palindrome. Note that you can\r\nreorder the remaining characters in any way.A palindrome is a string\r\nthat reads the same forwards and backwards. For example, the strings \"\",\r\n\"\", \"\", \"\" are palindromes, while the strings \"\", \"\", \"\" are not.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n#define gc getchar_unlocked\n#define fo(i,n) for(i=0;i<n;i++)\n#define Fo(i,k,n) for(i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)\n#define ll long long\n#define int long long\n#define si(x) scanf(\"%d\",&x)\n#define sl(x) scanf(\"%lld\",&x)\n#define ss(s) scanf(\"%s\", s)\n#define pi(x) printf(\"%d\\n\", x)\n#define pl(x) printf(\"%lld\\n\", x)\n#define ps(s) printf(\"%s\\n\", s)\n#define deb(x) cout << #x << \"=\" << x << endl\n#define deb2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\n#define all(x) x.begin(), x.end()\n#define clr(x) memset(x, 0, sizeof(x))\n#define sortall(x) sort(all(x))\n#define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)\n#define PI 3.1415926535897932384626\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pl;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef vector<pii> vpii;\ntypedef vector<pl> vpl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\nmt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());\nint rng(int lim) {\n    uniform_int_distribution<int> uid(0,lim-1);\n    return uid(rang);\n}\nint modadd(int a, int b, int m) {\n  a %= m;\n  b %= m;\n  return (a + b) % m;\n}\n\nint modmul(int a, int b, int m) {\n  a %= m;\n  b %= m;\n  return (a * b) % m;\n}\n\nint modsub(int a, int b, int m) {\n  a %= m;\n  b %= m;\n  return (a - b + m) % m;\n}\n\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\n\nint expo(int a, int n, int md) {\n  int res = 1;\n  while (n) {\n    if (n & 1) {\n      res = modmul(res, a, md);\n      --n;\n    } else {\n      a = modmul(a, a, md);\n      n >>= 1;\n    }\n  }\n  return res;\n}\nint mpow(int base, int exp);\nvoid ipgraph(int n, int m);\nvoid dfs(int u, int par);\n\nconst int mod = 1'000'000'007;\nconst int N = 3e5, M = N;\n//=======================\n\nvi g[N];\nint a[N];\n\nvector<int> spf(1e7+10);\nvoid seive(int N) {\n    for(int i=0;i<=N;i++){\n        spf[i]=i;\n    }\n    for (int i = 2; i <= N; i++) {\n        if(spf[i]==i){\n            for(int j=i;j<=N;j+=i){\n                spf[j]=min(spf[j], i);\n            }\n        }\n    }\n}\nvoid solve() {\n    // int i, j, n, m;\n    int n, k;\n    cin>>n>>k;\n    string s;\n    cin>>s;\n    map<char,int>mp;\n    for(auto & it: s){\n        mp[it]++;\n    }\n    int cnt=0;\n    for(auto & it: mp){\n        if(it.second&1){\n            cnt++;\n        }\n    }\n    int t=cnt-1;\n    if(k<t){\n        cout<<\"NO\"<<endl;\n        return;\n    }\n    cout<<\"YES\"<<endl;\n    return;\n    \n}\n\nsigned main() {\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    srand(chrono::high_resolution_clock::now().time_since_epoch().count());\n\n    int t = 1;\n    cin >> t;\n    while(t--) {\n        solve();\n    }\n\n    return 0;\n}\n\nint mpow(int base, int exp) {\n    base %= mod;\n    int result = 1;\n    while (exp > 0) {\n        if (exp & 1) result = ((ll)result * base) % mod;\n        base = ((ll)base * base) % mod;\n        exp >>= 1;\n    }\n    return result;\n}\n\nvoid ipgraph(int n, int m){\n    int i, u, v;\n    while(m--){\n        cin>>u>>v;\n        u--, v--;\n        g[u].pb(v);\n        g[v].pb(u);\n    }\n}\n\nvoid dfs(int u, int par){\n    for(int v:g[u]){\n        if (v == par) continue;\n        dfs(v, u);\n    }\n}"], "input": "", "output": "", "tags": ["strings"], "dificulty": "900", "interactive": false}