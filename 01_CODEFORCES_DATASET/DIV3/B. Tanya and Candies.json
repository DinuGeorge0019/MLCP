{
    "link": "https://codeforces.com//contest/1118/problem/B",
    "problemId": "300356",
    "problem_idx": "B",
    "shortId": "1118B",
    "contest_number": "1118",
    "problem_submissions": {
        "E": [
            50187972,
            50178585,
            50177854,
            50187885,
            50190255,
            50191148,
            50185548,
            50187581,
            50187155,
            50189680,
            50192489,
            50176894,
            50191143,
            50188012,
            50189444,
            50186952,
            50192839,
            50194191,
            50192878,
            50194811,
            50194112
        ],
        "F1": [
            50184628,
            50182187,
            50182069,
            50185126,
            50186144,
            50175246,
            50268639,
            50268627,
            50268547,
            50268534,
            50268507,
            50268495,
            50268478,
            50177703,
            50177673,
            50189880,
            50187751,
            50178618,
            50180765,
            50182959,
            50195988,
            50179367,
            50193234,
            50188527,
            50175539,
            50191073,
            50183885,
            50182277
        ],
        "C": [
            50180516,
            50189313,
            50189314,
            50174569,
            50182199,
            50186326,
            50196284,
            50176517,
            50179801,
            50190327,
            50186281,
            50179237,
            50179193,
            50195343,
            50178816,
            50179289,
            50198041,
            50178779,
            50215543,
            50180475,
            50179046
        ],
        "D1": [
            50173332,
            50175414,
            50179356,
            50180631,
            50185124,
            50180428,
            50182811,
            50183080,
            50182930,
            50182441,
            50190772,
            50187897,
            50183718,
            50184678,
            50183560,
            50184764,
            50183014,
            50185852,
            50188218,
            50190752
        ],
        "D2": [
            50173254,
            50175301,
            50179259,
            50186552,
            50187970,
            50180477,
            50182733,
            50182917,
            50182838,
            50182532,
            50190661,
            50187874,
            50183954,
            50184600,
            50183758,
            50184505,
            50183208,
            50185955,
            50185683,
            50189545,
            50190850
        ],
        "B": [
            50171883,
            50174314,
            50178899,
            50169507,
            50171162,
            50173488,
            50172475,
            50172202,
            50172480,
            50172037,
            50171388,
            50171487,
            50171892,
            50174620,
            50175080,
            50173570,
            50171467,
            50173112,
            50174638,
            50174514
        ],
        "A": [
            50167992,
            50168657,
            50171109,
            50166868,
            50167018,
            50167896,
            50168002,
            50167192,
            50167986,
            50168375,
            50170469,
            50167469,
            50167941,
            50167556,
            50168146,
            50168540,
            50168781,
            50167258,
            50168367,
            50169680
        ]
    },
    "name": "B. Tanya and Candies",
    "statement": "Tanya has n candies numbered from 1 to n. The i-th candy has the weight\r\na_i.She plans to eat exactly n-1 candies and give the remaining candy to\r\nher dad. Tanya eats candies in order of increasing their numbers, .Your\r\ntask is to find the number of such candies i (let’s call these candies )\r\nthat if dad gets the i-th candy then the sum of weights of candies Tanya\r\neats in even days will be equal to the sum of weights of candies Tanya\r\neats in odd days. Note that at first, she will give the candy, after it\r\nshe will eat the remaining candies one by one.For example, n=4 and\r\nweights are [1, 4, 3, 3]. Consider all possible cases to give a candy to\r\ndad: Tanya gives the 1-st candy to dad (a_1=1), the remaining candies\r\nare [4, 3, 3]. She will eat a_2=4 in the first day, a_3=3 in the second\r\nday, a_4=3 in the third day. So in odd days she will eat 4+3=7 and in\r\neven days she will eat 3. Since 7\r\nne 3 this case shouldn’t be counted to the answer (this candy isn’t ).\r\nTanya gives the 2-nd candy to dad (a_2=4), the remaining candies are [1,\r\n3, 3]. She will eat a_1=1 in the first day, a_3=3 in the second day,\r\na_4=3 in the third day. So in odd days she will eat 1+3=4 and in even\r\ndays she will eat 3. Since 4\r\nne 3 this case shouldn’t be counted to the answer (this candy isn’t ).\r\nTanya gives the 3-rd candy to dad (a_3=3), the remaining candies are [1,\r\n4, 3]. She will eat a_1=1 in the first day, a_2=4 in the second day,\r\na_4=3 in the third day. So in odd days she will eat 1+3=4 and in even\r\ndays she will eat 4. Since 4 = 4 this case to the answer (this candy is\r\n). Tanya gives the 4-th candy to dad (a_4=3), the remaining candies are\r\n[1, 4, 3]. She will eat a_1=1 in the first day, a_2=4 in the second day,\r\na_3=3 in the third day. So in odd days she will eat 1+3=4 and in even\r\ndays she will eat 4. Since 4 = 4 this case to the answer (this candy is\r\n). In total there 2 cases which should counted (these candies are ), so\r\nthe answer is 2.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\nusing namespace std;\n\n// #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\n#define ll long long int\n#define ld long double\n#define pb push_back\n#define mp make_pair\n\nvector <ll> v;\nll even[200005],odd[200005];\n\nll fep(ll x, ll y, ll mod)\n{ll res=1;while(y>0){if(y&1)res=(res*x)%mod;\n    y=y>>1;x=(x*x)%mod;}return res%mod;}\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\n\tll n,i,j,x,y,a,b,sm=0,cnt=0;\n\tstring s;\n\t\n\tcin >> n;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tcin >> x;\n\t\tv.pb(x);\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tif(i>0)\n\t\t\t\teven[i]=v[i]+even[i-1],\n\t\t\t\todd[i]=odd[i-1];\n\t\t\telse\n\t\t\t\teven[i]=v[i];\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\teven[i]=even[i-1];\n\t\t\todd[i]=odd[i-1]+v[i];\n\t\t}\n\t}\n\tif(even[n-1]-v[0]==odd[n-1])\n\t{\n\t\tcnt++;\n\t}\n\tfor(i=1;i<n;i++)\n\t{\n\t\tif(even[i-1]+odd[n-1]-odd[i]==odd[i-1]+even[n-1]-even[i])\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t}\n\tcout << cnt;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Tanya and Candies.json",
    "editorial_link": "https://codeforces.com/blog/entry/65396",
    "editorial": "Letâs maintain four variables , , and , which will mean the sum of with\r\nodd on prefix, even on prefix, odd on suffix and even on suffix.\r\nInitially, and are , equals to the sum of with odd in a whole array and\r\nequals to the sum of with even in a whole array.Letâs iterate from left\r\nto right over all elements of the array. Letâs consider the current\r\nelement . If is even, then set , otherwise letâs set . Then letâs\r\nconsider we give the current candy to dad. Then we have to increase the\r\nanswer if and . Then if is even then letâs set , otherwise letâs set .\r\n",
    "hint": []
}