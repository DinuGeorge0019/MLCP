{
    "link": "https://codeforces.com//contest/1675/problem/A",
    "problemId": "1389918",
    "problem_idx": "A",
    "shortId": "1675A",
    "contest_number": "1675",
    "problem_submissions": {
        "G": [
            156006050,
            156007549,
            173914008,
            156574492,
            156062725,
            156044046
        ],
        "F": [
            155975284,
            155982189,
            155975181,
            155974056,
            155981368,
            155963854,
            155982839,
            155978540,
            155977742,
            155982621,
            155974644,
            155983326,
            155979741,
            155983593,
            155987528,
            155986330,
            155979073,
            155983357,
            155982704,
            155980054
        ],
        "B": [
            155956678,
            155933030,
            155935424,
            155929465,
            155930941,
            155933422,
            155931092,
            155933639,
            155934497,
            155933616,
            155938056,
            155932878,
            155937699,
            155932330,
            155932424,
            155935419,
            155934167,
            155935968,
            155938228,
            155943045
        ],
        "E": [
            155952600,
            155969940,
            155962457,
            155964374,
            155963814,
            155983208,
            155966957,
            155966086,
            155964414,
            155966097,
            155967685,
            155966676,
            155968339,
            155969173,
            155968619,
            155969521,
            155968330,
            155970439,
            155974921,
            155969157
        ],
        "D": [
            155947749,
            155955293,
            155954858,
            155948070,
            155952887,
            155947902,
            155952914,
            155950857,
            155960245,
            155955600,
            155958049,
            155956959,
            155958393,
            155952984,
            155959572,
            155957851,
            155953914,
            155962460,
            155960783,
            155957979
        ],
        "C": [
            155940658,
            155941257,
            155944890,
            155941178,
            155942028,
            155946945,
            155940227,
            155941361,
            155945588,
            155943949,
            155946857,
            155944434,
            155950008,
            155942914,
            155943655,
            155945930,
            155959132,
            155949802,
            155946391,
            155951636
        ],
        "A": [
            155928116,
            155927077,
            155928841,
            155925983,
            155926500,
            155932074,
            155926390,
            155927710,
            155930181,
            155927610,
            155931371,
            155927746,
            155927018,
            155927300,
            155927241,
            155926796,
            155928901,
            155928154,
            155927537,
            155926656
        ]
    },
    "name": "A. Food for Animals",
    "statement": "In the pet store on sale there are: a packs of dog food; b packs of cat\r\nfood; c packs of universal food (such food is suitable for both dogs and\r\ncats). Polycarp has x dogs and y cats. Is it possible that he will be\r\nable to buy food for all his animals in the store? Each of his dogs and\r\neach of his cats should receive one pack of suitable food for it.\r\n",
    "solutions": [
        "#include <cmath>\n#include <cstdio>\n#include <string>\n#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline int read(){\n\tint t = 0,f = 1;\n\tregister char c = getchar();\n\twhile (c < 48 || c > 57) f = (c == '-') ? (-1) : (f),c = getchar();\n\twhile (c >= 48 && c <= 57) t = (t << 1) + (t << 3) + (c ^ 48),c = getchar();\n\treturn f * t;\n}\n\nint T,a,b,c,x,y;\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n\tfreopen(\"out.out\",\"w\",stdout);\n\t#endif\n\tT = read();\n\twhile (T--){\n\t\ta = read(),b = read(),c = read(),x = read(),y = read();\n\t\tbool f1 = 0,f2 = 0;\n\t\tif (a >= x) f1 = 1;\n\t\telse if (a + c >= x) c -= x - a,f1 = 1;\n\t\tif (b >= y) f2 = 1;\n\t\telse if (b + c >= y) c -= y - b,f2 = 1;\n\t\tif (f1 && f2) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Food for Animals.json",
    "editorial_link": "https://codeforces.com//blog/entry/102550",
    "editorial": "Obviously, the best way to buy food for every pet is to buy maximum\r\npossible food for dogs and cats, then dogs and cats will not get food.\r\nWe will buy universal food for these dogs and cats. Then the answer is ,\r\nif , and else.\r\n",
    "hint": []
}