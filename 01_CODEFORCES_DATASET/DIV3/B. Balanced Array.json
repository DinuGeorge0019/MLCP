{
    "link": "https://codeforces.com//contest/1343/problem/B",
    "problemId": "599888",
    "problem_idx": "B",
    "shortId": "1343B",
    "contest_number": "1343",
    "problem_submissions": {
        "E": [
            77544731,
            77547078,
            77818546,
            77553455,
            77526508,
            77551799,
            77553477,
            77557131,
            77551163,
            77562420,
            77564988,
            77565009,
            77544133,
            77577002
        ],
        "D": [
            77525246,
            77528102,
            77748327,
            77524381,
            77567781,
            77531413,
            77529630,
            77539927,
            77535846,
            77538289,
            77534294,
            77537349,
            77562840,
            238605180,
            77507320,
            77510486,
            77513527,
            77513404
        ],
        "C": [
            77490036,
            77493815,
            77742798,
            77501239,
            77495338,
            77513080,
            77498834,
            77511866,
            77514187,
            77507681,
            77513027,
            77522212,
            77558773,
            77490933,
            77486396,
            77494674,
            77493219
        ],
        "B": [
            77481728,
            77486304,
            77493535,
            77484584,
            77496211,
            77506722,
            77497962,
            77502380,
            77499869,
            77502504,
            77507362,
            77557318,
            77482647,
            77482138,
            77485064,
            77486365
        ],
        "A": [
            77479154,
            77479897,
            77482377,
            77479329,
            77483177,
            77511043,
            77480713,
            77493273,
            77481543,
            77493574,
            77490656,
            77562988,
            77478656,
            77478590,
            77479688,
            77479813
        ],
        "F": [
            85928150,
            77633600
        ]
    },
    "name": "B. Balanced Array",
    "statement": "You are given a positive integer n, it is guaranteed that n is even\r\n(i.e. divisible by 2).You want to construct the array a of length n such\r\nthat: The first\r\nfrac{n}{2} elements of a are even (divisible by 2); the second\r\nfrac{n}{2} elements of a are odd (not divisible by 2); ; the sum of the\r\nfirst half equals to the sum of the second half (\r\nsum\r\nlimits_{i=1}^{\r\nfrac{n}{2}} a_i =\r\nsum\r\nlimits_{i=\r\nfrac{n}{2} + 1}^{n} a_i). If there are multiple answers, you can print\r\nany. It is that the answer exists.You have to answer t independent test\r\ncases.\r\n",
    "solutions": [
        "#include<iostream>\n#include<string.h>\n#include<string>\n#include<stdio.h>\n#include<algorithm>\n#include<vector>\n#include<bitset>\n#include<math.h>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\nusing namespace std;\ntypedef long long ll;\ntypedef long double db;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\nconst int N=100000;\nconst db pi=acos(-1.0);\n#define lowbit(x) (x)&(-x)\n#define sqr(x) (x)*(x)\n#define rep(i,a,b) for (register int i=a;i<=b;i++)\n#define per(i,a,b) for (register int i=a;i>=b;i--)\n#define go(u,i) for (register int i=head[u],v=sq[i].to;i;i=sq[i].nxt,v=sq[i].to)\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb push_back\n#define maxd 998244353\n#define eps 1e-8\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while ((ch<'0') || (ch>'9')) {if (ch=='-') f=-1;ch=getchar();}\n    while ((ch>='0') && (ch<='9')) {x=x*10+(ch-'0');ch=getchar();}\n    return x*f;\n}\n\nnamespace My_Math{\n\t#define N 100000\n\n\tint fac[N+100],invfac[N+100];\n\n\tint add(int x,int y) {return x+y>=maxd?x+y-maxd:x+y;}\n\tint dec(int x,int y) {return x<y?x-y+maxd:x-y;}\n\tint mul(int x,int y) {return 1ll*x*y%maxd;}\n\tll qpow(ll x,int y)\n\t{\n\t\tll ans=1;\n\t\twhile (y)\n\t\t{\n\t\t\tif (y&1) ans=mul(ans,x);\n\t\t\tx=mul(x,x);y>>=1;\n\t\t}\n\t\treturn ans;\n\t}\n\tint getinv(int x) {return qpow(x,maxd-2);}\n\n\tint C(int n,int m)\n\t{\n\t\tif ((n<m) || (n<0) || (m<0)) return 0;\n\t\treturn mul(mul(fac[n],invfac[m]),invfac[n-m]);\n\t}\n\n\tvoid math_init()\n\t{\n\t\tfac[0]=invfac[0]=1;\n\t\trep(i,1,N) fac[i]=mul(fac[i-1],i);\n\t\tinvfac[N]=getinv(fac[N]);\n\t\tper(i,N-1,1) invfac[i]=mul(invfac[i+1],i+1);\n\t}\n\t#undef N\n}\nusing namespace My_Math;\n\nint main()\n{\n\tint T=read();\n\twhile (T--)\n\t{\n\t\tint n=read();\n\t\tif (n%4) {puts(\"NO\");continue;}\n\t\telse\n\t\t{\n\t\t\tputs(\"YES\");\n\t\t\tll sum=0;\n\t\t\trep(i,1,n>>1) \n\t\t\t{\n\t\t\t\tprintf(\"%d \",(i<<1));\n\t\t\t\tsum+=(i<<1);\n\t\t\t}\n\t\t\trep(i,1,(n>>1)-1)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",i*2-1);\n\t\t\t\tsum-=(i*2-1);\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",sum);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Balanced Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/76352",
    "editorial": "Firstly, if is not divisible by then the answer is \"\" because the\r\nparities of halves wonât match. Otherwise, the answer is always \"\".\r\nLetâs construct it as follows: firstly, letâs create the array . This\r\narray is almost good except one thing: the sum in the right half is\r\nexactly less than the sum in the left half. So we can fix it easily:\r\njust add to the last element.\r\n",
    "hint": []
}