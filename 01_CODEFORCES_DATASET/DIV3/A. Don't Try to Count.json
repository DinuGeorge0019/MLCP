{"link": "https://codeforces.com//contest/1881/problem/A", "problemId": "2259902", "problem_idx": "A", "shortId": "1881A", "contest_number": "1881", "problem_submissions": {"G": [227881682, 227890897, 227853197, 227853881, 227975243, 227899786, 227901394, 227911349, 227907618, 227893303, 227897169, 227918994, 227917936, 227914137, 227899980, 227912585, 227907908, 227897166, 227915427, 230763040, 227916848, 227913341, 227920356, 227867452, 228095818, 227915038], "F": [227862562, 227861356, 227870757, 227856965, 227974789, 227875295, 227869909, 227878015, 227879864, 227885516, 227883744, 227872766, 227871133, 227860506, 227889327, 230763024, 227881722, 227900442, 227886326, 227835034, 228095806, 227892673], "E": [227850824, 227843540, 227942027, 227858077, 227874342, 227854004, 227852561, 227851500, 227864039, 227865490, 227859415, 227863643, 227846602, 227918283, 227845118, 227881868, 230762984, 227865398, 227875008, 227858082, 227872189, 228095799, 227883249], "D": [227844854, 227839094, 227848716, 227843412, 227838899, 227847809, 227840878, 227858992, 227854380, 227853013, 227858090, 227884786, 227839966, 227871576, 230762965, 227859752, 227867911, 227861846, 227874828, 228095791, 227866894], "C": [227838508, 227835537, 227842531, 227866399, 228637953, 227849689, 227840361, 227848329, 227855215, 227848107, 227840529, 227850980, 227881582, 227837426, 227868576, 230762944, 227849495, 227862177, 227853530, 227898622, 228095784, 227862705], "B": [227831568, 227831942, 227835393, 227838918, 227835692, 227835105, 227836643, 227839535, 227838170, 227834145, 227842440, 227842178, 227832528, 227844145, 230762918, 227842892, 227850062, 227840218, 227885672, 228095774, 227845241], "A": [227829772, 227829881, 227830670, 227836999, 227830954, 227830777, 227830578, 227833236, 227838249, 227829831, 227837181, 227833271, 227908499, 227830499, 230762881, 227836954, 227841775, 227831030, 227889886, 228095766, 227839571]}, "name": "A. Don't Try to Count", "statement": "Given a string x of length n and a string s of length m (n\r\ncdot m\r\nle 25), consisting of lowercase Latin letters, you can apply any number\r\nof operations to the string x.In one operation, you append the current\r\nvalue of x to the end of the string x. Note that the value of x will\r\nchange after this.For example, if x =\"\", then after applying operations,\r\nx will change as follows: \"\"\r\nrightarrow \"\"\r\nrightarrow \"\".After what number of operations s will appear in x as a\r\nsubstring? A substring of a string is defined as a segment of it.\r\n", "solutions": ["#include <bits/stdc++.h>\n \nusing namespace std;\n#define ll long long\n#define rep(i,m,n) for (ll i=m;i<=n;i++)\n#define reb(i,m,n) for (ll i=m;i>=n;i--)\n#define rv(i,vt) for (auto i:vt)\n#define pb push_back\n#define ii pair<ll,ll>\n#define F first\n#define S second\n#define sz(v) (int)v.size()\n#define iii tuple<ll,ll,ll>\n#define dd pair<double,double>\nconst ll N=1e6+5,mod=1e9+7;\nll n,m,k,a[N];\nstring s,t;\nvoid prep(){\n\n}\nvoid solve()\n{\n    cin>>n>>m>>s>>t;\n    k=0;\n    while (sz(s)<sz(t)) k++,s+=s;\n    rep(i,0,sz(s)-sz(t)) if (s.substr(i,sz(t))==t){\n        cout<<k;\n        return;\n    }\n    k++;\n    s+=s;\n    rep(i,0,sz(s)-sz(t)) if (s.substr(i,sz(t))==t){\n        cout<<k;\n        return;\n    }\n    cout<<-1;\n}\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll tests=1;\n    cin>>tests;\n    prep();\n    while (tests--){\n        solve();\n        cout<<endl;\n}\n    cerr << \"\\n\" << (double)clock() / CLOCKS_PER_SEC * 1000 << \" ms\";\n}"], "input": "", "output": "", "tags": ["brute force", "strings"], "dificulty": "800", "interactive": false}