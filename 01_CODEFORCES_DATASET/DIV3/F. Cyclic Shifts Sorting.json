{"link": "https://codeforces.com//contest/1374/problem/F", "problemId": "659590", "problem_idx": "F", "shortId": "1374F", "contest_number": "1374", "problem_submissions": {"E2": [85382072, 85375189, 85438625], "F": [85353642, 85415306, 85383843, 85383492, 85387797], "E1": [85326034, 85415299, 85334989, 85321477, 85339121, 85319474, 85320204, 85328246, 85336700, 85339703, 85337792, 85338081, 85335206, 85337433, 85338605, 85342001, 85329936, 85333348, 85346311], "D": [85316338, 85415714, 85415293, 85323106, 85325598, 85328229, 85311173, 85312812, 85313089, 85319125, 85325499, 85321861, 85326849, 85319951, 85325883, 85322528, 85325568, 85334734, 85327646, 85314511], "C": [85307188, 85415289, 85310607, 85296173, 85316864, 85302975, 85301461, 85301463, 85305237, 85304971, 85309343, 85306153, 85311376, 85308864, 85309628, 85308295, 85307625, 85311312, 85303960], "B": [85299874, 85415460, 85415277, 85305586, 85300354, 85311254, 85298580, 85298918, 85297647, 85301049, 85300227, 85301912, 85300264, 85307719, 85302644, 85305750, 85299884, 85297473, 85305618, 85299402], "A": [85296254, 85418749, 85415919, 85415268, 85300037, 85296089, 85298024, 85296518, 245635316, 85296385, 85295981, 85296977, 85296136, 85296861, 85296508, 85298422, 85298833, 85299917, 85296648, 85305648, 85300594, 85296295]}, "name": "F. Cyclic Shifts Sorting", "statement": "You are given an array a consisting of n integers.In one move, you can\r\nchoose some index i (1\r\nle i\r\nle n - 2) and shift the segment [a_i, a_{i + 1}, a_{i + 2}] cyclically\r\nto the right (i.e. replace the segment [a_i, a_{i + 1}, a_{i + 2}] with\r\n[a_{i + 2}, a_i, a_{i + 1}]). Your task is to sort the initial array by\r\nor say that it is impossible to do that.You have to answer t independent\r\ntest cases.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define IO_OP std::ios::sync_with_stdio(0); std::cin.tie(0);\n#define F first\n#define S second\n#define V vector\n#define PB push_back\n#define MP make_pair\n#define EB emplace_back\n#define ALL(v) (v).begin(), (v).end()\n#define debug(x) cerr << #x << \" is \" << x << endl\n// #define endl '\\n'\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pi;\ntypedef V<int> vi;\n\nconst int INF = 1e9 + 7, N = 505;\n\nvi ans;\nint a[N], b[N];\n\nvoid go(int i) {\n\tans.PB(i);\n\tint t = a[i];\n\ta[i] = a[i + 2];\n\ta[i + 2] = a[i + 1];\n\ta[i + 1] = t;\n}\n\nvoid solve() {\n\tans.clear();\n\tint n;\n\tcin >> n;\n\tunordered_set<int> s;\n\tfor(int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t\ts.insert(a[i]);\n\t}\n\tfor(int i = n - 1; i >= 2; i--) {\n\t\tint pos = max_element(a, a + i + 1) - a;\n\t\tif(pos == 0) {\n\t\t\tgo(pos);\n\t\t\tpos++;\n\t\t}\n\t\twhile(pos != i) {\n\t\t\tgo(pos - 1);\n\t\t\tpos++;\n\t\t}\n\t}\n\tfor(int i = 0; i < n; i++) b[i] = a[i];\n\tif(a[0] > a[1]) {\n\t\tif(s.size() == n) {\n\t\t\tcout << -1 << endl;\n\t\t\treturn;\n\t\t}\n\t\tfor(int i = 0; i < n - 1; i++) {\n\t\t\tif(a[i] <= a[i + 1]) continue;\n\t\t\tif(i + 1 == n - 1) break;\n\t\t\tif(a[i + 2] == a[i]) {\n\t\t\t\tgo(i), go(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgo(i + 1);\n\t\t\tgo(i);\n\t\t}\n\t}\n\tfor(int i = 0; i < n - 1; i++) {\n\t\tassert(a[i] <= a[i + 1]);\n\t}\n\tcout << ans.size() << endl;\n\tfor(int i:ans) cout << i + 1 << \" \";\n\tcout << endl;\n}\n\nsigned main()\n{\n\tIO_OP;\n\t\n\tint t;\n\tcin >> t;\n\twhile(t--) {\n\t\tsolve();\n\t}\t\n\t\n}\n\n\n\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "dificulty": "2400", "interactive": false}