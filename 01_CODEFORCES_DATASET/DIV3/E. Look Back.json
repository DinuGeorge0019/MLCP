{"link": "https://codeforces.com//contest/1883/problem/E", "problemId": "2278976", "problem_idx": "E", "shortId": "1883E", "contest_number": "1883", "problem_submissions": {"E": [229254391, 229228116, 229229123, 229229517, 229233192, 229225859, 229230943, 229238433, 229232300, 229233333, 229233942, 229263811, 229236033, 229236789, 229237333, 232949915, 229218375, 229241000, 229246670], "F": [229246429, 229232660, 229238625, 229233199, 229237512, 229241178, 229249370, 229237347, 229246925, 229236557, 229248336, 229241012, 229242598, 229250481, 229269234, 229251378, 232949748, 229222527, 229246156, 229254662], "G2": [229234009, 229254791, 229266437, 229254654, 229255057, 229265822, 229259707, 229267425, 229264812, 229264031, 229272506, 229274536, 229255952, 229271136, 229260211, 229270293, 232949665, 229301663, 229269692, 229270153], "G1": [229219524, 229255068, 229244230, 229249885, 229247413, 229253349, 229238825, 229266363, 229254833, 229263379, 229254509, 229274732, 229249349, 229257348, 229245372, 229258069, 232949701, 229234873, 229255834, 229262816], "C": [229213933, 229214044, 229209127, 229216055, 229214618, 229213072, 229215254, 229214649, 229223998, 229215021, 229215102, 229214748, 229219318, 229218539, 229216356, 232950046, 232950017, 229210060, 229232319, 229224513], "D": [229213159, 229218603, 229213694, 229223552, 229218966, 229217944, 229218306, 229218892, 229224727, 229227006, 229220642, 229221160, 229233957, 229224237, 229229032, 229232139, 232949956, 229214096, 229236853, 229237124], "A": [229205950, 229205653, 229203982, 229205587, 229204174, 229205183, 229204022, 229204395, 229217540, 229206219, 229206377, 229205661, 229204875, 229205824, 229205309, 232950152, 229204753, 229214596, 229210814], "B": [229205861, 229208946, 229205494, 229209640, 229210752, 229208113, 229209050, 229207130, 229220907, 229209362, 229209632, 229208425, 229209627, 229209608, 229210310, 232950093, 229206777, 229217319, 229218711]}, "name": "E. Look Back", "statement": "You are given an array of integers a_1, a_2,\r\nldots, a_n. You need to make it non-decreasing with the minimum number\r\nof operations. In one operation, you do the following: Choose an index 1\r\nleq i\r\nleq n, Set a_i = a_i\r\ncdot 2.An array b_1, b_2,\r\nldots, b_n is non-decreasing if b_i\r\nleq b_{i+1} for all 1\r\nleq i < n.\r\n", "solutions": ["#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n    int tt;cin >> tt;\n    while(tt--){\n        int n;cin >> n;\n        vector<long long>v(n);\n        long long ans = 0,curr = 0;\n        for(int i = 0; i < n; i++){\n            cin >> v[i];\n            if(i){\n                int cnt = 0;\n                long long k = v[i];\n                while(v[i - 1] > k){\n                    k *= 2;\n                    cnt++;\n                }\n                while(v[i - 1]*2 <= k and curr){\n                    v[i - 1] *= 2;\n                    curr--;\n                }\n                curr = curr + cnt;\n                ans += curr;\n            }\n        }\n        cout << ans << endl;\n    }\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "greedy"], "dificulty": "1700", "interactive": false}