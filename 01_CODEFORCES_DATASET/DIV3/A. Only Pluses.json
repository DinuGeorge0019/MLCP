{
    "link": "https://codeforces.com//contest/1992/problem/A",
    "problemId": "2748263",
    "problem_idx": "A",
    "shortId": "1992A",
    "contest_number": "1992",
    "problem_submissions": {
        "G": [
            270004158,
            270000712,
            270020186,
            270006424,
            270010291,
            270026135,
            270032635,
            270035721,
            270033149,
            270036718,
            270041253,
            270830404,
            270035615,
            270034895,
            270041739,
            270045150,
            269953500,
            270015289,
            269950486
        ],
        "F": [
            269972577,
            270018896,
            269993465,
            269987867,
            269991929,
            270003873,
            269994703,
            270009199,
            270016540,
            270005935,
            270127981,
            270013136,
            270020087,
            270019936,
            270018379,
            269963694,
            270043761,
            270005597,
            269985278
        ],
        "D": [
            269954705,
            269930808,
            269933166,
            269942867,
            269936957,
            269946925,
            269942518,
            269941050,
            269944797,
            269962503,
            269960047,
            269956728,
            269964646,
            270000105,
            269992943,
            269953387,
            270024549,
            269937412
        ],
        "E": [
            269950946,
            269964630,
            269972651,
            269967159,
            269979484,
            269986612,
            269986054,
            269986867,
            269983914,
            269989311,
            269990694,
            269983845,
            269996015,
            269971543,
            269983529,
            270000206,
            270015715,
            269961487
        ],
        "C": [
            269920653,
            269918264,
            269915470,
            269928750,
            269924685,
            269919119,
            269916880,
            269924258,
            269918590,
            269936939,
            269921649,
            269929196,
            269923650,
            269913996,
            269998285,
            269933575,
            270027835,
            269914944
        ],
        "B": [
            269901952,
            269907735,
            269910847,
            269907929,
            269906378,
            269906593,
            269906048,
            269911414,
            269907898,
            269912483,
            269907733,
            269916021,
            269911764,
            269906789,
            270003910,
            269961585,
            270031623,
            269906408
        ],
        "A": [
            269898839,
            269900621,
            269899306,
            269900117,
            269900634,
            269898982,
            269898946,
            269899343,
            269899743,
            269900745,
            269900678,
            269900839,
            269903685,
            269898938,
            270007186,
            269957657,
            270033185,
            269900065
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/131461",
    "editorial": "TutorialLetâs prove why itâs always better to add to the smallest\r\nnumber, let , then compare the three expressions: , , and . Remove the\r\ncommon part , and we get: , , ., since , similarly, , since . Therefore,\r\nwe can simply find the minimum times and add one to it. And thus, obtain\r\nthe answer.Another, primitive approach is to simply iterate through what\r\nwe will add to , , and with three loops.Since we can only add times, the\r\ntime complexity of the solution is .\r\n",
    "name": "A. Only Pluses",
    "statement": "Kmes has written three integers a, b and c in order to remember that he\r\nhas to give Noobish_Monk a\r\ntimes b\r\ntimes c bananas.Noobish_Monk has found these integers and decided to do\r\nthe following : pick one of these integers; increase it by 1. For\r\nexample, if a = 2, b = 3 and c = 4, then one can increase a three times\r\nby one and increase b two times. After that a = 5, b = 5, c = 4. Then\r\nthe total number of bananas will be 5\r\ntimes 5\r\ntimes 4 = 100.What is the maximum value of a\r\ntimes b\r\ntimes c Noobish_Monk can achieve with these operations?\r\n",
    "solutions": [
        "#include <bits/stdc++.h> using namespace std; #define int long long#define inf 0x3F3F3F3F3F3F3F3F const int MXN = 2e5 + 5; mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); void _(){\tint a, b, c;\tcin >> a >> b >> c;\tint res = -inf;\tfor (int i = 0; i <= 5; i++)\t{\t\tfor (int j = 0; j <= 5; j++)\t\t{\t\t\tfor (int k = 0; k <= 5; k++)\t\t\t{\t\t\t\tif (i + j + k <= 5) res = max(res, (a + i) * (b + j) * (c + k));\t\t\t}\t\t}\t}\tcout << res << '\\n';} signed main(){\tios_base::sync_with_stdio(0);\tcin.tie(0);\tint t;\tcin >> t;\twhile (t--)\t{\t\t_();\t}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Only Pluses.json",
    "hint": []
}