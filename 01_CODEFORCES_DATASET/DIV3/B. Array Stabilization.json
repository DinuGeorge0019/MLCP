{
    "link": "https://codeforces.com//contest/1095/problem/B",
    "problemId": "275102",
    "problem_idx": "B",
    "shortId": "1095B",
    "contest_number": "1095",
    "problem_submissions": {
        "E": [
            47572493,
            47577391,
            47577601,
            47571130,
            47573480,
            47573851,
            47579488,
            47579243,
            47583313,
            47572977,
            47576569,
            47582897,
            47574546,
            47577946,
            47581685,
            47573841,
            47582231,
            47584199,
            47573945,
            47583101
        ],
        "F": [
            47566370,
            47573294,
            47562701,
            47573988,
            47579057,
            47581403,
            47572438,
            47566223,
            47578405,
            47576558,
            47583994,
            47577257,
            47570463,
            47582128,
            47586705,
            47807775,
            47807743,
            47807736,
            47807702,
            47586605,
            47608877,
            47573085,
            47580349,
            47588876,
            47585818
        ],
        "D": [
            47563209,
            47614712,
            47567371,
            47571011,
            47564325,
            47567777,
            47568284,
            47567860,
            47577158,
            47566286,
            47577441,
            47568324,
            47562890,
            47577182,
            47571848,
            47568920,
            47581067,
            47574935,
            47575170,
            47568243,
            47568626
        ],
        "C": [
            47559007,
            47560130,
            47566278,
            47559870,
            47560866,
            47562972,
            47564210,
            47560920,
            47562511,
            47560682,
            47563534,
            47559786,
            51809567,
            47573250,
            47561981,
            47566916,
            47564246,
            47565270,
            47562848,
            47563772,
            47565179
        ],
        "B": [
            47555392,
            47555193,
            47564009,
            47556364,
            47556516,
            47555175,
            47555868,
            47555467,
            47557131,
            47554642,
            47557601,
            47555771,
            47557598,
            47556456,
            47555954,
            47558351,
            47557404,
            47558162,
            47559339,
            47556593
        ],
        "A": [
            47554038,
            47554188,
            47553996,
            47553824,
            47555088,
            47553896,
            47554204,
            47554208,
            47554977,
            47553891,
            47554134,
            47554837,
            47554623,
            47554538,
            47554565,
            47555784,
            47555600,
            47554171,
            47557808,
            47555100
        ]
    },
    "name": "B. Array Stabilization",
    "statement": "You are given an array a consisting of n integer numbers.Let of the\r\narray be the following value:\r\nmax\r\nlimits_{i = 1}^{n} a_i -\r\nmin\r\nlimits_{i = 1}^{n} a_i.You have to remove element from this array to\r\nminimize of the resulting (n-1)-elements array. Your task is to\r\ncalculate the minimum possible .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define disp(x) cout<<x<<\" \";\ntypedef long long ll;\n#define fo(i,a,b) for(int i=a;i<=b;i++)\n#define endl '\\n'\n#define show(x) cout<<x<<endl;\n#define rf(i,a,b) for(int i=a;i>=b;i--) \n#define pret(x) cout<<x<<endl; return 0;\n#define fast_io ios_base::sync_with_stdio(0);\n#define let(x,y) cout<<x<<\" \"<<y<<endl;\ntypedef vector<int> vi;\nll MOD=1e9+7;\nll MAX=9223372036854775807;\n\nint main(){\n\tfast_io;\n\tint n;\n\tcin>>n;\n\tint a[n];\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tcin>>a[i];\n\t}\n\tsort(a,a+n);\n\tint ans=1e6;\n\tif(n==2){\n\t\tpret(0);\n\t}\n\tans=min(ans,a[n-1]-a[1]);\n\tans=min(ans,a[n-2]-a[0]);\n\tshow(ans);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Array Stabilization.json",
    "editorial_link": "https://codeforces.com//blog/entry/64130",
    "editorial": "It is easy to see that we always have to remove either minimum or\r\nmaximum of the array. So we can sort the array and the answer will be .\r\nWe also can do it without sort because two minimal and two maximal\r\nelements of the array can be found in linear time.\r\n",
    "hint": []
}