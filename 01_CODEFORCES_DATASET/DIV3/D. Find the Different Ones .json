{"link": "https://codeforces.com//contest/1927/problem/D", "problemId": "2464697", "problem_idx": "D", "shortId": "1927D", "contest_number": "1927", "problem_submissions": {"C": [245774999, 245774883, 245105422, 245122382, 245158304, 245133466, 245112415, 245098943, 245111076, 245091126, 245103710, 245107875, 245104800, 245109291, 245088939, 245786825, 245116795, 245107590, 245112204, 245122106, 245110489, 245107546, 245111221], "D": [245774988, 245774903, 245126667, 245124314, 245152025, 245153432, 245150633, 245112201, 245122425, 245118950, 245114451, 246093598, 245128357, 245112456, 245133587, 245114664, 245786868, 245131035, 245123686, 245138273, 245112167, 245122716, 245116208, 245129268], "A": [245774978, 245774852, 245082305, 245083383, 245165173, 245112854, 245083966, 245081484, 245092954, 245080652, 245090517, 245085040, 245080976, 245084295, 245096827, 245786733, 245088207, 245083129, 245083368, 245082872, 245085962, 245085358, 245084178], "G": [245774962, 245189987, 245223574, 245121073, 245211786, 245227020, 245179313, 246085405, 245611417, 253341820, 245766332, 245766313, 245521133], "F": [245774946, 245160123, 245189910, 245140204, 245189390, 245194353, 245162965, 245152515, 245174987, 245164490, 245179652, 245164683, 245184260, 245786958, 245173789, 245197866, 245172638, 245186291, 245182363, 245204502, 245180485], "E": [245774926, 245132223, 245142824, 245171074, 245104988, 245171442, 245119413, 245133491, 245140861, 245144155, 245140539, 245143808, 245144249, 245155627, 245786913, 245146648, 245137887, 245152924, 245140823, 245144077, 245125971, 245156370], "B": [245774866, 245091252, 245094838, 245162618, 245122271, 245095055, 245090386, 245100335, 245081684, 245089900, 245095184, 245093242, 245093048, 245106643, 245786775, 245103674, 245094877, 245096630, 245091382, 245098673, 245107003, 245100041]}, "name": "D. Find the Different Ones ", "statement": "You are given an array a of n integers, and q queries.Each query is\r\nrepresented by two integers l and r (1\r\nle l\r\nle r\r\nle n). Your task is to find, for each query, two indices i and j (or\r\ndetermine that they do not exist) such that: l\r\nle i\r\nle r; l\r\nle j\r\nle r; a_i\r\nne a_j. In other words, for each query, you need to find a pair of\r\ndifferent elements among a_l, a_{l+1},\r\ndots, a_r, or report that such a pair does not exist.\r\n", "solutions": ["// LUOGU_RID: 146673948\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint tt;\nint n,m;\nint a[200001],nex[200001];\nint sta[200001],top;\nvector<pair<int,int> > vec[200001]; \npair<int,int> ans[200001];\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\tcin>>tt;\n\twhile(tt--){\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tcin>>a[i];\n\t\t\tnex[i]=0; \n\t\t}\n\t\ttop=0;\n\t\tfor(int i=n;i;i--){\n\t\t\twhile(top&&a[sta[top]]!=a[i]){\n\t\t\t\tnex[sta[top]]=i;\n\t\t\t\ttop--;\n\t\t\t}\n\t\t\tsta[++top]=i;\n\t\t}\n\t\tcin>>m;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint l,r;cin>>l>>r;\n\t\t\tvec[r].push_back(make_pair(l,i));\n\t\t}\n\t\tint maxn=-1,pos=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(nex[i]>=maxn) pos=i;\n\t\t\tmaxn=max(maxn,nex[i]);\n\t\t\tfor(auto u:vec[i]){\n\t\t\t\tif(maxn<u.first){\n\t\t\t\t\tans[u.second]=make_pair(-1,-1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans[u.second]=make_pair(maxn,pos);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tcout<<ans[i].first<<' '<<ans[i].second<<'\\n';\n\t\t}\n\t\tfor(int i=1;i<=n;i++) vec[i].clear();\n\t\tcout<<'\\n';\n\t}\n}"], "input": "", "output": "", "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "two pointers"], "dificulty": "1300", "interactive": false}