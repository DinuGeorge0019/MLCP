{
    "link": "https://codeforces.com//contest/1296/problem/B",
    "problemId": "531583",
    "problem_idx": "B",
    "shortId": "1296B",
    "contest_number": "1296",
    "problem_submissions": {
        "F": [
            70286253,
            70288122,
            70354438,
            70285370,
            70284169,
            70273160,
            70285348,
            70284069,
            73578212
        ],
        "E2": [
            70268992,
            70280432,
            70276298,
            70288167,
            70281465,
            70297360,
            70276336,
            70279357,
            70275001,
            70289621,
            70284967,
            70279268,
            70267172,
            70283236,
            70277761,
            70279813,
            70288110,
            70291891
        ],
        "E1": [
            70259556,
            70271142,
            70274990,
            70272602,
            70283753,
            70297032,
            70271882,
            70269738,
            70275752,
            70268786,
            70271448,
            70276258,
            70273279,
            70265150,
            70276327,
            70278408,
            70275898,
            70282584,
            70276913
        ],
        "D": [
            70254151,
            70262790,
            70262428,
            70261281,
            70276243,
            70262462,
            70263810,
            70262249,
            70265276,
            70259161,
            70259866,
            70267524,
            70269993,
            70279455,
            70268313,
            70271364,
            70271292,
            70266627,
            70267013
        ],
        "C": [
            70249671,
            70254183,
            70253966,
            70257190,
            70266437,
            70255782,
            70255981,
            70254148,
            70255586,
            70253171,
            70255047,
            70257702,
            70256317,
            70276767,
            70260739,
            70266471,
            70262570,
            70259034,
            70260723
        ],
        "B": [
            70243991,
            70245027,
            70247695,
            70248175,
            70243833,
            70246192,
            70247369,
            70246768,
            70245235,
            70247847,
            70245515,
            70248129,
            70249598,
            70248726,
            70249146,
            70250758,
            70248649,
            70248220
        ],
        "A": [
            70240828,
            70240986,
            70241720,
            70243455,
            70240584,
            70241402,
            70241482,
            70242817,
            70240810,
            70240914,
            70243012,
            70245219,
            70243961,
            70242643,
            70241917,
            70240694,
            70241375,
            70241384
        ]
    },
    "name": "B. Food Buying",
    "statement": "Mishka wants to buy some food in the nearby shop. Initially, he has s\r\nburles on his card. Mishka can perform the following operation any\r\nnumber of times (possibly, zero): choose some 1\r\nle x\r\nle s, buy food that costs exactly x burles and obtain\r\nlfloor\r\nfrac{x}{10}\r\nrfloor burles as a cashback (in other words, Mishka spends x burles and\r\nobtains\r\nlfloor\r\nfrac{x}{10}\r\nrfloor back). The operation\r\nlfloor\r\nfrac{a}{b}\r\nrfloor means a divided by b rounded down.It is guaranteed that you can\r\nalways buy some food that costs x for any possible value of x.Your task\r\nis to say the maximum number of burles Mishka can spend if he buys food\r\noptimally.For example, if Mishka has s=19 burles then the maximum number\r\nof burles he can spend is 21. Firstly, he can spend x=10 burles, obtain\r\n1 burle as a cashback. Now he has s=10 burles, so can spend x=10 burles,\r\nobtain 1 burle as a cashback and spend it too.You have to answer t\r\nindependent test cases.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define LL long long\n#define PB push_back\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int N=1e6+10,M=N*400,mod=1e9+7;\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        scanf(\"%d\",&n);\n        LL ans=0;\n        while(n>=10){\n            ans+=n/10*10;\n            n=n%10+n/10;\n        }\n        ans+=n;\n        printf(\"%lld\\n\",ans);\n\n    }\n    return 0;\n}\n/*\n*/\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Food Buying.json",
    "editorial_link": "https://codeforces.com//blog/entry/73627",
    "editorial": "Letâs do the following greedy solution: it is obvious that when we buy\r\nfood that costs exactly for , we donât lose any burles because of\r\nrounding. Letâs take the maximum power of that is not greater than (let\r\nit be ), buy food that costs (and add this number to the answer) and add\r\nto . Apply this process until and then add to the answer.Time\r\ncomplexity: per test case.\r\n",
    "hint": []
}