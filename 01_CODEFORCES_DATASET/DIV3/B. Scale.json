{
    "link": "https://codeforces.com//contest/1996/problem/B",
    "problemId": "2778589",
    "problem_idx": "B",
    "shortId": "1996B",
    "contest_number": "1996",
    "problem_submissions": {
        "G": [
            272815559,
            272903634,
            272903592,
            272903418,
            272850378,
            272829160,
            272846769,
            272917148,
            272843968,
            272801966,
            272891447,
            273051360,
            273051300,
            272852709,
            277596550
        ],
        "F": [
            272784299,
            272793161,
            272807689,
            272809360,
            272830969,
            272798046,
            272797379,
            272844703,
            272806635,
            272800919,
            272804361,
            272807242,
            272813027,
            272855036,
            272810332,
            272821433,
            272800404,
            272820587,
            272829162,
            272807664,
            272816226,
            272821599,
            272820591,
            272815918
        ],
        "E": [
            272768761,
            272775513,
            272762810,
            272775844,
            272823416,
            272782075,
            272761261,
            272777167,
            272789153,
            272785690,
            272777083,
            272786909,
            272772099,
            272795998,
            272776949,
            272765827,
            272789445,
            272789546,
            272779861,
            272787485
        ],
        "D": [
            272761438,
            272765354,
            272813661,
            272767517,
            272818911,
            272771177,
            272779573,
            272778986,
            272764786,
            272769566,
            272775352,
            272769622,
            272774700,
            272762959,
            272779115,
            272762141,
            272771898,
            272774147,
            272768381,
            272773685,
            272774940
        ],
        "C": [
            272749300,
            272751224,
            272747619,
            272760085,
            272816579,
            272747209,
            272749428,
            272754671,
            272751382,
            272753279,
            272756574,
            272752694,
            272753758,
            272752271,
            272750229,
            272749232,
            272759739,
            272751545,
            272748871,
            272750894
        ],
        "B": [
            272737073,
            272739985,
            272740771,
            272742756,
            272810526,
            272736341,
            272731072,
            272746867,
            272739153,
            272741965,
            272746544,
            272740783,
            272737062,
            272739328,
            272737959,
            272736354,
            272749397,
            272742081,
            272736698,
            272740417
        ],
        "A": [
            272724627,
            272725221,
            272724958,
            272806237,
            272724506,
            272723181,
            272724288,
            272724605,
            272723501,
            272737370,
            272725890,
            272725751,
            272728152,
            272725138,
            272723459,
            272723672,
            272729720,
            272724250,
            272726300
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/131948",
    "editorial": "Let's define every k\n by k\n block of cells by its value in the top left corner, since all cells in the block must have the same value. So, we can just print out the value of the cell in every k\n'th row and every k\n'th column.\n",
    "name": "B. Scale",
    "statement": "Tina has a square grid with n rows and n columns. Each cell in the grid\r\nis either 0 or 1. Tina wants to reduce the grid by a factor of k (). To\r\ndo this, Tina splits the grid into k\r\ntimes k nonoverlapping blocks of cells such that every cell belongs to\r\nexactly one block.Tina then replaces each block of cells with a single\r\ncell equal to the value of the cells in the block. . For example, the\r\nfollowing demonstration shows a grid being reduced by factor of 3.\r\n000111000111000111111000111000111000 0110 Help Tina reduce the grid by a\r\nfactor of k.\r\n",
    "solutions": [
        "/**   - dwuy - 　　　　　 ／＞　   フ　　　　　 | 　_　 _|　 　　　 ／`ミ _x ノ　　 　 /　　　 　 |　　　 /　  ヽ　　 ?　／￣|　　 |　|　|　| (￣ヽ＿_ヽ_)_)　＼二つ **/#include <bits/stdc++.h> #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL)#define file(a) freopen(a\".inp\",\"r\",stdin); freopen(a\".out\", \"w\",stdout)#define fi first#define se second#define endl \"\\n\"#define len(s) (int)((s).size())#define MASK(k)(1LL<<(k))#define TASK \"test\"#define int long long using namespace std; typedef tuple<int, int, int> tpiii;typedef pair<double, double> pdd;typedef pair<int, int> pii;typedef long long ll; const long long OO = 1e18;const int MOD = 1e9 + 7;const int INF = 1e9;const int MX = 300005; int n, m, k, q;string s, t;string a[MX];int b[MX]; void solve(){    cin >> n >> k;    for(int i=1; i<=n; i++){        cin >> a[i];        a[i] = ' ' + a[i];    }    for(int i=1; i<=n; i+=k){        for(int j=1; j<=n; j+=k){            cout << a[i][j];        }        cout << endl;    }} int32_t main(){    fastIO;    //file(TASK);     int q;    cin >> q;    while(q--){        solve();    }     return 0;}    "
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Scale.json",
    "hint": []
}