{
    "link": "https://codeforces.com//contest/1154/problem/B",
    "problemId": "331478",
    "problem_idx": "B",
    "shortId": "1154B",
    "contest_number": "1154",
    "problem_submissions": {
        "G": [
            52855762,
            52851693,
            52883699,
            52890510,
            52889410,
            52873345,
            64071464,
            52852198,
            52889617,
            52938027,
            52899099,
            52883451,
            52933277
        ],
        "F": [
            52847525,
            52855540,
            52853802,
            52856499,
            52854684,
            52859289,
            52859188,
            52856934,
            52861411,
            52860421,
            52864456,
            52865823,
            52865674,
            52862756,
            52863204,
            52898461,
            52885308,
            52867718
        ],
        "E": [
            52844409,
            52843854,
            52845875,
            52851030,
            52848418,
            52851394,
            52850626,
            52850695,
            52853071,
            52854108,
            52854816,
            52860104,
            52857303,
            52865759,
            52865330,
            52848827,
            52846804,
            52847297,
            52851755
        ],
        "D": [
            52838256,
            52840530,
            52838159,
            52842046,
            52844146,
            52843431,
            52844055,
            52843180,
            52844776,
            52845105,
            52843951,
            52855282,
            52849507,
            52844126,
            52848629,
            52839874,
            52840662,
            52843194,
            52840788
        ],
        "C": [
            52833823,
            52836291,
            52835397,
            52837673,
            52839569,
            52838593,
            52840124,
            52839273,
            52840405,
            52841087,
            52841150,
            52840622,
            52844765,
            52838877,
            52843127,
            52835631,
            52837394,
            52838050,
            52836957
        ],
        "B": [
            52831026,
            52830367,
            52830898,
            52831597,
            52835486,
            52833452,
            52832490,
            52835076,
            52832847,
            52835796,
            52836031,
            52832592,
            52835180,
            52833364,
            52837330,
            52831701,
            52832070,
            52833675,
            52832455
        ],
        "A": [
            52828088,
            52827996,
            52828695,
            52828356,
            52829673,
            52830380,
            52828666,
            52830260,
            52828393,
            52830384,
            52829496,
            52829394,
            52828592,
            52828708,
            52833449,
            52828168,
            52828298,
            52828150,
            52828517
        ]
    },
    "name": "B. Make Them Equal",
    "statement": "You are given a sequence a_1, a_2,\r\ndots, a_n consisting of n integers.You can choose any non-negative\r\ninteger D (i.e. D\r\nge 0), and for each a_i you can: add D (only once), i. e. perform a_i :=\r\na_i + D, or subtract D (only once), i. e. perform a_i := a_i - D, or\r\nleave the value of a_i unchanged. It is possible that after an operation\r\nthe value a_i becomes negative.Your goal is to choose such D and perform\r\nchanges in such a way, that all a_i are equal (i.e. a_1=a_2=\r\ndots=a_n).Print the required D or, if it is impossible to choose such\r\nvalue D, print .For example, for array [2, 8] the value D=3 is minimum\r\npossible because you can obtain the array [5, 5] if you will add D to 2\r\nand subtract D from 8. And for array [1, 4, 7, 7] the value D=3 is also\r\nminimum possible. You can add it to 1 and subtract it from 7 and obtain\r\nthe array [4, 4, 4, 4].\r\n",
    "solutions": [
        "// And in the end, the love you take is equal to the love you make.\n//                      Paul McCartney (the Beatles). The End. Abbey Road.\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing LL = long long;\n\nnamespace _buff {\n\nconst size_t BUFF = 1 << 19;\nchar buff[BUFF], *begin = buff, *end = buff;\nchar getc() {\n  if (begin == end) {\n    begin = buff;\n    end = buff + fread(buff, 1, BUFF, stdin);\n  }\n  return begin == end ? -1 : *begin++;\n}\n\n}\n\nLL read() {\n  using namespace _buff;\n  LL ret = 0;\n  bool pos = true;\n  char c = getc();\n  for (; (c < '0' || c > '9') && c != '-'; c = getc()) {\n    assert(~c);\n  }\n  if (c == '-') {\n    pos = false;\n    c = getc();\n  }\n  for (; c >= '0' && c <= '9'; c = getc()) {\n    ret = (ret << 3) + (ret << 1) + (c ^ 48);\n  }\n  return pos ? ret : -ret;\n}\n\nconst size_t N = 100 + 5;\n\nint arr[N];\n\nint main() {\n  int n = read();\n  generate_n(arr, n, read);\n  int ans = -1;\n  for (int i = 1; i <= 100; ++i) {\n    set<int> s;\n    for (int j = 0; j < n; ++j) {\n      if (arr[j] < i) {\n        s.emplace(i - arr[j]);\n      } else if (arr[j] > i) {\n        s.emplace(arr[j] - i);\n      }\n    }\n    if (s.empty()) {\n      if (!~ans || 0 < ans) ans = 0;\n    } else if (s.size() == 1) {\n      if (!~ans || *s.begin() < ans) ans = *s.begin();\n    }\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Make Them Equal.json",
    "editorial_link": "https://codeforces.com//blog/entry/66586",
    "editorial": "Letâs leave only unique values of the given array in the array (i. e.\r\nconstruct an array that is actually array without duplicate element) and\r\nsort it in ascending order. Then letâs consider the following cases: If\r\nthe length of is greater than then the answer is ; if the length of is\r\nthen there are two cases: if then the answer is ; otherwise the answer\r\nis ; if the length of is then there are also two cases: if is even then\r\nthe answer is ; otherwise the answer is ; and if the length of is then\r\nthe answer is .\r\n",
    "hint": []
}