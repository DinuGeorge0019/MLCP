{"link": "https://codeforces.com//contest/988/problem/F", "problemId": "186731", "problem_idx": "F", "shortId": "988F", "contest_number": "988", "problem_submissions": {"F": [38850795, 38857750, 38858170, 38851497, 38853401, 38851133, 38851544, 38859838, 38848093, 38907880, 38907831], "E": [38844731, 38844693, 38848592, 38858719, 45955063, 38853668, 38847637, 38853437, 38839299, 38861890, 38864917, 38858969, 38857001, 38858857, 38858182, 38859392, 38864208, 38855992, 38859515], "D": [38840392, 38848969, 38851772, 38843233, 38946024, 38842418, 38844498, 38868323, 38844694, 44031526, 44031416, 38848128, 38864951, 38847308, 38850578, 38849097, 38853027, 38857525, 38900563, 38852549, 38852551, 38854050], "C": [38837549, 38839564, 38842456, 38840172, 38945961, 38836792, 38841053, 38844962, 38841756, 38846652, 38845827, 38864928, 38839933, 38843822, 38844819, 38846434, 38850120, 38847359, 38847106, 38847820, 38842193], "B": [38835102, 38835826, 38836723, 38836527, 38945931, 38930097, 38834357, 38837106, 38835693, 38837985, 38835772, 38840393, 38864939, 38841754, 38836363, 38841437, 38840823, 38838916, 38847752, 38851402, 38836768], "A": [38833122, 38833181, 38833533, 38833575, 38945641, 38945626, 38929615, 38833067, 38833623, 38833881, 38833289, 38833348, 38834787, 38833528, 38833829, 38833852, 38833420, 38836476, 38849551, 38833125, 38833682]}, "name": "F. Rain and Umbrellas", "statement": "Polycarp lives on a coordinate line at the point x = 0. He goes to his\r\nfriend that lives at the point x = a. Polycarp can move only from left\r\nto right, he can pass one unit of length each second.Now it\u2019s raining,\r\nso some segments of his way are in the rain. Formally, it\u2019s raining on n\r\nnon-intersecting segments, the i-th segment which is in the rain is\r\nrepresented as [l_i, r_i] (0\r\nle l_i < r_i\r\nle a).There are m umbrellas lying on the line, the i-th umbrella is\r\nlocated at point x_i (0\r\nle x_i\r\nle a) and has weight p_i. When Polycarp begins his journey, he doesn\u2019t\r\nhave any umbrellas.During his journey from x = 0 to x = a Polycarp can\r\npick up and throw away umbrellas. Polycarp picks up and throws down any\r\numbrella instantly. He can carry any number of umbrellas at any moment\r\nof time. Because Polycarp doesn\u2019t want to get wet, he must carry at\r\nleast one umbrella while he moves from x to x + 1 if a segment [x, x +\r\n1] is in the rain (i.e. if there exists some i such that l_i\r\nle x and x + 1\r\nle r_i).The condition above is the only requirement. For example, it is\r\npossible to go without any umbrellas to a point where some rain segment\r\nstarts, pick up an umbrella at this point and move along with an\r\numbrella. Polycarp can swap umbrellas while he is in the rain.Each unit\r\nof length passed increases Polycarp\u2019s fatigue by the sum of the weights\r\nof umbrellas he carries while moving.Can Polycarp make his way from\r\npoint x = 0 to point x = a? If yes, find the minimum total fatigue after\r\nreaching x = a, if Polycarp picks up and throws away umbrellas\r\noptimally.\r\n", "solutions": ["/// In The Name Of God\n\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n\n#include <bits/stdc++.h>\n\n#define f first\n#define s second\n\n#define pb push_back\n#define pp pop_back\n#define mp make_pair\n\n#define sz(x) (int)x.size()\n#define sqr(x) ((x) * 1ll * (x))\n#define all(x) x.begin(), x.end()\n\n#define rep(i, l, r) for (int i = (l); i <= (r); i++)\n#define per(i, l, r) for (int i = (l); i >= (r); i--)\n\n#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);\n\n#define nl '\\n'\n#define ioi exit(0);\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nconst int N = (int)5e5 + 7;\nconst int inf = (int)2e9 + 7;\nconst int mod = (int)1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\n\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};\nconst int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nusing namespace std;\n\nint a, n, m;\nint take[N];\n\nint pos[N], w[N];\n\nll dp[2001][2001];\nbool bad[N];\nll calc(int x = 0, int last = 0, int cost = 0) {\n\tif (x == a) return 0;\n\tif (~dp[x][last]) return dp[x][last];\n\tll res = inf;\t\n\tif (bad[x]) {\n\t\tif (!last) {\n\t\t\tif (take[x]) {\n\t\t\t\tlast = take[x];\n\t\t\t\tres = min(res, calc(x + 1, last, cost + w[last]) + w[last]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tres = min(res, calc(x + 1, last, cost + w[last]) + w[last]);\n\t\t\tif (take[x]) res = min(res, calc(x + 1, take[x], cost + w[take[x]]) + w[take[x]]);\n\t\t}\n\t}\n\telse {\n\t\tif (take[x]) res = min(res, calc(x + 1, take[x], cost + w[take[x]]) + w[take[x]]);\n\t\tres = min(res, calc(x + 1, last, cost + w[last]) + w[last]);\n\t\tres = min(res, calc(x + 1, 0, cost));\n\t}\n\n\treturn dp[x][last] = res;\n}\nint l[N], r[N];\nint main() {\n\t#ifdef IOI2018\n\t\tfreopen (\"in.txt\", \"r\", stdin);\n\t#endif\n\tKazakhstan\n\tcin >> a >> n >> m;\n\trep(i, 1, n) {\n\t\tcin >> l[i] >> r[i];\n\t}\n\trep(x, 0, a) {\n\t\trep(i, 1, n) {\n\t\t\tif (l[i] <= x && x + 1 <= r[i]) {\n\t\t\t\tbad[x] = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\trep(i, 1, m) {\t\n\t\tcin >> pos[i] >> w[i];\n\t\tif (!take[pos[i]]) take[pos[i]] = i;\n\t\telse if (w[take[pos[i]]] > w[i]) take[pos[i]] = i;\n\t}\n\tmemset(dp, -1, sizeof(dp));\n\tll res = calc();\n\tif (res >= inf) res = -1;\n\tcout << res;\n\tioi\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2100", "interactive": false}