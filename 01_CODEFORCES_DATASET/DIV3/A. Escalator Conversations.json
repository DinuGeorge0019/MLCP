{"link": "https://codeforces.com//contest/1851/problem/A", "problemId": "2115023", "problem_idx": "A", "shortId": "1851A", "contest_number": "1851", "problem_submissions": {"F": [215583047, 215569492, 215579077, 215566307, 215574419, 215578454, 215575870, 215577530, 215600568, 215575641, 215585936, 215588041, 215589152, 215586581, 215589298, 215588709, 215587486, 216018365, 215590568, 215575574], "G": [215575283, 215598343, 215593159, 215608828, 215590713, 215597061, 215596537, 215602648, 215584695, 215594862, 215612719, 215611638, 215605638, 215614880, 215606881, 215615959, 215606526, 216018381, 215609478, 215603760], "E": [215554147, 215554902, 215554482, 215549142, 215560459, 215554036, 215562257, 215556727, 215561636, 215565663, 215559271, 215553466, 215557917, 215563847, 215562734, 215562948, 215560103, 216018352, 215576817, 215612963], "D": [215533409, 215535460, 215534208, 215534687, 215544754, 215542789, 215542369, 215538307, 215549445, 215557571, 215540094, 215538955, 215546789, 215540331, 215545020, 215541882, 215571406, 216018332, 215565562, 215552208], "C": [215518745, 215521123, 215523873, 215521189, 215525356, 215529106, 215527649, 215544242, 215522653, 215536104, 215522716, 215526033, 215531440, 215519368, 215532583, 215551484, 215548134, 216018314, 215549325, 215536690], "B": [215513234, 215513521, 215514166, 215512941, 215516397, 215517695, 215518324, 215516319, 215512960, 215513498, 215512779, 215518016, 215520983, 215513367, 215522456, 215515383, 215523869, 216018292, 215522857, 215529428], "A": [215510383, 215510586, 215509986, 215743464, 215510085, 215510245, 215511678, 215512593, 215510630, 215510455, 215509888, 215510070, 215513854, 215516572, 215510721, 215514161, 215521066, 215511827, 216018280, 215514844, 215514533]}, "name": "A. Escalator Conversations", "statement": "One day, Vlad became curious about who he can have a conversation with\r\non the escalator in the subway. There are a total of n passengers. The\r\nescalator has a total of m steps, all steps indexed from 1 to m and i-th\r\nstep has height i\r\ncdot k.Vlad\u2019s height is H centimeters. Two people with heights a and b\r\ncan have a conversation on the escalator if they are standing on steps\r\nand the height difference between them is equal to the height difference\r\nbetween the steps.For example, if two people have heights 170 and 180\r\ncentimeters, and m = 10, k = 5, then they can stand on steps numbered 7\r\nand 5, where the height difference between the steps is equal to the\r\nheight difference between the two people: k\r\ncdot 2 = 5\r\ncdot 2 = 10 = 180 - 170. There are other possible ways.Given an array h\r\nof size n, where h_i represents the height of the i-th person. Vlad is\r\ninterested in how many people he can have a conversation with on the\r\nescalator .For example, if n = 5, m = 3, k = 3, H = 11, and h = [5, 4,\r\n14, 18, 2], Vlad can have a conversation with the person with height 5\r\n(Vlad will stand on step 1, and the other person will stand on step 3)\r\nand with the person with height 14 (for example, Vlad can stand on step\r\n3, and the other person will stand on step 2). Vlad cannot have a\r\nconversation with the person with height 2 because even if they stand on\r\nthe extreme steps of the escalator, the height difference between them\r\nwill be 6, while their height difference is 9. Vlad cannot have a\r\nconversation with the rest of the people on the escalator, so the answer\r\nfor this example is 2.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"Ofast\",\"inline\",\"-ffast-math\")\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n\n#define int long long\n\nconst int MOD=998244353;\nint n,m,k,h,a[51];\nvoid Delta() {\n   cin >> n >> m >> k >> h;\n   int s=0;\n   for(int i=1;i<=n;++i) {\n      cin >> a[i];\n      int mn=a[i]-(m-1)*k,mx=a[i]+(m-1)*k;\n      if(mn<=h&&h<=mx&&mx%k==h%k&&h!=a[i]) {\n         s++;\n      }\n   }\n   cout << s << endl;\n}\nsigned main() {\n   ios_base::sync_with_stdio(0);\n   cin.tie(0);cout.tie(0);\n   int T;cin >> T;\n   while(T--) Delta();\n}"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "math"], "dificulty": "800", "interactive": false}