{"link": "https://codeforces.com//contest/1851/problem/C", "problemId": "2115025", "problem_idx": "C", "shortId": "1851C", "contest_number": "1851", "problem_submissions": {"F": [215583047, 215569492, 215579077, 215566307, 215574419, 215578454, 215575870, 215577530, 215600568, 215575641, 215585936, 215588041, 215589152, 215586581, 215589298, 215588709, 215587486, 216018365, 215590568, 215575574], "G": [215575283, 215598343, 215593159, 215608828, 215590713, 215597061, 215596537, 215602648, 215584695, 215594862, 215612719, 215611638, 215605638, 215614880, 215606881, 215615959, 215606526, 216018381, 215609478, 215603760], "E": [215554147, 215554902, 215554482, 215549142, 215560459, 215554036, 215562257, 215556727, 215561636, 215565663, 215559271, 215553466, 215557917, 215563847, 215562734, 215562948, 215560103, 216018352, 215576817, 215612963], "D": [215533409, 215535460, 215534208, 215534687, 215544754, 215542789, 215542369, 215538307, 215549445, 215557571, 215540094, 215538955, 215546789, 215540331, 215545020, 215541882, 215571406, 216018332, 215565562, 215552208], "C": [215518745, 215521123, 215523873, 215521189, 215525356, 215529106, 215527649, 215544242, 215522653, 215536104, 215522716, 215526033, 215531440, 215519368, 215532583, 215551484, 215548134, 216018314, 215549325, 215536690], "B": [215513234, 215513521, 215514166, 215512941, 215516397, 215517695, 215518324, 215516319, 215512960, 215513498, 215512779, 215518016, 215520983, 215513367, 215522456, 215515383, 215523869, 216018292, 215522857, 215529428], "A": [215510383, 215510586, 215509986, 215743464, 215510085, 215510245, 215511678, 215512593, 215510630, 215510455, 215509888, 215510070, 215513854, 215516572, 215510721, 215514161, 215521066, 215511827, 216018280, 215514844, 215514533]}, "name": "C. Tiles Comeback", "statement": "Vlad remembered that he had a series of n tiles and a number k. The\r\ntiles were numbered from left to right, and the i-th tile had colour\r\nc_i.If you stand on the tile and start jumping any number of tiles , you\r\ncan get a path of length p. The length of the path is the number of\r\ntiles you stood on.Vlad wants to see if it is possible to get a path of\r\nlength p such that: it ends at tile with index n; p is divisible by k\r\nthe path is divided into blocks of length exactly k each; tiles in each\r\nblock have the same colour, the colors in adjacent blocks are not\r\nnecessarily different. For example, let n = 14, k = 3.The colours of the\r\ntiles are contained in the array c = [\r\ncolor{red}{1},\r\ncolor{violet}{2},\r\ncolor{red}{1},\r\ncolor{red}{1},\r\ncolor{gray}{7},\r\ncolor{orange}{5},\r\ncolor{green}{3},\r\ncolor{green}{3},\r\ncolor{red}{1},\r\ncolor{green}{3},\r\ncolor{blue}{4},\r\ncolor{blue}{4},\r\ncolor{violet}{2},\r\ncolor{blue}{4}]. Then we can construct a path of length 6 consisting of\r\n2 blocks:\r\ncolor{red}{c_1}\r\nrightarrow\r\ncolor{red}{c_3}\r\nrightarrow\r\ncolor{red}{c_4}\r\nrightarrow\r\ncolor{blue}{c_{11}}\r\nrightarrow\r\ncolor{blue}{c_{12}}\r\nrightarrow\r\ncolor{blue}{c_{14}}All tiles from the 1-st block will have colour\r\ncolor{red}{\r\ntextbf{1}}, from the 2-nd block will have colour\r\ncolor{blue}{\r\ntextbf{4}}.It is also possible to construct a path of length 9 in this\r\nexample, in which all tiles from the 1-st block will have colour\r\ncolor{red}{\r\ntextbf{1}}, from the 2-nd block will have colour\r\ncolor{green}{\r\ntextbf{3}}, and from the 3-rd block will have colour\r\ncolor{blue}{\r\ntextbf{4}}.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"Ofast\",\"inline\",\"-ffast-math\")\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n\n#define int long long\n\nconst int MOD=998244353;\nint n,k,a[200001];\nvoid Delta() {\n   cin >> n >> k;\n   for(int i=1;i<=n;++i) cin >> a[i];\n   int l=-1,r=-1;\n   for(int i=1,c=0;i<=n;++i)\n      if(a[i]==a[1]) {\n         c++;\n         if(c==k) {\n            l=i;break;\n         }\n      }\n   for(int i=n,c=0;i>=1;--i)\n      if(a[i]==a[n]) {\n         c++;\n         if(c==k) {\n            r=i;break;\n         }\n      }\n   if(l!=-1&&r!=-1&&l<=r) cout << \"YES\" << endl;\n   else if(l!=-1&&r!=-1&&a[1]==a[n]) cout << \"YES\" << endl;\n   else cout << \"NO\" << endl;\n}\nsigned main() {\n   ios_base::sync_with_stdio(0);\n   cin.tie(0);cout.tie(0);\n   int T;cin >> T;\n   while(T--) Delta();\n}"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1000", "interactive": false}