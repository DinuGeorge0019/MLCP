{
    "link": "https://codeforces.com//contest/1006/problem/A",
    "problemId": "198025",
    "problem_idx": "A",
    "shortId": "1006A",
    "contest_number": "1006",
    "problem_submissions": {
        "F": [
            40441400,
            40440824,
            40440718,
            40440827,
            40424217,
            40442318,
            40444967,
            40447621,
            40447392,
            40445275,
            40438703,
            40428895,
            40523944,
            40456300,
            40469784
        ],
        "D": [
            40431223,
            40427415,
            40429428,
            40427666,
            40435691,
            40430513,
            40434142,
            40438290,
            40431310,
            40440098,
            40429630,
            40428380,
            40426509,
            40433251,
            40426493,
            40678651,
            40428666,
            40431857,
            40429891,
            40428151,
            40428405
        ],
        "E": [
            40425946,
            40430996,
            40428189,
            40432790,
            40428480,
            40435411,
            40438586,
            40437117,
            40432836,
            40443168,
            40425115,
            40431041,
            40430321,
            40417607,
            40432842,
            40431866,
            40426721,
            40428657,
            40431622,
            40432669
        ],
        "C": [
            40421659,
            40420878,
            40419334,
            40423831,
            40424033,
            40424261,
            40424821,
            40426724,
            40426733,
            40435459,
            40420478,
            40420692,
            40423322,
            40419164,
            40418012,
            40511067,
            40419053,
            40423337,
            40419944,
            40423295,
            40422046
        ],
        "B": [
            40419978,
            40418807,
            40418159,
            40421590,
            40425339,
            40421610,
            40421499,
            40421847,
            40440870,
            40433565,
            40419011,
            40419302,
            40420307,
            40421856,
            40421084,
            40507243,
            40417820,
            40421010,
            40421030,
            40420039,
            40420598
        ],
        "A": [
            40417368,
            40415298,
            40415306,
            40418538,
            40416510,
            40415729,
            40416251,
            40417776,
            40416833,
            40484358,
            40430262,
            40415381,
            40416664,
            40417319,
            40423001,
            40419643,
            40482910,
            40415406,
            40415414,
            40420065,
            40415817,
            40415886
        ]
    },
    "name": "A. Adjacent Replacements",
    "statement": "Mishka got an integer array a of length n as a birthday present (what a\r\nsurprise!).Mishka doesn’t like this present and wants to change it\r\nsomehow. He has invented an algorithm and called it \"Mishka’s Adjacent\r\nReplacements Algorithm\". This algorithm can be represented as a sequence\r\nof steps: Replace each occurrence of 1 in the array a with 2; Replace\r\neach occurrence of 2 in the array a with 1; Replace each occurrence of 3\r\nin the array a with 4; Replace each occurrence of 4 in the array a with\r\n3; Replace each occurrence of 5 in the array a with 6; Replace each\r\noccurrence of 6 in the array a with 5;\r\ndots Replace each occurrence of 10^9 - 1 in the array a with 10^9;\r\nReplace each occurrence of 10^9 in the array a with 10^9 - 1. Note that\r\nthe dots in the middle of this algorithm mean that Mishka applies these\r\nreplacements for each pair of adjacent integers (2i - 1, 2i) for each i\r\nin\r\n{1, 2,\r\nldots, 5\r\ncdot 10^8\r\n} as described above.For example, for the array a = [1, 2, 4, 5, 10],\r\nthe following sequence of arrays represents the algorithm: [1, 2, 4, 5,\r\n10]\r\nrightarrow (replace all occurrences of 1 with 2)\r\nrightarrow [2, 2, 4, 5, 10]\r\nrightarrow (replace all occurrences of 2 with 1)\r\nrightarrow [1, 1, 4, 5, 10]\r\nrightarrow (replace all occurrences of 3 with 4)\r\nrightarrow [1, 1, 4, 5, 10]\r\nrightarrow (replace all occurrences of 4 with 3)\r\nrightarrow [1, 1, 3, 5, 10]\r\nrightarrow (replace all occurrences of 5 with 6)\r\nrightarrow [1, 1, 3, 6, 10]\r\nrightarrow (replace all occurrences of 6 with 5)\r\nrightarrow [1, 1, 3, 5, 10]\r\nrightarrow\r\ndots\r\nrightarrow [1, 1, 3, 5, 10]\r\nrightarrow (replace all occurrences of 10 with 9)\r\nrightarrow [1, 1, 3, 5, 9]. The later steps of the algorithm do not\r\nchange the array.Mishka is very lazy and he doesn’t want to apply these\r\nchanges by himself. But he is very interested in their result. Help him\r\nfind it.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tint n; cin >> n;\n\twhile (n--) {\n\t\tint x; cin >> x;\n\t\tif (x % 2 == 0) x--;\n\t\tcout << x << ' ';\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Adjacent Replacements.json",
    "editorial_link": "https://codeforces.com//blog/entry/60672",
    "editorial": "It is easy to see that for the odd elements there is no changes after\r\napplying the algorithm described in the problem statement, and for the\r\neven elements there is only one change: each of the even elements will\r\nbe decreased by . So we can iterate over all the elements of the array\r\nand print , where is taking modulo .Overall complexity is .\r\n",
    "hint": []
}