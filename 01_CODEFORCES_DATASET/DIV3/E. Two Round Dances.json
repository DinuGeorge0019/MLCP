{
    "link": "https://codeforces.com//contest/1433/problem/E",
    "problemId": "766660",
    "problem_idx": "E",
    "shortId": "1433E",
    "contest_number": "1433",
    "problem_submissions": {
        "E": [
            96118292,
            96100384,
            96144411,
            96131531,
            96126171,
            96116171,
            96143430,
            96124657,
            96110938,
            96142211,
            96123301,
            96164122,
            96137865,
            96137248,
            96139372,
            96151324,
            96105901,
            96108332,
            96119162
        ],
        "D": [
            96108021,
            96096525,
            96105972,
            96112718,
            96099052,
            96105757,
            96102154,
            96119014,
            96106156,
            96111319,
            96110517,
            96107146,
            96106344,
            96110999,
            96119720,
            96108556,
            96096494,
            96100784,
            96104899
        ],
        "F": [
            96105759,
            96110506,
            96119004,
            96125972,
            96132730,
            96142830,
            96120574,
            96135431,
            96163807,
            96138553,
            96152985,
            96127650,
            96151526,
            96153346,
            96158052,
            96144943,
            96148733,
            96135208
        ],
        "C": [
            96102081,
            96092029,
            96090502,
            96100255,
            96092651,
            96097485,
            96096234,
            96096200,
            96099117,
            96101166,
            96102838,
            96101507,
            96097647,
            96094575,
            96113560,
            96103107,
            96090286,
            96093702,
            96099170
        ],
        "G": [
            96094218,
            96125410,
            96128032,
            96141154,
            96154260,
            96149033,
            96156333,
            96142357,
            96139797,
            96146497,
            96163476,
            96140362,
            96161234,
            96163894,
            96152235,
            96163050,
            96123944,
            96205637
        ],
        "B": [
            96092183,
            96084902,
            96085565,
            96094926,
            96088334,
            96090362,
            96089755,
            96089494,
            96088669,
            96093848,
            96088026,
            96089177,
            96087731,
            96090077,
            96098934,
            96093459,
            96086464,
            96086371,
            96090772
        ],
        "A": [
            96084957,
            96082729,
            96082939,
            96083168,
            96082835,
            96084005,
            96082966,
            96083516,
            96083887,
            96086611,
            96083211,
            96084639,
            96083406,
            96083239,
            96092645,
            96083081,
            96082670,
            96083000,
            96085692
        ]
    },
    "name": "E. Two Round Dances",
    "statement": "One day, n people (n is an even number) met on a plaza and made two\r\nround dances, each round dance consists of exactly\r\nfrac{n}{2} people. Your task is to find the number of ways n people can\r\nmake two round dances if each round dance consists of exactly\r\nfrac{n}{2} people. Each person should belong to exactly one of these two\r\nround dances.Round dance is a dance circle consisting of 1 or more\r\npeople. Two round dances are indistinguishable (equal) if one can be\r\ntransformed to another by choosing the first participant. For example,\r\nround dances [1, 3, 4, 2], [4, 2, 1, 3] and [2, 1, 3, 4] are\r\nindistinguishable.For example, if n=2 then the number of ways is 1: one\r\nround dance consists of the first person and the second one of the\r\nsecond person.For example, if n=4 then the number of ways is 3. Possible\r\noptions: one round dance [1,2], another [3,4]; one round dance [2,4],\r\nanother [3,1]; one round dance [4,1], another [3,2]. Your task is to\r\nfind the number of ways n people can make two round dances if each round\r\ndance consists of exactly\r\nfrac{n}{2} people.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define int long long\nint hmt() {int x=0;int c=getchar(),n=0;for(;!isdigit(c);c=getchar()) n=(c=='-');for(;isdigit(c);c=getchar()) x=x*10+c-'0';if(n) x=-x;return x;}\n#define in hmt()\n#define ins ({string x;char c=getchar();for(;c==' '||c=='\\n';c=getchar());for(;c!=' '&&c!='\\n';c=getchar()) x+=c;x;})\n#define forinc(i,a,b) for(int i=a,_b=b;i<=_b;++i)\n#define fordec(i,a,b) for(int i=a;i>=b;--i)\n#define forb(i,BS) for(int i=BS._Find_first();i< BS.size();i = BS._Find_next(i))\n#define timer 1.0*clock()/CLOCKS_PER_SEC\n#define forv(a,b) for(auto &a:b)\n#define pb push_back\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define all(a) a.begin(),a.end()\n#define reset(f,x) memset(f,x,sizeof(f))\n#define bit(x,i) ((x>>(i-1))&1)\n#define onbit(x,i) (x|(1<<(i-1)))\n#define offbit(x,i) (x&~(1<<(i-1)))\nconst int N=75;\nint m,n,k,f[N][N];\nmain()\n{\n    int n=in,ret=1;\n    forinc(i,1,n) ret*=i;\n    ret=ret/(n/2)/(n/2)/2;\n    cout<<ret<<\"\\n\";\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\E. Two Round Dances.json",
    "editorial_link": "https://codeforces.com//blog/entry/83903",
    "editorial": "Firstly, we need to choose the set of people to be in the first round\r\ndance (the other half is going to the second one). The number of ways to\r\ndo that is . Then we need to set some order of people in both round\r\ndances, but we don\u00e2\u0080\u0099t want to forget about rotation (because rotation can\r\nlead us to counting the same ways several times). So, the number of ways\r\nto arrange people inside one round dance is . This is true because we\r\njust \"fixed\" who will be the first in the round dance, and place others\r\nin every possible order. So, we need to multiply our initial answer by\r\nthis value twice because we have two round dances. And, finally, we have\r\nto divide our answer by because we counted \"ordered\" pairs (i.e. we\r\ndistinguish pairs of kind and but we don\u00e2\u0080\u0099t have to do that). So, the\r\nfinal answer is divided by . This formula can be reduced to .You could\r\nalso find the sequence of answers in OEIS (and this can be really useful\r\nskill sometimes).\r\n"
}