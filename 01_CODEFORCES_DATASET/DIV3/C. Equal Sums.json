{
    "link": "https://codeforces.com//contest/988/problem/C",
    "problemId": "186728",
    "problem_idx": "C",
    "shortId": "988C",
    "contest_number": "988",
    "problem_submissions": {
        "F": [
            38850795,
            38857750,
            38858170,
            38851497,
            38853401,
            38851133,
            38851544,
            38859838,
            38848093,
            38907880,
            38907831
        ],
        "E": [
            38844731,
            38844693,
            38848592,
            38858719,
            45955063,
            38853668,
            38847637,
            38853437,
            38839299,
            38861890,
            38864917,
            38858969,
            38857001,
            38858857,
            38858182,
            38859392,
            38864208,
            38855992,
            38859515
        ],
        "D": [
            38840392,
            38848969,
            38851772,
            38843233,
            38946024,
            38842418,
            38844498,
            38868323,
            38844694,
            44031526,
            44031416,
            38848128,
            38864951,
            38847308,
            38850578,
            38849097,
            38853027,
            38857525,
            38900563,
            38852549,
            38852551,
            38854050
        ],
        "C": [
            38837549,
            38839564,
            38842456,
            38840172,
            38945961,
            38836792,
            38841053,
            38844962,
            38841756,
            38846652,
            38845827,
            38864928,
            38839933,
            38843822,
            38844819,
            38846434,
            38850120,
            38847359,
            38847106,
            38847820,
            38842193
        ],
        "B": [
            38835102,
            38835826,
            38836723,
            38836527,
            38945931,
            38930097,
            38834357,
            38837106,
            38835693,
            38837985,
            38835772,
            38840393,
            38864939,
            38841754,
            38836363,
            38841437,
            38840823,
            38838916,
            38847752,
            38851402,
            38836768
        ],
        "A": [
            38833122,
            38833181,
            38833533,
            38833575,
            38945641,
            38945626,
            38929615,
            38833067,
            38833623,
            38833881,
            38833289,
            38833348,
            38834787,
            38833528,
            38833829,
            38833852,
            38833420,
            38836476,
            38849551,
            38833125,
            38833682
        ]
    },
    "name": "C. Equal Sums",
    "statement": "You are given k sequences of integers. The length of the i-th sequence\r\nequals to n_i.You have to choose exactly two sequences i and j (i\r\nne j) such that you can remove exactly one element in each of them in\r\nsuch a way that the sum of the changed sequence i (its length will be\r\nequal to n_i - 1) equals to the sum of the changed sequence j (its\r\nlength will be equal to n_j - 1).Note that it\u2019s to remove exactly one\r\nelement in each of the two chosen sequences.Assume that the sum of the\r\nempty (of the length equals 0) sequence is 0.\r\n",
    "solutions": [
        "/// In The Name Of God\n\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n\n#include <bits/stdc++.h>\n\n#define f first\n#define s second\n\n#define pb push_back\n#define pp pop_back\n#define mp make_pair\n\n#define sz(x) (int)x.size()\n#define sqr(x) ((x) * 1ll * (x))\n#define all(x) x.begin(), x.end()\n\n#define rep(i, l, r) for (int i = (l); i <= (r); i++)\n#define per(i, l, r) for (int i = (l); i >= (r); i--)\n\n#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);\n\n#define nl '\\n'\n#define ioi exit(0);\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nconst int N = (int)2e5 + 7;\nconst int inf = (int)1e9 + 7;\nconst int mod = (int)1e9 + 7;\nconst ll linf = (ll)1e18 + 7;\n\nconst int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};\nconst int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\n\nusing namespace std;\n\nint k;\nint sum[N];\nvector <int> a[N];\nmap <int, pair <int, int> > var;\n\nvoid bye(int x, int y) {\n\tint need = sum[x] - a[x][y];\n\tcout << \"YES\\n\";\n\tcout << var[need].f + 1 << ' ' << var[need].s + 1 << nl;\n\tcout << x + 1 << ' ' << y + 1;\n\tioi\n}\nint main() {\n\t#ifdef IOI2018\n\t\tfreopen (\"in.txt\", \"r\", stdin);\n\t#endif\n\tKazakhstan\n\tcin >> k;\n\t--k;\n\trep(i, 0, k) {\n\t\tint n;\n\t\tcin >> n;\n\t\ta[i].resize(n);\n\t\t--n;\n\t\trep(j, 0, n) {\n\t\t\tcin >> a[i][j];\n\t\t\tsum[i] += a[i][j];\n\t\t}\n\t\trep(j, 0, n) {\n\t\t\tif (var.count(sum[i] - a[i][j])) bye(i, j);\n\t\t}\n\t\trep(j, 0, n) {\n\t\t\tvar[sum[i] - a[i][j]] = {i, j};\n\t\t}\n\t}\n\tcout << \"NO\";\n\tioi\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Equal Sums.json",
    "editorial_link": "https://codeforces.com/blog/entry/59810",
    "editorial": "Let\u00e2\u0080\u0099s calculate the array of triples . Triple means that the sum of the\r\nsequence without the element at position will be equal to . Triples can\r\nbe easily calculated in a following manner: for each sequence find its\r\nsum, then iterate over all its elements and subtract each of them one\r\nafter another. Now sort array with the standard compare function.\r\nFinally the answer is \"\" if and only if there exist two adjacent\r\nelements with equal sums and different sequences (it is very easy to\r\nsee). So if we find such a pair, then the answer will be \"\", otherwise\r\nthe answer will be \"\".Time complexity of the solution is ).\r\n"
}