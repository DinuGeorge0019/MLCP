{"link": "https://codeforces.com//contest/1077/problem/E", "problemId": "256064", "problem_idx": "E", "shortId": "1077E", "contest_number": "1077", "problem_submissions": {"F2": [45821914, 45824097, 45827727, 45823038, 45823838, 45831345, 45823658, 45828538, 45826654, 45843367, 45837244, 45831421, 45827068, 75760321, 46030227, 46029209, 46029112, 45866424], "F1": [45820450, 45824142, 45824461, 45823167, 76966420, 45824019, 45831648, 45823900, 45828343, 45824802, 45841509, 45837306, 45831567, 45823097, 45829985, 45827347, 75757082, 45830229, 45831957, 45830358, 45833935, 45833332, 45828687], "E": [45816542, 52239741, 45818548, 45816950, 45819025, 45815405, 45821116, 45817502, 45823078, 45808470, 45827222, 45833695, 45822673, 45820795, 45823659, 45825654, 45825672, 45828447, 45825663, 45830728], "D": [45811969, 52239759, 45814314, 45814285, 45816755, 45819154, 45813076, 45811883, 45822278, 45831158, 45821016, 45816579, 45818656, 45997108, 45818703, 45817324, 45818247, 45816683, 45819278, 45822009], "C": [45807748, 45809528, 45808767, 45809925, 45807121, 45806385, 45818022, 45810371, 45804988, 45857981, 45852142, 45840511, 45811255, 45820919, 45810760, 45809427, 45810396, 45809829, 45812965, 45808768, 45810632, 45815038, 45809663], "B": [45805407, 45806822, 45804781, 45807614, 45805828, 45804425, 45810429, 45806291, 45806153, 45852010, 45812539, 45824293, 45806882, 45806701, 45807779, 45807759, 45805186, 45806900, 45808256, 45805906], "A": [45803595, 45803585, 45803761, 45803589, 45806737, 45803510, 45815244, 45803641, 45804397, 45851969, 45805595, 45822873, 45804956, 45804923, 45805008, 45804110, 45803730, 45804318, 45804436, 45803752]}, "name": "E. Thematic Contests", "statement": "Polycarp has prepared n competitive programming problems. The topic of\r\nthe i-th problem is a_i, and some problems\u2019 topics may coincide.Polycarp\r\nhas to host several thematic contests. All problems in each contest\r\nshould have the same topic, and . He may not use all the problems. It is\r\npossible that there are no contests for some topics.Polycarp wants to\r\nhost competitions on consecutive days, one contest per day. Polycarp\r\nwants to host a set of contests in such a way that: number of problems\r\nin each contest is as much as in the previous contest (one day ago), the\r\nfirst contest can contain arbitrary number of problems; the total number\r\nof problems in all the contests should be maximized. Your task is to\r\ncalculate the maximum number of problems in the set of thematic\r\ncontests. Note, that you should not maximize the number of contests.\r\n", "solutions": ["#include<iostream> \n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define ll long long\n#define N 200010\nchar getc(){char c=getchar();while ((c<'A'||c>'Z')&&(c<'a'||c>'z')&&(c<'0'||c>'9')) c=getchar();return c;}\nint gcd(int n,int m){return m==0?n:gcd(m,n%m);}\nint read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile (c<'0'||c>'9') {if (c=='-') f=-1;c=getchar();}\n\twhile (c>='0'&&c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\treturn x*f;\n}\nint n,a[N],b[N],cnt[N],tot;\nbool check(int k,int s)\n{\n\tint t=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (a[i]>=k) t++,k<<=1;\n\t\tif (t==s) return 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++) b[i]=a[i]=read();\n\tsort(b+1,b+n+1);\n\tint t=unique(b+1,b+n+1)-b-1;\n\tfor (int i=1;i<=n;i++) a[i]=lower_bound(b+1,b+t+1,a[i])-b;\n\tfor (int i=1;i<=n;i++) cnt[a[i]]++;\n\tsort(cnt+1,cnt+t+1);\n\tfor (int i=1;i<=t;i++) a[i]=cnt[i];\n\tint tmp=n;\n\tn=t;\n\tfor (int i=1;i<=18;i++)\n\t{\n\t\tint l=1,r=tmp,ans=0;\n\t\twhile (l<=r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif (check(mid,i)) ans=mid,l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\ttot=max(tot,ans*((1<<i)-1));\n\t}\n\tcout<<tot;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "sortings"], "dificulty": "1800", "interactive": false}