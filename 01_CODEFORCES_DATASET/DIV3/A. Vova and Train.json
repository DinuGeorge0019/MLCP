{
    "link": "https://codeforces.com//contest/1066/problem/A",
    "problemId": "235859",
    "problem_idx": "A",
    "shortId": "1066A",
    "contest_number": "1066",
    "problem_submissions": {
        "F": [
            44205429,
            44212106,
            44214312,
            44211772,
            44215735,
            44216480,
            44217948,
            44226593
        ],
        "A": [
            44198897,
            44190264,
            44190996,
            44190521,
            44194374,
            44191748,
            44192884,
            44190114,
            44190457,
            44190392,
            44190295,
            44232541,
            44190105,
            44190131,
            44190364,
            44190102,
            44190147,
            44190161,
            44189962,
            44194814,
            44190476
        ],
        "B": [
            44197927,
            44195073,
            44192967,
            44193419,
            44192423,
            44197883,
            44195893,
            44197752,
            44191223,
            44190844,
            44195475,
            44193709,
            44258187,
            44195185,
            44192726,
            44197021,
            44193282,
            44199995,
            44192974,
            44197693,
            44198781,
            44196227
        ],
        "E": [
            44194302,
            44198044,
            44197688,
            44200186,
            44206112,
            44204683,
            44211808,
            44198204,
            44195532,
            44205080,
            44203248,
            44258229,
            44204157,
            44207684,
            44206425,
            44203537,
            44205955,
            44206848,
            44208459,
            44207862,
            44206046
        ],
        "D": [
            44192050,
            44200143,
            44200943,
            44204312,
            44203052,
            44199330,
            44205029,
            44195917,
            44202796,
            44193485,
            44198842,
            44258212,
            44199756,
            44199261,
            44202172,
            44206141,
            44203730,
            44203685,
            44199896,
            44193449,
            44202596
        ],
        "C": [
            44190191,
            44192207,
            44196592,
            44195653,
            44199921,
            44207097,
            44202048,
            44193208,
            44195430,
            44199895,
            44196374,
            44258203,
            44196767,
            44197574,
            44194617,
            44197700,
            44192395,
            44195734,
            44195568,
            44200428,
            44198081
        ]
    },
    "name": "A. Vova and Train",
    "statement": "Vova plans to go to the conference by train. Initially, the train is at\r\nthe point 1 and the destination point of the path is the point L. The\r\nspeed of the train is 1 length unit per minute (i.e. at the first minute\r\nthe train is at the point 1, at the second minute at the point 2 and so\r\non).There are lanterns on the path. They are placed at the points with\r\ncoordinates divisible by v (i.e. the first lantern is at the point v,\r\nthe second is at the point 2v and so on).There is also one standing\r\ntrain which occupies all the points from l to r inclusive.Vova can see\r\nthe lantern at the point p if p is divisible by v and there is no\r\nstanding train at this position (p\r\nnot\r\nin [l; r]). Thus, if the point with the lantern is one of the points\r\ncovered by the standing train, Vova can\u2019t see this lantern.Your problem\r\nis to say the number of lanterns Vova will see during the path. Vova\r\nplans to go to t different conferences, so you should answer t queries.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define FOR(i, a, b) for (int i = (a); i <= (b); ++i)\n#define FORD(i, a, b) for (int i = (a); i >= (b); --i)\n#define REP(i, a) for (int i = 0; i < (a); ++i)\n#define DEBUG(x) { cerr << #x << '=' << x << endl; }\n#define Arr(a, l, r) { cerr << #a << \" = {\"; FOR(_, l, r) cerr << ' ' << a[_]; cerr << \"}\\n\"; }\n#define N 1010100\n#define pp pair<int, int>\n#define endl '\\n'\n#define IO ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\n#define taskname \"\"\n#define bit(S, i) (((S) >> (i)) & 1)\n#define all(s) s.begin(), s.end()\nusing namespace std;\n\nint main() {\n    #ifdef NERO\n    freopen(\"test.inp\",\"r\",stdin);\n    freopen(\"test.out\",\"w\",stdout);\n    double stime = clock();\n    #else \n        //freopen(taskname\".inp\",\"r\",stdin);\n        //freopen(taskname\".out\",\"w\",stdout);\n    #endif //NERO\n    IO;\n    int t;\n    cin >> t;\n    FOR(i, 1, t) {\n    \tint L, v, l, r;\n    \tcin >> L >> v >> l >> r;\n    \tcout << L / v - r / v + (l - 1) / v << endl;\n    }\n    #ifdef NERO\n    double etime = clock();\n    cerr << \"Execution time: \" << (etime - stime) / CLOCKS_PER_SEC * 1000 << \" ms.\\n\";\n    #endif // NERO\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "1100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Vova and Train.json",
    "editorial_link": "https://codeforces.com//blog/entry/62419",
    "editorial": "What is the number of lanterns Vova will see from to ? This number is .\r\nNow we have to subtract the number of lanters in range from this number.\r\nThis number equals to . So the answer is - + .\r\n"
}