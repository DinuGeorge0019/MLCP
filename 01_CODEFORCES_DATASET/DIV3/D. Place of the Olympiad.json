{
    "link": "https://codeforces.com//contest/2091/problem/D",
    "problemId": "3289245",
    "problem_idx": "D",
    "shortId": "2091D",
    "contest_number": "2091",
    "problem_submissions": {
        "G": [
            312443740,
            312440964,
            312449961,
            312463242,
            312461876,
            312468559,
            312443596,
            312511383
        ],
        "F": [
            312388330,
            312412408,
            312430981,
            312418730,
            312432603,
            312362472,
            312401868,
            312388116,
            312384163,
            312385210,
            312393774,
            312407683,
            312403588,
            312409243,
            312397198,
            312421669,
            312449852,
            312416513
        ],
        "E": [
            312364224,
            312379570,
            312394687,
            312386750,
            312378910,
            312384287,
            312360471,
            312357459,
            312346051,
            312367500,
            312375652,
            312366419,
            312377485,
            312369213,
            312377446,
            312364255,
            312346485,
            312374845
        ],
        "D": [
            312353666,
            312365895,
            312355563,
            312369505,
            312366914,
            312413286,
            312349339,
            312363994,
            312361301,
            312362180,
            312358189,
            312363978,
            312355693,
            312364358,
            312351943,
            312340247,
            312363493
        ],
        "C": [
            312346511,
            312354545,
            312356602,
            312361282,
            312358087,
            312401227,
            312341205,
            312349482,
            312355403,
            312348089,
            312347345,
            312347202,
            312348084,
            312349677,
            312348353,
            312345589,
            312336376,
            312348785
        ],
        "B": [
            312338347,
            312349733,
            312341539,
            312347023,
            312339969,
            312398814,
            312336638,
            312337475,
            312341231,
            312340093,
            312340366,
            312337779,
            312341589,
            312345952,
            312339689,
            312336957,
            312335616,
            312341894
        ],
        "A": [
            312335159,
            312336162,
            312340416,
            312341479,
            312335895,
            312395413,
            312335001,
            312335418,
            312337197,
            312336076,
            312336210,
            312335026,
            312334941,
            312337205,
            312335107,
            312334877,
            312334813,
            312335610
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/141047",
    "editorial": "Let the length of the maximal bench be , then to maximize the number of\r\ndesks in one row we need to put as many benches of exactly length as\r\npossible. There should be an indent after each bench, let’s say, that\r\nthe length of the block is . The total number of such blocks in a row\r\nwill be , and the last bench will have a length of .Then the number of\r\ndesks in one row can reach .Since the rows are independent, there should\r\nbe desks in total. We need to find the minimum , and since is\r\nmonotonically non-decreasing, then the answer can be found using binary\r\nsearch.(You can also come up with a formula, we’ll leave it as an\r\nexercise). or .\r\n",
    "name": "D. Place of the Olympiad",
    "statement": "For the final of the first Olympiad by IT Campus \"NEIMARK\", a\r\nrectangular venue was prepared. You may assume that the venue is divided\r\ninto n rows, each containing m spots for participants’ desks. A total of\r\nk participants have registered for the final, and each participant will\r\nsit at an individual desk. Now, the organizing committee must choose the\r\nlocations for the desks in the venue.Each desk occupies one of the m\r\nspots in a row. Moreover, if several desks occupy consecutive spots in\r\nthe same row, we call such a group of desks a , and the number of desks\r\nin the group is the bench’s length. For example, seating 7 participants\r\non a 3\r\ntimes 4 venue (with n = 3, m = 4) can be arranged as follows: In the\r\nfigure above, the first row has one bench of length 3, the second row\r\nhas one bench of length 2, and the third row has two benches of length\r\n1.The organizing committee wants to choose the locations so that the\r\nlength of the longest bench is as small as possible. In particular, the\r\nsame 7 desks can be arranged in a more optimal way, so that the lengths\r\nof all benches do not exceed 2: Given the integers n, m, and k,\r\ndetermine the minimum possible length of the longest bench.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Place of the Olympiad.json",
    "hint": []
}