{
    "link": "https://codeforces.com//contest/2014/problem/B",
    "problemId": "2892474",
    "problem_idx": "B",
    "shortId": "2014B",
    "contest_number": "2014",
    "problem_submissions": {
        "G": [
            282355237,
            282340908,
            282349517,
            282469109,
            282768209
        ],
        "H": [
            282319139,
            282294919,
            282369641,
            282327328,
            282344971,
            282343427,
            282320463,
            282354346,
            282338340,
            282341971,
            282345189,
            282359227,
            282335882,
            282356841,
            282332486,
            282259554,
            282367573,
            282358571,
            282340140,
            282354845,
            282340779
        ],
        "F": [
            282310940,
            282344360,
            282329041,
            282301003,
            282317626,
            282346191,
            282313376,
            282324314,
            282336360,
            282330209,
            282316236,
            282352931,
            282339107,
            282367052,
            282355481,
            282342400,
            282311004,
            282354051,
            282348444,
            282360261
        ],
        "E": [
            282298135,
            282347444,
            282324784,
            282315211,
            282288353,
            282301236,
            282298734,
            282299501,
            282311127,
            282309362,
            282313492,
            282303867,
            282309804,
            282310056,
            282314491,
            282344707,
            282319635,
            282302427,
            282313050,
            282331264,
            282317148
        ],
        "D": [
            282266365,
            282262468,
            282284761,
            282266186,
            282281624,
            282263914,
            282278929,
            282290066,
            282285534,
            282292322,
            282283633,
            282303511,
            282281064,
            282294495,
            282319933,
            282298383,
            282290687,
            282285759,
            282297433,
            282291388
        ],
        "C": [
            282245761,
            282249551,
            282267820,
            282250356,
            282260562,
            282251055,
            282251810,
            282263518,
            282256201,
            282252015,
            282260274,
            282248128,
            282257994,
            282266861,
            282299616,
            282253349,
            282254086,
            282264623,
            282276303,
            282262355
        ],
        "B": [
            282235337,
            282236894,
            282246106,
            282232521,
            282241668,
            282237594,
            282243258,
            282239802,
            282239576,
            282238146,
            282241956,
            282238965,
            282240579,
            282237329,
            282279188,
            282240894,
            282242478,
            282240040,
            282236073,
            282244164,
            282271471
        ],
        "A": [
            282225117,
            282225433,
            282233872,
            282225077,
            282234075,
            282225216,
            282226675,
            282226848,
            282232220,
            282227137,
            282231989,
            282227272,
            282229469,
            282228546,
            282236816,
            282226223,
            282233092,
            282227477,
            282229182,
            282226562
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/134210",
    "editorial": "The key observation is that ii\n has the same even/odd parity as i\n. Therefore, the problem reduces to finding whether the sum of k\n consecutive integers ending in n\n is even. This can be done by finding the sum of n?k+1,n?k+2,...,n?1,n\n which is k?(2n?k+1)/2\n, and checking its parity. Alternatively, one can count the number of odd numbers in those k\n consecutive integers.\n\nNote: Originally, the number of leaves grown was to be im\n according to the fractal nature of life where m\n is set to some integer. Developers decided to replace m\n with i\n for simplicity, following Filikec's suggestion.",
    "name": "B. Robin Hood and the Major Oak",
    "statement": "The Major Oak grows i^i new leaves in the i-th year. It starts with 1\r\nleaf in year 1.Leaves last for k years on the tree. In other words,\r\nleaves grown in year i last between years i and i+k-1 inclusive.Robin\r\nconsiders even numbers lucky. Help Robin determine whether the Major Oak\r\nwill have an even number of leaves in year n.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std;#define int long long#define endl '\\n'#define PII pair<int, int>const int N = 2e5 + 5;const int mod = 1e9 + 7;int n, m;void solve(){    cin >> n >> m;    int l = n - m + 1, r = n;    int ans = (r + 1) / 2 - l / 2;    if (ans % 2 == 0)    {        cout << \"YES\\n\";    }    else    {        cout << \"NO\\n\";    }}signed main(){    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);    int t = 1;    cin >> t;    while (t--)        solve();    return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Robin Hood and the Major Oak.json",
    "hint": [
        "Hint 1 On last day only leaf grown between n-k+1 and n day will remain.",
        "Hint 2 pow(i,i) is odd if i is odd, even if i is even.",
        "Hint 3 We need no of odd numbers between n-k+1 and n"
    ]
}