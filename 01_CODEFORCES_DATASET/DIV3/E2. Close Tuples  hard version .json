{"link": "https://codeforces.com//contest/1462/problem/E2", "problemId": "833574", "problem_idx": "E2", "shortId": "1462E2", "contest_number": "1462", "problem_submissions": {"F": [101312311, 101295944, 101308624, 101308817, 101304111, 101280435, 101305797, 101310367, 101305342, 101311228, 101404636, 101403975, 101311880, 101300846, 101321777, 101323660, 101322804, 101312196, 101317325, 101337936, 101324335, 101318324], "E2": [101285396, 101295162, 101287717, 101294090, 101294721, 101302415, 101297486, 101291336, 101285191, 101301715, 101403947, 101297838, 101320202, 101301546, 101293087, 101297518, 101302712, 101306390, 101284328, 101307237, 101300711], "E1": [101282369, 101288225, 101284658, 101287780, 101297537, 101304897, 101298622, 101296342, 101290668, 101295792, 101403926, 101300370, 101291439, 101292410, 101297049, 101300114, 101296216, 101298222, 101280004, 101327539, 101299484, 101303183], "D": [101276901, 101274657, 101273346, 101282814, 101282205, 101287581, 101290967, 101279699, 101299600, 101289409, 101403847, 101286604, 101293181, 101285967, 101285140, 101285937, 101287608, 101292000, 101304911, 101416082, 101283715, 101288370], "C": [101268521, 101264616, 101269281, 101273876, 101272004, 101269250, 101272117, 101267115, 101271243, 101273829, 101403759, 101275279, 101269069, 101275015, 101277128, 101275423, 101281795, 101279889, 101270679, 101277574, 101275915], "B": [101264269, 101265842, 101265325, 101264865, 101264553, 101265746, 101267507, 101270770, 101264118, 101266219, 101403739, 101270231, 101266677, 101264816, 101274093, 101269885, 101269868, 101266304, 101266579, 101415580, 101272178, 101266529], "A": [101259376, 101261449, 101259287, 101259205, 101260758, 101260150, 101263911, 101273333, 101279124, 101260299, 101403717, 101261323, 101259580, 101259586, 101264162, 101263539, 101264411, 101259503, 101259664, 101259533, 101260523]}, "name": "E2. Close Tuples  hard version ", "statement": "You are given a sequence a of length n consisting of integers from 1 to\r\nn. .Find the number of tuples of m elements such that the maximum number\r\nin the tuple differs from the minimum by no more than k. Formally, you\r\nneed to find the number of tuples of m indices i_1 < i_2 <\r\nldots < i_m, such that\r\nmax(a_{i_1}, a_{i_2},\r\nldots, a_{i_m}) -\r\nmin(a_{i_1}, a_{i_2},\r\nldots, a_{i_m})\r\nle k.For example, if n=4, m=3, k=2, a=[1,2,4,3], then there are two such\r\ntriples (i=1, j=2, z=4 and i=2, j=3, z=4). If n=4, m=2, k=1,\r\na=[1,1,1,1], then all six possible pairs are suitable..\r\n", "solutions": ["#include <bits/stdc++.h>\n#define pb push_back\n#define ll long long\n#define mp make_pair\n#define si short int\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\n#define pill pair<ll,ll>\n#define f first\n#define s second\n#define pilc pair<ll,char>\n#define all(a) (a).begin(),(a).end()\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\n#define ex exit(0) \n#define sz(a) (a).size()\n#define triple pair<pill, ll>\n#define pinode pair<node*, node*>\n#define quadra pair<pill, pill>\n#define ld long double\nusing namespace std;\n \nconst ll N = 2e5 + 10;\nconst ll M = 2e5 + 1;\nconst ll big = 1e18;\nconst ll hsh2 = 1964325029 ;\nconst long long mod = 1e9 + 7;\nconst long double EPS = 1e-14;\nconst ll block = 1e7;\nconst ll shift = 2e3;\nmt19937_64 rofl(chrono::steady_clock::now().time_since_epoch().count());\n\nll t;\nll a[N];\nll F[N];\nll bp(ll b, ll c) {\n\tll d = 1;\n\twhile(c) {\n\t\tif(c&1)\n\t\t\td = b * d % mod;\n\t\tc >>= 1;\n\t\tb = b * b % mod;\t\n\t}\n\treturn d;\n}\n\nll inv(ll a) {\n\treturn bp(a, mod - 2);\n}\nll C(ll n, ll k) {\n\tif(n < k)\n\t\treturn 0;\n\treturn F[n] * inv(F[n - k] * F[k] % mod) % mod;\n}\n\nvoid solve() {\n    ll n, m, k;\n    cin >> n >> m >> k;\n    F[0] = 1;\n\tfor(int i = 1; i <= n; i++)\n\t\tcin >> a[i], F[i] = F[i - 1] * i % mod;\n\tsort(a + 1, a + n + 1);\n\tll ans = 0;\n\tfor(ll i = 1, l = 1; i <= n; i++) {\n\t\twhile(a[i] - a[l] > k)\n\t\t\tl++;\n\t\tans = (ans + C(i - l, m - 1)) % mod;\n\t}\n\tcout << ans << '\\n';\n}\n\nint main() {\n\tspeed;\n\tcin >> t;\n\twhile(t--)solve(); \t\n}              \n/*\nqiwwqdesw\n1\nd\n \n*/"], "input": "", "output": "", "tags": ["binary search", "combinatorics", "implementation", "math", "sortings", "two pointers"], "dificulty": "1700", "interactive": false}