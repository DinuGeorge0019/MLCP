{
    "link": "https://codeforces.com//contest/1077/problem/F1",
    "problemId": "256065",
    "problem_idx": "F1",
    "shortId": "1077F1",
    "contest_number": "1077",
    "problem_submissions": {
        "F2": [
            45821914,
            45824097,
            45827727,
            45823038,
            45823838,
            45831345,
            45823658,
            45828538,
            45826654,
            45843367,
            45837244,
            45831421,
            45827068,
            75760321,
            46030227,
            46029209,
            46029112,
            45866424
        ],
        "F1": [
            45820450,
            45824142,
            45824461,
            45823167,
            76966420,
            45824019,
            45831648,
            45823900,
            45828343,
            45824802,
            45841509,
            45837306,
            45831567,
            45823097,
            45829985,
            45827347,
            75757082,
            45830229,
            45831957,
            45830358,
            45833935,
            45833332,
            45828687
        ],
        "E": [
            45816542,
            52239741,
            45818548,
            45816950,
            45819025,
            45815405,
            45821116,
            45817502,
            45823078,
            45808470,
            45827222,
            45833695,
            45822673,
            45820795,
            45823659,
            45825654,
            45825672,
            45828447,
            45825663,
            45830728
        ],
        "D": [
            45811969,
            52239759,
            45814314,
            45814285,
            45816755,
            45819154,
            45813076,
            45811883,
            45822278,
            45831158,
            45821016,
            45816579,
            45818656,
            45997108,
            45818703,
            45817324,
            45818247,
            45816683,
            45819278,
            45822009
        ],
        "C": [
            45807748,
            45809528,
            45808767,
            45809925,
            45807121,
            45806385,
            45818022,
            45810371,
            45804988,
            45857981,
            45852142,
            45840511,
            45811255,
            45820919,
            45810760,
            45809427,
            45810396,
            45809829,
            45812965,
            45808768,
            45810632,
            45815038,
            45809663
        ],
        "B": [
            45805407,
            45806822,
            45804781,
            45807614,
            45805828,
            45804425,
            45810429,
            45806291,
            45806153,
            45852010,
            45812539,
            45824293,
            45806882,
            45806701,
            45807779,
            45807759,
            45805186,
            45806900,
            45808256,
            45805906
        ],
        "A": [
            45803595,
            45803585,
            45803761,
            45803589,
            45806737,
            45803510,
            45815244,
            45803641,
            45804397,
            45851969,
            45805595,
            45822873,
            45804956,
            45804923,
            45805008,
            45804110,
            45803730,
            45804318,
            45804436,
            45803752
        ]
    },
    "name": "F1. Pictures with Kittens  easy version ",
    "statement": "Vova likes pictures with kittens. The news feed in the social network he\r\nuses can be represented as an array of n consecutive pictures (with\r\nkittens, of course). Vova likes all these pictures, but some are more\r\nbeautiful than the others: the i-th picture has beauty a_i.Vova wants to\r\nrepost exactly x pictures in such a way that: each segment of the news\r\nfeed of at least k consecutive pictures has at least one picture\r\nreposted by Vova; the sum of beauty values of reposted pictures is\r\nmaximum possible. For example, if k=1 then Vova has to repost all the\r\npictures in the news feed. If k=2 then Vova can skip some pictures, but\r\nbetween every pair of consecutive pictures Vova has to repost at least\r\none of them.Your task is to calculate the maximum possible sum of values\r\nof reposted pictures if Vova follows conditions described above, or say\r\nthat there is no way to satisfy all conditions.\r\n",
    "solutions": [
        "#include<iostream> \n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define ll long long\n#define N 5010\nchar getc(){char c=getchar();while ((c<'A'||c>'Z')&&(c<'a'||c>'z')&&(c<'0'||c>'9')) c=getchar();return c;}\nint gcd(int n,int m){return m==0?n:gcd(m,n%m);}\nint read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile (c<'0'||c>'9') {if (c=='-') f=-1;c=getchar();}\n\twhile (c>='0'&&c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\treturn x*f;\n}\nint n,m,k,a[N];\nll f[N][N];\nint main()\n{\n\tn=read(),k=read(),m=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tmemset(f,200,sizeof(f));\n\tf[0][0]=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor (int x=i-1;x>=max(0,i-k);x--)\n\t\t\tf[i][j]=max(f[i][j],f[x][j-1]+a[i]);\n\t\t}\n\t}\n\tfor (int i=n-1;i>=max(0,n-k+1);i--) f[n][m]=max(f[n][m],f[i][m]);\n\tif (f[n][m]<0) cout<<-1;\n\telse cout<<f[n][m];\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F1. Pictures with Kittens  easy version .json",
    "editorial_link": "https://codeforces.com//blog/entry/63274",
    "editorial": "Let\u00e2\u0080\u0099s solve the problem using dynamic programming. Let be the maximum\r\ntotal beauty of pictures if Vova is at the -th picture now, the number\r\nof remaining reposts is and Vova reposted the -th picture. Initially,\r\nand all other values of are .Let\u00e2\u0080\u0099s learn to do some transitions to\r\ncalculate this dynamic programming. What is the way to do it? Let\u00e2\u0080\u0099s\r\niterate over the position of the previously reposted picture and try to\r\nupdate using previously calculated values. Obviously, this position can\r\nbe from to . So let\u00e2\u0080\u0099s iterate over the position (let it be ) and if (we\r\nneed one more repost to repost the -th picture) is not then try to\r\nupdate ) (pictures are -indexed).So, where can we find the answer? The\r\nanswer is . If this value is then the answer is .Overall complexity is .\r\n"
}