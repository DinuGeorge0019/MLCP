{"link": "https://codeforces.com//contest/1560/problem/D", "problemId": "1082099", "problem_idx": "D", "shortId": "1560D", "contest_number": "1560", "problem_submissions": {"F2": [126333818, 126306855, 126317964, 126343969, 126329373, 126329484, 126318670, 126324734, 126340312, 126380679, 126324751, 126323492, 126392331, 126323366, 126338259, 181389292, 126327293, 126341450, 126335878, 126346280, 126343998, 126334938, 126331523, 126358791], "E": [126314275, 126322204, 126332108, 126337635, 126318617, 126338757, 126331477, 126341239, 126380625, 126338931, 126345881, 126392319, 126339127, 126324096, 126341795, 126324358, 126350364, 126334805, 126335135, 126362201, 126365972, 126318677], "F1": [126309457, 126306646, 126317821, 126307775, 126330038, 126318533, 126324378, 126310262, 126324870, 126323614, 126392323, 126323290, 126338176, 126327481, 126351876, 126335480, 126346365, 126344093, 126335132, 126331374, 126336670], "D": [126298074, 126431766, 126302775, 126302608, 126296584, 126295532, 126300302, 126303789, 126294528, 126389287, 126379378, 126374780, 126312331, 126313764, 126392312, 126309627, 126305716, 126307963, 126306718, 126303322, 126315291, 126312680, 126316841, 126311452, 126300681], "C": [126288623, 126433600, 126292103, 126291590, 126288757, 126288046, 126289111, 126288025, 126294392, 126290860, 126380656, 126297916, 126292682, 126392309, 126304707, 126294000, 126293843, 126290516, 126295186, 126293202, 126294960, 126303302, 126297335, 126292511], "B": [126283242, 126282856, 126282667, 126281542, 126281182, 126284410, 126281360, 126280185, 126288262, 126283351, 126501327, 126501253, 126392300, 126294064, 126288477, 126286554, 126285105, 126283253, 126285740, 126288591, 126286357, 126288697, 126284546], "A": [126276779, 126276302, 126276753, 126276379, 126276291, 126277704, 126276617, 126277755, 126279450, 126276413, 126392288, 126284958, 126277758, 126277313, 126277718, 126276817, 126277182, 126278392, 126279481, 126277037, 126282057]}, "name": "D. Make a Power of Two", "statement": "You are given an integer n. In 1 move, you can do one of the following\r\nactions: erase any digit of the number (it\u2019s acceptable that the number\r\nbefore the operation has exactly one digit and after the operation, it\r\nis \"empty\"); add one digit . The actions may be performed in any order\r\nany number of times.Note that if, after deleting some digit from a\r\nnumber, it will contain leading zeroes, they will be deleted. E.g. if\r\nyou delete from the number 301 the digit 3, the result is the number 01\r\n(not 1).You need to perform the number of actions to make the number any\r\npower of 2 (i.e. there\u2019s an integer k (k\r\nge 0) such that the resulting number is equal to 2^k). .E.g. consider\r\nn=1052. The answer is equal to 2. First, let\u2019s add to the right one\r\ndigit 4 (the result will be 10524). Then let\u2019s erase the digit 5, so the\r\nresult will be 1024 which is a power of 2.E.g. consider n=8888. The\r\nanswer is equal to 3. Let\u2019s erase any of the digits 8 three times. The\r\nresult will be 8 which is a power of 2.\r\n", "solutions": ["/*#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx,avx2,fma\")*/\n// only when really needed\n\n/* GNU G++17 7.3.0: No long long for faster code\n   GNU G++17 9.2.0 (64 bit, msys 2): Long long only for faster code */\n \n#include <bits/stdc++.h>\n  \n#define for1(i,a,b) for (int i = a; i <= b; i++)\n#define for2(i,a,b) for (int i = a; i >= b; i--)\n#define int long long\n\n#define sz(a) (int)a.size()\n#define pii pair<int,int>\n \n/*\n__builtin_popcountll(x) : Number of 1-bit\n__builtin_ctzll(x) : Number of trailing 0\n*/\n \n#define PI 3.1415926535897932384626433832795\n#define INF 1000000000000000000\n#define MOD 1000000007\n#define MOD2 1000000009\n#define EPS 1e-6\n\nusing namespace std;\n\nint solve(int a, int b) {\n    string s1, s2;\n    while (a) {\n        s1 += char(a % 10 + '0');\n        a /= 10;\n    }\n    while (b) {\n        s2 += char(b % 10 + '0');\n        b /= 10;\n    }\n\n    reverse(s1.begin(), s1.end());\n    int cur = sz(s2) - 1, cnt = 0;\n    for (auto f : s1) {\n        if (cur >= 0 && f == s2[cur]) {\n            cur--;\n            cnt++;\n        }\n    }\n\n    return cur + 1 + sz(s1) - cnt;\n}\n\nint p[105];\n\nsigned main() {\n    \n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n\n    // freopen(\"cf.inp\", \"r\", stdin);\n    // freopen(\"cf.out\", \"w\", stdout);\n\n    int t;\n    cin >> t;\n\n    p[0] = 1;\n    for1(i,1,62) p[i] = p[i - 1] * 2;\n\n    while (t--) {\n        int n, res = INF;\n        cin >> n;\n        for1(i,0,62) res = min(res, solve(n, p[i]));\n        cout << res << \"\\n\";\n    }\n    \n}"], "input": "", "output": "", "tags": ["greedy", "math", "strings"], "dificulty": "1300", "interactive": false}