{
    "link": "https://codeforces.com//contest/1165/problem/C",
    "problemId": "344204",
    "problem_idx": "C",
    "shortId": "1165C",
    "contest_number": "1165",
    "problem_submissions": {
        "E": [
            74168826,
            54121468,
            54122421,
            54122348,
            54116263,
            54119183,
            54211518,
            54211463,
            54118142,
            54113180,
            54117307,
            54121110,
            54120513,
            54122624,
            54127192,
            54117866,
            54118124,
            54124485,
            54122820
        ],
        "B": [
            63291233,
            54151541,
            54101310,
            54100421,
            54105105,
            54131850,
            54101616,
            54100060,
            54100069,
            54099555,
            54101691,
            54099268,
            54099031,
            54101885,
            54103193,
            54099307,
            54102255,
            54100792,
            54100984
        ],
        "F2": [
            54132403,
            54136514,
            54134718,
            54126842,
            54151618,
            54135465,
            54132023,
            54139391,
            54337431,
            54960943,
            54166271,
            54138472
        ],
        "F1": [
            54131988,
            54136472,
            54134416,
            54126974,
            54135962,
            54135141,
            54132170,
            54140202,
            54960902,
            54166160,
            54138784
        ],
        "D": [
            54109839,
            54117304,
            54105563,
            54135713,
            54113803,
            54110973,
            54108935,
            54107066,
            54111285,
            54106307,
            54112713,
            54115828,
            54113528,
            54113659,
            54110000,
            54111928,
            54118727,
            54112645
        ],
        "C": [
            54104004,
            54104201,
            54114484,
            54122709,
            54107745,
            54103677,
            54101770,
            54102480,
            54107031,
            54103126,
            54104499,
            54106842,
            54107386,
            54107262,
            54106153,
            54107484,
            54116941
        ],
        "A": [
            54099583,
            54099103,
            54099763,
            54117054,
            54101453,
            54099189,
            54099082,
            54100008,
            54100551,
            54108006,
            54100277,
            54100622,
            54098895,
            54099596,
            54099615,
            54099150
        ]
    },
    "name": "C. Good String",
    "statement": "Let\u2019s call (yet again) a string if its length is even, and every\r\ncharacter in odd position of this string is different from the next\r\ncharacter (the first character is different from the second, the third\r\nis different from the fourth, and so on). For example, the strings , and\r\nare good strings, and the strings , and are not good. .You are given a\r\nstring s, you have to delete minimum number of characters from this\r\nstring so that it becomes good.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define PII pair<int,int>\n#define PB push_back\n#define POP pop_back\n#define FI first\n#define SE second\n#define endl '\\n'\n#define ls x<<1\n#define rs x<<1|1\nconst int N=3e6+7,mod=1e9+7,INF=1e9;\nint n,m,x,y;\nchar a[N],b[N];\nchar s[N],ss[N];\nint main()\n{\n    int cnt=0;\n    cin>>n;\n    scanf(\"%s\",a+1);\n    for(int i=1;i<=n;i++){\n        if(a[i]==a[i+1]&&cnt%2==0){\n            continue;\n        }\n        else{\n            b[cnt++]=a[i];\n        }\n    }\n    if(cnt&1)cnt--;\n    cout<<n-cnt<<endl;\n    for(int i=0;i<cnt;i++){\n        printf(\"%c\",b[i]);\n    }cout<<endl;\n    return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Good String.json",
    "editorial_link": "https://codeforces.com//blog/entry/67041",
    "editorial": "The following greedy solution works: let\u00e2\u0080\u0099s iterate over all characters\r\nof the string from left to right, and if the last block of two\r\nconsecutive characters in the resulting string is full, just add the\r\ncurrent character to the resulting string, otherwise add this character\r\nif it is not equal to the first character of the last block. And don\u00e2\u0080\u0099t\r\nforget about the parity of length (remove last character if the length\r\nis odd).\r\n"
}