{"link": "https://codeforces.com//contest/1154/problem/G", "problemId": "331483", "problem_idx": "G", "shortId": "1154G", "contest_number": "1154", "problem_submissions": {"G": [52855762, 52851693, 52883699, 52890510, 52889410, 52873345, 64071464, 52852198, 52889617, 52938027, 52899099, 52883451, 52933277], "F": [52847525, 52855540, 52853802, 52856499, 52854684, 52859289, 52859188, 52856934, 52861411, 52860421, 52864456, 52865823, 52865674, 52862756, 52863204, 52898461, 52885308, 52867718], "E": [52844409, 52843854, 52845875, 52851030, 52848418, 52851394, 52850626, 52850695, 52853071, 52854108, 52854816, 52860104, 52857303, 52865759, 52865330, 52848827, 52846804, 52847297, 52851755], "D": [52838256, 52840530, 52838159, 52842046, 52844146, 52843431, 52844055, 52843180, 52844776, 52845105, 52843951, 52855282, 52849507, 52844126, 52848629, 52839874, 52840662, 52843194, 52840788], "C": [52833823, 52836291, 52835397, 52837673, 52839569, 52838593, 52840124, 52839273, 52840405, 52841087, 52841150, 52840622, 52844765, 52838877, 52843127, 52835631, 52837394, 52838050, 52836957], "B": [52831026, 52830367, 52830898, 52831597, 52835486, 52833452, 52832490, 52835076, 52832847, 52835796, 52836031, 52832592, 52835180, 52833364, 52837330, 52831701, 52832070, 52833675, 52832455], "A": [52828088, 52827996, 52828695, 52828356, 52829673, 52830380, 52828666, 52830260, 52828393, 52830384, 52829496, 52829394, 52828592, 52828708, 52833449, 52828168, 52828298, 52828150, 52828517]}, "name": "G. Minimum Possible LCM", "statement": "You are given an array a consisting of n integers a_1, a_2,\r\ndots, a_n.Your problem is to find such pair of indices i, j (1\r\nle i < j\r\nle n) that lcm(a_i, a_j) is minimum possible.lcm(x, y) is the least\r\ncommon multiple of x and y (minimum positive number such that both x and\r\ny are divisors of this number).\r\n", "solutions": ["// And in the end, the love you take is equal to the love you make.\n//                      Paul McCartney (the Beatles). The End. Abbey Road.\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing LL = long long;\n\nnamespace _buff {\n\nconst size_t BUFF = 1 << 19;\nchar buff[BUFF], *begin = buff, *end = buff;\nchar getc() {\n  if (begin == end) {\n    begin = buff;\n    end = buff + fread(buff, 1, BUFF, stdin);\n  }\n  return begin == end ? -1 : *begin++;\n}\n\n}\n\nLL read() {\n  using namespace _buff;\n  LL ret = 0;\n  bool pos = true;\n  char c = getc();\n  for (; (c < '0' || c > '9') && c != '-'; c = getc()) {\n    assert(~c);\n  }\n  if (c == '-') {\n    pos = false;\n    c = getc();\n  }\n  for (; c >= '0' && c <= '9'; c = getc()) {\n    ret = (ret << 3) + (ret << 1) + (c ^ 48);\n  }\n  return pos ? ret : -ret;\n}\n\nconst size_t N = 1e7 + 5;\nconst size_t M = 1e6 + 5;\n\nint mnp[N], pri[N];\nbool npr[N];\n\nvoid prep() {\n  int cnt = 0;\n  for (int i = 2; i < N; ++i) {\n    if (!npr[i]) {\n      pri[cnt++] = i;\n      mnp[i] = i;\n    }\n    for (int j = 0, k; (k = i * pri[j]) < N; ++j) {\n      npr[k] = true;\n      mnp[k] = pri[j];\n      if (i % pri[j] == 0) break;\n    }\n  }\n}\n\nint a[M];\n\nstruct Data {\n  int mn = 0, se = 0;\n\n  void update(int v) {\n    if (a[v] < a[mn]) {\n      se = mn;\n      mn = v;\n    } else if (a[v] < a[se]) {\n      se = v;\n    }\n  }\n} dat[N];\n\nconst size_t T = 32;\nint pp[T], pw[T], cntp;\n\nvoid dfs(int i, int id, int cur = 1) {\n  if (i == cntp) {\n    return dat[cur].update(id);\n  }\n  for (int j = 0; j < pw[i]; ++j) {\n    dfs(i + 1, id, cur);\n    cur *= pp[i];\n  }\n  dfs(i + 1, id, cur);\n}\n\nvoid frac(int x, int id) {\n  cntp = 0;\n  while (x > 1) {\n    pp[cntp] = mnp[x];\n    pw[cntp] = 0;\n    for (; mnp[x] == pp[cntp]; x /= mnp[x]) {\n      ++pw[cntp];\n    }\n    ++cntp;\n  }\n  dfs(0, id);\n}\n\nint main() {\n  prep();\n  int n = read();\n  // int n = 1e6;\n  a[0] = INT_MAX;\n  for (int i = 1; i <= n; ++i) {\n    // frac(a[i] = 8648640, i);\n    frac(a[i] = read(), i);\n  }\n  pair<LL, pair<int, int> > ans = {1e18, {-1, -1}};\n  for (int i = 1; i < N; ++i) {\n    if (dat[i].se) {\n      int x = dat[i].mn, y = dat[i].se;\n      if (x > y) swap(x, y);\n      ans = min(ans, {(LL) a[x] * a[y] / i, {x, y}});\n    }\n  }\n  cout << ans.second.first << ' ' << ans.second.second << '\\n';\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "math", "number theory"], "dificulty": "2200", "interactive": false}