{"link": "https://codeforces.com//contest/1360/problem/B", "problemId": "629822", "problem_idx": "B", "shortId": "1360B", "contest_number": "1360", "problem_submissions": {"H": [81251920, 81290028, 81293330, 81291112, 81294740, 81299062, 81297186, 81294484, 81304607, 81300361, 81303070, 81250599, 81295409, 81298287, 81304237, 81231948], "G": [81250908, 81261609, 81276322, 81265591, 81276387, 81264433, 81272613, 81280948, 81267380, 81269754, 81289390, 81293762, 81279290, 81296348, 81288695, 81287798], "F": [81230412, 81252303, 81257057, 81259404, 81265576, 81254763, 81259977, 81264927, 81254624, 81249372, 81271302, 81279300, 81267710, 81275581, 81282413, 81255521], "E": [81216064, 81240455, 81234957, 81246045, 81233772, 81233068, 81236233, 81262156, 81246598, 81264349, 81235887, 81262591, 81252163, 81263497, 81254477, 81259978], "B": [81215775, 81207436, 81205722, 81209946, 81206365, 81207859, 81208440, 81216311, 81225212, 81217601, 81209275, 81216781, 81209546, 81211074, 81219408, 81270897], "A": [81211901, 81203807, 81203057, 81203650, 81203478, 81204406, 81203639, 81224692, 81237119, 81214495, 81204306, 81209285, 81203552, 81206909, 81211432, 81273150], "C": [81206744, 81215880, 81216577, 81223025, 81214552, 81214398, 81216644, 81210331, 81222555, 81225820, 81221447, 81224269, 81240900, 81218199, 81226927, 81268532], "D": [81205489, 81225350, 81222950, 81235831, 81222076, 81219822, 81226333, 81233523, 81233797, 81230395, 81227841, 81245779, 81245445, 81255431, 81237048, 81264054]}, "name": "B. Honest Coach", "statement": "There are n athletes in front of you. Athletes are numbered from 1 to n\r\nfrom left to right. You know the strength of each athlete the athlete\r\nnumber i has the strength s_i.You want to split all athletes into two\r\nteams. Each team must have at least one athlete, and each athlete must\r\nbe exactly in one team.You want the strongest athlete from the first\r\nteam to differ as little as possible from the weakest athlete from the\r\nsecond team. Formally, you want to split the athletes into two teams A\r\nand B so that the value |\r\nmax(A) -\r\nmin(B)| is as small as possible, where\r\nmax(A) is the maximum strength of an athlete from team A, and\r\nmin(B) is the minimum strength of an athlete from team B.For example, if\r\nn=5 and the strength of the athletes is s=[3, 1, 2, 6, 4], then one of\r\nthe possible split into teams is: first team: A = [1, 2, 4], second\r\nteam: B = [3, 6]. In this case, the value |\r\nmax(A) -\r\nmin(B)| will be equal to |4-3|=1. This example illustrates one of the\r\nways of optimal split into two teams.Print the minimum value |\r\nmax(A) -\r\nmin(B)|.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std ;\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define re register\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\n#define maxn 205\nint n, a[maxn] ; \nsigned main() {\n\tint T = gi() ;\n\twhile( T -- ) {\n\t\tn = gi() ;\n\t\trep( i, 1, n ) a[i] = gi() ;\n\t\tsort( a + 1, a + n + 1 );\n\t\tint ans = 1234567890;\n\t\trep( i, 2, n ) ans = min( ans, a[i] - a[i - 1] ) ;\n\t\tcout << ans << endl ;\n\t}\n\treturn 0 ;\n} "], "input": "", "output": "", "tags": ["greedy", "sortings"], "dificulty": "800", "interactive": false}