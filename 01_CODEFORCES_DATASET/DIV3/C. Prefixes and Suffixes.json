{"link": "https://codeforces.com//contest/1092/problem/C", "problemId": "271421", "problem_idx": "C", "shortId": "1092C", "contest_number": "1092", "problem_submissions": {"F": [47218597, 47207874, 47241634, 47318477, 47214615, 47217604, 47210093, 47210748, 47212691, 47213985, 47215066, 47216141], "D1": [47215980, 47227965, 47212365, 47220485, 47215001, 47223458, 47225913, 47226094, 47209533, 47227527, 47227478, 47227395, 47227268, 47226719, 47216461, 47213724, 47334192], "D2": [47212833, 47212767, 47218226, 47218497, 47219527, 47223320, 47217259, 47271469, 47223969, 47236061, 47213976, 47212963, 47333101], "C": [47208479, 47202011, 47208106, 47207681, 47211238, 47213730, 47205520, 47206298, 47207117, 47206109, 47208340, 47227233, 47226698, 47207049, 47207288, 47209584, 47210057, 47206966, 47207998], "B": [47202083, 47196597, 47203007, 47199377, 47202631, 47197720, 47198736, 47196902, 47198167, 47197186, 47198915, 47226662, 47196684, 47197714, 47198493, 47198454, 47201892, 47199196], "A": [47200523, 47196094, 47201972, 47196916, 47200910, 47196295, 47196192, 47197255, 47196159, 47196525, 47196472, 47196994, 47226648, 47196039, 47196511, 47196950, 47196914, 47198726, 47197707], "E": [47266392, 47319938, 47234188, 47277429, 47369991]}, "name": "C. Prefixes and Suffixes", "statement": "Ivan wants to play a game with you. He picked some string s of length n\r\nconsisting only of lowercase Latin letters. You don\u2019t know this string.\r\nIvan has informed you about all its improper prefixes and suffixes (i.e.\r\nprefixes and suffixes of lengths from 1 to n-1), but he didn\u2019t tell you\r\nwhich strings are prefixes and which are suffixes.Ivan wants you to\r\nguess which of the given 2n-2 strings are prefixes of the given string\r\nand which are suffixes. It may be impossible to guess the string Ivan\r\npicked (since multiple strings may give the same set of suffixes and\r\nprefixes), but Ivan will accept your answer if there is at least one\r\nstring that is consistent with it. Let the game begin!\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\nstruct AA{\n    string s;\n    int id;\n    bool operator<(const AA& b)const{\n        return s.size()<b.s.size();\n    }\n}a[222];\nchar an[222];\nint n;\nvoid check(string s){\n    vector<pair<pair<int,string>,int>>ker;\n    for(int i=1;i<(int)s.size();i++){\n        ker.push_back({{i+1,s.substr(0,i)},0});\n        ker.push_back({{i+1,s.substr(n-i)},1});\n    }\n    sort(ker.begin(),ker.end());\n    for(int i=0;i<n*2-2;i+=2){\n        if(a[i].s==ker[i].first.second&&a[i+1].s==ker[i+1].first.second){\n            an[a[i].id]=ker[i].second?'S':'P';\n            an[a[i+1].id]=ker[i+1].second?'S':'P';\n        }\n        else if(a[i].s==ker[i+1].first.second&&a[i+1].s==ker[i].first.second){\n            an[a[i].id]=ker[i+1].second?'S':'P';\n            an[a[i+1].id]=ker[i].second?'S':'P';\n        }\n        else return;\n    }\n    printf(\"%s\\n\",an);\n    exit(0);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=0;i<n*2-2;i++){\n        cin>>a[i].s;\n        a[i].id=i;\n    }\n    sort(a,a+n*2-2);\n    check(a[n*2-3].s+a[n*2-4].s.back());\n    check(a[n*2-4].s+a[n*2-3].s.back());\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["strings"], "dificulty": "1700", "interactive": false}