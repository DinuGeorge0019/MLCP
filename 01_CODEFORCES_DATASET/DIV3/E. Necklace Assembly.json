{"link": "https://codeforces.com//contest/1367/problem/E", "problemId": "650997", "problem_idx": "E", "shortId": "1367E", "contest_number": "1367", "problem_submissions": {"F2": [84046399, 84094199, 84130636], "F1": [83980407, 83997753, 83993348, 83994650, 83999567, 84010715, 83998236, 84003996, 84009140, 84019849, 84274779, 84017193, 84019354, 84000999, 84010593, 84016471, 84014906, 84016930, 84014876, 84014935, 84017986], "D": [83971043, 83961145, 83985812, 83980115, 83973000, 83974852, 83986130, 83981366, 83974367, 83994623, 83977600, 83983323, 83996104, 83995930, 83983801, 83992346, 83994322, 83998169, 84019878, 83994750], "E": [83960157, 83975668, 83972713, 83967919, 83987024, 83979496, 83979914, 83997028, 83998395, 83978103, 83986303, 83992757, 84009544, 83998141, 84003322, 84000422, 84009434, 84005956, 84009927], "C": [83944345, 83953190, 83946330, 83950349, 83947422, 83950879, 83948329, 83963053, 83957928, 83954873, 83961995, 83964648, 83957400, 83955873, 83978101, 83977835, 83962124, 83950317, 83977481], "B": [83935714, 83939461, 83936897, 83955137, 83937279, 83939068, 83931855, 83950510, 83942524, 83939871, 83953252, 83938559, 83937149, 83961120, 83949153, 83945426, 83942777, 83939545, 83950410], "A": [83931489, 83931768, 83931529, 83932839, 83931493, 83933565, 83935945, 83942834, 83934889, 83933081, 83935891, 83931997, 83932187, 83932611, 83934727, 83936848, 83932660, 83932129, 83932693]}, "name": "E. Necklace Assembly", "statement": "The store sells n beads. The color of each bead is described by a\r\nlowercase letter of the English alphabet (\"\" \"\"). You want to buy some\r\nbeads to assemble a necklace from them.A necklace is a set of beads\r\nconnected in a circle.For example, if the store sells beads \"\", \"\", \"\",\r\n\"\", \"\", \"\", then you can assemble the following necklaces (these are not\r\nall possible options): And the following necklaces cannot be assembled\r\nfrom beads sold in the store: We call a necklace k-beautiful if, when it\r\nis turned clockwise by k beads, the necklace remains unchanged. For\r\nexample, here is a sequence of three turns of a necklace. As you can\r\nsee, this necklace is, for example, 3-beautiful, 6-beautiful,\r\n9-beautiful, and so on, but it is not 1-beautiful or 2-beautiful.In\r\nparticular, a necklace of length 1 is k-beautiful for any integer k. A\r\nnecklace that consists of beads of the same color is also beautiful for\r\nany k.You are given the integers n and k, and also the string s\r\ncontaining n lowercase letters of the English alphabet each letter\r\ndefines a bead in the store. You can buy any subset of beads and connect\r\nthem in any order. Find the maximum length of a k-beautiful necklace you\r\ncan assemble.\r\n", "solutions": ["#include <bits/stdc++.h> \nusing namespace std;\n#define fl(i,a,b) for(int i=a;i<b;i++)\n#define ff first\n#define ss second\n#define endl '\\n'\n#define pb push_back\n#define khushi ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);\ntypedef long long ll;\nconst int  mod  = 1000000007;\n#define int long long\nconst int mx = 200005;\nvoid f()\n{\n\tint n,k;\n\tcin >> n >> k;\n\tint h[26] = {0};\n\tstring s;\n\tcin >> s;\n\tfl(i,0,s.size())\n\t{\n\t\th[s[i] - 'a']++;\n\t}\n\tint ans = 0;\n\tfl(i,1,n + 1)\n\t{\n\t\tint x = __gcd(i,k);\n\t\tint th = i / x;\n\t\tint cnt = 0;\n\t\tfl(j,0,26)\n\t\t{\n\t\t\tif(h[j] >= th)\n\t\t\t{\n\t\t\t\tcnt += h[j] / th;\n\t\t\t}\n\t\t}\n\t\tif(cnt >= x)\n\t\t{\n\t\t\tans = i;\n\t\t}\n\t}\n\tcout << ans << endl;\n}\nmain()\n{\n\tkhushi;\n\tint t = 1;\n\tcin >> t;\n\twhile(t--)\n\t{\n\t\tf();\n\t}\n}"], "input": "", "output": "", "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"], "dificulty": "1900", "interactive": false}