{"link": "https://codeforces.com//contest/1203/problem/F1", "problemId": "388108", "problem_idx": "F1", "shortId": "1203F1", "contest_number": "1203", "problem_submissions": {"A": [58744193, 58717652, 58743556, 58718250, 58744628, 58720766, 58718623, 58719826, 58719026, 58719223, 58720907, 58718806, 58718313, 58731049, 58724059, 58717997, 58717665, 58717946], "B": [58741838, 58722288, 58747764, 58720873, 58719714, 58728242, 58723125, 58722876, 58865722, 58741989, 58719552, 58723345, 58738132, 58725543, 58726008, 58742758, 58718353, 58720068, 58720276], "C": [58738864, 58722717, 58723287, 58726641, 58723731, 58747526, 58725554, 58728497, 58720084, 58730777, 58722069, 58725768, 58733799, 58727591, 58734639, 58733064, 58793949, 58719804, 58718232, 58722089], "D1": [58737392, 58740598, 58737907, 58751996, 58752736, 58722723, 58735762, 58744374, 58731531, 58736531, 58746441, 58753046, 58727783, 58754349, 58747632, 58763319, 58722454, 58723392, 58724890], "E": [58737277, 58725591, 58727402, 58730046, 58728565, 58717897, 58745296, 58733445, 58726761, 58739529, 58754025, 58729672, 58719104, 58747836, 58757692, 58749403, 58794584, 58725337, 58726752, 58739914], "F1": [58734163, 58754154, 58748943, 58753166, 58758119, 58747862, 58740845, 58761872, 58770577, 58756509, 58762270, 58761662, 58765489, 58764589, 58758207, 58770681, 58768272, 58774089], "D2": [58733429, 58736615, 58737493, 58747587, 58752636, 58721716, 58732204, 58743923, 58747785, 58752110, 58747809, 58752550, 58726134, 58749055, 58750977, 58763703, 58725996, 58733867, 58733265], "F2": [58728336, 58758593, 58745831, 58764824, 58759012, 58758260, 58825408, 58785361, 58812387, 58768141, 59394735, 58845496, 58845431]}, "name": "F1. Complete the Projects  easy version ", "statement": ".Polycarp is a very famous freelancer. His current rating is r\r\nunits.Some very rich customers asked him to complete some projects for\r\ntheir companies. To complete the i-th project, Polycarp needs to have at\r\nleast a_i units of rating; after he completes this project, his rating\r\nwill change by b_i (his rating will increase or decrease by b_i) (b_i\r\ncan be positive or negative). Polycarp\u2019s rating should not fall below\r\nzero because then people won\u2019t trust such a low rated freelancer.Is it\r\npossible to complete all the projects? Formally, write a program to\r\ncheck if such an order of the projects exists, that Polycarp has enough\r\nrating before starting each project, and he has non-negative rating\r\nafter completing each project.In other words, you have to check that\r\nthere exists such an order of projects in which Polycarp will complete\r\nthem, so he has enough rating before starting each project, and has\r\nnon-negative rating after completing each project.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct Project {\n\tint a, b;\n};\n\nvoid maximize(int &a, int b) {\n\tif (a < b) a = b;\n}\n\nint main() {\n\tint n, r;\n\tcin >> n >> r;\n\t\n\tvector<Project> pos, neg;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tif (b >= 0) {\n\t\t\tpos.push_back({a, b});\n\t\t} else {\n\t\t\tneg.push_back({a, -b});\n\t\t}\n\t}\n\n\tsort(begin(pos), end(pos), [](const Project &x, const Project &y) { return x.a < y.a; });\n\tint res = 0;\n\tfor (auto it : pos) {\n\t\tif (r >= it.a) {\n\t\t\tr += it.b;\n\t\t\t++res;\n\t\t}\n\t}\n\n\tsort(begin(neg), end(neg), [](const Project &x, const Project &y) { return x.a - x.b > y.a - y.b; });\n\tvector< vector<int> > dp(neg.size() + 1, vector<int>(r + 1, -1));\n\tdp[0][r] = 0;\n\tfor (int i = 0; i < neg.size(); ++i) {\n\t\tfor (int j = 0; j <= r; ++j) if (dp[i][j] >= 0) {\n\t\t\tif (j >= max(neg[i].a, neg[i].b)) {\n\t\t\t\tmaximize(dp[i + 1][j - neg[i].b], dp[i][j] + 1);\n\t\t\t}\n\t\t\tmaximize(dp[i + 1][j], dp[i][j]);\n\t\t}\n\t}\n\tres += *max_element(begin(dp[neg.size()]), end(dp[neg.size()]));\n\tcout << (res == n ? \"YES\" : \"NO\") << endl;\n}"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "2100", "interactive": false}