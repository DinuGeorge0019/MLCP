{
    "link": "https://codeforces.com//contest/1624/problem/D",
    "problemId": "1256440",
    "problem_idx": "D",
    "shortId": "1624D",
    "contest_number": "1624",
    "problem_submissions": {
        "G": [
            142264977,
            142276263,
            142255328,
            142255380,
            142278979,
            142222438,
            142247481,
            142272907,
            142266089,
            142251678,
            142253083,
            142252160,
            142248179,
            142250137,
            142248523,
            142250039,
            142416148,
            142259210
        ],
        "F": [
            142255179,
            142272384,
            142268450,
            142243695,
            142285199,
            142258439,
            142236940,
            142264135,
            142393598,
            142331291,
            142248865,
            142296070,
            142276188,
            142284965,
            142276430,
            142260372
        ],
        "E": [
            142241464,
            142238534,
            142272316,
            142277777,
            142260025,
            142286074,
            142269495,
            142256319,
            142287785,
            142271217,
            142263215,
            142270151,
            142270566,
            142278137,
            142274750,
            142273040,
            142294098,
            142253958,
            142282423
        ],
        "D": [
            142225549,
            142220300,
            142226787,
            142230709,
            142223377,
            142265701,
            142282535,
            142273740,
            142234006,
            142223224,
            142236057,
            142230240,
            142221633,
            142230396,
            142243861,
            142238174,
            142223929,
            142233332,
            142233395,
            142227832
        ],
        "C": [
            142213147,
            142208364,
            142214903,
            142219856,
            142212618,
            142318538,
            142204231,
            142234937,
            142218849,
            142237305,
            142214526,
            142460843,
            142215423,
            142217168,
            142221355,
            142216799,
            142211503,
            142211985,
            142216819,
            142218405,
            142219857,
            142213500
        ],
        "B": [
            142197546,
            142199713,
            142206530,
            142215517,
            142199960,
            142202251,
            142206682,
            142220881,
            142202886,
            142198089,
            142210906,
            142196708,
            142210091,
            142205820,
            142205637,
            142211178,
            142207927,
            142211494,
            142209546
        ],
        "A": [
            142188870,
            142188452,
            142198531,
            142195180,
            142189107,
            142194205,
            142188426,
            142189618,
            142189485,
            142189892,
            142201064,
            142189063,
            142189404,
            142192459,
            142193156,
            142190543,
            142204194,
            142190164
        ]
    },
    "name": "D. Palindromes Coloring",
    "statement": "You have a string s consisting of lowercase Latin alphabet letters. You\r\ncan color some letters in colors from 1 to k. It is not necessary to\r\npaint all the letters. But for each color, there must be a letter\r\npainted in that color.Then you can swap any two symbols painted in the\r\nsame color as many times as you want. After that, k strings will be\r\ncreated, i-th of them will contain all the characters colored in the\r\ncolor i, written in the order of their sequence in the string s.Your\r\ntask is to color the characters of the string so that all the resulting\r\nk strings are palindromes, and the length of the shortest of these k\r\nstrings is as as possible.Read the note for the first test case of the\r\nexample if you need a clarification.Recall that a string is a palindrome\r\nif it reads the same way both from left to right and from right to left.\r\nFor example, the strings , , and are palindromes, but the strings and\r\nare not.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\ntemplate<class...Args>\nvoid debug(Args... args) {\n    auto tmp = {(cout << args << ' ', 0)...};\n    cout << endl;\n}\nusing ll = long long;\nusing ull = unsigned long long;\nconst int N = 2e5 + 10;\nconst int mod = 998244353;\nint a[128];\nint n, k;\nint o, e;\nbool check(int x) {\n    int co = o, ce = e;\n    for (int i = 0; i < k; ++i) {\n        ce -= x / 2 * 2;\n        co -= x % 2;\n        if (co < 0) {\n            ce += co;\n            co = 0;\n        }\n        if (ce < 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int T;\n    cin >> T;\n    while (T--) {\n        cin >> n >> k;\n        memset(a, 0, sizeof a);\n        string s;\n        cin >> s;\n        for (auto& i : s) {\n            ++a[i];\n        }\n        o = e = 0;\n        for (int i = 'a'; i <= 'z'; ++i) {\n            e += a[i] / 2 * 2;\n            o += a[i] % 2;\n        }\n        int l = 1, r = n / k;\n        while (l < r) {\n            int mid = (l + r) / 2 + 1;\n            if (check(mid)) {\n                l = mid;\n            } else {\n                r = mid - 1;\n            }\n        }\n        cout << l << '\\n';\n    }\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "strings"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Palindromes Coloring.json",
    "editorial_link": "https://codeforces.com//blog/entry/98942",
    "editorial": "We will solve the problem greedily. First, we will try to add pairs of\r\nidentical characters to palindromes. As long as there are at least\r\npairs, letâs add them. After that, it is no longer possible to add a\r\ncouple of characters, but you can try to add one character in the\r\nmiddle. This can be done if there are at least characters left. There is\r\nno need to paint other characters.\r\n",
    "hint": []
}