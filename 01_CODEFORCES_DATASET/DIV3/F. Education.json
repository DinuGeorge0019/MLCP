{
    "link": "https://codeforces.com//contest/1512/problem/F",
    "problemId": "953479",
    "problem_idx": "F",
    "shortId": "1512F",
    "contest_number": "1512",
    "problem_submissions": {
        "F": [
            112516327,
            112629362,
            112497737,
            112483852,
            112534163,
            112519872,
            112523049,
            112540058,
            112525363,
            112533614,
            112536448,
            112537516,
            112544404,
            112530297,
            112526420,
            112533603,
            112542746,
            112531433,
            112535093,
            112548605
        ],
        "E": [
            112506564,
            112508563,
            112524736,
            112502446,
            112533858,
            112527958,
            112508864,
            112509889,
            112512903,
            112509017,
            112528173,
            112510675,
            112503998,
            112512724,
            112513625,
            112519008,
            112528502,
            112521867
        ],
        "D": [
            112497785,
            112621054,
            112497203,
            112490115,
            112495508,
            112500809,
            112498955,
            112500271,
            112498910,
            112498077,
            112497611,
            112500088,
            112496071,
            112507407,
            112502827,
            112504464,
            112507164,
            112504475,
            112499401
        ],
        "G": [
            112491483,
            112631083,
            112630603,
            112513531,
            112508947,
            112527906,
            112512550,
            112511636,
            112507446,
            112625521,
            112625074,
            112532760,
            112528600,
            112518587,
            112526144,
            112524205,
            112510843,
            112509683,
            112548005,
            112537281,
            112544284,
            112538205,
            112540767,
            112537278,
            112515598,
            112508304
        ],
        "C": [
            112487593,
            112496919,
            112486052,
            112489997,
            112495797,
            112491587,
            112494910,
            112492048,
            112490369,
            112490198,
            112493048,
            112491868,
            112497975,
            112496210,
            112497381,
            112497156,
            112499855,
            112493193
        ],
        "B": [
            112477709,
            112619015,
            112504560,
            112479565,
            112478849,
            112478748,
            112478214,
            112479649,
            112478387,
            112478327,
            112480204,
            112478667,
            112478450,
            112495691,
            112481506,
            112480872,
            112481214,
            112491490,
            112490040,
            112481549
        ],
        "A": [
            112470316,
            112478350,
            112469960,
            112470719,
            112470865,
            112469918,
            112470988,
            112470608,
            112469614,
            112470404,
            112469899,
            112471014,
            112475792,
            112469758,
            112471653,
            112470464,
            112470688,
            112473832
        ]
    },
    "name": "F. Education",
    "statement": "Polycarp is wondering about buying a new computer, which costs c\r\ntugriks. To do this, he wants to get a job as a programmer in a big\r\ncompany.There are n positions in Polycarp’s company, numbered starting\r\nfrom one. An employee in position i earns a[i] tugriks every day. The\r\nhigher the position number, the more tugriks the employee receives.\r\nInitially, Polycarp gets a position with the number 1 and has 0\r\ntugriks.Each day Polycarp can do one of two things: If Polycarp is in\r\nthe position of x, then he can earn a[x] tugriks. If Polycarp is in the\r\nposition of x (x < n) and has at least b[x] tugriks, then he can spend\r\nb[x] tugriks on an online course and move to the position x+1. For\r\nexample, if n=4, c=15, a=[1, 3, 10, 11], b=[1, 2, 7], then Polycarp can\r\nact like this: On the first day, Polycarp is in the 1-st position and\r\nearns 1 tugrik. Now he has 1 tugrik; On the second day, Polycarp is in\r\nthe 1-st position and move to the 2-nd position. Now he has 0 tugriks;\r\nOn the third day, Polycarp is in the 2-nd position and earns 3 tugriks.\r\nNow he has 3 tugriks; On the fourth day, Polycarp is in the 2-nd\r\nposition and is transferred to the 3-rd position. Now he has 1 tugriks;\r\nOn the fifth day, Polycarp is in the 3-rd position and earns 10 tugriks.\r\nNow he has 11 tugriks; On the sixth day, Polycarp is in the 3-rd\r\nposition and earns 10 tugriks. Now he has 21 tugriks; Six days later,\r\nPolycarp can buy himself a new computer. Find the minimum number of days\r\nafter which Polycarp will be able to buy himself a new computer.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\ntypedef unsigned long long ull;\ntypedef long long ll;\ntemplate<class T1,class T2,class T3>T1 ksm(T1 a,T2 b,T3 mod){T1 ans=1;while(b){if(b&1)ans=(ans*a)%mod;a=(a*a)%mod;b>>=1;}return ans;}\n#ifndef ONLINE_JUDGE\ntemplate<class T>T __gcd(T a,T b){ll r;while(b>0){r=a%b;a=b;b=r;}return a;}\n#endif\n#define inf INT_MAX\n#define Max(x,y) x=max(x,y)\n#define Min(x,y) x=min(x,y)\n#define Out(t) printf(\"%s\\n\",(t)?\"YES\":\"NO\")\nconst double pi=acos(-1.);\nconst int def=200010;\nconst int mod=1000000007;\nusing namespace std;\n\nll a[def],b[def];\n\nint main()\n{\tint _=1,__=1,n;\n\tll c;\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"/Users/py/Documents/workspace/C++/try.in\",\"r\",stdin);\n\tfreopen(\"/Users/py/Documents/workspace/C++/try.out\",\"w\",stdout);\n\t#endif\n\tfor(((1)?scanf(\"%d\",&_):EOF);_;_--,__++){\n\t\tscanf(\"%d%lld\",&n,&c);\n\t\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\t\tfor(int i=1;i<n;i++)scanf(\"%lld\",&b[i]);\n\t\tll sum=0,ans=inf,maxx=0,now=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tMax(maxx,a[i]);\n\t\t\tif(c<=sum)\n\t\t\t\tMin(ans,now);\n\t\t\telse\n\t\t\t\tMin(ans,(c-sum+maxx-1)/maxx+now);\n\t\t\tif(sum<b[i]){\n\t\t\t\tint d=(b[i]-sum+maxx-1)/maxx;\n\t\t\t\tnow+=d;\n\t\t\t\tsum+=d*maxx;\n\t\t\t}\n\t\t\tsum-=b[i];\n\t\t\tnow++;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F. Education.json",
    "editorial_link": "https://codeforces.com//blog/entry/89535",
    "editorial": "Since the array does not decrease, if we want to get the position at\r\nsome point, it is best to get it as early as possible, because if we get\r\nit earlier, we will earn no less money.Therefore, the solution looks\r\nlike this rise to some position and earn money on it for a laptop. Letâs\r\ngo through the number of the position and use simple formulas to\r\ncalculate the number of days it takes to raise to this position and the\r\nnumber of days it takes to buy a laptop.From all the options, choose the\r\nminimum one.\r\n",
    "hint": []
}