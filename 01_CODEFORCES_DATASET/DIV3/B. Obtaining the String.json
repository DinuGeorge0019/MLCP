{
    "link": "https://codeforces.com//contest/1015/problem/B",
    "problemId": "203547",
    "problem_idx": "B",
    "shortId": "1015B",
    "contest_number": "1015",
    "problem_submissions": {
        "F": [
            41046686,
            41089036,
            41088828,
            41088337,
            41096109,
            41155137
        ],
        "E2": [
            41044021,
            41044614,
            41045819,
            41046151,
            41041339,
            41120563,
            41047819,
            41049335,
            41046653,
            41047315,
            41056482,
            41049017,
            41046489,
            41053390,
            41052850,
            41051286,
            41054981,
            41057931,
            41047714,
            41052649,
            41063809,
            41051282
        ],
        "E1": [
            41043653,
            41042567,
            41045757,
            41045539,
            41040702,
            41045081,
            41043696,
            41046746,
            41047236,
            41044065,
            41048961,
            41046210,
            41043883,
            41050998,
            41051221,
            41044932,
            41048477,
            41047379,
            41051531,
            41047009
        ],
        "D": [
            41031342,
            41034646,
            41036110,
            41039331,
            41043349,
            41037861,
            41039026,
            41038448,
            41038110,
            41038683,
            41037715,
            41040743,
            41035875,
            41037945,
            41039903,
            41039757,
            41039527,
            41041117,
            41039970,
            41063782,
            41038156
        ],
        "B": [
            41028759,
            41027947,
            41029953,
            41029847,
            41027873,
            41030296,
            41030110,
            41028724,
            41031028,
            41029894,
            41029543,
            41031067,
            41030593,
            41029154,
            41029321,
            41029551,
            41029148,
            41033439,
            41031881,
            41028034
        ],
        "C": [
            41027720,
            41029992,
            41031722,
            41032867,
            41029608,
            41033310,
            41032299,
            41030539,
            41033426,
            41032047,
            41032615,
            41033736,
            41032226,
            41030814,
            41031207,
            41031359,
            41030973,
            41035988,
            41034551,
            41029776
        ],
        "A": [
            41025375,
            41025426,
            41026820,
            41025657,
            41025347,
            41026304,
            41026166,
            41025506,
            41029303,
            41025595,
            41025554,
            41027421,
            41025393,
            41025748,
            41025855,
            41025912,
            41025550,
            41026111,
            41026923,
            41025435
        ]
    },
    "name": "B. Obtaining the String",
    "statement": "You are given two strings s and t. Both strings have length n and\r\nconsist of lowercase Latin letters. The characters in the strings are\r\nnumbered from 1 to n.You can successively perform the following move any\r\nnumber of times (possibly, zero): swap any two adjacent (neighboring)\r\ncharacters of s (i.e. for any i =\r\n{1, 2,\r\ndots, n - 1\r\n} you can swap s_i and s_{i + 1}). You can’t apply a move to the string\r\nt. The moves are applied to the string s one after another.Your task is\r\nto obtain the string t from the string s. Find any way to do it with at\r\nmost 10^4 such moves.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n//#define ll int\n#define ll long long\n#define fi first\n#define se second\n#define all(a) a.begin(),a.end()\n#define yn idehfushefuwheuf\n#define y1 issdehfushefuwheuf\n#define endL \"\\n\"\n#define all(a) a.begin(),a.end()\n#define p_b push_back\n#define pll pair<ll,ll>\n#define vout(a); cout<<a;return 0;\n#define sqr(a) ((a)*(a))\n\n\nconst ll gig = 1e18;\nconst ll gg = 25*1e6;\n\n\nusing namespace std;\n\n\n\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n\n//    freopen(\"1.out\", \"r\", stdin);\n//    freopen(\"1.out\", \"w\", stdout);\n\n    ll n;\n    string s, s1;\n    vector<ll> ot;\n    cin >> n;\n    cin >> s >> s1;\n\n    for (int i = 0; i < s.size(); i++) {\n        int j;\n        for (j = i; j < s.size(); j++) if (s[j] == s1[i]) break;\n        ll o = j;\n        if (j == s.size()) {\n            cout << -1;\n            return 0;\n        }\n        for (int j = o - 1;  i <= j; j--) {\n            ot.p_b(j);\n            swap(s[j], s[j + 1]);\n        }\n    }\n    cout << ot.size() << endL;\n    for (int i = 0; i < ot.size(); i++) cout << ot[i] + 1 << \" \";\n\n\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Obtaining the String.json",
    "editorial_link": "https://codeforces.com/blog/entry/60949",
    "editorial": "This problem can be solved using the next greedy approach: letâs iterate\r\nover all from to . If , go further. Otherwise letâs find any position\r\nsuch that and move the character from the position to the position . If\r\nthere is no such position in , the answer is \"\".Upper bound on time\r\ncomplexity (and the size of the answer) of this solution is .\r\n",
    "hint": []
}