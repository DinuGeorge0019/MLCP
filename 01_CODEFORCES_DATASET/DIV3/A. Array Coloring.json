{
    "link": "https://codeforces.com//contest/1857/problem/A",
    "problemId": "2150542",
    "problem_idx": "A",
    "shortId": "1857A",
    "contest_number": "1857",
    "problem_submissions": {
        "G": [
            217667474,
            217665550,
            217689340,
            217662818,
            217685310,
            217676468,
            217687922,
            217701057,
            217700197,
            217807896,
            217807827,
            217712091,
            217684113,
            217720675,
            217807627,
            217677400,
            217731532,
            217711676,
            217719652,
            217714022,
            217712604,
            217718357,
            217710888
        ],
        "F": [
            217659021,
            217648989,
            217664891,
            217627744,
            217669247,
            217691937,
            217689514,
            217664113,
            217674769,
            217680535,
            217666261,
            217699208,
            217671748,
            217807538,
            217701131,
            217674808,
            217679890,
            217683947,
            217696220,
            217689116,
            217681500,
            217688375
        ],
        "B": [
            217642867,
            217642809,
            217629703,
            217685667,
            217635907,
            217630271,
            217642640,
            217631148,
            217634501,
            217636716,
            217631884,
            217632923,
            217807034,
            217775927,
            217633962,
            217640699,
            217644829,
            217637634,
            217632935,
            217633927,
            217650168,
            217644229
        ],
        "D": [
            217638870,
            217638947,
            217636496,
            217634474,
            217647504,
            217644974,
            217647862,
            217645462,
            217646166,
            217647061,
            217646308,
            217648033,
            217807098,
            217775952,
            217684716,
            217643681,
            217658546,
            217653658,
            217651018,
            217652036,
            217655292,
            217662419
        ],
        "E": [
            217634664,
            217632006,
            217641596,
            217642974,
            217661622,
            217655519,
            217656154,
            217657341,
            217663115,
            217656176,
            217655704,
            217660327,
            217807112,
            217775966,
            217649059,
            217656810,
            217665253,
            217663579,
            217661514,
            217671790,
            217665209,
            217669853
        ],
        "C": [
            217623043,
            217660653,
            217633113,
            217671603,
            217641405,
            217641348,
            217633280,
            217640705,
            217639467,
            217642154,
            217639690,
            217640983,
            217807070,
            217775937,
            217639411,
            217632787,
            217649913,
            217647923,
            217645015,
            217643972,
            217637879,
            217653046
        ],
        "A": [
            217621356,
            217622367,
            217617259,
            217636401,
            217628184,
            217620735,
            217618278,
            217621503,
            217622297,
            217628772,
            217620627,
            217617547,
            217806999,
            217775914,
            217772364,
            217772351,
            217620412,
            217618442,
            217617205,
            217621216,
            217619220,
            217624745,
            217618215,
            217619189
        ]
    },
    "name": "A. Array Coloring",
    "statement": "You are given an array consisting of n integers. Your task is to\r\ndetermine whether it is possible to color all its elements in two colors\r\nin such a way that the sums of the elements of both colors have the same\r\nparity and each color has at least one element colored.For example, if\r\nthe array is [1,2,4,3,2,3,5,4], we can color it as follows: [\r\ncolor{blue}{1},\r\ncolor{blue}{2},\r\ncolor{red}{4},\r\ncolor{blue}{3},\r\ncolor{red}{2},\r\ncolor{red}{3},\r\ncolor{red}{5},\r\ncolor{red}{4}], where the sum of the blue elements is 6 and the sum of\r\nthe red elements is 18.\r\n",
    "solutions": [
        "#define _USE_MATH_DEFINES\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<numeric>\n#include<cmath>\n#include<fstream>\n#include<random>\n#include<set>\n#include<unordered_set>\n#include<string>\n#include<map>\n#include<unordered_map>\n#include<queue>\n#include<stack>\n#include<fstream>\n#include<time.h>\n \nusing namespace std;\n \n#define all(a) a.begin(), a.end()\n#define Max(a) *max_element(all(a))\n#define Min(a) *min_element(all(a))\n \nusing ll = long long;\nusing ld = long double;\n \nvoid solve() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (auto& e : a) cin >> e;\n    int odd = 0, even = 0;\n    for (auto e : a) {\n        if (e % 2 == 0) even++;\n        else odd++;\n    }\n    if (odd % 2 == 0) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n}\n \nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cout.precision(40);\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Array Coloring.json",
    "editorial_link": "https://codeforces.com//blog/entry/119134",
    "editorial": "Letâs analyze the impact of adding odd or even numbers to a set with sum\r\n: If you add an even element to the set, the parity of remains\r\nunchanged. If you add an odd element to the set, the parity of changes.\r\nBased on this observation, letâs focus on the coloring of odd elements\r\nin the array. The number of odd elements colored in blue and the number\r\nof odd elements colored in red must have the same parity for a valid\r\ncoloring. This is because we need to divide the odd elements into two\r\nparts (blue and red).To achieve the same parity for both blue and red\r\nodd elements, the total number of odd elements in the array must be\r\neven. If it is not even, we wonât be able to create two sets with the\r\nsame parity.Hence, the answer is \"YES\" if the number of odd elements in\r\nthe array is even, and \"NO\" otherwise.\r\n",
    "hint": []
}