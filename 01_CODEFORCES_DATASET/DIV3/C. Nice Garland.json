{"link": "https://codeforces.com//contest/1108/problem/C", "problemId": "286769", "problem_idx": "C", "shortId": "1108C", "contest_number": "1108", "problem_submissions": {"F": [48844825, 48862163, 48848324, 48848130, 48852294, 48850212, 48838457, 48838256, 48836252, 48909101, 48845595, 48850104, 48843426, 48844816, 48883602], "E1": [48835917, 48840618, 48808903, 48835183, 48832250, 48823205, 48832522, 48828568, 48833167, 48832156, 48841738, 48836232, 48828690, 48847940, 48835833, 48836036, 48834638, 48838866, 48844104], "E2": [48835709, 48844109, 48822818, 48835022, 48838613, 48845982, 48955072, 48856736, 48884776, 48838175, 48842079, 48839961, 48846288, 48846487, 48844520, 48843523], "D": [48819956, 48826572, 48809346, 48824842, 48817280, 48817540, 48824822, 48819948, 48824552, 48909120, 48824055, 48812013, 48824784, 48817759, 48822110, 48828365, 48827975, 48821821, 48832316, 48824776], "C": [48816726, 48823616, 48805698, 48816182, 48814495, 48812589, 48819587, 48815831, 48817913, 48909136, 48819613, 48817733, 48820640, 48837755, 48816702, 48811230, 48820437, 48818121, 48821557, 48818894], "B": [48812488, 48806606, 48811060, 48806723, 48809336, 48805383, 48812792, 48811800, 48810047, 48909150, 48813994, 48807942, 48810147, 48809048, 48810769, 48806352, 48811586, 48811107, 48808604, 48810570], "A": [48804415, 48868180, 48868032, 48808820, 48801772, 48803106, 48804293, 48801670, 48804786, 48802995, 48802478, 48909143, 48804883, 48801594, 48807139, 48804067, 48807170, 48802448, 48806432, 48806874, 48802749, 48804777]}, "name": "C. Nice Garland", "statement": "You have a garland consisting of n lamps. Each lamp is colored red,\r\ngreen or blue. The color of the i-th lamp is s_i (\u201d, \u201d and \u201d colors of\r\nlamps in the garland).You have to recolor some lamps in this garland\r\n(recoloring a lamp means changing its initial color to another) in such\r\na way that the obtained garland is .A garland is called if any two lamps\r\nof the same color have distance divisible by three between them. I.e. if\r\nthe obtained garland is t, then for each i, j such that t_i = t_j should\r\nbe satisfied |i-j|\u00a0 mod\u00a0 3 = 0. The value |x| means absolute value of x,\r\nthe operation x\u00a0 mod\u00a0 y means remainder of x when divided by y.For\r\nexample, the following garlands are : \"\", \"\", \"\", \"\", \"\". The following\r\ngarlands are not : \"\", \"\".Among all ways to recolor the initial garland\r\nto make it you have to choose one with the number of recolored lamps. If\r\nthere are multiple optimal solutions, print of them.\r\n", "solutions": ["#include <bits/stdc++.h>\n\n#define fn \"test\"\n#define fn1 \"\"\n\nusing namespace std;\n\nconst int mn = 1 * (int)(1e5) + 10;\nconst int mod = 1 * (int)(1e9) + 7;\nconst int mm = 1 * (int)(1e3) + 10;\nconst int base = 1 * (int)(1e9);\nconst bool aNs = 0;\n\nint tt, ntest = 1;\n\nvoid docfile()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    if (ifstream(fn\".inp\"))\n    {\n        freopen(fn\".inp\", \"r\", stdin);\n        if (!aNs) freopen(fn\".out\", \"w\", stdout);\n\t\telse freopen (fn\".ans\", \"w\", stdout);\n    }else if (ifstream(fn1\".inp\"))\n    {\n        freopen(fn1\".inp\", \"r\", stdin);\n        freopen(fn1\".out\", \"w\", stdout);\n    }\n}\n\ntemplate <typename T>\nvoid read(T& x)\n{\n    x = 0; T f = 1;\n    char ch = getchar();\n    while (!isdigit(ch)) f = ch == '-' ? - f : f, ch = getchar();\n    while (isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n    x *= f;\n}\n\ntemplate <typename T>\nvoid write (T a)\n{\n    if (a < 0)\n    {\n        putchar ('-');\n        write (-a);\n        return;\n    }\n    if (a < 10)\n    {\n        putchar ('0' + a);\n        return;\n    }\n    write (a / 10);\n    putchar ((char)('0' + (a % 10)));\n}\n\nint a[3];\n\nvoid enter()\n{\n    int n;\n    string s;\n    cin >> n >> s;\n    int sol = INT_MAX;\n    string s1 = \"RGB\";\n    for (int i = 0; i < 3; ++ i)\n    for (int j = 0; j < 3; ++ j)\n    for (int k = 0; k < 3; ++ k)\n    if (i != j && i != k && j != k)\n    {\n        int r = 0;\n        for (int l = 0; l < n; ++ l)\n        {\n            if (l % 3 == 0 && s[l] != s1[i]) ++ r;\n            if (l % 3 == 1 && s[l] != s1[j]) ++ r;\n            if (l % 3 == 2 && s[l] != s1[k]) ++ r;\n        }\n        if (r < sol)\n        {\n            sol = r;\n            a[0] = i; a[1] = j; a[2] = k;\n        }\n    }\n    cout << sol << \"\\n\";\n    for (int i = 0; i < n; ++ i)\n    cout << s1[a[i % 3]];\n}\n\nvoid solve()\n{\n\n}\n\nvoid print_result()\n{\n\n}\n\nint main()\n{\n    docfile();\n    //cin>>ntest;\n    for (tt = 1; tt <= ntest; ++ tt)\n    {\n        enter();\n        solve();\n        print_result();\n    }\n}"], "input": "", "output": "", "tags": ["brute force", "greedy", "math"], "dificulty": "1300", "interactive": false}