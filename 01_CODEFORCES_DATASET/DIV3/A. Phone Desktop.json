{
    "link": "https://codeforces.com//contest/1974/problem/A",
    "problemId": "2657203",
    "problem_idx": "A",
    "shortId": "1974A",
    "contest_number": "1974",
    "problem_submissions": {
        "G": [
            261890876,
            261895242,
            261892104,
            261815844,
            261901397,
            261882110,
            261902942,
            261897196,
            261890302,
            261906925,
            261906633,
            261902994,
            261909128,
            262172085,
            261998366,
            261998046,
            261912311
        ],
        "F": [
            261873832,
            261860163,
            261871347,
            261886083,
            261890598,
            261905275,
            261893342,
            261893849,
            261885670,
            261888292,
            261884408,
            261903255,
            261856931,
            261866178,
            261998302,
            261867572,
            261874550,
            261881230,
            261896095,
            261891848
        ],
        "E": [
            261843511,
            261898684,
            261874046,
            261856295,
            261872971,
            261858650,
            261864336,
            261872189,
            261875499,
            261861733,
            261866981,
            261850233,
            261886170,
            261845363,
            261845593,
            261998691,
            261848135,
            261863399,
            261863179,
            261861452,
            261854564
        ],
        "D": [
            261828744,
            261833579,
            261844887,
            261858347,
            261848070,
            261834943,
            261843848,
            261843125,
            261893971,
            261854059,
            261850835,
            261836444,
            261865680,
            261830266,
            261832171,
            261998550,
            261835226,
            261844678,
            261837286,
            261829368,
            261844070
        ],
        "C": [
            261809458,
            261818269,
            261821670,
            261838680,
            261824893,
            261817516,
            261818307,
            261822342,
            261872865,
            261902570,
            261836543,
            261891689,
            261812999,
            261811999,
            261811344,
            261998621,
            261807237,
            261810379,
            261809093,
            261808251,
            261815953
        ],
        "B": [
            261801251,
            261803139,
            261801216,
            261828779,
            261802058,
            261805873,
            261803693,
            261800515,
            261806010,
            261808108,
            261800732,
            261800673,
            261801484,
            261801347,
            261998221,
            261798953,
            261798594,
            261800683,
            261798231,
            261800035
        ],
        "A": [
            261797694,
            261795610,
            261795288,
            261822724,
            261797136,
            261796736,
            262453696,
            261795629,
            261796165,
            261795943,
            261800077,
            261795571,
            261795380,
            261796034,
            261796954,
            261998187,
            261795311,
            261795243,
            261796139,
            261795603,
            261796608
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129686",
    "editorial": "Note that on one screen we can put no more than two icons. Thus, we need\r\nat least screens. Then, we check how many icons we can put on these\r\nscreens: . The icons left we need to put on additional screens.\r\n",
    "name": "A. Phone Desktop",
    "statement": "Little Rosie has a phone with a desktop (or launcher, as it is also\r\ncalled). The desktop can consist of several screens. Each screen is\r\nrepresented as a grid of size 5\r\ntimes 3, i.e., five rows and three columns.There are x applications with\r\nan icon size of 1\r\ntimes 1 cells; such an icon occupies only one cell of the screen. There\r\nare also y applications with an icon size of 2\r\ntimes 2 cells; such an icon occupies a of 4 cells on the screen. Each\r\ncell of each screen can be occupied by no more than one icon.Rosie wants\r\nto place the application icons on the minimum number of screens. Help\r\nher find the minimum number of screens needed.\r\n",
    "solutions": [
        "#include <iostream>#include <cmath>#include <algorithm>#include <vector>#include <chrono>#include <random>#include <map>#include <set>using namespace std;const int N = 120000;void solve() {\tint x, y;\tcin >> x >> y;\tif (y % 2 == 0) {\t\tif (x <= (y / 2) * 7) {\t\t\tcout << (y / 2) << \"\\n\";\t\t}\t\telse cout << (y / 2) + (x - (y / 2) * 7 + 14) / 15 << \"\\n\";\t}\telse {\t\tif (x <= (y / 2) * 7 + 11) {\t\t\tcout << (y / 2) + 1 << \"\\n\";\t\t}\t\telse cout << (y / 2) + 1 + (x - (y / 2) * 7 - 11 + 14) / 15 << \"\\n\";\t}}int main() {\tint t;\tcin >> t;\twhile (t--) {\t\tsolve();\t}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Phone Desktop.json",
    "hint": []
}