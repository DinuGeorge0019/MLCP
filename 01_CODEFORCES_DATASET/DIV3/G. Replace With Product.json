{"link": "https://codeforces.com//contest/1872/problem/G", "problemId": "2198226", "problem_idx": "G", "shortId": "1872G", "contest_number": "1872", "problem_submissions": {"G": [222269305, 222264289, 222298879, 222305481, 222270629, 222342415, 222314228, 222291632, 222286722, 222275567, 222284367, 222291047, 222268166, 222301101, 222308831, 222296849, 222307124, 222314609, 222306727, 222303618, 222298039], "F": [222253211, 222274310, 222263563, 222275177, 222283950, 222342119, 222263399, 222275335, 222259168, 222301153, 222293375, 222280986, 222289895, 222284461, 222268231, 222282384, 222274185, 222276754, 222273355, 222290954], "E": [222242579, 222246400, 222249497, 222247597, 222248802, 222342265, 222249154, 222255647, 222250780, 222252960, 222255367, 222257063, 222301644, 222264271, 222254606, 222261852, 222259585, 222256505, 222256891, 222259676], "D": [222233540, 222240242, 222235638, 222238483, 222241578, 222341675, 222240111, 222249058, 222245456, 222243309, 222249106, 222245814, 222245292, 222248919, 222247848, 222246403, 222250509, 222246737, 222246669, 222248764], "C": [222228280, 222236162, 222231841, 222233925, 222238951, 222341397, 222235622, 222239086, 222238021, 222238244, 222243551, 222237799, 222238155, 222240804, 222242295, 222252499, 222244345, 222233052, 222239640, 222243679], "B": [222223320, 222228834, 222223279, 222226962, 222230878, 222341232, 222228304, 222229555, 222234022, 222230767, 222235368, 222229693, 222228951, 222233130, 222233112, 222230666, 222236695, 222242522, 222228111, 222239768], "A": [222220034, 222220138, 222220149, 222220934, 222220877, 222220135, 222220624, 222220385, 222220004, 222220348, 222220097, 222222211, 222223046, 222220972, 222222909, 222223854, 222229902, 222220171, 222223172]}, "name": "G. Replace With Product", "statement": "Given an array a of n positive integers. You need to perform the\r\nfollowing operation once: Choose 2 integers l and r (1\r\nle l\r\nle r\r\nle n) and replace the subarray a[l\r\nldots r] with the single element: the product of all elements in the\r\nsubarray (a_l\r\ncdot\r\nldots\r\ncdot a_r).For example, if an operation with parameters l = 2, r = 4 is\r\napplied to the array [5, 4, 3, 2, 1], the array will turn into [5, 24,\r\n1].Your task is to maximize the sum of the array after applying this\r\noperation. Find the optimal subarray to apply this operation.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define vll vector<ll>\n#define vvll vector<vll>\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        ll n;\n        cin >> n;\n        vll a(n);\n        __int128_t prod = 1;\n        bool dall = false;\n        vll non_ones;\n        for (ll i = 0; i < n; i++) {\n            cin >> a[i];\n            if (a[i] != 1) non_ones.push_back(i);\n        }\n        for (ll v : a) {\n            prod *= v;\n            if (prod > 1e15) {\n                dall = true;\n                break;\n            }\n        }\n        if (dall) {\n            cout << non_ones[0]+1 << ' ' << non_ones.back()+1 << '\\n';\n            continue;\n        }\n        ll maxv = 0;\n        pair<ll,ll> maxp = {0, 0};\n        for (ll l : non_ones) {\n            ll prod = 1;\n            ll sum = 0;\n            ll cnt = 0;\n            for (ll r : non_ones) {\n                if (l <= r) {\n                    prod *= a[r];\n                    sum += a[r];\n                    cnt++;\n\n                    ll sugv = prod - (sum + r-l+1 - cnt );\n                    if (sugv > maxv) {\n                        maxv = sugv;\n                        maxp = {l, r};\n                    }\n                }\n            }\n        }\n        cout << maxp.first+1 << ' ' << maxp.second+1 << '\\n';\n        \n    }\n}"], "input": "", "output": "", "tags": ["brute force", "greedy", "math"], "dificulty": "2000", "interactive": false}