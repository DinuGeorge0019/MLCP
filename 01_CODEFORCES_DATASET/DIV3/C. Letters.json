{
    "link": "https://codeforces.com//contest/978/problem/C",
    "problemId": "182878",
    "problem_idx": "C",
    "shortId": "978C",
    "contest_number": "978",
    "problem_submissions": {
        "G": [
            38172491,
            38169204,
            38172434,
            38174884,
            38174212,
            38202570,
            38174356,
            38174504,
            38170439,
            38179076,
            38174120,
            38175016,
            38177179,
            38173974,
            38173883,
            38177077,
            38179217,
            38177915,
            38175210
        ],
        "F": [
            38167756,
            38167382,
            38169838,
            38171846,
            38171022,
            38202583,
            38171851,
            38172094,
            38166947,
            38172200,
            38170297,
            38172407,
            38173744,
            38170844,
            38171837,
            38173600,
            38173445,
            38173729,
            38171096,
            38172672
        ],
        "E": [
            38166000,
            38165982,
            38167458,
            38167818,
            38167975,
            38202586,
            38169135,
            38168502,
            38165451,
            38168025,
            38168912,
            38170344,
            38169652,
            38168636,
            38170345,
            38170564,
            38171323,
            38171232,
            38166984
        ],
        "D": [
            38164294,
            38164281,
            38166043,
            38165411,
            38166520,
            38202587,
            38166943,
            38167185,
            38174671,
            38184115,
            38165897,
            38167133,
            38167961,
            38167926,
            38167171,
            38168834,
            38168604,
            38168704,
            38168070,
            38165126
        ],
        "C": [
            38162269,
            38159839,
            38162952,
            38162443,
            38163682,
            38202588,
            38163454,
            38163549,
            38164049,
            38162683,
            38163806,
            38164073,
            38165403,
            38165313,
            38165695,
            38165203,
            38164723,
            38162539,
            38162894
        ],
        "B": [
            38160472,
            38157775,
            38159643,
            38159599,
            38161723,
            38159684,
            38162382,
            38159493,
            38159452,
            38160053,
            38159583,
            38160909,
            38164410,
            38160958,
            38160311,
            38159735,
            38160488
        ],
        "A": [
            38158198,
            38157375,
            38157656,
            38157773,
            38158120,
            38202594,
            38157741,
            38157702,
            38160301,
            38157750,
            38158544,
            38157695,
            38157893,
            38159292,
            38163521,
            38158147,
            38158142,
            38157847,
            38158925
        ]
    },
    "name": "C. Letters",
    "statement": "There are n dormitories in Berland State University, they are numbered\r\nwith integers from 1 to n. Each dormitory consists of rooms, there are\r\na_i rooms in i-th dormitory. The rooms in i-th dormitory are numbered\r\nfrom 1 to a_i.A postman delivers letters. Sometimes there is no specific\r\ndormitory and room number in it on an envelope. Instead of it only a\r\nroom number among all rooms of all n dormitories is written on an\r\nenvelope. In this case, assume that all the rooms are numbered from 1 to\r\na_1 + a_2 +\r\ndots + a_n and the rooms of the first dormitory go first, the rooms of\r\nthe second dormitory go after them and so on.For example, in case n=2,\r\na_1=3 and a_2=5 an envelope can have any integer from 1 to 8 written on\r\nit. If the number 7 is written on an envelope, it means that the letter\r\nshould be delivered to the room number 4 of the second dormitory.For\r\neach of m letters by the room number among all n dormitories, determine\r\nthe particular dormitory and the room number in a dormitory where this\r\nletter should be delivered.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define DIM 200007\nusing namespace std;\n\nlong long n,m,a[DIM],p[DIM];\n\n\nint main()\n{\n    cin>>n>>m;\n\n    for(int i = 1; i <= n; ++i)\n    {\n        cin>>a[i];\n        p[i] = p[i-1] + a[i];\n    }\n\n    for(int i = 1; i <= m; ++i)\n    {\n        long long b;\n        cin>>b;\n        int pos = lower_bound(p+1,p+1+n,b) - p;\n        cout<<pos<<' '<<b-p[pos-1]<<endl;\n    }\n    return 0;\n\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "implementation",
        "two pointers"
    ],
    "dificulty": "1000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\C. Letters.json",
    "editorial_link": "https://codeforces.com/blog/entry/59430",
    "editorial": "We should use that the letter queries are given in increasing order of\r\nroom numbers. We will store in a variable the number of rooms in already\r\nconsidered dormitories (this variable should have 64-bit type) and in a\r\nvariable we will store the minimum number of dormitory where the room\r\nfrom the current letter possibly is. Initially, and . We will iterate\r\nthrough the letters. Let the current letter should be delivered to the\r\nroom . While , we increase by and increase by one. So, we got the\r\ndormitory number where room is. It only remains to print two integers:\r\n(the dormitory number) and (the room number in this dormitory).\r\n"
}