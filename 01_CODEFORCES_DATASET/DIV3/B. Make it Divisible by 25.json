{"link": "https://codeforces.com//contest/1593/problem/B", "problemId": "1142162", "problem_idx": "B", "shortId": "1593B", "contest_number": "1593", "problem_submissions": {"G": [131796315, 131809860, 131836830, 131839082, 131841650, 131846524, 131852907, 131782296, 148479901, 131828563], "D2": [131785134, 131788443, 131789598, 131915775, 131805880, 131823322, 131831578, 131821525, 131793982, 131849437, 131784594, 131791388, 131828383, 131836476, 131831664, 131825743, 131905244, 131794334], "F": [131781426, 131837226, 131815253, 131811669, 131876285, 131849937, 131847427, 131845860, 131816994, 131855037, 131787838, 131800685, 131891194], "E": [131774861, 131775908, 131796997, 131786728, 131876206, 131792098, 131797221, 131825650, 131807172, 131832634, 131793728, 131840729, 131794124, 131808830, 131787792, 131786397, 131783883, 131789053, 223850329, 131905293, 131805482], "B": [131755249, 131755158, 131757455, 131754198, 131760377, 131758125, 131761538, 131761685, 131807386, 131800607, 131823956, 131758842, 131777000, 131762147, 131758359, 131757156, 131752418, 131759279, 131754084, 131765706], "C": [131755086, 131765317, 131761314, 131762977, 131768274, 131765107, 131772896, 131769864, 131760280, 131765951, 131827956, 131767746, 131761402, 131771022, 131806450, 131797380, 131767699, 131763033, 131759309, 131766132, 131759703, 131774485], "D1": [131754873, 131770215, 131766394, 131756595, 131776207, 131772281, 131769846, 131778601, 131766158, 131773159, 131795293, 131772976, 131778104, 131776921, 131775662, 131772715, 131771125, 131769653, 131765142, 131779945], "A": [131752757, 131748062, 131750155, 131748058, 131749835, 131748696, 131748309, 131753208, 131799940, 131756190, 131825544, 131751230, 131754683, 131752419, 131750607, 131749631, 131748206, 131752432, 131748594, 131755250]}, "name": "B. Make it Divisible by 25", "statement": "It is given a positive integer n. In 1 move, one can select any single\r\ndigit and remove it (i.e. one selects some position in the number and\r\nremoves the digit located at this position). The operation cannot be\r\nperformed if only one digit remains. If the resulting number contains\r\nleading zeroes, they are automatically removed.E.g. if one removes from\r\nthe number 32925 the 3-rd digit, the resulting number will be 3225. If\r\none removes from the number 20099050 the first digit, the resulting\r\nnumber will be 99050 (the 2 zeroes going next to the first digit are\r\nautomatically removed).What is the minimum number of steps to get a\r\nnumber such that it is divisible by 25 and ? It is guaranteed that, for\r\neach n occurring in the input, the answer exists. It is guaranteed that\r\nthe number n has no leading zeros.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    \n    int t;\n    cin >> t;\n    while (t--) {\n        string s;\n        cin >> s;\n\n        int ans = s.size();\n\n        //case 1: 00 50\n        int cur = s.size() - 1;\n        while (cur >= 0) {\n            if (s[cur] == '0') {\n                --cur;\n                break;\n            }\n            --cur;\n        }\n        while (cur >= 0) {\n            if (s[cur] == '0' || s[cur] == '5') {\n                break;\n            }\n            --cur;\n        }\n\n        if (cur >= 0) {\n            ans = min(ans ,(int) s.size() - cur - 2);\n        }\n\n        // 25 75\n        cur = s.size() - 1;\n        while (cur >= 0) {\n            if (s[cur] == '5') {\n                --cur;\n                break;\n            }\n            --cur;\n        }\n        while (cur >= 0) {\n            if (s[cur] == '2' || s[cur] == '7') {\n                break;\n            }\n            --cur;\n        }\n\n        if (cur >= 0) {\n            ans = min(ans ,(int) s.size() - cur - 2);\n        }\n\n        cout << ans << endl;\n\n    }\n    return 0;\n}"], "input": "", "output": "", "tags": ["dfs and similar", "dp", "greedy", "math", "math"], "dificulty": "900", "interactive": false}