{
    "link": "https://codeforces.com//contest/1360/problem/A",
    "problemId": "629821",
    "problem_idx": "A",
    "shortId": "1360A",
    "contest_number": "1360",
    "problem_submissions": {
        "H": [
            81251920,
            81290028,
            81293330,
            81291112,
            81294740,
            81299062,
            81297186,
            81294484,
            81304607,
            81300361,
            81303070,
            81250599,
            81295409,
            81298287,
            81304237,
            81231948
        ],
        "G": [
            81250908,
            81261609,
            81276322,
            81265591,
            81276387,
            81264433,
            81272613,
            81280948,
            81267380,
            81269754,
            81289390,
            81293762,
            81279290,
            81296348,
            81288695,
            81287798
        ],
        "F": [
            81230412,
            81252303,
            81257057,
            81259404,
            81265576,
            81254763,
            81259977,
            81264927,
            81254624,
            81249372,
            81271302,
            81279300,
            81267710,
            81275581,
            81282413,
            81255521
        ],
        "E": [
            81216064,
            81240455,
            81234957,
            81246045,
            81233772,
            81233068,
            81236233,
            81262156,
            81246598,
            81264349,
            81235887,
            81262591,
            81252163,
            81263497,
            81254477,
            81259978
        ],
        "B": [
            81215775,
            81207436,
            81205722,
            81209946,
            81206365,
            81207859,
            81208440,
            81216311,
            81225212,
            81217601,
            81209275,
            81216781,
            81209546,
            81211074,
            81219408,
            81270897
        ],
        "A": [
            81211901,
            81203807,
            81203057,
            81203650,
            81203478,
            81204406,
            81203639,
            81224692,
            81237119,
            81214495,
            81204306,
            81209285,
            81203552,
            81206909,
            81211432,
            81273150
        ],
        "C": [
            81206744,
            81215880,
            81216577,
            81223025,
            81214552,
            81214398,
            81216644,
            81210331,
            81222555,
            81225820,
            81221447,
            81224269,
            81240900,
            81218199,
            81226927,
            81268532
        ],
        "D": [
            81205489,
            81225350,
            81222950,
            81235831,
            81222076,
            81219822,
            81226333,
            81233523,
            81233797,
            81230395,
            81227841,
            81245779,
            81245445,
            81255431,
            81237048,
            81264054
        ]
    },
    "name": "A. Minimal Square",
    "statement": "Find the minimum area of a land on which you can place two identical\r\nrectangular a\r\ntimes b houses. The sides of the houses should be parallel to the sides\r\nof the desired square land.Formally, You are given two identical\r\nrectangles with side lengths a and b (1\r\nle a, b\r\nle 100) positive integers (you are given just the sizes, but their\r\npositions). Find the square of the minimum area that contains both given\r\nrectangles. Rectangles can be rotated (both or just one), moved, but the\r\nsides of the rectangles should be parallel to the sides of the desired\r\nsquare. Two rectangles can touch each other (side or corner), but cannot\r\nintersect. Rectangles can also touch the sides of the square but must be\r\ncompletely inside it. You can rotate the rectangles. Take a look at the\r\nexamples for a better understanding.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std ;\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define re register\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\n#define maxn 205\nint n, m ; \nsigned main() {\n\tint T = gi() ;\n\twhile( T -- ) {\n\t\tn = gi(), m = gi() ;\n\t\tcout << max(min(n * 2, m * 2), max(n, m)) * max(min(n * 2, m * 2), max(n, m)) << endl ; \n\t}\n\treturn 0 ;\n} "
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Minimal Square.json",
    "editorial_link": "https://codeforces.com//blog/entry/77846",
    "editorial": "Obviously that both rectangles should completely touch by one of the\r\nsides. Otherwise, you can move them closer to each other so that the\r\ntotal height or total width decreases, and the other dimension does not\r\nchange. Thus, there are only two options: The rectangles touch by width,\r\nwe get the side of the square equal to , The rectangles touch by height,\r\nwe get the side of the square equal to . Thus, the minimum side of the\r\nsquare is equal to the minimum of these two options. Then the answer is\r\n.\r\n"
}