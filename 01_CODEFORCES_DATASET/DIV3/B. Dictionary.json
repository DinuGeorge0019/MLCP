{"link": "https://codeforces.com//contest/1674/problem/B", "problemId": "1387198", "problem_idx": "B", "shortId": "1674B", "contest_number": "1674", "problem_submissions": {"G": [155646371, 155678319, 155682648, 155674622, 155685706, 155652398, 155774505, 155758418, 155756941, 155756549, 155813512, 155812905, 155812142, 155668112, 155672472, 155679227], "E": [155631011, 155634103, 155643152, 155675920, 155631080, 155651713, 155617544, 155694232, 155715039, 155714839, 155714791, 155637067, 155642168, 155638571, 155649103, 155635417, 155641093, 155646304, 155721408, 155721277, 155636472, 155697116, 155650091, 155644616], "D": [155618739, 155613748, 155616684, 155656367, 155626968, 155608446, 155610953, 155612083, 155611734, 155659957, 155623954, 155619138, 155624149, 155621266, 155624757, 155627320, 155618076, 155634919, 155611685, 155616988], "F": [155617525, 155657845, 155669742, 155653200, 155666820, 155638184, 155625715, 155652009, 155672980, 155630184, 155664338, 155667869, 155668832, 155674578, 155651745, 155669165, 155649876, 155663032, 155653319, 155665427], "C": [155604778, 155603079, 155604115, 155615008, 155611152, 155601227, 155598610, 155598459, 155599303, 155601929, 155605133, 155602572, 155609155, 155606549, 155606406, 155613995, 155599916, 155616867, 155601683, 155604335], "B": [155596261, 155597272, 155595696, 155604402, 155605300, 155597345, 155593808, 155599168, 155593898, 155596784, 155597719, 155597183, 155602563, 155597000, 155600384, 155600158, 155595285, 155605630, 155596236, 155595482], "A": [155592021, 155592145, 155591844, 155602088, 155598548, 155592326, 155591501, 155592241, 155591537, 155593757, 155591678, 155592049, 155596267, 155592804, 155593311, 155594974, 155592005, 155594331, 155593247, 155592088]}, "name": "B. Dictionary", "statement": "The Berland language consists of words having . Moreover, . Any\r\ncombination of two different Berland letters (which, by the way, are the\r\nsame as the lowercase letters of Latin alphabet) is a correct word in\r\nBerland language.The Berland dictionary contains all words of this\r\nlanguage. The words are listed in a way they are usually ordered in\r\ndictionaries. Formally, word a comes earlier than word b in the\r\ndictionary if one of the following conditions hold: the first letter of\r\na is less than the first letter of b; the first letters of a and b are\r\nthe same, and the second letter of a is less than the second letter of\r\nb. So, the dictionary looks like that: Word 1: Word 2: ... Word 25: Word\r\n26: Word 27: ... Word 649: Word 650: You are given a word s from the\r\nBerland language. Your task is to find its index in the dictionary.\r\n", "solutions": ["#include \"bits/stdc++.h\"\n\nusing namespace std;\n\nusing ll = long long;\nconst ll inf = 1e9;\nconst int md1 = 1e9+7;\n\n#define all(v)                      v.begin(), v.end()\n#define rall(v)                     v.rbegin(), v.rend()\n#define sz(v)                       ((int)v.size())\n\n#define forn(i,n)                   for(int i = 0; i < n; ++i)\n#define forbe(i,b,e)                for(int i = b; i < e; ++i)\n\n#define pb                          push_back\n\n#define pry                         puts(\"YES\")\n#define prn                         puts(\"NO\")\n#define endl                        '\\n'\n\n#define fst                         first\n#define scn                         second\n\nvoid solve(){\n    string s;\n    cin >> s;\n\n    cout << 1+ ( s[0] - 'a' ) * 25 + s[1] - 'a' - (s[1] > s[0]) << endl;\n}\n\nint32_t main(){\n    #ifndef ONPC\n        ios_base::sync_with_stdio(0);cin.tie(0);\n    #else\n        freopen(\"in\", \"r\", stdin);\n    #endif\n    int t = 1;\n    cin >> t;\n    while(t--)\n        solve();\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "math"], "dificulty": "800", "interactive": false}