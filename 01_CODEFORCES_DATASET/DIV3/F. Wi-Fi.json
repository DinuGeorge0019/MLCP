{
    "link": "https://codeforces.com//contest/1216/problem/F",
    "problemId": "416606",
    "problem_idx": "F",
    "shortId": "1216F",
    "contest_number": "1216",
    "problem_submissions": {
        "E2": [
            60986734,
            60981170,
            60997115,
            60985637,
            60997177,
            60997976,
            60992623,
            69195725,
            60998670,
            61247650,
            60997442,
            60997640
        ],
        "E1": [
            60986701,
            60981381,
            60991296,
            60984645,
            60985839,
            60989738,
            60990832,
            60978683,
            60998375,
            60989797,
            60998466,
            60993985,
            60980914,
            60997704,
            60988736,
            60984723,
            60990990,
            60986601
        ],
        "C": [
            60981669,
            60990425,
            60975750,
            60975663,
            61086862,
            60983090,
            60984718,
            61533112,
            60981907,
            60982789,
            60976823,
            60986723,
            61054057,
            60989611,
            60976831,
            60974484,
            60977137,
            60972899,
            60979313
        ],
        "F": [
            60975517,
            60986121,
            60989454,
            61044084,
            60994589,
            60996911,
            60992052,
            60996768,
            60996199,
            60997941,
            61058200,
            60986086,
            60984536
        ],
        "D": [
            60970305,
            60969422,
            60979167,
            60973557,
            60979158,
            60977757,
            60974574,
            60971427,
            60975880,
            60986777,
            60980642,
            60979989,
            60972197,
            60998997,
            60971823,
            60978440,
            60977872,
            60980072,
            60979415,
            60982329
        ],
        "B": [
            60968540,
            60973425,
            60969453,
            60969948,
            60968651,
            60970421,
            60969221,
            60967329,
            60973241,
            60969188,
            60971106,
            60972717,
            61055106,
            60990306,
            60977585,
            60967750,
            60969441,
            60969185,
            60970105,
            60969050
        ],
        "A": [
            60966562,
            60966712,
            60966606,
            60967078,
            60966914,
            60966840,
            60966749,
            60973994,
            60967597,
            60966646,
            60968186,
            60966855,
            61054672,
            60987474,
            60967039,
            60966387,
            60966654,
            60966714,
            60966479,
            60966739
        ]
    },
    "name": "F. Wi-Fi",
    "statement": "You work as a system administrator in a dormitory, which has n rooms one\r\nafter another along a straight hallway. Rooms are numbered from 1 to\r\nn.You have to connect all n rooms to the Internet.You can connect each\r\nroom to the Internet directly, the cost of such connection for the i-th\r\nroom is i coins. Some rooms also have a spot for a router. The cost of\r\nplacing a router in the i-th room is also i coins. You cannot place a\r\nrouter in a room which does not have a spot for it. When you place a\r\nrouter in the room i, you connect all rooms with the numbers from\r\nmax(1,\u00a0i - k) to min(n,\u00a0i + k) inclusive to the Internet, where k is the\r\nrange of router. The value of k is the same for all routers. Calculate\r\nthe minimum total cost of connecting all n rooms to the Internet. You\r\ncan assume that the number of rooms which have a spot for a router is\r\nnot greater than the number of routers you have.\r\n",
    "solutions": [
        "//#pragma GCC optimize(2)\n//#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define LL long long\n#define re register\n#define fr(i,x,y) for(int i=(x);i<=(y);i++)\n#define rf(i,x,y) for(int i=(x);i>=(y);i--)\n#define frl(i,x,y) for(int i=(x);i<(y);i++)\n#define lson (node<<1)\n#define rson (node<<1|1)\nusing namespace std;\nconst int N=400004;\nconst int p=998244353;\nint n,K;\nchar s[N];\nLL f[N];\nint h[N],t,w;\n\nvoid read(int &x){\n\tchar ch=getchar();x=0;\n\tfor(;ch<'0'||ch>'9';ch=getchar());\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n}\n\nint main(){\n\tread(n);read(K);\n\tscanf(\"%s\",s+1);\n\tmemset(f,0x3f,sizeof f);\n\tf[0]=0;h[t=w=1]=0;\n\tLL ans=1e18;\n\tfr(i,1,n+K){\n\t\tf[i]=min(f[i],f[i-1]+i);\n\t\tif (i<=K||s[i-K]!='1') 233;\n\t\t else{\n\t\t \twhile(w-t>=0&&h[t]<=i-2*K-2) t++;\n\t\t\tif (w-t>=0) f[i]=min(f[i],f[h[t]]+i-K);\n\t\t }\n\t\th[++w]=i;\n\t\twhile(w>t&&f[h[w]]<=f[h[w-1]]) h[w-1]=h[w],w--;\n\t\tif (i>=n) ans=min(ans,f[i]);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F. Wi-Fi.json",
    "editorial_link": "https://codeforces.com//blog/entry/69954",
    "editorial": "Firstly, I know that this problem has very pretty linear solution and\r\nits author can describe it if he wants. I\u00e2\u0080\u0099ll describe my own solution\r\nwithout any data structures but .Let be the total cost to connect all\r\nrooms from to to the Internet (-indexed). Initially , all other values\r\nare . Let\u00e2\u0080\u0099s iterate over all from to and make some transitions. After\r\nall the answer will be .The first transition is the easier: update with\r\n(just connect the current room directly). To do other transitions, let\u00e2\u0080\u0099s\r\ncarry two sets and and one array of vectors of length . Set carries all\r\nvalues . Initially it carries . Set carries the minimum cost to cover\r\nsome suffix of rooms that also covers the room . Array of vectors helps\r\nus to carry the set efficiently. First of all, if then let\u00e2\u0080\u0099s remove from\r\n. Then let\u00e2\u0080\u0099s remove all values of from . Then if is not empty, let\u00e2\u0080\u0099s\r\nupdate with the minimum value of . Then if \u00e2\u0080\u009d then let be the minimum\r\nvalue of plus . Update with and insert into . Also let\u00e2\u0080\u0099s add into if .\r\nAnd after we make all we need with the current , add the value to the\r\nset .Time complexity: .It can be optimized to solution with some\r\nadvanced data structures as a queue with minimums.\r\n"
}