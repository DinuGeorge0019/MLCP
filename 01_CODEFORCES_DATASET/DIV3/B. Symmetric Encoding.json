{
    "link": "https://codeforces.com//contest/1974/problem/B",
    "problemId": "2657204",
    "problem_idx": "B",
    "shortId": "1974B",
    "contest_number": "1974",
    "problem_submissions": {
        "G": [
            261890876,
            261895242,
            261892104,
            261815844,
            261901397,
            261882110,
            261902942,
            261897196,
            261890302,
            261906925,
            261906633,
            261902994,
            261909128,
            262172085,
            261998366,
            261998046,
            261912311
        ],
        "F": [
            261873832,
            261860163,
            261871347,
            261886083,
            261890598,
            261905275,
            261893342,
            261893849,
            261885670,
            261888292,
            261884408,
            261903255,
            261856931,
            261866178,
            261998302,
            261867572,
            261874550,
            261881230,
            261896095,
            261891848
        ],
        "E": [
            261843511,
            261898684,
            261874046,
            261856295,
            261872971,
            261858650,
            261864336,
            261872189,
            261875499,
            261861733,
            261866981,
            261850233,
            261886170,
            261845363,
            261845593,
            261998691,
            261848135,
            261863399,
            261863179,
            261861452,
            261854564
        ],
        "D": [
            261828744,
            261833579,
            261844887,
            261858347,
            261848070,
            261834943,
            261843848,
            261843125,
            261893971,
            261854059,
            261850835,
            261836444,
            261865680,
            261830266,
            261832171,
            261998550,
            261835226,
            261844678,
            261837286,
            261829368,
            261844070
        ],
        "C": [
            261809458,
            261818269,
            261821670,
            261838680,
            261824893,
            261817516,
            261818307,
            261822342,
            261872865,
            261902570,
            261836543,
            261891689,
            261812999,
            261811999,
            261811344,
            261998621,
            261807237,
            261810379,
            261809093,
            261808251,
            261815953
        ],
        "B": [
            261801251,
            261803139,
            261801216,
            261828779,
            261802058,
            261805873,
            261803693,
            261800515,
            261806010,
            261808108,
            261800732,
            261800673,
            261801484,
            261801347,
            261998221,
            261798953,
            261798594,
            261800683,
            261798231,
            261800035
        ],
        "A": [
            261797694,
            261795610,
            261795288,
            261822724,
            261797136,
            261796736,
            262453696,
            261795629,
            261796165,
            261795943,
            261800077,
            261795571,
            261795380,
            261796034,
            261796954,
            261998187,
            261795311,
            261795243,
            261796139,
            261795603,
            261796608
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129686",
    "editorial": "Let\u00e2\u0080\u0099s construct a string according to the definition from the condition:\r\nwe write down all the letters from once in ascending order.After that,\r\nwe just need to replace all the characters in with their symmetric\r\ncharacters in the string . The length of string does not exceed , so the\r\nposition of this character can be found by linear search.\r\n",
    "name": "B. Symmetric Encoding",
    "statement": "Polycarp has a string s, which consists of lowercase Latin letters. He\r\nencodes this string using the following algorithm: first, he constructs\r\na new auxiliary string r, which consists of all distinct letters of the\r\nstring s, written in alphabetical order; then the encoding happens as\r\nfollows: each character in the string s is replaced by its symmetric\r\ncharacter from the string r (the first character of the string r will be\r\nreplaced by the last, the second by the second from the end, and so on).\r\nFor example, encoding the string s=\"\" happens as follows: the string r\r\nis obtained as \"\"; the first character s_1=\u201d is replaced by \u201d; the\r\nsecond character s_2=\u201d is replaced by \u201d; the third character s_3=\u201d is\r\nreplaced by \u201d; ... the last character s_{10}=\u201d is replaced by \u201d. Thus,\r\nthe result of encoding the string s=\"\" is the string \"\".Write a program\r\nthat performs decoding that is, restores the original string s from the\r\nencoding result.\r\n",
    "solutions": [
        "#include <iostream>#include <cmath>#include <algorithm>#include <vector>#include <chrono>#include <random>#include <map>#include <set>using namespace std;const int N = 120000;void solve() {\tint n;\tcin >> n;\tstring s;\tcin >> s;\tset <char> ms;\tfor (auto& it : s) {\t\tms.insert(it);\t}\tvector <char> v;\tfor (auto &it : ms) {\t\tv.push_back(it);\t}\tmap <char, char> mp;\tfor (int i = 0; i < (int)v.size(); i++) {\t\tmp[v[i]] = v[(int)v.size() - 1 - i];\t}\tfor (auto& it : s) {\t\tit = mp[it];\t}\tcout << s << \"\\n\";}int main() {\tint t;\tcin >> t;\twhile (t--) {\t\tsolve();\t}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Symmetric Encoding.json"
}