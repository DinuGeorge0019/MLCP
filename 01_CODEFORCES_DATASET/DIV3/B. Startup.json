{
    "link": "https://codeforces.com//contest/2036/problem/B",
    "problemId": "2997669",
    "problem_idx": "B",
    "shortId": "2036B",
    "contest_number": "2036",
    "problem_submissions": {
        "G": [
            289568495,
            289592157,
            289591763,
            289595974,
            289727611,
            290290543
        ],
        "F": [
            289537821,
            289522926,
            289537324,
            289559326,
            289512509,
            289515984,
            289510795,
            289521272,
            289526918,
            289534575,
            289534164,
            289556542,
            289531934,
            289514943,
            289521852,
            289521308,
            289566779,
            289543749,
            289533352
        ],
        "E": [
            289519379,
            289513483,
            289516754,
            289537406,
            289502565,
            289497006,
            289514977,
            289504007,
            289502653,
            289492035,
            289506214,
            289517949,
            289508708,
            289505547,
            289524899,
            289498786,
            289538409,
            289511145,
            289522074,
            289542250
        ],
        "D": [
            289494755,
            289496973,
            289502561,
            289508569,
            289485075,
            289486449,
            289493423,
            289495061,
            289486975,
            289488146,
            289499112,
            289494333,
            289489388,
            289496285,
            289527032,
            289505896,
            289497283,
            289504013,
            289505465
        ],
        "C": [
            289479986,
            289485425,
            289473871,
            289486850,
            289474317,
            289472689,
            289477260,
            289486030,
            289480295,
            289481264,
            289478991,
            289479671,
            289477258,
            289477016,
            289506161,
            289489963,
            289490617,
            289481449,
            289485496
        ],
        "B": [
            289473268,
            289473263,
            289467611,
            289472113,
            289470722,
            289468547,
            289468418,
            289478505,
            289474994,
            289471830,
            289469932,
            289465642,
            289466472,
            289469818,
            289476408,
            289471072,
            289468104,
            289473322,
            289472255
        ],
        "A": [
            289464981,
            289463574,
            289462739,
            289463265,
            289465451,
            289464109,
            289462932,
            289467937,
            289463249,
            289464614,
            289463267,
            289462869,
            289462845,
            289463088,
            289467021,
            289463344,
            289462625,
            289465258,
            289463000
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/135849",
    "editorial": "TutorialLetâs create an array brand_cost of length and fill it so that\r\nbrand_cost[i] stores the cost of all bottles of brand . Then sort the\r\narray by non-growing and calculate the sum of its first min(n, k)\r\nelements, which will be the answer to the problem.Complexity:\r\n",
    "name": "B. Startup",
    "statement": "Arseniy came up with another business plan to sell soda from a vending\r\nmachine! For this, he purchased a machine with n shelves, as well as k\r\nbottles, where the i-th bottle is characterized by the brand index b_i\r\nand the cost c_i. You can place any number of bottles on each shelf, but\r\nall bottles on the same shelf must be of the same brand.Arseniy knows\r\nthat all the bottles he puts on the shelves of the machine will be sold.\r\nTherefore, he asked you to calculate the amount he can earn.\r\n",
    "solutions": [
        "#include <iostream>#include <cmath>#include <vector>#include <algorithm>#include <map>#include <set>#include <bitset>#include <queue>#define ff first#define ss secondtypedef long long ll;using namespace std;const int N = 3e5 + 10;void solve() {\tint n, k;\tcin >> n >> k;\tmap <int, int> mp;\tfor (int i = 1; i <= k; i++) {\t\tint a, b;\t\tcin >> a >> b;\t\tmp[a] += b;\t}\tvector <int> v;\tfor (auto it : mp) {\t\tv.push_back(it.second);\t\t}\tsort(v.begin(), v.end());\treverse(v.begin(), v.end());\tint ans = 0;\tfor (int i = 0; i < min(n, (int)v.size()); i++) {\t\tans += v[i];\t}\tcout << ans << \"\\n\";}int main() {\tint t;\tcin >> t;\twhile (t--) {\t\tsolve();\t}}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "sortings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Startup.json",
    "hint": []
}