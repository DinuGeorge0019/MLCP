{
    "link": "https://codeforces.com//contest/1472/problem/B",
    "problemId": "854352",
    "problem_idx": "B",
    "shortId": "1472B",
    "contest_number": "1472",
    "problem_submissions": {
        "F": [
            103262561,
            103276963,
            103283145,
            103236120,
            103299603,
            103280037,
            103283982,
            103299636,
            103262171,
            103266435,
            103266707,
            103276432,
            103305724,
            103305561,
            103312140,
            103296820,
            103289516
        ],
        "G": [
            103247133,
            103238309,
            103265834,
            103256471,
            103273915,
            103293538,
            103298242,
            103268903,
            103231487,
            103253031,
            103265141,
            103262744,
            103269566,
            103284052,
            103274415
        ],
        "E": [
            103232102,
            103223895,
            103237385,
            103272807,
            103242184,
            103256098,
            103261560,
            103284295,
            103272410,
            103347793,
            103285217,
            103237054,
            103246827,
            103233098,
            103239873,
            103242625,
            103245603,
            103246214,
            103227701,
            103253419
        ],
        "D": [
            103207950,
            103207957,
            103217168,
            103202671,
            103216674,
            103217143,
            103225940,
            103215649,
            103278518,
            103287434,
            103203579,
            103227081,
            103193660,
            103216373,
            103212463,
            103198886,
            103214065,
            103204468,
            103205436
        ],
        "C": [
            103194323,
            103193866,
            103191356,
            103198459,
            103198975,
            103205574,
            103191182,
            103243332,
            103280810,
            103289310,
            103198851,
            103199943,
            103206511,
            103207377,
            103204240,
            103192503,
            103203543,
            103196542,
            103198696
        ],
        "B": [
            103191009,
            103189264,
            103188527,
            103213801,
            103193697,
            103201611,
            103200035,
            103198875,
            103286479,
            103291761,
            103193834,
            103194538,
            103187178,
            103193610,
            103194731,
            103188054,
            103194899,
            103190639,
            103190538
        ],
        "A": [
            103186521,
            103187194,
            103186563,
            103201739,
            103187144,
            103188906,
            103207506,
            103187635,
            103246273,
            103293364,
            103186560,
            103189197,
            103194552,
            103186844,
            103187875,
            103186517,
            103187671,
            103186808,
            103186538
        ]
    },
    "name": "B. Fair Division",
    "statement": "Alice and Bob received n candies from their parents. . Now they want to\r\ndivide all candies among themselves fairly so that the total weight of\r\nAlice\u2019s candies is equal to the total weight of Bob\u2019s candies.Check if\r\nthey can do that.Note that candies .\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N_MAX = 102;\n\nint t;\n\nint n;\n\nint a[N_MAX];\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> t;\n    while(t--)\n    {\n        cin >> n;\n        for(int i = 1; i <= n; i++)\n            cin >> a[i];\n        int x = 0, y = 0;\n        for(int i = 1; i <= n; i++)\n        {\n            if(a[i] == 1)\n                x++;\n            else\n                y++;\n        }\n        if(x % 2 == 0 && y % 2 == 0)\n            cout << \"YES\\n\";\n        else if(x % 2 == 0 && y % 2 == 1 && x > 0)\n            cout << \"YES\\n\";\n        else\n            cout << \"NO\\n\";\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy",
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\B. Fair Division.json",
    "editorial_link": "https://codeforces.com//blog/entry/86406",
    "editorial": "If the sum of all the weights is not divisible by two, then it is\r\nimpossible to divide the candies between two people. If the sum is\r\ndivisible, then let\u00e2\u0080\u0099s count the number of candies with a weight of and .\r\nNow, if we can find a way to collect half the sum with some candies,\r\nthen these candies can be given to Alice, and all the rest can be given\r\nto Bob.Simple solution let\u00e2\u0080\u0099s iterate through how many candies of weight\r\nwe will give to Alice, then the remaining weight should be filled by\r\ncandies of weight . If there are enough of them, then we have found a\r\nway of division.In fact, if the sum is even and there are at least two\r\ncandies with weight (there can\u00e2\u0080\u0099t be one candy), then the answer is\r\nalways \"\" (we can collect the weight as close to half as possible with\r\nweight and then add weight ). If there are no candies with weight , then\r\nyou need to check whether is even (since all the candies have the same\r\nweight, you just need to divide them in half).\r\n"
}