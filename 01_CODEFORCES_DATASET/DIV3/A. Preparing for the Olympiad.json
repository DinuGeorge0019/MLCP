{
    "link": "https://codeforces.com//contest/2051/problem/A",
    "problemId": "3099574",
    "problem_idx": "A",
    "shortId": "2051A",
    "contest_number": "2051",
    "problem_submissions": {
        "G": [
            297891656,
            297890696,
            297899138,
            297892259,
            297912620,
            297920714,
            297934708,
            297929892,
            297931851,
            297911736,
            297927208,
            297928317,
            297947772,
            297909767,
            297942983,
            297993500,
            297875875,
            297873133,
            297875271
        ],
        "F": [
            297856552,
            297878644,
            297873030,
            297875253,
            297891474,
            297895628,
            297891515,
            297904684,
            297959623,
            297914765,
            297882921,
            297895179,
            297910575,
            297923862,
            297919187,
            297917128,
            297916364,
            297943956,
            297865687,
            297864877,
            297909911
        ],
        "E": [
            297841786,
            297836575,
            297839584,
            297846936,
            297869096,
            297865734,
            297862813,
            297854892,
            297860094,
            297876823,
            297874225,
            297892538,
            297862291,
            297876371,
            297877246,
            297922331,
            297840776,
            297834266,
            297852254,
            297850894
        ],
        "D": [
            297824998,
            297828255,
            297829120,
            297836876,
            297843401,
            297839448,
            297844425,
            297835789,
            297837071,
            297862412,
            297866230,
            297845487,
            297868513,
            297862250,
            297899798,
            297831894,
            297830585,
            297845610,
            297833477
        ],
        "C": [
            297817405,
            297821512,
            297822005,
            297826169,
            297828699,
            297832899,
            297832376,
            297822832,
            297823992,
            297849370,
            297841820,
            297834151,
            297857822,
            297848820,
            297891200,
            297825348,
            297827127,
            297840542,
            297824191
        ],
        "B": [
            297813648,
            297815534,
            297817642,
            297818888,
            297819929,
            297820049,
            297826062,
            297814904,
            297817786,
            297837190,
            297825933,
            297817655,
            297849719,
            297836185,
            297885765,
            297815546,
            297824155,
            297835551,
            297813164
        ],
        "A": [
            297812430,
            297812527,
            297814260,
            297815468,
            297814137,
            297814651,
            297817327,
            297812582,
            297812492,
            297830581,
            297819762,
            297812887,
            297821437,
            297881803,
            297812726,
            297821513,
            297830979,
            297812442
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/137623",
    "editorial": "Letâs consider what contribution each day that Monokarp trains makes to\r\nthe difference. For each day, except the last one, if Monokarp trains on\r\nthat day, then the number of problems he has solved will increase by ,\r\nand the number of problems solved by Stereokarp will increase by .\r\nTherefore, if , it is beneficial for Monokarp to train on the -th day;\r\notherwise, it is not beneficial.On the last day, it is always beneficial\r\nto train, as Stereokarp will not solve anything on the day following it.\r\n",
    "name": "A. Preparing for the Olympiad",
    "statement": "Monocarp and Stereocarp are preparing for the Olympiad. There are n days\r\nleft until the Olympiad. On the i-th day, if Monocarp plans to practice,\r\nhe will solve a_i problems. Similarly, if Stereocarp plans to practice\r\non the same day, he will solve b_i problems.Monocarp can train on any\r\nday he wants. However, Stereocarp watches Monocarp and follows a\r\ndifferent schedule: if Monocarp trained on day i and i < n, then\r\nStereocarp will train on day (i+1).Monocarp wants to organize his\r\ntraining process in a way that the difference between the number of\r\nproblems he solves and the number of problems Stereocarp solves is as\r\nlarge as possible. Formally, Monocarp wants to maximize the value of\r\n(m-s), where m is the number of problems he solves, and s is the number\r\nof problems Stereocarp solves. Help Monocarp determine the maximum\r\npossible difference in the number of solved problems between them.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>using namespace std; int main(){    ios::sync_with_stdio(false);    cin.tie(nullptr);        int t;    cin >> t;        while(t--){        int n;        cin >> n;                vector<int> a(n);                for(auto &x: a) {            cin >> x;        }         vector<int> b(n);                for(auto &x: b) {            cin >> x;        }                long long res = a[n-1];                for(int i=0;i<n-1;i++){            if(a[i] > b[i+1]){                res += (a[i] - b[i+1]);            }        }        cout << res << \"\\n\";    }}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Preparing for the Olympiad.json",
    "hint": []
}