{
    "link": "https://codeforces.com//contest/2072/problem/F",
    "problemId": "3229206",
    "problem_idx": "F",
    "shortId": "2072F",
    "contest_number": "2072",
    "problem_submissions": {
        "G": [
            307772799,
            307809764,
            307806065,
            307762195,
            307779871,
            307763203,
            307766386,
            307783503,
            307763532,
            307809258,
            307781857,
            307765659,
            307790235,
            307801659,
            307804804,
            307808915
        ],
        "E": [
            307738148,
            307793779,
            307720955,
            307722173,
            307745982,
            307742826,
            307772373,
            307804075,
            307797947,
            307755611,
            307733707,
            307750678,
            307744711,
            307750875,
            307747403,
            307780646
        ],
        "F": [
            307709265,
            307729312,
            307741557,
            307750671,
            307739658,
            307728662,
            307743591,
            307755446,
            307755521,
            307749224,
            307762390,
            307760668,
            307742033,
            307738045
        ],
        "C": [
            307702044,
            307816497,
            307690473,
            307695294,
            307719576,
            307717536,
            307734794,
            307693326,
            307736083,
            307701008,
            307725201,
            307716632,
            307730546,
            307730790
        ],
        "D": [
            307695401,
            307711290,
            311797424,
            307708412,
            307736484,
            307727429,
            307713271,
            307715079,
            307799116,
            307741157,
            307716291,
            307735858,
            307739179,
            307721453,
            307729454,
            307723246,
            307701801
        ],
        "B": [
            307681270,
            307681028,
            307686105,
            307687363,
            307698668,
            307681141,
            307679525,
            307691744,
            307684681,
            307686428,
            307683951,
            307688277,
            307700407,
            307681812
        ],
        "A": [
            307677487,
            307815815,
            307676613,
            307676730,
            307676749,
            307677896,
            307676041,
            307676794,
            307679028,
            307678185,
            307677448,
            307676382,
            307680004,
            307690212,
            307676345
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/140039",
    "editorial": "Since the value of the -th bit in depends only on the -th bits of the\r\nnumbers and , we can solve the problem separately for each bit.Let be\r\nthe -th bit of the number . If , then the triangle for the -th bit will\r\nconsist only of s. If , then since is the bitwise addition modulo , we\r\nsimply obtain Pascalâ€™s Triangle, where all values are taken modulo .Now\r\nthe problem has reduced to finding . , which means the parity of depends\r\non the power of in , , and . Let be the power of in . will be odd if and\r\nonly if . It remains to learn how to find the power of in . We have ,\r\nand , where is the maximum such that .Asymptotic complexity: for\r\npreprocessing and . Here, denotes the maximum possible .\r\n",
    "name": "F. Goodbye, Banker Life",
    "statement": "Monsters are approaching the city, and to protect it, Akito must create\r\na protective field around the city. As everyone knows, protective fields\r\ncome in various levels. Akito has chosen the field of level n. To\r\nconstruct the field, a special phrase is required, which is the n-th row\r\nof the Great Magical Triangle, represented as a two-dimensional array.\r\nWe will call this array T.The triangle is defined as follows: In the\r\ni-th row, there are i integers. The single integer in the first row is\r\nk. Let the j-th element of the i-th row be denoted as T_{i,j}. Then\r\nT_{i,j} =\r\nbegin{cases} T_{i-1,j-1}\r\noplus T_{i-1,j}, &\r\ntextrm{if } 1 < j < i\r\nT_{i-1,j}, &\r\ntextrm{if } j = 1\r\nT_{i-1,j-1}, &\r\ntextrm{if } j = i\r\nend{cases} where a\r\noplus b is the bitwise exclusive \"OR\"() of the integers a and b.Help\r\nAkito find the integers in the n-th row of the infinite triangle before\r\nthe monsters reach the city.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "2-sat",
        "bitmasks",
        "combinatorics",
        "constructive algorithms",
        "fft",
        "math",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\F. Goodbye, Banker Life.json",
    "hint": []
}