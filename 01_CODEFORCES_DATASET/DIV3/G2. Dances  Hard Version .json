{
    "link": "https://codeforces.com//contest/1883/problem/G2",
    "problemId": "2278979",
    "problem_idx": "G2",
    "shortId": "1883G2",
    "contest_number": "1883",
    "problem_submissions": {
        "E": [
            229254391,
            229228116,
            229229123,
            229229517,
            229233192,
            229225859,
            229230943,
            229238433,
            229232300,
            229233333,
            229233942,
            229263811,
            229236033,
            229236789,
            229237333,
            232949915,
            229218375,
            229241000,
            229246670
        ],
        "F": [
            229246429,
            229232660,
            229238625,
            229233199,
            229237512,
            229241178,
            229249370,
            229237347,
            229246925,
            229236557,
            229248336,
            229241012,
            229242598,
            229250481,
            229269234,
            229251378,
            232949748,
            229222527,
            229246156,
            229254662
        ],
        "G2": [
            229234009,
            229254791,
            229266437,
            229254654,
            229255057,
            229265822,
            229259707,
            229267425,
            229264812,
            229264031,
            229272506,
            229274536,
            229255952,
            229271136,
            229260211,
            229270293,
            232949665,
            229301663,
            229269692,
            229270153
        ],
        "G1": [
            229219524,
            229255068,
            229244230,
            229249885,
            229247413,
            229253349,
            229238825,
            229266363,
            229254833,
            229263379,
            229254509,
            229274732,
            229249349,
            229257348,
            229245372,
            229258069,
            232949701,
            229234873,
            229255834,
            229262816
        ],
        "C": [
            229213933,
            229214044,
            229209127,
            229216055,
            229214618,
            229213072,
            229215254,
            229214649,
            229223998,
            229215021,
            229215102,
            229214748,
            229219318,
            229218539,
            229216356,
            232950046,
            232950017,
            229210060,
            229232319,
            229224513
        ],
        "D": [
            229213159,
            229218603,
            229213694,
            229223552,
            229218966,
            229217944,
            229218306,
            229218892,
            229224727,
            229227006,
            229220642,
            229221160,
            229233957,
            229224237,
            229229032,
            229232139,
            232949956,
            229214096,
            229236853,
            229237124
        ],
        "A": [
            229205950,
            229205653,
            229203982,
            229205587,
            229204174,
            229205183,
            229204022,
            229204395,
            229217540,
            229206219,
            229206377,
            229205661,
            229204875,
            229205824,
            229205309,
            232950152,
            229204753,
            229214596,
            229210814
        ],
        "B": [
            229205861,
            229208946,
            229205494,
            229209640,
            229210752,
            229208113,
            229209050,
            229207130,
            229220907,
            229209362,
            229209632,
            229208425,
            229209627,
            229209608,
            229210310,
            232950093,
            229206777,
            229217319,
            229218711
        ]
    },
    "name": "G2. Dances  Hard Version ",
    "statement": "You are given two arrays of integers a_1, a_2,\r\nldots, a_n and b_1, b_2,\r\nldots, b_n. Before applying any operations, you can reorder the elements\r\nof each array as you wish. Then, in one operation, you will perform both\r\nof the following actions, if the arrays are not empty: Choose any\r\nelement from array a and remove it (all remaining elements are shifted\r\nto a new array a), Choose any element from array b and remove it (all\r\nremaining elements are shifted to a new array b).Let k be the final size\r\nof both arrays. You need to find the minimum number of operations\r\nrequired to satisfy a_i < b_i for all 1\r\nleq i\r\nleq k.This problem was too easy, so the problem author decided to make\r\nit more challenging. You are also given a positive integer m. Now, you\r\nneed to find the sum of answers to the problem for m pairs of arrays\r\n(c[i], b), where 1\r\nleq i\r\nleq m. Array c[i] is obtained from a as follows: c[i]_1 = i, c[i]_j =\r\na_j, for 2\r\nleq j\r\nleq n.\r\n",
    "solutions": [
        "#include<iostream>\n#include<vector>\n#include<bits/stdc++.h>\n#include<set>\nusing namespace std;\n\nint solve(multiset<int>a,multiset<int>b,int k){\n    a.insert(k);\n    int n = a.size();\n    int ans = 0,curr = 0;\n    for(int i = 0; i < n; i++){\n        while(!b.empty() and (*b.begin()) <= (*a.begin())){\n            b.erase(b.begin());\n        }\n        \n        if(b.empty())break;\n        b.erase(b.begin());\n        ans++;\n        a.erase(a.begin());\n    }\n    return n - ans;\n}\n\nint main(){\n    int tt;cin >> tt;\n    while(tt--){\n        int n,m;cin >> n >> m;\n        multiset<int>a,b;\n        for(int i = 0; i < n - 1; i++){\n            int k;cin >> k;\n            a.insert(k);\n        }\n        for(int j = 0; j < n; j++){\n            int k;cin >> k;\n            b.insert(k);\n        }\n        int x = solve(a,b,1);\n        int lo = 1,hi = m,ans = m + 1;\n        while(lo <= hi){\n            int mid = (lo + hi)/2;\n            if(solve(a,b,mid) > x){\n                hi = mid - 1;\n                ans = mid;\n            }\n            else lo = mid + 1;\n        }\n        cout << x*1ll*m + (m - ans + 1) << endl;\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\G2. Dances  Hard Version .json",
    "editorial_link": "https://codeforces.com//blog/entry/121621",
    "editorial": "Let's learn how to solve the problem for a fixed value of a1\n. Notice that we can perform a binary search on the answer. Let's learn how to check if we can remove k\n elements from both arrays such that ai<bi\n holds for the remaining elements. It will be advantageous to sort both arrays, remove the k\n largest elements from the first array, and the k\n smallest elements from the second array, and then simply check if the condition holds for our pair of arrays. Thus, for a fixed value of a1\n, we can solve the problem in O(nlogn)\n.\n\nLet f(i)\n be the answer to the problem for a1=i\n. We make the following observation - there exists a value x\n such that: f(1)=f(2)==f(x)=f(x+1)?1=f(x+2)?1==f(inf)?1\n. Indeed, changing one element of array a\n cannot worsen the answer by more than 1\n. Then, we can use binary search to find this value x\n. The overall complexity is O(nlognlogm)\n.",
    "hint": []
}