{
    "link": "https://codeforces.com//contest/1506/problem/A",
    "problemId": "935559",
    "problem_idx": "A",
    "shortId": "1506A",
    "contest_number": "1506",
    "problem_submissions": {
        "F": [
            111021020,
            111023335,
            111043050,
            111045078,
            111042675,
            111022888,
            111045702,
            111030029,
            111059327,
            111056314,
            111054328,
            111053665,
            111049676,
            111057223,
            111055499,
            111051574,
            111018539
        ],
        "G": [
            111011051,
            111044191,
            111025676,
            111021333,
            111015838,
            111047466,
            111027389,
            111038444,
            111062619,
            111035705,
            111033084,
            111031458,
            111027898,
            111059943,
            111039951,
            111044272,
            111042579,
            110997057,
            111024212,
            111035025
        ],
        "E": [
            110998219,
            111002639,
            111005993,
            111004597,
            111005673,
            111003655,
            111009629,
            110993653,
            111011522,
            111018659,
            111024774,
            111017525,
            111015924,
            111022569,
            111022716,
            111033942,
            111001920,
            111012071,
            111010852
        ],
        "D": [
            110994014,
            110997858,
            111000907,
            110997329,
            111020775,
            111109278,
            110995630,
            111003898,
            110987445,
            111005061,
            111007314,
            111017748,
            111012182,
            111006395,
            111026211,
            111014600,
            111017473,
            111014918,
            111042008,
            110987093,
            111004976
        ],
        "C": [
            110991700,
            110993760,
            110994821,
            110991557,
            110994969,
            110992631,
            110998527,
            110995536,
            111000015,
            111001144,
            111003685,
            111008122,
            111006904,
            111001766,
            110999236,
            111006625,
            111008840,
            111033710,
            110991249,
            110998250
        ],
        "B": [
            110987614,
            110990504,
            110992033,
            110988684,
            110991376,
            110988565,
            110994317,
            111002159,
            110989417,
            110997996,
            110993594,
            111002185,
            110994767,
            111009342,
            111001911,
            111024800,
            111045128,
            110999737,
            110993374
        ],
        "A": [
            110986181,
            110985860,
            110985761,
            110986354,
            110986698,
            110986290,
            110988038,
            110996610,
            110986006,
            110986393,
            110986025,
            110986629,
            110986586,
            110988619,
            110989257,
            110990207,
            111021247,
            111003988,
            110987775
        ]
    },
    "name": "A. Strange Table",
    "statement": "Polycarp found a rectangular table consisting of n rows and m columns.\r\nHe noticed that each cell of the table has its number, obtained by the\r\nfollowing algorithm : cells are numbered starting from one; cells are\r\nnumbered from left to right by columns, and inside each column from top\r\nto bottom; number of each cell is an integer one greater than in the\r\nprevious cell. For example, if n = 3 and m = 5, the table will be\r\nnumbered as follows:\r\nbegin{matrix} 1 & 4 & 7 & 10 & 13\r\n2 & 5 & 8 & 11 & 14\r\n3 & 6 & 9 & 12 & 15\r\nend{matrix} However, Polycarp considers such numbering inconvenient. He\r\nlikes the numbering : cells are numbered starting from one; cells are\r\nnumbered from top to bottom by rows, and inside each row from left to\r\nright; number of each cell is an integer one greater than the number of\r\nthe previous cell. For example, if n = 3 and m = 5, then Polycarp likes\r\nthe following table numbering:\r\nbegin{matrix} 1 & 2 & 3 & 4 & 5\r\n6 & 7 & 8 & 9 & 10\r\n11 & 12 & 13 & 14 & 15\r\nend{matrix} Polycarp doesnâ€™t have much time, so he asks you to find out\r\nwhat would be the cell number in the numbering , if in the numbering the\r\ncell has the number x?\r\n",
    "solutions": [
        "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main(int argc, char** argv) {\n\tint T;\n\tcin >> T;\n\twhile(T--)\n\t{\n\t\tlong long n,m,id;\n\t\tcin >> n >> m >> id;\n\t\tint x=(id-1)%n+1,y=(id-1)/n+1;\n\t\tcout<< (x-1)*m+y << \"\\n\";\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Strange Table.json",
    "editorial_link": "https://codeforces.com//blog/entry/89007",
    "editorial": "To find the cell number in a different numbering, you can find\r\ncoordinates of the cell with the number in the numbering : , where is\r\nthe remainder of dividing the number by the number ; , where is the\r\ndivision of the number to the number rounded up. Then, the cell number\r\nin numbering will be equal to .\r\n",
    "hint": []
}