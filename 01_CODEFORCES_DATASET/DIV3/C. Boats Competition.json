{"link": "https://codeforces.com//contest/1399/problem/C", "problemId": "691718", "problem_idx": "C", "shortId": "1399C", "contest_number": "1399", "problem_submissions": {"F": [89035173, 89029933], "E2": [89011999, 89030510, 89080621, 89039473, 89040534, 89201926, 89050383, 89034156, 89084070, 89049259, 89035111, 89052507, 89050541, 89057093, 89080141], "E1": [88996046, 89009546, 89080613, 89010335, 89023941, 89019900, 89014538, 89084044, 89031455, 89027397, 89021735, 89030142, 89008436, 89007483, 89015010, 89097316, 89017545, 89018333, 89016025, 89019887, 89020808], "D": [88983986, 88986050, 89080684, 89080600, 88990615, 88995867, 88990140, 88981358, 89083571, 89083120, 88982379, 89003434, 89001587, 89002958, 88987435, 88992856, 88978240, 88981220, 89097279, 88987544, 88985548, 88986877, 88997105], "C": [88974580, 88974518, 89080589, 88982402, 88985705, 88979354, 88966362, 89082893, 88973387, 88994104, 88993313, 88993807, 88971087, 88979014, 88975937, 88963847, 89097258, 88972661, 88974247, 88977241, 88976735, 88981249], "B": [88964383, 88965521, 89080579, 88970001, 88977862, 88967937, 88959373, 89082724, 88963456, 88986912, 88979078, 88973586, 88969906, 88966168, 88957629, 88964497, 89097240, 88962105, 88966474, 88966506, 88969861], "A": [88956237, 88956430, 89080574, 88960295, 88969663, 88957655, 88955164, 89082748, 88955338, 88967328, 88967166, 88962494, 88973926, 88959306, 88955102, 88955579, 89097191, 88955839, 88955943, 88956625, 88962720]}, "name": "C. Boats Competition", "statement": "There are n people who want to participate in a boat competition. The\r\nweight of the i-th participant is w_i. Only teams consisting of people\r\ncan participate in this competition. As an organizer, you think that\r\nit\u2019s fair to allow only teams with .So, if there are k teams (a_1, b_1),\r\n(a_2, b_2),\r\ndots, (a_k, b_k), where a_i is the weight of the first participant of\r\nthe i-th team and b_i is the weight of the second participant of the\r\ni-th team, then the condition a_1 + b_1 = a_2 + b_2 =\r\ndots = a_k + b_k = s, where s is the total weight of team, should be\r\nsatisfied.Your task is to choose such s that the number of teams people\r\ncan create is the possible. Note that each participant can be in\r\nteam.You have to answer t independent test cases.\r\n", "solutions": ["#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <climits>\n#include <cstdlib>\n#include <cstdio>\n#include <bitset>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n\n#define fi first\n#define se second\n#define db double\n#define U unsigned\n#define P std::pair<int,int>\n#define LL long long\n#define pb push_back\n#define MP std::make_pair\n#define all(x) x.begin(),x.end()\n#define CLR(i,a) memset(i,a,sizeof(i))\n#define FOR(i,a,b) for(int i = a;i <= b;++i)\n#define ROF(i,a,b) for(int i = a;i >= b;--i)\n#define DEBUG(x) std::cerr << #x << '=' << x << std::endl\n\nconst int MAXN = 100+5;\nint a[MAXN],n;\nint cnt[MAXN];\n\ninline int chk(int k){\n    FOR(i,1,n) cnt[i] = 0;\n    FOR(i,1,n) cnt[a[i]]++;\n    int res = 0;\n    FOR(x,1,n){\n        int y = k-x;\n        if(y >= 1 && y <= n){\n            if(x == y){\n                res += cnt[x]/2;\n                cnt[x] %= 2;\n            }\n            else{\n                int gx = std::min(cnt[x],cnt[y]);\n                cnt[x] -= gx;cnt[y] -= gx;\n                res += gx;\n            }\n        }\n    }\n    return res;\n}\n\nint main(){\n    int T;scanf(\"%d\",&T);\n    while(T--){\n        scanf(\"%d\",&n);\n        FOR(i,1,n) scanf(\"%d\",a+i);int ans = 0;\n        FOR(i,1,2*n) ans = std::max(ans,chk(i));\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "two pointers"], "dificulty": "1200", "interactive": false}