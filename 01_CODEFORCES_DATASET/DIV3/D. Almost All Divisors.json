{
    "link": "https://codeforces.com//contest/1165/problem/D",
    "problemId": "344205",
    "problem_idx": "D",
    "shortId": "1165D",
    "contest_number": "1165",
    "problem_submissions": {
        "E": [
            74168826,
            54121468,
            54122421,
            54122348,
            54116263,
            54119183,
            54211518,
            54211463,
            54118142,
            54113180,
            54117307,
            54121110,
            54120513,
            54122624,
            54127192,
            54117866,
            54118124,
            54124485,
            54122820
        ],
        "B": [
            63291233,
            54151541,
            54101310,
            54100421,
            54105105,
            54131850,
            54101616,
            54100060,
            54100069,
            54099555,
            54101691,
            54099268,
            54099031,
            54101885,
            54103193,
            54099307,
            54102255,
            54100792,
            54100984
        ],
        "F2": [
            54132403,
            54136514,
            54134718,
            54126842,
            54151618,
            54135465,
            54132023,
            54139391,
            54337431,
            54960943,
            54166271,
            54138472
        ],
        "F1": [
            54131988,
            54136472,
            54134416,
            54126974,
            54135962,
            54135141,
            54132170,
            54140202,
            54960902,
            54166160,
            54138784
        ],
        "D": [
            54109839,
            54117304,
            54105563,
            54135713,
            54113803,
            54110973,
            54108935,
            54107066,
            54111285,
            54106307,
            54112713,
            54115828,
            54113528,
            54113659,
            54110000,
            54111928,
            54118727,
            54112645
        ],
        "C": [
            54104004,
            54104201,
            54114484,
            54122709,
            54107745,
            54103677,
            54101770,
            54102480,
            54107031,
            54103126,
            54104499,
            54106842,
            54107386,
            54107262,
            54106153,
            54107484,
            54116941
        ],
        "A": [
            54099583,
            54099103,
            54099763,
            54117054,
            54101453,
            54099189,
            54099082,
            54100008,
            54100551,
            54108006,
            54100277,
            54100622,
            54098895,
            54099596,
            54099615,
            54099150
        ]
    },
    "name": "D. Almost All Divisors",
    "statement": "We guessed some integer number x. You are given a list of its divisors.\r\nmeans that there are in the list.Your task is to find the minimum\r\npossible integer x that can be the guessed number, or say that the input\r\ndata is contradictory and it is impossible to find such number.You have\r\nto answer t independent queries.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define PII pair<int,int>\n#define PB push_back\n#define POP pop_back\n#define FI first\n#define SE second\n#define endl '\\n'\n#define ls x<<1\n#define rs x<<1|1\nconst int N=1e5+7,mod=1e9+7,INF=1e9;\nint n,m;\nLL a[N],b[N];\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--){\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++){\n            scanf(\"%lld\",&a[i]);\n        }\n        sort(a+1,a+1+n);\n        LL ans=a[1]*a[n];\n        int flag=1;\n        for(int i=2;i<=(n+1)/2;i++){\n            if(a[i]*a[n-i+1]!=ans){\n                flag=0;break;\n            }\n        }\n        if(flag==0){\n            cout<<-1<<endl;continue;\n        }\n        int cnt=0;\n        for(LL i=2;i*i<=ans;i++){\n            if(ans%i==0){\n                if(i*i==ans)cnt++;\n                else cnt+=2;\n            }\n        }\n        if(cnt!=n)cout<<-1<<endl;\n        else cout<<ans<<endl;\n    }\n    return 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\D. Almost All Divisors.json",
    "editorial_link": "https://codeforces.com//blog/entry/67041",
    "editorial": "Suppose the given list of divisors is a list of divisors of some (in\r\nother words, suppose that the answer exists). Then the minimum divisor\r\nmultiplied by maximum divisor should be . This is true because if we\r\nhave a divisor we also have a divisor . Let\u00e2\u0080\u0099s sort all divisors and let\r\n.Now we need to check if all divisors of except and are the permutation\r\nof the array (check that our answer is really correct). We can find all\r\ndivisors of in , sort them and compare with the array . If arrays are\r\nequal then the answer is otherwise the answer is .\r\n"
}