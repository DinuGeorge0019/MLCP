{
    "link": "https://codeforces.com//contest/1619/problem/A",
    "problemId": "1234622",
    "problem_idx": "A",
    "shortId": "1619A",
    "contest_number": "1619",
    "problem_submissions": {
        "G": [
            140078255,
            140073592,
            140089436,
            140078390,
            140089746,
            140079476,
            145924145,
            151265654,
            141670945,
            140147260
        ],
        "F": [
            140065181,
            140063048,
            140076024,
            140070362,
            140081694,
            140073270,
            140077189,
            140077988,
            140079343,
            140077681,
            140080239,
            140066442,
            140086181,
            140083843,
            140081135,
            140087882,
            140074406,
            140085836
        ],
        "E": [
            140056688,
            140034731,
            140064173,
            140064735,
            140063371,
            140067175,
            140068525,
            140064758,
            140060381,
            140065082,
            140053212,
            140051892,
            140072728,
            140067484,
            140070209,
            140073990,
            140083979,
            140064170
        ],
        "D": [
            140049695,
            140056611,
            140052445,
            140059443,
            140054727,
            140062375,
            140050362,
            140046453,
            140049546,
            140054923,
            140069697,
            140074223,
            140057739,
            140070163,
            140060824,
            140054342,
            140053714,
            140047137
        ],
        "C": [
            140041270,
            140047619,
            140037577,
            140053359,
            140066154,
            140055677,
            140034474,
            140041067,
            140041491,
            140044199,
            140042854,
            140041981,
            140038481,
            140037319,
            140043801,
            140042895,
            140046624,
            140037654
        ],
        "B": [
            140028867,
            140058223,
            140027097,
            140049372,
            140023898,
            140046113,
            140024005,
            140028515,
            140025918,
            140030098,
            140028524,
            140024247,
            140024021,
            140025866,
            140024580,
            140024963,
            140030726,
            140023456
        ],
        "A": [
            140018513,
            140037253,
            140018425,
            140048050,
            140017040,
            140043315,
            140017477,
            140024037,
            140017841,
            140019535,
            140020013,
            143793925,
            140020824,
            140018421,
            140017149,
            140018606,
            140017171,
            140021392,
            140017164
        ],
        "H": [
            140381628,
            140278376
        ]
    },
    "name": "A. Square String ",
    "statement": "A string is called if it is some string written twice in a row. For\r\nexample, the strings \"\", \"\", \"\" and \"\" are square. But the strings \"\",\r\n\"\" and \"\" are not square.For a given string s determine if it is square.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nifstream fin(\"AAtest.in.txt\");\nll t,n;\nstring s;\nbool b;\n\nint main(){\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cerr.tie(0);\n    cin>>t;\n    while(t--){\n        cin>>s;\n        n=s.size();\n        if(n%2){\n            cout<<\"NO\\n\";\n            continue;\n        }\n        b=1;\n        for(int i=0; i<n/2; i++) if(s[i]!=s[i+n/2]) b=0;\n        if(b) cout<<\"YES\\n\";\n        else cout<<\"NO\\n\";\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Square String .json",
    "editorial_link": "https://codeforces.com//blog/entry/98159",
    "editorial": "If the length of the given string is odd, then the answer is , since\r\nadding two strings cannot do that. Otherwise, let be the length of the\r\nstring. Letâs go through the first half of the string, comparing whether\r\nits first and characters are equal, its second and characters are equal,\r\nand so on. If the characters in any pair are not equal, the answer is ,\r\notherwise .\r\n",
    "hint": []
}