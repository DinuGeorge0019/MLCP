{
    "link": "https://codeforces.com//contest/1744/problem/A",
    "problemId": "1588806",
    "problem_idx": "A",
    "shortId": "1744A",
    "contest_number": "1744",
    "problem_submissions": {
        "F": [
            176553227,
            176553544,
            176566357,
            176560159,
            176546102,
            176578517,
            176584245,
            176547600,
            176565814,
            176583243,
            176570293,
            176568891,
            176580658,
            176549125,
            176552417
        ],
        "E2": [
            176537039,
            176543155,
            176544098,
            176552866,
            176557487,
            176561438,
            176571338,
            176588976,
            176584430,
            176552304,
            176570770,
            176580914,
            176566759,
            176538612,
            176549104,
            176542275,
            176597567,
            176547159
        ],
        "E1": [
            176523424,
            176527685,
            176528090,
            176524133,
            176549768,
            176542439,
            176540904,
            176551294,
            176537989,
            176588085,
            176549982,
            176562357,
            176580820,
            176565848,
            176529066,
            176530377,
            176532213,
            176534352,
            176532004,
            176541146
        ],
        "D": [
            176517006,
            176523243,
            176521839,
            176520437,
            176527121,
            176527329,
            176532848,
            176530724,
            176509817,
            176532455,
            176530899,
            176528083,
            176525625,
            176540526,
            176519966,
            176526382,
            176517877,
            176524396,
            176521192,
            176681646,
            176520869
        ],
        "C": [
            176513410,
            176510113,
            176517214,
            176516278,
            176522404,
            176518415,
            176520721,
            176522857,
            176528070,
            176508309,
            176517716,
            176518546,
            176530395,
            176509852,
            176512457,
            176513429,
            176518278,
            176517008,
            176516387
        ],
        "B": [
            176508945,
            176505988,
            176509682,
            176510843,
            176515767,
            176510929,
            176512338,
            176516029,
            176510777,
            176510381,
            176514031,
            176513353,
            176516140,
            176505686,
            176508808,
            176509484,
            176509527,
            176511738,
            176510683
        ],
        "A": [
            176504550,
            176503461,
            176503689,
            176506263,
            176508578,
            176504919,
            176506102,
            176511212,
            176505675,
            176504917,
            176508718,
            176507229,
            176505489,
            176503181,
            176503369,
            176503975,
            176503284,
            176505909,
            176504558
        ]
    },
    "name": "A. Number Replacement",
    "statement": "An integer array a_1, a_2,\r\nldots, a_n is being transformed into an array of lowercase English\r\nletters using the following prodecure:While there is at least one number\r\nin the array: Choose any number x from the array a, and any letter of\r\nthe English alphabet y. Replace all occurrences of number x with the\r\nletter y. For example, if we initially had an array a = [2, 3, 2, 4, 1],\r\nthen we could transform it the following way: Choose the number 2 and\r\nthe letter . After that a = [c, 3, c, 4, 1]. Choose the number 3 and the\r\nletter . After that a = [c, a, c, 4, 1]. Choose the number 4 and the\r\nletter . After that a = [c, a, c, t, 1]. Choose the number 1 and the\r\nletter . After that a = [c, a, c, t, a]. After the transformation all\r\nletters are united into a string, in our example we get the string\r\n\"\".Having the array a and the string s determine if the string s could\r\nbe got from the array a after the described transformation?\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\nusing namespace std;\n\nint t,n;\nint a[100];\nstring s;\nchar to[60];\nbool dali;\n\nint main(){\n\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin>>t;\n    for(int i=1;i<=t;i++){\n        cin>>n;\n        for(int f=0;f<n;f++){\n            cin>>a[f];\n        }\n        cin>>s;\n        for(int f=0;f<60;f++)to[f]=-1;\n        dali=true;\n\n        for(int f=0;f<s.size();f++){\n            if(to[a[f]]==-1)to[a[f]]=s[f];\n            else if(to[a[f]]!=s[f]){\n                dali=false; cout<<\"NO\\n\"; break;\n            }\n        }\n\n        if(dali)cout<<\"YES\\n\";\n    }\n\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV3\\A. Number Replacement.json",
    "editorial_link": "https://codeforces.com//blog/entry/108101",
    "editorial": "Letâs note that if , then must be equal to , since we must change the\r\nsame value to the same letter. If we check this for all pairs of and and\r\nfind no such contradictions, then the answer is \"\", otherwise \"\".We got\r\nthe solution for for one test case.\r\n",
    "hint": []
}