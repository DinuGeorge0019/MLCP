{"link": "https://codeforces.com//contest/1006/problem/B", "problemId": "198026", "problem_idx": "B", "shortId": "1006B", "contest_number": "1006", "problem_submissions": {"F": [40441400, 40440824, 40440718, 40440827, 40424217, 40442318, 40444967, 40447621, 40447392, 40445275, 40438703, 40428895, 40523944, 40456300, 40469784], "D": [40431223, 40427415, 40429428, 40427666, 40435691, 40430513, 40434142, 40438290, 40431310, 40440098, 40429630, 40428380, 40426509, 40433251, 40426493, 40678651, 40428666, 40431857, 40429891, 40428151, 40428405], "E": [40425946, 40430996, 40428189, 40432790, 40428480, 40435411, 40438586, 40437117, 40432836, 40443168, 40425115, 40431041, 40430321, 40417607, 40432842, 40431866, 40426721, 40428657, 40431622, 40432669], "C": [40421659, 40420878, 40419334, 40423831, 40424033, 40424261, 40424821, 40426724, 40426733, 40435459, 40420478, 40420692, 40423322, 40419164, 40418012, 40511067, 40419053, 40423337, 40419944, 40423295, 40422046], "B": [40419978, 40418807, 40418159, 40421590, 40425339, 40421610, 40421499, 40421847, 40440870, 40433565, 40419011, 40419302, 40420307, 40421856, 40421084, 40507243, 40417820, 40421010, 40421030, 40420039, 40420598], "A": [40417368, 40415298, 40415306, 40418538, 40416510, 40415729, 40416251, 40417776, 40416833, 40484358, 40430262, 40415381, 40416664, 40417319, 40423001, 40419643, 40482910, 40415406, 40415414, 40420065, 40415817, 40415886]}, "name": "B. Polycarp's Practice", "statement": "Polycarp is practicing his problem solving skill. He has a list of n\r\nproblems with difficulties a_1, a_2,\r\ndots, a_n, respectively. His plan is to practice for exactly k days.\r\nEach day he has to solve at least one problem from his list. Polycarp\r\nsolves the problems in the order they are given in his list, he cannot\r\nskip any problem from his list. He has to solve all n problems in\r\nexactly k days.Thus, each day Polycarp solves a contiguous sequence of\r\n(consecutive) problems from the start of the list. He can\u2019t skip\r\nproblems or solve them multiple times. As a result, in k days he will\r\nsolve all the n problems.The of the j-th day of Polycarp\u2019s practice is\r\nthe maximum among all the difficulties of problems Polycarp solves\r\nduring the j-th day (i.e. if he solves problems with indices from l to r\r\nduring a day, then the of the day is\r\nmax\r\nlimits_{l\r\nle i\r\nle r}a_i). The of his practice is the sum of the over all k days of his\r\npractice.You want to help Polycarp to get the maximum possible over all\r\nvalid ways to solve problems. Your task is to distribute all n problems\r\nbetween k days satisfying the conditions above in such a way, that the\r\nis maximum.For example, if n = 8, k = 3 and a = [5, 4, 2, 6, 5, 1, 9,\r\n2], one of the possible distributions with maximum is: [5, 4, 2], [6,\r\n5], [1, 9, 2]. Here the equals 5 + 6 + 9 = 20.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAX_N = 2e3;\n\nint n, k;\npair<int, int> a[MAX_N + 1];\n\nint main() {\n\t//freopen(\"input.inp\", \"r\", stdin);\n\tios_base::sync_with_stdio(0); cin.tie(0);\n\tcin >> n >> k;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcin >> a[i].first;\n\t\ta[i].second = i;\n\t}\n\tsort(a + 1, a + 1 + n, greater<pair<int, int> >());\n\tvector<int> v;\n\tv.push_back(0);\n\tint profit = 0;\n\tfor (int i = 1; i <= k; ++i) {\n\t\tv.push_back(a[i].second);\n\t\tprofit += a[i].first;\n\t}\n\tsort(v.begin(), v.end());\n\tcout << profit << '\\n';\n\tfor (int i = 1; i < v.size() - 1; ++i) {\n\t\tcout << v[i] - v[i - 1] << ' ';\n\t\tn -= v[i] - v[i - 1];\n\t}\n\tcout << n;\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["greedy", "implementation", "sortings"], "dificulty": "1200", "interactive": false}