{"link": "https://codeforces.com//contest/1019/problem/A", "problemId": "207013", "problem_idx": "A", "shortId": "1019A", "contest_number": "1019", "problem_submissions": {"D": [41494541, 41486235, 41489624, 41496428, 41482324, 41485058, 41485821, 41503084, 41488961, 41490515, 41488550, 41488663, 41486677, 41490916, 41491659, 41491114, 41488916, 41491612, 41493392], "C": [41485063, 41566656, 41496194, 41491682, 41552113, 41499582, 41487460, 41530705, 41652339, 205457358], "A": [41477821, 41473071, 41475477, 41477205, 41474279, 41472040, 41473278, 41472687, 41471212, 41472351, 41478347, 41474071, 41472848, 41472443, 41471416, 41473130, 41524142, 41480834, 41476724, 41472604], "B": [41472593, 41477785, 41479330, 41486699, 41478688, 41476845, 41477610, 41476296, 41475985, 41478284, 41482245, 41489236, 41477340, 41477044, 41480533, 41484731, 41486696, 41478640], "E": [41541275, 41536720, 41496541, 41519405, 41505368, 41533475]}, "name": "A. Elections", "statement": "As you know, majority of students and teachers of Summer Informatics\r\nSchool live in Berland for the most part of the year. Since corruption\r\nthere is quite widespread, the following story is not uncommon.Elections\r\nare coming. You know the number of voters and the number of parties n\r\nand m respectively. For each voter you know the party he is going to\r\nvote for. However, he can easily change his vote given a certain amount\r\nof money. In particular, if you give i-th voter c_i bytecoins you can\r\nask him to vote for any other party you choose.The United Party of\r\nBerland has decided to perform a statistical study you need to calculate\r\nthe minimum number of bytecoins the Party needs to spend to ensure its\r\nvictory. In order for a party to win the elections, it needs to receive\r\nstrictly more votes than any other party.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n#define PB push_back\n#define MP make_pair\n#define LL long long\n#define int LL\n#define FOR(i,a,b) for(int i = (a); i <= (b); i++)\n#define RE(i,n) FOR(i,1,n)\n#define REP(i,n) FOR(i,0,(int)(n)-1)\n#define R(i,n) REP(i,n)\n#define VI vector<int>\n#define PII pair<int,int>\n#define LD long double\n#define FI first\n#define SE second\n#define st FI\n#define nd SE\n#define ALL(x) (x).begin(), (x).end()\n#define SZ(x) ((int)(x).size())\n\ntemplate<class C> void mini(C &a4, C b4) { a4 = min(a4, b4); }\ntemplate<class C> void maxi(C &a4, C b4) { a4 = max(a4, b4); }\n\ntemplate<class TH> void _dbg(const char *sdbg, TH h){ cerr<<sdbg<<'='<<h<<endl; }\ntemplate<class TH, class... TA> void _dbg(const char *sdbg, TH h, TA... a) {\n  while(*sdbg!=',')cerr<<*sdbg++;\n  cerr<<'='<<h<<','; _dbg(sdbg+1, a...);\n}\n\ntemplate<class T> ostream &operator<<(ostream& os, vector<T> V) {\n  os << \"[\"; for (auto vv : V) os << vv << \",\"; return os << \"]\";\n}\ntemplate<class L, class R> ostream &operator<<(ostream &os, pair<L,R> P) {\n  return os << \"(\" << P.st << \",\" << P.nd << \")\";\n}\n\n#ifdef LOCAL\n#define debug(...) _dbg(#__VA_ARGS__, __VA_ARGS__)\n#else\n#define debug(...) (__VA_ARGS__)\n#define cerr if(0)cout\n#endif\n\nconst int MAX = 3001;\nint n,m;\nvector<int> d[MAX];\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout << fixed << setprecision(11);\n  cerr << fixed << setprecision(6);\n  cin >> n >> m;\n  int mam = 0;\n  R(i,n){\n    int a,b;\n    cin >> a >> b;\n    if(a == 1){\n      mam ++;\n    }else{\n      d[a-2].PB(b);\n    }\n  }\n  R(i,m){\n    sort(ALL(d[i]),greater<int>());\n  }\n  int res = 1e18;\n  R(i,n+1)if(i){\n    vector<int> rest;\n    int ak_mam = mam;\n    int wyn = 0;\n    R(j,m){\n      R(k,min(SZ(d[j]),i - 1)){\n        rest.PB(d[j][k]);\n      }\n      for(int k = i - 1; k < SZ(d[j]); k ++){\n        wyn += d[j][k];\n        ak_mam ++;\n      }\n    }\n    if(ak_mam < i){\n      sort(ALL(rest));\n      R(j,i - ak_mam){\n        wyn += rest[j];\n      }\n    }\n    debug(i,wyn);\n    mini(res,wyn);\n  }\n  cout << res << \"\\n\";\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy"], "dificulty": "1700", "interactive": false}