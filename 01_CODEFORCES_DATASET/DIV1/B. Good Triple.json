{
    "link": "https://codeforces.com//contest/1168/problem/B",
    "problemId": "349589",
    "problem_idx": "B",
    "shortId": "1168B",
    "contest_number": "1168",
    "problem_submissions": {
        "D": [
            54689933,
            54709717,
            54687414,
            54689247,
            54692817,
            54690951,
            54687623,
            54690825,
            54690084,
            54693991,
            54691003,
            54691066,
            54691626,
            54692507,
            54689961,
            54693988,
            54752028,
            54747584,
            54782050,
            54716017,
            54694558
        ],
        "B": [
            54688206,
            54684470,
            54672670,
            54675422,
            54672484,
            54674963,
            54674803,
            54682027,
            54675650,
            54680245,
            54677508,
            54680443,
            54678955,
            54683400,
            54673481,
            54675324,
            54675597,
            54675910,
            54676117
        ],
        "A": [
            54679849,
            54670251,
            54678124,
            54670773,
            54670009,
            54671023,
            54672077,
            54670763,
            54669908,
            54672903,
            54670896,
            54674583,
            54671922,
            54670734,
            54670514,
            54670263,
            54670924,
            54670411,
            54671870
        ],
        "C": [
            54678044,
            54685816,
            54846089,
            54676677,
            54679735,
            54675366,
            54680183,
            54677459,
            54678103,
            54681414,
            54678145,
            54682238,
            54682671,
            54681429,
            54681732,
            54676972,
            54678213,
            54678234,
            54678543,
            54679007
        ],
        "E": [
            54672350,
            54679530,
            156967221,
            54891863,
            54891597
        ]
    },
    "name": "B. Good Triple",
    "statement": "Toad Rash has a binary string s. A binary string consists only of zeros\r\nand ones.Let n be the length of s.Rash needs to find the number of such\r\npairs of integers l, r that 1\r\nleq l\r\nleq r\r\nleq n and there is at least one pair of integers x, k such that 1\r\nleq x, k\r\nleq n, l\r\nleq x < x + 2k\r\nleq r, and s_x = s_{x+k} = s_{x+2k}.Find this number of pairs for Rash.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nusing i64 = long long;\n\n#define maxN 323456\nchar s[maxN];\ni64 ans;\n\nint main() {\n\tscanf(\"%s\", s);\n\tint n = strlen(s);\n\tfor (int l = 0; l < n; l++) {\n\n\t\tfor (int r = l + 2; r < n; r++) {\n\t\t\tbool found = 0;\n\t\t\tfor (int m = r - 1; 2 * m - r >= l; m--) {\n\t\t\t\tif (s[r] == s[m] && s[m] == s[2 * m - r]) {\n\t\t\t\t\tfound = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (found) {\n\t\t\t\tans += n - r;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "two pointers"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Good Triple.json",
    "editorial_link": "https://codeforces.com//blog/entry/67241",
    "editorial": "Lemma: there are no strings without such x,k\n of length at least 9.\n\nIn fact, you just can write brute force to find all \"good\" strings and then realize that they all are small.\n\nOk, so with this you can just write some sort of \"naive\" solution, for each l\n find the largest r\n, such that lÂ…r\n is a \"good\" string, and then add n?r\n to the answer. You can do it in 9?9?n\n or in 9?n\n, as I do in my solution",
    "hint": []
}