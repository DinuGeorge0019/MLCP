{
    "link": "https://codeforces.com//contest/446/problem/A",
    "problemId": "11399",
    "problem_idx": "A",
    "shortId": "446A",
    "contest_number": "446",
    "problem_submissions": {
        "D": [
            7086133,
            7088502,
            7303572,
            7094524,
            7087369,
            7108964,
            7108953,
            7108945,
            7108928,
            7108912,
            7089186,
            7086153,
            7256786,
            7256781,
            7111708
        ],
        "B": [
            7082083,
            7079232,
            7078714,
            7083465,
            7077013,
            7081087,
            7303292,
            7079381,
            7081269,
            7080767,
            7080268,
            7085675,
            7089437,
            7079048,
            7081011,
            7082061,
            7081382,
            7083005,
            7082149
        ],
        "C": [
            7079856,
            7085393,
            7084759,
            7079794,
            7695226,
            7082368,
            7303421,
            7094356,
            7085833,
            7086068,
            7088271,
            7087032,
            7088166,
            7086187,
            7087998,
            7087654,
            7091193,
            7088707
        ],
        "A": [
            7075913,
            7076352,
            7074747,
            7080779,
            7084765,
            7075635,
            7303252,
            7075476,
            7075873,
            7075184,
            7076974,
            7078214,
            7075141,
            7075542,
            7077127,
            7075653,
            7075563,
            7076924,
            7075972
        ],
        "E": [
            7093796,
            7093681
        ]
    },
    "name": "A. DZY Loves Sequences",
    "statement": "DZY has a sequence , consisting of integers.We\u2019ll call a sequence a\r\nsubsegment of the sequence . The value denotes the length of the\r\nsubsegment.Your task is to find the longest subsegment of , such that it\r\nis possible to change at most one number (change one number to any\r\ninteger you want) from the subsegment to make the subsegment strictly\r\nincreasing.You only need to output the length of the subsegment you\r\nfind.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <numeric>\n#include <iostream>\n#include <vector>\n#include <set>\n#include <cstring>\n#include <string>\n#include <map>\n#include <cmath>\n#include <ctime>\n#include <algorithm>\n#include <bitset>\n#include <queue>\n#include <sstream>\n#include <deque>\n#include <cassert>\n\nusing namespace std;\n\n#define mp make_pair\n#define pb push_back\n#define rep(i,n) for(int i = 0; i < (n); i++)\n#define re return\n#define fi first\n#define se second\n#define sz(x) ((int) (x).size())\n#define all(x) (x).begin(), (x).end()\n#define sqr(x) ((x) * (x))\n#define sqrt(x) sqrt(abs(x))\n#define y0 y3487465\n#define y1 y8687969\n#define fill(x,y) memset(x,y,sizeof(x))\n#define prev PREV\n#define j0 j1347829\n#define j1 j234892\n                         \ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef long double ld;\ntypedef double D;\ntypedef pair<int, int> ii;\ntypedef vector<ii> vii;\ntypedef vector<string> vs;\ntypedef vector<vi> vvi;\n\ntemplate<class T> T abs(T x) { re x > 0 ? x : -x; }\n\nint n;\nint m;\nint res[100002][2];\nint x[100002];\n\nint main () {\n    scanf (\"%d\", &n);\n    for (int i = 0; i < n; i++) scanf (\"%d\", &x[i]);\n    int ans = min (2, n), cur = 0;\n    for (int i = n - 1; i >= 0; i--) {\n        for (int t = 0; t < 2; t++) {\n            res[i][t] = 1;\n            if (i + 1 < n && x[i] < x[i + 1]) res[i][t] += res[i + 1][t]; \n        }   \n        if (i + 2 < n && x[i] + 2 <= x[i + 2]) res[i][1] = max (res[i][1], res[i + 2][0] + 2);\n        ans = max (ans, max (res[i][0], res[i][1]));\n        cur = max (cur, res[i][0]);\n    }\n    if (cur < n) cur++;\n    ans = max (ans, cur);\n    printf (\"%d\\n\", ans);\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "implementation",
        "two pointers"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. DZY Loves Sequences.json",
    "editorial_link": "https://codeforces.com//blog/entry/13036",
    "editorial": "We can first calculate for each , satisfying , which is maximal. Then\r\ncalculate , satisfying , which is also maximal. Update the answer , when\r\n. It\u00e2\u0080\u0099s easy to solve this problem in .\r\n"
}