{
    "link": "https://codeforces.com//contest/571/problem/A",
    "problemId": "33721",
    "problem_idx": "A",
    "shortId": "571A",
    "contest_number": "571",
    "problem_submissions": {
        "D": [
            12660141,
            12662761,
            146472300,
            12667793,
            12667782,
            12667705,
            12667665,
            12977746,
            12977742
        ],
        "C": [
            12653738,
            12650335,
            12656737,
            12656719,
            12656852,
            12658376,
            12657879,
            12657167,
            12658357,
            12667656,
            12659401,
            12658758,
            12659293,
            12657644,
            12661004,
            12659862,
            12660042,
            12658285,
            12661048,
            12660704
        ],
        "B": [
            12648491,
            12654015,
            12650873,
            12650680,
            12651137,
            12650734,
            12651603,
            12652409,
            12652256,
            12649494,
            12651874,
            12649612,
            12648817,
            12649026,
            12653251,
            12652866,
            12650455,
            12653013,
            12651835
        ],
        "A": [
            12646811,
            12656074,
            12648816,
            12646668,
            12647772,
            12648996,
            12648968,
            12649621,
            12647841,
            12646486,
            12649024,
            12647834,
            12659587,
            12647059,
            12649810,
            12649525,
            12660696,
            12648257,
            12647136
        ],
        "E": [
            13830424
        ]
    },
    "name": "A. Lengthening Sticks",
    "statement": "You are given three sticks with positive integer lengths of , and\r\ncentimeters. You can increase length of some of them by some positive\r\ninteger number of centimeters (different sticks can be increased by a\r\ndifferent length), but in total by at most centimeters. In particular,\r\nit is allowed not to increase the length of any stick.Determine the\r\nnumber of ways to increase the lengths of some sticks so that you can\r\nform from them a non-degenerate (that is, having a positive area)\r\ntriangle. Two ways are considered different, if the length of some stick\r\nis increased by different number of centimeters in them.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<memory.h>\n#include<map>\n#include<set>\n#include<queue>\n#include<list>\n#include<sstream>\n#include<cstring>\n#define mp make_pair\n#define pb push_back      \n#define F first\n#define S second\n#define SS stringstream\n#define sqr(x) ((x)*(x))\n#define m0(x) memset(x,0,sizeof(x))\n#define m1(x) memset(x,63,sizeof(x))\n#define CC(x) cout << (x) << endl\n#define pw(x) (1ll<<(x))\n#define buli(x) __builtin_popcountll(x)\n#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)\n#define M 1000000007\n#define N 211111\n\n#define TASK \"1\"\n\nusing namespace std;\ntypedef pair<int,int> pt;\n\nint a, b, c, l;\n\nlong long bad(int a, int b, int c) {\n\tlong long ret = 0;\n\tfor (int i = 0; i <= l; i++) {\n\t\tint aa = a + i;\n\n\t\tint r = l - i;\n\n\t\tint s = b + c;\n\t\tif (s > aa) continue;\n\n\t\tr = min(r, aa - s);\n\n\t\tlong long k = (1 + (r + 1)) * 1ll * (r + 1) / 2;\n\t\tret += k;\n\t}\n\treturn ret;\n\n}\n\nint main(){\n//\tfreopen(TASK\".in\",\"r\",stdin);\t\n//\tfreopen(TASK\".out\",\"w\",stdout);\n\tcin >> a >> b >> c >> l;\n\n\tlong long all = 0;\n\tfor (int i = 0; i <= l; i++) {\n\t\tint r = l - i;\n\n\t\tlong long k = (1 + (r + 1))  * 1ll * (r + 1) / 2;\n\t\tall += k;\n\t}\n//\tcout << all << endl;\n\n\tall -= bad(a, b, c);\n\tall -= bad(b, a, c);\n\tall -= bad(c, a, b);\n\n\tcout << all << endl;\n\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "implementation",
        "math"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Lengthening Sticks.json",
    "editorial_link": "https://codeforces.com//blog/entry/19923",
    "editorial": "Let\u00e2\u0080\u0099s count the number of ways to form a triple which can\u00e2\u0080\u0099t represent\r\ntriangle sides, and then we subtract this value from the total number of\r\nways to increase the sticks not more than in total. This number is\r\nobtained from partition of into 4 summands (), or can be counted using a\r\nfor loop. Now we consider triples , where . Fix the maximal side, for\r\nexample it would be . We\u00e2\u0080\u0099ll have to do the following algo for and in the\r\nsame way. The triple is not a triangle with maximal side if . If we\r\niterate over between and , we have the following conditions on : So,\r\nnon-negative integers should be such that . If we denote this minimum as\r\nthan we can choose in different ways (again we divide into three\r\nsummands: and some unused volume). Also when we fix , there are ways to\r\nchoose , so the overall number of pair is so we obtain the same formula.\r\nTo sum up, we need to iterate over the maximal side and over the\r\naddition to that side, then write these formulas, and subtract the\r\nresult from the total number of different additions to the sides. The\r\ncomplexity of the solution is . Problem author: Kostroma. Problem\r\ndevelopers: Kostroma, riadwaw. Solution code: 12873406.\r\n"
}