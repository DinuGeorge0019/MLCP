{"link": "https://codeforces.com//contest/713/problem/D", "problemId": "71348", "problem_idx": "D", "shortId": "713D", "contest_number": "713", "problem_submissions": {"C": [26460974, 20575910, 20583094, 20581559, 20581733, 20583408, 20579455, 20582507, 20580790, 20585663, 37183524, 20586646, 20578141, 20587141, 20583393, 20576023, 20577632, 20581746, 20588485, 80008205, 79474335, 20583081, 20586247, 20589607], "D": [20589016, 20588044, 20589791, 20590045, 20590281, 20591597, 20591896, 20601734, 20601720, 20594132, 20593560, 20593079, 20596440, 20593442, 20596199, 20584415, 20594603, 20595698, 20593723, 20595881, 24960690, 20593574], "B": [20583151, 20580004, 20578178, 20578836, 20578366, 20585770, 20579555, 20576646, 20583230, 20581847, 20589836, 20583553, 20579782, 20588723, 20589144, 20578568, 20589488, 20583796, 20583317], "A": [20572754, 20572042, 20571909, 20572204, 20571875, 20571504, 20584123, 20571416, 20574058, 20587954, 20571916, 20573302, 20574693, 20573904, 20589571, 20575437, 20571888, 20573337, 20572118, 20572133], "E": [20940861, 20595260]}, "name": "D. Animals and Puzzle", "statement": "Owl Sonya gave a huge lake puzzle of size to hedgehog Filya as a\r\nbirthday present. Friends immediately started to assemble the puzzle,\r\nbut some parts of it turned out to be empty there was no picture on\r\nthem. Parts with picture on it are denoted by , while empty parts are\r\ndenoted by . Rows of the puzzle are numbered from top to bottom with\r\nintegers from to , while columns are numbered from left to right with\r\nintegers from to .Animals decided to complete the picture and play with\r\nit, as it might be even more fun! Owl and hedgehog ask each other some\r\nqueries. Each query is provided by four integers , , , which define the\r\nrectangle, where stands for the coordinates of the up left cell of the\r\nrectangle, while stands for the coordinates of the bottom right cell.\r\nThe answer to the query is the size of the maximum consisting of picture\r\nparts only (only parts denoted by ) and located fully inside the query\r\nrectangle.Help Sonya and Filya answer queries.\r\n", "solutions": ["#include<bits/stdc++.h>\n\nusing namespace std;\n\nint N, M, Q, lg[1009];\nchar sir[3009];\nshort dp[1002][1002][10][10];\n\nint get_ma (int a1, int b1, int a2, int b2)\n{\n    int p = lg[a2 - a1 + 1], q = lg[b2 - b1 + 1], x = a2 - (1 << p) + 1, y = b2 - (1 << q) + 1;\n    return max (dp[a1][b1][p][q], max (dp[a1][y][p][q], max (dp[x][b1][p][q], dp[x][y][p][q])));\n}\n\nint main ()\n{\n//freopen (\"input\", \"r\", stdin);\n//freopen (\"output\", \"w\", stdout);\n\nscanf (\"%d %d\\n\", &N, &M);\nfor (int i=1; i<=N; i++)\n{\n    gets (sir + 1);\n    for (int j=1; j<=M; j++)\n    {\n        bool curr = sir[2 * j - 1] - '0';\n        if (curr) dp[i][j][0][0] = 1 + min (dp[i - 1][j][0][0], min (dp[i - 1][j - 1][0][0], dp[i][j - 1][0][0]));\n        else dp[i][j][0][0] = 0;\n    }\n}\nfor (int i=2; i<=N || i<=M; i++)\n    lg[i] = lg[i >> 1] + 1;\nfor (int i=0; (1 << i) <= N; i++)\n    for (int j=0; (1 << j) <= M; j++)\n        if (i + j > 0)\n        {\n            if (i > 0)\n            {\n                for (int x=1; x + (1 << i) - 1 <= N; x ++)\n                    for (int y=1; y + (1 << j) - 1 <= M; y++)\n                        dp[x][y][i][j] = max (dp[x][y][i - 1][j], dp[x + (1 << (i - 1))][y][i - 1][j]);\n            }\n            else\n            {\n                for (int x=1; x + (1 << i) - 1 <= N; x ++)\n                    for (int y=1; y + (1 << j) - 1 <= M; y++)\n                        dp[x][y][i][j] = max (dp[x][y][i][j - 1], dp[x][y + (1 << (j - 1))][i][j - 1]);\n            }\n        }\nscanf (\"%d\", &Q);\nwhile (Q --)\n{\n    int a1, b1, a2, b2, p = 1, u, ras = 0;\n    scanf (\"%d %d %d %d\", &a1, &b1, &a2, &b2), u = min (a2 - a1 + 1, b2 - b1 + 1);\n    while (p <= u)\n    {\n        int mij = (p + u) >> 1;\n        if (get_ma (a1 + mij - 1, b1 + mij - 1, a2, b2) >= mij) ras = mij, p = mij + 1;\n        else u = mij - 1;\n    }\n    printf (\"%d\\n\", ras);\n}\nreturn 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures"], "dificulty": "2700", "interactive": false}