{"link": "https://codeforces.com//contest/521/problem/C", "problemId": "23440", "problem_idx": "C", "shortId": "521C", "contest_number": "521", "problem_submissions": {"D": [10114323, 10113689, 10119859, 10119855, 10119796, 10113492, 10113596, 10116089, 10113726, 10114226, 10114023, 10114948, 10114997, 10118008, 10116808, 10115969, 10115919, 115640381], "B": [10109892, 10107901, 10108581, 10107819, 10114473, 10108104, 10108433, 10109077, 10107764, 10108790, 10107608, 10107745, 10107578, 10110313, 10108219, 10110179, 10111006], "C": [10109219, 10110415, 10110107, 10111080, 10109986, 10110836, 10111159, 10109138, 10106797, 10109327, 10109438, 10109146, 10106442, 10110202, 10108389, 10108555], "A": [10105003, 10105742, 10105267, 10111233, 10104462, 10105194, 10105511, 10104861, 10104854, 10104826, 10105033, 10104516, 10107256, 10104819, 10105232, 10104822], "E": [10113230, 10117526, 249300397]}, "name": "C. Pluses everywhere", "statement": "Vasya is sitting on an extremely boring math class. To have fun, he took\r\na piece of paper and wrote out numbers on a single line. After that,\r\nVasya began to write out different ways to put pluses (\"\") in the line\r\nbetween certain digits in the line so that the result was a correct\r\narithmetic expression; formally, no two pluses in such a partition can\r\nstand together (between any two adjacent pluses there must be at least\r\none digit), and no plus can stand at the beginning or the end of a line.\r\nFor example, in the string , ways (add no pluses), or are correct, and\r\nways , or are incorrect.The lesson was long, and Vasya has written all\r\nthe correct ways to place exactly pluses in a string of digits. At this\r\npoint, he got caught having fun by a teacher and he was given the task\r\nto calculate the sum of all the resulting arithmetic expressions by the\r\nend of the lesson (when calculating the value of an expression the\r\nleading zeros should be ignored). As the answer can be large, Vasya is\r\nallowed to get only its remainder modulo . Help him!\r\n", "solutions": ["#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint mo=1e9+7,nI[110000],I[110000],n,m;\nchar ch[110000];\nint quick(int k1,int k2){\n    int k3=1;\n    while (k2){\n        if (k2&1) k3=1ll*k3*k1%mo; k1=1ll*k1*k1%mo; k2>>=1;\n    }\n    return k3;\n}\nint C(int k1,int k2){\n    if (k2>k1) return 0;\n    return 1ll*I[k1]*nI[k2]%mo*nI[k1-k2]%mo;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m); scanf(\"%s\",ch+1);\n    if (m==0){\n        int ans=0;\n        for (int i=1;i<=n;i++) ans=(1ll*ans*10+ch[i]-'0')%mo;\n        cout<<ans<<endl; return 0;\n    }\n    for (int i=1;i<=n;i++) nI[i]=quick(i,mo-2); nI[0]=1;\n    for (int i=1;i<=n;i++) nI[i]=1ll*nI[i]*nI[i-1]%mo;\n    I[0]=1; for (int i=1;i<=n;i++) I[i]=1ll*I[i-1]*i%mo;\n    int ans=0,num=0,pre=1;\n    for (int i=n;i;i--){\n        int k1=(num+1ll*pre*C(i-1,m))%mo;\n        ans=(ans+1ll*k1*(ch[i]-'0'))%mo;\n        num=(num+1ll*pre*C(i-2,m-1))%mo; pre=1ll*pre*10%mo;\n    }\n    cout<<ans<<endl;\n    return 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp", "math", "number theory"], "dificulty": "2200", "interactive": false}