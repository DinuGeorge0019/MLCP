{
    "link": "https://codeforces.com//contest/1268/problem/B",
    "problemId": "499893",
    "problem_idx": "B",
    "shortId": "1268B",
    "contest_number": "1268",
    "problem_submissions": {
        "E": [
            67361424,
            67355016,
            67380799,
            67371033,
            67446934,
            67376813,
            68023098,
            68022997
        ],
        "D": [
            67348266,
            67347319,
            67365084,
            67357673,
            67360949,
            67364747,
            67359296,
            67368756,
            67411806,
            68016271
        ],
        "C": [
            67338375,
            67339405,
            67344042,
            67338561,
            67344169,
            67346111,
            67349295,
            67348401,
            67341037,
            67348166,
            67347179,
            67340159,
            67353050,
            67348258,
            67346505,
            67347427,
            67342845,
            67349401,
            67353151,
            67341052
        ],
        "B": [
            67331667,
            67334127,
            67337536,
            67334592,
            67334504,
            67337007,
            67342216,
            67338670,
            67336021,
            67336364,
            67336274,
            67334552,
            67335765,
            67336571,
            67336933,
            67336456,
            67331340,
            67342411,
            67336844,
            67347736
        ],
        "A": [
            67329853,
            67333177,
            67334199,
            67331820,
            67331197,
            67332489,
            67334260,
            67332404,
            67331188,
            67334825,
            67333497,
            67332015,
            67333739,
            67334436,
            67335762,
            67333434,
            67335595,
            67333162,
            67332954,
            67335847
        ]
    },
    "name": "B. Domino for Young",
    "statement": "You are given a Young diagram. Given diagram is a histogram with n\r\ncolumns of lengths a_1, a_2,\r\nldots, a_n (a_1\r\ngeq a_2\r\ngeq\r\nldots\r\ngeq a_n\r\ngeq 1). Your goal is to find the largest number of non-overlapping\r\ndominos that you can draw inside of this histogram, a domino is a 1\r\ntimes 2 or 2\r\ntimes 1 rectangle.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 21.12.2019 14:08:24       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  vector<long long> cnt(2, 0);\n  for (int i = 0; i < n; i++) {\n    cnt[i % 2] += a[i] / 2;\n    cnt[(i + 1) % 2] += (a[i] + 1) / 2;\n  }\n  cout << min(cnt[0], cnt[1]) << '\\n';\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy",
        "math"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Domino for Young.json",
    "editorial_link": "https://codeforces.com//blog/entry/72358",
    "editorial": "Let's color diagram into two colors as a chessboard.\n\nI claim that the Young diagram can be partitioned into domino if and only if the number of white cells inside it is equal to the number of black cells inside it.\n\nIf the Young diagram has two equal rows (or columns) you can delete one domino, and the diagram will still have an equal number of white and black cells.\n\nIf all rows and columns are different, it means that the Young diagram is a \"basic\" diagram, i.e have lengths of columns 1,2,Â…,n\n.\n\n\n\nBut in a \"basic\" diagram the number of white and black cells is different! So, we have a contradiction!\n\nBut what if the number of black and white cells are not the same?\n\nI claim that the answer is min(\n the number of white cells, the number of black cells )\n.\n\nJust because if you have more white cells (case with more black case is symmetrical), and there are no equal rows and columns, you can take the first column with more white cells than black cells and delete the last cell of this column, in the end, you will have a Young diagram with an equal number of black and white cells, so you can find the answer by algorithm described below.",
    "hint": []
}