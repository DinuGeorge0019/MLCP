{
    "link": "https://codeforces.com//contest/132/problem/C",
    "problemId": "708",
    "problem_idx": "C",
    "shortId": "132C",
    "contest_number": "132",
    "problem_submissions": {
        "E": [
            925463,
            924045,
            926495,
            927129,
            930757,
            927949,
            927053
        ],
        "B": [
            923684,
            925104,
            927721,
            923959,
            924110,
            922324,
            922978,
            923016,
            925081,
            924882,
            922141,
            926108,
            923013,
            925452,
            925520,
            925045,
            926157,
            926077
        ],
        "D": [
            922457,
            922554,
            924871,
            922974,
            924948,
            924454,
            924331,
            923366,
            923651,
            925293,
            923560,
            925565,
            922791,
            924076,
            923184,
            923568,
            923999
        ],
        "C": [
            920611,
            921352,
            922698,
            921318,
            922939,
            921777,
            922465,
            921286,
            921687,
            923127,
            921959,
            921893,
            920032,
            922242,
            921743,
            922634,
            922920
        ],
        "A": [
            919809,
            919078,
            921073,
            919691,
            920209,
            919403,
            919950,
            919419,
            920157,
            919937,
            920116,
            920376,
            920930,
            921451,
            922067,
            920124,
            920860
        ]
    },
    "name": "C. Logo Turtle",
    "statement": "A lot of people associate Logo programming language with turtle\r\ngraphics. In this case the turtle moves along the straight line and\r\naccepts commands \"\" (\"turn around\") and \"\" (\"move 1 unit forward\").You\r\nare given a list of commands that will be given to the turtle. You have\r\nto change exactly commands from the list (one command can be changed\r\nseveral times). How far from the starting point can the turtle move\r\nafter it follows the commands of the modified list?\r\n",
    "solutions": [
        "#pragma comment(linker, \"/STACK:65777216\")\n \n#include <algorithm>\n#include <iostream>\n#include <string>\n#include<sstream>\n#include<string.h>\n#include <cstdio>\n#include <vector>\n#include <bitset>\n#include <cmath>\n#include <queue>\n#include<stack>\n#include <set>\n#include <map>\n#include<ctime>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double,double> pdd;\ntypedef unsigned long long ull;\n \n#define FOR(i,a,b) for (int i(a); i < (b); i++)\n#define REP(i,n) FOR(i,0,n)\n#define SORT(v) sort((v).begin(),(v).end())\n#define UN(v) sort((v).begin(),(v).end()),v.erase(unique(v.begin(),v.end()),v.end())\n#define CL(a,b) memset(a,b,sizeof(a))\n#define pb push_back\n\nstring s;\nint n;\nint best = 0;\n\nint a[111][55][211][3];\nvoid go(int pos,int change,int x,int dx){\n\tif(a[pos][change][x+100][dx+1]) return;\n\ta[pos][change][x+100][dx+1]=1;\n\tif(pos==s.size()){\n\t\tif(change==0) best = max(best, abs(x));\n\t\treturn;\n\t}\n\tREP(i,change+1){\n\t\tint val = (s[pos]=='F');\n\t\tif(i%2) val^=1;\n\n\t\tgo(pos+1,change-i,x+(val==1?dx:0),dx*(val==0?-1:1));\n\t}\n}\n\nint main(){\n#ifdef LocalHost\n\n    freopen(\"input.txt\",\"r\",stdin);\n//  freopen(\"output.txt\",\"w\",stdout);\n#endif\n\t\n\tcin>>s>>n;\n\tgo(0,n,0,1);\n\tcout<<best<<endl;\n \n#ifdef LocalHost\n    cout<<endl<<endl<<\"TIME: \"<<clock()<<endl;\n#endif\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Logo Turtle.json",
    "editorial_link": "https://codeforces.com//blog/entry/3302",
    "editorial": "This was the only problem of the round which featured a non-esoteric language. The solution is dynamic programming, and it could be used in several ways. My solution was to store two three-dimensional arrays: the leftmost and the rightmost position of a turtle after it used I commands from the list, made J changes in these commands and is now facing direction K. The initial condition is that left=right=0 when I = J = 0 and the turtle faces right (the initial direction can be chosen arbitrarily). The rule of moving between states is: if currently executed command is T (either it is the current command of the list and no change is done, or it is a result of a change), the coordinate stays the same and the direction changes; otherwise the direction stays the same and the coordinate changes accordingly to the direction.\n\nIt's convenient to do at most one change for each command; in this case after all the arrays are calculated, one has to take the maximal absolute value among all distances which use all commands from the list, all facing directions of the turtle and all quantities of changes which have the same parity as the required quantity (any command can be changed an even number of times without affecting the result)."
}