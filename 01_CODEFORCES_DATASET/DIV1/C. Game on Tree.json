{"link": "https://codeforces.com//contest/280/problem/C", "problemId": "2727", "problem_idx": "C", "shortId": "280C", "contest_number": "280", "problem_submissions": {"A": [3287460, 3287361, 3276397, 3278813, 3276368, 3275958, 3278969, 3275819, 3275811, 3278894, 3281142, 3276025, 3282276, 3280827, 3278671, 3278926], "D": [3281691, 3283266, 3283731, 3285347, 3322215], "C": [3279306, 3279945, 3277746, 3276734, 3279642, 3277787, 3276636, 3278485, 3278848, 3279470, 3277629, 3279115, 3276052, 3276649, 3279355, 3279152], "B": [3276405, 3279061, 3277000, 3276260, 3284541, 3277306, 3275980, 3276370, 3276567, 3276408, 3276287, 3277081, 3278515, 3277959, 3275542, 3276177], "E": [3351075]}, "name": "C. Game on Tree", "statement": "Momiji has got a rooted tree, consisting of nodes. The tree nodes are\r\nnumbered by integers from to . The root has number . Momiji decided to\r\nplay a game on this tree.The game consists of several steps. On each\r\nstep, Momiji chooses one of the remaining tree nodes (let\u2019s denote it by\r\n) and removes all the subtree nodes with the root in node from the tree.\r\nNode gets deleted as well. The game finishes when the tree has no nodes\r\nleft. In other words, the game finishes after the step that chooses the\r\nnode number .Each time Momiji chooses a new node uniformly among all the\r\nremaining nodes. Your task is to find the expectation of the number of\r\nsteps in the described game.\r\n", "solutions": ["/*\nAuthor: elfness@UESTC\n*/\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\ntypedef long long LL;\nconst int V=100100;\nstruct Edge{int num,ne;}e[V*2];\nint p[V],K;\nvoid add(int x,int y)\n{\n    e[K].num=y;e[K].ne=p[x];p[x]=K++;\n}\nint d[V];\nvoid dfs(int u,int fa)\n{\n    for(int i=p[u];i!=-1;i=e[i].ne)\n    {\n        int v=e[i].num;\n        if(v==fa)continue;\n        d[v]=d[u]+1;dfs(v,u);\n    }\n}\nint n;\nint main()\n{\n    while(~scanf(\"%d\",&n))\n    {\n        for(int i=1;i<=n;i++)p[i]=-1;\n        for(int i=1;i<n;i++)\n        {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            add(x,y);add(y,x);\n        }\n        d[1]=0;\n        dfs(1,-1);\n        double ret=0.0;\n        for(int i=1;i<=n;i++)ret+=1.0/(d[i]+1);\n        printf(\"%.12f\\n\",ret);\n    }\n}\n"], "input": "", "output": "", "tags": ["implementation", "math", "probabilities", "trees"], "dificulty": "2200", "interactive": false}