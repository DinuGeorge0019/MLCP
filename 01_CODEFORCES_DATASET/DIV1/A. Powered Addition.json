{"link": "https://codeforces.com//contest/1338/problem/A", "problemId": "590531", "problem_idx": "A", "shortId": "1338A", "contest_number": "1338", "problem_submissions": {"E": [76397300, 76619327, 76403815, 76434529, 76434479, 76434133, 76434078, 76433920, 76433813, 76433749, 76433522, 76432895, 76432405, 76433003, 76432715, 76492191, 76458850, 77714923, 76416304, 78374239, 105958584], "D": [76383105, 76378423, 76373799, 76372283, 76380290, 76721483, 76721183, 76718097, 76716953, 76379002, 76377538, 76378427, 76454507, 76377531, 76381613, 76384929, 76380304, 76384800, 76387623, 76383511, 76383924, 76389002, 76385003, 76379777, 76361072], "C": [76355433, 76365439, 76355356, 76357185, 76342857, 77464916, 77464536, 76797866, 76793425, 76363706, 76354913, 76352467, 76454469, 76364453, 76361606, 76365484, 76367936, 76362206, 76361479, 76370442, 76369319, 76368001, 76372720, 76355615, 76385066], "B": [76346805, 76342391, 76342822, 76343816, 76355163, 77465740, 76793469, 76348894, 76346501, 76359563, 76454438, 76345410, 76341218, 76346125, 76349446, 76346871, 76343626, 76346043, 76350035, 76345138, 76349598, 76348838, 76367005], "A": [76334223, 76335060, 76334379, 76334482, 76348815, 76334952, 76364133, 76339027, 76454272, 76334304, 76334154, 76336649, 76334438, 76334441, 76334773, 76334264, 76337258, 76335486, 76337735, 76341537, 76369906]}, "name": "A. Powered Addition", "statement": "You have an array a of length n. For every positive integer x you are\r\ngoing to perform the following operation during the x-th second: Select\r\nsome distinct indices i_{1}, i_{2},\r\nldots, i_{k} which are between 1 and n inclusive, and add 2^{x-1} to\r\neach corresponding position of a. Formally, a_{i_{j}} := a_{i_{j}} +\r\n2^{x-1} for j = 1, 2,\r\nldots, k. You have to make a nondecreasing as fast as possible. Find the\r\nsmallest number T such that you can make the array nondecreasing after\r\nat most T seconds.Array a is nondecreasing if and only if a_{1}\r\nle a_{2}\r\nle\r\nldots\r\nle a_{n}.You have to answer t independent test cases.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 12.04.2020 17:04:48       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    int val = 0;\n    int mx = (int) -2e9;\n    for (int i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      mx = max(mx, a);\n      val = max(val, mx - a);\n    }\n    long long res = 0;\n    while ((1LL << res) - 1 < val) {\n      ++res;\n    }\n    cout << res << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "math"], "dificulty": "1500", "interactive": false}