{
    "link": "https://codeforces.com//contest/739/problem/A",
    "problemId": "81532",
    "problem_idx": "A",
    "shortId": "739A",
    "contest_number": "739",
    "problem_submissions": {
        "C": [
            22442698,
            22439403,
            22439035,
            22441010,
            22452684,
            22437700,
            22438882,
            22439230,
            22438925,
            22440648,
            22439930,
            22440447,
            22440445,
            22442265,
            22442505,
            22443020,
            22443464,
            22471543
        ],
        "A": [
            22439350,
            22427880,
            22428059,
            22427929,
            22427879,
            22427835,
            22427894,
            22569748,
            22427875,
            22427910,
            22428905,
            22428165,
            22427839,
            22428416,
            22427876,
            22427815,
            22428207,
            22427895,
            22461370,
            22461352,
            22428531
        ],
        "B": [
            22438821,
            22430420,
            22433537,
            22432542,
            22430611,
            22432279,
            22431221,
            22432719,
            22432020,
            22433235,
            22432524,
            22433360,
            22434177,
            22433963,
            22430137,
            22435255,
            22433707,
            22459456,
            22459424,
            22459398,
            22442832
        ],
        "E": [
            22435846,
            23367614,
            23367585,
            23236778,
            22443543,
            31723439,
            22934699,
            22934399,
            22516029,
            22515992,
            22463839,
            22463413,
            22443763,
            22446956,
            22453608,
            22445886,
            22461332,
            22692840,
            22455977,
            22471655,
            22471636,
            22461535,
            22447302
        ],
        "D": [
            22462793,
            22462750,
            22462690,
            22450389,
            22469047,
            22498066
        ]
    },
    "name": "A. Alyona and mex",
    "statement": "Alyonaâ€™s mother wants to present an array of non-negative integers to\r\nAlyona. The array should be special. Alyona is a capricious girl so\r\nafter she gets the array, she inspects of its subarrays. Subarray is a\r\nset of some subsequent elements of the array. The -th subarray is\r\ndescribed with two integers and , and its elements are .Alyona is going\r\nto find for each of the chosen subarrays. Among these the girl is going\r\nto find the smallest. She wants this minimum to be as large as possible.\r\nYou are to find an array of elements so that the minimum among those\r\nchosen by Alyona subarrays is as large as possible.The of a set is a\r\nminimum possible non-negative integer that is not in .\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nint n,m,l,r;\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tint d=n;\n\trep(i,0,m) {\n\t\tscanf(\"%d%d\",&l,&r);\n\t\td=min(d,r-l+1);\n\t}\n\tprintf(\"%d\\n\",d);\n\trep(i,0,n) printf(\"%d \",i%d);\n\tputs(\"\");\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Alyona and mex.json",
    "editorial_link": "https://codeforces.com//blog/entry/48582",
    "editorial": "Obviously, the answer to the problem can not be greater than the minimum\r\nlength among the lengths of the sub-arrays. Suppose that the minimum\r\nlength of all the sub-arrays is equal to len. Then the desired array is:\r\n. Not hard to make sure that mex of any subarray will be at least len.\r\n",
    "hint": []
}