{
    "link": "https://codeforces.com//contest/1172/problem/A",
    "problemId": "355008",
    "problem_idx": "A",
    "shortId": "1172A",
    "contest_number": "1172",
    "problem_submissions": {
        "C2": [
            141600407,
            55254783,
            55254826,
            55257297,
            55253043,
            55256695,
            55259217,
            55259307,
            55260348,
            55256683,
            55270942,
            55262864,
            55394593,
            55256544,
            55256222,
            55256476
        ],
        "D": [
            55259812,
            55261379,
            55260385,
            55262554,
            55264421,
            55262846,
            55265864,
            55262949,
            55261237,
            55257268,
            55265259,
            55282819,
            55259099,
            55263111,
            55263637,
            55264769,
            55252234,
            55272471
        ],
        "C1": [
            55254052,
            55254936,
            55255627,
            55253139,
            55256736,
            55258621,
            55259255,
            55260376,
            55255981,
            55261688,
            55260260,
            55262975,
            55258783,
            55259505,
            55261611,
            55269127,
            55256504,
            55255804,
            55256553
        ],
        "B": [
            55249856,
            55248174,
            55250922,
            55254795,
            55250751,
            55252004,
            55254040,
            55251691,
            55250951,
            55253498,
            55253667,
            55248941,
            55252605,
            55253983,
            55255049,
            55260189,
            55249359,
            55251616,
            55252768
        ],
        "A": [
            55248325,
            55257508,
            55248960,
            55257490,
            55247357,
            55248700,
            55251742,
            55266272,
            55607192,
            55249619,
            55249678,
            55256938,
            55249251,
            55250622,
            55258815,
            55257623,
            55247019,
            55249926,
            55249357
        ],
        "E": [
            99401668,
            55317241,
            55479078,
            55479032,
            55478977
        ],
        "F": [
            55517893,
            55302923,
            55292935,
            55545710
        ]
    },
    "name": "A. Nauuo and Cards",
    "statement": "Nauuo is a girl who loves playing cards.One day she was playing cards\r\nbut found that the cards were mixed with some empty ones.There are n\r\ncards numbered from 1 to n, and they were mixed with another n empty\r\ncards. She piled up the 2n cards and drew n of them. The n cards in\r\nNauuo\u2019s hands are given. The remaining n cards in the pile are also\r\ngiven in the order from top to bottom.In one operation she can choose a\r\ncard in her hands and play it put it at the bottom of the pile, then\r\ndraw the top card from the pile.Nauuo wants to make the n numbered cards\r\npiled up in increasing order (the i-th card in the pile from top to\r\nbottom is the card i) as quickly as possible. Can you tell her the\r\nminimum number of operations?\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define maxn 200005\n#define ll long long\n#define ld double\n#define mod 998244353\nusing namespace std;\nint a[maxn], b[maxn];\nint fl[maxn];\nint tm[maxn];\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor(int i = 1; i <= n; i++)\n\t\tcin>>a[i];\n\tfor(int i = 1; i <= n; i++)\n\t\tcin>>b[i];\n\tfor(int j = 1; j <= n; j++)\n\t\tif(b[j] == 1)\n\t\t{\n\t\t\t/*check1*/\n\t\t\tint nfl = 1;\n\t\t\tfor(int k = j + 1; k <= n; k++)\n\t\t\t\tif(k - j + 1 != b[k]) nfl = 0;\n\t\t\tint ls = 1 + n - j;\n\t\t\tfor(int i = 1; i <= n; i++)\n\t\t\t\tfl[a[i]] = 1;\n\t\t\tfor(int s = 1; s < j; s++)\n\t\t\t{\n\t\t\t\tif(!fl[ls + s]) nfl = 0;\n\t\t\t\tfl[b[s]] = 1;\n\t\t\t}\n\t\t\tif(nfl)\n\t\t\t{\n\t\t\t\tcout<<n - ls<<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\tfor(int j = 1; j <= n; j++)\n\t\ttm[a[j]] = 0;\n\tfor(int j = 1; j <= n; j++)\n\t\ttm[b[j]] = j;\n\tint ans = 0;\n\tfor(int j = 1; j <= n; j++)\n\t\tans = max(ans, (n + 1 - j) + tm[j]);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n} "
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Nauuo and Cards.json",
    "editorial_link": "https://codeforces.com//blog/entry/67511",
    "editorial": "First, try to finish it without playing any empty cards.If\nthat\u00e2\u0080\u0099s not possible, the best choice is to play several empty cards in a\nrow, then play from to . For a card , suppose that it is in the -th\nposition in the pile ( if it is in the hand), you have to play at least\nempty cards. So the answer will be .\n"
}