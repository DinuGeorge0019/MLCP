{
    "link": "https://codeforces.com//contest/995/problem/D",
    "problemId": "193036",
    "problem_idx": "D",
    "shortId": "995D",
    "contest_number": "995",
    "problem_submissions": {
        "A": [
            39622634,
            39624778,
            39611857,
            39613075,
            39612504,
            39633809,
            39730739,
            39630464,
            39614560,
            39615127,
            39615945,
            39627850,
            39644544
        ],
        "D": [
            39620886,
            39622276,
            39624260,
            39625402,
            39620954,
            39619269,
            39625858,
            39622750,
            39648307,
            39621953,
            39623820,
            39630198,
            39624907,
            39620407,
            39624158,
            40152305,
            39628532
        ],
        "B": [
            39618347,
            39610962,
            39613221,
            39614545,
            39609629,
            39615815,
            39611873,
            39613569,
            39613133,
            39612138,
            39610926,
            39611393,
            39611858,
            39611928,
            39613545,
            39611754,
            39609705,
            53817193,
            39610836
        ],
        "C": [
            39617499,
            39614510,
            39626416,
            39624999,
            39616008,
            39617835,
            39618295,
            39616280,
            39624435,
            39625816,
            39622945,
            39621745,
            39619276,
            39618758,
            39619323,
            40151840,
            39622131
        ],
        "F": [
            39615335,
            39621081,
            39625550,
            39626823,
            39628939,
            39628609,
            39627481,
            39618994,
            39618157,
            39650537,
            39650510,
            39650502,
            39650497,
            39650286,
            39626413,
            39619718,
            39628948,
            39622378,
            39621430,
            39618390
        ],
        "E": [
            39614170,
            39617964,
            39622775,
            39619679,
            39622645,
            39623654,
            39624609,
            39619924,
            39623004,
            39785499,
            39632072,
            39631884,
            39631853,
            39631837,
            39631822,
            39620887,
            39627781,
            39618907,
            39627618,
            39627288,
            39618749,
            39642305
        ]
    },
    "name": "D. Game",
    "statement": "Allen and Bessie are playing a simple number game. They both know a\r\nfunction f:\r\n{0, 1\r\n}^n\r\nto\r\nmathbb{R}, i. e. the function takes n binary arguments and returns a\r\nreal value. At the start of the game, the variables x_1, x_2,\r\ndots, x_n are all set to -1. Each round, with equal probability, one of\r\nAllen or Bessie gets to make a move. A move consists of picking an i\r\nsuch that x_i = -1 and either setting x_i\r\nto 0 or x_i\r\nto 1.After n rounds all variables are set, and the game value resolves\r\nto f(x_1, x_2,\r\ndots, x_n). Allen wants to maximize the game value, and Bessie wants to\r\nminimize it.Your goal is to help Allen and Bessie find the expected game\r\nvalue! They will play r+1 times though, so between each game, exactly\r\none value of f changes. In other words, between rounds i and i+1 for 1\r\nle i\r\nle r, f(z_1,\r\ndots, z_n)\r\nto g_i for some (z_1,\r\ndots, z_n)\r\nin\r\n{0, 1\r\n}^n. You are to find the expected game value in the beginning and after\r\neach change.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nint n,r,z,c[(1<<18)+10];\nll ans;\nint main() {\n\tscanf(\"%d%d\",&n,&r);\n\trep(i,0,(1<<n)) {\n\t\tscanf(\"%d\",c+i);\n\t\tans+=c[i];\n\t}\n\tdouble w=1<<n;\n\tprintf(\"%.10f\\n\",ans/w);\n\trep(i,0,r) {\n\t\tscanf(\"%d\",&z);\n\t\tans-=c[z];\n\t\tscanf(\"%d\",c+z);\n\t\tans+=c[z];\n\t\tprintf(\"%.10f\\n\",ans/w);\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\D. Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/60217",
    "editorial": "One can show by induction that the expected value of the game is\r\n.Consider the first turn. For notation, let be the expected value of the\r\ngame when is set to , and let be the expected value of the game when is\r\nset to . By induction, it is easy to see that Consider Allenâs strategy.\r\nIf it is Allenâs turn, he will set , where are such that is maximal. As\r\nfor all , it is clear that is actually minimal among all the . This\r\nmeans that Bessie would have chosen to set if it were her turn.\r\nTherefore, the expected game value is\r\n",
    "hint": []
}