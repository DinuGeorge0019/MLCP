{"link": "https://codeforces.com//contest/529/problem/B", "problemId": "25011", "problem_idx": "B", "shortId": "529B", "contest_number": "529", "problem_submissions": {"A": [10386870, 10387083, 10387317, 10387235, 10387134, 10386419, 10387369, 10386078, 10389580, 10388216, 10387712, 10386357, 10387632, 10386965, 10387734, 10385828], "C": [10386311, 10385455, 10386427, 10385364, 10406538, 10385834, 10386051, 10386918, 10386327, 10386510, 10385417, 10385724, 10386116, 10409781, 10386107, 10386201, 10386650, 10404350, 10386786, 10387225], "D": [10385805, 10386369, 10385736, 10386160, 10387079, 10385785, 10386933, 10385679, 10386619, 10386454, 10386390, 10387127, 10386675, 10386195, 10385799, 10388002], "E": [10385000, 10384871, 10384905, 10385848, 10385056, 10385201, 10385198, 10387352, 10385145, 10385184, 10385731, 10384843, 10385458, 10387221, 10385405, 10384991, 10385094], "B": [10384855, 10385831, 10385265, 10386319, 10385276, 10385001, 10385225, 10386328, 10385038, 10384881, 10385688, 10386077, 10385299, 10385149, 10385037, 10385267, 10384933, 10388225]}, "name": "B. Group Photo 2  online mirror version ", "statement": "Many years have passed, and friends met at a party again. Technologies\r\nhave leaped forward since the last meeting, cameras with timer appeared\r\nand now it is not obligatory for one of the friends to stand with a\r\ncamera, and, thus, being absent on the photo.Simply speaking, the\r\nprocess of photographing can be described as follows. Each friend\r\noccupies a rectangle of pixels on the photo: the -th of them in a\r\nstanding state occupies a pixels wide and a pixels high rectangle. But\r\nalso, each person can lie down for the photo, and then he will occupy a\r\npixels wide and a pixels high rectangle.The total photo will have size ,\r\nwhere is the total width of all the people rectangles, and is the\r\nmaximum of the heights. The friends want to determine what minimum area\r\nthe group photo can they obtain if no more than of them can lie on the\r\nground (it would be strange if more than gentlemen lie on the ground\r\ntogether, isn\u2019t it?..)Help them to achieve this goal.\r\n", "solutions": ["#include <algorithm>\n#include <cassert>\n#include <cstring>\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\n#define FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define REP(i, n) FOR(i, 0, n)\n#define TRACE(x) cout << #x << \" = \" << x << endl\n#define _ << \" _ \" <<\n\ntypedef long long llint;\n\nconst int MAXN = 1010;\n\nint w[MAXN], h[MAXN];\n\nint main(void) {\n  int n;\n  scanf(\"%d\", &n);\n  REP(i, n) scanf(\"%d %d\", w+i, h+i);\n  \n  int sumw = accumulate(w, w + n, 0);\n  int maxh = *max_element(h, h + n);\n  int ans = sumw * maxh;\n  \n  for (int H = 1; H <= 1000; ++H) {\n    int cnt = 0;\n    static vector<int> v; v.clear();\n\n    int sumw = 0;\n    REP(i, n)\n      if (h[i] > H) {\n        if (w[i] > H) { cnt = n; break; }\n        cnt++;\n        sumw += h[i];\n      } else {\n        sumw += w[i];\n        if (w[i] <= H) v.push_back(w[i] - h[i]);\n      }\n    \n    if (cnt*2 > n) continue;\n\n    sort(v.begin(), v.end());\n    while ((cnt+1)*2 <= n && (int)v.size() && v.back() > 0) {\n      sumw -= v.back();\n      v.pop_back();\n      cnt++;\n    }\n\n    ans = min(ans, sumw * H);\n  }\n  \n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "sortings"], "dificulty": "1900", "interactive": false}