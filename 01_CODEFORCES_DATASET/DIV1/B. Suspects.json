{"link": "https://codeforces.com//contest/156/problem/B", "problemId": "960", "problem_idx": "B", "shortId": "156B", "contest_number": "156", "problem_submissions": {"E": [1251034, 1250912, 1253282, 1312001, 1252010, 1252212], "D": [1249184, 1247144, 1248677, 1244853, 1248432, 1249652, 1248827, 1249495, 1249499, 1249691, 1251015, 1250308, 1250503, 1250715, 1247775, 1249330, 1248752, 1249953], "C": [1246457, 1246202, 1245021, 1245780, 1246904, 1247167, 1247068, 1245810, 1248007, 1247482, 1246141, 1247596, 1248235, 1246808, 1249384, 1245140, 1248141, 1247379], "B": [1245938, 1245171, 1246054, 1247267, 1245759, 1246347, 1246009, 1246866, 1246408, 1246550, 1245203, 1246446, 1245623, 1245940, 1248731, 1247154, 1246738, 1246814], "A": [1244965, 1244119, 1244125, 1246346, 1244442, 1244222, 1247281, 1244463, 1247485, 1245043, 1244152, 1244905, 1244423, 1244550, 1252481, 1251048, 1252049]}, "name": "B. Suspects", "statement": "As Sherlock Holmes was investigating a crime, he identified suspects. He\r\nknows for sure that exactly one of them committed the crime. To find out\r\nwhich one did it, the detective lines up the suspects and numbered them\r\nfrom to . After that, he asked each one: \"Which one committed the\r\ncrime?\". Suspect number answered either \"The crime was committed by\r\nsuspect number \", or \"Suspect number didn\u2019t commit the crime\". Also, the\r\nsuspect could say so about himself ().Sherlock Holmes understood for\r\nsure that exactly answers were the truth and all other answers were a\r\nlie. Now help him understand this: which suspect lied and which one told\r\nthe truth?\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n#include <algorithm>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#define pb push_back\n#define mp make_pair\n#define sz(x) ((int)(x).size())\n\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef pair<int, int> pii;\n\nint main() {\n  #ifdef DEBUG\n  freopen(\"std.in\", \"r\", stdin);\n  freopen(\"std.out\", \"w\", stdout);\n  #endif\n\n  int n, m;\n  while (scanf(\"%d%d\", &n, &m) >= 1) {\n    vi t(n), f(n);\n    vi as(n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &as[i]);\n      if (as[i] > 0) t[as[i] - 1]++;\n      else f[-as[i] - 1]++;\n    }\n\n    int sf = 0;\n    for (int i = 0; i < n; i++)\n      sf += f[i];\n\n    int kcnt = 0;\n    vb ckill(n, false);\n    for (int kill = 0; kill < n; kill++) {\n      int ccnt = t[kill] + sf - f[kill];\n      if (ccnt != m) continue;\n      kcnt++;\n      ckill[kill] = true;\n    }\n    assert(kcnt >= 1);\n\n    for (int i = 0; i < n; i++) {\n      int x = abs(as[i]) - 1;\n\n      if (as[i] > 0) {\n        if (!ckill[x]) printf(\"Lie\\n\");\n        else if (kcnt == 1) printf(\"Truth\\n\");\n        else printf(\"Not defined\\n\");\n      } else {\n        if (!ckill[x]) printf(\"Truth\\n\");\n        else if (kcnt == 1) printf(\"Lie\\n\");\n        else printf(\"Not defined\\n\");\n      }\n    }\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "data structures", "implementation"], "dificulty": "1600", "interactive": false}