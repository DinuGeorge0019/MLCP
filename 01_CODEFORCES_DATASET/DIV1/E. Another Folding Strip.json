{
    "link": "https://codeforces.com//contest/2077/problem/E",
    "problemId": "3258034",
    "problem_idx": "E",
    "shortId": "2077E",
    "contest_number": "2077",
    "problem_submissions": {
        "G": [
            309832760,
            309860088,
            309851540,
            309848221,
            311207472,
            310643380,
            309915851,
            309944262
        ],
        "F": [
            309823042,
            309848959,
            309836201,
            309847924,
            309850803,
            309857022,
            309854713,
            309842987,
            309854239,
            310235363,
            310235052,
            309864534,
            311561393,
            309848336,
            309865507,
            309848201,
            309920332
        ],
        "E": [
            309814547,
            309822026,
            309803897,
            309812180,
            309819977,
            309821234,
            309826906,
            309814658,
            309814285,
            309826850,
            309828976,
            309810457,
            309817172,
            309822795,
            309821505,
            309823930,
            309833684,
            309841497
        ],
        "D": [
            309810661,
            309841330,
            309817779,
            309828860,
            309864595,
            309838978,
            309831379,
            309838725,
            309833102,
            309844316,
            309857259,
            309845857,
            309834684,
            309837147,
            309839781,
            309843697,
            309834330
        ],
        "C": [
            309796305,
            309810106,
            309790482,
            309800177,
            309798892,
            309797717,
            309811288,
            309792650,
            309808525,
            309807618,
            309801148,
            309800770,
            309804252,
            309798025,
            309803813,
            309813707,
            309813039
        ],
        "B": [
            309784641,
            309781213,
            309781563,
            309787242,
            309783611,
            309775002,
            309793111,
            309779586,
            309794861,
            309797121,
            309792810,
            309785991,
            309784888,
            309781524,
            309791774,
            309797996,
            309797135
        ],
        "A": [
            309769674,
            309774026,
            309772451,
            309770706,
            309770901,
            309768685,
            309779277,
            309769944,
            309780319,
            309777428,
            309775104,
            309774863,
            309769470,
            309769900,
            309773872,
            309773155,
            309785608
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/140505",
    "editorial": "Diagram\r\n",
    "name": "E. Another Folding Strip",
    "statement": "For an array b of length m, define f(b) as follows.Consider a 1\r\ntimes m strip, where all cells initially have darkness 0. You want to\r\ntransform it into a strip where the color at the i-th position has\r\ndarkness b_i. You can perform the following operation, which consists of\r\ntwo steps: Fold the paper at any line between two cells. You may fold as\r\nmany times as you like, or choose not to fold at all. Choose position to\r\ndrop the black dye. The dye permeates from the top and flows down to the\r\nbottom, increasing the darkness of all cells in its path by 1. After\r\ndropping the dye, you unfold the strip.Let f(b) be the minimum number of\r\noperations required to achieve the desired configuration. It can be\r\nproven that the goal can always be achieved in a finite number of\r\noperations.You are given an array a of length n. Evaluate\r\nsum_{l=1}^n\r\nsum_{r=l}^n f(a_l a_{l+1}\r\nldots a_r)modulo 998\r\n,244\r\n,353.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "math"
    ],
    "dificulty": "2700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\E. Another Folding Strip.json",
    "hint": [
        "Hint 1 Folding is basically alternating the parity of the indices.",
        "Hint 2 Maximum subarray sum."
    ]
}