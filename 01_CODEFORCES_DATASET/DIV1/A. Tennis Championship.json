{
    "link": "https://codeforces.com//contest/736/problem/A",
    "problemId": "82051",
    "problem_idx": "A",
    "shortId": "736A",
    "contest_number": "736",
    "problem_submissions": {
        "C": [
            22555337,
            22554506,
            22542338,
            22535831,
            22538132,
            22542963,
            22545295,
            22544856,
            22555696,
            22545920,
            22543329,
            22542401,
            22544023,
            22544088,
            22549626,
            22550878
        ],
        "E": [
            22551348,
            22559840,
            22556062,
            22550741,
            22535583,
            22555885,
            22560242,
            22554763,
            22557400,
            22557039,
            22555474,
            22555738,
            22555988,
            22544797,
            22548099
        ],
        "B": [
            22540910,
            22533406,
            22531522,
            22550856,
            22532550,
            22535729,
            22553163,
            22533593,
            22532530,
            22545935,
            22532493,
            22534671,
            22535087,
            22535221,
            22540506,
            22540155,
            22534429,
            22543621,
            22539284,
            22532660
        ],
        "D": [
            22539634,
            22548080,
            22543151,
            22542192,
            22547599,
            22543734,
            22549554,
            22547719,
            22543270,
            22554259,
            22553954,
            22555670,
            22555340
        ],
        "A": [
            22535135,
            22530967,
            22530408,
            22545237,
            22532700,
            22532341,
            22531205,
            22530536,
            22540413,
            22530773,
            22536724,
            22531871,
            22532439,
            22531278,
            22530654,
            22531077,
            22533541,
            22530767,
            22530574
        ]
    },
    "name": "A. Tennis Championship",
    "statement": "Famous Brazil city Rio de Janeiro holds a tennis tournament and Ostap\r\nBender doesn\u2019t want to miss this event. There will be players\r\nparticipating, and the tournament will follow knockout rules from the\r\nvery first game. That means, that if someone loses a game he leaves the\r\ntournament immediately.Organizers are still arranging tournament grid\r\n(i.e. the order games will happen and who is going to play with whom)\r\nbut they have already fixed one rule: two players can play against each\r\nother only if the number of games one of them has already played from\r\nthe number of games the other one has already played. Of course, both\r\nplayers had to win all their games in order to continue participating in\r\nthe tournament.Tournament hasn\u2019t started yet so the audience is a bit\r\nbored. Ostap decided to find out what is the maximum number of games the\r\nwinner of the tournament can take part in (assuming the rule above is\r\nused). However, it is unlikely he can deal with this problem without\r\nyour help.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<queue>\n#include<bitset>\n#include<utility>\n#include<functional>\n#include<iomanip>\n#include<sstream>\n#include<ctime>\n#include<cassert>\nusing namespace std;\n#define y0 y0z\n#define y1 y1z\n#define yn ynz\n#define j0 j0z\n#define j1 j1z\n#define jn jnz\n#define tm tmz\n#define buli(x) (__builtin_popcountll(x))\n#define bur0(x) (__builtin_ctzll(x))\n#define bul2(x) (63-__builtin_clzll(x))\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define fil(a,b) memset((a),(b),sizeof(a))\n#define cl(a) fil(a,0)\n#define siz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define foreach(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)\n#define rep(i,a,b) for (int i=(a),_ed=(b);i<_ed;i++)\n#define per(i,a,b) for (int i=(b)-1,_ed=(a);i>=_ed;i--)\n#define forg(i,gu) for (int i=gu;~i;i=e[i].next)\n#define pw(x) ((ll(1))<<(x))\n#define upmo(a,b) (((a)=((a)+(b))%mo)<0?(a)+=mo:(a))\n#define mmo(a,b) (((a)=1ll*(a)*(b)%mo)<0?(a)+=mo:(a))\nvoid getre(){int x=0;printf(\"%d\\n\",1/x);}\nvoid gettle(){int res=1;while(1)res<<=1;printf(\"%d\\n\",res);}\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpii;\ntemplate<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}\ntemplate<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}\ntemplate<typename N,typename PN>inline N flo(N a,PN b){return a>=0?a/b:-((-a-1)/b)-1;}\ntemplate<typename N,typename PN>inline N cei(N a,PN b){return a>0?(a-1)/b+1:-(-a/b);}\ntemplate<typename N>N gcd(N a,N b){return b?gcd(b,a%b):a;}\ntemplate<typename N>inline int sgn(N a){return a>0?1:(a<0?-1:0);}\n#if ( ( _WIN32 || __WIN32__ ) && __cplusplus < 201103L)\n#define lld \"%I64d\"\n#else\n#define lld \"%lld\"\n#endif\ninline void gn(long long&x){\n\tint sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');c=='-'?(sg=-1,x=0):(x=c-'0');\n\twhile((c=getchar())>='0'&&c<='9')x=x*10+c-'0';x*=sg;\n}\ninline void gn(int&x){long long t;gn(t);x=t;}\ninline void gn(unsigned long long&x){long long t;gn(t);x=t;}\ninline void gn(double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gn(long double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gs(char *s){scanf(\"%s\",s);}\ninline void gc(char &c){while((c=getchar())>126 || c<33);}\ninline void pc(char c){putchar(c);}\n#ifdef JCVB\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define debug(...)\n#endif\ntypedef long long ll;\ntypedef double db;\ninline ll sqr(ll a){return a*a;}\ninline db sqrf(db a){return a*a;}\nconst int inf=0x3f3f3f3f;\nconst db pi=3.14159265358979323846264338327950288L;\nconst db eps=1e-6;\n//const int mo=0;\n//int qp(int a,ll b){int n=1;do{if(b&1)n=1ll*n*a%mo;a=1ll*a*a%mo;}while(b>>=1);return n;}\n\nll f[1111];\nint main()\n{\n#ifdef JCVB\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tint _time_jc=clock();\n#endif\n\tf[0]=1,f[1]=2;\n\tfor (int i=2;i<=500;i++)f[i]=f[i-1]+f[i-2];\n\tll n;gn(n);\n\tint an;\n\tfor (int i=1;;i++){\n\t\tif(n>=f[i])an=i;\n\t\telse break;\n\t}\n\tcout<<an<<endl;\n\n\n#ifdef JCVB\n\tdebug(\"time: %d\\n\",int(clock()-_time_jc));\n#endif\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "math"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Tennis Championship.json",
    "editorial_link": "https://codeforces.com//blog/entry/48659",
    "editorial": "Let us solve the inverse problem: at least how many competitors should\r\nbe, if the champion will have n matches. Then there\u00e2\u0080\u0099s obvious reccurrent\r\nformula: f(n+1)=f(n)+f(n-1) (Let us make the draw in a way, where the\r\nchampion will play n matches to advance to finals and the runner-up\r\nplayed (n-1) matches to advance the final). So, we have to find the\r\nindex of maximal fibunacci number which is no more that number in the\r\ninput.\r\n"
}