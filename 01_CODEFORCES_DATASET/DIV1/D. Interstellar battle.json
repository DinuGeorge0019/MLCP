{"link": "https://codeforces.com//contest/1045/problem/D", "problemId": "223466", "problem_idx": "D", "shortId": "1045D", "contest_number": "1045", "problem_submissions": {"E": [43261410, 43577517], "J": [43258702, 43260133, 43575980, 43263093, 43266033], "A": [43255060, 43256216, 43263322, 43263783, 43258806, 43275613], "D": [43251490, 43264794, 43257475, 43253807, 43257410, 43253327, 43248880], "C": [43250229, 43244156, 43255852, 43252661, 43258515, 43251235, 43259397], "G": [43247867, 43248087, 43251069, 43250948, 43255077, 43249900, 43251360], "H": [43246289, 43252595, 43260022, 43258468, 43261064, 43264435, 43263084], "B": [43243648, 43248788, 43247063, 43264324, 43264189, 43246587, 43256450, 43248333, 43254638], "I": [43243009, 43244706, 43243112, 43242671, 43255452, 43243089, 43243594], "F": [43577952]}, "name": "D. Interstellar battle", "statement": "In the intergalactic empire Bubbledom there are N planets, of which some\r\npairs are directly connected by two-way wormholes. There are N-1\r\nwormholes. The wormholes are of extreme religious importance in\r\nBubbledom, a set of planets in Bubbledom consider themselves one\r\nintergalactic kingdom if and only if any two planets in the set can\r\nreach each other by traversing the wormholes. You are given that\r\nBubbledom is one kingdom. However, Bubbledom is facing a powerful enemy\r\nalso possessing teleportation technology. The enemy attacks every night,\r\nand the government of Bubbledom retakes all the planets during the day.\r\nIn a single attack, the enemy attacks every planet of Bubbledom at once,\r\nbut some planets are more resilient than others. Planets are number 0,1,\r\n,N-1 and the planet i will fall with probability p_i. Before every night\r\n(including the very first one), the government reinforces or weakens the\r\ndefenses of a single planet.The government of Bubbledom is interested in\r\nthe following question: what is the expected number of intergalactic\r\nkingdoms Bubbledom will be split into, after a single enemy attack\r\n(before they get a chance to rebuild)?\r\n", "solutions": ["#ifndef BZ\n#pragma GCC optimize \"-O3\"\n#endif\n#include <bits/stdc++.h>\n\n#define FASTIO\n#define ALL(v) (v).begin(), (v).end()\n#define rep(i, l, r) for (int i = (l); i < (r); ++i)\n\n#ifdef FASTIO\n#define scanf abacaba\n#define printf abacaba\n#endif\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\n\nusing namespace std;\n\n\n/*\nll pw(ll a, ll b) {\n\tll ans = 1; while (b) {\n\t\twhile (!(b & 1)) b >>= 1, a = (a * a) % MOD;\n\t\tans = (ans * a) % MOD, --b;\n\t} return ans;\n}\n*/\nconst int MAXN = 120000;\nconst int SQ = 300;\n\nint n;\nstring s;\nld p[MAXN];\n\nld read() {\n\tcin >> s;\n\treturn s[0] - '0' + 0.1 * (s[2] - '0') + 0.01 * (s[3] - '0');\n}\n\nvector<int> eds[MAXN];\nint fl[MAXN];\nld cs[MAXN];\nvector<int> eds2[MAXN];\n\nint main() {\n#ifdef FASTIO\n\tios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n#endif\n\tcout.setf(ios::fixed);\n\tcout.precision(6);\n\tcin >> n;\n\tld ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tp[i] = read();\n\t\tp[i] = 1 - p[i];\n\t\tans += p[i];\n\t}\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tans -= p[a] * p[b];\n\t\teds[a].push_back(b);\n\t\teds[b].push_back(a);\n\t\tcs[a] += p[b];\n\t\tcs[b] += p[a];\n\t}\n\tfor (int i = 0; i < n; ++i)\n\t\tif (eds[i].size() > SQ)\n\t\t\tfl[i] = 1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int x: eds[i])\n\t\t\tif (fl[x])\n\t\t\t\teds2[i].push_back(x);\n\t}\n\tint q;\n\tcin >> q;\n\tfor (int i = 0; i < q; ++i) {\n\t\tint x;\n\t\tcin >> x;\n\t\tld np = 1 - read();\n\t\tans += np - p[x];\n\t\tif (fl[x]) {\n\t\t\tans -= (np - p[x]) * cs[x];\n\t\t}\n\t\telse {\n\t\t\tfor (int y: eds[x])\n\t\t\t\tans -= (np - p[x]) * p[y];\n\t\t}\n\t\tfor (int y: eds2[x])\n\t\t\tcs[y] += (np - p[x]);\n\t\tp[x] = np;\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}\n\n\n"], "input": "", "output": "", "tags": ["math", "probabilities", "trees"], "dificulty": "2200", "interactive": false}