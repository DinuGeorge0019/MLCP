{
    "link": "https://codeforces.com//contest/736/problem/E",
    "problemId": "82055",
    "problem_idx": "E",
    "shortId": "736E",
    "contest_number": "736",
    "problem_submissions": {
        "C": [
            22555337,
            22554506,
            22542338,
            22535831,
            22538132,
            22542963,
            22545295,
            22544856,
            22555696,
            22545920,
            22543329,
            22542401,
            22544023,
            22544088,
            22549626,
            22550878
        ],
        "E": [
            22551348,
            22559840,
            22556062,
            22550741,
            22535583,
            22555885,
            22560242,
            22554763,
            22557400,
            22557039,
            22555474,
            22555738,
            22555988,
            22544797,
            22548099
        ],
        "B": [
            22540910,
            22533406,
            22531522,
            22550856,
            22532550,
            22535729,
            22553163,
            22533593,
            22532530,
            22545935,
            22532493,
            22534671,
            22535087,
            22535221,
            22540506,
            22540155,
            22534429,
            22543621,
            22539284,
            22532660
        ],
        "D": [
            22539634,
            22548080,
            22543151,
            22542192,
            22547599,
            22543734,
            22549554,
            22547719,
            22543270,
            22554259,
            22553954,
            22555670,
            22555340
        ],
        "A": [
            22535135,
            22530967,
            22530408,
            22545237,
            22532700,
            22532341,
            22531205,
            22530536,
            22540413,
            22530773,
            22536724,
            22531871,
            22532439,
            22531278,
            22530654,
            22531077,
            22533541,
            22530767,
            22530574
        ]
    },
    "name": "E. Chess Championship",
    "statement": "Ostap is preparing to play chess again and this time he is about to\r\nprepare. Thus, he was closely monitoring one recent chess tournament.\r\nThere were players participating and each pair of players played exactly\r\none game. The victory gives points, draw points, lose points.Ostap is\r\nlazy, so he never tries to remember the outcome of each game. Instead,\r\nhe computes the total number of points earned by each of the players\r\n(the sum of his points in all games which he took part in), sort these\r\nvalue in non-ascending order and then remembers first integers in this\r\nlist.Now the Great Strategist Ostap wonders whether he remembers\r\neverything correct. He considers that he is correct if there exists at\r\nleast one tournament results table such that it will produce the given\r\nintegers. That means, if we count the sum of points for each player,\r\nsort them and take first elements, the result will coincide with what\r\nOstap remembers. Can you check if such table exists?\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<queue>\n#include<bitset>\n#include<utility>\n#include<functional>\n#include<iomanip>\n#include<sstream>\n#include<ctime>\n#include<cassert>\nusing namespace std;\n#define y0 y0z\n#define y1 y1z\n#define yn ynz\n#define j0 j0z\n#define j1 j1z\n#define jn jnz\n#define tm tmz\n#define buli(x) (__builtin_popcountll(x))\n#define bur0(x) (__builtin_ctzll(x))\n#define bul2(x) (63-__builtin_clzll(x))\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define fil(a,b) memset((a),(b),sizeof(a))\n#define cl(a) fil(a,0)\n#define siz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define foreach(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)\n#define rep(i,a,b) for (int i=(a),_ed=(b);i<_ed;i++)\n#define per(i,a,b) for (int i=(b)-1,_ed=(a);i>=_ed;i--)\n#define forg(i,gu) for (int i=gu;~i;i=e[i].next)\n#define pw(x) ((ll(1))<<(x))\n#define upmo(a,b) (((a)=((a)+(b))%mo)<0?(a)+=mo:(a))\n#define mmo(a,b) (((a)=1ll*(a)*(b)%mo)<0?(a)+=mo:(a))\nvoid getre(){int x=0;printf(\"%d\\n\",1/x);}\nvoid gettle(){int res=1;while(1)res<<=1;printf(\"%d\\n\",res);}\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpii;\ntemplate<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}\ntemplate<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}\ntemplate<typename N,typename PN>inline N flo(N a,PN b){return a>=0?a/b:-((-a-1)/b)-1;}\ntemplate<typename N,typename PN>inline N cei(N a,PN b){return a>0?(a-1)/b+1:-(-a/b);}\ntemplate<typename N>N gcd(N a,N b){return b?gcd(b,a%b):a;}\ntemplate<typename N>inline int sgn(N a){return a>0?1:(a<0?-1:0);}\n#if ( ( _WIN32 || __WIN32__ ) && __cplusplus < 201103L)\n#define lld \"%I64d\"\n#else\n#define lld \"%lld\"\n#endif\ninline void gn(long long&x){\n\tint sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');c=='-'?(sg=-1,x=0):(x=c-'0');\n\twhile((c=getchar())>='0'&&c<='9')x=x*10+c-'0';x*=sg;\n}\ninline void gn(int&x){long long t;gn(t);x=t;}\ninline void gn(unsigned long long&x){long long t;gn(t);x=t;}\ninline void gn(double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gn(long double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gs(char *s){scanf(\"%s\",s);}\ninline void gc(char &c){while((c=getchar())>126 || c<33);}\ninline void pc(char c){putchar(c);}\n#ifdef JCVB\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define debug(...)\n#endif\ntypedef long long ll;\ntypedef double db;\ninline ll sqr(ll a){return a*a;}\ninline db sqrf(db a){return a*a;}\nconst int inf=0x3f3f3f3f;\nconst db pi=3.14159265358979323846264338327950288L;\nconst db eps=1e-6;\n//const int mo=0;\n//int qp(int a,ll b){int n=1;do{if(b&1)n=1ll*n*a%mo;a=1ll*a*a%mo;}while(b>>=1);return n;}\n\nint n,m;\nint a[6333];\nint id[6333];\nint presum[6333];\nint tot;\n\nint ans[3333][3333];\n\n/*struct node{\n\tint id,x,lef;\n};\nint operator<(const node&a,const node&b){\n\treturn a.x>b.x;\n}\npriority_queue<node>qu;*/\n\nvector<int>in[6444],out[6444];\nint ok[6666];\nint tmp[6666],tmpid[6666];\nint main()\n{\n#ifdef JCVB\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tint _time_jc=clock();\n#endif\n\tgn(n);gn(m);\n\trep(i,1,m+1)gn(a[i]);\n\tsort(a+1,a+1+m);\n\treverse(a+1,a+1+m);\n\ttot=n*(n-1);\n\trep(i,1,m+1){\n\t\tpresum[i]=a[i]+presum[i-1];\n\t}\n\tif(presum[m]>tot || presum[m]+(n-m)*a[m]<tot){\n\t\tprintf(\"no\\n\");\n\t\treturn 0;\n\t}\n\tif(m!=n){\n\t\tint lef=tot-presum[m];\n\t\tint q=lef/(n-m);\n\t\trep(i,m+1,n+1)a[i]=q;\n\t\tint r=lef%(n-m);\n\t\trep(i,m+1,m+r+1)a[i]++;\n\t}\n\tint su=0;\n\tfor (int i=1;i<=n;i++){\n\t\tsu+=a[n-i+1];\n\t\tif(su<i*(i-1)){\n\t\t\tprintf(\"no\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"yes\\n\");\n\trep(i,1,n+1)id[i]=i;\n\n\trep(i,1,n){\n\t\tmemset(ok,0,sizeof(ok));\n\t\tint fen=a[i];\n\t\tint lef=n-i;\n\t\t/*while(!qu.empty())qu.pop();*/\n\t\trep(j,0,2*(n-i+1)+1)in[j].clear();\n\t\trep(j,i+1,n+1){\n\t\t\tin[a[j]].pb(j);\n\t\t}\n\t\tint curma=a[i+1];\n\t\tfen=2*lef-fen;\n\t\twhile(fen){\n\t\t\twhile(in[curma].empty())curma--;\n\t\t\tint x=in[curma].back();\n\t\t\tin[curma].pop_back();\n\t\t\tif(ok[x]!=2){\n\t\t\t\tok[x]++;\n\t\t\t\tfen--;\n\t\t\t\tin[curma-1].pb(x);\n\t\t\t}else{\n\t\t\t\tout[curma].pb(x);\n\t\t\t}\n\t\t}\n\t\trep(j,i+1,n+1){\n\t\t\tans[id[i]][id[j]]=ok[j];\n\t\t\tans[id[j]][id[i]]=2-ok[j];\n\t\t}\n\t\tint tmptot=0;\n\t\tfor (int j=a[i+1];j>=0;j--){\n\t\t\twhile(!in[j].empty()){\n\t\t\t\tint x=in[j].back();\n\t\t\t\tin[j].pop_back();\n\t\t\t\ttmp[++tmptot]=x;\n\t\t\t\ta[tmptot+i]=j;\n\t\t\t}\n\t\t\twhile(!out[j].empty()){\n\t\t\t\tint x=out[j].back();\n\t\t\t\tout[j].pop_back();\n\t\t\t\ttmp[++tmptot]=x;\n\t\t\t\ta[tmptot+i]=j;\n\t\t\t}\n\t\t}\n\t\trep(t,1,tmptot+1){\n\t\t\ttmpid[t+i]=id[tmp[t]];\n\t\t}\n\t\trep(t,1,tmptot+1){\n\t\t\tid[t+i]=tmpid[t+i];\n\t\t}\n\t}\n\trep(i,1,n+1){\n\t\trep(j,1,n+1){\n\t\t\tif(i==j)putchar('X');\n\t\t\telse if(ans[i][j]==2)putchar('L');\n\t\t\telse if(ans[i][j]==1)putchar('D');\n\t\t\telse putchar('W');\n\t\t}\n\t\tputchar('\\n');\n\t}\n\n#ifdef JCVB\n\tdebug(\"time: %d\\n\",int(clock()-_time_jc));\n#endif\n\treturn 0;\n}\n\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "flows",
        "greedy",
        "math"
    ],
    "dificulty": "2900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\E. Chess Championship.json",
    "editorial_link": "https://codeforces.com//blog/entry/48659",
    "editorial": "Suppose set (a1,a2,...,am). Then the list is valid if set {2m-2, 2m-4,\r\n2m-6, ..., 0} majorizes the set {a1,a2,...,am}. Let us prove it! Part 1:\r\nSuppose n<=m. Top n players will play n(n-1)/2 games with each other and\r\nn(m-n) games with low-ranked contestants. In these games they will\r\ncollect 2*n(n-1)/2 points (in each game there is exactly 2 points) for\r\nsure and at most 2*n*(m-n) points in games with others. So they will\r\nhave at most 2*(n*(n-1)/2+n*(m-n))=2*((m-1)+(m-2)+...+(m-n)) points. Now\r\nconstruction: Let\u00e2\u0080\u0099s construct results of participant with most points\r\nand then use recursion. Suppose the winner has even number of points\r\n(2*(m-n) for some n). Then we consider that he lost against contestants\r\nholding 2,3,4,...,n places and won against others. If champion had odd\r\nnumber of points (2*(m-n)-1 for some n), then we will construct the same\r\nresults supposing that he draw with (n+1)th player instead of winning\r\nagianst him. It is easy to check that majorization is invariant, so in\r\nthe end we will have to deal with 1 men competition, when set of scores\r\n{a1} is majorized by set {0}. So a1=0, and there is obvious construction\r\nfor this case. So we have such an algorithm: we search for a compiment\r\nset which is majorized by {2m-2,2m-4,...,0}. If there is no such set\r\nanswer is NO. Otherwise answer is YES and we construct our table as\r\nshown above. Assymptosy is O(m^2logm) (calling recursion m times,\r\nsorting the array (we can lose non-decreasing order because of poor\r\nresults) and then passing on it linearly.\r\n"
}