{"link": "https://codeforces.com//contest/1149/problem/E", "problemId": "337473", "problem_idx": "E", "shortId": "1149E", "contest_number": "1149", "problem_submissions": {"E": [53524396, 53522321, 53522530, 61434525, 53525980, 53522711, 53522606, 53524594], "D": [53521434, 53526235, 53529930, 53518623, 53524984, 53524746, 53526493, 53518787, 53526308, 53526383, 53526628, 53531041, 53521860, 53522269, 53523326, 53523444], "C": [53514328, 53518841, 53519044, 53525230, 53518371, 53511307, 53515929, 53520465, 53525523, 53518004, 53522574, 53520365, 53530616, 53530825], "B": [53508704, 53508119, 53512032, 53509531, 53508225, 53520230, 53523389, 53511171, 53521543, 53521758, 53512839, 53514480, 53510228, 53510444, 53509691, 53512920, 53514615, 53513077, 53514341], "A": [53502075, 53501727, 53502902, 53502745, 53502146, 53501598, 53502759, 53502876, 53503703, 53505214, 53502973, 53503023, 53501694, 53501955, 53501687, 53504126, 53504632, 53504664, 53501821]}, "name": "E. Election Promises", "statement": "In Byteland, there are two political parties fighting for seats in the\r\nParliament in the upcoming elections: and . As they want to convince as\r\nmany citizens as possible to cast their votes on them, they keep\r\npromising lower and lower taxes.There are n cities in Byteland,\r\nconnected by m one-way roads. Interestingly enough, the road network has\r\nno cycles it\u2019s impossible to start in any city, follow a number of\r\nroads, and return to that city. Last year, citizens of the i-th city had\r\nto pay h_i bourles of tax.Parties will now alternately hold the election\r\nconventions in various cities. If a party holds a convention in city v,\r\nthe party needs to the taxes in this city to a non-negative integer\r\namount of bourles. However, at the same time they can arbitrarily modify\r\nthe taxes in each of the cities that can be reached from v using a\r\nsingle road. The only condition that must be fulfilled that the tax in\r\neach city has to remain a non-negative integer amount of bourles.The\r\nfirst party to hold the convention is . It\u2019s predicted that the party to\r\nhold the last convention will win the election. Can win regardless of \u2019s\r\nmoves?\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int N = 200200;\nvector<int> g[N];\nint ord[N];\nint ordSz;\nbool used[N];\nint n, m;\nint a[N];\nint b[N];\nint c[N];\nbool mex[N];\n\nvoid dfs(int v) {\n\tused[v] = 1;\n\tfor (int u : g[v]) {\n\t\tif (used[u]) continue;\n\t\tdfs(u);\n\t}\n\tord[ordSz++] = v;\n}\n\nvoid printAns(int v) {\n\ta[v] ^= c[b[v]];\n\tc[b[v]] = 0;\n\tfor (int u : g[v]) {\n\t\ta[u] ^= c[b[u]];\n\t\tc[b[u]] = 0;\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%d \", a[i]);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\twhile(m--) {\n\t\tint v, u;\n\t\tscanf(\"%d%d\", &v, &u);\n\t\tv--;u--;\n\t\tg[v].push_back(u);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (used[i]) continue;\n\t\tdfs(i);\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tint v = ord[i];\n\t\tfor (int j = 0; j <= (int)g[v].size(); j++)\n\t\t\tmex[j] = 0;\n\t\tfor (int u : g[v])\n\t\t\tmex[b[u]] = 1;\n\t\tb[v] = 0;\n\t\twhile(mex[b[v]]) b[v]++;\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tc[b[i]] ^= a[i];\n\tint mx = -1;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (c[i] != 0)\n\t\t\tmx = i;\n\t}\n\tif (mx == -1) {\n\t\tprintf(\"LOSE\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"WIN\\n\");\n\tfor (int v = 0; v < n; v++) {\n\t\tif (b[v] != mx) continue;\n\t\tif ((a[v] ^ c[mx]) > a[v]) continue;\n\t\tprintAns(v);\n\t\treturn 0;\n\t}\n\tthrow;\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["games", "graphs"], "dificulty": "3200", "interactive": false}