{
    "link": "https://codeforces.com//contest/1142/problem/C",
    "problemId": "322163",
    "problem_idx": "C",
    "shortId": "1142C",
    "contest_number": "1142",
    "problem_submissions": {
        "D": [
            52052698,
            52044696,
            52050424,
            52048816,
            52048203,
            52050242,
            52051279,
            52044155,
            52053707,
            52051199,
            52050499,
            52052944,
            52052302,
            52053535,
            52051490,
            52049907
        ],
        "E": [
            52047622,
            52057339,
            52048974,
            77087643,
            52277900,
            52277787,
            52050784
        ],
        "C": [
            52040660,
            52041212,
            52036496,
            52039629,
            52044262,
            52039609,
            52039348,
            52038404,
            52053341,
            52038044,
            52046718,
            52044023,
            52041812,
            52045982,
            52050483,
            52043132,
            52044496,
            52082020
        ],
        "B": [
            52036028,
            52037384,
            52034327,
            52035419,
            52038173,
            52037529,
            52042911,
            52035003,
            52038458,
            52035088,
            52037475,
            52037895,
            52038479,
            52041354,
            52037902,
            52038519,
            52055164,
            52037338
        ],
        "A": [
            52032007,
            52031522,
            52030850,
            52033382,
            52032139,
            52033225,
            52032107,
            52040214,
            52033698,
            52034088,
            52034385,
            52034757,
            52033255,
            52055588,
            52032995,
            52035070
        ]
    },
    "name": "C. U2",
    "statement": "Recently Vasya learned that, given two points with different x\r\ncoordinates, you can draw through them exactly one parabola with\r\nequation of type y = x^2 + bx + c, where b and c are reals. Let\u2019s call\r\nsuch a parabola an U-shaped one.Vasya drew several distinct points with\r\ninteger coordinates on a plane and then drew an U-shaped parabola\r\nthrough each pair of the points that have different x coordinates. The\r\npicture became somewhat messy, but Vasya still wants to count how many\r\nof the parabolas drawn don\u2019t have any drawn point inside their internal\r\narea. Help Vasya.The internal area of an U-shaped parabola is the part\r\nof the plane that lies strictly above the parabola when the y axis is\r\ndirected upwards.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nstruct Point {\n\tll x, y;\n\n\tPoint() : x(), y() {}\n\tPoint(ll _x, ll _y) : x(_x), y(_y) {}\n\n\tPoint operator + (const Point &a) const {\n\t\treturn Point(x + a.x, y + a.y);\n\t}\n\tPoint operator - (const Point &a) const {\n\t\treturn Point(x - a.x, y - a.y);\n\t}\n\tll operator * (const Point &a) const {\n\t\treturn x * a.y - y * a.x;\n\t}\n\n\tdouble len() const {\n\t\treturn sqrtl((ld)x * x + (ld)y * y);\n\t}\n\n\tbool operator < (const Point &a) const {\n\t\tif (x != a.x) return x < a.x;\n\t\treturn y < a.y;\n\t}\n};\n\nconst int N = 100100;\nint n;\nPoint a[N];\nPoint h[N];\nint m;\n\nbool cmp(const Point &v, const Point &u) {\n\tll x = v * u;\n\tif (x != 0) return x > 0;\n\treturn v.len() < u.len();\n}\n\nvoid graham() {\n\tsort(a, a + n, cmp);\n\tfor (int i = 0; i < n; i++) {\n\t\twhile(m > 1 && (a[i] - h[m - 1]) * (a[i] - h[m - 2]) >= 0) m--;\n\t\th[m++] = a[i];\n\t}\n}\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tll x, y;\n\t\tscanf(\"%lld%lld\", &x, &y);\n\t\ta[i] = Point(x, y - x * x);\n\t}\n\tsort(a, a + n);\n\tfor (int i = n - 1; i >= 0; i--)\n\t\ta[i] = a[i] - a[0];\n\tgraham();\n\th[m] = h[0];\n\n\tint ans = 0;\n\tfor (int i = 0; i < m; i++) {\n\t\tif (h[i + 1].x < h[i].x)\n\t\t\tans++;\n\t}\n\tprintf(\"%d\\n\", ans);\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. U2.json",
    "editorial_link": "https://codeforces.com//blog/entry/66301",
    "editorial": "Let\u00e2\u0080\u0099s rewrite parabola equation as . This means, that if you change each\r\npoint to , then the parabolas will turn into straight lines, and the\r\ntask will be reduced to constructing a top part of convex hull on the\r\nobtained points and calculate the number of segments on it.\r\n"
}