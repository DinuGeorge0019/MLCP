{
    "link": "https://codeforces.com//contest/1641/problem/A",
    "problemId": "1306244",
    "problem_idx": "A",
    "shortId": "1641A",
    "contest_number": "1641",
    "problem_submissions": {
        "D": [
            147518709,
            147518438,
            147518414,
            147427811,
            147454243,
            147448667,
            147443879,
            147448778,
            147461315,
            147449736,
            147438286,
            147472049,
            147446117,
            147443730,
            147449435,
            147452074,
            147451905,
            147452006,
            147454020,
            147456098,
            147454778,
            147430439
        ],
        "F": [
            147463572,
            147488364,
            147487709,
            147487635,
            147487566,
            147487511,
            147487448,
            147487273,
            147474513,
            147473910,
            147473584,
            147541615
        ],
        "E": [
            147445838,
            147446189,
            147454919,
            147456452,
            147460049,
            147450489,
            147462542,
            147543257,
            147542937,
            147453651,
            147456356,
            147459732,
            147462090,
            147455497,
            147527427,
            147590875
        ],
        "B": [
            147438181,
            147420165,
            147422523,
            147421140,
            147420036,
            147420813,
            147426049,
            147460937,
            147441628,
            147446219,
            147424792,
            147434886,
            147431843,
            147422293,
            147424883,
            147440401
        ],
        "C": [
            147435041,
            147431185,
            147429914,
            147434109,
            147426743,
            147452293,
            147436064,
            147458110,
            147432571,
            147432541,
            147431796,
            147432454,
            147435151,
            147433502,
            147424256,
            147417819,
            147434463,
            147437219,
            147451475
        ],
        "A": [
            147414901,
            147414810,
            147414544,
            147414530,
            147414675,
            147414742,
            147414833,
            147461626,
            147414843,
            147414962,
            147414590,
            147414549,
            147415904,
            147414474,
            147414750,
            147414483,
            147415173,
            147414668,
            147414647
        ]
    },
    "name": "A. Great Sequence",
    "statement": "A sequence of positive integers is called for a positive integer x, if\r\nwe can split it into pairs in such a way that in each pair the first\r\nnumber multiplied by x is equal to the second number. More formally, a\r\nsequence a of size n is great for a positive integer x, if n is even and\r\nthere exists a permutation p of size n, such that for each i (1\r\nle i\r\nle\r\nfrac{n}{2}) a_{p_{2i-1}}\r\ncdot x = a_{p_{2i}}. Sam has a sequence a and a positive integer x. Help\r\nhim to make the sequence great: find the minimum possible number of\r\npositive integers that should be added to the sequence a to make it\r\ngreat for the number x.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 23.02.2022 13:04:00       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n, x;\n    cin >> n >> x;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n    vector<bool> used(n, false);\n    int ans = 0;\n    int j = n - 1;\n    for (int i = n - 1; i >= 0; i--) {\n      if (used[i]) {\n        continue;\n      }\n      if (a[i] % x == 0) {\n        int f = a[i] / x;\n        while (j >= 0 && (used[j] || a[j] > f)) {\n          j -= 1;\n        }\n        if (j >= 0 && !used[j] && a[j] == f) {\n          used[i] = true;\n          used[j] = true;\n          ans += 1;\n        }\n      }\n    }\n    cout << n - 2 * ans << '\\n';\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Great Sequence.json",
    "editorial_link": "https://codeforces.com//blog/entry/100249",
    "editorial": "Let's look at the minimal integer in our multiset. Since it can be matched with only one integer, we need to create such pair. Thus, we can maintain the current multiset. We need to take the minimal element out of it (and delete it from it), find a pair for it, and delete it from the multiset if such pair exists, or add 1 to the answer if there is no such pair."
}