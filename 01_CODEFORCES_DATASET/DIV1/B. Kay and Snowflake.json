{"link": "https://codeforces.com//contest/685/problem/B", "problemId": "63493", "problem_idx": "B", "shortId": "685B", "contest_number": "685", "problem_submissions": {"D": [18684968, 18683037, 18681924, 18684130, 18684858, 18675255, 18679526, 18679808, 18682052, 18681014, 18682178, 18675901, 18679039, 18766980, 18685989, 18678764, 18679061], "E": [18680021, 18684845, 18678334, 18685890, 18682877, 18680554, 18681882, 18681692, 18684390, 18678520, 18684936, 18720222, 18691735, 18673504, 18680472, 18683676], "C": [18677291, 18679523, 18681119, 18679602, 18685346, 19679131, 18684317, 18682713, 18688360], "B": [18672960, 18674692, 18671800, 18672771, 18680872, 18678053, 18673109, 18673699, 18678361, 18684612, 18675812, 18678146, 19679139, 19641621, 18676260, 18675658, 18675674, 18671554, 18673419, 18674754, 18676154], "A": [18671402, 18670567, 18669065, 18670159, 18670329, 18681950, 18668946, 18671121, 18669783, 18686475, 18678918, 18676980, 19641683, 18673416, 18767003, 18671711, 18682810, 18674563, 18668359, 18672213]}, "name": "B. Kay and Snowflake", "statement": "After the piece of a devilish mirror hit the Kay\u2019s eye, he is no longer\r\ninterested in the beauty of the roses. Now he likes to watch\r\nsnowflakes.Once upon a time, he found a huge snowflake that has a form\r\nof the tree (connected acyclic graph) consisting of nodes. The root of\r\ntree has index . Kay is very interested in the structure of this\r\ntree.After doing some research he formed queries he is interested in.\r\nThe -th query asks to find a centroid of the subtree of the node . Your\r\ngoal is to answer all queries. of a node is a part of tree consisting of\r\nthis node and all it\u2019s descendants (direct or not). In other words,\r\nsubtree of node is formed by nodes , such that node is present on the\r\npath from to root. of a tree (or a subtree) is a node, such that if we\r\nerase it from the tree, the maximum size of the connected component will\r\nbe at least two times smaller than the size of the initial tree (or a\r\nsubtree).\r\n", "solutions": ["#include<stdio.h>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<queue>\n#include<bitset>\n#include<utility>\n#include<functional>\n#include<iomanip>\n#include<sstream>\n#include<ctime>\n#include<cassert>\nusing namespace std;\n#define y0 y0z\n#define y1 y1z\n#define yn ynz\n#define j0 j0z\n#define j1 j1z\n#define jn jnz\n#define tm tmz\n#define buli(x) (__builtin_popcountll(x))\n#define bur0(x) (__builtin_ctzll(x))\n#define bul2(x) (63-__builtin_clzll(x))\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define fil(a,b) memset((a),(b),sizeof(a))\n#define cl(a) fil(a,0)\n#define siz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define foreach(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)\n#define rep(i,a,b) for (int i=(a),_ed=(b);i<_ed;i++)\n#define per(i,a,b) for (int i=(b)-1,_ed=(a);i>=_ed;i--)\n#define pw(x) ((ll(1))<<(x))\n#define upmo(a,b) (((a)=((a)+(b))%mo)<0?(a)+=mo:(a))\n#define mmo(a,b) (((a)=1ll*(a)*(b)%mo)<0?(a)+=mo:(a))\nvoid getre(){int x=0;printf(\"%d\\n\",1/x);}\nvoid gettle(){int res=1;while(1)res<<=1;printf(\"%d\\n\",res);}\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpii;\ntemplate<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}\ntemplate<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}\ntemplate<typename N,typename PN>inline N flo(N a,PN b){return a>=0?a/b:-((-a-1)/b)-1;}\ntemplate<typename N,typename PN>inline N cei(N a,PN b){return a>0?(a-1)/b+1:-(-a/b);}\ntemplate<typename N>N gcd(N a,N b){return b?gcd(b,a%b):a;}\ntemplate<typename N>inline int sgn(N a){return a>0?1:(a<0?-1:0);}\n#if ( ( _WIN32 || __WIN32__ ) && __cplusplus < 201103L)\n    #define lld \"%I64d\"\n#else\n    #define lld \"%lld\"\n#endif\ninline void gn(long long&x){\n\tint sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');c=='-'?(sg=-1,x=0):(x=c-'0');\n\twhile((c=getchar())>='0'&&c<='9')x=x*10+c-'0';x*=sg;\n}\ninline void gn(int&x){long long t;gn(t);x=t;}\ninline void gn(unsigned long long&x){long long t;gn(t);x=t;}\ninline void gn(double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gn(long double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gs(char *s){scanf(\"%s\",s);}\ninline void gc(char &c){while((c=getchar())>126 || c<33);}\ninline void pc(char c){putchar(c);}\n#ifdef JCVB\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define debug(...) \n#endif\ntypedef long long ll;\ntypedef double db;\ninline ll sqr(ll a){return a*a;}\ninline db sqrf(db a){return a*a;}\nconst int inf=0x3f3f3f3f;\nconst db pi=3.14159265358979323846264338327950288L;\nconst db eps=1e-6;\n//const int mo=0;\n//int qp(int a,ll b){int n=1;do{if(b&1)n=1ll*n*a%mo;a=1ll*a*a%mo;}while(b>>=1);return n;}\n\n\n// manually set n = number of vertices \n// vertex index from 1 to n\n// first call tree_init();\n// ae(u,v) only one direction\n\nconst int TREE_MAXV=300000+5;\nstruct edge{int v,next;}e[TREE_MAXV*2];int g[TREE_MAXV],etot;\nint qu[TREE_MAXV],pre[TREE_MAXV];\nint n;\nint sz[333333];\nint ans[333333];\nvoid ae(int u,int v){\n\te[etot].v=v;\n\te[etot].next=g[u];g[u]=etot++;\n}\nvoid bfs(int rt){\n\tint p=0,q=0;\n\tpre[rt]=0;\n\tqu[q++]=rt;\n\twhile(p!=q){\n\t\tint u=qu[p++];\n\t\tfor (int i=g[u];~i;i=e[i].next)if(e[i].v!=pre[u]){\n\t\t\tpre[e[i].v]=u;\n\t\t\tqu[q++]=e[i].v;\n\t\t}\n\t}\n\tfor (int i=q-1;i>=0;i--){\n\t\tint u=qu[i];\n\t\tsz[u]++;\n\t\tif(u!=rt){\n\t\t\tsz[pre[u]]+=sz[u];\n\t\t}\n\t}\n}\nvoid tree_init(){\n\tstatic bool ini=0;\n\tif(!ini){\n\t\tini=1;\n\t\tmemset(g,-1,sizeof(g));\n\t}else{\n\t\tfor (int i=0;i<=n;i++)g[i]=-1;\n\t}\n\tetot=0;\n}\nvoid readedge(){\n\tfor (int i=2;i<=n;i++){\n\t\tint x=i,y;gn(y);\n\t\tae(x,y);ae(y,x);\n\t}\n}\n\nvoid proc(int u){\n\tint ma=0;int v;\n\tfor (int i=g[u];~i;i=e[i].next)if(e[i].v!=pre[u]){\n\t\tif(upmax(ma,sz[e[i].v]))v=e[i].v;\n\t}\n\tif(ma==0)ans[u]=u;\n\telse{\n\t\tint x=ans[v];\n\t\twhile(2*sz[x]<sz[u])x=pre[x];\n\t\tans[u]=x;\n\t}\n}\nint main()\n{\n#ifdef JCVB\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tint _time_jc=clock();\n#endif\n\tint q;\n\tgn(n);\n\tgn(q);\n\ttree_init();\n\treadedge();\n\tbfs(1);\n\n\tfor (int i=n-1;i>=0;i--)proc(qu[i]);\n\twhile(q--){\n\t\tint x;gn(x);\n\t\tprintf(\"%d\\n\",ans[x]);\n\t}\n\t\n#ifdef JCVB\n\tdebug(\"time: %d\\n\",int(clock()-_time_jc));\n#endif\n\treturn 0;\n}\n\n"], "input": "", "output": "", "tags": ["data structures", "dfs and similar", "dp", "trees"], "dificulty": "1900", "interactive": false}