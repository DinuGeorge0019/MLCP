{"link": "https://codeforces.com//contest/956/problem/E", "problemId": "168083", "problem_idx": "E", "shortId": "956E", "contest_number": "956", "problem_submissions": {"D": [36593366, 36588204, 36587496, 36592289, 36586754, 36588274, 36591263, 36589846, 36592464, 36590122, 36593976, 36596887, 36592121, 36596341, 36592513, 36595632, 36591303, 36590631, 36596259, 36591080], "E": [36587738, 36592013, 36593444, 36590601, 36594002, 36595759, 36595160, 36598384, 36593817, 36599462, 36596926, 36592533, 36598235, 36594351, 36597963, 36598842, 36597808, 36592935, 36598993, 36594463], "C": [36581505, 36582901, 36583070, 36583190, 36582332, 36585605, 36587197, 36582980, 36586547, 36582470, 36583990, 36584599, 36584812, 36584631, 36582176, 36583908, 36599080, 36588304, 36587864], "B": [36579923, 36581052, 36580935, 36580991, 36579886, 36580741, 36581673, 36580683, 36585379, 36580850, 36580955, 36581441, 36582530, 36579783, 36580793, 36581999, 36586325, 36601723, 36601691, 36582893], "A": [36579305, 36579264, 36579274, 36579533, 36579182, 36584111, 36579353, 36579190, 36580060, 36579611, 36579457, 36579222, 36580218, 36579198, 36579466, 36579242, 36580204, 36579496, 36579376], "F": [36617999]}, "name": "E. Wardrobe", "statement": "Olya wants to buy a custom wardrobe. It should have boxes with heights ,\r\nstacked one on another in some order. In other words, we can represent\r\neach box as a vertical segment of length , and all these segments should\r\nform a single segment from to without any overlaps.Some of the boxes are\r\nimportant (in this case ), others are not (then ). Olya defines the of\r\nthe wardrobe as the number of important boxes such that their bottom\r\nedge is located between the heights and , inclusive.You are given\r\ninformation about heights of the boxes and their importance. Compute the\r\nmaximum possible convenience of the wardrobe if you can reorder the\r\nboxes arbitrarily.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int N = 10010;\nbool dp[N][2];\nint a[N];\nint n, m;\nint L, R;\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d%d%d\", &n, &L, &R);\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\tm = 0;\n\tdp[0][0] = 1;\n\tfor (int i = 0; i < n; i++) {\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\tif (t == 0) {\n\t\t\tfor (int x = R; x >= a[i]; x--)\n\t\t\t\tdp[x][0] |= dp[x - a[i]][0];\n\t\t} else {\n\t\t\ta[m++] = a[i];\n\t\t}\n\t}\n\tn = m;\n\tsort(a, a + n);\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++)\n\t\tsum += a[i];\n\tfor (int it = n - 1; it >= 0; it--) {\n\t\tfor (int x = R; x >= a[it]; x--)\n\t\t\tdp[x][1] |= dp[x - a[it]][1];\n\t\tfor (int x = 0; x <= R; x++)\n\t\t\tdp[x][1] |= dp[x][0];\n\t\tfor (int x = R; x >= a[it]; x--)\n\t\t\tdp[x][0] |= dp[x - a[it]][0];\n\t\tsum -= a[it];\n\t\tbool ans = false;\n\t\tfor (int x = L; x <= R - sum; x++) {\n\t\t\tif (dp[x][1]) {\n\t\t\t\tprintf(\"%d\\n\", it + 1);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tans |= dp[x][0];\n\t\t}\n\t\tif (ans) {\n\t\t\tprintf(\"%d\\n\", it);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"0\\n\");\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "greedy"], "dificulty": "2700", "interactive": false}