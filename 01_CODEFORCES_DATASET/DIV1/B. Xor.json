{"link": "https://codeforces.com//contest/193/problem/B", "problemId": "1405", "problem_idx": "B", "shortId": "193B", "contest_number": "193", "problem_submissions": {"E": [1760964, 1761121, 1761512], "D": [1760240, 1762133], "C": [1758660, 1761664, 1756861, 1760385, 1757547, 1757786, 1758601, 1759415, 1759294, 1758335, 1759388, 1758973, 1758915, 1759895, 1758129, 1758643], "B": [1755241, 1755126, 1757246, 1755771, 1756101, 1755179, 1755123, 1755569, 1759901, 1755152, 1756669, 1756100, 1755910, 1760390, 1760344], "A": [1754055, 1754254, 1754686, 1754344, 1754275, 1758932, 1756481, 1757287, 1754744, 1756492, 1755198, 1754933, 1754369, 1755466]}, "name": "B. Xor", "statement": "John Doe has four arrays: , , , and . Each array consists of integers.\r\nElements of all arrays are indexed starting from . Array is a\r\npermutation of integers to .John invented a game for his friends and\r\nhimself. Initially a player is given array . The player must\r\nconsecutively execute exactly operations on . You are permitted to\r\nexecute the following operations: Operation 1: For each change into .\r\nExpression means applying the operation of a bitwise xor to numbers and\r\n. The given operation exists in all modern programming languages, for\r\nexample, in language and it is marked as \"^\", in as \"xor\". Operation 2:\r\nFor each change into . When this operation is executed, all changes are\r\nmade at the same time. After all operations are applied, the number of\r\npoints the player gets is determined by the formula . John wants to find\r\nout what maximum number of points a player can win in his game. Help\r\nhim.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n#include <algorithm>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#define pb push_back\n#define mp make_pair\n#define sz(x) ((int)(x).size())\n\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef pair<int, int> pii;\n\nconst int MAXN = 30;\nint n, u, r;\nint as[MAXN],bs[MAXN],ks[MAXN],ps[MAXN],rps[MAXN];\n\nint tmp[MAXN];\nvoid perform(int *perm) {\n  for (int i = 0; i < n; i++)\n    tmp[i] = as[perm[i]];\n  for (int i = 0; i < n; i++)\n    as[i] = tmp[i];\n}\n\nll ans;\nvoid relax() {\n  ll cans = 0;\n  for (int i = 0; i < n; i++) cans += ks[i] * as[i];\n  ans = max(ans, cans);\n}\n\nvoid go(int step, int prev = -1) {\n  if (((u - step) & 1) == 0) {\n    relax();\n  }\n  if (step >= u) return;\n\n  perform(ps);\n  for (int i = 0; i < n; i++) as[i] += r;\n  go(step + 1, 0);\n  for (int i = 0; i < n; i++) as[i] -= r;\n  perform(rps);\n\n  if (prev != 1) {\n    for (int i = 0; i < n; i++) as[i] ^= bs[i];\n    go(step + 1, 1);\n    for (int i = 0; i < n; i++) as[i] ^= bs[i];\n  }\n}\n\nint main() {\n  #ifdef DEBUG\n  freopen(\"std.in\", \"r\", stdin);\n  freopen(\"std.out\", \"w\", stdout);\n  #endif\n\n  while (scanf(\"%d%d%d\", &n, &u, &r) >= 1) {\n    for (int i = 0; i < n; i++) scanf(\"%d\", &as[i]);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &bs[i]);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &ks[i]);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &ps[i]), ps[i]--, rps[ps[i]] = i;\n    ans = -9e18;\n\n    go(0);\n    printf(\"%I64d\\n\", ans);\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force"], "dificulty": "2000", "interactive": false}