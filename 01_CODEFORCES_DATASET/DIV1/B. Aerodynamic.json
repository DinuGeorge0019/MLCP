{
    "link": "https://codeforces.com//contest/1299/problem/B",
    "problemId": "536064",
    "problem_idx": "B",
    "shortId": "1299B",
    "contest_number": "1299",
    "problem_submissions": {
        "E": [
            70686331,
            70660774,
            70672529,
            70679200,
            70746311,
            70716482,
            70681811,
            70790234,
            70723071
        ],
        "D": [
            70674287,
            70655315,
            70663097,
            70655518,
            70663548,
            70664397,
            70662876,
            70665818,
            70662357,
            70666704,
            70668591,
            70669155,
            70686750,
            70667002,
            70665737,
            71199373,
            70666543,
            70669128,
            70668132,
            70673600,
            70668620
        ],
        "C": [
            70635644,
            70641348,
            70637841,
            70635684,
            70637585,
            70645672,
            70638367,
            70644518,
            70637825,
            70637282,
            70642089,
            70641136,
            70646842,
            70640536,
            71199306,
            70645534,
            70641268,
            70637543,
            70642972,
            70649159
        ],
        "B": [
            70632114,
            70637553,
            70635893,
            70632956,
            70633376,
            70640030,
            70635212,
            70636081,
            70641111,
            70643564,
            70635522,
            70636070,
            70638648,
            70636548,
            71199268,
            70634654,
            70643537,
            70631220,
            70636193,
            70643457
        ],
        "A": [
            70629120,
            70629188,
            70630935,
            70629077,
            70628970,
            70632328,
            70630392,
            70630475,
            70630208,
            70630228,
            70630097,
            70629324,
            70630825,
            70631100,
            71199221,
            70629815,
            70629724,
            70628897,
            70629666,
            70629786
        ]
    },
    "name": "B. Aerodynamic",
    "statement": "You’re given a (i. e. no three points are collinear) polygon P which is\r\ndefined by coordinates of its vertices. Define P(x,y) as a polygon\r\nobtained by translating P by vector\r\noverrightarrow {(x,y)}. The picture below depicts an example of the\r\ntranslation:Define T as a set of points which is the union of all P(x,y)\r\nsuch that the origin (0,0) lies in P(x,y) (both strictly inside and on\r\nthe boundary). There is also an equivalent definition: a point (x,y)\r\nlies in T only if there are two points A,B in P such that\r\noverrightarrow {AB} =\r\noverrightarrow {(x,y)}. One can prove T is a polygon too. For example,\r\nif P is a regular triangle then T is a regular hexagon. At the picture\r\nbelow P is drawn in black and some P(x,y) which contain the origin are\r\ndrawn in colored: Your task is to check whether the polygons P and T are\r\nsimilar.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef double db;\nmt19937 mrand(random_device{}()); \nconst ll mod=1000000007;\nint rnd(int x) { return mrand() % x;}\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nconst int N=101000;\n\nint n,x[N],y[N];\nPII p[N];\nset<PII> hs;\nint main() {\n\tscanf(\"%d\",&n);\n\trep(i,0,n) {\n\t\tscanf(\"%d%d\",x+i,y+i);\n\t}\n\trep(i,0,n) {\n\t\tint qx=x[(i+1)%n],qy=y[(i+1)%n];\n\t\tp[i]=mp(qx-x[i],qy-y[i]);\n\t\ths.insert(p[i]);\n\t}\n\trep(i,0,n) if (!hs.count(mp(-p[i].fi,-p[i].se))) {\n\t\tputs(\"No\");\n\t\treturn 0;\n\t}\n\tputs(\"Yes\");\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "geometry"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Aerodynamic.json",
    "editorial_link": "https://codeforces.com//blog/entry/73763",
    "editorial": "has the central symmetry: indeed, if covers and then covers and . So the\r\nanswer for polygons which donât have the sentral symmetry is NO. Letâs\r\nprove if has the central symmetry then the answer is YES. Translate in\r\nsuch a way that the origin becomes its center of symmetry. Letâs show\r\nthat the homothety with the center at the origin and the coefficient\r\ntransforms into : if a point lies in , then covers both and ; if a point\r\ndoesnât lie in , then consider a segment connecting the center of\r\nsymmetry of the polygon (also known as origin) and ; it crosses some\r\nside of ; WLOG, assume this side is parallel to the -axis and lies in\r\nthe line (otherwise we can rotate the plane). Since the polygon is\r\nconvex, it completely lies in the stripe , thatâs why there isnât any\r\nvector which connects two points in with a -coordinate greater than .\r\nSince , there isnât any vector which connects two points in with a\r\n-coordinate equal to , thatâs why the point doesnât lie in .To find\r\nwhether a polygon has the central symmetry, check whether the midpoints\r\nof segments connecting the opposite vertexes coincide; if a polygon has\r\nan odd number of vertexes it canât have the central symmetry.\r\n",
    "hint": []
}