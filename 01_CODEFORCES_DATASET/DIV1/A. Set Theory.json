{"link": "https://codeforces.com//contest/856/problem/A", "problemId": "121783", "problem_idx": "A", "shortId": "856A", "contest_number": "856", "problem_submissions": {"D": [30250286, 30248673, 30250147, 30250541, 30249770, 30271191], "C": [30249129, 30248932, 30248929, 30249736, 30251499, 30249147, 30250069, 30249822], "B": [30247472, 30247324, 30247880, 30249381, 30248057, 30247570, 30247709, 30248446], "A": [30246548, 30246864, 30247263, 30246924, 30246957, 30246458, 30246947, 30246849], "E": [30265847, 30259642]}, "name": "A. Set Theory", "statement": "Masha and Grisha like studying sets of positive integers.One day Grisha\r\nhas written a set containing different integers on a blackboard. Now he\r\nasks Masha to create a set containing different integers such that all\r\nintegers that can be obtained by summing up and for all possible pairs\r\nof and are different.Both Masha and Grisha don\u2019t like big numbers, so\r\nall numbers in are from to , and all numbers in must also be in the same\r\nrange.Help Masha to create the set that satisfies Grisha\u2019s requirement.\r\n", "solutions": ["#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <utility>\n#include <cstdlib>\n#include <memory>\n#include <queue>\n#include <cassert>\n#include <cmath>\n#include <ctime>\n#include <complex>\n#include <bitset>\n#include <fstream>\n#include <unordered_map>\n#include <unordered_set>\n#include <numeric>\n\nusing namespace std;\n\n#define ws ws_____________________\n#define y1 y1_____________________\n#define y0 y0_____________________\n#define left left_________________\n#define right right_______________\n#define next next_________________\n#define prev prev_________________\n#define hash hash_________________\n\n#define pb push_back\n#define fst first\n#define snd second\n#define mp make_pair \n#define sz(C) ((int) (C).size())\n#define forn(i, n) for (int i = 0; i < int(n); ++i)\n#define ford(i, n) for (int i = int(n) - 1; i >= 0; --i)\n#define all(C) begin(C), end(C)\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef pair<int,int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<ll> vll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vii;\ntypedef long double ld;\ntypedef complex<double> cd;\n\n#ifdef LOCAL\n#define eprintf(args...) fprintf(stderr, args), fflush(stderr)\n#else\n#define eprintf(...) ;\n#endif\n\n#define FILE_NAME \"a\"\n\nconst int MAX = 1e6;\n\nint n;\nvi a;\n\nbool read() {\n\tif  (scanf(\"%d\", &n) < 1) {\n\t\treturn 0;\n\t}\n\ta.resize(n);\n\tforn(i, n) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\treturn 1;\n}\n\nbool bad[MAX];\n\nbool solve() {\n\tsort(all(a));\n\tconst int mx = a.back();\n\n\tmemset (bad, 0, sizeof(bool) * mx);\n\tforn(i, n) {\n\t\tforn(j, i) {\n\t\t\tbad[abs(a[i] - a[j])] = 1;\n\t\t}\n\t}\n\n\tvi b(n);\n\tint ptr = 0;\n\tfor (int x = 1; x <= MAX && ptr < n; ++x) {\n\t\tbool good = 1;\n\t\tforn(i, ptr) {\n\t\t\tconst int diff = x - b[i];\n\t\t\tif  (diff < mx && bad[diff]) {\n\t\t\t\tgood = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif  (good) {\n\t\t\tb[ptr++] = x;\n\t\t}\n\t}\n\n\tif  (ptr < n) {\n\t\treturn 0;\n\t}\n\n\tputs(\"YES\");\n\tforn(i, n) {\n\t\tprintf(\"%d \", b[i]);\n\t}\n\tputs(\"\");\n\treturn 1;\n}\n\nint main() {\n#ifdef LOCAL\n\tfreopen(FILE_NAME \".in\", \"r\", stdin);\n\t// freopen(FILE_NAME \".out\", \"w\", stdout);\n#endif\n\n\tint T;\n\tscanf(\"%d\", &T);\n\tforn(t, T) {\n\t\tassert(read());\n\n\t\tif  (!solve()) {\n\t\t\tputs(\"NO\");\n\t\t}\n\t}\n\n#ifdef LOCAL\n\tcerr.precision(5);\n\tcerr << \"Time: \" << fixed << (double) clock() / CLOCKS_PER_SEC << endl;\n#endif\n\treturn 0;\n}\n\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms"], "dificulty": "1600", "interactive": false}