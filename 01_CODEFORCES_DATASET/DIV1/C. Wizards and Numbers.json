{
    "link": "https://codeforces.com//contest/167/problem/C",
    "problemId": "1062",
    "problem_idx": "C",
    "shortId": "167C",
    "contest_number": "167",
    "problem_submissions": {
        "E": [
            1429386,
            1431660,
            1430538,
            1430207,
            1479431,
            1430621,
            1507864,
            1489249
        ],
        "A": [
            1426561,
            1425295,
            1423883,
            1423692,
            1423784,
            1423907,
            1423753,
            1427774,
            1424703,
            1425193,
            1423661,
            1424092,
            1424249,
            1423770,
            1424171,
            1423924
        ],
        "B": [
            1425782,
            1424634,
            1425254,
            1432486,
            1425184,
            1425747,
            1425398,
            1426194,
            1432748,
            1426937,
            1424930,
            1425807,
            1425826,
            1425888,
            1426390,
            1425899
        ],
        "C": [
            1424483,
            1428090,
            1428465,
            1428006,
            1427996,
            1428587,
            1429943,
            1429298,
            1431073,
            1428990,
            1428193,
            1428363,
            1428419,
            1429448,
            1428344,
            1428582
        ],
        "D": [
            1430967,
            2861371,
            1479835,
            1433356,
            1432586,
            1508890
        ]
    },
    "name": "C. Wizards and Numbers",
    "statement": "In some country live wizards. They love playing with numbers. The\r\nblackboard has two numbers written on it and . The order of the numbers\r\nis not important. Let’s consider for the sake of definiteness. The\r\nplayers can cast one of the two spells in turns: Replace with . Number\r\ncan be chosen by the player, considering the limitations that and .\r\nNumber is chosen independently each time an active player casts a spell.\r\nReplace with . If , similar moves are possible.If at least one of the\r\nnumbers equals zero, a player can’t make a move, because taking a\r\nremainder modulo zero is considered somewhat uncivilized, and it is far\r\ntoo boring to subtract a zero. The player who cannot make a move,\r\nloses.To perform well in the magic totalizator, you need to learn to\r\nquickly determine which player wins, if both wizards play optimally: the\r\none that moves first or the one that moves second.\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\ntypedef long long ll;\n\nbool win(ll A, ll B){\n    if(A == 0 || B == 0) return false;\n    if(A > B) swap(A,B);\n    if(!win(A,B%A)) return true;\n    ll N = B / A;\n    ll MOD = A + 1;\n    return ((N % MOD) % 2 == 0);\n}\n\nint main(void){\n    int T,t;\n    ll A,B;\n    \n    cin >> T;\n    REP(t,T){\n        cin >> A >> B;\n        bool ans = win(A,B);\n        cout << (ans ? \"First\" : \"Second\") << endl;\n    }\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "games",
        "math"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Wizards and Numbers.json",
    "editorial_link": "https://codeforces.com//blog/entry/4214",
    "editorial": "Consider the position (a, b). Let a < b. From this there is a move to .\r\nRecursively check if this position is a winning or a losing. If it is\r\nlosing, then (a, b) exactly winning. Otherwise, no one will take the\r\nremainder. So everyone will subtract from larger number nonnegative\r\ndegree of smaller. Then the left to learn to solve such problem. You can\r\nsubtract the nonnegative powers of a from x, and player who cannot move\r\nlosses. And solve it for . This problem can be solved as follows. If a\r\nis odd, then all odd number are wining. In other all the numbers, giving\r\nan odd residue modulo a+1 or -1 residue on the same module are wining.\r\nThis can be easily proved by induction.\r\n",
    "hint": []
}