{
    "link": "https://codeforces.com//contest/1299/problem/C",
    "problemId": "536065",
    "problem_idx": "C",
    "shortId": "1299C",
    "contest_number": "1299",
    "problem_submissions": {
        "E": [
            70686331,
            70660774,
            70672529,
            70679200,
            70746311,
            70716482,
            70681811,
            70790234,
            70723071
        ],
        "D": [
            70674287,
            70655315,
            70663097,
            70655518,
            70663548,
            70664397,
            70662876,
            70665818,
            70662357,
            70666704,
            70668591,
            70669155,
            70686750,
            70667002,
            70665737,
            71199373,
            70666543,
            70669128,
            70668132,
            70673600,
            70668620
        ],
        "C": [
            70635644,
            70641348,
            70637841,
            70635684,
            70637585,
            70645672,
            70638367,
            70644518,
            70637825,
            70637282,
            70642089,
            70641136,
            70646842,
            70640536,
            71199306,
            70645534,
            70641268,
            70637543,
            70642972,
            70649159
        ],
        "B": [
            70632114,
            70637553,
            70635893,
            70632956,
            70633376,
            70640030,
            70635212,
            70636081,
            70641111,
            70643564,
            70635522,
            70636070,
            70638648,
            70636548,
            71199268,
            70634654,
            70643537,
            70631220,
            70636193,
            70643457
        ],
        "A": [
            70629120,
            70629188,
            70630935,
            70629077,
            70628970,
            70632328,
            70630392,
            70630475,
            70630208,
            70630228,
            70630097,
            70629324,
            70630825,
            70631100,
            71199221,
            70629815,
            70629724,
            70628897,
            70629666,
            70629786
        ]
    },
    "name": "C. Water Balance",
    "statement": "There are n water tanks in a row, i-th of them contains a_i liters of\r\nwater. The tanks are numbered from 1 to n from left to right.You can\r\nperform the following operation: choose some subsegment [l, r] (1\r\nle l\r\nle r\r\nle n), and redistribute water in tanks l, l+1,\r\ndots, r evenly. In other words, replace each of a_l, a_{l+1},\r\ndots, a_r by\r\nfrac{a_l + a_{l+1} +\r\ndots + a_r}{r-l+1}. For example, if for volumes [1, 3, 6, 7] you choose\r\nl = 2, r = 3, new volumes of water will be [1, 4.5, 4.5, 7]. .What is\r\nthe lexicographically smallest sequence of volumes of water that you can\r\nachieve?As a reminder:A sequence a is lexicographically smaller than a\r\nsequence b of the same length if and only if the following holds: in the\r\nfirst (leftmost) position where a and b differ, the sequence a has a\r\nsmaller element than the corresponding element in b.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef double db;\nmt19937 mrand(random_device{}()); \nconst ll mod=1000000007;\nint rnd(int x) { return mrand() % x;}\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nconst int N=1010000;\nint n,a[N],t;\nPII st[N];\nll s[N];\ndb sval[N];\nint main() {\n\tscanf(\"%d\",&n);\n\trep(i,1,n+1) {\n\t\tscanf(\"%d\",a+i);\n\t\ts[i]=s[i-1]+a[i];\n\t}\n\trep(i,1,n+1) {\n\t\tdb val=a[i];\n\t\tPII pr=mp(i,i);\n\t\twhile (t>0&&sval[t-1]>val) {\n\t\t\t--t;\n\t\t\tval=1.*(s[i]-s[st[t].fi-1])/(i-st[t].fi+1);\n\t\t\tpr=mp(st[t].fi,i);\n\t\t}\n\t\tsval[t]=val;\n\t\tst[t]=pr;\n\t\tt++;\n\t}\n\trep(i,0,t) rep(j,st[i].fi,st[i].se+1) printf(\"%.10f\\n\",sval[i]);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "geometry",
        "greedy"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Water Balance.json",
    "editorial_link": "https://codeforces.com//blog/entry/73763",
    "editorial": "Let\u00e2\u0080\u0099s try to make the operation simpler. When we apply the operation,\r\nonly the sum of the segment matters. And so let\u00e2\u0080\u0099s instead define the\r\noperation on prefix sum array:Replace each of by . You may see how\r\nsimilar it is to a line function. Hence we get the idea to plot points (\r\nincluded), and our operation is just drawing a line between points on\r\ninteger coordinates.Nicely if sequence is lexicographically smaller than\r\nsequence , then prefix sum array of is smaller than prefix sum array of\r\n.So we need to find the lexicographically smallest array . And then it\r\nis easy to see the lexicographically smallest sequence will be the lower\r\npart of the convex hull.If you\u00e2\u0080\u0099re interested you can solve IMO 2018 SL\r\nA4 by plotting similar points. I have written my solutionhere\r\n"
}