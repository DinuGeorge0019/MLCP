{"link": "https://codeforces.com//contest/264/problem/C", "problemId": "2528", "problem_idx": "C", "shortId": "264C", "contest_number": "264", "problem_submissions": {"D": [2970633, 2970188, 2969616, 2972161, 2970655, 2972191, 2971577, 2970650, 2971498, 2971572, 2972055, 2972383, 2971674, 2972692, 2971818, 2972335], "C": [2968127, 2967219, 2967855, 2968130, 2966487, 2966588, 2967563, 2967148, 2967835, 2968495, 2969405, 2968262, 2968182, 2968431, 2970284, 2968742, 2969164, 2966742], "B": [2965253, 2965388, 2965967, 2964982, 2964487, 2965047, 2964632, 2965554, 2964885, 2965097, 2966188, 2965309, 2965972, 2965497, 2965546, 2967550, 2966171], "A": [2963692, 2963886, 2964531, 2963631, 2963360, 2963339, 2963656, 2963270, 2995453, 2963462, 2963614, 2963459, 2963970, 2964239, 2963708, 2963681, 2964333, 2963722], "E": [2971453, 3192402, 2977035, 2974561, 2972662]}, "name": "C. Choosing Balls", "statement": "There are balls. They are arranged in a row. Each ball has a color (for\r\nconvenience an integer) and an integer value. The color of the -th ball\r\nis and the value of the -th ball is .Squirrel Liss chooses some balls\r\nand makes a new sequence without changing the relative order of the\r\nballs. She wants to maximize the value of this sequence.The value of the\r\nsequence is defined as the sum of following values for each ball (where\r\nand are given constants): If the ball is not in the beginning of the\r\nsequence and the color of the ball is same as previous ball\u2019s color, add\r\n(the value of the ball) . Otherwise, add (the value of the ball) . You\r\nare given queries. Each query contains two integers and . For each query\r\nfind the maximal value of the sequence she can make when and .Note that\r\nthe new sequence can be , and the value of an empty sequence is defined\r\nas zero.\r\n", "solutions": ["#pragma comment(linker, \"/STACK:60000000\")\n//#define _MY_OPT_MODE_\n#define _CRT_SECURE_NO_WARNINGS\n#define _CRT_SECURE_NO_DEPRECATE\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <algorithm>\n\n#include <vector>\n#include <set>\n#include <map>\n#include <bitset>\n#include <queue>\n#include <stack>\n#include <list>\n\n#include <ctime>\n#include <cassert>\n\nusing namespace std;\n\ntypedef long double ldb;\ntypedef long long int64;\ntypedef pair <int64, int> pii;\ntypedef pair <double, double> pdd;\n\n#define y0 wwwwwww\n#define y1 qqqqqqq\n#define next NEXT\n#define prev PREV\n#define forn(i, n) for (int i = 0; i < (int) n; i++)\n#define ford(i, n) for (int i = (int) n - 1; i >= 0; i--)\n#define seta(a, b) memset(a, b, sizeof(a))\n#define pb push_back\n#define all(a) (a).begin(), (a).end()\n#define last(a) a[a.size() - 1]\n#define mp make_pair\n#define fs first\n#define sc second\n\ntemplate <class T> T sqr(T x) { return x * x; }\n\ndouble const pi = 3.1415926535897932384626433832795;\nint const inf = (int) 1e9;\nint64 const inf64 = (int64) 4e18;\nconst string name = \"c\";\n\nconst int NMAX = 100100;\nint n, q, v[NMAX], c[NMAX];\npii max1, max2;\nint64 A, B, d[NMAX];\n\nint64 get(int idx, int C)\n{\n\tint64 res = max(B * v[idx], d[C]);\n\tres = max(res, d[C] + A * v[idx]);\n\tint64 ept = max1.fs;\n\tif (max1.sc == C) ept = max2.fs;\n\tres = max(res, ept + B * v[idx]);\n\treturn res;\n}\n\nvoid solve()\n{\n\tmax1 = max2 = mp(-inf64, -1);\n\tforn(i, n + 1)\n\t\td[i] = -inf64;\n\tforn(i, n)\n\t{\n\t\td[c[i]] = max(d[c[i]], get(i, c[i]));\n\t\tif (max1.fs < d[c[i]]) { if (max1.sc != c[i]) max2 = max1; max1 = mp(d[c[i]], c[i]); }\n\t\telse if (max1.sc != c[i] && max2.fs < d[c[i]]) max2 = mp(d[c[i]], c[i]);\n\t}\n\tcout << max(0LL, max1.fs) << endl;\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen((name + \".in\").data(), \"r\", stdin);\n\tfreopen((name + \".out\").data(), \"w\", stdout);\n#endif\n\n\tcin >> n >> q;\n\tforn(i, n)\n\t\tscanf(\"%d\", &v[i]);\n\tforn(i, n)\n\t\tscanf(\"%d\", &c[i]);\n\tforn(i, q)\n\t{\n\t\tcin >> A >> B;\n\t\tsolve();\n\t}\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2000", "interactive": false}