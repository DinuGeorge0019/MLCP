{"link": "https://codeforces.com//contest/917/problem/B", "problemId": "151488", "problem_idx": "B", "shortId": "917B", "contest_number": "917", "problem_submissions": {"C": [34680068, 34681336, 34678312, 34684700, 34684340, 34684129, 34684130, 34686499, 34795938, 34730488, 34696787], "A": [34673920, 34665747, 34666503, 34668041, 34667604, 34679203, 34668301, 34677179, 34678218, 34682551, 34666784, 34671651, 34681613, 34668433, 34679190, 34665183, 34667188, 34667822, 34678091, 34668342], "B": [34672970, 34673451, 34671200, 34673043, 34673517, 34672805, 34670705, 34675348, 34676012, 34676530, 34670452, 34673092, 34671413, 34673682, 34678568, 34669943, 34672667, 34674568, 34678107, 34670900], "D": [34670187, 34675817, 34681965, 34679140, 34679490, 34676721, 34681020, 34673182, 34673535, 34673684, 34678521, 34677964, 34675981, 34677937, 34674919, 37086325, 34680194, 34680489, 34679577, 34678015, 34681680], "E": [38254406, 38253558, 38252911]}, "name": "B. MADMAX", "statement": "As we all know, Max is the best video game player among her friends. Her\r\nfriends were so jealous of hers, that they created an actual game just\r\nto prove that she\u2019s not the best at games. The game is played on a\r\ndirected acyclic graph (a DAG) with vertices and edges. There\u2019s a\r\ncharacter written on each edge, a lowercase English letter. Max and\r\nLucas are playing the game. Max goes first, then Lucas, then Max again\r\nand so on. Each player has a marble, initially located at some vertex.\r\nEach player in his/her turn should move his/her marble along some edge\r\n(a player can move the marble from vertex to vertex if there\u2019s an\r\noutgoing edge from to ). If the player moves his/her marble from vertex\r\nto vertex , the \"character\" of that round is the character written on\r\nthe edge from to . There\u2019s one additional rule; the ASCII code of\r\ncharacter of round should be to the ASCII code of character of round\r\n(for ). The rounds are numbered for both players together, i. e. Max\r\ngoes in odd numbers, Lucas goes in even numbers. The player that can\u2019t\r\nmake a move loses the game. The marbles may be at the same vertex at the\r\nsame time.Since the game could take a while and Lucas and Max have to\r\nfocus on finding Dart, they don\u2019t have time to play. So they asked you,\r\nif they both play optimally, who wins the game?You have to determine the\r\nwinner of the game for all initial positions of the marbles.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nconst int N=110;\nchar dp[N][N][28][2];\nint n,m,u,v;\nchar s[10];\nvector<PII> e[N];\nbool dfs(int u,int v,int k,int op) {\n\tif (dp[u][v][k][op]!=0x11) return dp[u][v][k][op];\n\tif (op==0) {\n\t\tbool win=0;\n\t\tfor (auto p:e[u]) if (p.se>=k) {\n\t\t\twin|=dfs(p.fi,v,p.se,op^1);\n\t\t\tif (win==1) break;\n\t\t}\n\t\treturn dp[u][v][k][op]=win;\n\t} else {\n\t\tbool win=1;\n\t\tfor (auto p:e[v]) if (p.se>=k) {\n\t\t\twin&=dfs(u,p.fi,p.se,op^1);\n\t\t\tif (win==0) break;\n\t\t}\n\t\treturn dp[u][v][k][op]=win;\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\trep(i,0,m) {\n\t\tscanf(\"%d%d%s\",&u,&v,s); --u; --v;\n\t\te[u].pb(mp(v,s[0]-'a'+1));\n\t}\n\tmemset(dp,0x11,sizeof(dp));\n\trep(i,0,n) {\n\t\trep(j,0,n) if (dfs(i,j,0,0)) putchar('A'); else putchar('B');\n\t\tputs(\"\");\n\t}\n}\n"], "input": "", "output": "", "tags": ["dfs and similar", "dp", "games", "graphs"], "dificulty": "1700", "interactive": false}