{
    "link": "https://codeforces.com//contest/947/problem/A",
    "problemId": "164137",
    "problem_idx": "A",
    "shortId": "947A",
    "contest_number": "947",
    "problem_submissions": {
        "C": [
            36173454,
            36158955,
            36159580,
            36159099,
            36160344,
            36163522,
            36159314,
            36160080,
            36160850,
            36161300,
            36159923,
            36161359,
            36160490,
            36159503,
            36160981,
            36162645,
            36160904,
            36159951,
            36161496
        ],
        "E": [
            36168563,
            36236455,
            36170443,
            39088009
        ],
        "B": [
            36164839,
            36156882,
            36157486,
            36156947,
            36158529,
            36159543,
            36158110,
            36157900,
            36155578,
            36159650,
            36157136,
            36158516,
            36157266,
            36157820,
            36159109,
            36159552,
            36158553,
            36157744,
            36159160
        ],
        "D": [
            36162982,
            36163865,
            36166846,
            36164126,
            36164997,
            36171948,
            36177192,
            36164630,
            36165682,
            36165588,
            36166182,
            36171226,
            36166510,
            36166759,
            36167046,
            36167052,
            36169076,
            36165891,
            36168487
        ],
        "A": [
            36160906,
            36154995,
            36155654,
            36155514,
            36156087,
            36157563,
            36155459,
            36156152,
            36158089,
            36157373,
            36155161,
            36155827,
            36155589,
            36156282,
            36157634,
            36156202,
            36156868,
            36156079,
            36157276
        ],
        "F": [
            36230948
        ]
    },
    "name": "A. Primal Sport",
    "statement": "Alice and Bob begin their day with a quick game. They first choose a\r\nstarting number and try to reach one million by the process described\r\nbelow. Alice goes first and then they take alternating turns. In the -th\r\nturn, the player whose turn it is selects a prime number smaller than\r\nthe current number, and announces the smallest multiple of this prime\r\nnumber that is not smaller than the current number.Formally, he or she\r\nselects a prime and then finds the minimum such that divides . Note that\r\nif the selected prime already divides , then the number does not\r\nchange.Eve has witnessed the state of the game after two turns. Given ,\r\nhelp her determine what is the smallest possible starting number . Note\r\nthat the players donâ€™t necessarily play optimally. You should consider\r\nall possible game evolutions.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#define rep(i,x,y) for(int i=x;i<=y;++i)\n#define dep(i,x,y) for(int i=x;i>=y;--i)\nusing namespace std;\nconst int N=1000005;\n\nint x2,p[N],prime[N],len,g[N];\n\nint work2(int f){\n    if(g[f]==0) return 0x3f3f3f3f;\n    return (f/g[f]-1)*g[f]+1;\n}\n\nvoid work(int f){\n    int ans=f;\n    dep(i,len,1){\n        if(prime[i]>=f) continue;\n        if(f%prime[i]==0){\n            int l=(f/prime[i]-1)*prime[i]+1;\n            int r=f;\n            rep(j,l,r)\n                ans=min(ans,work2(j));\n            break;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    exit(0);   \n}\n\nint main(){\n    scanf(\"%d\",&x2);\n    rep(i,2,x2-1){\n        if(p[i]==0){\n            p[i]=i;\n            g[i]=0;\n            prime[++len]=i;\n        }\n        for(int j=1;j<=len && prime[j]<=p[i] && prime[j]*i<=x2;++j){\n            p[prime[j]*i]=prime[j];\n            if(g[i]==0) g[prime[j]*i]=i;\n            else g[prime[j]*i]=g[i];\n        }\n    }\n\n    work(x2);\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Primal Sport.json",
    "editorial_link": "https://codeforces.com//blog/entry/58286",
    "editorial": "Let P(N) be the largest prime factor of N. Clearly, we can obtain N from any number in interval [N?-?P(N)?+?1,?N] by picking P(N) as the prime, and we cannot obtain N from any other number. By factorizing X2, we can find the range for X1. By factorizing all numbers from the range of X1, we can find intervals for X0. The answer is the minimum of their union. The solution works in , which is fast in practice.",
    "hint": []
}