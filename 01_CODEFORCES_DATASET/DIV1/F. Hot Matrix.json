{
    "link": "https://codeforces.com//contest/2081/problem/F",
    "problemId": "3268220",
    "problem_idx": "F",
    "shortId": "2081F",
    "contest_number": "2081",
    "problem_submissions": {
        "B": [
            310774215,
            310752573,
            310826211,
            310739558,
            310740102,
            310737148,
            310765995,
            310740246,
            310740411,
            310741073,
            310738730,
            310756764,
            310764342,
            310740030,
            311003693,
            310899344,
            310756759
        ],
        "G2": [
            310759041,
            310768901
        ],
        "G1": [
            310755673,
            310759015,
            310756557,
            310778645,
            310765573,
            310772467
        ],
        "D": [
            310740089,
            310749620,
            310736583,
            310742447,
            310756472,
            310749776,
            311027213,
            310763231,
            310761892,
            310742331,
            310755537,
            310777318,
            310776606,
            310764407,
            310744818,
            310748246,
            310836677,
            310748850,
            310737628,
            310743454,
            310762523
        ],
        "F": [
            310771700,
            310779543,
            310754815,
            310762358,
            310891482,
            312515283
        ],
        "C": [
            310742461,
            310749579,
            310750103,
            310749689,
            310758863,
            310753338,
            310754039,
            310753444,
            310776556,
            310767765,
            310753226,
            310756623,
            310767338,
            310755335,
            310755677,
            310757463,
            310759247,
            310772525
        ],
        "A": [
            310731565,
            310739375,
            310732389,
            310731680,
            310732110,
            310734146,
            310732038,
            310732151,
            310731709,
            310735423,
            310732004,
            310743686,
            310737151,
            310732535,
            310735886,
            310731360,
            310731694,
            310736792
        ],
        "E": [
            312258360,
            310770842
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/140702",
    "editorial": "SolutionFirst, it is not difficult to observe that when is odd, a\r\nsolution exists if and only if .When is even, a solution always\r\nexists.Consider the following construction:Let . Use to denote the cell\r\nin the -th row and -th column of the matrix, and assume the top-left\r\ncorner of the matrix is , while the bottom-right corner is .For and ,\r\nlet and . When , denote as: if . if . if . if . For any , we alternately\r\nfill the numbers and in the cells along the paths , , , and .An\r\nillustration for :Next, we prove that this construction satisfies all\r\nthe requirements of the problem: Each row and column of is a permutation\r\nof . ProofFor each , color the cells containing the numbers and black\r\nand white alternately along the paths described above. It can be shown\r\nthat each row and column contains exactly one black and one white cell,\r\nensuring that and appear exactly once in each row and column. Thus, each\r\nrow and column is a permutation of . and . ProofFrom the filling\r\nprocess, the cells containing and and the cells containing and are\r\nsymmetric with respect to the midline between the -th and -th rows, as\r\nwell as the midline between the -th and -th columns. This symmetry\r\nfurther ensures that and are symmetric, as are and . Therefore, both and\r\nare satisfied. All ordered pairs (for ) are distinct, and all ordered\r\npairs (for ) are distinct. ProofFor each , divide the cells containing\r\nand into four categories: First category: Second category: Third\r\ncategory: Fourth category: For any : The first and third category cells\r\nof do not neighbor the first and third category cells of (since the sum\r\nof their coordinates is odd). The second and fourth category cells of do\r\nnot neighbor the second and fourth category cells of (since the sum of\r\ntheir coordinates is even). The second and fourth category cells of do\r\nnot have row-wise neighbors with the first and third category cells of ,\r\nand the first and third category cells of have exactly pairs of row-wise\r\nneighbors with the second and fourth category cells of (this can be\r\nvisualized and proven through diagrams). Specifically: The first\r\ncategory cells of and the second category cells of have exactly 2 pairs\r\nof row-wise neighbors: The first category cells of and the fourth\r\ncategory cells of have exactly 2 pairs of row-wise neighbors: The third\r\ncategory cells of and the second category cells of have exactly 2 pairs\r\nof row-wise neighbors: The third category cells of and the fourth\r\ncategory cells of have exactly 2 pairs of row-wise neighbors: From the\r\nabove analysis and by enumerating the parity of , it is clear that all\r\nordered pairs (for ) are distinct, and all ordered pairs (for ) are\r\ndistinct.In conclusion, we have provided a construction for even and\r\nproven that it satisfies all the problemâ€™s requirements.The time\r\ncomplexity is .\r\n",
    "name": "F. Hot Matrix",
    "statement": "Piggy Zhou loves matrices, especially those that make him get excited,\r\ncalled .A hot matrix of size n\r\ntimes n can be defined as follows. Let a_{i, j} denote the element in\r\nthe i-th row, j-th column (1\r\nle i, j\r\nle n). Each column and row of the matrix is a permutation of all numbers\r\nfrom 0 to n-1. For each pair of indices i, j, such that 1\r\nle i, j\r\nle n, a_{i, j} + a_{i, n - j + 1} = n - 1. For each pair of indices i,\r\nj, such that 1\r\nle i, j\r\nle n, a_{i, j} + a_{n - i + 1, j} = n - 1. All ordered pairs\r\nleft(a_{i, j}, a_{i, j + 1}\r\nright), where 1\r\nle i\r\nle n, 1\r\nle j < n, are distinct. All ordered pairs\r\nleft(a_{i, j}, a_{i + 1, j}\r\nright), where 1\r\nle i < n, 1\r\nle j\r\nle n, are distinct.Now, Piggy Zhou gives you a number n, and you need to\r\nprovide him with a hot matrix if the hot matrix exists for the given n,\r\nor inform him that he will never get excited if the hot matrix does not\r\nexist for the given n.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "dificulty": "3300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\F. Hot Matrix.json",
    "hint": []
}