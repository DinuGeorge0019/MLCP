{"link": "https://codeforces.com//contest/138/problem/A", "problemId": "732", "problem_idx": "A", "shortId": "138A", "contest_number": "138", "problem_submissions": {"D": [980256, 979660, 979865, 981459, 981782, 980490, 980859, 981836, 980983, 981220, 982093], "C": [977164, 977134, 978135, 978148, 979334, 977388, 977560, 980285, 976404, 978363, 977955, 977707, 978190, 978555, 976840, 982255, 978719], "B": [976212, 977359, 976881, 978412, 978151, 981022, 984515, 979243, 978060, 990834, 976636, 980026, 976613, 976894, 979990, 982256, 976694], "A": [975301, 975042, 975181, 979365, 975615, 980600, 975885, 975355, 975294, 974907, 975053, 982540, 975212, 975316, 978556], "E": [984982]}, "name": "A. Literature Lesson", "statement": "Vera adores poems. All the poems Vera knows are divided into quatrains\r\n(groups of four lines) and in each quatrain some lines contain\r\nrhymes.Let\u2019s consider that all lines in the poems consist of lowercase\r\nLatin letters (without spaces). Letters \"\", \"\", \"\", \"\", \"\" are\r\nconsidered vowels.Two lines rhyme if their suffixes that start from the\r\n-th vowels (counting from the end) match. If a line has less than\r\nvowels, then such line can\u2019t rhyme with any other line. For example, if\r\n, lines and rhyme (the corresponding suffixes equal ), and if , they do\r\nnot rhyme ().Today on a literature lesson Vera learned that quatrains\r\ncan contain four different schemes of rhymes, namely the following ones\r\n(the same letters stand for rhyming lines): Clerihew (); Alternating ();\r\nEnclosed (). If all lines of a quatrain pairwise rhyme, then the\r\nquatrain can belong to any rhyme scheme (this situation is represented\r\nby ).If all quatrains of a poem belong to the same rhyme scheme, then we\r\ncan assume that the whole poem belongs to this rhyme scheme. If in each\r\nquatrain all lines pairwise rhyme, then the rhyme scheme of the poem is\r\n. Let us note that it doesn\u2019t matter whether lines from different\r\nquatrains rhyme with each other or not. In other words, it is possible\r\nthat different quatrains aren\u2019t connected by a rhyme.Vera got a long\r\npoem as a home task. The girl has to analyse it and find the poem rhyme\r\nscheme. Help Vera cope with the task.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <memory.h>\n#include <string>\n#include <set>\nusing namespace std;\n#define forn(i,n) for(int i=0;i<(n);++i)\n#define forv(i,v) forn(i,(int)(v).size())\n#define iinf 1000000000\n#define all(v) (v).begin(),(v).end()\n#define pb push_back\n#define mp make_pair\n#define lng long long\n#define eps 1e-8\n#define SQ(a) ((a)*(a))\n#define PI 3.14159265359\n#define index asdindex\n\nbool syll[256];\n\nvoid nope(){\n    cout<<\"NO\";\n    exit(0);\n}\n\nint main(){\n#ifdef __ASD__\n    freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n\n    syll['a']=syll['e']=syll['i']=syll['o']=syll['u']=true;\n    int n,k;\n    cin>>n>>k;\n    set<string> res;\n    forn(i,n){\n        string suf[4];\n        forn(j,4){\n            string s;\n            cin>>s;\n            int p=s.length();\n            int c=0;\n            while(p>0&&c<k){\n                --p;\n                if(syll[s[p]])\n                    ++c;\n            }\n            if(c<k)\n                nope();\n            suf[j]=s.substr(p);\n        }\n        if(suf[0]==suf[1]){\n            if(suf[2]==suf[3]){\n                if(suf[1]==suf[2])\n                    res.insert(\"aaaa\");\n                else\n                    res.insert(\"aabb\");\n            }else nope();\n        }else if(suf[0]==suf[2]){\n            if(suf[1]==suf[3])\n                res.insert(\"abab\");\n            else\n                nope();\n        }else if(suf[0]==suf[3]&&suf[1]==suf[2])\n            res.insert(\"abba\");\n        else\n            nope();\n    }\n    if(res.size()>1){\n        if(res.size()==2&&*res.begin()==\"aaaa\"){\n            res.erase(res.begin());\n        }else nope();\n    }\n    if(res.size()<1)\n        exit(321);\n    cout<<*res.begin();\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1600", "interactive": false}