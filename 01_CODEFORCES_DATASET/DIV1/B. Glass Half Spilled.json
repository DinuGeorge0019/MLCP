{"link": "https://codeforces.com//contest/1458/problem/B", "problemId": "837943", "problem_idx": "B", "shortId": "1458B", "contest_number": "1458", "problem_submissions": {"C": [101749748, 101754548, 101742006, 101765508, 101760904, 101735121, 101758711, 101733697, 101742587, 101742771, 101744109, 101764706, 101753517, 101758458, 103876484, 101781534], "D": [101742255, 101733305, 101750551, 101754872, 101747447, 101747468, 101737535, 101761632, 101756331, 101755812, 102023685, 101761131, 101768544, 101764759, 103932701, 101747159], "E": [101737863, 101746540, 101766037, 101749099, 101757343, 101752859, 101763081, 101766464, 101774328, 101752190, 101746555, 101751393, 101757105], "B": [101728732, 101721253, 101733062, 101725510, 101763762, 101727209, 101722722, 101732397, 101727564, 101724112, 101730858, 101735965, 101740443, 101732340, 101727159, 101744347, 101723637, 101730363, 101730317], "A": [101720547, 101718495, 101723686, 101718493, 101718664, 101719145, 101718463, 101718584, 101718634, 101718787, 101720142, 101718675, 101719084, 101722215, 101718515, 101719224, 101718795, 101718781, 101721089], "F": [102925392, 102542392, 102542303, 103841307]}, "name": "B. Glass Half Spilled", "statement": "There are n glasses on the table numbered 1,\r\nldots, n. The glass i can hold up to a_i units of water, and currently\r\ncontains b_i units of water.You would like to choose k glasses and\r\ncollect as much water in them as possible. To that effect you can pour\r\nwater from one glass to another as many times as you like. However,\r\nbecause of the glasses\u2019 awkward shape (and totally unrelated to your\r\nnatural clumsiness), each time you try to transfer any amount of water,\r\nhalf of the amount is spilled on the floor.Formally, suppose a glass i\r\ncurrently contains c_i units of water, and a glass j contains c_j units\r\nof water. Suppose you try to transfer x units from glass i to glass j\r\n(naturally, x can not exceed c_i). Then, x / 2 units is spilled on the\r\nfloor. After the transfer is done, the glass i will contain c_i - x\r\nunits, and the glass j will contain\r\nmin(a_j, c_j + x / 2) units (excess water that doesn\u2019t fit in the glass\r\nis also spilled).Each time you transfer water, you can arbitrarlly\r\nchoose from which glass i to which glass j to pour, and also the amount\r\nx transferred can be any positive real number.For each k = 1,\r\nldots, n, determine the largest possible total amount of water that can\r\nbe collected in arbitrarily chosen k glasses after transferring water\r\nbetween glasses zero or more times.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 19.12.2020 12:42:11       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    a[i] -= b[i];\n  }\n  int total = accumulate(b.begin(), b.end(), 0);\n  vector<vector<int>> dp(n + 1, vector<int>(total + 1, -1));\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = i; j >= 0; j--) {\n      for (int s = 0; s <= total; s++) {\n        if (dp[j][s] != -1) {\n          int ns = min(s + 2 * a[i] + b[i], total);\n          dp[j + 1][ns] = max(dp[j + 1][ns], dp[j][s] + b[i]);\n        }\n      }\n    }\n  }\n  for (int j = 1; j <= n; j++) {\n    int ans = 0;\n    for (int s = 0; s <= total; s++) {\n      if (dp[j][s] != -1) {\n        ans = max(ans, dp[j][s] + s);\n      }\n    }\n    cout << fixed << setprecision(1) << 0.5 * ans << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2000", "interactive": false}