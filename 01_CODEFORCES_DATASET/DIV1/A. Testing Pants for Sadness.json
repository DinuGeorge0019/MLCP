{"link": "https://codeforces.com//contest/103/problem/A", "problemId": "542", "problem_idx": "A", "shortId": "103A", "contest_number": "103", "problem_submissions": {"E": [594225, 596662, 39448090, 39427579, 39399437, 595910, 123375307, 5405441], "D": [592292, 591569, 591484, 596181, 596133, 591648, 592548, 593008, 592069, 594057, 593198, 593774, 593994, 594003, 593751, 594358, 594503, 597893, 597881, 596124, 595932, 594188, 592900, 594112], "C": [591729, 592936, 593120, 596123, 592928, 591746, 593864, 593657, 591747, 592188, 592501, 592689, 592235, 591907, 592739, 592446, 593652, 592453], "B": [589933, 589502, 590203, 596103, 590318, 590585, 590813, 590526, 590500, 590943, 590147, 591873, 590310, 590700, 590283, 591089, 590343, 590573, 591133], "A": [589329, 591835, 589264, 596085, 589350, 589466, 589313, 589253, 593567, 589432, 589509, 590045, 589561, 589677, 589370, 589409, 590491]}, "name": "A. Testing Pants for Sadness", "statement": "The average miner Vaganych took refresher courses. As soon as a miner\r\ncompletes the courses, he should take exams. The hardest one is a\r\ncomputer test called \"Testing Pants for Sadness\".The test consists of\r\nquestions; the questions are to be answered strictly in the order in\r\nwhich they are given, from question to question . Question contains\r\nanswer variants, exactly one of them is correct. A click is regarded as\r\nselecting any answer in any question. The goal is to select the correct\r\nanswer for each of the questions. If Vaganych selects a wrong answer for\r\nsome question, then all selected answers become unselected and the test\r\nstarts from the very beginning, from question again. But Vaganych\r\nremembers everything. The order of answers for each question and the\r\norder of questions remain unchanged, as well as the question and answers\r\nthemselves.Vaganych is very smart and his memory is superb, yet he is\r\nunbelievably unlucky and knows nothing whatsoever about the test\u2019s\r\ntheme. How many clicks will he have to perform in the worst case?\r\n", "solutions": ["#pragma comment(linker, \"/STACK:60000000\")\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n#include <ctime>\n#include <cstring>\n#include <cassert>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <queue>\n#include <functional>\n\nusing namespace std;\n\n#define forn(i, n) for(int i = 0; i < (int)(n); i++)\n#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define last(a) int(a.size() - 1)\n#define all(a) a.begin(), a.end()\n#define seta(a,x) memset (a, x, sizeof (a))\n#define I (int)\n\ntypedef long long int64;\ntypedef pair <int, int> pii;\ntypedef long double ldb;\n\nconst long double eps = 1e-9;\nconst int inf = (1 << 30) - 1;\nconst int64 inf64 = ((int64)1 << 62) - 1;\nconst long double pi = 3.1415926535897932384626433832795;\n\ntemplate <class T> T sqr (T x) {return x * x;}\n\nint n;\nint64 x;\nint64 res;\n\nint main ()\n{\n//\tfreopen (\"input.txt\", \"r\", stdin);\n//\tfreopen (\"output.txt\", \"w\", stdout);\n\tres = 0;\n\tcin >> n;\n\tforn (i, n) {\n\t\tcin >> x;\n\t\tres += (x-1) * (int64)(i+1) + 1;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "implementation", "math"], "dificulty": "1100", "interactive": false}