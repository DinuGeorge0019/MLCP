{"link": "https://codeforces.com//contest/425/problem/B", "problemId": "8918", "problem_idx": "B", "shortId": "425B", "contest_number": "425", "problem_submissions": {"B": [6493816, 6490109, 6487858, 6492945, 6493447, 6494871, 6503981, 6490064, 6487024, 6487873, 6488901, 6490848, 6487215, 6488740, 6491398, 6488181, 6494124], "E": [6490795, 6493696, 6491349, 6492041, 6492843, 6491006, 6493942, 6492765, 6494748, 6494561, 6492813, 6495319, 6492515], "D": [6489455, 6489243, 6493425, 6488979, 6491658, 6492358, 6492448, 6491514, 6489861, 6490799, 6495344, 6495192, 6489703, 6494515, 6492875, 6489743, 6494196, 6487259], "C": [6487948, 6491220, 6490395, 6494547, 6494500, 6494191, 6490274, 6489790, 6489399, 6488464, 6495052, 6490305, 6492770, 6492019, 6492713, 6491433, 6490329, 6492999, 6490722], "A": [6485874, 6485358, 6485796, 6485600, 6486055, 6486577, 6485984, 6486210, 6485602, 6485840, 6487099, 6485836, 6485353, 6486318, 6486057, 6485564, 6493037]}, "name": "B. Sereja and Table ", "statement": "Sereja has an rectangular table , each cell of the table contains a zero\r\nor a number one. Sereja wants his table to meet the following\r\nrequirement: each connected component of the same values forms a\r\nrectangle with sides parallel to the sides of the table. Rectangles\r\nshould be filled with cells, that is, if a component form a rectangle of\r\nsize , then the component must contain exactly cells.A connected\r\ncomponent of the same values is a set of cells of the table that meet\r\nthe following conditions: every two cells of the set have the same\r\nvalue; the cells of the set form a connected region on the table (two\r\ncells are connected if they are adjacent in some row or some column of\r\nthe table); it is impossible to add any cell to the set unless we\r\nviolate the two previous conditions. Can Sereja change the values of at\r\nmost cells of the table so that the table met the described requirement?\r\nWhat minimum number of table cells should he change in this case?\r\n", "solutions": ["#include <iostream>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <cstdio>\n#include <queue>\n#include <set>\n#include <map>\n#include <fstream>\n#include <cstdlib>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <numeric>\n\n#define mp make_pair\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define forn(i, n) for (int i = 0; i < (int)(n); ++i)\n#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long long i64;\ntypedef vector<i64> vi64;\ntypedef vector<vi64> vvi64;\n\nint a[101][101];\nint p[101][101];\n\nint N, M, K;\n\nint basedx(int i) {\n    int res = 0;\n    forn(x, N) {\n        int r = 0;\n        forn(y, M) {\n            if (a[i][y] == a[x][y]) ++r;\n        }\n        res += min(r, M - r);\n    }\n    return res;\n}\n\nint basedy(int j) {\n    int res = 0;\n    forn(y, M) {\n        int r = 0;\n        forn(x, N) {\n            if (a[x][y] == a[x][j]) ++ r;\n        }\n        res += min(r, N - r);\n    }\n    return res;\n}\n\nint main() {\n#ifdef LOCAL_DEFINE\n    freopen(\"input.txt\", \"rt\", stdin);\n    freopen(\"output.txt\", \"wt\", stdout);\n#endif\n\n    cin >> N >> M >> K;\n    forn(i, N) forn(j, M) cin >> a[i][j];\n    int ans = 1e9;\n    if (N <= 5 && M <= 5) {\n        int b[5];\n        forn(i, M) {\n            b[i] = a[0][i];\n        }\n        forn(m, (1 << M)) {\n            int r = 0;\n            forn(i, M) {\n                a[0][i] = (m >> i) & 1;\n                if (a[0][i] != b[i]) {\n                    ++r;\n                }\n            }\n            r += basedx(0);\n            ans = min(ans, r);\n        }\n        cout << (ans <= K ? ans : -1) << '\\n';\n        return 0;\n    }\n    if (N > 5) {\n        forn(i, N) {\n            ans = min(ans, basedx(i));\n            forn(j, M) {\n                a[i][j] ^= 1;\n                ans = min(ans, basedx(i) + 1);\n                a[i][j] ^= 1;\n            }\n        }\n    } else if (M > 5) {\n        forn(j, M) {\n            ans = min(ans, basedy(j));\n            forn(i, N) {\n                a[i][j] ^= 1;\n                ans = min(ans, basedy(j) + 1);\n                a[i][j] ^= 1;\n            }\n        }\n    }\n    cout << (ans <= K ? ans : -1) << '\\n';\n\n#ifdef LOCAL_DEFINE\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\n#endif\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "greedy"], "dificulty": "2200", "interactive": false}