{
    "link": "https://codeforces.com//contest/333/problem/E",
    "problemId": "3373",
    "problem_idx": "E",
    "shortId": "333E",
    "contest_number": "333",
    "problem_submissions": {
        "C": [
            4188846,
            4188839,
            4181075,
            4185234,
            4185523,
            4181601,
            4984551
        ],
        "E": [
            4188775,
            4188772,
            4188763,
            4188761,
            4188751,
            4184852,
            4183356,
            4182849,
            4183109,
            4181299,
            4179516,
            4184372,
            4183323,
            4184498,
            4184601,
            4184967,
            4188899,
            4183262,
            4185857,
            4189453,
            4189430,
            4189422,
            4189074,
            4186245,
            4185068,
            4181537
        ],
        "D": [
            4177757,
            4180517,
            4180333,
            4180428,
            4180206,
            4183380,
            4180154,
            4179998,
            4182482,
            4188785,
            4180480,
            4189492,
            4189489,
            4189487,
            4182551,
            4183041,
            4185442,
            4183297,
            4181604,
            4185194,
            4187366,
            4187266
        ],
        "B": [
            4175966,
            4176598,
            4177213,
            4176845,
            4177457,
            4177188,
            4200825,
            4200823,
            4177391,
            4183089,
            4178821,
            4177992,
            4179001,
            4180178,
            4179860,
            4176566,
            4178918,
            4176886,
            4177236
        ],
        "A": [
            4174903,
            4175083,
            4175574,
            4175820,
            4175080,
            4175668,
            4176548,
            4175429,
            4175639,
            4175919,
            4177018,
            4175803,
            4175480,
            4175531,
            4175684,
            4175917
        ]
    },
    "name": "E. Summer Earnings",
    "statement": "Many schoolchildren look for a job for the summer, and one day, when\r\nGerald was still a schoolboy, he also decided to work in the summer. But\r\nas Gerald was quite an unusual schoolboy, he found quite unusual work. A\r\ncertain Company agreed to pay him a certain sum of money if he draws\r\nthem three identical circles on a plane. The circles must not interfere\r\nwith each other (but they may touch each other). He can choose the\r\ncenters of the circles only from the options granted by the Company. He\r\nis free to choose the radius of the circles himself (all three radiuses\r\nmust be equal), but please note that the larger the radius is, the more\r\nhe gets paid. Help Gerald earn as much as possible.\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_DEPRECATE\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n#include <vector>\n#include <queue>\n#include <iostream>\n#include <iterator>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <sstream>\n#include <fstream>\n#include <ctime> \n#include <cstring>\n#include <functional>\n#include <bitset>\n#pragma comment(linker, \"/STACK:66777216\")\nusing namespace std;\n#define pb push_back\n#define ppb pop_back\n#define pi 3.1415926535897932384626433832795028841971\n#define mp make_pair\n#define x first\n#define y second\n#define pii pair<int,int>\n#define pdd pair<double,double>\n#define INF 1000000000\n#define FOR(i,a,b) for (int _n(b), i(a); i <= _n; i++)\n#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;i--)\n#define all(c) (c).begin(), (c).end()\n#define SORT(c) sort(all(c))\n#define rep(i,n) FOR(i,1,(n))\n#define rept(i,n) FOR(i,0,(n)-1)\n#define L(s) (int)((s).size())\n#define C(a) memset((a),0,sizeof(a))\n#define VI vector <int>\n#define ll long long\n\ninline pii operator -(const pii &a, const pii &b) {\n    return mp(a.x - b.x, a.y - b.y);\n}\ninline int vec(const pii &a, const pii &b) {\n    return a.x * b.y - b.x * a.y;\n}\n\nint a,b,c,d,n,m,k;\npii mas[3005], tmp[3005], res[3005], hull[3005];\ninline int dist(const pii &a, const pii &b) {\n    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);\n}\ninline bool cool(pii *mas, int n, long double xx) {\n    if (n < 2) return 0;\n    int k = 0;\n    rept(iter,2)    {\n        int h = 0;\n        rept(i, n) {\n            while (h >= 2 && vec(mas[i] - hull[h - 1], hull[h - 1] - hull[h - 2]) <= 0) --h;\n            hull[h++] = mas[i];\n        }\n        --h;\n        rept(i, h) res[k++] = hull[i];\n        reverse(mas, mas + n);\n    }\n    \n    if (k == 2) {\n        if (dist(res[0], res[1]) >= xx) return 1; else\n        return 0;\n    }\n    int a = 0;\n    rept(i, k) {\n        if (a == i) {\n            a = i + 1;\n            if (a == k) a = 0;\n        }\n        while (1) {\n            int t = a + 1;\n            if (t >= k) t = 0;\n            if (t == i) break;\n            int s1 = dist(res[i], res[a]);\n            int s2 = dist(res[i], res[t]);\n            if (s2 >= s1) a = t; else\n            break;\n        }\n        if (dist(res[i], res[a]) >= xx) return 1;\n    }\n    return 0;\n}\ninline bool check(long double xx) {\n    rept(v, n) {\n        int k = 0;\n        FOR(i, v + 1, n - 1) {\n            int s = (mas[v].x - mas[i].x) * (mas[v].x - mas[i].x) + (mas[v].y - mas[i].y) * (mas[v].y - mas[i].y);\n            if (s >= xx) {\n                tmp[k++] = mas[i];\n            }\n        }\n        if (cool(tmp, k, xx)) return 1;\n    }\n    return 0;\n}\nint main() {\n    //freopen(\"input.txt\",\"r\",stdin);\n    //freopen(\"output.txt\",\"w\",stdout);\n\n    scanf(\"%d\", &n);\n    rept(i, n) {\n        scanf(\"%d%d\", &mas[i].x, &mas[i].y);\n    }\n\n    sort(mas, mas + n);\n    long double l = 0.0, r = 29000;\n    rept(hhod, 33) {\n        long double xx = (r + l) / 2.0;\n        if (check(xx * xx * 4)) l = xx; else\n        r = xx;\n    }\n\n    printf(\"%.12lf\\n\", (double)((l + r) / 2));\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "geometry",
        "sortings"
    ],
    "dificulty": "2500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\E. Summer Earnings.json",
    "editorial_link": "https://codeforces.com//blog/entry/8418",
    "editorial": "In this problem it is need to draw three circle equals together with\r\nmaximum possible radius with centers in given points. In another words\r\nit is need to find triangle wich minimum side is maximal. Unfortunately\r\nsolution with bit optimize is not expected for us. Lets call to memory\r\ntwo simple geometric facts. Firstly, sum of alnges of trianle is equals\r\nto . Secondly, minimal angle is opposit to minimal side of triangle.\r\nSince, at leats one side of angles of triangle not less then and this\r\nanlge is not least one. And side opposite to it is not least side.\r\nTherefore, if in then . And then lets do the follows. Lets iterate apex\r\nand for each lets find triangle with maximal minimum of sides when is\r\nthe apex of triangle and . For it lets sort all other points by the\r\nangle relative to , and for each point lets find point most distant to\r\namong such points that . We have to use segment tree for maximum and two\r\npointers or binary searsh to now left and right bound of possible points\r\nduring iterating . Finally, we have solution of time .\r\n",
    "hint": []
}