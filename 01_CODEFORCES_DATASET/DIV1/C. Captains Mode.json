{"link": "https://codeforces.com//contest/377/problem/C", "problemId": "4963", "problem_idx": "C", "shortId": "377C", "contest_number": "377", "problem_submissions": {"E": [5565104, 5561250, 5564607, 5609766, 5609753, 16200081], "C": [5557198, 5559102, 5556756, 5557878, 5557073, 5556778, 5561172, 5559969, 5556623, 5561484, 5557118, 5556739, 5555480, 5555881, 5556358, 5558864, 5562930, 5557451], "B": [5555860, 5557367, 5555019, 5553998, 5554910, 5555169, 5554737, 5555727, 5555389, 5556153, 5555427, 5554761, 5558108, 5554728, 5554498, 5556897, 5555212, 5555735], "D": [5554743, 5555639, 5559458, 5563602, 5559736, 5559573, 5557812, 5558888, 5560657, 5558023, 5561888, 5561586, 5561721, 5561010, 5567302, 5562027, 5561348, 5557665, 5560854], "A": [5552294, 5552852, 5553023, 5554895, 5553159, 5553613, 5552588, 5552740, 5553136, 5552790, 5552857, 5552997, 5553105, 5552479, 5552633, 5554023, 5552441]}, "name": "C. Captains Mode", "statement": "Kostya is a progamer specializing in the discipline of Dota 2. Valve\r\nCorporation, the developer of this game, has recently released a new\r\npatch which turned the balance of the game upside down. Kostya, as the\r\ncaptain of the team, realizes that the greatest responsibility lies on\r\nhim, so he wants to resort to the analysis of innovations patch from the\r\nmathematical point of view to choose the best heroes for his team in\r\nevery game.A Dota 2 match involves two teams, each of them must choose\r\nsome heroes that the players of the team are going to play for, and it\r\nis forbidden to choose the same hero several times, even in different\r\nteams. In large electronic sports competitions where Kostya\u2019s team is\r\ngoing to participate, the matches are held in the Captains Mode. In this\r\nmode the captains select the heroes by making one of two possible\r\nactions in a certain, predetermined order: pick or ban. To pick a hero\r\nfor the team. After the captain picks, the picked hero goes to his team\r\n(later one of a team members will play it) and can no longer be selected\r\nby any of the teams. To ban a hero. After the ban the hero is not sent\r\nto any of the teams, but it still can no longer be selected by any of\r\nthe teams. The team captain may miss a pick or a ban. If he misses a\r\npick, a random hero is added to his team from those that were available\r\nat that moment, and if he misses a ban, no hero is banned, as if there\r\nwas no ban.Kostya has already identified the strength of all the heroes\r\nbased on the new patch fixes. Of course, Kostya knows the order of picks\r\nand bans. The strength of a team is the sum of the strengths of the\r\nteam\u2019s heroes and both teams that participate in the match seek to\r\nmaximize the difference in strengths in their favor. Help Kostya\r\ndetermine what team, the first one or the second one, has advantage in\r\nthe match, and how large the advantage is.\r\n", "solutions": ["#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <memory.h>\n\nusing namespace std;\n\nconst int inf = (int)1e9;\n\nchar c[123];\nint who[123], skill[123];\n\nint f[1234567];\nint kb[1234567];\n\nint main() {\n  int _n;\n  scanf(\"%d\", &_n);\n  for (int i = 0; i < _n; i++) scanf(\"%d\", skill + i);\n  sort(skill, skill + _n);\n  reverse(skill, skill + _n);\n  int m;\n  scanf(\"%d\", &m);\n  for (int i = 0; i < m; i++) {\n    char ch = getchar();\n    while (ch != 'p' && ch != 'b') ch = getchar();\n    c[i] = ch;\n    scanf(\"%d\", who + i);\n  }\n  kb[0] = 0;\n  for (int t = 1; t < (1 << m); t++) kb[t] = kb[t & (t - 1)] + 1;\n  f[(1 << m) - 1] = 0;\n  for (int t = (1 << m) - 2; t >= 0; t--) {\n    if (who[kb[t]] == 1) {\n      f[t] = -inf;\n      for (int i = 0; i < m; i++)\n        if (!(t & (1 << i))) {\n          int ft = f[t + (1 << i)];\n          if (c[kb[t]] == 'p') ft += skill[i];\n          if (ft > f[t]) f[t] = ft;\n        }\n    } else {\n      f[t] = inf;\n      for (int i = 0; i < m; i++)\n        if (!(t & (1 << i))) {\n          int ft = f[t + (1 << i)];\n          if (c[kb[t]] == 'p') ft -= skill[i];\n          if (ft < f[t]) f[t] = ft;\n        }\n    }\n  }\n  printf(\"%d\\n\", f[0]);\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "dp", "games"], "dificulty": "2200", "interactive": false}