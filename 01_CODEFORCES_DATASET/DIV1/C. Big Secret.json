{"link": "https://codeforces.com//contest/966/problem/C", "problemId": "179477", "problem_idx": "C", "shortId": "966C", "contest_number": "966", "problem_submissions": {"E": [37728467, 37721887, 37727395, 37722353, 46428064, 37735854, 37726097, 37728168, 37731395, 37731373], "D": [37722933, 37721182, 37720577, 37745366, 37727547, 37724656, 37720856, 37720615, 37721601, 37723190, 37720741, 37720916, 37854456, 37723453, 37723867, 37723823, 37723640, 37725199], "C": [37716531, 37723619, 37716233, 37716062, 37721394, 37719905, 37724974, 37710146, 37715347, 37715961, 37715642, 37715427, 37717480, 37715886, 37716616, 37716460, 37712823, 37718703, 37718856], "B": [37712342, 37710216, 37712076, 37714505, 37717238, 37717093, 37713464, 37712937, 37711956, 37712143, 37712153, 37712830, 37714037, 37717527, 37712504, 37714456, 37719214, 37710052, 37715647], "A": [37709493, 37711125, 37709073, 37709222, 37711428, 37711424, 37710230, 37723341, 37715473, 37709490, 37710976, 37717218, 37726403, 37716138, 37716852, 37710495, 37715732, 37712927, 37711795], "F": [37856043]}, "name": "C. Big Secret", "statement": "Vitya has learned that the answer for The Ultimate Question of Life, the\r\nUniverse, and Everything is not the integer 42, but an increasing\r\ninteger sequence a_1,\r\nldots, a_n. In order to not reveal the secret earlier than needed, Vitya\r\nencrypted the answer and obtained the sequence b_1,\r\nldots, b_n using the following rules: b_1 = a_1; b_i = a_i\r\noplus a_{i - 1} for all i from 2 to n, where x\r\noplus y is the bitwise XOR of x and y. It is easy to see that the\r\noriginal sequence can be obtained using the rule a_i = b_1\r\noplus\r\nldots\r\noplus b_i.However, some time later Vitya discovered that the integers\r\nb_i in the cypher got shuffled, and it can happen that when decrypted\r\nusing the rule mentioned above, it can produce a sequence that is not\r\nincreasing. In order to save his reputation in the scientific community,\r\nVasya decided to find some permutation of integers b_i so that the\r\nsequence a_i = b_1\r\noplus\r\nldots\r\noplus b_i is strictly increasing. Help him find such a permutation or\r\ndetermine that it is impossible.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define L long long\n#define pb push_back\nusing namespace std;\nint n,u[100];\nL a[100010],p;\nvector<L> x[100],f;\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tint i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t  {\n\t   scanf(\"%lld\",&a[i]);\n\t   for(j=60;!(a[i]&(1ll<<j));j--);\n\t   x[j].pb(a[i]);\n      }\n    do\n      {\n       for(i=0;i<=60;i++)\n         if(!(p&(1ll<<i)) && u[i]<x[i].size())\n           {\n            p^=x[i][u[i]];\n            f.pb(x[i][u[i]]);\n            u[i]++;\n            break;\n           }\n      }\n    while(i<=60);\n    if(f.size()==n)\n      {\n       printf(\"Yes\\n\");\n       for(i=0;i<n;i++)\n         printf(\"%lld \",f[i]);\n      }\n    else\n      printf(\"No\\n\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "data structures", "greedy", "math"], "dificulty": "2200", "interactive": false}