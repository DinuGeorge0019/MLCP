{"link": "https://codeforces.com//contest/341/problem/A", "problemId": "3422", "problem_idx": "A", "shortId": "341A", "contest_number": "341", "problem_submissions": {"D": [4376750, 4378780, 4376395, 4376720, 4378230, 4379371, 4379846, 4378978, 4379778, 4378578, 4381466, 4381249, 4379639, 4434623, 4381692, 4380681, 4380927, 4380941, 4449185, 4374777], "C": [4375168, 4374068, 4379294, 4375659, 4375652, 4375871, 4375036, 4378006, 4374746, 4375347, 4374858, 4376054, 4375611, 4377642, 4376535, 4378502, 4380054, 4385371], "B": [4372755, 4372469, 4374229, 4375035, 4374390, 4374268, 4379570, 4373332, 4379590, 4372609, 4373078, 4372906, 4373853, 4373520, 4374372, 4374299, 4376277, 4376672], "A": [4372149, 4371769, 4372926, 4372916, 4383777, 4373604, 4372813, 4371963, 4372756, 4380996, 4371671, 4372384, 4372154, 4458518, 4372373, 4372183, 4373535, 4372955, 4378126, 4376128], "E": [4404432, 4383929, 4395989, 4381763]}, "name": "A. Tourist Problem", "statement": "Iahub is a big fan of tourists. He wants to become a tourist himself, so\r\nhe planned a trip. There are destinations on a straight road that Iahub\r\nwants to visit. Iahub starts the excursion from kilometer 0. The\r\ndestinations are described by a non-negative integers sequence , , ...,\r\n. The number represents that the th destination is at distance\r\nkilometers from the starting point. No two destinations are located in\r\nthe same place. Iahub wants to visit each destination only once. Note\r\nthat, crossing through a destination is not considered visiting, unless\r\nIahub explicitly wants to visit it at that point. Also, after Iahub\r\nvisits his last destination, he doesn\u2019t come back to kilometer 0, as he\r\nstops his trip at the last destination. The distance between destination\r\nlocated at kilometer and next destination, located at kilometer , is\r\nkilometers. We call a \"route\" an order of visiting the destinations.\r\nIahub can visit destinations in any order he wants, as long as he visits\r\nall destinations and he doesn\u2019t visit a destination more than once.\r\nIahub starts writing out on a paper all possible routes and for each of\r\nthem, he notes the total distance he would walk. He\u2019s interested in the\r\naverage number of kilometers he would walk by choosing a route. As he\r\ngot bored of writing out all the routes, he asks you to help him.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cassert>\n#include <cmath>\n#include <ctime>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <queue>\n#include <deque>\n#include <list>\n#include <set>\n#include <map>\n\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#define sz(x) ((int)(x).size())\n\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef pair<int, int> pii;\n\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\n\nint main() {\n  #ifdef DEBUG\n  freopen(\".in\", \"r\", stdin);\n  freopen(\".out\", \"w\", stdout);\n  #endif\n\n  int n;\n  while (scanf(\"%d\", &n) >= 1) {\n    vi as(n);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", &as[i]);\n    sort(as.begin(), as.end());\n\n    ll suml = 0, sumr = 0;\n    for (int i = 0; i < n; i++) sumr += as[i];\n\n    ll ans = 0;\n    for (int i = 0; i < n; i++) {\n      sumr -= as[i];\n\n      ll sumLen = 0;\n      sumLen += sumr - ll(n - i - 1) * as[i];\n      sumLen += ll(i) * as[i] - suml;\n//      eprintf(\"%I64d (%I64d %I64d)\\n\", sumLen, suml, sumr);\n      ans += sumLen;\n\n      suml += as[i];\n    }\n//    eprintf(\"%I64d %I64d\\n\", ans, ansb);\n    for (int i = 0; i < n; i++)\n      ans += as[i];\n    ll ansb = n;\n    ll x = gcd(ans, ansb);\n    ans /= x;\n    ansb /= x;\n    printf(\"%I64d %I64d\\n\", ans, ansb);\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "1600", "interactive": false}