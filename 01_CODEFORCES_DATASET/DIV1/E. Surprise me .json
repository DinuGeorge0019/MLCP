{"link": "https://codeforces.com//contest/809/problem/E", "problemId": "106954", "problem_idx": "E", "shortId": "809E", "contest_number": "809", "problem_submissions": {"E": [27253997, 27253429], "D": [27249075, 27251826, 27251250, 27252529, 27250844, 27248855, 27249814, 27250805, 27251747, 27249258, 27246563, 27254846, 27254749], "C": [27246781, 27244976, 27248082, 27245390, 27251108, 27243956, 27253183, 27253135, 27244552, 27253129, 27245688, 27244697, 27248015, 27245843, 27247902, 27248924, 27249554, 27245267, 27250102, 27250477], "B": [27242404, 27247452, 27245322, 27249228, 27241882, 27241895, 27246216, 27242600, 27252141, 27243365, 27243040, 27244839, 27249122, 27244039, 27244488], "A": [27238822, 27238882, 27238974, 27238780, 27251619, 27238718, 27238690, 27238879, 27238895, 27238975, 27238855, 27238770, 27239286, 27239029, 27238990, 27239207, 27238846, 27239176, 27238782]}, "name": "E. Surprise me ", "statement": "Tired of boring dates, Leha and Noora decided to play a game.Leha found\r\na tree with vertices numbered from to . We remind you that tree is an\r\nundirected graph without cycles. Each vertex of a tree has a number\r\nwritten on it. Quite by accident it turned out that all values written\r\non vertices are distinct and are natural numbers between and .The game\r\ngoes in the following way. Noora chooses some vertex of a tree uniformly\r\nat random and passes a move to Leha. Leha, in his turn, chooses (also\r\nuniformly at random) some vertex from remaining vertices of a tree . As\r\nyou could guess there are variants of choosing vertices by players.\r\nAfter that players calculate the value of a function of the chosen\r\nvertices where is Euler\u2019s totient function and is the shortest distance\r\nbetween vertices and in a tree.Soon the game became boring for Noora, so\r\nLeha decided to defuse the situation and calculate expected value of\r\nfunction over all variants of choosing vertices and , hoping of at least\r\nsomehow surprise the girl.Leha asks for your help in calculating this\r\nexpected value. Let this value be representable in the form of an\r\nirreducible fraction . To further surprise Noora, he wants to name her\r\nthe value . Help Leha!\r\n", "solutions": ["//PRZEMYSL ASSERTY\n\n//SPRAWDZ CORNER CASE'Y, MINIMALNE I MAKSYMALNE WEJ\u015aCIE I WYJ\u015aCIE\n\n//MODULO = 1\n\n//while (clock()<=69*CLOCKS_PER_SEC)\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\nusing namespace std;\n\ntemplate <typename T>\nusing ordered_set =\n    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef LOCAL\n~debug() { cerr << endl; }\neni(!=) cerr << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n  *this << \"[\";\n  for (auto it = d.b; it != d.e; ++it)\n    *this << \", \" + 2 * (it == d.b) << *it;\n  ris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define shandom_ruffle random_shuffle\n\nconst int nax=1000*1007;\nconst long long mod=1000*1000*1000+7;\n\nint n;\nint tab[nax];\n\nvector <int> graf[nax];\n\nint sito[nax];\nint czybez[nax];\nlong long dziwne[nax];\nlong long odziwne[nax];\nlong long magia[nax];\nlong long phi[nax];\nint parz[nax];\nvector <int> dzie[nax];\n\nint bylcen[nax];\nint roz[nax];\nint maxroz[nax];\n\nvector <int> spo;\n\nlong long wyn;\n\nlong long dziel(long long a, long long b)\n{\n\tlong long wyk=mod-2;\n\twhile(wyk)\n\t{\n\t\tif (wyk&1)\n\t\t{\n\t\t\ta*=b;\n\t\t\ta%=mod;\n\t\t}\n\t\tb*=b;\n\t\tb%=mod;\n\t\twyk>>=1;\n\t}\n\treturn a;\n}\n\nvoid dfs1(int v, int oj)\n{\n\tspo.push_back(v);\n\troz[v]=1;\n\tmaxroz[v]=0;\n\tfor (int i : graf[v])\n\t{\n\t\tif (i==oj || bylcen[i])\n\t\t\tcontinue;\n\t\tdfs1(i, v);\n\t\troz[v]+=roz[i];\n\t\tmaxroz[v]=max(maxroz[v], roz[i]);\n\t}\n}\n\nint g;\n\nvector < pair <int,int> > wek[nax];\n\nlong long ile[nax];\n\nvoid dodaj(int v, long long r)\n{\n\tfor (int i : dzie[v])\n\t{\n\t\tile[i]+=r*phi[v];\n\t\tile[i]%=mod;\n\t}\n}\n\nvoid dfs2(int v, int oj, int dlu)\n{\n\twek[g].push_back({tab[v], dlu});\n\tfor (int i : graf[v])\n\t{\n\t\tif (i==oj || bylcen[i])\n\t\t\tcontinue;\n\t\tdfs2(i, v, dlu+1);\n\t}\n}\n\nvoid szuk(int v)\n{\n\tif (bylcen[v])\n\t\treturn;\n\tspo.clear();\n\tdfs1(v, 0);\n\tint c=-1;\n\tfor (int i : spo)\n\t\tif (maxroz[i]*2<=(int)spo.size() && ((int)spo.size()-roz[i])*2<=(int)spo.size())\n\t\t\tc=i;\n\tassert(c!=-1);\n\tdebug() << c;\n\tbylcen[c]=1;\n\t\n\tg=1;\n\twek[1].clear();\n\twek[1].push_back({tab[c], 0});\n\tfor (int i : graf[c])\n\t{\n\t\tif (bylcen[i])\n\t\t\tcontinue;\n\t\tg++;\n\t\twek[g].clear();\n\t\tdfs2(i, c, 1);\n\t}\n\t\n\tfor (int i=1; i<=g; i++)\n\t\tdebug() << i << \" \" << wek[i];\n\t\n\tfor (int i=1; i<=g; i++)\n\t\tfor (auto j : wek[i])\n\t\t\tdodaj(j.first, 1);\n\t\n\tfor (int i=1; i<=g; i++)\n\t{\n\t\tfor (auto j : wek[i])\n\t\t\tdodaj(j.first, mod-1);\n\t\t\t\n\t\tfor (auto j : wek[i])\n\t\t{\n\t\t\tfor (auto l : dzie[j.first])\n\t\t\t{\n\t\t\t\twyn+=((magia[l]*phi[j.first])%mod)*((j.second*ile[l])%mod);\n\t\t\t\twyn%=mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (auto j : wek[i])\n\t\t\tdodaj(j.first, 1);\n\t}\n\t\n\tfor (int i=1; i<=g; i++)\n\t\tfor (auto j : wek[i])\n\t\t\tdodaj(j.first, mod-1);\n\t\n\t\n\tfor (int i : graf[c])\n\t\tszuk(i);\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i=2; i<=n; i++)\n\t{\n\t\tif (!sito[i])\n\t\t\tfor (int j=i; j<=n; j+=i)\n\t\t\t\tsito[j]=i;\n\t}\n\tczybez[1]=1;\n\tfor (int i=2; i<=n; i++)\n\t{\n\t\tczybez[i]=czybez[i/sito[i]];\n\t\tif (sito[i/sito[i]]==sito[i])\n\t\t\tczybez[i]=0;\n\t}\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tif (czybez[i])\n\t\t{\n\t\t\tfor (int j=i; j<=n; j+=i)\n\t\t\t\tdzie[j].push_back(i);\n\t\t\tdziwne[i]=1;\n\t\t\tint v=i;\n\t\t\twhile(v>1)\n\t\t\t{\n\t\t\t\tdziwne[i]=(dziwne[i]*dziel(sito[v]-1, sito[v]))%mod;\n\t\t\t\tv/=sito[v];\n\t\t\t\tparz[i]^=1;\n\t\t\t}\n\t\t\todziwne[i]=dziel(1, dziwne[i]);\n\t\t\t\n\t\t\tfor (int j : dzie[i])\n\t\t\t{\n\t\t\t\tif (parz[j]==parz[i])\n\t\t\t\t\tmagia[i]+=odziwne[j];\n\t\t\t\telse\n\t\t\t\t\tmagia[i]-=odziwne[j];\n\t\t\t}\n\t\t\tmagia[i]%=mod;\n\t\t\tmagia[i]+=mod;\n\t\t\tmagia[i]%=mod;\n\t\t\t\n\t\t\t//debug() << i << \" \" << dziwne[i] << \" \" << (dziwne[i]*i)%mod;\n\t\t}\n\t}\n\tfor (int i=1; i<=n; i++)\n\t\tphi[i]=(i*dziwne[dzie[i].back()])%mod;\n\tdebug() << range(dzie+1, dzie+1+n);\n\tfor (int i=1; i<=n; i++)\n\t\tscanf(\"%d\", &tab[i]);\n\tfor (int i=1; i<n; i++)\n\t{\n\t\tint p1, p2;\n\t\tscanf(\"%d%d\", &p1, &p2);\n\t\tgraf[p1].push_back(p2);\n\t\tgraf[p2].push_back(p1);\n\t}\n\tszuk(1);\n\twyn=dziel(wyn, n);\n\twyn=dziel(wyn, n-1);\n\twyn*=2;\n\twyn%=mod;\n\tprintf(\"%lld\\n\", wyn);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["divide and conquer", "math", "number theory", "trees"], "dificulty": "3100", "interactive": false}