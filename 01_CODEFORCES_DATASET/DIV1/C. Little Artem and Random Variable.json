{
    "link": "https://codeforces.com//contest/668/problem/C",
    "problemId": "57061",
    "problem_idx": "C",
    "shortId": "668C",
    "contest_number": "668",
    "problem_submissions": {
        "F": [
            17499550,
            17496606,
            17499490,
            17520108,
            17532592,
            18501140,
            17506872
        ],
        "B": [
            17492263,
            17485934,
            18962334,
            18962098,
            17485171,
            17485437,
            17486714,
            17488923,
            17486945,
            17485337,
            17484629,
            17487464,
            17484958,
            17488407,
            17491479,
            17485748,
            17490028,
            17488673,
            17494403,
            17485637
        ],
        "D": [
            17490332,
            17487430,
            17490281,
            17491665,
            17491589,
            17491023,
            17492381,
            17491847,
            17510482,
            17491540,
            17491742,
            17492256,
            17492993,
            17492659,
            17489839,
            17492977,
            17494347,
            17514667,
            17493357,
            17493004,
            17491261
        ],
        "C": [
            17488542,
            17483428,
            17488211,
            17499595,
            17489413,
            17489671,
            17487966,
            17489865,
            17488377,
            17490380,
            17490343,
            17491934,
            17490751,
            17488239,
            17491003,
            17488540,
            17492291,
            17488705,
            17488521
        ],
        "A": [
            17482539,
            17489363,
            17482477,
            17482341,
            17484937,
            17482743,
            17482929,
            17482753,
            17482646,
            17483327,
            17482913,
            17484500,
            17493264,
            17483554,
            17483365,
            17482861,
            17485075,
            17503074
        ],
        "E": [
            17501421,
            17514396,
            17516687,
            17501875,
            18500143,
            17500162,
            17503103
        ]
    },
    "name": "C. Little Artem and Random Variable",
    "statement": "Little Artyom decided to study probability theory. He found a book with\r\na lot of nice exercises and now wants you to help him with one of\r\nthem.Consider two dices. When thrown each dice shows some integer from\r\nto inclusive. For each dice the probability of each outcome is given (of\r\ncourse, their sum is ), and different dices may have different\r\nprobability distributions.We throw both dices simultaneously and then\r\ncalculate values and , where is equal to the outcome of the first dice,\r\nwhile is equal to the outcome of the second dice. You don\u2019t know the\r\nprobability distributions for particular values on each dice, but you\r\nknow the probability distributions for and . That is, for each from to\r\nyou know the probability that would be equal to and the probability that\r\nwould be equal to . Find any valid probability distribution for values\r\non the dices. It\u2019s guaranteed that the input data is consistent, that\r\nis, at least one solution exists.\r\n",
    "solutions": [
        "#include <string>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <set>\n#include <map>\n#include <queue>\n#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <cctype>\n#include <cassert>\n#include <limits>\n#include <functional>\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))\n#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))\n#if defined(_MSC_VER) || __cplusplus > 199711L\n#define aut(r,v) auto r = (v)\n#else\n#define aut(r,v) __typeof(v) r = (v)\n#endif\n#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)\n#define all(o) (o).begin(), (o).end()\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair((x),(y))\n#define mset(m,v) memset(m,v,sizeof(m))\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\nusing namespace std;\ntypedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii; typedef long long ll;\ntemplate<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }\ntemplate<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }\n\nint main() {\n\tint n;\n\twhile(~scanf(\"%d\", &n)) {\n\t\tvector<double> ma(n + 2), mi(n + 2);\n\t\trep(i, n)\n\t\t\tscanf(\"%lf\", &ma[i + 1]);\n\t\trep(i, n)\n\t\t\tscanf(\"%lf\", &mi[i + 1]);\n\t\t//P[a <  i && b <  i] = P[a < i] P[b < i]\n\t\t//P[a >= i && b >= i] = (1 - P[a < i]) (1 - P[b < i])\n\t\t//                    = 1 - P[b < i] - P[a < i] + P[a < i] P[b < i]\n\t\t//P[a < i] + P[b < i]\n\t\t//P[a = i] + P[b = i]\n\t\t//P[a <= i && b <= i] = P[a < i] P[b < i] + P[a < i] P[b = i] + P[a = i] P[b < i] + P[a = i] P[b = i]\n\t\tvector<double> lt(n + 2), ge(n + 2);\n\t\trer(i, 0, n)\n\t\t\tlt[i + 1] = lt[i] + ma[i];\n\t\tfor(int i = n; i >= 0; -- i)\n\t\t\tge[i] = ge[i + 1] + mi[i];\n\t\tvector<double> sumlt(n + 2);\n\t\trer(i, 0, n + 1)\n\t\t\tsumlt[i] = 1 - (ge[i] - lt[i]);\n\t\tvector<double> sum2(n + 2);\n\t\trer(i, 0, n)\n\t\t\tsum2[i] = sumlt[i + 1] - sumlt[i];\n\t\tvector<double> p1(n + 1), p2(n + 1);\n\t\tdouble suma = 0, sumb = 0;\n\t\trer(i, 1, n) {\n\t\t\tdouble a = sumb, b = suma;\n\t\t\tdouble t = ma[i];\n\t\t\tdouble u = sum2[i];\n\t\t\t//ax + by + xy = t, x + y = u\n\t\t\tdouble x = 1. / 2 * abs(sqrt(max(0., a*a - 2 * a*b + 2 * a*u + b*b + 2 * b*u - 4 * t + u*u)) + a - b + u);\n\t\t\tdouble y = u - x;\n\t\t\tp1[i] = x, p2[i] = y;\n\t\t\tsuma += p1[i], sumb += p2[i];\n\t\t}\n\t\trer(i, 1, n) {\n\t\t\tif(i != 1) putchar(' ');\n\t\t\tprintf(\"%.10f\", p1[i]);\n\t\t}\n\t\tputs(\"\");\n\t\trer(i, 1, n) {\n\t\t\tif(i != 1) putchar(' ');\n\t\t\tprintf(\"%.10f\", p2[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "probabilities"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Little Artem and Random Variable.json",
    "editorial_link": "https://codeforces.com//blog/entry/44538",
    "editorial": "First, let's solve inverse problem: find minimum (maximum) of two distributions. Let's use the following formulas:\n\nP(a = k) = P(a <= k) \u0097 P(a <= k-1) P(max(a, b) <= k) = P(a <= k) * P(b <= k)\n\nFor minimum:\n\nP(min(a, b) >= k) = P(a >= k) * P(b >= k) = (1 \u0097 P(a <= k-1)) *(1 \u0097 P(b <= k-1))\n\nNow in our original problem minimum and maximum defines system of square equations for each pair P(a <= k), P(b <= k).\n\nSolving these equations we get P(a<=k), P(b<=k) = (u + v \u00b1 sqrt((u + v)^2 \u0097 4u)) / 2, where u = P(max(a,b) <= k), v = P(min(a,b) <= k). Now we can notice that if there exists an answer, then there exists an answer when we chose the signs for each pair equally (check out this comment)"
}