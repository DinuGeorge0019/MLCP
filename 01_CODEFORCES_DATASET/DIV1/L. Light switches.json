{"link": "https://codeforces.com//contest/1423/problem/L", "problemId": "749092", "problem_idx": "L", "shortId": "1423L", "contest_number": "1423", "problem_submissions": {"J": [95462948, 95462931, 95462795, 95462776, 95462759, 95462752, 95462749, 95445856, 95445842, 95445741, 95445735, 95445720, 95436077, 95435983, 94779119, 94773285, 94770663, 94778562], "C": [94789081], "I": [94786050], "F": [94784528, 94776365, 94779778, 94781062], "H": [94781814, 94783650, 94777878, 94784871], "L": [94780014, 94780685, 94786643, 94773659], "B": [94771096, 94770153, 94772426, 94771466], "K": [94770723, 94771588, 94773427, 94774938], "A": [], "D": [], "E": [], "G": []}, "name": "L. Light switches", "statement": "Nikola owns a large warehouse which is illuminated by N light bulbs,\r\nnumbered 1 to N. At the exit of the warehouse, there are S light\r\nswitches, numbered 1 to S. Each switch swaps the on/off state for some\r\nlight bulbs, so if a light bulb is off, flipping the switch turns it on,\r\nand if the light bulb is on, flipping the switch turns it off.At the end\r\nof the day, Nikola wants to turn all the lights off. To achieve this, he\r\nwill flip some of the light switches at the exit of the warehouse, but\r\nsince Nikola is lazy, he wants to flip the _minimum_ number of switches\r\nrequired to turn all the lights off. Since Nikola was not able to\r\ncalculate the minimum number of switches, he asked you to help him.\r\nDuring a period of D days, Nikola noted which light bulbs were off and\r\nwhich were on at the end of each day. He wants you to tell him the\r\nminimum number of switches he needed to flip to turn all the lights off\r\nfor each of the D days or tell him that it\u2019s impossible.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 05.10.2020 17:29:35       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n, s, d;\n  cin >> n >> s >> d;\n  const int N = 1024;\n  vector<bitset<N>> a(s);\n  for (int i = 0; i < s; i++) {\n    int foo;\n    cin >> foo;\n    while (foo--) {\n      int j;\n      cin >> j;\n      --j;\n      a[i][j] = 1;\n    }\n  }\n  int half = 2 * s / 3;\n  vector<pair<long long, int>> v(1 << half);\n  for (int t = 0; t < (1 << half); t++) {\n    bitset<N> x;\n    for (int i = 0; i < half; i++) {\n      if (t & (1 << i)) {\n        x ^= a[i];\n      }\n    }\n    long long h = 0;\n    unsigned long long* z = (unsigned long long *)&x;\n    for (int i = 0; i < N / 64; i++) {\n      h = h * 239017239 + z[i];\n    }\n    v[t] = make_pair(h, __builtin_popcount(t));\n  }\n  sort(v.begin(), v.end());\n  while (d--) {\n    int foo;\n    cin >> foo;\n    bitset<N> y;\n    while (foo--) {\n      int j;\n      cin >> j;\n      --j;\n      y[j] = 1;\n    }\n    int ans = 42;\n    for (int t = 0; t < (1 << (s - half)); t++) {\n      bitset<N> x = y;\n      for (int i = half; i < s; i++) {\n        if (t & (1 << (i - half))) {\n          x ^= a[i];\n        }\n      }\n      long long h = 0;\n      unsigned long long* z = (unsigned long long *)&x;\n      for (int i = 0; i < N / 64; i++) {\n        h = h * 239017239 + z[i];\n      }\n      auto it = lower_bound(v.begin(), v.end(), make_pair(h, -1));\n      if (it != v.end() && it->first == h) {\n        ans = min(ans, it->second + __builtin_popcount(t));\n      }\n    }\n    cout << (ans == 42 ? -1 : ans) << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["meet-in-the-middle"], "dificulty": "2600", "interactive": false}