{"link": "https://codeforces.com//contest/420/problem/A", "problemId": "8698", "problem_idx": "A", "shortId": "420A", "contest_number": "420", "problem_submissions": {"D": [6447019, 6443008, 6912685, 6445957, 6445329, 6443168, 6444131, 6443396, 6445355, 6451593, 6451581, 6451576, 6445477, 6445823, 6445771, 6446204, 6445678, 6446109, 6446112, 6453468, 6446223, 6446441], "E": [6445798, 6444814, 6444979, 6445922, 97601411, 6445707, 6451168, 6446265, 6453470, 6452703], "B": [6443597, 6444025, 6443126, 6443737, 6443495, 6442572, 6444279, 6445309, 6444923, 6442844, 6443551, 6443899, 6443352, 6444309, 6444403, 6443539, 6442859, 6444609, 6443627], "C": [6442567, 6449379, 6444178, 6442191, 6444286, 6443894, 6442929, 6444396, 6449718, 6444138, 6442459, 6444175, 6443120, 6442842, 6444661, 6443838, 6443047, 6444348], "A": [6440359, 6440343, 6443435, 6440637, 6440896, 6440723, 6443481, 6440285, 6440476, 6440399, 6440452, 6440422, 6440497, 6442028, 6443134, 6440669, 6440645, 6440656, 6441090]}, "name": "A. Start Up", "statement": "Recently, a start up by two students of a state university of city F\r\ngained incredible popularity. Now it\u2019s time to start a new company. But\r\nwhat do we call it?The market analysts came up with a very smart plan:\r\nthe name of the company should be identical to its reflection in a\r\nmirror! In other words, if we write out the name of the company on a\r\npiece of paper in a line (horizontally, from left to right) with large\r\nEnglish letters, then put this piece of paper in front of the mirror,\r\nthen the reflection of the name in the mirror should perfectly match the\r\nline written on the piece of paper.There are many suggestions for the\r\ncompany name, so coming up to the mirror with a piece of paper for each\r\nname wouldn\u2019t be sensible. The founders of the company decided to\r\nautomatize this process. They asked you to write a program that can,\r\ngiven a word, determine whether the word is a \u2019mirror\u2019 word or not.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define FOR(i,s,e) for (int i=(s); i<(e); i++)\n#define FOE(i,s,e) for (int i=(s); i<=(e); i++)\n#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)\n#define CLR(a,x) memset(a, x, sizeof(a))\n#define EXP(i,l) for (int i=(l); i; i=qn[i])\n#define LLD long long\nusing namespace std;\n\nint ok, n;\nchar s[100005], v[300];\n\nint main(){\n\tscanf(\"%s\", s);\n\tv['A'] = v['H'] = v['I'] = v['M'] = v['O'] = v['T'] = v['U'] =\n\tv['V'] = v['W'] = v['X'] = v['Y'] = 1;\n\t\n\tn = strlen(s);\n\tok = 1;\n\tFOR(i,0,n){\n\t\tif (!v[s[i]]) ok = 0;\n\t\tif (s[i] != s[n - i - 1]) ok = 0;\n\t}\n\t\n\tputs(ok ? \"YES\" : \"NO\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1000", "interactive": false}