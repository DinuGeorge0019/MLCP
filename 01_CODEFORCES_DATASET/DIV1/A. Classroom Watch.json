{
    "link": "https://codeforces.com//contest/875/problem/A",
    "problemId": "128558",
    "problem_idx": "A",
    "shortId": "875A",
    "contest_number": "875",
    "problem_submissions": {
        "E": [
            31401553,
            31405129,
            31392967,
            31402730,
            31406263,
            31406095,
            31408958,
            31406910,
            31404200,
            32046810,
            31410002,
            31402646,
            31408382,
            31408030,
            31409057,
            31407519,
            31408444,
            31409422,
            31410812
        ],
        "F": [
            31398084,
            31399145,
            31396559,
            31395380,
            31403081,
            31400082,
            31403804,
            31406312,
            31396246,
            31399556,
            31401521,
            31404590,
            31400144,
            31400447,
            31405585,
            31400568,
            31400491
        ],
        "D": [
            31396611,
            31396495,
            31401963,
            31398464,
            31393353,
            31401930,
            31397316,
            31400838,
            31400178,
            31401960,
            31405520,
            31403500,
            31399600,
            31393212,
            31397813,
            31402582,
            31404085,
            31402819
        ],
        "C": [
            31393812,
            31393863,
            31406345,
            31407198,
            31398483,
            31396625,
            31396317,
            31397236,
            31394681,
            31407238,
            31393913,
            31402010,
            31410726,
            31409259,
            31398396,
            31400696,
            31397975
        ],
        "B": [
            31389883,
            31401063,
            31407394,
            31393529,
            31395934,
            31391146,
            31390806,
            31391837,
            31403535,
            31403703,
            31396960,
            31396617,
            31395546,
            31393934,
            31392682,
            31393141,
            31391081
        ],
        "A": [
            31388853,
            31388828,
            31407811,
            31389006,
            31389634,
            31389036,
            31388899,
            31388792,
            31388831,
            31388861,
            31388768,
            31390308,
            31389965,
            31388888,
            31389164,
            31388787,
            31388820
        ]
    },
    "name": "A. Classroom Watch",
    "statement": "Eighth-grader Vova is on duty today in the class. After classes, he went\r\ninto the office to wash the board, and found on it the number . He asked\r\nwhat is this number and the teacher of mathematics Inna Petrovna\r\nanswered Vova that is the answer to the arithmetic task for\r\nfirst-graders. In the textbook, a certain was given. The task was to add\r\nto the sum of the digits of the number written in decimal numeral\r\nsystem.Since the number on the board was small, Vova quickly guessed\r\nwhich could be in the textbook. Now he wants to get a program which will\r\nsearch for arbitrary values of the number for all suitable values of or\r\ndetermine that such does not exist. Write such a program for Vova.\r\n",
    "solutions": [
        "#include<iostream>\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\nusing namespace std;\nint n,x[1000],m;\ninline bool check(int p)\n{\n\tint k=p;\n\twhile(p)\n\t  {\n\t   k+=p%10;\n\t   p/=10;\n\t  }\n\treturn k==n;\n}\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tint i;\n\tscanf(\"%d\",&n);\n\tfor(i=n-100;i<=n;i++)\n\t  if(check(i))\n\t    x[++m]=i;\n\tprintf(\"%d\\n\",m);\n\tfor(i=1;i<=m;i++)\n\t  printf(\"%d\\n\",x[i]);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Classroom Watch.json",
    "editorial_link": "https://codeforces.com//blog/entry/55233",
    "editorial": "For numbers that doesn\u00e2\u0080\u0099t exceed sum of digits doesn\u00e2\u0080\u0099t exceed , so we can\r\njust iterate over all possible sums of digits and check if sum of digits\r\nof equals .\r\n"
}