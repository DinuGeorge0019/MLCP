{
    "link": "https://codeforces.com//contest/2101/problem/B",
    "problemId": "3379867",
    "problem_idx": "B",
    "shortId": "2101B",
    "contest_number": "2101",
    "problem_submissions": {
        "D": [
            319294804,
            319237348,
            319244062,
            319233111,
            319248438,
            319270934,
            319247114,
            319246074,
            319245749,
            319256088,
            319251191,
            319251037,
            319261866,
            319252875,
            319254950,
            319262267,
            319251514,
            319255297
        ],
        "F": [
            319280605,
            319281731,
            319296938,
            319296545,
            319307832,
            319307784,
            319294905,
            319285038,
            319280546,
            319439373,
            319610626,
            319290581,
            322062368,
            319622463
        ],
        "E": [
            319261457,
            319271887,
            319269195,
            319269179,
            319260221,
            319295559,
            319294878,
            319271978,
            319272872,
            319314013,
            319277656,
            319282084,
            319306454,
            319284113,
            319285106,
            319318396,
            319280504,
            319284828,
            319289037
        ],
        "C": [
            319227789,
            319248152,
            319242282,
            319237027,
            319228539,
            319229145,
            319235166,
            319232460,
            319242619,
            319234897,
            319234927,
            319241291,
            319239653,
            319237271,
            319245442,
            319240061,
            319236820
        ],
        "B": [
            319220410,
            319218858,
            319221247,
            319221700,
            319222744,
            319220314,
            319219692,
            319223217,
            319223401,
            319224243,
            319230362,
            319224392,
            319222585,
            319222454,
            319227561,
            319224092
        ],
        "A": [
            319215799,
            319216381,
            319216154,
            319217268,
            319216406,
            319216292,
            319216910,
            319216574,
            319215332,
            319218464,
            319222747,
            319217683,
            319216023,
            319216949,
            319220045,
            319216375
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/142788",
    "editorial": "SolutionThe first observation is that the parity of the position of the\r\nelements doesnâ€™t change with the operations. Thus, if an element is at\r\nan odd or even index in the initial permutation, it will retain the same\r\nparity in the final permutation. As long as we have four elements left,\r\nwe can freely adjust them within their index parity zone, but what about\r\nthe last three ones? We can see that the parity of the number of\r\ninversions is fixed, so by counting the inversions of the initial\r\npermutation, the order of the last four elements will be uniquely\r\ndetermined.\r\n",
    "name": "B. Quartet Swapping",
    "statement": "You are given a permutation a of length n^{\r\ntext{ }}. You are allowed to do the following operation any number of\r\ntimes (possibly zero): Choose an index 1\r\nle i\r\nle n - 3. Then, swap a_i with a_{i + 2}, and a_{i + 1} with a_{i + 3}\r\nsimultaneously. In other words, permutation a will be transformed from [\r\nldots, a_i, a_{i+1}, a_{i+2}, a_{i+3},\r\nldots] to [\r\nldots, a_{i+2}, a_{i+3}, a_{i}, a_{i+1},\r\nldots]. Determine the lexicographically smallest permutation^{\r\ntext{ }} that can be obtained by applying the above operation any number\r\nof times.^{\r\ntext{ }}A permutation of length n is an array consisting of n distinct\r\nintegers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a\r\npermutation, but [1,2,2] is not a permutation (2 appears twice in the\r\narray), and [1,3,4] is also not a permutation (n=3 but there is 4 in the\r\narray). ^{\r\ntext{ }}An array x is lexicographically smaller than an array y of the\r\nsame size if and only if the following holds: in the first position\r\nwhere x and y differ, the array x has a smaller element than the\r\ncorresponding element in y.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "greedy",
        "sortings"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Quartet Swapping.json",
    "hint": [
        "Hint 1 Is it possible for an element to change its index parity after some operations?",
        "Hint 2 What else is not effected by the operation?",
        "Hint 3 How to combine the above two properties under the time limit?"
    ]
}