{
    "link": "https://codeforces.com//contest/1588/problem/A",
    "problemId": "1186190",
    "problem_idx": "A",
    "shortId": "1588A",
    "contest_number": "1588",
    "problem_submissions": {
        "D": [
            135372629,
            135381098,
            135359109,
            135369800,
            135370088,
            135380867,
            135357823,
            135362201,
            135366407,
            135370846,
            135374380,
            135373580,
            135374295,
            135373419,
            135378493,
            135376601,
            135375978,
            135382040
        ],
        "C": [
            135363142,
            135352112,
            135379109,
            135361010,
            135362653,
            135375549,
            135350810,
            135353082,
            135359513,
            135351205,
            135365941,
            135366190,
            135366197,
            135366261,
            135798161,
            135798159,
            135798156,
            135798153,
            135793795,
            135353318,
            135359719,
            135363580,
            135376282,
            135360557
        ],
        "B": [
            135354041,
            135372942,
            135367733,
            135353235,
            135382607,
            135353847,
            135347088,
            135367644,
            135348462,
            135359847,
            135354086,
            135351940,
            135356516,
            135347194,
            135365557,
            135349342,
            135357424,
            135354885,
            135351181
        ],
        "A": [
            135347972,
            135342643,
            135342911,
            135343015,
            135342760,
            135342918,
            135342730,
            135343666,
            135342808,
            135352544,
            135343056,
            135344466,
            135342657,
            135342700,
            135342859,
            135345441,
            135343145,
            135343927,
            135342677
        ],
        "E": [
            135346443,
            135364189,
            135371530,
            135382787,
            135381160,
            135387683,
            135507210,
            135399676,
            135412491,
            135411131,
            135507958,
            135387301
        ],
        "F": [
            135608326,
            135531498,
            135406993,
            135398120,
            135395364
        ]
    },
    "name": "A. Two Arrays",
    "statement": "You are given two arrays of integers a_1, a_2,\r\nldots, a_n and b_1, b_2,\r\nldots, b_n.Let\u2019s define a transformation of the array a: Choose any\r\nnon-negative integer k such that 0\r\nle k\r\nle n. Choose k distinct array indices 1\r\nle i_1 < i_2 <\r\nldots < i_k\r\nle n. Add 1 to each of a_{i_1}, a_{i_2},\r\nldots, a_{i_k}, all other elements of array a remain unchanged. Permute\r\nthe elements of array a in any order. Is it possible to perform some\r\ntransformation of the array a , so that the resulting array is equal to\r\nb?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define sz(v) ((int)(v).size())\n#define all(v) (v).begin(), (v).end()\nusing namespace std;\nusing lint = long long;\nusing pi = pair<lint, lint>;\nconst int MAXN = 1600;\n\nint main(){\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint t; cin >> t;\n\twhile(t--){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> a(n), b(n);\n\t\tfor(auto &i : a) cin >> i;\n\t\tfor(auto &i : b) cin >> i;\t\n\t\tsort(all(a));\n\t\tsort(all(b));\n\t\tint ret = 0;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif(b[i] >= a[i] && b[i] <= a[i] + 1) ret++;\n\t\t}\n\t\tcout << (ret == n ? \"YES\\n\" : \"NO\\n\");\n\t}\n\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "graph matchings",
        "greedy",
        "math",
        "sortings"
    ],
    "dificulty": "900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Two Arrays.json",
    "editorial_link": "https://codeforces.com//blog/entry/96953",
    "editorial": "Let's sort the arrays first.\n\nLet's check the two smallest elements in the arrays and investigate their behavior. First, obviously, if a1+1<b1\n (as nothing can be matched with a1\n) or a1>b1\n (as nothing can be matched with b1\n) the answer is No. Then, it's possible that a1=b1=x\n. In this case, we have to have at least one x\n in the array a\n at the end. Hence, we can leave a1\n untouched, as it already suits to b1\n. It's also possible that a1+1=b1\n. Here we have to increase a1\n by 1\n. In both cases, the task is reduced to the smallest one.\n\nGoing to the exact solution from this logic, we just have to sort both arrays and check that for each 1?i?n\n it's ai=bi\n or ai+1=bi\n.\n\nThe complexity of the solution is O(nlog(n))\n."
}