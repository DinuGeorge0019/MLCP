{"link": "https://codeforces.com//contest/269/problem/B", "problemId": "2578", "problem_idx": "B", "shortId": "269B", "contest_number": "269", "problem_submissions": {"D": [3053877, 3055065, 3054931, 3054689, 3056716, 3055520, 3053752, 3054402, 3055502, 3054293, 3057110, 3057596, 3056040, 3056997, 3057208, 3053865, 3055067, 3057592], "C": [3050826, 3048752, 3050407, 3050153, 3051253, 3053071, 3055637, 3051073, 3052131, 3049037, 3051392, 3054561, 3051427, 3053470, 3051843, 3058738, 3051490], "B": [3048348, 3051384, 3045845, 3048240, 3048947, 3047226, 3049184, 3049029, 3049342, 3056628, 3048885, 3048750, 3050057, 3054096, 3048888, 3049991, 3050429], "A": [3047341, 3050569, 3047430, 3046474, 3046278, 3047911, 3047245, 3055271, 3046848, 3055425, 3047549, 3047676, 3051951, 3048080, 3058340, 3045802, 3047292, 3046740]}, "name": "B. Greenhouse Effect", "statement": "Emuskald is an avid horticulturist and owns the world\u2019s longest\r\ngreenhouse it is effectively infinite in length.Over the years Emuskald\r\nhas cultivated plants in his greenhouse, of different plant species\r\nnumbered from 1 to . His greenhouse is very narrow and can be viewed as\r\nan infinite line, with each plant occupying a single point on that\r\nline.Emuskald has discovered that each species thrives at a different\r\ntemperature, so he wants to arrange borders that would divide the\r\ngreenhouse into sections numbered from 1 to from left to right with each\r\nsection housing a single species. He is free to place the borders, but\r\nin the end all of the -th species plants must reside in -th section from\r\nthe left.Of course, it is not always possible to place the borders in\r\nsuch way, so Emuskald needs to replant some of his plants. He can remove\r\neach plant from its position and place it anywhere in the greenhouse (at\r\nreal coordinate) with no plant already in it. Since replanting is a lot\r\nof stress for the plants, help Emuskald find the minimum number of\r\nplants he has to replant to be able to place the borders.\r\n", "solutions": ["#include <iostream>\n#include <fstream>\n#include <vector>\n#include <set>\n#include <map>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <cassert>\n#include <ctime>\n#include <algorithm>\n#include <list>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <cstdlib>\n#include <cstdio>\n#include <iterator>\n#include <functional>\n#include <bitset>\n#define mp make_pair\n#define pb push_back\n\n#if ( _WIN32 || __WIN32__ )\n    #define LLD \"%I64d\"\n#else\n    #define LLD \"%lld\"\n#endif\n\nusing namespace std;\n\n#define TASKNAME \"B\"\n\ntypedef long long ll;\ntypedef long double ld;\n\nint dp[5100];\n\n\nint main(){\n  #ifdef LOCAL\n    freopen(TASKNAME\".in\",\"r\",stdin);\n    freopen(TASKNAME\".out\",\"w\",stdout);\n  #endif\n\n    int n,m;\n    scanf(\"%d %d\",&n,&m);\n\n    for (int i = 0; i < n; i++){\n        int a;\n        scanf(\"%d %*f\",&a);\n\n        for (int j = m; j >= 1; j--){ \n            if (j != a)\n                dp[j] = dp[j] + 1;\n            else\n                dp[j] = *min_element(dp+1,dp+j+1);\n        }           \n    }\n\n    cout << *min_element(dp+1,dp+m+1) << endl;\n\n      \n  return 0;\n}"], "input": "", "output": "", "tags": ["dp"], "dificulty": "1700", "interactive": false}