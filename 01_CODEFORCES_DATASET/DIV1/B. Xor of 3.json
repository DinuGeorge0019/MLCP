{"link": "https://codeforces.com//contest/1572/problem/B", "problemId": "1113064", "problem_idx": "B", "shortId": "1572B", "contest_number": "1572", "problem_submissions": {"E": [129206504, 129205064, 129206146, 129186931, 129254910, 129870976, 129204851], "B": [129200222, 129195364, 129193573, 129181375, 129193456, 129190984, 129205791, 129198794, 129201998, 129193078, 129214920, 129184305, 129194122, 129185643, 129187972, 129190794, 129186099, 129191410, 129188216], "C": [129195835, 129191513, 129199311, 129193150, 129195181, 129198867, 129196979, 129259448, 129179785, 129722486, 129198454, 129198079, 129197696, 129199887, 129197773, 129211811, 129200276], "D": [129192769, 129199613, 129201627, 129206390, 129205002, 129205082, 129227304, 129328372, 129201185, 129870962, 129870944, 129203066, 129316237, 129316188, 136814393, 129429191], "A": [129167164, 129167977, 129198411, 129169285, 129180189, 129173821, 129177103, 129171630, 129176985, 129172424, 129196280, 129167530, 129169791, 129170025, 129173030, 129174006, 129171850, 129174559, 129177053], "F": [129209583, 129209541, 129208785, 129202453, 129198897, 129722539, 129216893, 129216152, 129193790, 129338264]}, "name": "B. Xor of 3", "statement": "You are given a sequence a of length n consisting of 0s and 1s.You can\r\nperform the following operation on this sequence: Pick an index i from 1\r\nto n-2 (inclusive). Change all of a_{i}, a_{i+1}, a_{i+2} to a_{i}\r\noplus a_{i+1}\r\noplus a_{i+2} simultaneously, where\r\noplus denotes the bitwise XOR operation Find a sequence of n operations\r\nthat changes all elements of a to 0s or report that it\u2019s impossible.We\r\ncan prove that if there exists a sequence of operations of any length\r\nthat changes all elements of a to 0s, then there is also such a sequence\r\nof length not greater than n.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 18.09.2021 18:43:50       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    vector<int> pref(n + 1);\n    for (int i = 0; i < n; i++) {\n      pref[i + 1] = pref[i] + a[i];\n    }\n    if (pref[n] % 2 == 1) {\n      cout << \"NO\" << '\\n';\n      continue;\n    }\n    vector<int> seq;\n    int pos = -1;\n    for (int i = 0; i < n; i++) {\n      if (a[i] == 0 && pref[i] % 2 == 0) {\n        pos = i;\n        break;\n      }\n    }\n    if (pos == -1) {\n      int last = -1;\n      for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n          if (last != -1 && (i - last) % 2 == 0) {\n            for (int j = last; j <= i - 2; j += 2) {\n              seq.push_back(j);\n            }\n            for (int j = i - 4; j >= last; j -= 2) {\n              seq.push_back(j);\n            }\n            a[last] = 0;\n            a[i] = 0;\n            pos = i;\n            break;\n          }\n          last = i;\n        }\n      }\n      if (pos == -1) {\n        cout << \"NO\" << '\\n';\n        continue;\n      }\n    }\n    {\n      int at = pos + 1;\n      while (at < n) {\n        if (a[at] == 0) {\n          ++at;\n        } else {\n          assert(at + 1 < n);\n          if (a[at + 1] == 1) {\n            seq.push_back(at - 1);\n            a[at] = a[at + 1] = 0;\n            at += 2;\n          } else {\n            assert(at + 2 < n);\n            seq.push_back(at);\n            int v = a[at] ^ a[at + 1] ^ a[at + 2];\n            a[at] = a[at + 1] = a[at + 2] = v;\n          }\n        }\n      }\n    }\n    {\n      int at = pos - 1;\n      while (at >= 0) {\n        if (a[at] == 0) {\n          --at;\n        } else {\n          assert(at - 1 >= 0);\n          if (a[at - 1] == 1) {\n            seq.push_back(at - 1);\n            a[at] = a[at - 1] = 0;\n            at -= 2;\n          } else {\n            assert(at - 2 >= 0);\n            seq.push_back(at - 2);\n            int v = a[at] ^ a[at - 1] ^ a[at - 2];\n            a[at] = a[at - 1] = a[at - 2] = v;\n          }\n        }\n      }\n    }\n    cout << \"YES\" << '\\n';\n    cout << seq.size() << '\\n';\n    for (int i = 0; i < (int) seq.size(); i++) {\n      if (i > 0) {\n        cout << \" \";\n      }\n      cout << seq[i] + 1;\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "constructive algorithms", "greedy", "two pointers"], "dificulty": "2500", "interactive": false}