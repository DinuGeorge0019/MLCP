{"link": "https://codeforces.com//contest/949/problem/E", "problemId": "163632", "problem_idx": "E", "shortId": "949E", "contest_number": "949", "problem_submissions": {"E": [36105597, 36104729, 36107882, 36106052, 36109939, 36109078, 36111836, 36112039, 36111175, 36106962, 36109964, 36110554, 36111413, 36109601, 36111115, 36110022, 36110942, 94270940, 36111425, 36106250, 36109832], "D": [36101360, 36106649, 36105542, 36109215, 36106017, 36106726, 36102230, 36101449, 36103104, 36110228, 36103260, 36105066, 36107080, 36106355, 36107442, 36106210, 36107773, 36109010, 36109232, 36112599], "C": [36097297, 36099409, 36097097, 36099338, 36100026, 36100955, 36098934, 36097758, 36099260, 36100420, 36101363, 36101312, 36100998, 36103414, 36103747, 36102556, 36101236, 36102526, 50661562, 36100630, 36101932], "B": [36095300, 36092787, 36094621, 36097341, 36096959, 36097302, 36093518, 36094892, 36097014, 36095796, 36096835, 36098669, 36097021, 36100952, 36098276, 36097313, 36097889, 36098939, 36095872, 36098787], "A": [36093067, 36095425, 36093246, 36094348, 36092357, 36093156, 36095248, 36092415, 36092267, 36097893, 36093322, 36092795, 36093362, 36093672, 36096228, 36095964, 36093387, 36095876, 36127878, 36094011]}, "name": "E. Binary Cards", "statement": "It is never too late to play the fancy \"Binary Cards\" game!There is an\r\ninfinite amount of cards of positive and negative ranks that are used in\r\nthe game. The absolute value of any card rank is a power of two, i.e.\r\neach card has a rank of either or for some integer . There is an\r\ninfinite amount of cards of any valid rank.At the beginning of the game\r\nplayer forms his deck that is some multiset (possibly empty) of cards.\r\nIt is allowed to pick any number of cards of any rank but the small deck\r\nis considered to be a skill indicator. Game consists of rounds. In the\r\n-th round jury tells the player an integer . After that the player is\r\nobligated to draw such a subset of his deck that the sum of ranks of the\r\nchosen cards is equal to (it is allowed to not draw any cards, in which\r\ncase the sum is considered to be equal to zero). If player fails to do\r\nso, he loses and the game is over. Otherwise, player takes back all of\r\nhis cards into his deck and the game proceeds to the next round. Player\r\nis considered a winner if he is able to draw the suitable set of cards\r\nin each of the rounds.Somebody told you which numbers the jury is going\r\nto tell you in each round. Now you want to pick a deck consisting of the\r\nminimum number of cards that allows you to win the \"Binary Cards\" game.\r\n", "solutions": ["#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:336777216\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 17;\nint MOD = 1000000007;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-10;\n#define szz(x) (int)(x).size()\n#define Se second\n#define Fi first\n\n\nbool vchk[20][1100000];\n\nvector <int> Va;\nvector <int> Vl;\nvoid aa(int lvl) {\n\tint ran = 1 << lvl, i, j;\n\n\tfor (i = -ran; i <= ran; i++) if (vchk[lvl][i + ran] && i) break;\n\tif (i > ran) {\n\t\tif (Va.size() > Vl.size()) Va = Vl;\n\t\treturn;\n\t}\n\tif (lvl == 0) return;\n\n\tint cc = 0;\n\tfor (i = -ran; i <= ran; i++) if (i % 2 && vchk[lvl][i+ran]) cc = 1;\n\tif (!cc) {\n\t\tfor (i = -ran / 2; i <= ran / 2; i++) vchk[lvl - 1][i+ran / 2] = false;\n\t\tfor (i = -ran; i <= ran; i++) if(vchk[lvl][i+ran]) vchk[lvl - 1][i / 2 + ran / 2] = true;\n\t\taa(lvl - 1);\n\t}\n\telse {\n\t\tfor (i = -ran / 2; i <= ran / 2; i++) vchk[lvl - 1][i + ran / 2] = false;\n\t\tfor (i = -ran; i <= ran; i++) {\n\t\t\tif (!vchk[lvl][i + ran]) continue;\n\n\t\t\tif (i % 2 == 0) vchk[lvl - 1][i / 2 + ran / 2] = true;\n\t\t\telse vchk[lvl - 1][(i - 1) / 2 + ran / 2] = true;\n\t\t}\n\t\tVl.push_back(1 << (19 - lvl));\n\t\taa(lvl - 1);\n\t\tVl.pop_back();\n\n\t\tfor (i = -ran / 2; i <= ran / 2; i++) vchk[lvl - 1][i + ran / 2] = false;\n\t\tfor (i = -ran; i <= ran; i++) {\n\t\t\tif (!vchk[lvl][i + ran]) continue;\n\n\t\t\tif (i % 2 == 0) vchk[lvl - 1][i / 2 + ran / 2] = true;\n\t\t\telse vchk[lvl - 1][(i + 1) / 2 + ran / 2] = true;\n\t\t}\n\t\tVl.push_back(-(1 << (19 - lvl)));\n\t\taa(lvl - 1);\n\t\tVl.pop_back();\n\t}\n}\nint main() {\n\tint N, i;\n\tscanf(\"%d\", &N);\n\t\n\n\tfor (i = 1; i <= N; i++) {\n\t\tint t;\n\t\tscanf(\"%d\", &t);\n\t\tvchk[19][t + (1 << 19)] = true;\n\t}\n\tfor (i = 1; i <= 100; i++) Va.push_back(0);\n\taa(19);\n\tprintf(\"%d\\n\", (int)Va.size());\n\tfor (auto it : Va) printf(\"%d \", it);\n\treturn !printf(\"\\n\");\n}"], "input": "", "output": "", "tags": ["brute force"], "dificulty": "2700", "interactive": false}