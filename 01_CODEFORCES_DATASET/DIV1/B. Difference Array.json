{
    "link": "https://codeforces.com//contest/1707/problem/B",
    "problemId": "1465654",
    "problem_idx": "B",
    "shortId": "1707B",
    "contest_number": "1707",
    "problem_submissions": {
        "E": [
            164603668,
            164525375,
            164669454,
            185901683,
            185901618,
            185901333,
            164563417
        ],
        "D": [
            164511528,
            164496478,
            164493571,
            164495095,
            164501925,
            164506638,
            166069487,
            164497571,
            164507609,
            166120309,
            166120066,
            164509308,
            164956360,
            164507471,
            164489918,
            164511025,
            164904470,
            164514319,
            164514325,
            164497954,
            164519148,
            164515594,
            164518158,
            164516720,
            164511294
        ],
        "B": [
            164484745,
            164460975,
            164467918,
            164471533,
            164466867,
            164467580,
            164475668,
            164466783,
            166120253,
            166119986,
            164469792,
            164956306,
            164468045,
            164461021,
            164475290,
            164475116,
            164472236,
            164466401,
            164463086,
            164472164,
            164472283,
            164465112,
            164479683
        ],
        "C": [
            164479539,
            164485229,
            164482780,
            164482216,
            164481698,
            164485751,
            164487589,
            164482127,
            166120011,
            164486694,
            164956347,
            164484482,
            164472573,
            164487921,
            164484938,
            164484181,
            164511081,
            164483634,
            164483996,
            164493834,
            164499762,
            164491460
        ],
        "A": [
            164463335,
            164470733,
            164464634,
            164464640,
            164458756,
            164460631,
            164457208,
            164456721,
            166119954,
            164458999,
            164956326,
            164457788,
            164466493,
            164459761,
            164467279,
            164469592,
            164460485,
            164464829,
            164460707,
            164471416,
            164466775
        ],
        "F": [
            164529829,
            164530227,
            165361670,
            165361592,
            165360981,
            165360617,
            164565887,
            164565715
        ]
    },
    "name": "B. Difference Array",
    "statement": "You are given an array a consisting of n non-negative integers. It is\r\nguaranteed that a is sorted from small to large.For each operation, we\r\ngenerate a new array b_i=a_{i+1}-a_{i} for 1\r\nle i < n. Then we sort b from small to large, replace a with b, and\r\ndecrease n by 1.After performing n-1 operations, n becomes 1. You need\r\nto output the only integer in array a (that is to say, you need to\r\noutput a_1).\r\n",
    "solutions": [
        "#include <cstdio>\n#include <algorithm>\n\nint t,n,a[100001];\nint main(){\n\tscanf(\"%d\",&t);\n\tfor(int fd=1;fd<=t;++fd){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",a+i);\n\t\tint cnt=0;\n\t\tfor(;n>1;){\n\t\t\tint top=0;\n\t\t\tint Old=a[1];\n\t\t\tfor(int i=1;i<n;++i){\n\t\t\t\ta[++top]=a[i+1]-a[i];\n\t\t\t}\n\t\t\tif(cnt)a[++top]=Old,--cnt;\n\t\t\tstd::sort(a+1,a+top+1);\n\t\t\tint p=0;\n\t\t\tfor(int i=1;i<=top;++i)if(!a[i])p=i;\n\t\t\ttop-=p;cnt+=p;\n\t\t\tfor(int i=1;i<=top;++i)a[i]=a[i+p];\n\t\t\tn=top;\n\t\t\t// for(int i=1;i<=n;++i)printf(\"%d \",a[i]);putchar('\\n');\n\t\t}\n\t\tif(!n)puts(\"0\");\n\t\telse printf(\"%d\\n\",a[1]);\n\t}\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "implementation",
        "sortings"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Difference Array.json",
    "editorial_link": "https://codeforces.com//blog/entry/104930",
    "editorial": "Let\u00e2\u0080\u0099s prove that the brute-force solution (considering zeros\r\ndifferently) can pass.Define and it changes when an operation is\r\nperformed.After sorting the array and ignoring s, the factis always\r\ntrue.And after performing one operation, .So in each operation, you cost\r\ntime to sort the new array and decrease by at least .After the first\r\noperation, is . The complexity is , where .\r\n"
}