{"link": "https://codeforces.com//contest/101/problem/D", "problemId": "535", "problem_idx": "D", "shortId": "101D", "contest_number": "101", "problem_submissions": {"E": [581450, 581204, 582032, 581815, 583533, 582350, 582875, 581883, 582940, 581812, 581652, 609865, 581480], "D": [579906, 580370, 580629, 580693, 580455, 580917, 580822, 581264, 581190, 582420, 581878, 582155, 581732, 582283], "C": [578895, 579347, 578679, 583091, 579544, 583517, 579698, 580054, 580264, 580522, 579262, 580371, 580419, 580066, 579637, 580178, 581241, 579664], "B": [578351, 578696, 579172, 578659, 578843, 578821, 579066, 579006, 579025, 579013, 578685, 579291, 579413, 581846, 582516, 579343, 595573], "A": [577898, 577949, 577912, 577914, 578124, 577923, 577940, 577996, 578084, 577915, 577920, 578550, 577975, 578049, 577936, 578126, 578340, 577971]}, "name": "D. Castle", "statement": "Gerald is positioned in an old castle which consists of halls connected\r\nwith corridors. It is exactly one way to go from any hall to any other\r\none. Thus, the graph is a tree. Initially, at the moment of time ,\r\nGerald is positioned in hall . Besides, some other hall of the castle\r\ncontains the treasure Gerald is looking for. The treasure\u2019s position is\r\nnot known; it can equiprobably be in any of other halls. Gerald can only\r\nfind out where the treasure is when he enters the hall with the\r\ntreasure. That very moment Gerald sees the treasure and the moment is\r\nregarded is the moment of achieving his goal. The corridors have\r\ndifferent lengths. At that, the corridors are considered long and the\r\nhalls are considered small and well lit. Thus, it is possible not to\r\ntake the time Gerald spends in the halls into consideration. Gerald can\r\nmove around the castle using the corridors; he will go until he finds\r\nthe treasure. Naturally, Gerald wants to find it as quickly as possible.\r\nIn other words, he wants to act in a manner that would make the average\r\ntime of finding the treasure as small as possible. More formally, if the\r\ntreasure is located in the second hall, then Gerald will find it the\r\nmoment he enters the second hall for the first time let it be moment .\r\nIf the treasure is in the third hall, then Gerald will find it the\r\nmoment he enters the third hall for the first time. Let it be the moment\r\nof time . And so on. Thus, the average time of finding the treasure will\r\nbe equal to .\r\n", "solutions": ["#pragma comment(linker, \"/STACK:65777216\")\n\n#include <algorithm>\n#include <iostream>\n#include <string>\n#include<sstream>\n#include<string.h>\n#include <cstdio>\n#include <vector>\n#include <bitset>\n#include <cmath>\n#include <queue>\n#include<stack>\n#include <set>\n#include <map>\n#include<ctime>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double,double> pdd;\ntypedef unsigned long long ull;\n\n#define FOR(i,a,b) for (int i(a); i < (b); i++) \n#define REP(i,n) FOR(i,0,n) \n#define SORT(v) sort((v).begin(),(v).end())\n#define UN(v) sort((v).begin(),(v).end()),v.erase(unique(v.begin(),v.end()),v.end())\n#define CL(a,b) memset(a,b,sizeof(a))\n#define pb push_back\n\nstruct R{\n\tdouble s;\n\tint c;\n\tint len;\n\n\tbool operator<(const R& s)const{\n\t\treturn len *ll(s.c)<s.len*ll(c);\n\t}\n};\n\nint n;\nvector<pii> v[111111];\n\nR solve(int ver,int par=-1){\n\tR res;\n\t\n\tres.c=1;\n\tres.len=0;\n\tres.s=0;\n\n\tvector<R> q;\n\tREP(i,v[ver].size()) if(v[ver][i].first != par){\n\t\tq.pb(solve(v[ver][i].first, ver));\n\t\tq.back().s += v[ver][i].second * q.back().c;\n\t\tq.back().len += 2 * v[ver][i].second;\n\t}\n\tsort(q.begin(),q.end());\n\n\tREP(i,q.size()){\n\t\tif(i==0){ res = q[i]; res.c++;}\n\t\telse{\n\t\t\tres.s += q[i].s;\n\t\t\tres.s += double(q[i].c) * res.len;\n\t\t\t\n\t\t\tres.c+=q[i].c;\n\t\t\tres.len += q[i].len;\n\t\t}\n\t}\n\n\treturn res;\n}\n\nint main(){ \n#ifdef LocalHost\n\tfreopen(\"input.txt\",\"r\",stdin);\n//\tfreopen(\"output.txt\",\"w\",stdout);\n#endif\n\n\tcin>>n;\n\tREP(i,n-1){\n\t\tint x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tx--,y--;\n\t\tv[x].pb(pii(y,z));\n\t\tv[y].pb(pii(x,z));\n\t}\n\n\tR res = solve(0);\n\tprintf(\"%.10lf\\n\",res.s / (n-1));\n\n#ifdef LocalHost\n\tcout<<endl<<endl<<\"TIME: \"<<clock()<<endl;\n#endif\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["dp", "greedy", "probabilities", "sortings", "trees"], "dificulty": "2300", "interactive": false}