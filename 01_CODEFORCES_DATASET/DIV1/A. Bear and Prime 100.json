{
    "link": "https://codeforces.com//contest/679/problem/A",
    "problemId": "61894",
    "problem_idx": "A",
    "shortId": "679A",
    "contest_number": "679",
    "problem_submissions": {
        "D": [
            18322762,
            18323626,
            18322971,
            18323450,
            18324701,
            18327443,
            18345837,
            18345768,
            18345680,
            18345642,
            18327111,
            18328820,
            18327048,
            18328042,
            18328483,
            18329243,
            18329178,
            18324869,
            18324693
        ],
        "B": [
            18314677,
            18309080,
            18312175,
            18311888,
            18312358,
            18312942,
            18316455,
            18317342,
            18309354,
            18307663,
            18316385,
            18308970,
            18308226,
            18309465,
            18308416,
            18312030,
            18314147
        ],
        "C": [
            18310021,
            18317790,
            18318340,
            18317148,
            18319639,
            18318992,
            18320837,
            18322274,
            18315941,
            18322904,
            18316017,
            18318363,
            18318389,
            18317725,
            18315473,
            18314694
        ],
        "A": [
            18303717,
            18304196,
            18305388,
            18304702,
            18306194,
            18307513,
            18307982,
            18303929,
            18304410,
            18304102,
            18305596,
            18304174,
            18305099,
            18303722,
            18303574,
            18304076,
            18305438,
            18304649
        ],
        "E": [
            200103409,
            18853172,
            18325979,
            18447386,
            188767815
        ]
    },
    "name": "A. Bear and Prime 100",
    "statement": "Bear Limak thinks of some hidden number an integer from interval . Your\r\ntask is to say if the hidden number is prime or composite.Integer is\r\ncalled prime if it has exactly two distinct divisors, and . If integer\r\nis not prime, it\u2019s called composite.You can ask up to queries about\r\ndivisors of the hidden number. In each query you should print an integer\r\nfrom interval . The system will answer \"\" if your integer is a divisor\r\nof the hidden number. Otherwise, the answer will be \"\".For example, if\r\nthe hidden number is then the system will answer \"\" only if you print ,\r\nor .When you are done asking queries, print \"\" or \"\" and terminate your\r\nprogram.You will get the verdict if you ask more than queries, or if you\r\nprint an integer not from the range . Also, you will get the verdict if\r\nthe printed answer isn\u2019t correct.You will get the verdict if you don\u2019t\r\nprint anything (but you should) or if you forget about flushing the\r\noutput (more info below).\r\n",
    "solutions": [
        "#include<stdio.h>\nint d[20]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,4,9,25,49};\nint res[20], c;\nint main(){\n    int i;\n    char p[5];\n    for(i=0;i<19;i++){\n        printf(\"%d\\n\",d[i]);\n        fflush(stdout);\n        scanf(\"%s\",p);\n        if(p[0]=='y')res[i] = 1;\n        else res[i] = 0;\n    }\n    if(res[15]||res[16]||res[17]||res[18]){\n        printf(\"composite\\n\");\n        fflush(stdout);\n        return 0;\n    }\n    for(i=0;i<19;i++){\n        c += res[i];\n    }\n    if(c<=1){\n        printf(\"prime\\n\");\n        fflush(stdout);\n        return 0;\n    }\n    else{\n        printf(\"composite\\n\");\n        fflush(stdout);\n        return 0;\n    }\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "interactive",
        "math"
    ],
    "dificulty": "1400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Bear and Prime 100.json",
    "editorial_link": "https://codeforces.com//blog/entry/45310",
    "editorial": "If a number is composite then it\u00e2\u0080\u0099s either divisible by for some prime ,\r\nor divisible by two distinct primes and . To check the first condition,\r\nit\u00e2\u0080\u0099s enough to check all possible (so, numbers , , , ). If at least one\r\ngives \"yes\" then the hidden number if composite. If there are two\r\ndistinct prime divisors and then both of them are at most otherwise the\r\nhidden number would be bigger than (because for and we would get ). So,\r\nit\u00e2\u0080\u0099s enough to check primes up to (there are of them), and check if at\r\nleast two of them are divisors. code1\r\n"
}