{"link": "https://codeforces.com//contest/573/problem/E", "problemId": "34314", "problem_idx": "E", "shortId": "573E", "contest_number": "573", "problem_submissions": {"E": [12759251, 12766903, 12766685, 12854212], "C": [12753961, 12751834, 12752631, 12751871, 12753878, 12754621, 12753383, 12752808, 12753460, 12750581, 12750687, 12754051, 12757263, 12753734, 12752897, 12751281, 12753745, 12753332], "B": [12746992, 12747515, 12746798, 12748316, 12747498, 12747954, 12747704, 12747330, 12747866, 12747572, 12747495, 12748230, 12747423, 12748530, 12748216, 12747086, 12747056, 12748571], "A": [12746189, 12746077, 12746084, 12746660, 12746402, 12746165, 12746157, 12746206, 12746195, 12746103, 12746141, 12746264, 12746158, 12746252, 12746081, 12746225, 12746120, 12746512], "D": [12760293, 12767357, 12767345, 12767321, 12767302, 12767261, 12766285, 12766274, 12759069, 12759185, 12761792, 12787796, 12787738, 12787732, 12762112, 12766448, 12762456, 12761429, 12791178, 12769647, 12769635]}, "name": "E. Bear and Bowling", "statement": "Limak is an old brown bear. He often goes bowling with his friends.\r\nToday he feels really good and tries to beat his own record!For rolling\r\na ball one gets a score an integer (maybe negative) number of points.\r\nScore for -th roll is multiplied by and scores are summed up. So, for\r\nrolls with scores , total score is . Total score is if there were no\r\nrolls.Limak made rolls and got score for -th of them. He wants to\r\nmaximize his total score and he came up with an interesting idea. He\r\nwill cancel some rolls, saying that something distracted him or there\r\nwas a strong wind.Limak is able to cancel any number of rolls, maybe\r\neven all or none of them. Total score is calculated as if there were\r\nonly non-canceled rolls. Look at the sample tests for clarification.\r\nWhat maximum total score can Limak get?\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> PI;\ntypedef long long LL;\ntypedef double D;\n#define FI first\n#define SE second\n#define MP make_pair\n#define PB push_back\n#define R(I,N) for(int I=0;I<N;I++)\n#define F(I,A,B) for(int I=A;I<B;I++)\n#define FD(I,N) for(int I=N-1;I>=0;I--)\n#define make(A) scanf(\"%d\",&A)\n#define make2(A,B) scanf(\"%d%d\",&A,&B)\n#define ALL(x) (x).begin(), (x).end()\n#define SZ(x) ((int)(x).size())\n#define db if(1)printf\ntemplate<typename C> void MA(C& a,C b){if(a<b)a=b;}\ntemplate<typename C> void MI(C& a,C b){if(a>b)a=b;}\n#define MAX 100010\nint n;\nbool cz[MAX];\nLL wyn = 0;\nLL t[MAX];\nbool us(){\n  LL sum = 0;\n  int il = 0;\n  bool res = 0;\n  R(i,n)if(cz[i])sum+=t[i];\n  R(i,n){\n    if(cz[i]){\n      il++;\n      sum -= t[i];\n      if(t[i] * il + sum < 0){\n        wyn -= t[i] * il + sum;\n        il--;\n        cz[i] = 0;\n        res = 1;\n      }\n    }\n  }\n  return res;\n}\nbool dod(){\n  int il = 0;\n  LL sum = 0;\n  bool res = 0;\n  R(i,n)if(cz[i])il++;\n  FD(i,n){\n    if(!cz[i]){\n      if(t[i] * (il+1) + sum > 0){\n        wyn += t[i] * (il+1) + sum;\n        il++;\n        cz[i] = 1;\n        res = 1;\n      }\n    }\n    if(cz[i]){\n      il--;\n      sum += t[i];\n    }\n  }\n  return res;\n}\nmain(){\n  make(n);\n  R(i,n){\n    cz[i] = 1;\n    scanf(\"%lld\",&t[i]);\n    wyn += t[i]*(i+1);\n  }\n  bool x = 1;\n  while(x){\n    x=0;\n    if(us())x=1;\n    if(dod())x=1;\n  }\n  printf(\"%lld\\n\",wyn);\n}\n"], "input": "", "output": "", "tags": ["data structures", "greedy"], "dificulty": "3200", "interactive": false}