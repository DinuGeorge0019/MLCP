{"link": "https://codeforces.com//contest/109/problem/E", "problemId": "575", "problem_idx": "E", "shortId": "109E", "contest_number": "109", "problem_submissions": {"E": [648441], "D": [646409, 647170, 646652, 646695, 646352, 645873, 645392, 646870, 646386, 646289, 645803, 647324, 646355, 647745, 646444, 645672], "B": [644873, 644785, 645061, 644222, 644364, 643745, 643698, 644283, 643725, 646460, 646874, 647648, 646835, 644816, 646998, 647078], "C": [643742, 645980, 645707, 645639, 645273, 644937, 644325, 645865, 644801, 645032, 644836, 644580, 644697, 646773, 644867, 646558], "A": [642201, 642453, 642373, 642819, 642224, 642165, 642161, 642217, 642304, 642733, 643129, 642289, 642251, 642497, 642687, 647423]}, "name": "E. Lucky Interval", "statement": "One day Petya came across an interval of numbers . Let be the number of\r\nlucky digits of number . Find the minimum such, that = , = , ..., = .\r\n", "solutions": ["#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\ntypedef long long ll;\n#define INF (1ll<<40)\n\nint lucky(ll x){\n    int ans = 0;\n    while(x > 0){\n        if(x%10 == 4 || x%10 == 7) ans++;\n        x /= 10;\n    }\n    return ans;\n}\n\nmap <pair <ll, int>, int> mp1;\n\nll func1(ll low, int x){\n    int i;\n    ll ans = INF;\n    \n    if(x < 0) return INF;\n    \n    pair <ll, int> st = make_pair(low,x);\n    if(mp1.find(st) != mp1.end()) return mp1[st];\n    \n    if(low <= 3){\n        if(x == 0) return low;\n        ans = 0;\n        REP(i,x) ans = ans * 10 + 4;\n        return mp1[st] = ans;\n    }\n    \n    REP(i,10){\n        if(i < low%10){\n            ll tmp = func1(low/10+1,x-lucky(i));\n            ans = min(ans,tmp*10+i);\n        } else {\n            ll tmp = func1(low/10,x-lucky(i));\n            ans = min(ans,tmp*10+i);\n        }\n    }\n    \n    return mp1[st] = ans;\n}\n\nll func2(ll low, int x, int y){\n    int i;\n    ll ans = INF;\n    \n    if(x < 0 || y < 0) return INF;\n    \n    REP(i,9) if(y - x == lucky(i+1) - lucky(i)){\n        if(i < low%10){\n            ll tmp = func1(low/10+1,x-lucky(i));\n            ans = min(ans,tmp*10+i);\n        } else {\n            ll tmp = func1(low/10,x-lucky(i));\n            ans = min(ans,tmp*10+i);\n        }\n    }\n    \n    return ans;\n}\n\nll func3(ll low, int x, int y){\n    ll ans = INF;\n    \n    int i;\n    for(i=0;;i++){\n        ll tmp = func2(low,x,y);\n        int j;\n        REP(j,i) tmp = min(tmp * 10 + 9, INF);\n        ans = min(ans,tmp);\n        \n        if(low == 0) return ans;\n        low /= 10;\n    }\n}\n\nll func(ll low, ll high){\n    if(high/10 - low/10 >= 2){\n        ll tmp = func(low/10,high/10);\n        return tmp * 10 + low % 10;\n    }\n    \n    ll ans = INF;\n    \n    int i,j,k;\n    \n    REP(i,10){\n        j = i + (int)(high - low);\n        if(j >= 20) continue;\n        \n        int x = lucky(low) - lucky(i);\n        int y = 0;\n        if(j >= 10) y = lucky(high) - lucky(j-10);\n        \n        bool failed = false;\n        for(k=i;k<=j;k++){\n            int tmp1 = lucky(low+k-i);\n            int tmp2 = ((k >= 10) ? (y + lucky(k-10)) : (x + lucky(k)));\n            if(tmp1 != tmp2){\n                failed = true;\n                break;\n            }\n        }\n        if(failed) continue;\n        \n        ll small = (low - i + 10) / 10;\n        if(j >= 10){\n            ll tmp = func3(small,x,y);\n            ans = min(ans,tmp*10+i);\n        } else {\n            ll tmp = func1(small,x);\n            ans = min(ans,tmp*10+i);\n        }\n    }\n    \n    return ans;\n}\n\nint main(void){\n    ll a,d;\n    cin >> a >> d;\n    ll ans = func(a,a+d-1);\n    cout << ans << endl;\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "math"], "dificulty": "2700", "interactive": false}