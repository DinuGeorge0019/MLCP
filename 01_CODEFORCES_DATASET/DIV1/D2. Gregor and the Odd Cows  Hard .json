{"link": "https://codeforces.com//contest/1548/problem/D2", "problemId": "1062386", "problem_idx": "D2", "shortId": "1548D2", "contest_number": "1548", "problem_submissions": {"D2": [124590154, 124570151, 124631052, 124579457, 124595552, 124599986, 124598663, 124601582, 124596908, 124589080, 124589208, 124632567, 124602573], "E": [124581595, 124597899, 124590654, 124596843, 124594126, 124591964, 124592242, 124592323, 124856732, 124577426, 124619322, 124665492], "D1": [124546605, 124538296, 124561771, 124569958, 124572244, 124572070, 124558486, 124552145, 124565483, 124565312, 124554771, 124568265, 124563802, 124595327, 124572767, 124574319, 124573078, 124560440, 124570173, 124568828], "C": [124538722, 124546717, 124543126, 124552919, 124545964, 124599486, 124550051, 124554662, 124555634, 124559563, 124538097, 124558973, 124554365, 124565653, 124542584, 124561525, 124550009], "B": [124529066, 124526158, 124527209, 124533998, 124528094, 124540501, 124535175, 124539779, 124535743, 124537844, 124538815, 124529079, 124550340, 124533987, 124531668, 124543431, 124533588, 124530735, 124554398, 124534276], "A": [124521888, 124519192, 124532449, 124525950, 124521506, 124523964, 124524094, 124520315, 124522449, 124524250, 124550070, 124520590, 124556679, 124524509, 124523057, 124525430, 124522685, 124522322, 124531504, 124524318]}, "name": "D2. Gregor and the Odd Cows  Hard ", "statement": "There are n fence-posts at distinct coordinates on a plane. It is\r\nguaranteed that no three fence posts lie on the same line.There are an\r\ninfinite number of cows on the plane, one at every point with integer\r\ncoordinates.Gregor is a member of the Illuminati, and wants to build a\r\ntriangular fence, connecting 3 distinct existing fence posts. A cow\r\ninside the fence is said to be . If there are an number of enclosed cows\r\nand the area of the fence is an , the fence is said to be .Find the\r\nnumber of interesting fences.\r\n", "solutions": ["//\u522b\u4e22\u5305\u4e86\uff01\n#include <bits/stdc++.h>\n#define ll long long\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define vi vector<int>\n#define pi pair<int, int>\n#define mod 998244353\ntemplate<typename T> bool chkmin(T &a, T b){return (b < a) ? a = b, 1 : 0;}\ntemplate<typename T> bool chkmax(T &a, T b){return (b > a) ? a = b, 1 : 0;}\nll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b >> 1); ns = ns * ns % mod; if (b & 1) ns = ns * a % mod; return ns;}\nusing namespace std;\nconst int maxn = 6005;\nll cal(vector<pi> c) {\n    int n = c.size();\n    int cnt[4] = {0, 0, 0, 0};\n    for (auto v : c) \n        cnt[2 * (v.fi % 2) + (v.se % 2)] += 1;\n    ll ans = 1ll * n * (n - 1) * (n - 2) / 6;\n    for (int i = 0; i < 4; i++)\n        for (int j = i + 1; j < 4; j++)\n            for (int k = j + 1; k < 4; k++)\n                ans -= 1ll * cnt[i] * cnt[j] * cnt[k];\n    return ans;\n}\nint x[maxn], y[maxn];\nint d[maxn][maxn];\nvi r[4][4];\nint h[4][4][4];\nint gcd(int a, int b) {\n    if (!b) return a;\n    return gcd(b, a % b);\n}\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d%d\", &x[i], &y[i]),\n        r[x[i] % 4][y[i] % 4].pb(i);\n    for (int i = 1; i <= n; i++)\n        for (int j = i + 1; j <= n; j++)\n            d[i][j] = d[j][i] = gcd(abs(x[i] - x[j]), abs(y[j] - y[i]));\n    ll ans = 0;\n    for (int i = 0; i < 2; i++)\n        for (int j = 0; j < 2; j++) {\n            vector<pi> f;\n            for (int k = 1; k <= n; k++)\n                if ((x[k] % 2 == i) && (y[k] % 2 == j)) f.pb(mp(x[k] / 2, y[k] / 2));\n            ans += cal(f);\n        }\n    for (int i = 1; i <= n; i++) {\n        memset(h, 0, sizeof(h));\n        for (int j = 0; j < 4; j++)\n            for (int k = 0; k < 4; k++)\n                for (auto v : r[j][k])\n                    h[j][k][d[i][v] % 4] += 1;\n\n        for (int j = 0; j < 4; j++)\n            for (int k = 0; k < 4; k++)\n                for (int l = 0; l < 4; l++)\n                    for (int s = 0; s < 4; s++) {\n                        if ((l - j) % 2) continue;\n                        if ((s - k) % 2) continue;\n                        if (mp(l, s) < mp(j, k)) continue;\n\n                        if ((j - x[i]) % 2 == 0 && (k - y[i]) % 2 == 0) continue;\n                        for (int u = 0; u < 4; u++)\n                            for (int v = 0; v < 4; v++) {\n                                int ar = (l - j) * (y[i] - k) - (x[i] - j) * (s - k);\n                                ar %= 4;\n                                if (ar < 0) ar += 4;\n\n                                if (mp(l, s) == mp(j, k)) ar += 4;\n                                else ar += 2;\n                                \n                                if ((ar + u + v) % 4) continue;\n                                if (mp(l, s) == mp(j, k)) {\n                                    if (u < v) continue;\n                                    if (u > v) ans += 1ll * h[j][k][u] * h[j][k][v];\n                                    else ans += 1ll * h[j][k][u] * (h[j][k][u] - 1) / 2;\n                                }\n                                else {\n                                    ans += 1ll * h[j][k][u] * h[l][s][v];\n                                }\n                            }\n                    }\n    }\n    cout << ans << endl;\n    return (0-0); //<3\n}"], "input": "", "output": "", "tags": ["brute force", "geometry", "math", "number theory"], "dificulty": "3300", "interactive": false}