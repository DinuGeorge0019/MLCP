{
    "link": "https://codeforces.com//contest/1545/problem/A",
    "problemId": "1042717",
    "problem_idx": "A",
    "shortId": "1545A",
    "contest_number": "1545",
    "problem_submissions": {
        "D": [
            122107122,
            122101318,
            122112155,
            122104020,
            122109653,
            122107428,
            122115750,
            122116493,
            122121641,
            122123526,
            122112699,
            122120695,
            122128586,
            122117389,
            122107326,
            122130554,
            122090817,
            122093272,
            122093535
        ],
        "C": [
            122095530,
            122110873,
            122098409,
            122112986,
            122088985,
            122122234,
            122107021,
            122110115,
            122100227,
            122102454,
            122124600,
            122110793,
            122110757,
            122109117,
            122128432,
            122119096,
            122155152,
            122213467
        ],
        "A": [
            122082186,
            122076078,
            122075671,
            122076509,
            122122714,
            122075627,
            122075591,
            122075678,
            122076215,
            122076949,
            122075854,
            122076317,
            122085649,
            122075796,
            122075639,
            122080513,
            122075936,
            122075621,
            122078770
        ],
        "B": [
            122079612,
            122088170,
            122082472,
            122119780,
            122079771,
            122077496,
            122090297,
            122081981,
            122082032,
            122084749,
            122098370,
            122095139,
            122093255,
            122128209,
            122084402,
            122088184,
            122078878,
            122077599,
            122119388
        ],
        "F": [
            122258728,
            122258683,
            122258676,
            122258661,
            122258513,
            122258288,
            122147603,
            122158393,
            122158209
        ],
        "E2": [
            122155943,
            122135135
        ],
        "E1": [
            122155936,
            122155364,
            122153713,
            122135243
        ]
    },
    "name": "A. AquaMoon and Strange Sort",
    "statement": "AquaMoon has n friends. They stand in a row from left to right, and the\r\ni-th friend from the left wears a T-shirt with a number a_i written on\r\nit. Each friend has a direction (left or right). In the beginning, the\r\ndirection of each friend is .AquaMoon can make some operations on\r\nfriends. On each operation, AquaMoon can choose two friends and swap\r\ntheir positions. After each operation, the direction of both chosen\r\nfriends will also be flipped: left to right and vice versa.AquaMoon\r\nhopes that after some operations, the numbers written on the T-shirt of\r\nn friends in the row, read from left to right, become . Also she wants,\r\nthat all friends will have a direction of at the end. Please find if it\r\nis possible.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define F first\n#define S second\n#define pb push_back\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>pi;\ntypedef vector<int>vi;\nconst int maxn=1e6+10;\nconst int M=998244353;\nint _,n,a[maxn],b[maxn],t[maxn][2];\nvoid solve(){\n    scanf(\"%d\",&n);\n    memset(t,0,sizeof(t));\n    for (int i=1;i<=n;i++){scanf(\"%d\",&a[i]);b[i]=a[i];}\n    sort(b+1,b+n+1);\n    for (int i=1;i<=n;i++){\n        t[a[i]][i&1]++;\n        t[b[i]][i&1]--;\n    }\n    bool flag=1;\n    for (int i=1;i<=100000;i++)\n        if (t[i][0]||t[i][1]) flag=0;\n    if (flag) puts(\"YES\"); else puts(\"NO\");\n}\nint main(){\n    scanf(\"%d\",&_);\n    while (_--) solve();\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "sortings"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. AquaMoon and Strange Sort.json",
    "editorial_link": "https://codeforces.com//blog/entry/92739",
    "editorial": "It's easy to see that each number needs to move an even distance.\n\nFor the same number, count how many of them are in the odd position and even position.\n\nSort the array and count again.\n\nThe given array named A, the sorted array named B.\n\nFor every number, if the number of its occurrence in the odd position in A is different from its occurrence in the odd position in B, or the number of its occurrence in the even position in A is different from its occurrence in the even position in B, then the answer is NO. Otherwise the answer is YES.",
    "hint": []
}