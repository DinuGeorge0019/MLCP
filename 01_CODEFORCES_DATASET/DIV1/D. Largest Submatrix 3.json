{"link": "https://codeforces.com//contest/407/problem/D", "problemId": "7734", "problem_idx": "D", "shortId": "407D", "contest_number": "407", "problem_submissions": {"D": [6186438, 6183272, 6186415, 6188995, 6186843], "C": [6183229, 6184237, 6184448, 6181726, 6183048, 6186206, 6183334, 6183650, 6187229, 6183606, 6183728, 6181678, 6184812, 6186103, 6186307, 6184286, 6185997], "A": [6179819, 6185054, 6178519, 6178154, 6178508, 6178273, 6178388, 6178848, 6178615, 6178776, 6179374, 6178369, 6179907, 6178927, 6178200, 6187273, 6182603, 6178438], "B": [6178779, 6180059, 6180299, 6179261, 6180911, 6179733, 6180104, 6180969, 6180700, 6180320, 6180917, 6186380, 6181105, 6180890, 6180916, 6181007, 6182073, 6187181], "E": [6198010, 6190656]}, "name": "D. Largest Submatrix 3", "statement": "You are given matrix of size , its elements are integers. We will assume\r\nthat the rows of the matrix are numbered from top to bottom from 1 to ,\r\nthe columns are numbered from left to right from 1 to . We will denote\r\nthe element on the intersecting of the -th row and the -th column as\r\n.We\u2019ll call submatrix such elements of the given matrix that AND . We\u2019ll\r\ncall the area of the submatrix number . We\u2019ll call a submatrix\r\ninhomogeneous, if all its elements are distinct.Find the largest (in\r\narea) inhomogenous submatrix of the given matrix.\r\n", "solutions": ["#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <set>\n#include <vector>\n#include <map>\n#include <cmath>\n#include <algorithm>\n#include <memory.h>\n#include <string>\n#include <cstring>\n#include <sstream>\n#include <cstdlib>\n#include <ctime>\n#include <cassert>\n\nusing namespace std;\n\nconst int N = 444;\nconst int M = N * N;\n\nshort f[N][N][N];\n\ninline void add(int xa, int ya, int xb, int yb) {\n  yb--;\n  if (yb < f[xa][xb][ya]) {\n    f[xa][xb][ya] = yb;\n  }\n}\n\nint last[M], was[M];\nint a[N][N];\n\nint main() {\n  int r, c;\n  scanf(\"%d %d\", &r, &c);\n  for (int i = 1; i <= r; i++)\n    for (int j = 1; j <= c; j++) scanf(\"%d\", a[i] + j);\n  for (int i1 = 1; i1 <= r; i1++)\n    for (int i2 = i1; i2 <= r; i2++)\n      for (int j = 1; j <= c; j++) f[i1][i2][j] = c;\n  for (int i = 0; i < M; i++) {\n    last[i] = 0;\n    was[i] = 0;\n  }\n  int it = 0;\n  for (int i = 1; i <= r; i++) {\n    it++;\n    for (int j = c; j >= 1; j--) {\n      if (was[a[i][j]] == it) {\n        add(i, j, i, last[a[i][j]]);\n      }\n      last[a[i][j]] = j;\n      was[a[i][j]] = it;\n    }\n  }\n  for (int i1 = 1; i1 <= r; i1++) {\n    for (int i2 = i1 + 1; i2 <= r; i2++) {\n      it++;\n      for (int j = c; j >= 1; j--) {\n        if (was[a[i1][j]] == it) {\n          add(i1, j, i2, last[a[i1][j]]);\n        }\n        last[a[i1][j]] = j;\n        was[a[i1][j]] = it;\n        if (was[a[i2][j]] == it) {\n          add(i1, j, i2, last[a[i2][j]]);\n        }\n        last[a[i2][j]] = j;\n        was[a[i2][j]] = it;\n      }\n    }\n  }\n  int ans = 0;\n  for (int i1 = r; i1 >= 1; i1--)\n    for (int i2 = i1; i2 <= r; i2++)\n      for (int j = c; j >= 1; j--) {\n        int ft = f[i1][i2][j];\n        int area = (i2 - i1 + 1) * (ft - j + 1);\n        if (area > ans) {\n          ans = area;\n        }\n        if (i1 > 1 && ft < f[i1 - 1][i2][j]) {\n          f[i1 - 1][i2][j] = ft;\n        }\n        if (i2 < r && ft < f[i1][i2 + 1][j]) {\n          f[i1][i2 + 1][j] = ft;\n        }\n        if (j > 1 && ft < f[i1][i2][j - 1]) {\n          f[i1][i2][j - 1] = ft;\n        }\n      }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "hashing"], "dificulty": "2700", "interactive": false}