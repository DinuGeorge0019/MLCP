{"link": "https://codeforces.com//contest/1264/problem/E", "problemId": "486706", "problem_idx": "E", "shortId": "1264E", "contest_number": "1264", "problem_submissions": {"B": [66341401, 66322874, 66336572, 66329159, 66325790, 66330100, 66345009, 66330236, 66376038, 66331864, 66336631, 66328124, 66347648, 66329347, 66322983, 66344650, 66327116, 66327090, 66332056], "D2": [66339545, 66335577, 66343751, 66352069, 66344993, 66344301, 66348378, 66362083, 66352256, 66376168, 66345089, 138527512, 66378228, 66393120, 66349950, 66338137, 66353567, 66351786], "D1": [66334941, 66334668, 66343694, 66345117, 66344078, 66344165, 66344520, 66350440, 66349159, 66376114, 66339049, 66358201, 66357642, 66351611, 66357362, 66352980, 66346482, 66338263, 66345809, 66347614], "A": [66330725, 66323882, 66323064, 66323750, 66337390, 66323088, 66323240, 66323608, 66323803, 66375789, 66323639, 66328235, 66324332, 66323365, 66323990, 66326030, 66323496, 66322830, 66323987, 66323760], "C": [66326327, 66330012, 66334720, 66339910, 66341281, 66334697, 66340151, 66333112, 66337232, 66376069, 66331626, 66349943, 66341121, 66340814, 66329673, 66346210, 66334293, 66333006, 66337575, 66339417, 66355906], "E": [66322750, 66338115, 66328737, 66333356, 66334932, 66353827, 66331679, 66338428, 66427601, 66422500, 66422400, 66421563, 66419015, 66419013, 66380135, 66362673, 66361972, 66357957, 66377834, 66346874, 66338003, 66349170, 66358017, 66342846, 66355768, 66361241, 66346679], "F": [66498558, 115183857]}, "name": "E. Beautiful League", "statement": "A football league has recently begun in Beautiful land. There are n\r\nteams participating in the league. Let\u2019s enumerate them with integers\r\nfrom 1 to n.There will be played exactly\r\nfrac{n(n-1)}{2} matches: each team will play against all other teams\r\nexactly once. In each match, there is always a winner and loser and\r\nthere is no draw.After all matches are played, the organizers will count\r\nthe number of . Let\u2019s call a triple of three teams (A, B, C) beautiful\r\nif a team A win against a team B, a team B win against a team C and a\r\nteam C win against a team A. We look only to a triples of different\r\nteams and the order of teams in the triple is important.The beauty of\r\nthe league is the number of beautiful triples.At the moment, m matches\r\nwere played and their results are known.What is the maximum beauty of\r\nthe league that can be, after playing all remaining matches? Also find a\r\npossible results for all remaining\r\nfrac{n(n-1)}{2} - m matches, so that the league has this maximum beauty.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define rg register\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\nconst int inf=1e9;\nconst int N=1.1e4+5;\nint read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9') f=(c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return f*x;\n}\nstruct node{\n    int to,next,v,w;\n}a[2000001];\nint head[N],cnt=1,n,m,s,t,x,y,z,tot,minx,maxx,dis[N],f[N],pre[10001],fa[10001];\nvoid add(int x,int y,int c,int v){\n    a[++cnt].to=y,a[cnt].next=head[x],a[cnt].v=c,a[cnt].w=v,head[x]=cnt;\n    a[++cnt].to=x,a[cnt].next=head[y],a[cnt].v=0,a[cnt].w=-v,head[y]=cnt;\n}\nqueue<int>q;\nint spfa(){\n    q.push(s);\n    memset(dis,127,sizeof(dis));\n    memset(f,0,sizeof(f));\n    f[s]=1,dis[s]=0;\n    int inf=dis[s+1];\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        f[now]=0;\n        for(int i=head[now];i;i=a[i].next){\n            int v=a[i].to;\n            if(dis[v]>dis[now]+a[i].w&&a[i].v){\n                dis[v]=dis[now]+a[i].w,pre[v]=i,fa[v]=now;\n                if(!f[v])\n                    f[v]=1,q.push(v);\n            }\n        }\n    }\n    if(dis[t]!=inf)\n        return 1;\n    return 0;\n}\nint ans1,ans;\nvoid answer(){\n    while(spfa()){\n        int minx=2147483647;\n        for(int i=t;i!=s;i=fa[i])\n            minx=min(minx,a[pre[i]].v);\n        ans+=minx,ans1+=dis[t]*minx;\n        for(int i=t;i!=s;i=fa[i])\n            a[pre[i]].v-=minx,a[pre[i]^1].v+=minx;\n    }\n}\nint M[1001][1001],vis[1001][1001];\nint main(){\n    n=read();\n    for (int i=1;i<=n;i++) {\n    \tfor (int j=1;j<=n;j++) {\n    \t\tM[i][j]=(i==j)?0:2;\n    \t}\n    }\n    s=0,tot=n;\n    m=read();\n    for (int i=0;i<m;i++) {\n    \tint u=read(),v=read();\n    \tM[u][v]=1; M[v][u]=0;\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<i;j++){\n            tot++,add(s,tot,1,0);\n            if(M[i][j]!=1) add(tot,i,1,0),vis[j][i]=cnt-1;\n            if(M[i][j]!=0) add(tot,j,1,0),vis[i][j]=cnt-1;\n        }\n    t=tot+n;\n    for(int i=1;i<=n;i++)\n        for(int j=0;j<n;j++)\n            add(i,t,1,j);\n    answer();\n    for(int i=1;i<=n;i++,cout<<endl)\n        for(int j=1;j<=n;j++){\n            if(M[i][j]<2) cout<<M[i][j];\n            else printf(\"%d\",!vis[i][j]||a[vis[i][j]].v?0:1);\n        }\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "flows", "graph matchings"], "dificulty": "2700", "interactive": false}