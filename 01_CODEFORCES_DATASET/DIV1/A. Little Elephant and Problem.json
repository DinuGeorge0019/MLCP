{
    "link": "https://codeforces.com//contest/220/problem/A",
    "problemId": "1617",
    "problem_idx": "A",
    "shortId": "220A",
    "contest_number": "220",
    "problem_submissions": {
        "D": [
            2080540,
            2080418,
            2074895,
            2078075,
            2079217,
            2081403,
            2081824,
            2081006,
            2076381,
            2093601,
            2093590,
            3084971,
            2086233
        ],
        "E": [
            2078891,
            2078702,
            2081885,
            2081411,
            2081777,
            2080333,
            2079988,
            2077021,
            2081284,
            2080936,
            2080773,
            2080185,
            2080971,
            2082030,
            2080110,
            2081659,
            2081994,
            2086312,
            2082178
        ],
        "C": [
            2077244,
            2077402,
            2078300,
            2079325,
            2076073,
            2077207,
            2078341,
            2080109,
            2076476,
            2078366,
            2079100,
            2080050,
            2078605,
            2081663,
            2079424,
            2078933,
            2080721
        ],
        "B": [
            2074621,
            2083029,
            2082854,
            2073372,
            2075693,
            2075380,
            2073348,
            2074150,
            2075655,
            2074877,
            2074146,
            2076125,
            2083532,
            2074043,
            2074785,
            2086353,
            2077672,
            2098154,
            2098144,
            2076395,
            2075929,
            2074543
        ],
        "A": [
            2072304,
            2072260,
            2072332,
            2072289,
            2079727,
            2072355,
            2072380,
            2072450,
            2072425,
            2072416,
            2072763,
            2072261,
            2072442,
            2073395,
            2073046,
            2072395,
            2072278
        ]
    },
    "name": "A. Little Elephant and Problem",
    "statement": "The Little Elephant has got a problem somebody has been touching his\r\nsorted by non-decreasing array of length and possibly swapped some\r\nelements of the array.The Little Elephant doesn\u2019t want to call the\r\npolice until he understands if he could have accidentally changed the\r\narray himself. He thinks that he could have accidentally changed array ,\r\nonly if array can be sorted in no more than one operation of swapping\r\nelements (not necessarily adjacent). That is, the Little Elephant could\r\nhave accidentally swapped some two elements.Help the Little Elephant,\r\ndetermine if he could have accidentally changed the array , sorted by\r\nnon-decreasing, himself.\r\n",
    "solutions": [
        "// @author peter50216\n// #includes {{{\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<assert.h>\n#include<stdarg.h>\n#include<time.h>\n#include<limits.h>\n#include<ctype.h>\n#include<string>\n#include<map>\n#include<set>\n#include<queue>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n// }}}\nint in[100010];\nint i2[101000];\nint main(){\n    int n,i,j;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&in[i]);\n        i2[i]=in[i];\n    }\n    sort(in,in+n);\n    int c=0;\n    for(i=0;i<n;i++){\n        if(i2[i]!=in[i])c++;\n    }\n    puts(c<=2?\"YES\":\"NO\");\n}\n// vim: fdm=marker:commentstring=\\ \\\"\\ %s:nowrap:autoread\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "sortings"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Little Elephant and Problem.json",
    "editorial_link": "https://codeforces.com//blog/entry/5177",
    "editorial": "There are multiple possible solutions for this problem. For example, the\r\nfollowing. Find the last index such that there exists some (minimal\r\npossible) that < . Then you just need to try two possibilities either\r\nswap and , or don\u00e2\u0080\u0099t change anything.\r\n"
}