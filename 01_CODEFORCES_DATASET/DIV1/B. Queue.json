{
    "link": "https://codeforces.com//contest/91/problem/B",
    "problemId": "467",
    "problem_idx": "B",
    "shortId": "91B",
    "contest_number": "91",
    "problem_submissions": {
        "E": [
            503728,
            502526,
            502324,
            502390,
            507083,
            507754,
            507742,
            507704,
            503634,
            502642,
            504726,
            503639,
            504548,
            503486,
            503083
        ],
        "D": [
            502276,
            503817,
            503388,
            504083,
            503790,
            503692,
            503693,
            502719,
            503528
        ],
        "C": [
            500481,
            501267,
            503127,
            500359,
            500890,
            501727,
            501793,
            501879,
            501823,
            691241,
            500724
        ],
        "B": [
            500029,
            500306,
            499798,
            499713,
            500770,
            500316,
            500169,
            500955,
            501299,
            500855,
            500308,
            500853,
            500345,
            500259,
            501038,
            510135,
            501272,
            500210
        ],
        "A": [
            499372,
            499587,
            499153,
            501187,
            499642,
            499614,
            500028,
            500088,
            499525,
            499582,
            499555,
            499393,
            499483,
            499408,
            510127,
            499780,
            499366
        ]
    },
    "name": "B. Queue",
    "statement": "There are walruses standing in a queue in an airport. They are numbered\r\nstarting from the queue’s tail: the -st walrus stands at the end of the\r\nqueue and the -th walrus stands at the beginning of the queue. The -th\r\nwalrus has the age equal to .The -th walrus becomes displeased if\r\nthere’s a younger walrus standing in front of him, that is, if exists\r\nsuch (), that . The of the -th walrus is equal to the number of walruses\r\nbetween him and the furthest walrus ahead of him, which is younger than\r\nthe -th one. That is, the further that young walrus stands from him, the\r\nstronger the displeasure is.The airport manager asked you to count for\r\neach of walruses in the queue his displeasure.\r\n",
    "solutions": [
        "#pragma comment(linker, \"/STACK:60000000\")\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n#include <ctime>\n#include <cstring>\n#include <cassert>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <queue>\n#include <functional>\n\nusing namespace std;\n\n#define forn(i, n) for(int i = 0; i < (int)(n); i++)\n#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define last(a) int(a.size() - 1)\n#define all(a) a.begin(), a.end()\n#define seta(a,x) memset (a, x, sizeof (a))\n#define I (int)\n\ntypedef long long int64;\ntypedef pair <int, int> pii;\ntypedef long double ldb;\n\nconst long double eps = 1e-9;\nconst int inf = (1 << 30) - 1;\nconst int64 inf64 = ((int64)1 << 62) - 1;\nconst long double pi = 3.1415926535897932384626433832795;\n\ntemplate <class T> T sqr (T x) {return x * x;}\n\nint n;\nvector <pii> a;\nint ans[100000];\nint x;\n\nint main ()\n{\n//\tfreopen (\"input.txt\", \"r\", stdin);\n//\tfreopen (\"output.txt\", \"w\", stdout);\n\tscanf (\"%d\", &n);\n\ta.resize (n);\n\tforn (i, n) {\n\t\ta[i].sc = i;\n\t\tscanf (\"%d\", &a[i].fs);\n\t}\n\tsort (all (a));\n\tint l = 0;\n\tx = -1;\n\twhile (l < n) {\n\t\tint r = l;\n\t\twhile (r + 1 < l && a[r+1].fs == a[l].fs)\n\t\t\tr ++;\n\t\tfor (int i = l; i <= r; i ++) {\n\t\t\tif (x < a[i].sc)\n\t\t\t\tans[a[i].sc] = -1;\n\t\t\telse\n\t\t\t\tans[a[i].sc] = x - a[i].sc - 1;\n\t\t}\n\t\tfor (int i = l; i <= r; i ++)\n\t\t\tx = max (x, a[i].sc);\n\t\tl = r + 1;\n\t}\n\tforn (i, n)\n\t\tprintf (\"%d \", ans[i]);\n\tcout << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "data structures"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Queue.json",
    "editorial_link": "https://codeforces.com//blog/entry/2182",
    "editorial": "There were a lot of different solutions but I will tell you the author solution. Let's precalculate [i,?n]. It can be done with the time equal to O(n) moving from the right to the left. Define [i,?n] as Mini. Obviously, that Mini?<??=?Mini?+?1. Now for every position i using binary search let's find j (j?>?i), that Minj?<?ai and Minj?+?1?>??=?a{i}. For such j there are no walruses who have age younger then walrus i. It's obviously because Minj is the minimum on [j,?n]. If there is no such j then print ?-?1 else print j?-?i?-?1.",
    "hint": []
}