{"link": "https://codeforces.com//contest/866/problem/D", "problemId": "125343", "problem_idx": "D", "shortId": "866D", "contest_number": "866", "problem_submissions": {"G": [48042764, 48042747, 48042330, 48042234, 48042200, 30882226, 30888984, 57250068], "D": [31044799, 30877994, 30876120, 30879768, 30877841, 30935417, 30935391, 30878366, 82427005, 30877626, 30880014, 30879034, 30880919, 30880306, 30879681, 30881205, 30880292, 30878146, 30881085, 30880894], "F": [30883978, 30915539, 30915526, 30915506, 30915496, 30915492, 30915483, 30915431, 30915401, 30915351, 30915334, 30888671, 30882806, 57257664], "C": [30875892, 30877179, 30883361, 30877278, 30966883, 30966734, 30935175, 30876872, 30891743, 30891736, 30880301, 30877644, 30878514, 30877044, 30878539, 30877470, 30877525, 30878653, 30881355, 30877891, 31274174, 30878115], "B": [30874326, 30883354, 30901870, 30876267, 30875622, 30878803, 30876656, 30875923, 30874820, 30876008, 30875772, 30876212, 30875972, 30876853, 30876928, 30876128, 30876479], "A": [30872518, 30872539, 30872760, 30872739, 30875884, 30873740, 30872744, 30872982, 30875680, 30874617, 30872755, 30881297, 30873075, 30873379, 30873703, 30873164, 30874384], "E": [30957127, 30884728, 30888758, 30909701]}, "name": "D. Buy Low Sell High", "statement": "You can perfectly predict the price of a certain stock for the next\r\ndays. You would like to profit on this knowledge, but only want to\r\ntransact one share of stock per day. That is, each day you will either\r\nbuy one share, sell one share, or do nothing. Initially you own zero\r\nshares, and you cannot sell shares when you don\u2019t own any. At the end of\r\nthe days you would like to again own zero shares, but want to have as\r\nmuch money as possible.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 05.10.2017 21:52:46       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  multiset<int> s;\n  long long ans = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    scanf(\"%d\", &x);\n    s.insert(x);\n    if (*s.begin() < x) {\n      ans += x - *s.begin();\n      s.erase(s.begin());\n      s.insert(x);\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "greedy", "two pointers"], "dificulty": "2400", "interactive": false}