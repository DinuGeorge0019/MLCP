{
    "link": "https://codeforces.com//contest/2115/problem/C",
    "problemId": "3415145",
    "problem_idx": "C",
    "shortId": "2115C",
    "contest_number": "2115",
    "problem_submissions": {
        "A": [
            322373149,
            322373057,
            322191671,
            322196906,
            322191306,
            322207089,
            322339019,
            322205731,
            322191602,
            322193299,
            322321188,
            322320656,
            322193684,
            322193937,
            322193846,
            322195728,
            322193849,
            322208657,
            322196496,
            322194770,
            322195138,
            322193397,
            322277408,
            322205364,
            322201021
        ],
        "E": [
            322277481,
            322279542,
            322287881,
            322287269,
            322268790,
            322276073,
            322479322,
            322316002,
            322463290,
            322674274,
            322484220
        ],
        "D": [
            322247280,
            322249604,
            322253666,
            322244252,
            322244159,
            322252360,
            322259840,
            322274633,
            322274421,
            322243918,
            322262198,
            322264257,
            322258885,
            322256903,
            322256375,
            322270049,
            322285061,
            322255261,
            322270426,
            322274051
        ],
        "C": [
            322226886,
            322242092,
            322247023,
            322262817,
            322237987,
            322228189,
            322234047,
            322256038,
            322250633,
            322253986,
            322247586,
            322244155,
            322267167,
            322253884,
            322236170,
            322239045,
            322256498,
            322247239
        ],
        "B": [
            322199788,
            322207830,
            322209032,
            322228331,
            322214165,
            322204435,
            322203425,
            322201226,
            322209167,
            322226797,
            322225099,
            322216043,
            322219704,
            322219745,
            322213225,
            322218856,
            322205348,
            322216288,
            322222101,
            322216208
        ],
        "F2": [
            322365448
        ],
        "F1": [
            322365418
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/143418",
    "editorial": "SolutionConsidering all current monsters, if the lowest HP of the\r\nmonsters is , Gellyfish can only make at most \"ranged\" attacks.So for\r\neach monster, if its HP is , then it must be subject to at least\r\n\"pointing\" attacks. Further, we can see that we only care about and\r\n.Consider directly using to indicate that there are still rounds to go,\r\nthe lowest HP of the monsters is , and , the probability that Gellyfish\r\nwill reach her goal. This solves the problem within , but that’s not\r\nenough.Consider the initial HP of all monsters, let . For the first\r\ntimes the sword doesn’t shine, Gellyfish will obviously launch an\r\nattack.So we using to indicate the probability that the sword did not\r\nshine exactly times in the first rounds and the last time the sword did\r\nnot shine. We then enumerate the -th time that the sword didn’t shine.\r\nWe can divide the problem into two parts. The first half can be solved\r\nusing , while the second half can be solved using , We just need to\r\nmerge the results of the two parts, which is not difficult.When we use f\r\nto solve the second part, it is easy to see that initially all monsters\r\nhave the same HP, and each \"pointing\" attack can directly attacks the\r\nmonster with the highest HP, which doesn’t make the answer worse. So we\r\nhave for any time, and the range of that we actually need is compressed\r\nto .Time complexity: per test case.Memory complexity: per test case.\r\n",
    "name": "C. Gellyfish and Eternal Violet",
    "statement": "There are n monsters, numbered from 1 to n, in front of Gellyfish. The\r\nHP of the i-th monster is h_i.Gellyfish doesn’t want to kill them, but\r\nshe wants to keep these monsters from being a threat to her. So she\r\nwants to reduce the HP of all the monsters to exactly 1.Now, Gellyfish,\r\nwith The Sword Sharpened with Tears, is going to attack the monsters for\r\nm rounds. For each round: The Sword Sharpened with Tears shines with a\r\nprobability of p. Gellyfish can choose whether to attack: If Gellyfish\r\ndoesn’t attack, nothing happens. If Gellyfish chooses to attack and The\r\nSword Sharpened with Tears shines, the HP of all the monsters will be\r\nreduced by 1. If Gellyfish chooses to attack and The Sword Sharpened\r\nwith Tears does not shine, Gellyfish can choose one of the monsters and\r\nreduce its HP by 1. Please note that before Gellyfish decides whether or\r\nnot to attack, she will know whether the sword shines or not. Also, when\r\nthe sword shines, Gellyfish can only make attacks on all the monsters\r\nand cannot make an attack on only one monster.Now, Gellyfish wants to\r\nknow what the probability is that she will reach her goal if she makes\r\nchoices optimally during the battle.\r\n",
    "solutions": [],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "dp",
        "greedy",
        "math",
        "probabilities"
    ],
    "dificulty": "",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Gellyfish and Eternal Violet.json",
    "hint": [
        "Hint 1 Please think carefully about what happens after the death of either knight.",
        "Hint 1 How to quickly compare and for given integers is the key.",
        "Hint 2 We are given two permutations of and , which means that each element will appear only once in both and , respectively. What's the point of this?"
    ]
}