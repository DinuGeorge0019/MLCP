{"link": "https://codeforces.com//contest/504/problem/B", "problemId": "20648", "problem_idx": "B", "shortId": "504B", "contest_number": "504", "problem_submissions": {"D": [9413857, 9415317, 9414618, 9414335, 9414712, 9421240, 9415227, 9413052, 9413088, 9412895], "C": [9411735, 9413692, 9412956, 9412560, 9412053, 9410886, 9412226, 9412435, 9412519, 9412154, 9424712], "B": [9410465, 9409352, 9409933, 9410329, 9408364, 9410523, 9413452, 9410100, 9409772, 9409410, 9413230, 9409855, 9410114, 9410231, 9410054], "A": [9407864, 9408933, 9408565, 9408075, 9409262, 9408270, 9407763, 9408138, 9407931, 9407399, 9408250, 9407650, 9407865, 9407661, 9408743], "E": [9443621, 9411256, 9413318, 9421624, 9456035, 9420369, 9420367]}, "name": "B. Misha and Permutations Summation", "statement": "Let\u2019s define the sum of two permutations and of numbers as permutation ,\r\nwhere is the -th lexicographically permutation of numbers (counting from\r\nzero), and is the number of permutation in the lexicographical order.For\r\nexample, , Misha has two permutations, and . Your task is to find their\r\nsum.Permutation is called to be lexicographically smaller than\r\npermutation , if for some following conditions hold: .\r\n", "solutions": ["#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\n#include <ctime>\n#include <set>\n#include <map>\n#include <vector>\n#include <iomanip>\nusing namespace std;\n\n#define N 210000\n\nint n, a[N], b[N], c[N], a1[N], b1[N], c1[N], d[N];\n\nvoid modify(int x, int y) {\n\tfor (; x <= n; x += x & -x)\n\t\td[x] += y;\n}\n\nint query(int x) {\n\tint ans = 0;\n\tfor (; x; x -= x & -x)\n\t\tans += d[x];\n\treturn ans;\n}\n\nint get(int x) {\n\tint q = 0, h = n, mid;\n\twhile (q < h - 1) {\n\t\tmid = (q + h) / 2;\n\t\tif (query(mid) >= x)\n\t\t\th = mid;\n\t\telse\n\t\t\tq = mid;\n\t}\n\treturn h;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]), a[i]++;\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &b[i]), b[i]++;\n\tfor (int i = n; i; i--) {\n\t\ta1[i] = query(a[i]);\n\t\tmodify(a[i], 1);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\td[i] = 0;\n\tfor (int i = n; i; i--) {\n\t\tb1[i] = query(b[i]);\n\t\tmodify(b[i], 1);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\td[i] = 0;\n\tfor (int i = n; i; i--) {\n\t\tc1[i] += a1[i] + b1[i];\n\t\tif (c1[i] >= n - i + 1)\n\t\t\tc1[i] -= n - i + 1, c1[i - 1]++;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tmodify(i, 1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tc[i] = get(c1[i] + 1);\n\t\tmodify(c[i], -1);\n\t}\n\tfor (int i = 1; i < n; i++)\n\t\tprintf(\"%d \", c[i] - 1);\n\tprintf(\"%d\\n\", c[n] - 1);\n}\n"], "input": "", "output": "", "tags": ["binary search", "data structures", "math"], "dificulty": "2000", "interactive": false}