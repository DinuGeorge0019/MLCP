{
    "link": "https://codeforces.com//contest/547/problem/A",
    "problemId": "28329",
    "problem_idx": "A",
    "shortId": "547A",
    "contest_number": "547",
    "problem_submissions": {
        "A": [
            11306176,
            11281663,
            11286152,
            11283154,
            11300410,
            11282966,
            11282839,
            11284240,
            11282987,
            11283935,
            11284453,
            11283105,
            11302976,
            11296402,
            11304989
        ],
        "E": [
            11300374,
            11295900,
            11296096,
            11332517,
            11332504,
            11301614,
            11329764,
            11329670,
            11329557,
            11302402,
            11296504,
            11303628,
            11310167,
            11310570,
            11335792,
            11334862,
            11310094,
            11298023,
            11289647
        ],
        "D": [
            11290397,
            11311418,
            11289189,
            11307197,
            11288244,
            11306223,
            11292199,
            11318433,
            11338617,
            11294617,
            11298075,
            11296934,
            11291997,
            11293528,
            11292331,
            11330482
        ],
        "C": [
            11288602,
            11286288,
            11282036,
            11285135,
            11284518,
            11286983,
            11288810,
            11287248,
            11292291,
            11290371,
            11293842,
            11290787,
            11289508,
            11302378,
            11289341,
            11290547,
            11300174
        ],
        "B": [
            11284410,
            11282963,
            11283861,
            11287519,
            11281935,
            11284503,
            11284754,
            11285157,
            11286946,
            11285798,
            11286796,
            11285456,
            11285604,
            11286200,
            11285607,
            11286328,
            11292395
        ]
    },
    "name": "A. Mike and Frog",
    "statement": "Mike has a frog and a flower. His frog is named Xaniar and his flower is\r\nnamed Abol. Initially(at time ), height of Xaniar is and height of Abol\r\nis . Each second, Mike waters Abol and Xaniar. So, if height of Xaniar\r\nis and height of Abol is , after one second height of Xaniar will become\r\nand height of Abol will become where and are some integer numbers and\r\ndenotes the remainder of modulo .Mike is a competitive programmer fan.\r\nHe wants to know the minimum time it takes until height of Xania is and\r\nheight of Abol is .Mike has asked you for your help. Calculate the\r\nminimum time or say it will never happen.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define SZ(X) ((int)(X).size())\n#define ALL(X) (X).begin(), (X).end()\n#define REP(I, N) for (int I = 0; I < (N); ++I)\n#define REPP(I, A, B) for (int I = (A); I < (B); ++I)\n#define RI(X) scanf(\"%d\", &(X))\n#define RII(X, Y) scanf(\"%d%d\", &(X), &(Y))\n#define RIII(X, Y, Z) scanf(\"%d%d%d\", &(X), &(Y), &(Z))\n#define DRI(X) int (X); scanf(\"%d\", &X)\n#define DRII(X, Y) int X, Y; scanf(\"%d%d\", &X, &Y)\n#define DRIII(X, Y, Z) int X, Y, Z; scanf(\"%d%d%d\", &X, &Y, &Z)\n#define RS(X) scanf(\"%s\", (X))\n#define CASET int ___T, case_n = 1; scanf(\"%d \", &___T); while (___T-- > 0)\n#define MP make_pair\n#define PB push_back\n#define MS0(X) memset((X), 0, sizeof((X)))\n#define MS1(X) memset((X), -1, sizeof((X)))\n#define LEN(X) strlen(X)\n#define PII pair<int,int>\n#define VPII vector<pair<int,int> >\n#define PLL pair<long long,long long>\n#define F first\n#define S second\ntypedef long long LL;\nusing namespace std;\nconst int MOD = 1e9+7;\nconst int SIZE = 1e6+10;\n// template end here\nint m;\nvoid get(LL h,LL a,LL x,LL y,LL &v1,LL &v2){\n    v1=-1;\n    v2=-1;\n    int tt=0;\n    REP(i,m*5){\n        h=(x*h+y)%m;\n        if(h==a){\n            if(!tt){\n                v1=i+1;\n            }\n            else if(tt==1){\n                v2=i+1;\n            }\n            else break;\n            tt++;\n        }\n    }\n}\nint ha[SIZE];\nint main(){\n    RI(m);\n    DRII(h1,a1);\n    DRII(x1,y1);\n    DRII(h2,a2);\n    DRII(x2,y2);\n    LL v1,v2,u1,u2;\n    get(h1,a1,x1,y1,v1,v2);\n    get(h2,a2,x2,y2,u1,u2);\n    if(v1==-1||u1==-1){\n        puts(\"-1\");\n    }\n    else{\n        if(u2==-1){\n            swap(v1,u1);\n            swap(v2,u2);\n        }\n        if(v2==-1){\n            if(u2==-1){\n                if(v1==u1)cout<<v1<<endl;\n                else cout<<-1<<endl;\n            }\n            else{\n                LL now=u1;\n                REP(k,m*5){\n                    if(now==v1){\n                        cout<<now<<endl;\n                        return 0;\n                    }\n                    now+=u2-u1;\n                }\n                cout<<-1<<endl;\n                return 0;\n            }\n        }\n        else{\n            LL now=u1;\n            REP(k,m*5){\n                if(now>=v1&&(now-v1)%(v2-v1)==0){\n                    cout<<now<<endl;\n                    return 0;\n                }\n                now+=u2-u1;\n            }\n            cout<<-1<<endl;\n            return 0;\n        }\n    }\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Mike and Frog.json",
    "editorial_link": "https://codeforces.com/blog/entry/18126",
    "editorial": "In this editorial, consider , , , and , , , and . First of all, find the\nnumber of seconds it takes until height of Xaniar becomes (starting from\n) and call it . Please note that and if we don\u00e2\u0080\u0099t reach after seconds,\nthen answer is . If after seconds also height of Abol will become equal\nto then answer if . Otherwise, find the height of Abdol after seconds\nand call it . Then find the number of seconds it takes until height of\nXaniar becomes (starting from ) and call it . Please note that and if we\ndon\u00e2\u0080\u0099t reach after seconds, then answer is . if , then find ( times). It\nis really easy: Then, Actually, if height of Abol is then, after seconds\nit will be . Then, starting from , find the minimum number of steps of\nperforming e = f(e) it takes to reach and call it . Please note that and\nif we don\u00e2\u0080\u0099t reach after seconds, then answer is . Then answer is . Time\nComplexity: C++ Code by PrinceOfPersia C++ Code by Haghani Java Code by\nZlobober\n"
}