{
    "link": "https://codeforces.com//contest/741/problem/B",
    "problemId": "83311",
    "problem_idx": "B",
    "shortId": "741B",
    "contest_number": "741",
    "problem_submissions": {
        "D": [
            22777729,
            22777450,
            22755590,
            22758367,
            22756137,
            22808584,
            22805290,
            22759931,
            22759071,
            22750711,
            22754148,
            22814636,
            47300114,
            22755389,
            22758896,
            22756607,
            22790736,
            22757335,
            22793289
        ],
        "C": [
            22742829,
            22742451,
            22758088,
            22742404,
            22760066,
            22743932,
            22747335,
            22749445,
            22763475,
            22742054,
            22742076,
            22737953,
            22744276,
            22742907,
            22746646
        ],
        "B": [
            22738380,
            22738003,
            22739684,
            22748249,
            22740546,
            22740616,
            22739371,
            22740551,
            22740349,
            22741081,
            22738198,
            22739206,
            22740665,
            22739327,
            22739681,
            22737298,
            22743723,
            22740079,
            22738120,
            22735907
        ],
        "A": [
            22734595,
            22733654,
            22736292,
            22744160,
            22745379,
            22739567,
            22735733,
            22736022,
            22736152,
            22736425,
            22735084,
            22735416,
            22736004,
            22734761,
            22740072,
            22741265,
            22735495,
            22735318,
            22738723
        ],
        "E": [
            22798525
        ]
    },
    "name": "B. Arpa s weak amphitheater and Mehrdad s valuable Hoses",
    "statement": "Mehrdad wants to invite some Hoses to the palace for a dancing party.\r\nEach Hos has some weight and some beauty . Also each Hos may have some\r\nfriends. Hoses are divided in some friendship groups. Two Hoses and are\r\nin the same friendship group if and only if there is a sequence of Hoses\r\nsuch that and are friends for each , and and . Arpa allowed to use the\r\namphitheater of palace to Mehrdad for this party. Arpa\u2019s amphitheater\r\ncan hold at most weight on it. Mehrdad is so greedy that he wants to\r\ninvite some Hoses such that sum of their weights is not greater than and\r\nsum of their beauties is as large as possible. Along with that, from\r\neach friendship group he can either invite all Hoses, or no more than\r\none. Otherwise, some Hoses will be hurt. Find for Mehrdad the maximum\r\npossible total beauty of Hoses he can invite so that no one gets hurt\r\nand the total weight doesn\u2019t exceed .\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=1010;\nint n,m,v,w[N],b[N],f[N],u,vv;\nint dp[N],pd[N];\nint find(int x) { return f[x]==x?x:f[x]=find(f[x]); }\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&v);\n\trep(i,1,n+1) scanf(\"%d\",w+i);\n\trep(i,1,n+1) scanf(\"%d\",b+i);\n\trep(i,1,n+1) f[i]=i;\n\trep(i,0,m) {\n\t\tscanf(\"%d%d\",&u,&vv);\n\t\tf[find(u)]=find(vv);\n\t}\n\trep(i,1,n+1) if (find(i)==i) {\n\t\tVI itm; int sw=0,sb=0;\n\t\trep(j,1,n+1) if (find(j)==i) itm.pb(j),sw+=w[j],sb+=b[j];\n\t\trep(j,0,v+1) pd[j]=dp[j];\n\t\tfor (auto p:itm) {\n//\t\t\tprintf(\"%d %d\\n\",w[p],b[p]);\n\t\t\trep(j,w[p],v+1) dp[j]=max(dp[j],pd[j-w[p]]+b[p]);\n\t\t}\n\t\trep(j,sw,v+1) dp[j]=max(dp[j],pd[j-sw]+sb);\n//\t\tprintf(\"%d %d\\n\",sw,sb);\n//\t\tputs(\"\");\n//\t\tprintf(\"%d\\n\",i);\n\t}\n\tprintf(\"%d\\n\",dp[v]);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dfs and similar",
        "dp",
        "dsu"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Arpa s weak amphitheater and Mehrdad s valuable Hoses.json",
    "editorial_link": "https://codeforces.com//blog/entry/48871",
    "editorial": "It s a simple knapsack problem. Let s solve this version of knapsack\r\nproblem first: we have sets of items, each item has value and weight,\r\nfind the maximum value we can earn if we can choose at most one item\r\nfrom each set and the sum of the chosen items must be less than or equal\r\nto . Let be the max value we can earn if the sum of weights of chosen\r\nitems is less than or equal to . Now iterate on sets one by one and\r\nupdate as follows: for each item , and for each weight , .Run dfs and\r\nfind groups at first. The problem is same with above problem, each group\r\nis some set in above problem, just add the whole group as an item to the\r\nset that related to this group.Time complexity: .\r\n"
}