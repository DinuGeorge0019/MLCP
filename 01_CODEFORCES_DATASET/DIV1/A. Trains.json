{
    "link": "https://codeforces.com//contest/87/problem/A",
    "problemId": "457",
    "problem_idx": "A",
    "shortId": "87A",
    "contest_number": "87",
    "problem_submissions": {
        "E": [
            480522,
            480373,
            480563,
            481052,
            487220,
            487031,
            486475,
            483729,
            480251,
            482514,
            479707,
            481257
        ],
        "D": [
            479023,
            478767,
            478527,
            480005,
            478079,
            479874,
            481953,
            479744,
            478788,
            480461,
            479633,
            479612,
            480061,
            1186292,
            480377
        ],
        "C": [
            477696,
            477515,
            477634,
            477346,
            478564,
            477717,
            482287,
            482259,
            482254,
            482249,
            478031,
            477748,
            478549,
            478513,
            478021,
            477556,
            477965,
            477701,
            478643,
            478646
        ],
        "B": [
            477395,
            477959,
            480915,
            478219,
            479510,
            478272,
            478602,
            479590,
            477948,
            477912,
            477626,
            478345,
            478853,
            480591,
            477860,
            478043
        ],
        "A": [
            477178,
            477245,
            477382,
            477797,
            478932,
            477255,
            477225,
            477234,
            477375,
            477368,
            477236,
            477191,
            477429,
            479893,
            477216,
            477325
        ]
    },
    "name": "A. Trains",
    "statement": "Vasya the programmer lives in the middle of the Programming subway\r\nbranch. He has two girlfriends: Dasha and Masha, who live at the\r\ndifferent ends of the branch, each one is unaware of the other one\u2019s\r\nexistence.When Vasya has some free time, he goes to one of his\r\ngirlfriends. He descends into the subway at some time, waits the first\r\ntrain to come and rides on it to the end of the branch to the\r\ncorresponding girl. However, the trains run with different frequencies:\r\na train goes to Dasha\u2019s direction every minutes, but a train goes to\r\nMasha\u2019s direction every minutes. If two trains approach at the same\r\ntime, Vasya goes toward the direction with the lower frequency of going\r\ntrains, that is, to the girl, to whose directions the trains go less\r\nfrequently (see the note to the third sample).We know that the trains\r\nbegin to go simultaneously before Vasya appears. That is the train\r\nschedule is such that there exists a moment of time when the two trains\r\narrive simultaneously.Help Vasya count to which girlfriend he will go\r\nmore often.\r\n",
    "solutions": [
        "#include <iostream>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <cstring>\n#include <cstdio>\n#include <cassert>\n#include <queue>\n#include <bitset>\n#include <cmath>\n#include <sstream>\n#include <string>\n#include <vector>\n\n#define mp make_pair\n#define pb push_back\n#define sz(v) ((int)(v).size())\n#define all(v) (v).begin(),(v).end()\n\nusing namespace std;\n\ntypedef pair<int, int> ii;\ntypedef long long int64;\ntypedef vector<int> vi;\n\ntemplate<class T> T abs(T x) {return x > 0 ? x : (-x); }\ntemplate<class T> T sqr(T x) {return x * x; }\n\nint64 gcd(int64 x, int64 y) {\n    if (!y) return x;\n    return gcd(y, x % y);\n}\n\nint main()\n{\n    int64 a, b;\n    cin >> a >> b;\n    int64 d = gcd(a, b);\n    d = (a * b) / d;\n    int64 x = d / a;\n    int64 y = d / b;\n    if (a < b)\n        ++y;\n    else\n        ++x;\n    if (x > y) cout << \"Dasha\\n\";\n    else if (x < y) cout << \"Masha\\n\";\n    else cout << \"Equal\\n\";\n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "math"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Trains.json",
    "editorial_link": "https://codeforces.com//blog/entry/2121",
    "editorial": "This problem can be approached from two sides - from a programmer's perspective and a mathematician's one. We consider both approaches.\n\nFirst, let's write some general propositions. Let's put on a straight line all the moments of time when the trains arrive. We will refer the interval between two successive points to the girl, to who the train that matches the right end of the segment is going. Also note that the entire picture is periodic with the period equal to lcm(a, b). Vasya will obviously more often visit the girl, whose total length of the segments is larger.\n\nThe programming approach is about modeling the process. If we need to compare the lengths of two sets of intervals, then let's count them. We can do it using two pointers. Let's see what train comes next, add time before the arrival of the train to one of the answers, move the pointer and the current time. We should stop either when two last trains arrive simultaneously or when arrive a+b trains. The solution has asymptotic O(a?+?b), that fits the time limit. Don't forget that lcm(a,b) ~ 10^12, i.e., we need the 64-bit data type.\n\nThe mathematical approach provides us with a more elegant and shorter solution, however, it takes more thinking. It seems obvious that Vasya will more often go to the girl, to who trains go more often. This fact is almost true. Let's try to prove it. Let's divide a and b by their gcd - from this, obviously, nothing will change. To make it clearer, let a???b. Let's calculate the total length of segments corresponding to the second girl. For this, we need to take a few facts into consideration.\n1) All of them do not exceed a\n2) All a segments are different (due to coprimeness of a and b).\n3) They all are at least 1.\nBut such a set of intervals is unique - it\u0092s set of numbers {1, 2, \u0085 , a} and its length equals . Besides, the equality is fulfilled when the following condition is met: b?-?a?=?1.\nHence the following is true. The answer is Equal, when |a?-?b|?=?1, otherwise Vasya goes more often to the girl to which the trains go more often. The key is not to forget to divide a and b by their gcd."
}