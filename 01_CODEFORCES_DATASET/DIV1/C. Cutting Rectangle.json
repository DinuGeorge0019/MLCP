{"link": "https://codeforces.com//contest/963/problem/C", "problemId": "175448", "problem_idx": "C", "shortId": "963C", "contest_number": "963", "problem_submissions": {"E": [37408346, 37407644, 51152346, 37411847, 37415664, 37414743, 37424807, 37560510, 63561204, 37525085], "D": [37404929, 37404881, 37407341, 37406493, 37404117, 37403898, 37407185, 37408546, 37404537, 37409644, 37405529, 37411456, 37412888, 37408258, 37411536, 37411945, 37405408, 37405454, 37410330], "C": [37403149, 37410272, 37405789, 37402217, 37408755, 37410613, 37405532, 37406058, 37410998, 37406279, 37408081, 37407255, 37409639, 37405742, 37409484, 37407736, 37415193, 37408262], "A": [37400764, 37398530, 37400243, 37398542, 37398672, 37398448, 37403076, 37400054, 37401968, 37403020, 37402655, 37401825, 37399871, 37409184, 37400223, 37401116, 37399078, 37407652], "B": [37399438, 37401875, 37403648, 37403088, 37402069, 37401815, 37401672, 37402933, 37403748, 37400539, 37403834, 37404008, 37402988, 37412215, 37402134, 37404563, 37403658, 37399677, 37411986]}, "name": "C. Cutting Rectangle", "statement": "A rectangle with sides A and B is cut into rectangles with cuts parallel\r\nto its sides. For example, if p horizontal and q vertical cuts were\r\nmade, (p + 1)\r\ncdot (q + 1) rectangles were left after the cutting. After the cutting,\r\nrectangles were of n different types. Two rectangles are different if at\r\nleast one side of one rectangle isn\u2019t equal to the corresponding side of\r\nthe other. Note that the rectangle can\u2019t be rotated, this means that\r\nrectangles a\r\ntimes b and b\r\ntimes a are considered different if a\r\nneq b.For each type of rectangles, lengths of the sides of rectangles\r\nare given along with the amount of the rectangles of this type that were\r\nleft after cutting the initial rectangle.Calculate the amount of pairs\r\n(A; B) such as the given rectangles could be created by cutting the\r\nrectangle with sides of lengths A and B. Note that pairs (A; B) and (B;\r\nA) are considered different when A\r\nneq B.\r\n", "solutions": ["#ifndef BZ\n#pragma GCC optimize \"-O3\"\n#endif\n#include <bits/stdc++.h>\n\nusing ll = long long;\nusing ld = long double;\nusing ull = uint64_t;\nusing namespace std;\n\nvoid zero() {\n\tcout << \"0\\n\";\n\texit(0);\n}\n\nll gcd(ll a, ll b) {\n\twhile (b) {\n\t\tll c = a % b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\n\treturn a;\n}\n\nvector<ll> xs;\nvector<ll> ys;\nvector<array<ll, 3>> a;\n\nll at(ll x, ll y) {\n\tarray<ll, 3> cur = {x, y, 0};\n\tauto arr = *lower_bound(a.begin(), a.end() - 1, cur);\n\treturn arr[2];\n}\n\nconst ll M1 = 1e9 + 7;\nconst ll M2 = 1e9 + 9;\nconst ll M3 = 1e9 + 5;\n\nvector<ll> mods = {M1, M2, 998244353, M3};\n\nll mul(ll a, ll b, ll c) {\n\treturn (a % c) * (b % c) % c;\n}\n\nvoid check(ll a, ll b, ll c, ll d) {\n\tfor (ll mod: mods) {\n\t\tif (mul(a, b,mod) != mul(c, d, mod)) {\n\t\t\tzero();\n\t\t}\n\t}\n}\n\nint main() {\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cout.setf(ios::fixed); cout.precision(20);\n\tint n;\n\tcin >> n;\n\tll g = 0;\n\n\tfor (int i = 0; i < n; ++i) {\n\t\tll w, h, c;\n\t\tcin >> w >> h >> c;\n\t\txs.push_back(w);\n\t\tys.push_back(h);\n\t\ta.push_back({w, h, c});\n\t\tg = gcd(g, c);\n\t}\n\n\tsort(a.begin(), a.end());\n\tsort(xs.begin(), xs.end());\n\tsort(ys.begin(), ys.end());\n\txs.resize(unique(xs.begin(), xs.end()) - xs.begin());\n\tys.resize(unique(ys.begin(), ys.end()) - ys.begin());\n\n\tll x = xs[0];\n\tll y = ys[0];\n\tif (ll(xs.size()) * ll(ys.size()) != n) {\n\t\tzero();\n\t}\n\n\tfor (int i = 1; i < xs.size(); ++i) \n\t\tfor (int j = 1; j < ys.size(); ++j) \n\t\t\tcheck(at(x, y), at(xs[i], ys[j]), at(xs[i], y), at(x, ys[j]));\n\n\tint ans = 0;\n\tfor (ll i = 1; i * i <= g; ++i) {\n\t\tif (g % i == 0) {\n\t\t\t++ans;\n\t\t\tans += (g / i != i);\n\t\t}\n\t}\n\n\tcout << ans << \"\\n\";\n}\n\n\n\n\n\n"], "input": "", "output": "", "tags": ["brute force", "math", "number theory"], "dificulty": "2600", "interactive": false}