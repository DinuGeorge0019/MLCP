{"link": "https://codeforces.com//contest/698/problem/D", "problemId": "65779", "problem_idx": "D", "shortId": "698D", "contest_number": "698", "problem_submissions": {"A": [19255240, 19238333, 19233487, 19233309, 19234715, 19232234, 19232460, 19232250, 19232256, 19233295, 19249652, 19232146, 19232208, 19232154, 19232533], "B": [19254561, 19237012, 19237862, 19236769, 19233173, 19239263, 19235681, 19237484, 19241788, 19236331, 19248894, 19236580, 19234441, 19235605, 19239046], "D": [19253572, 19249527, 19248444, 19246796, 19251047, 19251739], "C": [19248258, 19234132, 19243267, 19241700, 19248574, 19235387, 19239629, 19241130, 19239485, 19252239, 19235095, 19245084, 19242311, 19243465, 19252785], "F": [19242723, 19251904, 19301612, 19253678, 19251067, 19249915, 19278249, 19257429, 19255248], "E": [19254153, 19262072, 19250384, 19249636]}, "name": "D. Limak and Shooting Points", "statement": "Bearland is a dangerous place. Limak can t travel on foot. Instead, he\r\nhas magic teleportation stones. Each stone can be used . The -th stone\r\nallows to teleport to a point . Limak can use stones .There are monsters\r\nin Bearland. The -th of them stands at .The given points are pairwise\r\ndistinct.After each teleportation, Limak can shoot an arrow in some\r\ndirection. An arrow will hit the first monster in the chosen direction.\r\nThen, both an arrow and a monster disappear. It s dangerous to stay in\r\none place for long, so Limak can shoot only one arrow from one place.A\r\nmonster should be afraid if it s possible that Limak will hit it. How\r\nmany monsters should be afraid of Limak?\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=1010;\nint k,n,ax[N],ay[N],px[N],py[N];\nvector<PII> vec[N];\nmap<PII,int> hs;\nVI pr[10][N];\nint sht[N],vis[N];\nint gcd(int x,int y) { return x?gcd(y%x,x):y; }\nbool dfs(int rm,VI c) {\n/*\tputs(\"-----state begin-----\");\n\tprintf(\"%d\\n\",rm);\n\tfor (auto v:c) printf(\"%d \",v); puts(\"\");\n\trep(i,0,n) printf(\"%d \",sht[i]); puts(\"\");\n\trep(i,0,k) printf(\"%d \",vis[i]); puts(\"\");\n\tputs(\"-----state end-----\");*/\n\tif (SZ(c)==0) return 1;\n\tif (SZ(c)>rm) return 0;\n\tfor (auto v:c) {\n\t\tsht[v]=1;\n\t\trep(j,0,k) if (!vis[j]&&SZ(pr[j][v])<=7) {\n\t\t\tvis[j]=1;\n\t\t\tbool val=1;\n\t\t\tset<int> d(all(c)); d.erase(v);\n\t\t\tfor (auto pp:pr[j][v]) {\n//\t\t\t\tprintf(\"%d %d %d\\n\",j,v,pp);\n\t\t\t\tif (sht[pp]) {\n\t\t\t\t\tval=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\td.insert(pp);\n\t\t\t\tif (SZ(d)>rm) {\n\t\t\t\t\tval=0; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (val) {\n\t\t\t\tif (dfs(rm-1,VI(all(d)))) return 1;\n\t\t\t}\n\t\t\tvis[j]=0;\n\t\t}\n\t\tsht[v]=0;\n\t}\n\treturn 0;\n}\nint main() {\n\tscanf(\"%d%d\",&k,&n);\n\trep(i,0,k) scanf(\"%d%d\",ax+i,ay+i);\n\trep(i,0,n) scanf(\"%d%d\",px+i,py+i);\n\trep(z,0,k) {\n\t\trep(j,0,n+1) vec[j].clear();\n\t\ths.clear();\n\t\tint tot=0;\n\t\trep(j,0,n) {\n\t\t\tint x=px[j]-ax[z];\n\t\t\tint y=py[j]-ay[z];\n\t\t\tint d=gcd(x,y);\n\t\t\td=abs(d);\n\t\t\tx/=d; y/=d;\n\t\t\tif (!hs.count(mp(x,y))) hs[mp(x,y)]=tot++;\n\t\t\tvec[hs[mp(x,y)]].pb(mp(d,j));\n\t\t}\n\t\trep(i,0,tot) {\n\t\t\tsort(all(vec[i]));\n\t\t\tVI v;\n\t\t\tfor (auto p:vec[i]) {\n\t\t\t\tpr[z][p.se]=v;\n//\t\t\t\tprintf(\"%d \",p.se);\n\t\t\t\tv.pb(p.se);\n\t\t\t}\n//\t\t\tputs(\"\");\n\t\t}\n//\t\tputs(\"----\");\n\t}\n\tint ret=0;\n\trep(i,0,n) {\n\t\tmemset(sht,0,sizeof(sht));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif (dfs(k,VI{i}))ret++;\n\t}\n\tprintf(\"%d\\n\",ret);\n}\n"], "input": "", "output": "", "tags": ["brute force", "geometry", "math"], "dificulty": "2600", "interactive": false}