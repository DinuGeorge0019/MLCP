{"link": "https://codeforces.com//contest/1707/problem/E", "problemId": "1465657", "problem_idx": "E", "shortId": "1707E", "contest_number": "1707", "problem_submissions": {"E": [164603668, 164525375, 164669454, 185901683, 185901618, 185901333, 164563417], "D": [164511528, 164496478, 164493571, 164495095, 164501925, 164506638, 166069487, 164497571, 164507609, 166120309, 166120066, 164509308, 164956360, 164507471, 164489918, 164511025, 164904470, 164514319, 164514325, 164497954, 164519148, 164515594, 164518158, 164516720, 164511294], "B": [164484745, 164460975, 164467918, 164471533, 164466867, 164467580, 164475668, 164466783, 166120253, 166119986, 164469792, 164956306, 164468045, 164461021, 164475290, 164475116, 164472236, 164466401, 164463086, 164472164, 164472283, 164465112, 164479683], "C": [164479539, 164485229, 164482780, 164482216, 164481698, 164485751, 164487589, 164482127, 166120011, 164486694, 164956347, 164484482, 164472573, 164487921, 164484938, 164484181, 164511081, 164483634, 164483996, 164493834, 164499762, 164491460], "A": [164463335, 164470733, 164464634, 164464640, 164458756, 164460631, 164457208, 164456721, 166119954, 164458999, 164956326, 164457788, 164466493, 164459761, 164467279, 164469592, 164460485, 164464829, 164460707, 164471416, 164466775], "F": [164529829, 164530227, 165361670, 165361592, 165360981, 165360617, 164565887, 164565715]}, "name": "E. Replace", "statement": "You are given an integer array a_1,\r\nldots, a_n, where 1\r\nle a_i\r\nle n for all i.There\u2019s a \"replace\" function f which takes a pair of\r\nintegers (l, r), where l\r\nle r, as input and outputs the pair f\r\nbig( (l, r)\r\nbig)=\r\nleft(\r\nmin\r\n{a_l,a_{l+1},\r\nldots,a_r\r\n},\r\n,\r\nmax\r\n{a_l,a_{l+1},\r\nldots,a_r\r\n}\r\nright).Consider repeated calls of this function. That is, from a\r\nstarting pair (l, r) we get f\r\nbig((l, r)\r\nbig), then f\r\nbig(f\r\nbig((l, r)\r\nbig)\r\nbig), then f\r\nbig(f\r\nbig(f\r\nbig((l, r)\r\nbig)\r\nbig)\r\nbig), and so on.Now you need to answer q queries. For the i-th query you\r\nhave two integers l_i and r_i (1\r\nle l_i\r\nle r_i\r\nle n). You must answer the minimum number of times you must apply the\r\n\"replace\" function to the pair (l_i,r_i) to get (1, n), or report that\r\nit is impossible.\r\n", "solutions": ["#include <cstdio>\n#include <algorithm>\n#include <vector>\n\nint Log[100001];\nint n,q,a[100001],L[100001],R[100001];\nstruct ST{\n\tint st[100001][21];\n\tvoid init(){\n\t\tfor(int j=1;(1<<j)<=n;++j)\n\t\t\tfor(int i=1;i+(1<<j)-1<=n;++i)\n\t\t\t\tst[i][j]=std::min(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n\t}\n\tint query(int l,int r){\n\t\tif(l>r)return 0x7f7f7f7f;\n\t\tint k=Log[r-l+1];\n\t\treturn std::min(st[l][k],st[r-(1<<k)+1][k]);\n\t}\n}mn[21],mx[21],amn;\nint f[100001];\nint dis[100001];\nint Q[100001],h,t;\nstd::vector<int>vec[1000001];\nvoid add(int root,int l,int r,int el,int er,int x){\n\tif(el>r||er<l)return;\n\tif(el<=l&&er>=r){\n\t\tvec[root].push_back(x);\n\t\t// printf(\"add %d %d\\n\",root,x);\n\t\treturn;\n\t}\n\tadd(root<<1,l,(l+r)>>1,el,er,x);\n\tadd(root<<1|1,((l+r)>>1)+1,r,el,er,x);\n}\nvoid upd(int root,int l,int r,int e,int d){\n\tfor(int i=0;i<vec[root].size();++i){\n\t\tint u=vec[root][i];\n\t\tif(dis[vec[root][i]]>d){\n\t\t\tdis[u]=d;\n\t\t\tQ[++t]=u;\n\t\t}\n\t}\n\tvec[root].clear();\n\tif(l==r)return;\n\tif((l+r)>>1>=e)upd(root<<1,l,(l+r)>>1,e,d);\n\telse upd(root<<1|1,((l+r)>>1)+1,r,e,d);\n}\nint ans[100001];\nbool vis[100001];\nvoid upd2(int root,int l,int r,int e,int d){\n\tfor(int i=0;i<vec[root].size();++i){\n\t\tint u=vec[root][i];\n\t\tif(ans[vec[root][i]]==-1){\n\t\t\tans[u]=d;\n\t\t\tQ[++t]=u;\n\t\t}\n\t}\n\tvec[root].clear();\n\tif(l==r)return;\n\tif((l+r)>>1>=e)upd2(root<<1,l,(l+r)>>1,e,d);\n\telse upd2(root<<1|1,((l+r)>>1)+1,r,e,d);\n}\nint getans(int l,int r,int st){\n\tfor(int i=20;~i;--i)\n\t\tif(st>=(1<<i)){\n\t\t\tst-=1<<i;\n\t\t\tint ol=l,Or=r;\n\t\t\tl=mn[i].query(ol,Or);\n\t\t\tr=-mx[i].query(ol,Or);\n\t\t}\n\treturn r;\n}\nint g[100001];\nvoid upd3(int root,int l,int r,int e,int d){\n\t// printf(\"%d %d %d\\n\",root,l,r);\n\tfor(int i=0;i<vec[root].size();++i){\n\t\tint u=vec[root][i];\n\t\t// printf(\"%d\\n\",u);\n\t\tif(f[vec[root][i]]==-1){\n\t\t\tf[u]=d+g[u];\n\t\t\tQ[++t]=u;\n\t\t}\n\t}\n\tvec[root].clear();\n\tif(l==r)return;\n\tif((l+r)>>1>=e)upd3(root<<1,l,(l+r)>>1,e,d);\n\telse upd3(root<<1|1,((l+r)>>1)+1,r,e,d);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",a+i);\n\tfor(int i=2;i<=n;++i)Log[i]=Log[i>>1]+1;\n\tfor(int i=1;i<n;++i)L[i]=std::min(a[i],a[i+1]),R[i]=std::max(a[i],a[i+1])-1;\n\tfor(int i=0;(1<<i)<=n;++i){\n\t\tfor(int j=1;j<n;++j){\n\t\t\tif(i==0){\n\t\t\t\tmn[i].st[j][0]=L[j];\n\t\t\t\tmx[i].st[j][0]=-(R[j]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint l=mn[i-1].query(j,j);\n\t\t\t\tint r=-mx[i-1].query(j,j);\n\t\t\t\tmn[i].st[j][0]=mn[i-1].query(l,r);\n\t\t\t\tmx[i].st[j][0]=mx[i-1].query(l,r);\n\t\t\t\t// printf(\"%d %d %d %d %d %d\\n\",j,i,l,r,mn[i-1].query(l,r),-mx[i-1].query(l,r));\n\t\t\t}\n\t\t}\n\t\tmn[i].init();\n\t\tmx[i].init();\n\t}\n\tfor(int i=2;i<n;++i)add(1,1,n,L[i],R[i],i);\n\tfor(int i=1;i<=n;++i)dis[i]=0x7f7f7f7f;\n\tQ[++t]=1;\n\tdis[1]=0;\n\twhile(h<t){\n\t\t++h;\n\t\tupd(1,1,n,Q[h],dis[Q[h]]+1);\n\t}\n\tfor(int i=1;i<n;++i)amn.st[i][0]=dis[i];\n\tamn.init();\n\tfor(int i=1;i<=1000000;++i)vec[i].clear();\n\tfor(int i=1;i<=n;++i)add(1,1,n,a[i],a[i],i);\n\th=t=0;\n\tfor(int i=1;i<=n;++i)ans[i]=-1;\n\tQ[++t]=1;\n\tans[1]=0;\n\twhile(h<t){\n\t\t++h;\n\t\tupd2(1,1,n,Q[h],ans[Q[h]]+1);\n\t}\n\t// for(int i=1;i<=n;++i)printf(\"%d \",ans[i]);putchar('\\n');\n\tfor(int i=1;i<=1000000;++i)vec[i].clear();\n\tfor(int i=1;i<n-1;++i){\n\t\tint L=mn[0].query(1,i),R=-mx[0].query(1,i);\n\t\tint mn=amn.query(L,R);\n\t\tif(mn==0x7f7f7f7f)f[i]=-1;\n\t\telse{\n\t\t\t++mn;\n\t\t\tint now=getans(1,i,mn);\n\t\t\t// printf(\"%d %d %d\\n\",i,now,mn);\n\t\t\tf[i]=-1;\n\t\t\tg[i]=mn;\n\t\t\tadd(1,1,n,now,now,i);\n\t\t}\n\t}\n\th=t=0;\n\tQ[++t]=n-1;\n\tf[n-1]=0;\n\twhile(h<t){\n\t\t++h;\n\t\t// printf(\"%d\\n\",Q[h]);\n\t\tupd3(1,1,n,Q[h],f[Q[h]]);\n\t}\n\t// for(int i=1;i<n;++i)printf(\"%d \",f[i]);putchar('\\n');\n\tfor(int i=1,l,r;i<=q;++i){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(l==r){\n\t\t\tif(n==1)puts(\"0\");\n\t\t\telse puts(\"-1\");\n\t\t}\n\t\telse{\n\t\t\tint mn=amn.query(l,r-1);\n\t\t\t// printf(\"%d\\n\",mn);\n\t\t\tif(mn==0x7f7f7f7f)puts(\"-1\");\n\t\t\telse{\n\t\t\t\tint now=getans(l,r-1,mn);\n\t\t\t\t// printf(\"%d\\n\",now);\n\t\t\t\tif(f[now]==-1)puts(\"-1\");\n\t\t\t\telse printf(\"%d\\n\",mn+f[now]);\n\t\t\t}\n\t\t}\n\t}\n}"], "input": "", "output": "", "tags": ["binary search", "data structures"], "dificulty": "3500", "interactive": false}