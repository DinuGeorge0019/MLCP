{
    "link": "https://codeforces.com//contest/135/problem/A",
    "problemId": "716",
    "problem_idx": "A",
    "shortId": "135A",
    "contest_number": "135",
    "problem_submissions": {
        "C": [
            944684,
            941895,
            941745,
            941532,
            944650,
            945527,
            942928,
            943119,
            942454,
            943300,
            943389,
            941561,
            941623,
            940913,
            942350,
            941874,
            942533
        ],
        "D": [
            941660,
            943291,
            945020,
            944509,
            943932,
            944955,
            945060,
            946515,
            946811,
            946183,
            947267,
            1202616,
            943338,
            947399,
            947531,
            948318
        ],
        "B": [
            938992,
            939256,
            939578,
            939872,
            939430,
            940532,
            941115,
            940491,
            940317,
            940731,
            941548,
            939927,
            939245,
            939945,
            939103,
            940367,
            940260,
            939461
        ],
        "A": [
            937548,
            938377,
            938253,
            937895,
            937980,
            938055,
            938264,
            938797,
            937811,
            937813,
            938237,
            937770,
            937935,
            938511,
            937731,
            937759,
            937846,
            937880
        ],
        "E": [
            949929,
            947660,
            945720,
            950498,
            947878,
            947674
        ]
    },
    "name": "A. Replacement",
    "statement": "Little Petya very much likes arrays consisting of integers, where each\r\nof them is in the range from to , inclusive. Recently he has received\r\none such array as a gift from his mother. Petya didn’t like it at once.\r\nHe decided to choose exactly one element from the array and replace it\r\nwith another integer that also lies in the range from to , inclusive. It\r\nis to replace a number with itself or to change no number at all. After\r\nthe replacement Petya sorted the array by the numbers’ non-decreasing.\r\nNow he wants to know for each position: what minimum number could occupy\r\nit after the replacement and the sorting.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <memory.h>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <set>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\n#define forn( i,n ) for ( int i=0; i<(int)(n); i++ )\n#define foreach( it, a ) for ( __typeof((a).begin()) it = (a).begin(); it != (a).end(); it++ )\n#define pb push_back\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\n\nint n, a[100010];\n\nint main()\n{\n  scanf( \"%d\", &n );\n  forn( i, n ) scanf( \"%d\", &a[i] );\n  sort( a, a+n );\n  if ( a[n-1] == 1 ) a[n-1] = 2; else a[n-1] = 1;\n  sort( a, a+n );\n  forn( i, n ) {\n    if ( i ) printf( \" \" );\n    printf( \"%d\", a[i] );\n  }\n  return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Replacement.json",
    "editorial_link": "https://codeforces.com//blog/entry/3353",
    "editorial": "If the largest number in our array is equal to 1 then let's replace it with 2, otherwise let's replace it with 1. After that let's sort the array and output it. It is easy to see that the array obtained in that way is the one we are looking for.",
    "hint": []
}