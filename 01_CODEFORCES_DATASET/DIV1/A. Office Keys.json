{
    "link": "https://codeforces.com//contest/830/problem/A",
    "problemId": "114242",
    "problem_idx": "A",
    "shortId": "830A",
    "contest_number": "830",
    "problem_submissions": {
        "D": [
            28594647,
            28515632,
            28517135,
            28522787,
            28518930,
            28520136,
            28522520,
            28522651,
            28522385,
            28521029,
            28522173,
            28931336,
            28518846,
            28520792,
            28518779,
            28524006,
            28523790,
            28523582,
            28514145,
            28518855
        ],
        "E": [
            28524957,
            28527227,
            28776493,
            28776475,
            31868930,
            28528205
        ],
        "C": [
            28513312,
            28514258,
            28526449,
            28512880,
            28515933,
            28516073,
            28513800,
            28513739,
            28515967,
            28518241,
            29799228,
            29796538,
            28519327,
            28516487,
            28931386,
            28515691,
            28524374,
            28513589,
            28518503,
            28515655,
            28517033,
            28528492,
            28534968
        ],
        "B": [
            28508342,
            28509379,
            28507817,
            28511318,
            28509260,
            28508546,
            28510695,
            28510689,
            30628707,
            30615033,
            30614998,
            28512995,
            28509425,
            28513558,
            28509785,
            28511054,
            28519867,
            28511755,
            28512387,
            28511965,
            28515860,
            28511432
        ],
        "A": [
            28506433,
            28506738,
            28506322,
            28516214,
            28513064,
            28506171,
            28506332,
            28506901,
            28509003,
            28511010,
            28512266,
            28526236,
            28507144,
            28507136,
            28519649,
            28517536,
            28508069
        ]
    },
    "name": "A. Office Keys",
    "statement": "There are people and keys on a straight line. Every person wants to get\r\nto the office which is located on the line as well. To do that, he needs\r\nto reach some point with a key, take the key and then go to the office.\r\nOnce a key is taken by somebody, it couldn’t be taken by anybody\r\nelse.You are to determine the minimum time needed for all people to get\r\nto the office with keys. Assume that people move a unit distance per\r\nsecond. If two people reach a key at the same time, only one of them can\r\ntake the key. A person can pass through a point with a key without\r\ntaking it.\r\n",
    "solutions": [
        "#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint A[1100],B[2100],n,K,p;\nint check(long long lim){\n\tint now=1;\n\tfor (int i=1;i<=K;i++)\n\t\tif (abs(B[i]-A[now])+abs(B[i]-p)<=lim){\n\t\t\tnow++; if (now>n) return 1;\n\t\t}\n\treturn 0;\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&K,&p);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&A[i]);\n\tfor (int i=1;i<=K;i++) scanf(\"%d\",&B[i]);\n\tsort(A+1,A+n+1);\n\tsort(B+1,B+K+1);\n\tlong long l=0,r=2e9+10,ans=0;\n\twhile (l<r){\n\t\tlong long mid=l+r>>1;\n\t\tif (check(mid)) r=mid,ans=mid; else l=mid+1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "sortings"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Office Keys.json",
    "editorial_link": "https://codeforces.com//blog/entry/53302",
    "editorial": "To solve this problem you need to understand the fact that all keys\r\nwhich people will take is continuous sequence of length in sorted array\r\nof keys.At first letâs sort all keys in increasing order of their\r\npositions. Then brute which of the keys will take a leftmost person. Let\r\nit will be -th key. Then the second person from the left will take the\r\nkey , third and etc. So, we can determine the time after which all\r\npeople can reach the office with keys if the sequence of keys beginning\r\nfrom -th key. Now we need to update the answer with this value and move\r\nto the next position .\r\n",
    "hint": []
}