{"link": "https://codeforces.com//contest/477/problem/D", "problemId": "15281", "problem_idx": "D", "shortId": "477D", "contest_number": "477", "problem_submissions": {"D": [8200841, 8203169, 8197414, 8204683, 8206684, 8205105, 8207492, 8206274, 8205809, 8206768, 8203061, 8205051, 8208476, 8208899], "C": [8191711, 8205302, 8186637, 8208553, 8191198, 8196924, 8190967, 8195898, 8200421, 8196082, 8187240, 8197260, 8188810, 8187634, 8193728], "B": [8186292, 8188466, 8199414, 8185859, 8186714, 8196554, 8188210, 8195812, 8186799, 8186875, 8185236, 8186230], "A": [8186868, 8202132, 8184242, 8184819, 8187501, 8185797, 8186266, 8208304, 8189113, 8188194, 8193817, 8188659, 8184715]}, "name": "D. Dreamoon and Binary", "statement": "Dreamoon saw a large integer written on the ground and wants to print\r\nits binary form out. Dreamoon has accomplished the part of turning into\r\nits binary format. Now he is going to print it in the following\r\nmanner.He has an integer and can only perform the following two\r\noperations in any order for unlimited times each: Print n in binary form\r\nwithout leading zeros, each print will append to the right of previous\r\nprints. Increase n by 1. Let\u2019s define an as a sequence of operations\r\nthat can successfully print binary representation of without leading\r\nzeros and ends with a print operation (i.e. operation 1). Dreamoon wants\r\nto know how many different ideal sequences are there and the length (in\r\noperations) of the shortest ideal sequence.The answers might be large so\r\nplease print them modulo 1000000007 ().Let\u2019s define the string\r\nrepresentation of an ideal sequence as a string of and where the -th\r\ncharacter in the string matches the -th operation performed. Two ideal\r\nsequences are called different if their string representations are\r\ndifferent.\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define SZ(x) ((int)(x).size())\n#define fi first\n#define se second\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=5010;\nstruct node {\n\tnode *s[2]; int cr;\n} pool[N*N/2],*cur=pool,*rt=pool;\nint dp[N][N],dp2[N][N],rk[N][N],ret;\nint tot,n;\nPII ret2;\nchar s[N];\nvoid dfs(node *p) {\n\tp->cr=tot++;\n\tif (p->s[0]) dfs(p->s[0]);\n\tif (p->s[1]) dfs(p->s[1]);\n}\nvoid upd(PII &a,PII b) {\n\tif (b.se<=a.se) a=b;\n\telse {\n\t\tif (a.fi-b.fi>=30||b.fi>=30) a=b;\n\t\telse {\n\t\t\tll s1=0,s2=0;\n\t\t\trep(j,n-a.fi+1,n+1) s1=s1*2+s[j]-'0';\n\t\t\trep(j,n-b.fi+1,n+1) s2=s2*2+s[j]-'0';\n\t\t\tif (s1+a.se>s2+b.se) a=b;\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\trt=cur++;\n\trep(i,1,n+1) {\n\t\tnode *p=rt;\n\t\trep(j,i,n+1) {\n\t\t\tint w=s[j]-'0';\n\t\t\tif (!p->s[w]) p->s[w]=cur++;\n\t\t\tp=p->s[w];\n\t\t\trk[i][j]=p-pool;\n\t\t}\n\t}\n\tdfs(rt);\n\trep(i,1,n+1) rep(j,i,n+1) rk[i][j]=pool[rk[i][j]].cr;\n\tmemset(dp2,0x20,sizeof(dp2));\n\tdp[0][0]=1;\n\trep(i,1,n+1) {\n\t\trep(j,1,i) if (s[i-j+1]=='1') {\n\t\t\tif (i>=2*j) {\n\t\t\t\tif (rk[i-2*j+1][i-j]<=rk[i-j+1][i]) {\n\t\t\t\t\tdp[i][j]=dp[i-j][j];\n\t\t\t\t\tdp2[i][j]=dp2[i-j][j]+1;\n\t\t\t\t} else {\n\t\t\t\t\tdp[i][j]=dp[i-j][j-1];\n\t\t\t\t\tdp2[i][j]=dp2[i-j][j-1]+1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdp[i][j]=dp[i-j][i-j];\n\t\t\t\tdp2[i][j]=dp2[i-j][i-j]+1;\n\t\t\t}\n\t\t}\n\t\tdp[i][i]=1; dp2[i][i]=1;\n\t\tdp2[i][0]=0x20202020;\n\t\trep(j,1,i+1) {\n\t\t\tdp[i][j]=(dp[i][j-1]+dp[i][j])%mod;\n\t\t\tdp2[i][j]=min(dp2[i][j-1],dp2[i][j]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dp[n][n]);\n\tret2=mp(n,1);\n\trep(i,2,n+1) if (s[i]=='1'&&dp2[n][n-i+1]<=n) \n\t\tupd(ret2,mp(n-i+1,dp2[n][n-i+1]));\n\tret=0;\n\trep(i,n-ret2.fi+1,n+1) ret=(ret*2+s[i]-'0')%mod;\n\tret=(ret+ret2.se)%mod;\n\tprintf(\"%d\\n\",ret);\n}\n"], "input": "", "output": "", "tags": ["dp", "strings"], "dificulty": "2700", "interactive": false}