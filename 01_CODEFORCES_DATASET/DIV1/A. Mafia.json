{
    "link": "https://codeforces.com//contest/348/problem/A",
    "problemId": "3551",
    "problem_idx": "A",
    "shortId": "348A",
    "contest_number": "348",
    "problem_submissions": {
        "C": [
            4588342,
            4590159,
            4593135,
            4588912,
            4585853,
            4589632,
            4585524,
            4586580,
            4585883,
            4581239,
            4588365,
            4618235
        ],
        "B": [
            4580097,
            4582356,
            4579942,
            4582963,
            4589468,
            4587659,
            4577354,
            4585315,
            4580326,
            4582274,
            4579794,
            4606814,
            4580277,
            4584510,
            4582530,
            4581233,
            4588037,
            4582260,
            4589608
        ],
        "A": [
            4576873,
            4574641,
            4574230,
            4576431,
            4576985,
            4585961,
            4574860,
            4576105,
            4577005,
            4576961,
            4574398,
            4574642,
            4577358,
            4575644,
            4582569,
            4583556,
            4575731,
            4575526
        ],
        "D": [
            4576020,
            4578123,
            4580839,
            4584931,
            4582728,
            4580253,
            4592562,
            4587185,
            4588035,
            4587652,
            4587737,
            4590796,
            4582015
        ],
        "E": [
            4583454,
            4855776,
            4616595,
            4820950,
            4618329
        ]
    },
    "name": "A. Mafia",
    "statement": "One day friends gathered together to play \"Mafia\". During each round of\r\nthe game some player must be the supervisor and other people take part\r\nin the game. For each person we know in how many rounds he wants to be a\r\nplayer, not the supervisor: the -th person wants to play rounds. What is\r\nthe minimum number of rounds of the \"Mafia\" game they need to play to\r\nlet each person play at least as many rounds as they want?\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\ntypedef long long ll;\n\nint N;\nint a[100010];\n\nbool check(ll R){\n    int i;\n    ll sum = 0;\n    REP(i,N) if(a[i] > R) return false;\n    REP(i,N) sum += R - a[i];\n    return (sum >= R);\n}\n\nint main(void){\n    int i;\n    \n    cin >> N;\n    REP(i,N) scanf(\"%d\", &a[i]);\n    \n    ll low = 0, high = 10000000000ll;\n    while(high-low > 1){\n        ll mid = (low + high) / 2;\n        if(check(mid)) high = mid; else low = mid;\n    }\n    \n    cout << high << endl;\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "math",
        "sortings"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Mafia.json",
    "editorial_link": "https://codeforces.com//blog/entry/9031",
    "editorial": "In the problem you need to find out how many games you need to play in\r\norder to make all people happy. It means that each of them played as\r\nmany games as he wanted. Let the answer be games. Notice that . Then -th\r\nplayer can be game supervisor in games. If we sum up we get it\u00e2\u0080\u0099s the\r\nnumber of games in which players are ready to be supervisor. This number\r\nmust be greater or equal to our answer. Don\u00e2\u0080\u0099t forget about that\r\ncondition: .\r\n"
}