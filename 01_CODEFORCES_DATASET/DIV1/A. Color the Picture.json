{"link": "https://codeforces.com//contest/1710/problem/A", "problemId": "1478267", "problem_idx": "A", "shortId": "1710A", "contest_number": "1710", "problem_submissions": {"D": [165580964, 165583659, 165582423, 165579985, 165578292, 165621030, 165665623, 165863180, 165686266, 165622179, 253472539, 253472055, 253196732], "C": [165561993, 165571937, 165567266, 165564305, 165560493, 165557009, 165565561, 165573369, 167610382, 165564040, 165565611, 165559918, 165863165, 165574164, 165561713, 165562795, 166635016, 165567222, 165574139, 165575303, 165568215, 165580670, 165575504], "B": [165557184, 165556433, 165562218, 165559397, 165550455, 165567723, 165557989, 165562869, 167610352, 165552192, 165580788, 165551441, 165863147, 165568559, 165640205, 165639837, 165621062, 165556086, 165556541, 167747535, 165575476, 165569308, 165567541, 165555460, 165570664, 165584416], "E": [165552045, 165543060, 165549416, 165565765, 165563275, 165541229, 165548123, 165548892, 165559843, 165548838, 165565641, 165863198, 165549459, 165565050, 165564177, 166635025, 165555617, 165553406, 165554497, 165569888, 165555183, 165548602], "A": [165540652, 165547446, 165541424, 165545863, 165540100, 165538811, 165546951, 165544526, 167610720, 167610305, 165540896, 165542843, 165539482, 165863070, 165547951, 165543234, 165543554, 165541413, 165551173, 165542506, 165539602, 165547656, 165544347]}, "name": "A. Color the Picture", "statement": "A picture can be represented as an n\r\ntimes m grid (n rows and m columns) so that each of the n\r\ncdot m cells is colored with one color. You have k pigments of different\r\ncolors. You have a limited amount of each pigment, more precisely you\r\ncan color at most a_i cells with the i-th pigment.A picture is\r\nconsidered beautiful if each cell has 3 neighbors with the same color as\r\nitself.Two cells are considered neighbors if they share an edge. In\r\nother words, for some integers 1\r\nleq x_1,x_2\r\nleq n and 1\r\nleq y_1,y_2\r\nleq m, the cell in the x_1-th row and y_1-th column is a toroidal\r\nneighbor of the cell in the x_2-th row and y_2-th column if one of\r\nfollowing two conditions holds: x_1-x_2\r\nequiv\r\npm1\r\npmod{n} and y_1=y_2, or y_1-y_2\r\nequiv\r\npm1\r\npmod{m} and x_1=x_2. Notice that each cell has exactly 4 toroidal\r\nneighbors. For example, if n=3 and m=4, the toroidal neighbors of the\r\ncell (1, 2) (the cell on the first row and second column) are: (3, 2),\r\n(2, 2), (1, 3), (1, 1). They are shown in gray on the image below: Is it\r\npossible to color all cells with the pigments provided and create a\r\nbeautiful picture?\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst int maxn=111111,mod=998244353;\n#define fi first\n#define se second\n#define MP make_pair\n#define PB push_back\n#define lson o<<1,l,mid\n#define rson o<<1|1,mid+1,r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline ll read(){\n\tchar ch=getchar();ll x=0,f=0;\n\twhile(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\ninline int qpow(int a,int b){\n\tint ans=1;\n\tfor(;b;b>>=1,a=1ll*a*a%mod) if(b&1) ans=1ll*ans*a%mod;\n\treturn ans;\n}\nint n,m,k,a[maxn],b[maxn];\nvoid clear(){\n\tFOR(i,1,k) a[i]=b[i]=0;\n\tn=m=k=0;\n}\nvoid solve(){\n\tn=read();m=read();k=read();\n\tFOR(i,1,k) a[i]=read();\n\tll sn=0,sm=0;\n\t// 0,2~tmp\n\tFOR(i,1,k) b[i]=a[i]/m;\n\tsort(b+1,b+k+1,greater<int>());\n\tll s=0;\n\tFOR(i,1,k){\n\t\tif(b[i]<2) break;\n\t\ts+=b[i]-2;\n\t\tif(2*i<=n && 2*i+s>=n) return puts(\"Yes\"),clear();\n\t}\n\tFOR(i,1,k) b[i]=a[i]/n;\n\tsort(b+1,b+k+1,greater<int>());\n\ts=0;\n\tFOR(i,1,k){\n\t\tif(b[i]<2) break;\n\t\ts+=b[i]-2;\n\t\tif(2*i<=m && 2*i+s>=m) return puts(\"Yes\"),clear();\n\t}\n\tputs(\"No\");\n\tclear();\n}\nint main(){\n\tint T=read();\n\twhile(T--) solve();\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "math"], "dificulty": "1500", "interactive": false}