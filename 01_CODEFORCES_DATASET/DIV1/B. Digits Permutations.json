{
    "link": "https://codeforces.com//contest/138/problem/B",
    "problemId": "733",
    "problem_idx": "B",
    "shortId": "138B",
    "contest_number": "138",
    "problem_submissions": {
        "D": [
            980256,
            979660,
            979865,
            981459,
            981782,
            980490,
            980859,
            981836,
            980983,
            981220,
            982093
        ],
        "C": [
            977164,
            977134,
            978135,
            978148,
            979334,
            977388,
            977560,
            980285,
            976404,
            978363,
            977955,
            977707,
            978190,
            978555,
            976840,
            982255,
            978719
        ],
        "B": [
            976212,
            977359,
            976881,
            978412,
            978151,
            981022,
            984515,
            979243,
            978060,
            990834,
            976636,
            980026,
            976613,
            976894,
            979990,
            982256,
            976694
        ],
        "A": [
            975301,
            975042,
            975181,
            979365,
            975615,
            980600,
            975885,
            975355,
            975294,
            974907,
            975053,
            982540,
            975212,
            975316,
            978556
        ],
        "E": [
            984982
        ]
    },
    "name": "B. Digits Permutations",
    "statement": "Andrey\u2019s favourite number is . Andrey\u2019s friends gave him two identical\r\nnumbers as a New Year present. He hung them on a wall and watched them\r\nadoringly.Then Andrey got bored from looking at the same number and he\r\nstarted to swap digits first in one, then in the other number, then\r\nagain in the first number and so on (arbitrary number of changes could\r\nbe made in each number). At some point it turned out that if we sum the\r\nresulting numbers, then the number of zeroes with which the sum will end\r\nwould be maximum among the possible variants of digit permutations in\r\nthose numbers.Given number , can you find the two digit permutations\r\nthat have this property?\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <memory.h>\n#include <string>\n#include <set>\nusing namespace std;\n#define forn(i,n) for(int i=0;i<(n);++i)\n#define forv(i,v) forn(i,(int)(v).size())\n#define iinf 1000000000\n#define all(v) (v).begin(),(v).end()\n#define pb push_back\n#define mp make_pair\n#define lng long long\n#define eps 1e-8\n#define SQ(a) ((a)*(a))\n#define PI 3.14159265359\n#define index asdindex\n\n\n\nint main(){\n#ifdef __ASD__\n\tfreopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\n#endif\n\n\tios_base::sync_with_stdio(false);\n\n\tstring s;\n\tcin>>s;\n\tint n=s.length();\n\tvector<int> c(10,0);\n\tforn(i,n){\n\t\t++c[s[i]-'0'];\n\t}\n\tsort(all(s));\n\treverse(all(s));\n\tpair<int,pair<string,string> > res(c[0],mp(s,s));\n\tfor(int a=1;a<=9;++a){\n\t\tif(!c[a]||!c[10-a])\n\t\t\tcontinue;\n\t\tint r=1;\n\t\tvector<int> c1=c,c2=c;\n\t\t--c1[a];\n\t\t--c2[10-a];\n\t\tstring r1,r2;\n\t\tr1+='0'+a;\n\t\tr2+='0'+10-a;\n\t\tforn(i,10){\n\t\t\tint t=min(c1[i],c2[9-i]);\n\t\t\tr+=t;\n\t\t\tc1[i]-=t;\n\t\t\tc2[9-i]-=t;\n\t\t\tforn(qqq,t){\n\t\t\t\tr1+='0'+i;\n\t\t\t\tr2+='0'+9-i;\n\t\t\t}\n\t\t}\n\t\tint t=min(c1[0],c2[0]);\n\t\tc1[0]-=t;\n\t\tc2[0]-=t;\n\t\tr+=t;\n\t\tforn(p,10){\n\t\t\tforn(q,c1[p]){\n\t\t\t\tr1+='0'+p;\n\t\t\t}\n\t\t\tforn(q,c2[p]){\n\t\t\t\tr2+='0'+p;\n\t\t\t}\n\t\t}\n\t\treverse(all(r1));\n\t\treverse(all(r2));\n\t\tforn(qqq,t){\n\t\t\tr1+='0';\n\t\t\tr2+='0';\n\t\t}\n\t\tif(r1.length()!=n||r2.length()!=n)\n\t\t\texit(332);\n\t\tres=max(res,mp(r,mp(r1,r2)));\n\t}\n\tcout<<res.second.first<<'\\n'<<res.second.second;\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Digits Permutations.json",
    "editorial_link": "https://codeforces.com//blog/entry/3462",
    "editorial": "It turned out to be surprisingly hard, possibly because of lots of cases\r\nto think of. How to determine the number of zeros at the end of the sum\r\nof two numbers? First we skip all the positions from the end where both\r\nnumbers have zeros. If on the next position the sum of digits is not 10,\r\nthat\u00e2\u0080\u0099s it. If it is, we go on while the sum of digits is 9. Now we take\r\ntwo transitions of digits in N. Let\u00e2\u0080\u0099s fix the number of common zeros at\r\nthe end of both transitions. If, moreover, we fix the digits that sum up\r\nto 10 at the next positions, we can find the maximal number of zeros to\r\nget with the remaining digits as , where are the quantities of every\r\nremaining digit in the first transition after taking out the last zeroes\r\nand the digit for the 10-sum, and are the same numbers for second\r\ntransition (initially these quantities are equal to quantities of digits\r\nin N). So, if we store and , and then run through the numbers of common\r\nzeros at the end and the 10-sum digits, we determine the maximal zeros\r\nnumber (and configuration giving that answer) in O(10 * 10 * N) = O(N)\r\ntime. Getting the transitions now is easy - we build them from right to\r\nleft according to the saved answer. The most common mistake was to think\r\nthat maximal number of zeros at the end gives the maximal answer. It was\r\ndisproved by 4-th pretest - 1099. As we can see, the optimal\r\nconfiguration is 1901 + 1099, giving three zeros, which cannot be\r\nachieved by placing both zeros at the ends.\r\n"
}