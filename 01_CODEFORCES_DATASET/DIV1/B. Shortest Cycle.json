{
    "link": "https://codeforces.com//contest/1205/problem/B",
    "problemId": "390598",
    "problem_idx": "B",
    "shortId": "1205B",
    "contest_number": "1205",
    "problem_submissions": {
        "B": [
            59042855,
            59008277,
            59009392,
            59009099,
            59017750,
            59011582,
            59017246,
            59016172,
            59010044,
            59012507,
            59016410,
            59014372,
            59018459,
            59016311,
            59014609,
            59017774,
            59016256,
            59018790,
            59017251,
            59019103
        ],
        "F": [
            59040509,
            83365787,
            73837920,
            59054768,
            59706336,
            59497174,
            59084173,
            59131512
        ],
        "E": [
            59035128,
            59036458,
            59034704,
            59041033,
            59039150,
            59045402,
            59080765,
            59062429
        ],
        "D": [
            59016188,
            59026535,
            59028832,
            59032222,
            59023841,
            59032667,
            59050800,
            59047976,
            59037746,
            59038899,
            59036700,
            59037946,
            59034393,
            59042000,
            59040164,
            59037017,
            59039734,
            59041481,
            59041292,
            59040370,
            59040328
        ],
        "A": [
            59004226,
            59002142,
            59002328,
            59003907,
            59002592,
            59003675,
            59003063,
            59008409,
            59005394,
            59004820,
            59012388,
            59002589,
            59006476,
            59006648,
            59014700,
            59002817,
            59005001,
            59008957,
            59004360,
            59003394
        ],
        "C": [
            59022089,
            59020944,
            59025032,
            59033727,
            59026494,
            59026517,
            59028041,
            59025931,
            59027756,
            59033147,
            59024700,
            59031289,
            59032853,
            59030231,
            59031302,
            59030790,
            59030100,
            59029442,
            59031718
        ]
    },
    "name": "B. Shortest Cycle",
    "statement": "You are given n integer numbers a_1, a_2,\r\ndots, a_n. Consider graph on n nodes, in which nodes i, j (i\r\nneq j) are connected if and only if, a_i AND a_j\r\nneq 0, where AND denotes the bitwise AND operation.Find the length of\r\nthe shortest cycle in this graph or determine that it doesn\u2019t have\r\ncycles at all.\r\n",
    "solutions": [
        "#include <iostream>\n#include <stdio.h>\n#include <math.h>\n#include <string.h>\n#include <time.h>\n#include <stdlib.h>\n#include <string>\n#include <bitset>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <algorithm>\n#include <sstream>\n#include <stack>\n#include <iomanip>\n#include <assert.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef double ld;\ntypedef vector<int> vi;\n#define fi first\n#define se second\n#define fe first\n#define FO(x) {freopen(#x\".in\",\"r\",stdin);freopen(#x\".out\",\"w\",stdout);}\n#define Edg int M=0,fst[SZ],vb[SZ],nxt[SZ];void ad_de(int a,int b){++M;nxt[M]=fst[a];fst[a]=M;vb[M]=b;}void adde(int a,int b){ad_de(a,b);ad_de(b,a);}\n#define Edgc int M=0,fst[SZ],vb[SZ],nxt[SZ],vc[SZ];void ad_de(int a,int b,int c){++M;nxt[M]=fst[a];fst[a]=M;vb[M]=b;vc[M]=c;}void adde(int a,int b,int c){ad_de(a,b,c);ad_de(b,a,c);}\n#define es(x,e) (int e=fst[x];e;e=nxt[e])\n#define esb(x,e,b) (int e=fst[x],b=vb[e];e;e=nxt[e],b=vb[e])\n#define SZ 666666\nint n; ll a[SZ];\nint dis[555][555],aa[555][555];\nint main()\n{\n\tmemset(dis,127/4,sizeof dis);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%lld\",a+i);\n\t\tif(!a[i])\n\t\t{\n\t\t\t--n; --i;\n\t\t\tcontinue;\n\t\t}\n\t}\n\tif(n>3*64)\n\t{\n\t\tputs(\"3\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=i+1;j<=n;++j)\n\t\t\tif((a[i]&a[j])) dis[i][j]=dis[j][i]=1;\n\tmemcpy(aa,dis,sizeof aa);\n\tint ans=2e9;\n\tfor(int k=1;k<=n;++k)\n\t{\n\t\tfor(int i=1;i<k;++i)\n\t\t\tfor(int j=i+1;j<k;++j)\n\t\t\t\tans=min(ans,aa[i][k]+aa[k][j]+dis[i][j]);\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n\t}\n\tif(ans>1e3) ans=-1;\n\tprintf(\"%d\\n\",ans);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks",
        "brute force",
        "graphs",
        "shortest paths"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Shortest Cycle.json",
    "editorial_link": "https://codeforces.com/blog/entry/69158",
    "editorial": "The most important thing in this task is to notice that if any bit is\r\ncontained at least numbers, then they will form a cycle of length , and\r\nthe answer is .Suppose now that each bit is in no more than two numbers.\r\nIt follows that each bit can be shared by at most one pair of numbers.\r\nFrom here we get that in the graph there are no more than edges. Then in\r\nit you can find the shortest cycle in : for each edge between the\r\nvertices and we will try to remove it and find the shortest distance\r\nbetween the vertices , in the resulting graph. If each time and turned\r\nout to be in different components, then there is no cycle in the graph,\r\notherwise its length is + the minimal of the distances found.Asymptotics\r\n.\r\n"
}