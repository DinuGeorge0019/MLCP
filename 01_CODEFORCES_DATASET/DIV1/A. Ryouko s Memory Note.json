{"link": "https://codeforces.com//contest/434/problem/A", "problemId": "9712", "problem_idx": "A", "shortId": "434A", "contest_number": "434", "problem_submissions": {"D": [6699538, 6706635, 6706622, 6706591, 6706589, 6795823, 6704699, 6708335, 6707919], "C": [6697907, 6699177, 6698487, 6699311, 6699392, 6797515, 6797483, 6718935, 6697269, 6700102, 6699851, 6696039, 6700493, 6700403, 6700591, 6698358, 6698258, 6700561, 6698389], "B": [6695587, 6696287, 6694622, 6695678, 6696514, 6695797, 6699364, 6695860, 6695864, 6699676, 6699377, 6696715, 6697097, 6695263, 6696899, 6700084, 6700621, 6697368, 6695731], "A": [6692446, 6694191, 6692438, 6693456, 6692853, 6692909, 6693769, 6692709, 6691931, 6694014, 6700765, 6693088, 6694404, 6692737, 6695761, 6695148, 6698289, 6693859, 6708768], "E": [6711897]}, "name": "A. Ryouko s Memory Note", "statement": "Ryouko is an extremely forgetful girl, she could even forget something\r\nthat has just happened. So in order to remember, she takes a notebook\r\nwith her, called . She writes what she sees and what she hears on the\r\nnotebook, and the notebook became her memory.Though Ryouko is forgetful,\r\nshe is also born with superb analyzing abilities. However, analyzing\r\ndepends greatly on gathered information, in other words, memory. So she\r\nhas to shuffle through her notebook whenever she needs to analyze, which\r\nis tough work.Ryouko\u2019s notebook consists of pages, numbered from 1 to .\r\nTo make life (and this problem) easier, we consider that to turn from\r\npage to page , pages should be turned. During analyzing, Ryouko needs\r\npieces of information, the -th piece of information is on page .\r\nInformation must be read from the notebook in order, so the total number\r\nof pages that Ryouko needs to turn is .Ryouko wants to decrease the\r\nnumber of pages that need to be turned. In order to achieve this, she\r\ncan merge two pages of her notebook. If Ryouko merges page to page , she\r\nwould copy all the information on page to , and consequently, all\r\nelements in sequence that was would become . Note that can be equal to ,\r\nin which case no changes take place.Please tell Ryouko the minimum\r\nnumber of pages that she needs to turn. Note she can apply the described\r\noperation at most once before the reading. Note that the answer can\r\nexceed 32-bit integers.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <vector>\nusing namespace std;\nconst int MAX_N = int(1e5) + 10;\nint n, m, a[MAX_N];\nvector<int> near[MAX_N];\n\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; ++i) {\n\t\tcin >> a[i];\n\t\tif (i > 0 && a[i] != a[i - 1]) {\n\t\t\tnear[a[i]].push_back(a[i - 1]);\n\t\t\tnear[a[i - 1]].push_back(a[i]);\n\t\t}\n\t}\n\tlong long sum = 0, ans;\n\tfor (int i = 1; i < m; ++i) {\n\t\tsum += abs(a[i] - a[i - 1]);\n\t}\n\tans = sum;\n//\tcout << ans << endl;\n\n\tfor (int it = 1; it <= n; ++it) {\n\t\t//change it\n\t\tvector<int> vec = near[it];\n\t\tif (vec.empty())\n\t\t\tcontinue;\n\t\tsort(vec.begin(), vec.end());\n\t\tint x = vec[vec.size() / 2];\n\t\tlong long ret = sum;\n\t\tfor (int i = 0; i < vec.size(); ++i) {\n\t\t\tret += abs(vec[i] - x) - abs(vec[i] - it);\n\t\t}\n\t\tans = min(ans, ret);\n\t}\n\tcout << ans << endl;\n}\n"], "input": "", "output": "", "tags": ["math", "sortings"], "dificulty": "1800", "interactive": false}