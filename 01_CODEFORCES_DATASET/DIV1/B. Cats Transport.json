{"link": "https://codeforces.com//contest/311/problem/B", "problemId": "3069", "problem_idx": "B", "shortId": "311B", "contest_number": "311", "problem_submissions": {"D": [3779247, 3776962, 3778512, 3778294, 7187096, 3778596, 3778655, 3779595, 3782423, 3776852, 3786173, 3776817, 3777538, 3777530, 3777687, 3778930, 3778715, 3781988, 3781985, 3780451, 3778559], "C": [3778239, 3780359, 3778509, 3777340, 3780975], "A": [3773410, 3772638, 3772385, 3772049, 3772839, 3772053, 3772233, 3773330, 3772046, 3773286, 3772169, 3772655, 3772327, 3772092, 3778118, 3777958, 3772079, 3772167, 3778901], "B": [3779559, 3776732, 3776480, 3777959, 3776688, 3778706, 3777594, 3778546], "E": [3786260, 3786243, 3779354, 3780972, 3779369]}, "name": "B. Cats Transport", "statement": "Zxr960115 is owner of a large farm. He feeds cute cats and employs\r\nfeeders. There\u2019s a straight road across the farm and hills along the\r\nroad, numbered from 1 to from left to right. The distance between hill\r\nand is meters. The feeders live in hill 1.One day, the cats went out to\r\nplay. Cat went on a trip to hill , finished its trip at time , and then\r\nwaited at hill for a feeder. The feeders must take all the cats. Each\r\nfeeder goes straightly from hill 1 to without waiting at a hill and\r\ntakes all the cats at each hill away. Feeders walk at a speed of 1 meter\r\nper unit time and are strong enough to take as many cats as they\r\nwant.For example, suppose we have two hills and one cat that finished\r\nits trip at time 3 at hill 2 . Then if the feeder leaves hill 1 at time\r\n2 or at time 3, he can take this cat, but if he leaves hill 1 at time 1\r\nhe can\u2019t take it. If the feeder leaves hill 1 at time 2, the cat waits\r\nhim for 0 time units, if the feeder leaves hill 1 at time 3, the cat\r\nwaits him for 1 time units.Your task is to schedule the time leaving\r\nfrom hill 1 for each feeder so that the sum of the waiting time of all\r\ncats is minimized.\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,p,x,h,t,now,last,d[100010],ti[100010],q[100010];\nlong long f[100010][2],sum[100010];\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&p);\n    for(int i=2;i<=n;++i){\n        scanf(\"%d\",&d[i]);\n        d[i]+=d[i-1];\n    }\n    for(int i=1;i<=m;++i){\n        scanf(\"%d%d\",&x,&ti[i]);\n        ti[i]-=d[x];\n        sum[i]=sum[i-1]+ti[i];\n    }\n    sort(ti+1,ti+m+1);\n    memset(f,63,sizeof(f));\n    f[0][0]=0;\n    for(int e=1;e<=p;++e){\n        last=now;now^=1;\n        h=t=0;q[t]=0; \n        for(int i=1;i<=m;++i){\n            while(h<t&&f[q[h+1]][last]+sum[q[h+1]]-f[q[h]][last]-sum[q[h]]<=(long long)ti[i]*(q[h+1]-q[h]))++h;\n            f[i][now]=f[q[h]][last]+(long long)ti[i]*(i-q[h])-(sum[i]-sum[q[h]]);\n            while(h<t&&(f[q[t]][last]+sum[q[t]]-f[q[t-1]][last]-sum[q[t-1]])/(double)(q[t]-q[t-1]) > (f[i][last]+sum[i]-f[q[t]][last]-sum[q[t]])/(double)(i-q[t]) )--t;\n            q[++t]=i;\n        }\n    }\n    printf(\"%I64d\\n\",f[m][now]);\n    return 0;\n} \n"], "input": "", "output": "", "tags": ["data structures", "dp"], "dificulty": "2400", "interactive": false}