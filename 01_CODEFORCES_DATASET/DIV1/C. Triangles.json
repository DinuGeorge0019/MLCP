{
    "link": "https://codeforces.com//contest/229/problem/C",
    "problemId": "1892",
    "problem_idx": "C",
    "shortId": "229C",
    "contest_number": "229",
    "problem_submissions": {
        "E": [
            2282826,
            2281727,
            2285054,
            2283563,
            2285346,
            2285087,
            2285039,
            2284707,
            2406707,
            2284567,
            2285340,
            2286716
        ],
        "D": [
            2279442,
            2279718,
            2280046,
            2280344,
            2282950,
            2281962,
            2282776,
            2282602,
            2281974,
            2283282,
            2282070,
            2283551,
            2282480,
            2282427,
            2282188,
            2281610,
            2283171
        ],
        "B": [
            2276814,
            2277758,
            2276080,
            2280606,
            2279078,
            2281037,
            2280028,
            2279270,
            2278615,
            2280162,
            2280493,
            2279459,
            2280601,
            2279970,
            2281238
        ],
        "C": [
            2274858,
            2273646,
            2277243,
            2277231,
            2276597,
            2280255,
            2276975,
            2277162,
            2279947,
            2277171,
            2276063,
            2277931,
            2277827,
            2275487,
            2283199,
            2278070
        ],
        "A": [
            2274032,
            2286414,
            2274348,
            2275349,
            2275192,
            2274716,
            2276132,
            2302218,
            2286476,
            2274187,
            2274224,
            2275364,
            2275231,
            2276851,
            2274395,
            2275579
        ]
    },
    "name": "C. Triangles",
    "statement": "Alice and Bob don\u2019t play games anymore. Now they study properties of all\r\nsorts of graphs together. Alice invented the following task: she takes a\r\ncomplete undirected graph with vertices, chooses some edges and keeps\r\nthem. Bob gets the remaining edges.Alice and Bob are fond of \"triangles\"\r\nin graphs, that is, cycles of length 3. That\u2019s why they wonder: what\r\ntotal number of triangles is there in the two graphs formed by Alice and\r\nBob\u2019s edges, correspondingly?\r\n",
    "solutions": [
        "/*\n * c.cpp\n *\n *  Created on: 2012-10-1\n *      Author: mac\n */\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <climits>\n#include <numeric>\n#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)\n#define REP(i,n) for(int i=0;i<n;++i)\nusing namespace std;\n\nconst int MAX_N = 1000000 + 10;\nint cnt[MAX_N];\ntypedef long long int64;\n\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; ++i) {\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\t\t--a, --b;\n\t\tcnt[a]++;\n\t\tcnt[b]++;\n\t}\n\tlong long tot = 1LL * n * (n - 1) * (n - 2) / 6;\n\tlong long bad = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tbad += 1LL * cnt[i] * (n - 1 - cnt[i]);\n\t}\n\tcout << tot - bad / 2 << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "graphs",
        "math"
    ],
    "dificulty": "1900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Triangles.json",
    "editorial_link": "https://codeforces.com//blog/entry/5437",
    "editorial": "Let\u00e2\u0080\u0099s call Alice\u00e2\u0080\u0099s edges simply edges, and Bob\u00e2\u0080\u0099s edges the antiedges.\r\nFor each edge pair of the initial complete graph that pass through the\r\nsame vertices, assign a weight: for each pair of edges the weight +2,\r\nfor each pair of edge and antiedge 1 and for each pair of antiedges +2.\r\nNow calculate the sum of all the weights. Observe that each Alice\u00e2\u0080\u0099s or\r\nBob\u00e2\u0080\u0099s triangle adds exactly +6 to the sum, and each combination of three\r\nvertices that do not form the triangle in any of the two graphs adds\r\nexactly 0 to the sum. The sum itself is calculated by iterating over all\r\nvertices and adding the total weight of all the edge pairs that pass\r\nthrough this vertex. If the degree of the vertex is , then we should add\r\nto the final sum. Since each triangle adds +6 to the sum, then the\r\nanswer is equal to the sum divided by 6. The complexity of the solution\r\nis . Sample solution: http://pastie.org/4897512 (archived copy)\r\n"
}