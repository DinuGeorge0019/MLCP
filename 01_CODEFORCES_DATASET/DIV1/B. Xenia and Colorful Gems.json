{
    "link": "https://codeforces.com//contest/1336/problem/B",
    "problemId": "594566",
    "problem_idx": "B",
    "shortId": "1336B",
    "contest_number": "1336",
    "problem_submissions": {
        "D": [
            76886677,
            76883955,
            76872368,
            76882178,
            76894871,
            76894177,
            76885532,
            76907882,
            77033594,
            77091883,
            76900082,
            76884934,
            76874617
        ],
        "A": [
            76864054,
            76808839,
            76828187,
            76809546,
            76814169,
            76823336,
            76827670,
            76836840,
            76814633,
            76809091,
            76816264,
            76813939,
            76811729,
            76811390,
            76834705,
            76826600,
            76815368,
            76837049,
            76817310
        ],
        "B": [
            76860488,
            76819320,
            76814288,
            76825429,
            76828812,
            76838781,
            76838525,
            76843572,
            76826054,
            76817907,
            76825620,
            76826257,
            76821471,
            76823111,
            76831291,
            76821337,
            76838685,
            76839113,
            76827505
        ],
        "C": [
            76854725,
            76829511,
            76835542,
            76846764,
            76855809,
            76854630,
            76858132,
            76850152,
            76839221,
            76831744,
            76838549,
            76834558,
            76833263,
            76835970,
            76841416,
            76837215,
            76859411,
            76818388,
            76844588
        ],
        "E1": [
            76850288,
            76855475,
            76852735,
            76883081,
            76892755,
            76881482,
            76888504,
            76867895,
            76895876,
            76859814,
            76851085,
            76862051,
            77146034,
            76864099,
            76864337,
            76853452,
            150818764,
            150818693,
            76914981,
            76914599,
            76858346,
            76859234
        ],
        "E2": [
            76849352,
            85264213,
            76894287,
            77317433,
            76903834,
            77032081,
            227735667,
            77145907
        ],
        "F": [
            76895069,
            142907140,
            92908333,
            92907865,
            76904132,
            77029817,
            77028666,
            77028475,
            76902682,
            76902541
        ]
    },
    "name": "B. Xenia and Colorful Gems",
    "statement": "Xenia is a girl being born a noble. Due to the inflexibility and\r\nharshness of her family, Xenia has to find some ways to amuse herself.\r\nRecently Xenia has bought n_r red gems, n_g green gems and n_b blue\r\ngems. Each of the gems has a weight.Now, she is going to pick three\r\ngems.Xenia loves colorful things, so she will pick exactly one gem of\r\neach color.Xenia loves balance, so she will try to pick gems with little\r\ndifference in weight.Specifically, supposing the weights of the picked\r\ngems are x, y and z, Xenia wants to find the minimum value of\r\n(x-y)^2+(y-z)^2+(z-x)^2. As her dear friend, can you help her?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nusing i64 = long long;\n\nconst int maxN = 112345;\nvector<int> p[3];\nvoid solve()\n{\n\tint a, b, c;\n\tscanf(\"%d%d%d\", &a, &b, &c);\n\tfor (int i = 0; i < 3; i++)\n\t\tp[i].clear();\n\tfor (int i = 0; i < a; i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tp[0].push_back(x);\n\t}\n\tfor (int i = 0; i < b; i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tp[1].push_back(x);\n\t}\n\tfor (int i = 0; i < c; i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tp[2].push_back(x);\n\t}\n\tfor (int i = 0; i < 3; i++)\n\t\tsort(p[i].begin(), p[i].end());\n\ti64 ans = 1ll << 62;\n\tfor (int x = 0; x < 3; x++)\n\t\tfor (int y = 0; y < 3; y++)\n\t\t\tfor (int z = 0; z < 3; z++)\n\t\t\t\tif (x != y && y != z && x != z)\n\t\t\t\t{\n\t\t\t\t\tfor (auto u : p[x])\n\t\t\t\t\t{\n\t\t\t\t\t\tauto itv = lower_bound(p[y].begin(), p[y].end(), u);\n\t\t\t\t\t\tif (itv == p[y].end())\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tauto itw = lower_bound(p[z].begin(), p[z].end(), (*itv + u + 1) / 2);\n\t\t\t\t\t\tauto sqr = [&](i64 x) { return x * x; };\n\t\t\t\t\t\tif (itw != p[z].end())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tans = min(ans, sqr(u - *itv) + sqr(u - *itw) + sqr(*itv - *itw));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (itw != p[z].begin())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t--itw;\n\t\t\t\t\t\t\tans = min(ans, sqr(u - *itv) + sqr(u - *itw) + sqr(*itv - *itw));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\tprintf(\"%lld\\n\", ans);\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int tc = 0; tc < t; tc++)\n\t{\n\t\tsolve();\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Xenia and Colorful Gems.json",
    "editorial_link": "https://codeforces.com//blog/entry/76099",
    "editorial": "First, let\u00e2\u0080\u0099s assume that there exists an optimum solution in which we\r\nchoose , and satisfying .Here\u00e2\u0080\u0099s a lemma:When is fixed, is the maximum\r\none that , and is the minimum one that .It\u00e2\u0080\u0099s easy to prove: no matter\r\nwhat is, the bigger is, the smaller and are; for it\u00e2\u0080\u0099s similar.So, if we\r\nknow that in one of the optimum solutions, , we can sort each array at\r\nfirst and then find and by binary search or maintaining some pointers\r\nwhile enumerating .Back to the original problem without , we can\r\nenumerate the six possible situations: , , , , and . Find the optimum\r\nsolution in each situation and the optimum one among them is the answer.\r\n"
}