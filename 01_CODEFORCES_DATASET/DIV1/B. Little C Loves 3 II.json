{
    "link": "https://codeforces.com//contest/1034/problem/B",
    "problemId": "222951",
    "problem_idx": "B",
    "shortId": "1034B",
    "contest_number": "1034",
    "problem_submissions": {
        "E": [
            43279785,
            43212413,
            43229978,
            43294521,
            43208696,
            43220993,
            84865485,
            43443164,
            43443120,
            43443018,
            43216190
        ],
        "D": [
            43250433,
            43221298,
            43215071,
            43392001,
            47789625
        ],
        "B": [
            43205891,
            43195267,
            43193943,
            43195031,
            43196760,
            43197157,
            43191231,
            43195573,
            43213572,
            43195172,
            43208923,
            43193201,
            43202069,
            43195780,
            43197206,
            43192315,
            43197387,
            43207849,
            43201323,
            43198501
        ],
        "C": [
            43201825,
            43200815,
            43202708,
            43202190,
            43201916,
            43202773,
            43198929,
            43200220,
            43198793,
            43202127,
            43201792,
            43209061,
            43203518,
            43208155,
            43197731,
            43206185,
            43207426
        ],
        "A": [
            43186061,
            43219248,
            43187942,
            43187082,
            43188745,
            43197770,
            43193324,
            43188028,
            43186801,
            43186422,
            43193256,
            43186588,
            43188667,
            43226991,
            43226928,
            43187156,
            43187973,
            43187877,
            43186866,
            43188894,
            43192595
        ]
    },
    "name": "B. Little C Loves 3 II",
    "statement": "Little C loves number very much. He loves all things about it.Now he is\r\nplaying a game on a chessboard of size n\r\ntimes m. The cell in the x-th row and in the y-th column is called\r\n(x,y). Initially, The chessboard is empty. Each time, he places two\r\nchessmen on two different empty cells, the Manhattan distance between\r\nwhich is exactly 3. The Manhattan distance between two cells (x_i,y_i)\r\nand (x_j,y_j) is defined as |x_i-x_j|+|y_i-y_j|.He want to place as many\r\nchessmen as possible on the chessboard. Please help him find the maximum\r\nnumber of chessmen he can place.\r\n",
    "solutions": [
        "#include<cstdio>\nlong long calc(int n,int m){\n\tif(n==1)return m/6*6+(m%6<3?0:m%6-3)*2;\n\tif(n==2){\n\t\tif(m==2)return 0;\n\t\tif(m==3||m==7)return 1ll*n*m-2;\n\t\treturn 1ll*n*m;\n\t}\n\tif(n%2==1&&m%2==1)return 1ll*n*m-1;\n\treturn 1ll*n*m;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tif(n>m){int t=n;n=m;m=t;}\n\tprintf(\"%lld\\n\",calc(n,m));\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "graph matchings"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Little C Loves 3 II.json",
    "editorial_link": "https://codeforces.com//blog/entry/61993",
    "editorial": "Following the rules in the problem, the , , and grids full of\nchessmen can be easily constructed. How to construct?Let the number\ndenote the time when the chessman placed.Grids of :1 2 3 1 2 3Grids of\n:1 2 3 43 4 1 2Grids of :1 3 2 1 52 4 5 3 4Grids of :1 3 4 25 2 1 56 4 3\n6Assume that . Consider the following cases:If , obviously the answer is\n.If , only the , and grids cannot be completely constructed. The others\ncan be constructed by using the , and (constructed by two grids) girds.\nHow to prove that they cannot be constructed?You can write a brute force\nor enumerate all the possibilities by yourself. If you consider each\ngrid from left to right and choose the grid it matched with, there are\nonly several possible conditions. So I think it can be proved in several\nminutes :)If , the following things we can consider:We know that using\nthe and grids we can construct the () grid, and using several grids we\ncan construct the () grid, so using the and grids we can construct the\ngrid while and is an even number.Therefore we only need to consider the\ngrid that and are both odd numbers.Since is an odd integer, we can place\nchessmen at most, so we try to reach the maximum.Then we can easily\nconstruct the , and grids that have only one empty grid. According to\nthe above-mentioned conclusions, any grids can be reduce to one of the\nthree grids by using some ( or is even) grids. The maximum is reached.\nHow to construct?Grids of :1 2 33 0 44 1 2Grids of :1 3 4 6 72 5 1 0 53\n4 2 7 6Grids of :1 2 3 1 23 4 5 6 45 6 7 8 910 8 9 12 711 12 10 11 0It\nseems that the chessboard is a little bit big but you can match them\narbitrarily and get correct solution with a big possibility :)\n",
    "hint": []
}