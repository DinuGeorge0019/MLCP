{
    "link": "https://codeforces.com//contest/274/problem/A",
    "problemId": "2641",
    "problem_idx": "A",
    "shortId": "274A",
    "contest_number": "274",
    "problem_submissions": {
        "C": [
            3158978,
            3161367,
            3160459,
            3161088,
            3162848,
            3162836,
            3165392,
            3165808
        ],
        "D": [
            3157146,
            3154578,
            3158626,
            3159674,
            3155066,
            3154610,
            3154494,
            3162878,
            3155274,
            3154799,
            3156202,
            3154900,
            3156390,
            3156684,
            3157059,
            3155641,
            3157406,
            3158027,
            3156972,
            3156358
        ],
        "B": [
            3152846,
            3152029,
            3153572,
            3152338,
            3153369,
            3152405,
            3153123,
            3152132,
            3152478,
            3153001,
            3152618,
            3151871,
            3152600,
            3152514,
            3153029,
            3154367,
            3152641,
            3154376,
            3154181
        ],
        "A": [
            3151000,
            3150976,
            3151370,
            3151011,
            3151226,
            3150986,
            3151237,
            3151023,
            3151171,
            3151002,
            3150999,
            3152680,
            3151235,
            3150991,
            3151625,
            3151251,
            3169649,
            3151050,
            3151668,
            3151075
        ],
        "E": [
            3179779,
            3170504,
            3166357,
            3166349
        ]
    },
    "name": "A. k-Multiple Free Set",
    "statement": "A -multiple free set is a set of integers where there is no pair of\r\nintegers where one is equal to another integer multiplied by . That is,\r\nthere are no two integers and from the set, such that .You’re given a\r\nset of distinct positive integers. Your task is to find the size of it’s\r\nlargest -multiple free subset.\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\nset <int> bad;\nint a[100010];\n\nint main(void){\n    int N,K,i;\n    \n    cin >> N >> K;\n    REP(i,N) scanf(\"%d\", &a[i]);\n    sort(a, a+N);\n    \n    int ans = 0;\n    for(i=N-1;i>=0;i--){\n        if(bad.find(a[i]) == bad.end()){\n            ans++;\n            if(a[i] % K == 0) bad.insert(a[i] / K);\n        }\n    }\n    \n    cout << ans << endl;\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. k-Multiple Free Set.json",
    "editorial_link": "https://codeforces.com//blog/entry/6759",
    "editorial": "Consider an integer x which is divisible by k. At most one of the integers x and x?/?k can appear in the maximum k-multiple free subset. Also for any integer y at most one of the numbers y and yk appears in the answer. If you look like this you can see the input as chains of numbers so that for each chain no two adjacent elements can appear in the output. For example, If k?=?2 then 6,?12,?24,?48,?96 forms a chain. Its easy to see that from a chain of length l we can choose at most (l?+?1)?/?2 elements in the answer. So the solution would be to compute the lengths of the chains and pick as much numbers as we can from each chain. You can sort all the numbers and do binary search or similar things to find the length of chains. Heres a cute greedy solution which picks numbers greedily from the chains:\n\nFirst sort all the numbers. Also consider an empty set of integers S, which represents the output. For each integer x in the sequence, If its not divisible by k, just pick it and insert it into S. Otherwise if its divisible by k check if x?/?k is in S or not. If its not in S insert x into S otherwise skip x.\n\nId also like to note that this problem comes from an old problem in UVa Online Judge, with the same the name.",
    "hint": []
}