{
    "link": "https://codeforces.com//contest/113/problem/D",
    "problemId": "595",
    "problem_idx": "D",
    "shortId": "113D",
    "contest_number": "113",
    "problem_submissions": {
        "E": [
            680388,
            685905,
            681683
        ],
        "A": [
            677908,
            674619,
            675479,
            675233,
            675507,
            675322,
            676300,
            675702,
            674929,
            678313,
            683346,
            682046,
            676172,
            676056
        ],
        "B": [
            676745,
            676166,
            676692,
            677267,
            676920,
            677563,
            678285,
            678205,
            675093,
            677719,
            677894,
            677545,
            677448,
            686002,
            685992
        ],
        "C": [
            676712,
            678207,
            677682,
            678634,
            679430,
            680369,
            680061,
            678147,
            687235,
            682210,
            681538,
            681511,
            680322,
            680720,
            681415,
            681728,
            685898,
            685870
        ],
        "D": [
            681282,
            682967,
            682949,
            681414,
            728339,
            728337
        ]
    },
    "name": "D. Museum",
    "statement": "One day as Petya and his friend Vasya were having one of their numerous\r\ntrips, they decided to visit a museum castle. The museum has a specific\r\nshape: it consists of rooms connected with corridors so that one can\r\naccess any room from any other one.After the two friends had a little\r\nwalk around the museum, they decided to split and watch the pieces of\r\nart each of them found interesting. They agreed to meet in one of the\r\nrooms at six p.m. However, they forgot one quite essential thing: they\r\ndidn\u2019t specify the place to meet and when the time came, they started to\r\nrush about the museum looking for each other (they couldn\u2019t call each\r\nother as roaming made a call\u2019s cost skyrocket).Yet, even despite the\r\nwhole rush, they couldn\u2019t get enough of the pieces of art, that\u2019s why\r\neach of them has the following strategy: each minute he make a decision\r\nwhere to go with probability he doesn\u2019t move to any other place during\r\nthis minute (i.e. he stays in the room). With probability he\r\nequiprobably choose one of the adjacent rooms and went there along the\r\ncorridor. Here is the ordinal number of the current room. Building was\r\nexpensive in ancient times, that\u2019s why each corridor connected two\r\ndifferent rooms, and any two rooms had no more than one corridor between\r\nthem. The boys act simultaneously. As the corridors are dark, it is\r\nimpossible to meet there; however, one can walk along the corridors in\r\nboth directions (besides, the two boys can be going through the same\r\ncorridor simultaneously without meeting). The boys act like that until\r\nthey meet each other. More formally, the two friends meet when at some\r\nmoment of time both of them decided to appear in the same room.For each\r\nroom find the probability that the boys will meet there considering that\r\nat 6 p.m. they are positioned in rooms and correspondingly.\r\n",
    "solutions": [
        "#define _CRT_SECURE_NO_DEPRECATE\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n#include <vector>\n#include <queue>\n#include <iostream>\n#include <iterator>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <sstream>\n#include <fstream>\n#include <ctime>\n#include <cstring>\n#pragma comment(linker, \"/STACK:16777216\")\nusing namespace std;\n#define pb push_back\n#define ppb pop_back\n#define pi 3.1415926535897932384626433832795028841971\n#define mp make_pair\n#define x first\n#define y second\n#define pii pair<int,int>\n#define pdd pair<double,double>\n#define INF 1000000000\n#define FOR(i,a,b) for (int _n(b), i(a); i <= _n; i++)\n#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;i--)\n#define all(c) (c).begin(), (c).end()\n#define SORT(c) sort(all(c))\n#define rep(i,n) FOR(i,1,(n))\n#define rept(i,n) FOR(i,0,(n)-1)\n#define L(s) (int)((s).size())\n#define C(a) memset((a),0,sizeof(a))\n#define VI vector <int>\n#define ll long long\n\nint a,b,c,d,i,j,n,m,k,s1,s2;\nlong double beg[501][501],mas[501][501], inv[501][501], rg[501][501];\nint num[22][22], num2[22][22], st[22];\nbool sm[22][22];\ndouble p[22];\nbool used[22];\n\ninline double prob(int a, int b) {\n\tif (a == b) return p[a];\n\tif (!sm[a][b]) return 0.0;\n\treturn (1 - p[a]) / st[a];\n}\nint main()\n{\n\t/*freopen(\"input.txt\",\"w\",stdout);\n\tprintf(\"22 %d 1 5\\n\", 22 * 21 / 2);\n\trept(i, 22) rept(j, i + 1) {\n\t\t\tprintf(\"%d %d\\n\", i + 1, j + 1);\n\t}\n\trept(i,22) {\n\t\tprintf(\"%.2lf\\n\", (double)(rand()%999 + 1)/1001);\n\t}\n\texit(0);*/\n\t//freopen(\"input.txt\",\"r\",stdin);\n\t//freopen(\"output.txt\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\trept(i,n) rept(j,n)  num[i][j] = k++;\n\tscanf(\"%d%d\",&s1,&s2);\n\trept(i,m) {\n\t\tscanf(\"%d%d\",&a,&b); --a; --b;\n\t\tsm[a][b] = sm[b][a] = 1;\n\t}\n\trept(i,n) rept(j,n) if (sm[i][j]) ++st[i];\n\trept(i,n) scanf(\"%lf\",&p[i]);\n\t--s1; --s2;\n\tif (s1 == s2) {\n\t\trept(i,n) {\n\t\t\tif (i) printf(\" \");\n\t\t\tif (i == s1) printf(\"1.0\"); else\n\t\t\tprintf(\"0.0\");\n\t\t}\n\t\tprintf(\"\\n\");\n\t\texit(0);\n\t}\n\trept(i,n) rept(j,n) {\n\t\tif (i == j) {\n\t\t\tmas[num[i][j]][num[i][j]] = 0.0;\n\t\t\tcontinue;\n\t\t}\n\t\trept(z1, n) {\n\t\t\trept(z2, n) {\n\t\t\t\tdouble p1 = prob(i, z1);\n\t\t\t\tdouble p2 = prob(j, z2);\n\t\t\t\tmas[num[i][j]][num[z1][z2]] = p1 * p2;\n\t\t\t}\n\t\t}\n\t}\n\n\trept(i,k) rept(j,k) {\n\t\trg[i][j] = mas[i][j];\n\t\tif (i == j) mas[i][j] = 1.0 - mas[i][j]; else\n\t\tmas[i][j] = -mas[i][j];\n\t}\n\trept(i,k) inv[i][i] = 1.0;\n\trept(i,k) {\n\t\ta = -1;\n\t\tlong double cur = -1.0;\n\t\tFOR(j, i, k - 1) {\n\t\t\tif (a == -1 || abs(mas[j][i]) > cur) {\n\t\t\t\ta = j;\n\t\t\t\tcur = abs(mas[j][i]);\n\t\t\t}\n\t\t}\n\t\trept(j, k) {\n\t\t\tswap(mas[i][j], mas[a][j]);\n\t\t\tswap(inv[i][j], inv[a][j]);\n\t\t}\n\t\tcur = mas[i][i];\n\t\trept(j,k) {\n\t\t\tmas[i][j] /= cur;\n\t\t\tinv[i][j] /= cur;\n\t\t}\n\t\trept(j,k) {\n\t\t\tif (j == i) continue;\n\t\t\tlong double o = mas[j][i];\n\t\t\trept(z, k) {\n\t\t\t\tmas[j][z] = mas[j][z] - mas[i][z] * o;\n\t\t\t\tinv[j][z] = inv[j][z] - inv[i][z] * o;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*rept(i,k) rept(j,k) {\n\t\tmas[i][j] = 0.0;\n\t\trept(z,k) mas[i][j] += rg[i][z] * inv[z][j];\n\t}\n\trept(i,k) rept(j,k) inv[i][j] = mas[i][j];*/\n\n\t/*rept(i,k) {\n\t\tlong double sum = 0.0;\n\t\trept(j,k) sum += inv[i][j];\n\t\trept(j,k) inv[i][j] /= sum;\n\t}*/\n\n\trept(i,n) {\n\t\tif (i) printf(\" \");\n\t\tprintf(\"%.9lf\", (double)inv[num[s1][s2]][num[i][i]]);\n\t}\n\tprintf(\"\\n\");\n\n//\tcerr << clock() << endl;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "matrices",
        "probabilities"
    ],
    "dificulty": "2700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\D. Museum.json",
    "editorial_link": "https://codeforces.com//blog/entry/2627",
    "editorial": "Let's consider a pair (i, j) as a state - this means that now Petya is in room i, and Vasya is in room j. Therefore, their meeting is state (i, i) for some i. So, it's quite easy to build transition matrix - this means that for each state (i, j) we will know probability of reaching state (x, y) in one step, where 1???i,?j,?x,?y???n. Also, from meeting state we can reach only the same state.\nLet's try to solve such a problem - what is the probability of meeting in the first room? We build system of linear algebraic equations:\n, where a(i,?j),?(x,?y)?\u0097? probability of transition from state (i,j) to state (x,y). One can notice that p(1,?1)?=?1, and p(i,?i)?=?0 when i???1, and the answer will be p(a,?b).\nThis system can be easily solved using Gauss method. Similarly we can solve such a problem for every room (considering that we will meet in certain room), but we have complexity O(n7), that will not pass time limit. But, after some observations, we now see that each time we are solving system Ax?=?b (and the only thing that is changing ?\u0097? is vector b). So, we can solve matrix equation Ax?=?b, where b is a matrix with dimensions n2?*?n, and the answer will be in the row that corresponds to state (a, b) . With this approach we have time complexity O(n6), that will pass time limit."
}