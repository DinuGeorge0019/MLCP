{
    "link": "https://codeforces.com//contest/1874/problem/A",
    "problemId": "2236836",
    "problem_idx": "A",
    "shortId": "1874A",
    "contest_number": "1874",
    "problem_submissions": {
        "F": [
            226041334,
            226055202,
            226083158,
            226054781,
            226061315,
            226045179,
            226057161,
            226024417,
            226094016,
            226151126,
            226979730,
            226372437,
            226704730,
            226099033,
            226098861,
            226001871
        ],
        "B": [
            225998357,
            225944596,
            225961498,
            226022662,
            225970503,
            226048661,
            225965106,
            225956535,
            225974109,
            226024200,
            226979960,
            226057337,
            225972372,
            225968693,
            225962068,
            226040739,
            225981051,
            226047279,
            226046003,
            225948785
        ],
        "D": [
            225989950,
            226004287,
            225983656,
            225994935,
            225998958,
            226008015,
            225977564,
            226002115,
            225985427,
            226003081,
            225989658,
            226979804,
            225989175,
            226003010,
            226023529,
            226002830,
            226078484,
            226078353,
            226002716,
            226024255,
            226018418,
            226137164,
            225986804
        ],
        "E": [
            225973607,
            225981897,
            226000134,
            225978662,
            226074388,
            226073614,
            226073223,
            226072631,
            226071563,
            226069387,
            226068777,
            226021358,
            225958738,
            226070894,
            225983588,
            226039851,
            226021998,
            226007010,
            226979776,
            226006499,
            226036184,
            226038920,
            226053631,
            226068817,
            226063126,
            226059742,
            226057237
        ],
        "C": [
            225967620,
            225968755,
            225972644,
            225961410,
            225983858,
            225989707,
            225987635,
            225970993,
            225986658,
            225975231,
            226979908,
            225973609,
            225986638,
            225980254,
            225971024,
            227431342,
            225959672,
            225996237,
            225972869,
            226057682,
            225972171
        ],
        "A": [
            225936409,
            225922035,
            225921764,
            225934682,
            225931922,
            225937474,
            225923760,
            225922674,
            225923828,
            225922214,
            226979999,
            225944454,
            225937163,
            225922982,
            225921695,
            226083093,
            226083061,
            225937017,
            225941961,
            225925562,
            226022851,
            225923156
        ],
        "G": [
            226095099,
            226164597,
            226979660,
            226967841,
            230907178
        ]
    },
    "name": "A. Jellyfish and Game",
    "statement": "Jellyfish has n green apples with values a_1, a_2,\r\ndots, a_n and Gellyfish has m green apples with values b_1,b_2,\r\nldots,b_m.They will play a game with k rounds. For i=1,2,\r\nldots,k in this order, they will perform the following actions: If i is\r\nodd, Jellyfish can choose to swap one of her apples with one of\r\nGellyfish’s apples or do nothing. If i is even, Gellyfish can choose to\r\nswap one of his apples with one of Jellyfish’s apples or do nothing.\r\nBoth players want to maximize the sum of the values of their\r\napples.Since you are one of the smartest people in the world, Jellyfish\r\nwants you to tell her the final sum of the value of her apples after all\r\nk rounds of the game. Assume that both Jellyfish and Gellyfish play\r\noptimally to maximize the sum of values of their apples.\r\n",
    "solutions": [
        "#include<bits/stdc++.h>\n#define L(i, j, k) for(int i = (j); i <= (k); ++i)\n#define R(i, j, k) for(int i = (j); i >= (k); --i)\n#define ll long long \n#define vi vector < int > \n#define sz(a) ((int) (a).size())\n#define ll long long \n#define ull unsigned long long\n#define me(a, x) memset(a, x, sizeof(a)) \nusing namespace std;\nconst int N = 1e6 + 7;\nint n, m, k, a[N], b[N];\nvoid Main() {\n\tcin >> n >> m >> k;\n\tL(i, 1, n) {\n\t\tcin >> a[i];\n\t}\n\tL(i, 1, m) {\n\t\tcin >> b[i];\n\t}\n\tk -= max(k - 10, 0) / 2 * 2;\n\tint op = 0;\n\twhile(k--) {\n\t\tsort(a + 1, a + n + 1);\n\t\tsort(b + 1, b + m + 1);\n\t\tif(!op) {\n\t\t\tif(a[1] < b[m])\n\t\t\t\tswap(a[1], b[m]);\n\t\t} else {\n\t\t\tif(b[1] < a[n])\n\t\t\t\tswap(b[1], a[n]);\n\t\t}\n\t\top ^= 1;\n\t} \n\tcout << accumulate(a + 1, a + n + 1, 0LL) << '\\n';\n}\nint main() {\n\tios :: sync_with_stdio(false); cin.tie(0); cout.tie(0);\n\tint t; cin >> t; while(t--) Main();\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "games",
        "greedy",
        "implementation"
    ],
    "dificulty": "1200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Jellyfish and Game.json",
    "editorial_link": "https://codeforces.com//blog/entry/120943",
    "editorial": "TutorialLet us define to be the minimum value of in the current round,\r\nto be the maximum value of in the current round, to be the minimum value\r\nof in the current round, to be the maximum value of in the current\r\nround, to be the minimum value of all the apples, to be the maximum\r\nvalue of all the apples.By greedy and induction, we would come to the\r\nfollowing conclusion: If Jellyfish is the one operating this round: If ,\r\nshe will swap this two apples, otherwise she will do nothing. If\r\nGellyfish is the one operating this round: If , he will swap this two\r\napples, otherwise she will do nothing. We consider who and will belong\r\nto after the first round.In the first round: If , . And because ,\r\nJellyfish will swap this two apples. So belongs to Jellyfish. If , . If\r\n, then , Jellyfish will do nothing. Otherwise Jellyfish wonât swap the\r\napple with value . In conclusion belongs to Jellyfish We can also show\r\nthat belongs to Gellyfish, and the proof is symmetric with the above.So\r\nin the second round, , We have . So Gellyfish will swap this two apples,\r\nin the third round, , Jellyfish will swap this two apples.So after the\r\nfirst round, the game will go two rounds at a time, with two people\r\nswapping two apples with the minimum value and the maximum value back\r\nand forth.So we only need to know the answer for and .Time complexity:\r\nper test case.Memory complexity: per test case.\r\n",
    "hint": []
}