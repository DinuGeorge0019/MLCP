{
    "link": "https://codeforces.com//contest/995/problem/C",
    "problemId": "193035",
    "problem_idx": "C",
    "shortId": "995C",
    "contest_number": "995",
    "problem_submissions": {
        "A": [
            39622634,
            39624778,
            39611857,
            39613075,
            39612504,
            39633809,
            39730739,
            39630464,
            39614560,
            39615127,
            39615945,
            39627850,
            39644544
        ],
        "D": [
            39620886,
            39622276,
            39624260,
            39625402,
            39620954,
            39619269,
            39625858,
            39622750,
            39648307,
            39621953,
            39623820,
            39630198,
            39624907,
            39620407,
            39624158,
            40152305,
            39628532
        ],
        "B": [
            39618347,
            39610962,
            39613221,
            39614545,
            39609629,
            39615815,
            39611873,
            39613569,
            39613133,
            39612138,
            39610926,
            39611393,
            39611858,
            39611928,
            39613545,
            39611754,
            39609705,
            53817193,
            39610836
        ],
        "C": [
            39617499,
            39614510,
            39626416,
            39624999,
            39616008,
            39617835,
            39618295,
            39616280,
            39624435,
            39625816,
            39622945,
            39621745,
            39619276,
            39618758,
            39619323,
            40151840,
            39622131
        ],
        "F": [
            39615335,
            39621081,
            39625550,
            39626823,
            39628939,
            39628609,
            39627481,
            39618994,
            39618157,
            39650537,
            39650510,
            39650502,
            39650497,
            39650286,
            39626413,
            39619718,
            39628948,
            39622378,
            39621430,
            39618390
        ],
        "E": [
            39614170,
            39617964,
            39622775,
            39619679,
            39622645,
            39623654,
            39624609,
            39619924,
            39623004,
            39785499,
            39632072,
            39631884,
            39631853,
            39631837,
            39631822,
            39620887,
            39627781,
            39618907,
            39627618,
            39627288,
            39618749,
            39642305
        ]
    },
    "name": "C. Leaving the Bar",
    "statement": "For a vector\r\nvec{v} = (x, y), define |v| =\r\nsqrt{x^2 + y^2}.Allen had a bit too much to drink at the bar, which is\r\nat the origin. There are n vectors\r\nvec{v_1},\r\nvec{v_2},\r\ncdots,\r\nvec{v_n}. Allen will make n moves. As Allen\u2019s sense of direction is\r\nimpaired, during the i-th move he will either move in the direction\r\nvec{v_i} or -\r\nvec{v_i}. In other words, if his position is currently p = (x, y), he\r\nwill either move to p +\r\nvec{v_i} or p -\r\nvec{v_i}.Allen doesn\u2019t want to wander too far from home (which happens\r\nto also be the bar). You need to help him figure out a sequence of moves\r\n(a sequence of signs for the vectors) such that his final position p\r\nsatisfies |p|\r\nle 1.5\r\ncdot 10^6 so that he can stay safe.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nconst int N=101000;\nint n,x,y,way[N];\npair<PII,int> p[N];\nint main() {\n\tscanf(\"%d\",&n);\n\trep(i,0,n) {\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tp[i]=mp(mp(x,y),i);\n\t}\n\twhile (1) {\n\t\trandom_shuffle(p,p+n);\n\t\tll x=0,y=0;\n\t\trep(i,0,n) {\n\t\t\tll ux=x+p[i].fi.fi,uy=y+p[i].fi.se;\n\t\t\tll vx=x-p[i].fi.fi,vy=y-p[i].fi.se;\n\t\t\tif (ux*ux+uy*uy<vx*vx+vy*vy) {\n\t\t\t\tway[p[i].se]=1; x=ux; y=uy;\n\t\t\t} else {\n\t\t\t\tway[p[i].se]=-1; x=vx; y=vy;\n\t\t\t}\n\t\t}\n\t\tif (x*x+y*y<=2250000000000ll) {\n\t\t\trep(i,0,n) printf(\"%d \",way[i]);\n\t\t\tputs(\"\");\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "data structures",
        "geometry",
        "greedy",
        "math",
        "sortings"
    ],
    "dificulty": "2300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. Leaving the Bar.json",
    "editorial_link": "https://codeforces.com//blog/entry/60217",
    "editorial": "We first prove a claim which will help us significantly. The claim is\r\nthat among any three vectors of lengths at most , then some sum or\r\ndifference has at length at most .Draw a circle with radius centered at\r\nthe origin. If we plot the vectors from the origin, two of these will\r\nlie in the same sector. Any two points in this sector will have distance\r\nat most .Therefore, as long as there are at least vectors, two of them\r\ncan be combined and the input constraints will still be satisfied. In\r\nthe final step, we can combine two vectors of length at most into one of\r\nlength at most .Implementation can be done in a number of ways: for\r\nexample, constructing a binary tree with the input vectors as leaves, or\r\nmaintaining sets of signed vectors and merging small sets to large sets.\r\nThese approaches can take or .\r\n"
}