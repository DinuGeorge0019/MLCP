{"link": "https://codeforces.com//contest/477/problem/C", "problemId": "15280", "problem_idx": "C", "shortId": "477C", "contest_number": "477", "problem_submissions": {"D": [8200841, 8203169, 8197414, 8204683, 8206684, 8205105, 8207492, 8206274, 8205809, 8206768, 8203061, 8205051, 8208476, 8208899], "C": [8191711, 8205302, 8186637, 8208553, 8191198, 8196924, 8190967, 8195898, 8200421, 8196082, 8187240, 8197260, 8188810, 8187634, 8193728], "B": [8186292, 8188466, 8199414, 8185859, 8186714, 8196554, 8188210, 8195812, 8186799, 8186875, 8185236, 8186230], "A": [8186868, 8202132, 8184242, 8184819, 8187501, 8185797, 8186266, 8208304, 8189113, 8188194, 8193817, 8188659, 8184715]}, "name": "C. Dreamoon and Strings", "statement": "Dreamoon has a string and a pattern string . He first removes exactly\r\ncharacters from obtaining string as a result. Then he calculates that is\r\ndefined as the maximal number of non-overlapping substrings equal to\r\nthat can be found in . He wants to make this number as big as\r\npossible.More formally, let\u2019s define as maximum value of over all that\r\ncan be obtained by removing exactly characters from . Dreamoon wants to\r\nknow for all from to where denotes the length of string .\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define SZ(x) ((int)(x).size())\n#define fi first\n#define se second\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=2010;\nchar s[N],t[N];\nint pre[N][30],Pre[N],dp[N][N];\nint n,m;\nint main() {\n\tscanf(\"%s%s\",s+1,t+1);\n\tn=strlen(s+1); m=strlen(t+1);\n\trep(i,0,26) pre[0][i]=0;\n\trep(i,1,n+1) {\n\t\trep(j,0,26) pre[i][j]=pre[i-1][j];\n\t\tpre[i][s[i]-'a']=i;\n\t}\n\trep(i,1,n+1) {\n\t\tPre[i]=i+1;\n\t\tper(j,1,m+1) Pre[i]=pre[max(Pre[i]-1,0)][t[j]-'a'];\n\t}\n\tmemset(dp,0x20,sizeof(dp));\n\tdp[0][0]=0;\n\trep(i,1,n+1) rep(j,0,n+1) {\n\t\tdp[i][j]=dp[i-1][j];\n\t\tif (j>0&&Pre[i]>0) dp[i][j]=min(dp[i][j],dp[Pre[i]-1][j-1]+i-Pre[i]+1-m);\n\t}\n\tint pm=0;\n\trep(j,0,n+1) if (dp[n][j]<=n) pm=j;\n\trep(j,1,pm+1) {\n\t\trep(i,dp[n][j-1],dp[n][j]) printf(\"%d \",j-1);\n\t}\n\trep(i,dp[n][pm],n+1-pm*m) printf(\"%d \",pm);\n\tper(i,0,pm) rep(j,0,m) printf(\"%d \",i);\n\tputs(\"\");\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2200", "interactive": false}