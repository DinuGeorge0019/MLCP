{"link": "https://codeforces.com//contest/1083/problem/B", "problemId": "268422", "problem_idx": "B", "shortId": "1083B", "contest_number": "1083", "problem_submissions": {"F": [46915087, 46876311, 46868384, 46877366, 46879128, 46934792, 46934770, 46934758, 46934487, 46934473, 46934346, 46934338, 46934202, 46933927, 46928101, 46927984, 46927894, 46927871, 46927855, 46927824, 46927737, 46927669, 46927614, 46881270], "E": [46869370, 46871694, 46869499, 46863810, 46865492, 46873246, 46870302, 46870225, 46877380, 73537754, 46882329, 46878807, 46866936, 46868963, 46871231, 46872499, 46871547, 46871489, 46871036, 46871727, 46869495, 50322936, 50315966, 49844673, 49844653, 46872514], "C": [46867095, 46877292, 47334658, 46890375, 46870788, 46950972, 46950940, 46950838, 46877308, 46877619, 46875434, 46987974, 46883043, 46874242, 46882744, 46942133], "B": [46861840, 46872617, 46861528, 46859342, 46860406, 46863456, 46865386, 46864693, 46865545, 46861409, 46863762, 46864513, 46863287, 46861669, 46861388, 46863642, 46862875, 46865443, 46861004, 46867808], "A": [46860516, 46860277, 46860154, 46866668, 46859314, 46876109, 46860042, 46861931, 46860073, 46859289, 46859440, 46860646, 46859325, 46859654, 46859377, 46861868, 46860315, 46863438, 46865470, 46859724], "D": [46882403, 46994123]}, "name": "B. The Fair Nut and Strings", "statement": "Recently, the Fair Nut has written k strings of length n, consisting of\r\nletters \"\" and \"\". He calculated c the number of strings that are\r\nprefixes of at least one of the written strings. .Then, he lost his\r\nsheet with strings. He remembers that all written strings were\r\nlexicographically than string s and than string t. He is interested:\r\nwhat is the maximum value of c that he could get.A string a is\r\nlexicographically smaller than a string b if and only if one of the\r\nfollowing holds: a is a prefix of b, but a\r\nne b; in the first position where a and b differ, the string a has a\r\nletter that appears earlier in the alphabet than the corresponding\r\nletter in b.\r\n", "solutions": ["//~ while (clock()<=69*CLOCKS_PER_SEC)\n//~ #pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"O3\")\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\nusing namespace std;\n\ntemplate <typename T>\nusing ordered_set =\n    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef LOCAL\n~debug() { cerr << endl; }\neni(!=) cerr << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n  *this << \"[\";\n  for (auto it = d.b; it != d.e; ++it)\n    *this << \", \" + 2 * (it == d.b) << *it;\n  ris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define shandom_ruffle random_shuffle\n\nusing ll=long long;\nusing pii=pair<int,int>;\nusing pll=pair<ll,ll>;\nusing vi=vector<int>;\nusing vll=vector<ll>;\nconst int nax=1000*1007;\n\nint n;\nll k;\n\nchar wcz[2][nax];\n\nll wyn;\n\nll dol=1, gor=1;\nll mie=0;\n\nint main()\n{\n\tscanf(\"%d%lld\", &n, &k);\n\tfor (int h=0; h<2; h++)\n\t\tscanf(\"%s\", wcz[h]+1);\n\tint w=1;\n\twhile(w<=n && wcz[0][w]==wcz[1][w])\n\t{\n\t\tw++;\n\t\twyn++;\n\t}\n\tif (w>n)\n\t{\n\t\tprintf(\"%d\\n\", n);\n\t\treturn 0;\n\t}\n\tfor (int i=w; i<=n; i++)\n\t{\n\t\tif (i>w)\n\t\t{\n\t\t\tmie*=2;\n\t\t\tif (wcz[0][i]=='a')\n\t\t\t{\n\t\t\t\tmie+=dol;\n\t\t\t}\n\t\t\tif (wcz[1][i]=='b')\n\t\t\t{\n\t\t\t\tmie+=gor;\n\t\t\t}\n\t\t}\n\t\tdol=min(dol, k);\n\t\tgor=min(gor, k);\n\t\tmie=min(mie, k);\n\t\twyn+=min(dol+gor+mie, k);\n\t}\n\t\n\tprintf(\"%lld\\n\", wyn);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy", "strings"], "dificulty": "2000", "interactive": false}