{"link": "https://codeforces.com//contest/1835/problem/C", "problemId": "1971169", "problem_idx": "C", "shortId": "1835C", "contest_number": "1835", "problem_submissions": {"F": [210161299, 210152027, 210200486, 210168915, 210168905, 210234528, 210498721], "E": [210154409, 210139670, 210181918, 210167680, 210186364, 210186293, 211288903, 210214448, 210232344], "D": [210137478, 210145210, 210140448, 210146614, 210150836, 210149175, 210153170, 210140966, 210145335, 210157557, 210152881, 210158282, 210161722, 210158416, 210154492, 210150489, 210158944, 210157853, 210161077, 210159964], "C": [210128217, 210152796, 210132819, 210132907, 210137216, 210139416, 210142582, 210132889, 210151723, 210144494, 210144705, 210148053, 210147474, 210148947, 210144617, 210156201, 210143729, 210131342, 210153921, 210147904], "A": [210111447, 210110992, 210111020, 210113789, 210120090, 210112664, 210112565, 210111866, 210115344, 210112666, 210121548, 210113387, 210112454, 210112268, 210111369, 210114825, 210112488, 210116562, 210113331, 210116729], "B": [210161645, 210167670, 210167549, 210140435, 210129507, 210130424, 210124576, 210153636, 210135720, 210132356, 210134355, 210136221, 210133381, 210135165, 210136236, 210132156, 210131717, 210148804, 210140447, 210134819]}, "name": "C. Twin Clusters", "statement": "Famous worldwide astrophysicist Mleil waGrasse Tysok recently read about\r\nthe existence of . Before he shares this knowledge with the broader\r\naudience in his podcast called , he wants to prove their presence on his\r\nown. Mleil is aware that the vastness of the universe is astounding\r\n(almost as astounding as his observation skills) and decides to try his\r\nluck and find some new pair of twin clusters.To do so, he used his\r\nTLEscope to observe a part of the night sky that was not yet examined by\r\nhumanity in which there are exactly 2^{k + 1} galaxies in a row. i-th of\r\nthem consist of exactly 0\r\nle g_i < 4^k stars.A galaxy cluster is any non-empty contiguous segment\r\nof galaxies. Moreover, its\u2019 is said to be equal to the bitwise XOR of\r\nall values g_i within this range.Two galaxy clusters are considered\r\ntwins if and only if they have the same traits and their corresponding\r\nsegments are .Write a program that, for many scenarios, will read a\r\ndescription of a night sky part observed by Mleil and outputs a location\r\nof two intervals belonging to some twin clusters pair, or a single value\r\n-1 if no such pair exists.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n#include <array>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) {fprintf(stderr, __VA_ARGS__);fflush(stderr);}\n#else\n\t#define eprintf(...) 42\n#endif\n\nusing ll = long long;\nusing ld = long double;\nusing uint = unsigned int;\nusing ull = unsigned long long;\ntemplate<typename T>\nusing pair2 = pair<T, T>;\nusing pii = pair<int, int>;\nusing pli = pair<ll, int>;\nusing pll = pair<ll, ll>;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n\nclock_t startTime;\ndouble getCurrentTime() {\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\nconst int N = 300300;\nll a[N];\nint k;\nmap<ll, pii> mem;\nmap<ll, int> firstOcc;\n\nvoid solve() {\n\tscanf(\"%d\", &k);\n\tint n = 1 << (k + 1);\n\ta[0] = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &a[i + 1]);\n\t\ta[i + 1] ^= a[i];\n\t}\n\teprintf(\"read\\n\");\n\tfirstOcc.clear();\n\tint prevZero = -1;\n\tfor (int i = 0; i <= n; i++) {\n\t\tif (firstOcc.count(a[i])) {\n\t\t\tint p = firstOcc[a[i]];\n\t\t\tif (p != i - 1) {\n\t\t\t\tprintf(\"%d %d %d %d\\n\", p + 1, p + 1, p + 2, i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (prevZero != -1) {\n\t\t\t\tprintf(\"%d %d %d %d\\n\", prevZero, prevZero, i, i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprevZero = i;\n\t\t} else {\n\t\t\tfirstOcc[a[i]] = i;\n\t\t}\n\t}\n\teprintf(\"before while true\\n\");\n\tmem.clear();\n\twhile(true) {\n\t\tint l = myRand(n + 1), r = myRand(n + 1);\n\t\tif (l == r) continue;\n\t\tif (l > r) swap(l, r);\n\t\tll x = a[l] ^ a[r];\n\t\tif (mem.count(x)) {\n\t\t\tpii t = mem[x];\n\t\t\tif (t.first == l || t.second == r) continue;\n\t\t\tvector<int> w = {t.first, t.second, l, r};\n\t\t\tsort(all(w));\n\t\t\tassert(w[0] < w[1] && w[1] <= w[2] && w[2] < w[3]);\n\t\t\tprintf(\"%d %d %d %d\\n\", w[0] + 1, w[1], w[2] + 1, w[3]);\n\t\t\treturn;\n\t\t} else {\n\t\t\tmem[x] = mp(l, r);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tstartTime = clock();\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor (int i = 1; i <= t; i++) {\n\t\teprintf(\"--- Case #%d start ---\\n\", i);\n\t\t//printf(\"Case #%d: \", i);\n\n\t\tsolve();\n\n\t\t//printf(\"%lld\\n\", (ll)solve());\n\n\t\t/*\n\t\tif (solve()) {\n\t\t\tprintf(\"Yes\\n\");\n\t\t} else {\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t\t*/\n\n\t\teprintf(\"--- Case #%d end ---\\n\", i);\n\t\teprintf(\"time = %.5lf\\n\", getCurrentTime());\n\t\teprintf(\"++++++++++++++++++++\\n\");\n\t}\n\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "probabilities"], "dificulty": "2600", "interactive": false}