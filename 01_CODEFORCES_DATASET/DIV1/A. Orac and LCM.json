{
    "link": "https://codeforces.com//contest/1349/problem/A",
    "problemId": "619059",
    "problem_idx": "A",
    "shortId": "1349A",
    "contest_number": "1349",
    "problem_submissions": {
        "D": [
            79861873,
            79861806,
            79948658,
            79858494,
            79903166,
            131108532,
            79877857,
            79879188,
            79879019,
            79872081,
            80757765,
            79874857,
            79891331
        ],
        "C": [
            79835117,
            79843720,
            79834387,
            79845607,
            79830281,
            79843236,
            79849443,
            79848794,
            79845617,
            79852466,
            79831253,
            79854349,
            79853472,
            79844058,
            79856498,
            79879255,
            79856862,
            79848324,
            79861537
        ],
        "B": [
            79827155,
            79837122,
            79822255,
            79821907,
            79838530,
            79834646,
            79835497,
            79841171,
            79842066,
            79829421,
            79839013,
            79841661,
            79841348,
            79839739,
            79833357,
            79841018,
            79840476,
            79842544,
            79837256,
            79834808
        ],
        "A": [
            79817454,
            79821533,
            79816750,
            79834360,
            79820968,
            90907998,
            90906860,
            90496887,
            79817368,
            94393615,
            79825623,
            79828847,
            79817688,
            79819374,
            79828023,
            79820779,
            79831851,
            79831246,
            79823300,
            79821494,
            79829816,
            79823411,
            79929306,
            79822107
        ],
        "E": [
            85193181,
            79886501,
            80023736
        ],
        "F2": [
            81605329,
            85716790,
            84837609,
            84835671,
            80416603,
            80415302,
            80161085
        ],
        "F1": [
            79982046,
            79890867,
            79859528,
            80154258,
            79886462,
            79874667,
            79884418,
            79878453,
            79892295,
            79881330,
            79892657,
            79875367,
            79882448,
            79932700
        ]
    },
    "name": "A. Orac and LCM",
    "statement": "For the multiset of positive integers s=\r\n{s_1,s_2,\r\ndots,s_k\r\n}, define the Greatest Common Divisor (GCD) and Least Common Multiple\r\n(LCM) of s as follow:\r\ngcd(s) is the maximum positive integer x, such that all integers in s\r\nare divisible on x.\r\ntextrm{lcm}(s) is the minimum positive integer x, that divisible on all\r\nintegers from s.For example,\r\ngcd(\r\n{8,12\r\n})=4,\r\ngcd(\r\n{12,18,6\r\n})=6 and\r\ntextrm{lcm}(\r\n{4,6\r\n})=12. Note that for any positive integer x,\r\ngcd(\r\n{x\r\n})=\r\ntextrm{lcm}(\r\n{x\r\n})=x.Orac has a sequence a with length n. He come up with the multiset\r\nt=\r\n{\r\ntextrm{lcm}(\r\n{a_i,a_j\r\n})\r\n|\r\ni<j\r\n}, and asked you to find the value of\r\ngcd(t) for him. In other words, you need to calculate the GCD of LCMs of\r\nall pairs of elements in the given sequence.\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__);fflush(stderr);\n#else\n\t#define eprintf(...) 42\n#endif\n\nusing ll = long long;\nusing ld = long double;\nusing uint = unsigned int;\nusing ull = unsigned long long;\ntemplate<typename T>\nusing pair2 = pair<T, T>;\nusing pii = pair<int, int>;\nusing pli = pair<ll, int>;\nusing pll = pair<ll, ll>;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n\nclock_t startTime;\ndouble getCurrentTime() {\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\nconst int N = 200200;\nint d[N];\nint ans[N][3];\n\n\nint main()\n{\n\tstartTime = clock();\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tfor (int i = 2; i < N; i++) {\n\t\tif (d[i]) continue;\n\t\tfor (int j = i; j < N; j += i)\n\t\t\tif (d[j] == 0)\n\t\t\t\td[j] = i;\n\t}\n\tfor (int i = 0; i < N; i++)\n\t\tans[i][0] = ans[i][1] = 100;\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\twhile(x > 1) {\n\t\t\tint p = d[x];\n\t\t\tint t = 0;\n\t\t\twhile(x % p == 0) {\n\t\t\t\tx /= p;\n\t\t\t\tt++;\n\t\t\t}\n\t\t\tfor (int j = 0; j < 2; j++) {\n\t\t\t\tif (t < ans[p][j])\n\t\t\t\t\tswap(t, ans[p][j]);\n\t\t\t}\n\t\t\tans[p][2]++;\n\t\t}\n\t}\n\tll res = 1;\n\tfor (int p = 2; p < N; p++) {\n\t\tif (ans[p][2] <= n - 2) continue;\n\t\tint t = 0;\n\t\tif (ans[p][2] == n - 1)\n\t\t\tt = ans[p][0];\n\t\telse\n\t\t\tt = ans[p][1];\n\t\twhile(t--) res *= p;\n\t}\n\tprintf(\"%lld\\n\", res);\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Orac and LCM.json",
    "editorial_link": "https://codeforces.com//blog/entry/77284",
    "editorial": "In this tutorial stands for a prime, stands for the maximum of and\r\nstands for the answer. if and only if there are at least integers in\r\nthat . if there are at most integers in that , there exists , so and .\r\nOn the contrary, if there are at least integers in , between every two\r\ndifferent there will be at least one multiple of . So for every , .\r\nTherefore . Define as a set that consists of all the numbers in except .\r\nSo is divisible by at least numbers in . Also, if at least integers in ,\r\nwe can always find . According to the Observation, .Now consider how to\r\ncalculate . For every , calculate and . Therefore and we can get and in\r\ntime.Time complexity: Enumerate every prime . For a prime , enumerate\r\nevery and calculate which stands for the maximum integer that .\r\nAccording to the Observation, the second smallest is the maximum integer\r\nthat . Now letâs optimize this solution. If there has been at least two\r\nnot divisible by , then , so just stop enumerate .Time complexity of the\r\noptimized solution is because every integer can be divided for at most\r\ntimes.\r\n",
    "hint": []
}