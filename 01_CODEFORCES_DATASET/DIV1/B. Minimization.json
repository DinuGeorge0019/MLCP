{
    "link": "https://codeforces.com//contest/571/problem/B",
    "problemId": "33722",
    "problem_idx": "B",
    "shortId": "571B",
    "contest_number": "571",
    "problem_submissions": {
        "D": [
            12660141,
            12662761,
            146472300,
            12667793,
            12667782,
            12667705,
            12667665,
            12977746,
            12977742
        ],
        "C": [
            12653738,
            12650335,
            12656737,
            12656719,
            12656852,
            12658376,
            12657879,
            12657167,
            12658357,
            12667656,
            12659401,
            12658758,
            12659293,
            12657644,
            12661004,
            12659862,
            12660042,
            12658285,
            12661048,
            12660704
        ],
        "B": [
            12648491,
            12654015,
            12650873,
            12650680,
            12651137,
            12650734,
            12651603,
            12652409,
            12652256,
            12649494,
            12651874,
            12649612,
            12648817,
            12649026,
            12653251,
            12652866,
            12650455,
            12653013,
            12651835
        ],
        "A": [
            12646811,
            12656074,
            12648816,
            12646668,
            12647772,
            12648996,
            12648968,
            12649621,
            12647841,
            12646486,
            12649024,
            12647834,
            12659587,
            12647059,
            12649810,
            12649525,
            12660696,
            12648257,
            12647136
        ],
        "E": [
            13830424
        ]
    },
    "name": "B. Minimization",
    "statement": "You\u2019ve got array , consisting of integers and a positive integer . Array\r\nis indexed by integers from to .You need to permute the array elements\r\nso that value became minimal possible. In particular, it is allowed not\r\nto change order of elements at all.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<memory.h>\n#include<map>\n#include<set>\n#include<queue>\n#include<list>\n#include<sstream>\n#include<cstring>\n#define mp make_pair\n#define pb push_back      \n#define F first\n#define S second\n#define SS stringstream\n#define sqr(x) ((x)*(x))\n#define m0(x) memset(x,0,sizeof(x))\n#define m1(x) memset(x,63,sizeof(x))\n#define CC(x) cout << (x) << endl\n#define pw(x) (1ll<<(x))\n#define buli(x) __builtin_popcountll(x)\n#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)\n#define M 1000000007\n#define N 322000\n\n#define TASK \"1\"\n\nusing namespace std;\ntypedef pair<int,int> pt;\n\nint n, k;\nint a[N];\nint dp[5055][5055];\n\nlong long su[N];\n\nint main(){\n//\tfreopen(TASK\".in\",\"r\",stdin);\t\n//\tfreopen(TASK\".out\",\"w\",stdout);\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n\tsort(a, a + n);\n\n\tint sz = n / k;\n\n\tint B = n % k;\n\tint A = k - B;\n\n\tfor (int i = 0; i <= A; i++) for (int j = 0; j <= B; j++) dp[i][j] = 2e9 + 1;\n\tdp[0][0] = 0;\n\n\tsu[0] = 0;\n\tfor (int i = 1; i < n; i++) su[i] = su[i - 1] + a[i] - a[i - 1];\n\n\tfor (int i = 0; i <= A; i++) for (int j = 0; j <= B; j++) {\n\t\tint x = (i + j) * sz + j;\n\n\t\tif (i < A) {\n\t\t\tlong long t = dp[i][j] + su[x + sz - 1] - su[x];\n\t\t\tdp[i + 1][j] = min(dp[i + 1][j] * 1ll, t);\n\t\t} \n\t\tif (j < B) {\n\t\t\tlong long t = dp[i][j] + su[x + sz] - su[x];\n\t\t\tdp[i][j + 1] = min(dp[i][j + 1] * 1ll, t);\n\t\t}\n\t}\n\tcout << dp[A][B] << endl;\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Minimization.json",
    "editorial_link": "https://codeforces.com//blog/entry/19923",
    "editorial": "We can divide all indices into groups by their remainder modulo . While\r\ncounting , we can consider each group separately and sum the distances\r\nbetween neighbouring numbers in each group. Consider one group,\r\ncorresponding to some remainder modulo , i.e. containing for . Let\u00e2\u0080\u0099s\r\nwrite down its numbers from left to right: . Then this group adds to the\r\noverall sum the value We can notice that if we sort in non-decreasing\r\norder, this sum will not increase. So, in the optimal answer we can\r\nconsider that numbers in each group don\u00e2\u0080\u0099t decrease. Furthermore, in that\r\ncase this sum is equal to . Now consider two groups and , both sorted in\r\nnon-decreasing order. We claim that either or , i.e. segments and can\r\nhave common points only in their endpoints. Why is this true? These\r\ngroups add to the overall sum. We consider the case , the other is\r\nsymmetric. If , then swapping and will not increase the values these\r\ngroups add to the answer, since the right border of group moves to the\r\nleft, and the left border of group moves to the right. So, in that case,\r\nand the assertion is proved. Now we know that the values in each group\r\nshould from a continuous segment of the sorted original array. In fact,\r\nwe have groups of size (so called small groups) and groups of size (so\r\ncalled large groups). Consider the following dynamic programming: the\r\nminimal sum of values added to the answer by large groups and small\r\ngroups, if we choose the elements for them from the first elements of\r\nthe sorted array . There are no more than states, and each transition\r\ncan be made in : we choose large or small group to add and obtain the\r\nnumber it adds to the sum by subtracting two elements of the sorted\r\narray. The answer for the problem will be in . The overall complexity of\r\nthe solution is . We can note that in pretests was quite small, and some\r\nslower solutions could pass, but they failed on final tests. Problem\r\nauthor: zeliboba. Problem developers: Kostroma, riadwaw. Solution code:\r\n12873418.\r\n"
}