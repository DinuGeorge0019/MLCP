{
    "link": "https://codeforces.com//contest/367/problem/E",
    "problemId": "4100",
    "problem_idx": "E",
    "shortId": "367E",
    "contest_number": "367",
    "problem_submissions": {
        "A": [
            5253633,
            5248539,
            5245621,
            5246967,
            5245187,
            5245239,
            5244912,
            5260352,
            5248460,
            5246717,
            5247161,
            5247626,
            5250480,
            5245644,
            5245467,
            5248078
        ],
        "D": [
            5251109,
            5249684,
            5251377,
            5253799,
            5250841,
            5254107,
            5254017,
            5254422,
            5250750,
            5253666,
            5254820,
            5253839,
            5253605,
            5254366,
            5255055,
            5254149
        ],
        "E": [
            5249574,
            5253117,
            5253114,
            5256266,
            5249949,
            5258981,
            5256724,
            5261975,
            5266872,
            5268278,
            5260869
        ],
        "B": [
            5248117,
            5245452,
            5253998,
            5248352,
            5248954,
            5247801,
            5248088,
            5250697,
            5246678,
            5248495,
            5245796,
            5247335,
            5247628,
            5249396,
            5248757,
            5249320
        ],
        "C": [
            5246223,
            5247815,
            5247820,
            5249874,
            5249775,
            5249473,
            5249680,
            5248776,
            5247935,
            5249664,
            5249146,
            5249197,
            5249315,
            5250702,
            5250582,
            5251144
        ]
    },
    "name": "E. Sereja and Intervals",
    "statement": "Sereja is interested in intervals of numbers, so he has prepared a\r\nproblem about intervals for you. An interval of numbers is a pair of\r\nintegers . Interval belongs to interval if the following condition is\r\nmet: .Sereja wants to write out a sequence of intervals , , , on a piece\r\nof paper. At that, no interval in the sequence can belong to some other\r\ninterval of the sequence. Also, Sereja loves number very much and he\r\nwants some (at least one) interval in the sequence to have . Sereja\r\nwonders, how many distinct ways to write such intervals are there?Help\r\nSereja and find the required number of ways modulo .Two ways are\r\nconsidered distinct if there is such , that the -th intervals in two\r\ncorresponding sequences are not equal.\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\ntypedef long long ll;\n#define MOD 1000000007\n\nint N,M,X;\nint dp[2][320][320];\n\nint main(void){\n    int i,j,x;\n    \n    cin >> N >> M >> X;\n    X--;\n    \n    if(N > M){\n        cout << 0 << endl;\n        return 0;\n    }\n    \n    dp[0][0][0] = 1;\n    \n    REP(x,M){\n        int cur = x%2, next = (x+1)%2;\n        \n        REP(i,N+1) REP(j,N+1) dp[next][i][j] = 0;\n        \n        REP(i,N+1) REP(j,N+1) if(dp[cur][i][j] != 0){\n            if(x != X) dp[next][i][j] = (dp[next][i][j] + dp[cur][i][j]) % MOD;\n            if(x != X && i >= j+1) dp[next][i][j+1] = (dp[next][i][j+1] + dp[cur][i][j]) % MOD;\n            dp[next][i+1][j] = (dp[next][i+1][j] + dp[cur][i][j]) % MOD;\n            dp[next][i+1][j+1] = (dp[next][i+1][j+1] + dp[cur][i][j]) % MOD;\n        }\n    }\n    \n    ll ans = dp[M%2][N][N];\n    REP(i,N) ans = ans * (i+1) % MOD;\n    cout << ans << endl;\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "dp"
    ],
    "dificulty": "2700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\E. Sereja and Intervals.json",
    "editorial_link": "https://codeforces.com//blog/entry/9726",
    "editorial": "We assume that the intervals are sorted, and in the end we will multiply\r\nthe answer by , We can do so, as all segments are different. Consider\r\ntwo cases and . It would seem that you need to write different dynamics\r\nfor them, but not difficult to show that in the first case the answer is\r\nalways . The second case is the following dynamics : , how many numbers\r\nwe have considered , only in this interval will be present number .\r\nAlso, we will need an additional dynamic , how many numbers are\r\nconsidered , how many segments are already closed , and does not belong\r\nto any segment . There will be transfers, since every number we can not\r\nbegin and end with more than one segment. Now we should add to our\r\nsolution, it is quite simple: just add another parameter in our\r\ndynamics, if we had such a element in the beginning of some interval or\r\nnot. With out dynamics, it is not difficult.\r\n"
}