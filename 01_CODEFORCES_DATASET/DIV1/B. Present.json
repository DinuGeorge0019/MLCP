{"link": "https://codeforces.com//contest/1322/problem/B", "problemId": "555647", "problem_idx": "B", "shortId": "1322B", "contest_number": "1322", "problem_submissions": {"E": [72651847, 72667619, 72663863, 81989702, 73455963, 72654927, 72662345, 72661386, 72662000, 72646344], "D": [72644625, 72640728, 72645597, 72646886, 72650508, 72648101, 72647799, 73117806, 72646593, 73115826, 72647714, 72648983, 72649173, 72652083, 72650733, 72645310, 72649530, 72653676, 72654635, 72652516], "C": [72636777, 72636963, 72637518, 72639394, 72637388, 72638096, 72639734, 73117801, 72640343, 72640613, 72638032, 72638943, 72642117, 72644813, 72641527, 72650551, 72650396, 72639973, 72642914, 72642962, 72643894], "B": [72630406, 72634706, 72633179, 72634815, 72634956, 72641590, 72633350, 73117683, 72635692, 72635442, 72633727, 72635100, 72639222, 72636092, 72637879, 72655301, 72636262, 72636039, 72637209, 72638209, 72636501], "A": [72628149, 72629253, 72629705, 72631540, 72628375, 72630668, 72629135, 73117511, 72629708, 72630674, 72628794, 72628291, 72630330, 72629133, 72629728, 72647587, 72628383, 72631203, 72630004, 72630007, 72628407], "F": [74191172, 73465587, 77378072, 77728968]}, "name": "B. Present", "statement": "Catherine received an array of integers as a gift for March 8.\r\nEventually she grew bored with it, and she started calculated various\r\nuseless characteristics for it. She succeeded to do it for each one she\r\ncame up with. But when she came up with another one of all pairwise sums\r\nof elements in the array, she realized that she couldn\u2019t compute it for\r\na very large array, thus she asked for your help. Can you do it?\r\nFormally, you need to compute (a_1 + a_2)\r\noplus (a_1 + a_3)\r\noplus\r\nldots\r\noplus (a_1 + a_n)\r\noplus (a_2 + a_3)\r\noplus\r\nldots\r\noplus (a_2 + a_n)\r\nldots\r\noplus (a_{n-1} + a_n)\r\nHere x\r\noplus y is a bitwise XOR operation (i.e. x y in many modern programming\r\nlanguages). You can read about it in Wikipedia:\r\nhttps://en.wikipedia.org/wiki/Exclusive_or#Bitwise_operation.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned ll\n#define uint unsigned\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define IT iterator\n#define PB push_back\n#define fi first\n#define se second\n#define For(i,j,k) for (int i=(int)(j);i<=(int)(k);i++)\n#define Rep(i,j,k) for (int i=(int)(j);i>=(int)(k);i--)\n#define CLR(a,v) memset(a,v,sizeof(a));\n#define CPY(a,b) memcpy(a,b,sizeof(a));\n#define debug puts(\"wzpakking\")\n#define y1 ysghysgsygsh\nusing namespace std;\nconst int N=400005;\nint n,a[N],b[N],ans;\nint main(){\n\tscanf(\"%d\",&n);\n\tFor(i,1,n) scanf(\"%d\",&a[i]);\n\tfor (int B=1;B<2e7;B<<=1){\n\t\tFor(j,1,n) b[j]=a[j]&(B-1);\n\t\tint sum=0;\n\t\tFor(j,1,n) sum+=((a[j]&B)!=0);\n\t\tif ((sum&1)&&((n-1)&1)) ans^=B;\n\t\tsort(b+1,b+n+1);\n\t\tint p=n; sum=0;\n\t\tFor(j,1,n){\n\t\t\tp=max(p,j);\n\t\t\tfor (;p>j&&b[j]+b[p]>=B;--p);\n\t\t\tsum^=(n-p);\n\t\t}\n\t\tif (sum&1) ans^=B; \n\t}\n\tprintf(\"%d\\n\",ans);\n}"], "input": "", "output": "", "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "dificulty": "2100", "interactive": false}