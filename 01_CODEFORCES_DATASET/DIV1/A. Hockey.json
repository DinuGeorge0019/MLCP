{"link": "https://codeforces.com//contest/95/problem/A", "problemId": "497", "problem_idx": "A", "shortId": "95A", "contest_number": "95", "problem_submissions": {"E": [535779, 536171, 535576, 534631, 535449, 537379, 535935, 538215, 538206, 535203, 543889, 535690, 536003, 536745, 536509, 549025], "B": [535031, 532607, 533801, 533350, 537169, 534776, 532824, 533550, 533473, 533499, 533085, 534188, 533285, 537343, 537019, 533757], "D": [534913, 535339, 534808, 950906, 535637, 535740, 536719, 535872, 536920, 536227, 537633], "C": [534317, 533819, 536411, 534119, 533891, 533661, 534495, 534743, 534102, 533774, 534164, 535462, 533913, 536894, 535197, 535469, 534630, 534725], "A": [533274, 536622, 537207, 536153, 533227, 532424, 532796, 532812, 532729, 532727, 533283, 534618, 532955, 532983, 533855, 532880]}, "name": "A. Hockey", "statement": "Petya loves hockey very much. One day, as he was watching a hockey\r\nmatch, he fell asleep. Petya dreamt of being appointed to change a\r\nhockey team\u2019s name. Thus, Petya was given the original team name and the\r\ncollection of forbidden substrings . All those strings consist of\r\nuppercase and lowercase Latin letters. String has the length of , its\r\ncharacters are numbered from to .First Petya should find all the\r\noccurrences of forbidden substrings in the string. During the search of\r\nsubstrings the case of letter shouldn\u2019t be taken into consideration.\r\nThat is, strings \"\" and \"\" are considered equal.After that Petya should\r\nperform the replacement of all letters covered by the occurrences. More\r\nformally: a letter in the position should be replaced by any other one\r\nif for position in string there exist pair of indices () such that\r\nsubstring is contained in the collection , when using case insensitive\r\ncomparison. During the replacement the letter\u2019s case should remain the\r\nsame. Petya is not allowed to replace the letters that aren\u2019t covered by\r\nany forbidden substring.Letter (uppercase or lowercase) is considered\r\nlucky for the hockey players. That\u2019s why Petya should perform the\r\nchanges so that the occurred in the resulting string as many times as\r\npossible. Help Petya to find such resulting string. If there are several\r\nsuch strings, find the one that comes first lexicographically.Note that\r\nthe process of replacements is not repeated, it occurs only once. That\r\nis, if after Petya\u2019s replacements the string started to contain new\r\noccurrences of bad substrings, Petya pays no attention to them.\r\n", "solutions": ["#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn=1000+10;\nchar st[maxn],c[maxn];\nchar b[maxn][maxn];\nint n;\nbool flag[maxn];\n\nbool cmp(int a,int b,char s1[],char s2[],int n)\n{\n\tfor (int i=0;i<n;i++)\n\t{\n\t\tchar c1=s1[a+i];\n\t\tif (c1>='A' && c1<='Z') c1=c1-'A'+'a';\n\t\tchar c2=s2[b+i];\n\t\tif (c2>='A' && c2<='Z') c2=c2-'A'+'a';\n\t\tif (c1!=c2) return 0;\n\t}\n\t//if (s1[a+i]!=s2[b+i]) return 0;\n\treturn 1;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=0;i<n;i++) scanf(\"%s\",b[i]);\n\tscanf(\"%s\",st);\n\tscanf(\"%s\",c);\n\n\tfor (int i=0;st[i];i++)\n\t{\n\t\tbool ok=0;\n\t\tfor (int k=0;!ok && k<n;k++)\n\t\t{\n\t\t\tint len=strlen(b[k]);\n\t\t\tfor (int j=0;!ok && j<=i;j++)\n\t\t\tif (j+len-1>=i)\n\t\t\t\tok|=cmp(j,0,st,b[k],len);\n\t\t}\n\t\tflag[i]=ok;\n\t}\n\t\n\tif (c[0]>='a'&& c[0]<='z')c[0]=c[0]-'a'+'A';\n\n\tfor (int i=0;st[i];i++)\n\n\t\tif (flag[i])\n\t\t{\n\t\t\tif (st[i]>='A' && st[i]<='Z')\n\t\t\t{\n\t\t\t\tif (st[i]==c[0])\n\t\t\t\t{\n\t\t\t\t\tif (st[i]=='A') st[i]='B';\n\t\t\t\t\telse st[i]='A';\n\t\t\t\t} else st[i]=c[0];\n\t\t\t} else\n\t\t\t{\n\t\t\t\tif (st[i]==c[0]-'A'+'a')\n\t\t\t\t{\n\t\t\t\t\tif (st[i]=='a') st[i]='b';\n\t\t\t\t\telse st[i]='a';\n\t\t\t\t} else st[i]=c[0]-'A'+'a';\n\t\t\t} \n\t\t}\n\t\n\tprintf(\"%s\",st);\n}\n\t\t"], "input": "", "output": "", "tags": ["implementation", "strings"], "dificulty": "1600", "interactive": false}