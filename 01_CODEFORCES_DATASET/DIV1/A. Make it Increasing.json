{
    "link": "https://codeforces.com//contest/1667/problem/A",
    "problemId": "1373068",
    "problem_idx": "A",
    "shortId": "1667A",
    "contest_number": "1667",
    "problem_submissions": {
        "D": [
            154110050,
            154103852,
            154103937,
            154115479,
            154155764,
            154115906,
            154106152,
            154122484,
            154113686,
            154108338,
            154128689,
            154128856,
            154111430,
            154129489,
            154120823,
            154116376,
            154123174,
            154132994,
            154140447
        ],
        "E": [
            154098159,
            154112243,
            154113395,
            154103015,
            154110907,
            154132981,
            154119331,
            154111400,
            154101121,
            154121934,
            154125339,
            154115657,
            154116667,
            154129397,
            154116608,
            154116404,
            154106393,
            154102336,
            154119279,
            154115571,
            154118773
        ],
        "C": [
            154085084,
            154086351,
            154093926,
            154092233,
            154091477,
            154093338,
            154099548,
            154094249,
            154095983,
            154097356,
            154101589,
            154106382,
            154103698,
            154128503,
            154096518,
            154099179,
            154101629,
            154094236
        ],
        "B": [
            154081270,
            154079749,
            154080732,
            154084177,
            154082008,
            154087816,
            154084920,
            154081329,
            154079918,
            154089467,
            154085121,
            154087842,
            154083998,
            154085563,
            154088975,
            154094350,
            154109646,
            154150216,
            154080315,
            154083438
        ],
        "A": [
            154078911,
            154089336,
            154078854,
            154078866,
            154112501,
            154079024,
            154078951,
            154078873,
            154079568,
            154078977,
            154079611,
            154079048,
            154078916,
            154078899,
            154081306,
            154078922,
            154079058,
            154082401,
            154078903
        ]
    },
    "name": "A. Make it Increasing",
    "statement": "You are given an array a consisting of n positive integers, and an array\r\nb, with length n. Initially b_i=0 for each 1\r\nleq i\r\nleq n.In one move you can choose an integer i (1\r\nleq i\r\nleq n), and add a_i to b_i or subtract a_i from b_i. What is the minimum\r\nnumber of moves needed to make b increasing (that is, every element is\r\nstrictly greater than every element before it)?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\n#define rep(i, n) for(int i = 0; i < (int)(n); i ++)\n#define rep1(i, n) for(int i = 1; i <= (int)(n); i ++)\n#define MP make_pair\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\n\nint n, a[5005];\nLL solve(int p)\n{\n\tLL ret = 0, c = 0;\n\tfor(int i = p - 1; i >= 0; i --) {\n\t\tLL cur = c / a[i] + 1;\n\t\tret += cur;\n\t\tc = cur * a[i];\n\t}\n\tc = 0;\n\tfor(int i = p + 1; i < n; i ++) {\n\t\tLL cur = c / a[i] + 1;\n\t\tret += cur;\n\t\tc = cur * a[i];\n\t}\n\treturn ret;\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\trep(i, n) scanf(\"%d\", &a[i]);\n\tLL ans = INF;\n\trep(i, n) ans = min(ans, solve(i));\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "greedy",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Make it Increasing.json",
    "editorial_link": "https://codeforces.com//blog/entry/102013",
    "editorial": "If the final array, is b1\n, b2\n ... bn\n, than the solution is surely unoptimal if there is an 2?i?n\n, when bi>0\n, and bi?ai>bi?1\n, or b1>0\n. Because there was one unnecessary move on bi\n or on b1\n.\n\nSimilarly it is unoptimal, if bi<0\n and bi+ai<bi+1\n or bn<0\n.\n\nWe can see, that there will be a 0\n in the final array. If we fix the position of the 0\n element, than we can set the other values greadily: find the smallest value for each element, which is bigger than the previous one, and similarly before that element.\n\nWe can fix each element, and calculate the answer for that in O(n)\n time. The minimum of these values will be the final answer. So the final complexity is O(n2)\n.",
    "hint": []
}