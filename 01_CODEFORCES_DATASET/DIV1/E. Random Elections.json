{"link": "https://codeforces.com//contest/850/problem/E", "problemId": "120879", "problem_idx": "E", "shortId": "850E", "contest_number": "850", "problem_submissions": {"E": [30079147, 30079321, 30076520, 30070445, 30072131, 30067095, 30068181, 30093004, 30078840, 30069238, 30121826, 30081582, 30080429, 30062854, 30075459, 30063501], "C": [30074039, 30065285, 30068848, 30063413, 30062879, 30062229, 30071925, 30062969, 30065613, 30065926, 30075756, 30070129, 30073758, 30065190, 30073153, 30074735, 30076259, 30065744, 30070888], "A": [30069678, 30056916, 30058041, 30057755, 30055909, 30056498, 30059213, 30058881, 30065583, 30059587, 30062587, 30059533, 30059618, 30080413, 30064068, 30056411, 30066966, 30056135, 30056956, 30066903], "B": [30068250, 30061127, 30081762, 30072437, 30058838, 30066243, 30062293, 30085846, 30070994, 30120525, 30071520, 30064497, 30064013, 30059633, 30059864, 30081342, 30120546, 30077952, 30076711], "F": [30064851, 30071271, 30075755, 30077357, 30079821, 30089510, 30071025], "D": [30071702, 30081255, 30092254, 30077349, 30092387, 30073378, 30075318, 30101681, 30076176, 30093362, 30082776, 30070573]}, "name": "E. Random Elections", "statement": "The presidential election is coming in Bearland next year! Everybody is\r\nso excited about this!So far, there are three candidates, Alice, Bob,\r\nand Charlie. There are citizens in Bearland. The election result will\r\ndetermine the life of all citizens of Bearland for many years. Because\r\nof this great responsibility, each of citizens will choose one of six\r\norders of preference between Alice, Bob and Charlie uniformly at random,\r\nindependently from other voters.The government of Bearland has devised a\r\nfunction to help determine the outcome of the election given the voters\r\npreferences. More specifically, the function is (takes boolean numbers\r\nand returns a boolean number). The function also obeys the following\r\nproperty: .Three rounds will be run between each pair of candidates:\r\nAlice and Bob, Bob and Charlie, Charlie and Alice. In each round, will\r\nbe equal to , if -th citizen prefers the first candidate to second in\r\nthis round, and otherwise. After this, will be calculated. If , the\r\nfirst candidate will be declared as winner in this round. If , the\r\nsecond will be the winner, respectively.Define the probability that\r\nthere is a candidate who won two rounds as . is always an integer. Print\r\nthe value of this integer modulo .\r\n", "solutions": ["#include<map>\n#include<set>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long LL;\nconst int N = 2000000 + 10;\nconst int MOD = (int)1e9 + 7, rev=(MOD+1)>>1;\n\nint n;\nchar s[N];\nint a[N], b[N];\nint ans[N];\nint cnt[N];\nint p2[30];\n\nvoid FWT(int *a,int n){\n    for(int d=1;d<n;d<<=1)\n        for(int m=d<<1,i=0;i<n;i+=m)\n            for(int j=0;j<d;j++){\n                int x=a[i+j],y=a[i+j+d];\n                a[i+j]=(x+y)%MOD,a[i+j+d]=(x-y+MOD)%MOD;\n                //xor:a[i+j]=x+y,a[i+j+d]=(x-y+MOD)%MOD;\n                //and:a[i+j]=x+y;\n                //or:a[i+j+d]=x+y;\n            }\n}\n\nvoid UFWT(int *a,int n){\n    for(int d=1;d<n;d<<=1)\n        for(int m=d<<1,i=0;i<n;i+=m)\n            for(int j=0;j<d;j++){\n                int x=a[i+j],y=a[i+j+d];\n                a[i+j]=1LL*(x+y)*rev%MOD,a[i+j+d]=(1LL*(x-y)*rev%MOD+MOD)%MOD;\n                //xor:a[i+j]=(x+y)/2,a[i+j+d]=(x-y)/2;\n                //and:a[i+j]=x-y;\n                //or:a[i+j+d]=y-x;\n            }\n}\n\nvoid solve(int *a,int *b,int n){\n    FWT(a,n);\n    FWT(b,n);\n    for(int i=0;i<n;i++)   a[i]=1LL*a[i]*b[i]%MOD;\n    UFWT(a,n);\n}\n\nvoid solve()\n{\n    /*\n    n = 20;\n    for(int i = 0; i < (1 << n); ++ i) {\n        s[i] = rand() % 2 + '0';\n    }\n    */\n    cin >> n;\n    scanf(\"%s\", s);\n\n    p2[0] = 1;\n    for(int i = 1; i <= 20; ++ i) {\n        p2[i] = p2[i - 1] * 2 % MOD;\n    }\n\n    for(int i = 0; i < 1 << n; ++ i) {\n        a[i] = s[i] - '0';\n        b[i] = 1 - a[i];\n        if (i) {\n            cnt[i] = cnt[i - (i & -i)] + 1;\n        }\n    }\n\n    solve(a, b, 1 << n);\n\n    long long ret = 0;\n    for(int i = 0; i < 1 << n; ++ i) {\n        //cout << i << ' ' << ans[i] << endl;\n        (ret += 1ll * a[i] * p2[cnt[i]]) %= MOD;\n    }\n    cout << (ret * 3 % MOD + MOD) % MOD << endl;\n}\n\nint main()\n{\n    //srand(time(0));\n    solve();\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "brute force", "divide and conquer", "fft", "math"], "dificulty": "2800", "interactive": false}