{"link": "https://codeforces.com//contest/1548/problem/C", "problemId": "1062384", "problem_idx": "C", "shortId": "1548C", "contest_number": "1548", "problem_submissions": {"D2": [124590154, 124570151, 124631052, 124579457, 124595552, 124599986, 124598663, 124601582, 124596908, 124589080, 124589208, 124632567, 124602573], "E": [124581595, 124597899, 124590654, 124596843, 124594126, 124591964, 124592242, 124592323, 124856732, 124577426, 124619322, 124665492], "D1": [124546605, 124538296, 124561771, 124569958, 124572244, 124572070, 124558486, 124552145, 124565483, 124565312, 124554771, 124568265, 124563802, 124595327, 124572767, 124574319, 124573078, 124560440, 124570173, 124568828], "C": [124538722, 124546717, 124543126, 124552919, 124545964, 124599486, 124550051, 124554662, 124555634, 124559563, 124538097, 124558973, 124554365, 124565653, 124542584, 124561525, 124550009], "B": [124529066, 124526158, 124527209, 124533998, 124528094, 124540501, 124535175, 124539779, 124535743, 124537844, 124538815, 124529079, 124550340, 124533987, 124531668, 124543431, 124533588, 124530735, 124554398, 124534276], "A": [124521888, 124519192, 124532449, 124525950, 124521506, 124523964, 124524094, 124520315, 124522449, 124524250, 124550070, 124520590, 124556679, 124524509, 124523057, 124525430, 124522685, 124522322, 124531504, 124524318]}, "name": "C. The Three Little Pigs", "statement": "Three little pigs from all over the world are meeting for a convention!\r\nEvery minute, a triple of 3 new pigs arrives on the convention floor.\r\nAfter the n-th minute, the convention ends.The big bad wolf has learned\r\nabout this convention, and he has an attack plan. At some minute in the\r\nconvention, he will arrive and eat exactly x pigs. Then he will get\r\naway.The wolf wants Gregor to help him figure out the number of possible\r\nattack plans that involve eating exactly x pigs for various values of x\r\n(1\r\nle x\r\nle 3n). Two attack plans are considered different, if they occur at\r\ndifferent times or if the sets of little pigs to eat are different.Note\r\nthat all queries are independent, that is, the wolf does not eat the\r\nlittle pigs, he only makes plans!\r\n", "solutions": ["//\u522b\u4e22\u5305\u4e86\uff01\n#include <bits/stdc++.h>\n#define ll long long\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define vi vector<int>\n#define pi pair<int, int>\n#define mod 1000000007\ntemplate<typename T> bool chkmin(T &a, T b){return (b < a) ? a = b, 1 : 0;}\ntemplate<typename T> bool chkmax(T &a, T b){return (b > a) ? a = b, 1 : 0;}\nll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b >> 1); ns = ns * ns % mod; if (b & 1) ns = ns * a % mod; return ns;}\nusing namespace std;\nconst int maxn = 4000005;\nll fac[maxn], ifac[maxn];\nll c(int a, int b) {\n    if (a < b || b < 0) return 0;\n    return fac[a] * ifac[b] % mod * ifac[a - b] % mod;\n}\nll cur[maxn], ans[maxn];\nint main() {\n    fac[0] = ifac[0] = 1;\n    for (int i = 1; i < maxn; i++)\n        fac[i] = fac[i - 1] * i % mod;\n    ifac[maxn - 1] = ksm(fac[maxn - 1], mod - 2);\n    for (int i = maxn - 2; i >= 0; i--)\n        ifac[i] = ifac[i + 1] * (i + 1) % mod;\n    int n, q;\n    cin >> n >> q;\n    for (int i = 0; i <= 3 * n + 3; i++)\n        ans[i] = c(3 * n + 3, i + 1);\n    ll u = 3, v = 3, w = 1;\n    ll rv = (mod + 1) / 3;\n    for (int i = 0; i <= 3 * n; i++) {\n        cur[i] = rv * ans[i] % mod;\n        ans[i + 1] = (ans[i + 1] - 3 * cur[i]) % mod;\n        ans[i + 2] = (ans[i + 2] - cur[i]) % mod;\n        if (cur[i] < 0) cur[i] += mod;\n    }\n    while (q--) {\n        int x;\n        scanf(\"%d\", &x);\n        printf(\"%lld\\n\", cur[x]);\n    }\n    return (0-0); //<3\n}"], "input": "", "output": "", "tags": ["combinatorics", "dp", "fft", "math"], "dificulty": "2500", "interactive": false}