{"link": "https://codeforces.com//contest/468/problem/C", "problemId": "13936", "problem_idx": "C", "shortId": "468C", "contest_number": "468", "problem_submissions": {"B": [7871506, 7871511, 7872060, 7872742, 7871156, 7871190, 7873292, 7877835, 7874498, 7874530, 7873260, 7871798, 7873431, 7880646, 7874764, 7872991, 7872224, 7874914, 7872816, 7873434], "A": [7869312, 7868480, 7868920, 7869884, 7868194, 7868219, 7869275, 7872981, 7868801, 7869110, 7869014, 7868639, 7874076, 7868501, 7869672, 7868999, 7869364, 7868817, 7869566, 7868775], "C": [7874970, 7875437, 7876233, 7877737, 7878511, 7880116, 7875038, 7877328, 7876648, 7878979, 7879987, 7876686, 7878460, 7880319, 7881048, 7879895, 7881839], "D": [7884795, 7885524, 7879880]}, "name": "C. Hack it ", "statement": "Little X has met the following problem recently. Let\u2019s define as the sum\r\nof digits in decimal representation of number (for example, ). You are\r\nto calculate Of course Little X has solved this problem quickly, has\r\nlocked it, and then has tried to hack others. He has seen the following\r\nC++ code: ans = solve(l, r)\r\n", "solutions": ["\ufeff#pragma comment (linker, \"/STACK:128000000\")\n//#include \"testlib.h\"\n#include <cstdio>\n#include <cassert>\n#include <algorithm>\n#include <iostream>\n#include <memory.h>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n//#include <unordered_map>\n//#include <unordered_set>\n#include <ctime>\n#include <stack>\n#include <queue>\nusing namespace std;\n//#define FILENAME \"\"\n#define mp make_pair\n#define all(a) a.begin(), a.end()\ntypedef long long li;\ntypedef long double ld;\nvoid solve();\nvoid precalc();\nclock_t start;\n//int timer = 1;\n\n\nint main() {\n#ifdef room111\n    freopen(\"in.txt\", \"r\", stdin);\n\t//freopen(\"out.txt\", \"w\", stdout);\n#else\n\t//freopen(\"input.txt\", \"r\", stdin);\n\t//freopen(\"output.txt\", \"w\", stdout);\n    //freopen(FILENAME\".in\", \"r\", stdin);\n    //freopen(FILENAME \".out\", \"w\", stdout);\n#endif\n    int t = 1;\n\tcout.sync_with_stdio(0);\n\tstart = clock();\n\tprecalc();\n\tcout.precision(10);\n\tcout << fixed;\n\t//cin >> t;\n\tint testNum = 1;\n    while (t--) {\n\t\t//cout << \"Case #\" << testNum++ << \": \";\n        solve();\n\t\t//++timer;\n\t}\n\n#ifdef room111\n\tcerr << \"\\n\\n\" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << \"\\n\\n\";\n#endif\n\n    return 0;\n}\n\n//BE CAREFUL: IS INT REALLY INT?\n\nvoid precalc() {\n}\n\n#define int li\n\nint a;\n\nint powers[100500];\n\nint mulmod (int q, int w) {\n\tif (!w)\n\t\treturn 0;\n\tif (w & 1)\n\t\treturn (mulmod(q, w - 1) + q) % a;\n\treturn mulmod((q + q) % a, w / 2);\n}\n\nvoid solve() {\n\tcin >> a;\n\n\tint cur = 0;\n\tfor (int l = 1000; l <= 1000999; ++l) {\n\t\tint L = l;\n\t\twhile(L) {\n\t\t\tcur += L % 10;\n\t\t\tL /= 10;\n\t\t}\n\t}\n\t//cout << cur << ' ' << cur % a << \"\\n\";\n\n\n\tpowers[0] = 1;\n\tfor (int i = 1; i < 100500; ++i)\n\t\tpowers[i] = mulmod(powers[i - 1], 10);\n\n\tint A = a;\n\tint cnt = 0;\n\twhile (A) {\n\t\t++cnt;\n\t\tA /= 10;\n\t}\n\n\tcnt += 2;\n\n\tfor (int k = cnt; ; ++k) {\n\t\tint cur = mulmod(k, mulmod(powers[k - 1], 45));\n\n\t\tint b = a - cur - 1;\n\n\t\tint curCnt = 0;\n\t\tint B = b;\n\t\twhile(B) {\n\t\t\t++curCnt;\n\t\t\tB /= 10;\n\t\t}\n\t\tif (curCnt < k - 1) {\n\t\t\tcout << b + 1 << \"\\n\";\n\t\t\tvector<int> res;\n\t\t\twhile(b) {\n\t\t\t\tres.push_back(b % 10);\n\t\t\t\tb /= 10;\n\t\t\t}\n\t\t\twhile (res.size() < k)\n\t\t\t\tres.push_back(0);\n\t\t\tres.push_back(1);\n\t\t\treverse(all(res));\n\t\t\tfor (int i = 0; i < res.size(); ++i)\n\t\t\t\tcout << res[i];\n\t\t\tcout << \"\\n\";\n\t\t\treturn;\n\t\t}\n\t}\n\tassert(false);\n}"], "input": "", "output": "", "tags": ["binary search", "constructive algorithms", "math"], "dificulty": "2500", "interactive": false}