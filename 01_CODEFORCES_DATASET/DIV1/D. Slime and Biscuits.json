{"link": "https://codeforces.com//contest/1349/problem/D", "problemId": "619062", "problem_idx": "D", "shortId": "1349D", "contest_number": "1349", "problem_submissions": {"D": [79861873, 79861806, 79948658, 79858494, 79903166, 131108532, 79877857, 79879188, 79879019, 79872081, 80757765, 79874857, 79891331], "C": [79835117, 79843720, 79834387, 79845607, 79830281, 79843236, 79849443, 79848794, 79845617, 79852466, 79831253, 79854349, 79853472, 79844058, 79856498, 79879255, 79856862, 79848324, 79861537], "B": [79827155, 79837122, 79822255, 79821907, 79838530, 79834646, 79835497, 79841171, 79842066, 79829421, 79839013, 79841661, 79841348, 79839739, 79833357, 79841018, 79840476, 79842544, 79837256, 79834808], "A": [79817454, 79821533, 79816750, 79834360, 79820968, 90907998, 90906860, 90496887, 79817368, 94393615, 79825623, 79828847, 79817688, 79819374, 79828023, 79820779, 79831851, 79831246, 79823300, 79821494, 79829816, 79823411, 79929306, 79822107], "E": [85193181, 79886501, 80023736], "F2": [81605329, 85716790, 84837609, 84835671, 80416603, 80415302, 80161085], "F1": [79982046, 79890867, 79859528, 80154258, 79886462, 79874667, 79884418, 79878453, 79892295, 79881330, 79892657, 79875367, 79882448, 79932700]}, "name": "D. Slime and Biscuits", "statement": "Slime and his n friends are at a party. Slime has designed a game for\r\nhis friends to play.At the beginning of the game, the i-th player has\r\na_i biscuits. At each second, Slime will choose a biscuit randomly\r\nuniformly among all a_1 + a_2 +\r\nldots + a_n biscuits, and the owner of this biscuit will give it to a\r\nrandom uniform player among n-1 players except himself. The game stops\r\nwhen one person will have all the biscuits.As the host of the party,\r\nSlime wants to know the expected value of the time that the game will\r\nlast, to hold the next activity on time.For convenience, as the answer\r\ncan be represented as a rational number\r\nfrac{p}{q} for coprime p and q, you need to find the value of (p\r\ncdot q^{-1})\r\nmod 998\r\n,244\r\n,353. You can prove that q\r\nmod 998\r\n,244\r\n,353\r\nneq 0.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__);fflush(stderr);\n#else\n\t#define eprintf(...) 42\n#endif\n\nusing ll = long long;\nusing ld = long double;\nusing uint = unsigned int;\nusing ull = unsigned long long;\ntemplate<typename T>\nusing pair2 = pair<T, T>;\nusing pii = pair<int, int>;\nusing pli = pair<ll, int>;\nusing pll = pair<ll, ll>;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll myRand(ll B) {\n\treturn (ull)rng() % B;\n}\n\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n\nclock_t startTime;\ndouble getCurrentTime() {\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\n\nconst ll MOD = 998244353;\nll add(ll x, ll y) {\n\tx += y;\n\tif (x >= MOD) return x - MOD;\n\treturn x;\n}\nll sub(ll x, ll y) {\n\tx -= y;\n\tif (x < 0) return x + MOD;\n\treturn x;\n}\nll mult(ll x, ll y) {\n\treturn (x * y) % MOD;\n}\nll bin_pow(ll x, ll p) {\n\tif (p == 0) return 1;\n\tif (p & 1) return mult(x, bin_pow(x, p - 1));\n\treturn bin_pow(mult(x, x), p / 2);\n}\nll rev(ll x) {\n\treturn bin_pow(x, MOD - 2);\n}\n\nconst int N = 300300;\nll f[N];\nint n, s;\nint a[N];\n\nint main()\n{\n\tstartTime = clock();\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tscanf(\"%d\", &n);\n\ts = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\ts += a[i];\n\t}\n\n\tf[0] = 0;\n\tf[1] = mult(n - 1, rev(n));\n\tfor (int x = 1; x < s; x++) {\n\t\tll val = mult(s, rev(n));\n\t\tval = sub(val, mult(x, sub(f[x - 1], f[x])));\n\t\tval = mult(val, n - 1);\n\t\tval = mult(val, rev(s - x));\n\t\tf[x + 1] = add(val, f[x]);\n\t}\n\tll ans = f[s];\n\tfor (int i = 0; i < n; i++)\n\t\tans = sub(ans, f[a[i]]);\n\tprintf(\"%lld\\n\", ans);\n\t//printf(\"%lld\\n\", mult(ans, 3));\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["math", "probabilities"], "dificulty": "3200", "interactive": false}