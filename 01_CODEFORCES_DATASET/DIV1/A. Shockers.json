{
    "link": "https://codeforces.com//contest/906/problem/A",
    "problemId": "140844",
    "problem_idx": "A",
    "shortId": "906A",
    "contest_number": "906",
    "problem_submissions": {
        "D": [
            149029866,
            33557818,
            33559276,
            33563941,
            33561236,
            33558964,
            33560338,
            33552737,
            33564592,
            33555169,
            33563596,
            33557368,
            33574046,
            33570274,
            33569097,
            33952208,
            33561210,
            33554741,
            33558804,
            33566104,
            33558203,
            33550675
        ],
        "E": [
            33563788,
            51774603,
            33570251,
            42678760,
            33642683,
            33642639,
            57252155,
            33595209
        ],
        "A": [
            33559632,
            33542429,
            33541419,
            33540284,
            33543709,
            33540394,
            33541815,
            33539940,
            33541391,
            33544813,
            33540734,
            33541098,
            33542736,
            33541277,
            33565456,
            33540685,
            33540110,
            33569386
        ],
        "C": [
            33554104,
            33555026,
            33556927,
            33558399,
            33566145,
            33563804,
            33559596,
            33558825,
            33566746,
            33569757,
            33570264,
            33560203,
            33561015,
            33582668,
            33568743,
            33550511,
            33571601,
            33568875,
            33565260
        ],
        "B": [
            33543854,
            33551699,
            33549379,
            33555394,
            33548541,
            33552331,
            33565116,
            33549927,
            33571875,
            33555675,
            33564877,
            33554448,
            33562774,
            33555252,
            33583579,
            33583372,
            33554912,
            33572090
        ]
    },
    "name": "A. Shockers",
    "statement": "Valentin participates in a show called \"Shockers\". The rules are quite\r\neasy: jury selects one letter which Valentin doesn’t know. He should\r\nmake a small speech, but every time he pronounces a word that contains\r\nthe selected letter, he receives an electric shock. He can make guesses\r\nwhich letter is selected, but for each incorrect guess he receives an\r\nelectric shock too. The show ends when Valentin guesses the selected\r\nletter correctly.Valentin can’t keep in mind everything, so he could\r\nguess the selected letter much later than it can be uniquely determined\r\nand get excessive electric shocks. Excessive electric shocks are those\r\nwhich Valentin got after the moment the selected letter can be uniquely\r\ndetermined. You should find out the number of excessive electric shocks.\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n// head\n\nint n,val[30],unq,duang;\nchar s[101000],t[101000];\nint main() {\n\tscanf(\"%d\",&n);\n\trep(j,0,26) val[j]=1;\n\tunq=0;\n\trep(i,0,n) {\n\t\tscanf(\"%s%s\",s,t);\n\t\tint l=strlen(t);\n\t\tif (s[0]=='?') {\n\t\t\tif (i==n-1) {\n\t\t\t\tint id=t[0]-'a';\n\t\t\t\trep(j,0,26) val[j]=j==id;\n\t\t\t} else {\n\t\t\t\tint id=t[0]-'a';\n\t\t\t\tval[id]=0;\n\t\t\t\tif (unq) duang+=1;\n\t\t\t}\n\t\t} else if (s[0]=='.') {\n\t\t\trep(j,0,l) val[t[j]-'a']=0;\n\t\t} else {\n\t\t\tif (unq) duang+=1;\n\t\t\tint S=0;\n\t\t\trep(j,0,l) S|=1<<(t[j]-'a'); S^=(1<<26)-1;\n\t\t\trep(j,0,26) if (S&(1<<j)) val[j]=0;\n\t\t}\n\t\tint cnt=0;\n\t\trep(j,0,26) cnt+=val[j];\n\t\tif (cnt==1) unq=1;\n\t}\n\tprintf(\"%d\\n\",duang);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "implementation",
        "strings"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Shockers.json",
    "editorial_link": "https://codeforces.com//blog/entry/56601",
    "editorial": "From last action, selected letter can be found; let it be (without loss\r\nof generality). For each of other letters, answers on some actions are\r\ncontradicting with assumption that this letter was selected; moreover,\r\nfor each letter not equal to , we can find the earlest such action with\r\nnumber (for each action, we can easily check if assumption \" is\r\nselected\" is contradicting with the action or not on linear time). Then,\r\nthe answer is a number of electric shocks after action with number which\r\nis maximal among all such -s.\r\n",
    "hint": []
}