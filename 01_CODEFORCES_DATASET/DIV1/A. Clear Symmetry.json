{"link": "https://codeforces.com//contest/201/problem/A", "problemId": "1455", "problem_idx": "A", "shortId": "201A", "contest_number": "201", "problem_submissions": {"D": [1842426, 1845322, 1848015, 2017065, 1845704, 1843679, 1843165, 1843645, 1843721, 1842642, 3962764, 1843892], "E": [1841059, 1842295, 1842570, 1848002, 1842412, 1843333, 1841361, 1842083, 1843064, 1842151, 1843347], "A": [1840364, 1839374, 1839153, 1847954, 1840731, 1839399, 1844333, 1839094, 1839993, 1841295, 1840073, 1839956, 1838952, 1839521, 1838849, 1839719, 1839105, 1839524], "C": [1840066, 1840781, 1840491, 1847992, 1840261, 1840947, 1839278, 1840815, 1841258, 1842024, 1841894, 1844043, 1841094, 1844134, 1840094, 1867350, 1840802, 1840979], "B": [1839596, 1838940, 1839961, 1847965, 1841485, 1840001, 1840567, 1839860, 1841578, 1839437, 1840889, 1840454, 1839972, 1839833, 1841387, 1839459, 1840240, 1840100, 1840475]}, "name": "A. Clear Symmetry", "statement": "Consider some square matrix with side consisting of zeros and ones.\r\nThere are rows numbered from to from top to bottom and columns numbered\r\nfrom to from left to right in this matrix. We\u2019ll denote the element of\r\nthe matrix which is located at the intersection of the -row and the -th\r\ncolumn as .Let\u2019s call matrix if no two cells containing ones have a\r\ncommon side.Let\u2019s call matrix if it matches the matrices formed from it\r\nby a horizontal and/or a vertical reflection. Formally, for each pair\r\nboth of the following conditions must be met: and .Let\u2019s define the of\r\nmatrix as the number of ones in it.Given integer , your task is to find\r\nthe smallest positive integer such that there exists a clear symmetrical\r\nmatrix with side and sharpness .\r\n", "solutions": ["#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\nbool can(int N, int x){\n    if(N == 1) return (x <= 1);\n    if(N == 2) return (x <= 0);\n    if(N == 3) return (x <= 5 && x != 3);\n    \n    if(N%2 == 1) return (x <= (N*N + 1) / 2);\n    \n    if(x%4 != 0) return false;\n    \n    int n = N/2 - 1;\n    int ans = (n*n + 1) / 2;\n    ans *= 4;\n    return (x <= ans);\n}\n\nint main(void){\n    int i,x;\n    \n    cin >> x;\n    \n    for(i=1;;i++) if(can(i,x)) break;\n    cout << i << endl;\n    \n    return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "dp", "math"], "dificulty": "1700", "interactive": false}