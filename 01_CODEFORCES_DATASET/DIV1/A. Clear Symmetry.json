{
    "link": "https://codeforces.com//contest/201/problem/A",
    "problemId": "1455",
    "problem_idx": "A",
    "shortId": "201A",
    "contest_number": "201",
    "problem_submissions": {
        "D": [
            1842426,
            1845322,
            1848015,
            2017065,
            1845704,
            1843679,
            1843165,
            1843645,
            1843721,
            1842642,
            3962764,
            1843892
        ],
        "E": [
            1841059,
            1842295,
            1842570,
            1848002,
            1842412,
            1843333,
            1841361,
            1842083,
            1843064,
            1842151,
            1843347
        ],
        "A": [
            1840364,
            1839374,
            1839153,
            1847954,
            1840731,
            1839399,
            1844333,
            1839094,
            1839993,
            1841295,
            1840073,
            1839956,
            1838952,
            1839521,
            1838849,
            1839719,
            1839105,
            1839524
        ],
        "C": [
            1840066,
            1840781,
            1840491,
            1847992,
            1840261,
            1840947,
            1839278,
            1840815,
            1841258,
            1842024,
            1841894,
            1844043,
            1841094,
            1844134,
            1840094,
            1867350,
            1840802,
            1840979
        ],
        "B": [
            1839596,
            1838940,
            1839961,
            1847965,
            1841485,
            1840001,
            1840567,
            1839860,
            1841578,
            1839437,
            1840889,
            1840454,
            1839972,
            1839833,
            1841387,
            1839459,
            1840240,
            1840100,
            1840475
        ]
    },
    "name": "A. Clear Symmetry",
    "statement": "Consider some square matrix with side consisting of zeros and ones.\r\nThere are rows numbered from to from top to bottom and columns numbered\r\nfrom to from left to right in this matrix. We’ll denote the element of\r\nthe matrix which is located at the intersection of the -row and the -th\r\ncolumn as .Let’s call matrix if no two cells containing ones have a\r\ncommon side.Let’s call matrix if it matches the matrices formed from it\r\nby a horizontal and/or a vertical reflection. Formally, for each pair\r\nboth of the following conditions must be met: and .Let’s define the of\r\nmatrix as the number of ones in it.Given integer , your task is to find\r\nthe smallest positive integer such that there exists a clear symmetrical\r\nmatrix with side and sharpness .\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\nbool can(int N, int x){\n    if(N == 1) return (x <= 1);\n    if(N == 2) return (x <= 0);\n    if(N == 3) return (x <= 5 && x != 3);\n    \n    if(N%2 == 1) return (x <= (N*N + 1) / 2);\n    \n    if(x%4 != 0) return false;\n    \n    int n = N/2 - 1;\n    int ans = (n*n + 1) / 2;\n    ans *= 4;\n    return (x <= ans);\n}\n\nint main(void){\n    int i,x;\n    \n    cin >> x;\n    \n    for(i=1;;i++) if(can(i,x)) break;\n    cout << i << endl;\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "dp",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Clear Symmetry.json",
    "editorial_link": "https://codeforces.com/blog/entry/4808",
    "editorial": "It's interesting that originally the authors had an idea not to include the x?=?3 case into pretests. Imagine the number of successful hacking attempts in this contest -- considering the fact that none of the first 43 solutions to this problem passed pretests :)\n\nNote that the sought n is always an odd number. Indeed, if n is even, then two central rows of matrix A must contain zeroes, otherwise there will exist two neighbouring cells containing ones. Similar restriction applies to two central columns of matrix A. Replacing two central rows with just one and two central columns with just one and leaving zeroes in them, we'll obtain a smaller matrix with the same sharpness.\n\nNote that the sharpness of a matrix with side n can't exceed . It's easy to see that it's possible to lay out  \"domino pieces\" 1 by 2 without intersections on a field with side n (in other words, all cells except one can be divided into pairs so that each pair contains neighbouring cells). Then there can be at most one one in the cells under each \"domino piece\" in the corresponding matrix. Therefore, the total number of ones doesn't exceed .\n\nNote that a matrix with side n and sharpness  exists for an odd n. Paint all cells of the matrix in chess order and put ones into black cells and zeroes into white cells. It's easy to see that such a matrix is both clear and symmetrical and has sharpenss exactly .\n\nIntuitively it seems that if there exists a matrix with sharpness  there should also exist a matrix with every smaller sharpness. That's correct except only one case -- there doesn't exist a matrix with side 3 and sharpness 3, though there exists a matrix with side 3 and sharpness 5.\n\nLet's show that the claim above is correct for odd n???5. We'll build a matrix with sharpness  as shown above and gradually turn ones into zeroes reducing the sharpness. Cells containing ones in the matrix can be divided into three types.\n\nThe first type is the central cell. The number in it can be turned into zero and the matrix won't stop satisfying the required conditions.\n\nThe second type is the cells in the central row and the central column (except central cell). Such cells are divided into pairs by the condition of symmetry -- if we turn the number in one of them into zero, we should turn the number in its pair cell into zero as well.\n\nThe third type is all the other cells. Such cells are divided into groups of four by the condition of symmetry -- if we turn the number in one of them into zero, we should turn the number in all cells from this group into zero as well.\n\nNow for obtaining the required sharpness of x we'll act greedily. Let's turn ones into zeroes in third type cells by four until the current shapness exceeds x by less than 4 or there are no third type cells with ones remaining. After that let's turn ones into zeroes in second type cells by pairs while the current sharpness exceeds x by at least 2. At this moment the sharpness of our matrix is either x or x?+?1. If it's equal to x?+?1, let's put a zero into the central cell and obtain a matrix with sharpness x. It's easy to check that we'll be able to obtain a matrix with any sharpness acting this way.\n\nWhy is this reasoning incorrect for n?=?3? Because second type cells are absent in the matrix with sharpness 5 obtained from chess coloring. For n???5 this matrix contains cells of all types, which is important for the algorithm above. It's better to find the answers for x???5 by hand but carefully -- for example, a lot of contestants decided that the answer for x?=?2 is 5 instead of 3.",
    "hint": []
}