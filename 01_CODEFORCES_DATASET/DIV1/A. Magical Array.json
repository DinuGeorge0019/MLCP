{"link": "https://codeforces.com//contest/83/problem/A", "problemId": "442", "problem_idx": "A", "shortId": "83A", "contest_number": "83", "problem_submissions": {"E": [451947, 450977, 459818, 465914], "D": [449763, 448488, 452955, 452808, 452804, 448288, 449164, 450962, 452221, 451606, 451773, 451891, 450141, 449774, 449599, 450292, 449258, 450035, 450619], "C": [448521, 455889, 451494, 451794, 449865, 450165, 450276, 450602, 449657, 452977, 452829, 452759], "B": [447440, 452573, 449754, 447625, 448201, 447469, 450579, 448308, 447785, 447475, 447853, 448099, 447816, 448223, 447713, 447775], "A": [446362, 452366, 446401, 446361, 446485, 446374, 446375, 446560, 446585, 446384, 446420, 446524, 446437, 447399, 446502, 446789]}, "name": "A. Magical Array", "statement": "Valera absolutely accidentally got a piece of ancient parchment on which\r\nan array of numbers was written. He immediately thought that the numbers\r\nin this array were not random. As a result of extensive research Valera\r\nworked out a wonderful property that a magical array should have: an\r\narray is defined as magic if its .He decided to share this outstanding\r\ndiscovery with you, but he asks you for help in return. Despite the\r\ntremendous intelligence and wit, Valera counts very badly and so you\r\nwill have to complete his work. All you have to do is count the number\r\nof magical subarrays of the original array of numbers, written on the\r\nparchment. Subarray is defined as .\r\n", "solutions": ["#pragma comment(linker, \"/STACK:60000000\")\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <set>\n#include <map>\n#include <ctime>\n#include <cstring>\n#include <cassert>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <queue>\n#include <functional>\n\nusing namespace std;\n\n#define forn(i, n) for(int i = 0; i < (int)(n); i++)\n#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define last(a) int(a.size() - 1)\n#define all(a) a.begin(), a.end()\n#define seta(a,x) memset (a, x, sizeof (a))\n#define I (int)\n\ntypedef long long int64;\ntypedef pair <int, int> pii;\ntypedef long double ldb;\n\nconst long double eps = 1e-9;\nconst int inf = (1 << 30) - 1;\nconst int64 inf64 = ((int64)1 << 62) - 1;\nconst long double pi = 3.1415926535897932384626433832795;\n\ntemplate <class T> T sqr (T x) {return x * x;}\n\nint n;\nint a[100000];\nint64 res;\n\nint main ()\n{\n//\tfreopen (\"input.txt\", \"r\", stdin);\n//\tfreopen (\"output.txt\", \"w\", stdout);\n\tres = 0;\n\tscanf (\"%d\", &n);\n\tforn (i, n)\n\t\tscanf (\"%d\", &a[i]);\n\tint l = 0;\n\twhile (l < n) {\n\t\tint r = l;\n\t\twhile (r + 1 < n && a[r+1] == a[l])\n\t\t\tr ++;\n\t\tint64 d = r - l + 1;\n\t\tres += d * (d + 1) / 2;\n\t\tl = r + 1;\n\t}\n\tcout << res << endl;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["math"], "dificulty": "1300", "interactive": false}