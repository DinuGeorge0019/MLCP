{
    "link": "https://codeforces.com//contest/1967/problem/B2",
    "problemId": "2620307",
    "problem_idx": "B2",
    "shortId": "1967B2",
    "contest_number": "1967",
    "problem_submissions": {
        "E2": [
            258916135,
            258921598,
            280919018,
            283055351,
            258925888,
            258925224,
            258926598,
            259116859,
            258926070,
            258925546,
            259722295,
            258957419
        ],
        "E1": [
            258904834,
            258921659,
            258894575,
            258912226,
            258903044,
            258906344,
            258912831,
            258915891,
            258918877,
            258922310,
            259006535,
            258965622,
            258951459,
            258945783,
            258913874,
            258917530,
            258919711,
            258921338,
            258917617,
            258919765,
            259722116,
            258915462,
            258933640,
            258908305,
            258913393,
            258909598
        ],
        "D": [
            258893511,
            258891796,
            258909116,
            258896081,
            258913757,
            258931804,
            258897887,
            258899842,
            258900877,
            258900605,
            258900883,
            258903500,
            258906692,
            258903262,
            258903546,
            258905322,
            258906645,
            259721880,
            258919184,
            258918997,
            258920966,
            258894127
        ],
        "C": [
            258884312,
            258885547,
            258878790,
            258885577,
            258886778,
            258891500,
            258888513,
            258894435,
            258891427,
            258888089,
            258895759,
            258890296,
            258893524,
            258896216,
            258896443,
            258888021,
            258883737,
            258891226,
            258889628,
            258879732
        ],
        "B2": [
            258880311,
            258879319,
            258874379,
            258880426,
            258874860,
            258887764,
            258882431,
            258886567,
            258994245,
            258885903,
            258878827,
            258889665,
            258882193,
            258884237,
            258880372,
            258891352,
            258877071,
            258876977,
            258886917,
            258884212
        ],
        "B1": [
            258869431,
            258871590,
            258870854,
            258865105,
            258869777,
            258876404,
            258873073,
            258874727,
            258869407,
            258874121,
            258875290,
            258873932,
            258869896,
            258873122,
            258871143,
            258871635,
            258872574,
            258874952,
            258869924,
            258867671
        ],
        "A": [
            258865187,
            258866636,
            258865467,
            258874287,
            258866222,
            258865534,
            258866742,
            258868436,
            258867130,
            258868014,
            258872371,
            258870129,
            258865415,
            258868641,
            258868839,
            258866810,
            258868141,
            258871863,
            258867322,
            258865436
        ],
        "F": [
            283293514,
            273029197
        ]
    },
    "editorial_link": "https://codeforces.com//blog/entry/129027",
    "editorial": "Denote as . Assume that and , then we know that ..We know that , so .We\r\nalso know that , so and thus . Similarly, we can prove .So the number of\r\nis . We can enumerate each such that and calculate the answer. is\r\nrequired, so we add .Time Complexity: .\r\n",
    "name": "B2. Reverse Card  Hard Version ",
    "statement": "You are given two positive integers n, m.Calculate the number of ordered\r\npairs (a, b) satisfying the following conditions: 1\r\nle a\r\nle n, 1\r\nle b\r\nle m; b\r\ncdot\r\ngcd(a,b) is a multiple of a+b.\r\n",
    "solutions": [
        "/** *    author:  tourist *    created: 30.04.2024 10:44:46**/#include <bits/stdc++.h> using namespace std; #ifdef LOCAL#include \"algo/debug.h\"#else#define debug(...) 42#endif int main() {  ios::sync_with_stdio(false);  cin.tie(0);  const int M = int(4e6) + 10;  vector<int> p(M);  iota(p.begin(), p.end(), 0);  for (int i = 2; i < M; i++) {    if (p[i] == i) {      for (int j = i + i; j < M; j += i) {        if (p[j] == j) {          p[j] = i;        }      }    }  }  int tt;  cin >> tt;  while (tt--) {    int n, m;    cin >> n >> m;    int64_t ans = 0;    for (int t = 2; t <= n + m; t++) {      int r = 1;      int num = t;      while (num > 1) {        int nxt = num / p[num];        r *= p[num];        num = (p[num] == p[nxt] ? nxt / p[nxt] : nxt);      }      // 1 <= k * r <= n      int low = 1;      int high = n / r;      // 1 <= t - k * r <= m      // -m <= k * r - t <= -1      // -m + t <= k * r <= -1 + t      high = min(high, (-1 + t) / r);      low = max(low, (-m + t + r - 1) / r);      if (low <= high) {        ans += high - low + 1;      }    }    cout << ans << '\\n';  }  return 0;}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "2200",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B2. Reverse Card  Hard Version .json",
    "hint": [
        "Hint 1 Denote as . Assume that and .",
        "Hint 2 .",
        "Hint 3 How large could and be?"
    ]
}