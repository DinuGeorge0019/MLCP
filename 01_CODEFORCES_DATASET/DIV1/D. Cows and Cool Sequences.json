{
    "link": "https://codeforces.com//contest/283/problem/D",
    "problemId": "2743",
    "problem_idx": "D",
    "shortId": "283D",
    "contest_number": "283",
    "problem_submissions": {
        "E": [
            3343251,
            3348070,
            3348555,
            3348542,
            3348428,
            3342667,
            3340580,
            3359842,
            3361070,
            3400988,
            3346304,
            3342157,
            3353623,
            9563319
        ],
        "D": [
            3341005,
            3335239,
            3338431,
            3338289,
            3339479,
            3336539,
            3339584,
            3338822,
            3341445,
            3341195,
            3339832,
            3341374,
            3340310,
            3343222,
            3352115,
            3341622,
            3342150,
            3335280
        ],
        "C": [
            3338427,
            3332232,
            3337306,
            3335630,
            3335688,
            3336408,
            3338282,
            3337561,
            3334033,
            3335068,
            3338901,
            3342456,
            3339089,
            3338935,
            3340473,
            3349673,
            3339598,
            3338693,
            3342436
        ],
        "A": [
            3335284,
            3336793,
            3332280,
            3331160,
            3331458,
            3331188,
            3331189,
            3331454,
            3337247,
            3331656,
            3332125,
            3331880,
            3333900,
            3331832,
            3331503,
            3331273,
            3331495,
            3332366,
            3339906
        ],
        "B": [
            3334513,
            3338857,
            3338541,
            3333624,
            3334182,
            3337249,
            3334768,
            3336364,
            3339602,
            3335198,
            3336023,
            3336506,
            3337264,
            3334508,
            3334275,
            3339765,
            3343648,
            3343572
        ]
    },
    "name": "D. Cows and Cool Sequences",
    "statement": "Bessie and the cows have recently been playing with \"cool\" sequences and\r\nare trying to construct some. Unfortunately they are bad at arithmetic,\r\nso they need your help!A pair of positive integers is \"cool\" if can be\r\nexpressed as the sum of consecutive integers (not necessarily positive).\r\nA sequence is \"cool\" if the pairs are all cool. The cows have a sequence\r\nof positive integers, . In one move, they may replace some with any\r\nother positive integer (there are no other limits on the new value of ).\r\nDetermine the smallest number of moves needed to make the resulting\r\nsequence cool.\r\n",
    "solutions": [
        "#pragma comment(linker, \"/STACK:512000000\")\n#define _CRT_SECURE_NO_DEPRECATE\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cassert>\n#include <climits>\n#include <ctime>\n#include <numeric>\n#include <vector>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstring>\n#include <iomanip>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <list>\n#include <map>\n#include <string>\n#include <sstream>\n#include <set>\n#include <stack>\n#include <queue>\nusing namespace std;\ntemplate<class T> inline T sqr(T x) { return x * x; }\ntemplate<class T> inline string tostr(const T & x) { stringstream ss; ss << x; return ss.str(); }\ntypedef long long lng;\ntypedef unsigned long long ulng;\ntypedef unsigned int uint;\ntypedef unsigned char uchar;\ntypedef long double ld;\ntypedef pair<int, int> PII;\ntypedef pair<PII, int> PIII;\ntypedef pair<lng, lng> PLL;\ntypedef pair<lng, int> PLI;\ntypedef pair<ld, ld> PDD;\n#define left asdleft\n#define right asdright\n#define link asdlink\n#define unlink asdunlink\n#define next asdnext\n#define prev asdprev\n#define y0 asdy0\n#define y1 asdy1\n#define mp make_pair\n#define pb push_back\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(), (x).end()\n#define clr(ar,val) memset(ar, val, sizeof(ar))\n#define istr stringstream\n#define forn(i,n) for(int i=0;i<(n);++i)\n#define forv(i,v) forn(i,sz(v))\n#define X first\n#define Y second\nconst double EPS = 1e-6;\nconst int INF = 1000*1000*1000;\nconst char CINF = 102;\nconst lng LINF = INF * 1ll * INF;\nconst ld PI = 3.1415926535897932384626433832795;\n\nint n;\nlng src[5100];\nlng A[5100];\nint P[5100];\nint dp[5100];\n\nint main() {\n#ifdef __ASD__\n\tfreopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\n#endif\n\n\tcin>>n;\n\tforn(i,n){\n\t\tcin>>src[i];\n\t\tA[i]=src[i];\n\t\tP[i]=0;\n\t\twhile(A[i]%2==0){\n\t\t\tA[i]/=2;\n\t\t\t++P[i];\n\t\t}\n\t}\n\t\n\tint res=n-1;\n\tforn(i,n){\n\t\tdp[i]=i;\n\t\tfor(int j=i-1;j>=0;--j){\n\t\t\tint k=i-j-1;\n\t\t\tif(dp[i]<=k)\n\t\t\t\tbreak;\n\t\t\tif(A[j]%A[i] || (P[j]+k+1!=P[i] && k<P[i]))\n\t\t\t\tcontinue;\n\t\t\tdp[i]=min(dp[i],dp[j]+k);\n\t\t}\n\t\tres=min(res,dp[i]+(n-i-1));\n\t}\n\t\n\tcout<<res;\n\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "math",
        "number theory"
    ],
    "dificulty": "2400",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\D. Cows and Cool Sequences.json",
    "editorial_link": "https://codeforces.com//blog/entry/7037",
    "editorial": "Here is a full solution to Codeforces #174 div 1 D.\n\nLet ?2(n) denote the exponent of the largest power of 2 that divides n. For example ?2(5)?=?0,??2(96)?=?5. Let f(n) denote the largest odd factor of n.\n\nNote the following formula for sum of arithmetic series:\n\n\n\nI claim that the pair (x,?y) is cool if and only if  and one of the following is true \\begin{enumerate} \\item ?2(x)?+?1?=??2(y) \\item ?2(y)?=?0 \\end{enumerate} This can be proven by casework on the number on the parity of y.\n\nIf y is odd, the average term of the arithmetic sequence is an integer, so f(y)?=?y divides f(x) and ?2(y)?=?0.\n\nIf y is even, the average is of the form .5Â·k where k is odd, so  so it follows that y divides x so f(y) divides f(x),? and furthermore \n\nFrom this observation it follows that for fixed ai,?aj(i?<?j),? we can construct a cool sequence ai?=?bi,?bi?+?1,?... bj?-?1,?bj?=?aj if and only if  and either ?2(ai)?+?j?-?i?=??2(aj) or ?2(aj)???j?-?i?-?1.\n\nNow that we have this observation, we can finish the problem using dynamic programming where the kth state is the maximum number of ai (i???k) we can keep so that it is possible to make a1,?... ak cool. Then the answer is just n?-?max (dp[1],?dp[2],?...,?dp[n]).",
    "hint": []
}