{"link": "https://codeforces.com//contest/993/problem/A", "problemId": "190653", "problem_idx": "A", "shortId": "993A", "contest_number": "993", "problem_submissions": {"F": [39315278, 39320695, 39316458, 39677099], "E": [39303954, 44679848, 44679803, 39298654, 39318832, 39301524, 39298924, 39298197, 39302275, 39302298, 39298229, 39298156, 39300839, 39300092, 39352453, 39352393, 39352354, 39303455, 39304019, 39307250, 39300445, 39304215, 39295908, 39310154], "D": [39301603, 39306272, 39305543, 39303758, 39301872, 39306720, 39307619, 39312577, 39306349, 39308036, 39310122, 39446648, 39311312, 39310199, 39311258, 39311908, 39309211, 39312503, 41629328, 39305033], "C": [39298935, 39297300, 39298508, 39300315, 39304660, 39297439, 39298052, 39296218, 39303022, 39303419, 39304668, 39300073, 39299818, 39298805, 39302281, 39300110, 39306526, 39299493], "B": [39297062, 39295065, 39295700, 39296902, 39295145, 39299299, 39296202, 39294546, 39301730, 39301559, 39302344, 39295884, 39296798, 39301508, 39306228, 39297394, 39303701, 39296320], "A": [39295010, 39292992, 39292988, 39294233, 39305393, 39293507, 39294073, 39292365, 39300142, 39294094, 39296117, 39292842, 39294818, 39295302, 39304183, 39295611, 39298852, 39293790]}, "name": "A. Two Squares", "statement": "You are given two squares, one with sides parallel to the coordinate\r\naxes, and another one with sides at 45 degrees to the coordinate axes.\r\nFind whether the two squares intersect.The interior of the square is\r\nconsidered to be part of the square, i.e. if one square is completely\r\ninside another, they intersect. If the two squares only share one common\r\npoint, they are also considered to intersect.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int C = 10000;\nint a[2][10];\n\nbool insideA(int x, int y) {\n\tint xl = C, xr = -C, yl = C, yr = -C;\n\tfor (int i = 0; i < 8; i++) {\n\t\tif (i % 2 == 0) {\n\t\t\txl = min(xl, a[0][i]);\n\t\t\txr = max(xr, a[0][i]);\n\t\t} else {\n\t\t\tyl = min(yl, a[0][i]);\n\t\t\tyr = max(yr, a[0][i]);\n\t\t}\n\t}\n\treturn xl <= x && x <= xr && yl <= y && y <= yr;\n}\nbool insideB(int x, int y) {\n\tint X = x + y, Y = x - y;\n\tint XL = C, XR = -C, YL = C, YR = -C;\n\tfor (int i = 0; i < 4; i++) {\n\t\tx = a[1][2 * i] + a[1][2 * i + 1];\n\t\ty = a[1][2 * i] - a[1][2 * i + 1];\n\t\tXL = min(XL, x);\n\t\tXR = max(XR, x);\n\t\tYL = min(YL, y);\n\t\tYR = max(YR, y);\n\t}\n\treturn XL <= X && X <= XR && YL <= Y && Y <= YR;\n}\nint sgn(int x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n}\nbool intersect(int X, int Y1, int Y2, int x1, int y1, int x2, int y2) {\n\tif (x1 > x2) {\n\t\tswap(x1, x2);\n\t\tswap(y1, y2);\n\t}\n\tif (x1 > X || x2 < X) return false;\n\tint dy = sgn(y2 - y1);\n\tint y = y1 + dy * (X - x1);\n\tif (Y1 > Y2) swap(Y1, Y2);\n\treturn Y1 <= y && y <= Y2;\n}\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tfor (int i = 0; i < 2; i++) {\n\t\tfor (int j = 0; j < 8; j++)\n\t\t\tcin >> a[i][j];\n\t\tfor (int j = 0; j < 2; j++)\n\t\t\ta[i][j + 8] = a[i][j];\n\t}\n\tbool ans = false;\n\tfor (int i = 0; i < 4; i++) {\n\t\tans |= insideA(a[1][2 * i], a[1][2 * i + 1]);\n\t\tans |= insideB(a[0][2 * i], a[0][2 * i + 1]);\n\t}\n\tfor (int i = 0; i < 4; i++)\n\t\tfor (int j = 0; j < 4; j++) {\n\t\t\tif (a[0][2 * i] == a[0][2 * i + 2]) {\n\t\t\t\tans |= intersect(a[0][2 * i], a[0][2 * i + 1], a[0][2 * i + 3], a[1][2 * j], a[1][2 * j + 1], a[1][2 * j + 2], a[1][2 * j + 3]);\n\t\t\t} else {\n\t\t\t\tans |= intersect(a[0][2 * i + 1], a[0][2 * i], a[0][2 * i + 2], a[1][2 * j + 3], a[1][2 * j + 2], a[1][2 * j + 1], a[1][2 * j]);\n\t\t\t}\n\t\t}\n\tif (ans)\n\t\tcout << \"Yes\" << endl;\n\telse\n\t\tcout << \"No\" << endl;\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["geometry", "implementation"], "dificulty": "1600", "interactive": false}