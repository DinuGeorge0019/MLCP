{"link": "https://codeforces.com//contest/1314/problem/D", "problemId": "547039", "problem_idx": "D", "shortId": "1314D", "contest_number": "1314", "problem_submissions": {"F": [71726158, 71718843, 74749593, 74749152, 72292726, 72292697, 72292343, 72291510, 71844196, 71723876, 71715422], "B": [71718479, 71829904, 71711385, 71709524, 71707913, 71711558, 71720310, 71713846, 71720222, 71715032, 71716531, 71717545, 71717755, 71716805, 71725696, 71868147], "D": [71714124, 71712892, 71733906, 71707801, 71745171, 71710988, 71712453, 71713369, 71709321, 71710231, 71720852, 71726797, 71713255, 71704334, 71710718, 71710921, 71711996, 71765821, 71712181, 71712148, 71712872, 71716965, 71711644], "C": [71711319, 71864827, 71714264, 71722928, 71716523, 71714295, 71721162, 71720891, 71720482, 71720726, 71723585, 71724431, 71726919, 71725565, 71714331], "A": [71703192, 71704610, 71703253, 71706188, 71703791, 71704145, 71707166, 71705278, 71704520, 71703175, 71715214, 71703215, 71703413, 71707725, 71704018, 71704745, 71703715, 71704666, 71704097], "E": [71722513, 71724911, 71718902, 71725474, 71727007, 71717687, 71725550, 71726599, 71726820, 71859582, 71935297, 71720287, 71723370]}, "name": "D. Tourism", "statement": "Masha lives in a country with n cities numbered from 1 to n. She lives\r\nin the city number 1. There is a direct train between each pair of\r\ndistinct cities i and j, where i\r\nneq j. In total there are n(n-1) distinct routes. Every route has a\r\ncost, cost for route from i to j may be different from the cost of route\r\nfrom j to i.Masha wants to start her journey in city 1, take k routes\r\nfrom one city to another and as a result return to the city 1. Masha is\r\nreally careful with money, so she wants the journey to be as cheap as\r\npossible. To do so Masha doesn\u2019t mind visiting a city multiple times or\r\neven taking the same route multiple times.Masha doesn\u2019t want her journey\r\nto have odd cycles. Formally, if you can select visited by Masha city v,\r\ntake number of routes used by Masha in her journey and return to the\r\ncity v, such journey is considered unsuccessful.Help Masha to find the\r\ncheapest (with minimal total cost of all taken routes) successful\r\njourney.\r\n", "solutions": ["#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\n\nint main() {\n#ifdef LOCAL\n  freopen(\"input.txt\", \"r\", stdin);\n#endif\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  mt19937 mrand(chrono::high_resolution_clock::now().time_since_epoch().count());\n  int n, k;\n  cin >> n >> k;\n  vector<vector<int>> g(n, vector<int>(n));\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < n; ++j) {\n      cin >> g[i][j];\n    }\n  }\n  int ans = 0x3f3f3f3f;\n  while ((double) clock() / CLOCKS_PER_SEC < 2.9) {\n    vector<int> black;\n    vector<int> white;\n    black.push_back(0);\n    for (int i = 1; i < n; ++i) {\n      if (mrand() % 2 == 1) {\n        black.push_back(i);\n      } else {\n        white.push_back(i);\n      }\n    }\n    vector<int> dp(black.size(), INF);\n    dp[0] = 0;\n    for (int t = 0; t < k; ++t) {\n      vector<int> new_dp(white.size(), INF);\n      for (int i = 0; i < (int) black.size(); ++i) {\n        for (int j = 0; j < (int) white.size(); ++j) {\n          new_dp[j] = min(new_dp[j], dp[i] + g[black[i]][white[j]]);\n        }\n      }\n      swap(dp, new_dp);\n      swap(black, white);\n    }\n    ans = min(ans, dp[0]);\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["brute force", "dp", "graphs", "probabilities"], "dificulty": "2300", "interactive": false}