{"link": "https://codeforces.com//contest/504/problem/C", "problemId": "20649", "problem_idx": "C", "shortId": "504C", "contest_number": "504", "problem_submissions": {"D": [9413857, 9415317, 9414618, 9414335, 9414712, 9421240, 9415227, 9413052, 9413088, 9412895], "C": [9411735, 9413692, 9412956, 9412560, 9412053, 9410886, 9412226, 9412435, 9412519, 9412154, 9424712], "B": [9410465, 9409352, 9409933, 9410329, 9408364, 9410523, 9413452, 9410100, 9409772, 9409410, 9413230, 9409855, 9410114, 9410231, 9410054], "A": [9407864, 9408933, 9408565, 9408075, 9409262, 9408270, 9407763, 9408138, 9407931, 9407399, 9408250, 9407650, 9407865, 9407661, 9408743], "E": [9443621, 9411256, 9413318, 9421624, 9456035, 9420369, 9420367]}, "name": "C. Misha and Palindrome Degree", "statement": "Misha has an array of integers indexed by integers from to . Let\u2019s\r\ndefine of array as the number of such index pairs , that the elements\r\nfrom the -th to the -th one inclusive can be rearranged in such a way\r\nthat the array will be a palindrome. In other words, pair should meet\r\nthe condition that after some rearranging of numbers on positions from\r\nto , inclusive (it is allowed not to rearrange the numbers at all), for\r\nany following condition holds: . Your task is to find the of Misha\u2019s\r\narray.\r\n", "solutions": ["#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\n#include <ctime>\n#include <set>\n#include <map>\n#include <vector>\n#include <iomanip>\nusing namespace std;\n\nint n, a[210000], sum[210000];\nlong long ans;\n\nbool in(int k, int l, int r) {\n\treturn l <= k && k <= r;\n}\n\nbool can(int l, int r) {\n\tfor (int i = 1; i <= n; i++)\n\t\tsum[i] = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!in(i, l, r) && !in(n - i + 1, l, r) && a[i] != a[n - i + 1])\n\t\t\treturn false;\n\tfor (int i = l; i <= r; i++)\n\t\tsum[a[i]]++;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!in(i, l, r) && in(n - i + 1, l, r)) {\n\t\t\tsum[a[i]]--;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (sum[a[i]] < 0)\n\t\t\treturn false;\n\treturn true;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]), sum[a[i]]++;\n\tint s = 0;\n\tfor (int i = 1; i <= n; i++)\n\t\ts += sum[i] % 2;\n\tif (s > 1) {\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\tbool ok = true;\n\tfor (int i = 1; i <= n; i++)\n\t\tif (a[i] != a[n - i + 1])\n\t\t\tok = false;\n\tif (ok) {\n\t\tprintf(\"%I64d\\n\", 1LL * n * (n + 1) / 2);\n\t\treturn 0;\n\t}\n\tint l = 1;\n\twhile (a[l] == a[n - l + 1])\n\t\tl++;\n\tint q = l - 1, h = n, mid;\n\twhile (q < h - 1) {\n\t\tmid = (q + h) / 2;\n\t\tif (can(l, mid))\n\t\t\th = mid;\n\t\telse\n\t\t\tq = mid;\n\t}\n\tans += 1LL * l * (n - h + 1);\n\tfor (int i = 1; i <= n - i + 1; i++)\n\t\tswap(a[i], a[n - i + 1]);\n\tq = l - 1;\n\th = n;\n\twhile (q < h - 1) {\n\t\tmid = (q + h) / 2;\n\t\tif (can(l, mid))\n\t\t\th = mid;\n\t\telse\n\t\t\tq = mid;\n\t}\n\tans += 1LL * l * (n - l + 1 - h);\n\tprintf(\"%I64d\\n\", ans);\n}"], "input": "", "output": "", "tags": ["implementation", "math"], "dificulty": "2500", "interactive": false}