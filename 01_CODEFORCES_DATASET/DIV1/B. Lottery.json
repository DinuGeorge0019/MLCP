{"link": "https://codeforces.com//contest/1835/problem/B", "problemId": "1971168", "problem_idx": "B", "shortId": "1835B", "contest_number": "1835", "problem_submissions": {"F": [210161299, 210152027, 210200486, 210168915, 210168905, 210234528, 210498721], "E": [210154409, 210139670, 210181918, 210167680, 210186364, 210186293, 211288903, 210214448, 210232344], "D": [210137478, 210145210, 210140448, 210146614, 210150836, 210149175, 210153170, 210140966, 210145335, 210157557, 210152881, 210158282, 210161722, 210158416, 210154492, 210150489, 210158944, 210157853, 210161077, 210159964], "C": [210128217, 210152796, 210132819, 210132907, 210137216, 210139416, 210142582, 210132889, 210151723, 210144494, 210144705, 210148053, 210147474, 210148947, 210144617, 210156201, 210143729, 210131342, 210153921, 210147904], "A": [210111447, 210110992, 210111020, 210113789, 210120090, 210112664, 210112565, 210111866, 210115344, 210112666, 210121548, 210113387, 210112454, 210112268, 210111369, 210114825, 210112488, 210116562, 210113331, 210116729], "B": [210161645, 210167670, 210167549, 210140435, 210129507, 210130424, 210124576, 210153636, 210135720, 210132356, 210134355, 210136221, 210133381, 210135165, 210136236, 210132156, 210131717, 210148804, 210140447, 210134819]}, "name": "B. Lottery", "statement": "n people indexed with integers from 1 to n came to take part in a\r\nlottery. Each received a ticket with an integer from 0 to m.In a\r\nlottery, one integer called is drawn uniformly from 0 to m. k tickets\r\n(or less, if there are not enough participants) with the closest numbers\r\nto the target are declared the winners. In case of a draw, a ticket\r\nbelonging to the person with a smaller index is declared a winner.Bytek\r\ndecided to take part in the lottery. He knows the values on the tickets\r\nof all previous participants. He can pick whatever value he wants on his\r\nticket, but unfortunately, as he is the last one to receive it, he is\r\nindexed with an integer n + 1. Bytek wants to win the lottery. Thus, he\r\nwants to know what he should pick to maximize the chance of winning. He\r\nwants to know the smallest integer in case there are many such integers.\r\nYour task is to find it and calculate his chance of winning.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 18.06.2023 12:19:42       \n**/\n#undef _GLIBCXX_DEBUG\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n, k;\n  long long m;\n  cin >> n >> m >> k;\n  vector<long long> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  sort(a.begin(), a.end());\n  long long mx = -1;\n  long long val = -1;\n  auto Test = [&](long long x) {\n    if (x < 0 || x > m) {\n      return;\n    }\n    long long cnt = 0;\n    int i1 = (int) (upper_bound(a.begin(), a.end(), x) - a.begin());\n    int i2 = (int) (lower_bound(a.begin(), a.end(), x) - a.begin());\n    if (i1 >= k) {\n      long long to_beat = a[i1 - k];\n      long long from = (to_beat + x) / 2 + 1;\n      long long to = x;\n      if (from <= to) {\n        cnt += to - from + 1;\n      }\n    } else {\n      cnt += x + 1;\n    }\n    if (n - i2 >= k) {\n      long long to_beat = a[i2 + k - 1];\n      long long from = x + 1;\n      long long to = (x + to_beat - 1) / 2;\n      if (from <= to) {\n        cnt += to - from + 1;\n      }\n    } else {\n      cnt += m - x;\n    }\n    if (cnt > mx || (cnt == mx && x < val)) {\n      mx = cnt;\n      val = x;\n    }\n  };\n  for (long long i = 0; i <= 2; i++) {\n    Test(i);\n    Test(m - i);\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = -2; j <= 2; j++) {\n      Test(a[i] + j);\n    }\n  }\n  cout << mx << \" \" << val << '\\n';\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "dificulty": "2500", "interactive": false}