{"link": "https://codeforces.com//contest/1580/problem/D", "problemId": "1124757", "problem_idx": "D", "shortId": "1580D", "contest_number": "1580", "problem_submissions": {"B": [130368546, 130343157, 130344628, 130363173, 130349401, 130355243, 130367468, 130348461, 130361528, 130349821, 130353521, 130358877, 130349956, 130352430, 130351206, 130360978, 130375295, 130370586, 130394237, 130361703], "F": [130365168, 131645253, 131635746, 130511674, 130411823, 130434722, 130858441, 130432452], "D": [130353694, 130351879, 130354504, 130348465, 130361242, 130356218, 130400584, 130360744, 130356043, 130858484, 130362840, 130366863, 130368106, 130352099, 130366694, 130365720, 130365962, 130368047, 130360831, 130353993, 130370294], "C": [130347074, 130348749, 130348466, 130344529, 130355623, 130348660, 130349751, 130374035, 130353918, 130350011, 130356865, 130358625, 130355024, 130348708, 130393503, 130361958, 130360836, 130360159, 130358052, 130357895, 130349443, 130349567], "A": [130339939, 130502005, 130339930, 130348093, 130341897, 130340621, 130340244, 130356449, 130343417, 130342143, 130341207, 130340481, 130341559, 130340530, 130339691, 130340905, 130340089, 130340579, 130352882], "E": [130370647, 130421659]}, "name": "D. Subsequence", "statement": "Alice has an integer sequence a of length n and . She will choose a\r\nsubsequence of a of length m, and defines the value of a subsequence\r\na_{b_1},a_{b_2},\r\nldots,a_{b_m} as\r\nsum_{i = 1}^m (m\r\ncdot a_{b_i}) -\r\nsum_{i = 1}^m\r\nsum_{j = 1}^m f(\r\nmin(b_i, b_j),\r\nmax(b_i, b_j)), where f(i, j) denotes\r\nmin(a_i, a_{i + 1},\r\nldots, a_j).Alice wants you to help her to maximize the value of the\r\nsubsequence she choose.A sequence s is a subsequence of a sequence t if\r\ns can be obtained from t by deletion of several (possibly, zero or all)\r\nelements.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define rep(i, n) for(int i = 0; i < (int)(n); i ++)\n#define rep1(i, n) for(int i = 1; i <= (int)(n); i ++)\n#define MP make_pair\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\n\nint n, m, a[4005], cnt;\nLL dp[4005][4005];\n\nint solve(int l, int r, int id)\n{\n\tint mid = l;\n\tfor(int i = l + 1; i <= r; i ++) if(a[i] < a[mid]) mid = i;\n\tint siz;\n\tif(l == r) {\n\t\tsiz = 0;\n\t\tdp[id][0] = 0;\n\t} else if(mid == l) {\n\t\tint tmp = cnt;\n\t\tsiz = solve(mid + 1, r, cnt ++) ;\n\t\tfor(int i = 0; i <= cnt; i ++) dp[id][i] = dp[tmp][i];\n\t} else if(mid == r) {\n\t\tint tmp = cnt;\n\t\tsiz = solve(l, mid - 1, cnt ++) ;\n\t\tfor(int i = 0; i <= cnt; i ++) dp[id][i] = dp[tmp][i];\n\t} else {\n\t\tint tl = cnt;\n\t\tint ls = solve(l, mid - 1, cnt ++);\n\t\tint tr = cnt;\n\t\tint rs = solve(mid + 1, r, cnt ++);\n\t\tsiz = ls + rs;\n\t\tfor(int i = 0; i <= siz; i ++) dp[id][i] = -INF;\n\t\tfor(int i = 0; i <= ls; i ++) for(int j = 0; j <= rs; j ++)\n\t\tdp[id][i + j] = max(dp[id][i + j], dp[tl][i] + dp[tr][j] - 2LL * i * j * a[mid]);\n\t}\n\t\n\tsiz ++; dp[id][siz] = -INF;\n\tfor(int i = siz; i >= 1; i --) dp[id][i] = max(dp[id][i], dp[id][i - 1] + 1LL * (m + 1 - 2 * i) * a[mid]);\n\treturn siz;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\trep(i, n) scanf(\"%d\", &a[i]);\n\t\n\tcnt = 1;\n\tsolve(0, n - 1, 0);\n\tprintf(\"%lld\\n\", dp[0][m]);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"], "dificulty": "2900", "interactive": false}