{
    "link": "https://codeforces.com//contest/601/problem/B",
    "problemId": "41470",
    "problem_idx": "B",
    "shortId": "601B",
    "contest_number": "601",
    "problem_submissions": {
        "A": [
            14454470,
            14443143,
            14447063,
            14443587,
            14445964,
            14443595,
            14444045,
            14444989,
            14446125,
            14443550,
            14443259,
            14443909,
            14445577,
            14444080,
            14443457,
            14446585,
            14444039,
            14443354
        ],
        "B": [
            14453038,
            14449287,
            14452241,
            14450261,
            14447679,
            14448966,
            14446447,
            14447283,
            14448908,
            14445351,
            14446449,
            14446110,
            14446584,
            14449868,
            14447883,
            14445592,
            14448674,
            14450206,
            14448949
        ],
        "C": [
            14451829,
            14446840,
            14444491,
            14448343,
            14449987,
            14446641,
            14447562,
            14449169,
            14451065,
            14449654,
            14454388,
            14453682,
            14454128,
            14447981,
            14450444,
            14450228,
            14453413,
            14447154,
            14447182
        ],
        "D": [
            14449920,
            14451694,
            14450636,
            14452396,
            14452299,
            14456203,
            14456286,
            14457609,
            14452835,
            14451843,
            14450703,
            14452065,
            14453099,
            14453143,
            14453767,
            14451161,
            14453943,
            14454530
        ],
        "E": [
            14447206,
            14455203,
            14456257,
            14455227,
            14455660,
            14455476,
            14454130,
            14452692,
            14454008,
            14577340,
            14553610
        ]
    },
    "name": "B. Lipshitz Sequence",
    "statement": "A function is called Lipschitz continuous if there is a real constant\r\nsuch that the inequality holds for all . We\u2019ll deal with a more...\r\ndiscrete version of this term.For an array , we define it\u2019s Lipschitz\r\nconstant as follows: if , if , over all In other words, is the smallest\r\nnon-negative integer such that holds for all .You are given an array of\r\nsize and queries of the form . For each query, consider the subarray ;\r\ndetermine the sum of Lipschitz constants of of .\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=201000;\nint stk[N],top,a[N],l[N],r[N],b[N],vis[N];\nint n,q,pl,pr;\nll ans;\nvoid dfs(int u,int *a,int pl,int pr) {\n\tif (l[u]) dfs(l[u],a,pl,u-1);//,sz[u]+=sz[l[u]];\n\tif (r[u]) dfs(r[u],a,u+1,pr);//,sz[u]+=sz[r[u]];\n\tans+=(ll)-a[u]*(pr-u+1)*(u-pl+1);\n}\nvoid build(int *a,int n) {\n\tint top=0;\n\trep(i,1,n+1) l[i]=r[i]=0,vis[i]=0;\n\trep(i,1,n+1) {\n\t\tint k=top;\n\t\twhile (k>0&&a[stk[k-1]]>a[i]) --k;\n\t\tif (k) r[stk[k-1]]=i;\n\t\tif (k<top) l[i]=stk[k];\n\t\tstk[k++]=i;\n\t\ttop=k;\n\t}\n\t//rep(i,1,n+1) printf(\"V %d %d\\n\",l[i],r[i]);\n\trep(i,1,n+1) vis[l[i]]=vis[r[i]]=1;\n\tint rt=0;\n\trep(i,1,n+1) if (!vis[i]) rt=i;\n\tans=0;\n\tdfs(rt,a,1,n);\n}\n\nint main() {\n//\tfreopen(\"in\",\"r\",stdin);\n\tscanf(\"%d%d\",&n,&q);\n\trep(i,1,n+1) scanf(\"%d\",a+i);\n\trep(i,0,q) {\n\t\tscanf(\"%d%d\",&pl,&pr);\n\t\trep(j,pl,pr) b[j-pl+1]=-abs(a[j+1]-a[j]);\n\t\tbuild(b,pr-pl);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "data structures",
        "math"
    ],
    "dificulty": "2100",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Lipshitz Sequence.json",
    "editorial_link": "https://codeforces.com//blog/entry/21755",
    "editorial": "Forget about the ceiling function. Draw points (i,?A[i]) and lines between them \u0097 what's the Lipschitz constant geometrically?"
}