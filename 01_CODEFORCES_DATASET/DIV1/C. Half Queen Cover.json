{"link": "https://codeforces.com//contest/1667/problem/C", "problemId": "1373070", "problem_idx": "C", "shortId": "1667C", "contest_number": "1667", "problem_submissions": {"D": [154110050, 154103852, 154103937, 154115479, 154155764, 154115906, 154106152, 154122484, 154113686, 154108338, 154128689, 154128856, 154111430, 154129489, 154120823, 154116376, 154123174, 154132994, 154140447], "E": [154098159, 154112243, 154113395, 154103015, 154110907, 154132981, 154119331, 154111400, 154101121, 154121934, 154125339, 154115657, 154116667, 154129397, 154116608, 154116404, 154106393, 154102336, 154119279, 154115571, 154118773], "C": [154085084, 154086351, 154093926, 154092233, 154091477, 154093338, 154099548, 154094249, 154095983, 154097356, 154101589, 154106382, 154103698, 154128503, 154096518, 154099179, 154101629, 154094236], "B": [154081270, 154079749, 154080732, 154084177, 154082008, 154087816, 154084920, 154081329, 154079918, 154089467, 154085121, 154087842, 154083998, 154085563, 154088975, 154094350, 154109646, 154150216, 154080315, 154083438], "A": [154078911, 154089336, 154078854, 154078866, 154112501, 154079024, 154078951, 154078873, 154079568, 154078977, 154079611, 154079048, 154078916, 154078899, 154081306, 154078922, 154079058, 154082401, 154078903]}, "name": "C. Half Queen Cover", "statement": "You are given a board with n rows and n columns, numbered from 1 to n.\r\nThe intersection of the a-th row and b-th column is denoted by (a, b).A\r\nhalf-queen attacks cells in the same row, same column, and on one\r\ndiagonal. More formally, a half-queen on (a, b) attacks the cell (c, d)\r\nif a=c or b=d or a-b=c-d. What is the minimum number of half-queens that\r\ncan be placed on that board so as to ensure that each square is attacked\r\nby at least one half-queen?Construct an optimal solution.\r\n", "solutions": ["#include <bits/stdc++.h>\n#define rep(i, n) for(int i = 0; i < (int)(n); i ++)\n#define rep1(i, n) for(int i = 1; i <= (int)(n); i ++)\n#define MP make_pair\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nconst int INF = 0x3f3f3f3f;\n\nint n, m;\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tif(n == 1) {\n\t\tprintf(\"1\\n1 1\\n\"); return 0;\n\t}\n\tm = (2 * n + 1) / 3;\n\tprintf(\"%d\\n\", m);\n\twhile(n % 3 != 2) {\n\t\tprintf(\"%d %d\\n\", n, n); n --; m --;\n\t}\n\trep1(i, (m + 1) / 2) printf(\"%d %d\\n\", i, (m + 1) / 2 + 1 - i);\n\trep1(i, m / 2) printf(\"%d %d\\n\", (m + 1) / 2 + i, m + 1 - i);\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "math"], "dificulty": "2400", "interactive": false}