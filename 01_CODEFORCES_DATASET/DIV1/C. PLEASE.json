{
    "link": "https://codeforces.com//contest/696/problem/C",
    "problemId": "65170",
    "problem_idx": "C",
    "shortId": "696C",
    "contest_number": "696",
    "problem_submissions": {
        "E": [
            20498917,
            19122817,
            19128171,
            19128416,
            19128548,
            19128551,
            19129321,
            142908498,
            19129056,
            19129065,
            19148528,
            19121431
        ],
        "A": [
            19119258,
            19112517,
            19113245,
            19130646,
            19113356,
            19114035,
            19112027,
            19112329,
            19113544,
            19115943,
            19114049,
            19111947,
            19112445,
            19112591,
            19113340,
            19112458,
            19127604,
            19113354,
            19112419,
            19122807
        ],
        "B": [
            19118714,
            19115949,
            19116617,
            19115367,
            19115254,
            19116922,
            19113777,
            19114248,
            19115893,
            19113611,
            19114745,
            19113499,
            19115275,
            19114851,
            19115798,
            19115867,
            19113047,
            19115983,
            19115146,
            19124178
        ],
        "D": [
            19117852,
            19121638,
            19123814,
            19122693,
            19131199,
            19131585,
            19120524,
            19123388,
            19122212,
            19124637,
            19122311,
            19124184,
            19125355,
            19124738,
            19124393,
            19125186,
            19123099,
            19124323,
            19124512,
            19154347
        ],
        "C": [
            19113058,
            19119301,
            19121245,
            19119819,
            19118377,
            19124627,
            19116332,
            19120250,
            19118573,
            19118620,
            19122282,
            19118411,
            19120542,
            19120806,
            19119142,
            19121243,
            19119728,
            19127751
        ],
        "F": [
            19223787,
            19134194
        ]
    },
    "name": "C. PLEASE",
    "statement": "As we all know Barney\u2019s job is \"PLEASE\" and he has not much to do at\r\nwork. That\u2019s why he started playing \"cups and key\". In this game there\r\nare three identical cups arranged in a line from left to right.\r\nInitially key to Barney\u2019s heart is under the middle cup. Then at one\r\nturn Barney swaps the cup in the middle with any of other two cups\r\nrandomly (he choses each with equal probability), so the chosen cup\r\nbecomes the middle one. Game lasts turns and Barney a cup to swap with\r\nthe middle one within each turn, and the key always remains in the cup\r\nit was at the start.After -th turn Barney asks a girl to guess which cup\r\ncontains the key. The girl points to the middle one but Barney was\r\ndistracted while making turns and doesn\u2019t know if the key is under the\r\nmiddle cup. That\u2019s why he asked you to tell him the probability that\r\ngirl guessed right.Number of game turns can be extremely large, that\u2019s\r\nwhy Barney did not give it to you. Instead he gave you an array such\r\nthat in other words, is multiplication of all elements of the given\r\narray.Because of precision difficulties, Barney asked you to tell him\r\nthe answer as an irreducible fraction. In other words you need to find\r\nit as a fraction such that , where is the greatest common divisor. Since\r\nand can be extremely large, you only need to find the remainders of\r\ndividing each of them by .Please note that we want of and to be , after\r\ndividing by .\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nint k;\nll x;\nint main() {\n\tscanf(\"%d\",&k);\n\tll q=(mod-1)/2,d=2;\n\trep(i,0,k) {\n\t\tscanf(\"%lld\",&x);\n\t\tq=powmod(q,x);\n\t\td=powmod(d,x);\n\t}\n\td=d*powmod(2,mod-2)%mod;\n\tq=(q*2+1)%mod*powmod(3,mod-2)%mod;\n\tll p=q*d%mod;\n\tprintf(\"%lld/%lld\\n\",p,d);\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "matrices"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\C. PLEASE.json",
    "editorial_link": "https://codeforces.com//blog/entry/46031",
    "editorial": "It gets tricky when the problem statement says p and q should be coprimes. A wise coder in this situation thinks of a formula to make sure this happens.\n\nFirst of all let's solve the problem if we only want to find the fraction . Suppose dp[i] is answer for swapping the cups i times. It's obvious that dp[1]?=?0. For i?>?0, obviously the desired cup shouldn't be in the middle in (i?-?1)?-?th swap and with this condition the probability that after i?-?th swap comes to the middle is 0.5. That's why .\n\n \n\nSome people may use matrix to find p and q using this dp (using pair of ints instead of floating point) but there's a risk that p and q are not coprimes, but fortunately or unfortunately they will be.\n\nUsing some algebra you can prove that:\n\nif n is even then  and q?=?2n?-?1.\nif n is odd then  and q?=?2n?-?1.\nYou can confirm that in both cases p and q are coprimes (since p is odd and q is a power of 2).\n\nThe only thing left to handle is to find 2n (or 2n?-?1) and parity. Finding parity is super easy. Also 2n?=?2a1?\u00d7?a2?\u00d7?...?\u00d7?ak?=?(...((2a1)a2)...)ak. So it can be calculated using binary exponential. Also dividing can be done using Fermat's little theorem."
}