{"link": "https://codeforces.com//contest/1458/problem/D", "problemId": "837945", "problem_idx": "D", "shortId": "1458D", "contest_number": "1458", "problem_submissions": {"C": [101749748, 101754548, 101742006, 101765508, 101760904, 101735121, 101758711, 101733697, 101742587, 101742771, 101744109, 101764706, 101753517, 101758458, 103876484, 101781534], "D": [101742255, 101733305, 101750551, 101754872, 101747447, 101747468, 101737535, 101761632, 101756331, 101755812, 102023685, 101761131, 101768544, 101764759, 103932701, 101747159], "E": [101737863, 101746540, 101766037, 101749099, 101757343, 101752859, 101763081, 101766464, 101774328, 101752190, 101746555, 101751393, 101757105], "B": [101728732, 101721253, 101733062, 101725510, 101763762, 101727209, 101722722, 101732397, 101727564, 101724112, 101730858, 101735965, 101740443, 101732340, 101727159, 101744347, 101723637, 101730363, 101730317], "A": [101720547, 101718495, 101723686, 101718493, 101718664, 101719145, 101718463, 101718584, 101718634, 101718787, 101720142, 101718675, 101719084, 101722215, 101718515, 101719224, 101718795, 101718781, 101721089], "F": [102925392, 102542392, 102542303, 103841307]}, "name": "D. Flip and Reverse", "statement": "You are given a string s of \u2019s and \u2019s. You are allowed to perform the\r\nfollowing operation: choose a non-empty contiguous substring of s that\r\ncontains an equal number of \u2019s and \u2019s; flip all characters in the\r\nsubstring, that is, replace all \u2019s with \u2019s, and vice versa; reverse the\r\nsubstring. For example, consider s = , and the following operation:\r\nChoose the first six characters as the substring to act upon: . Note\r\nthat the number of \u2019s and \u2019s are equal, so this is a legal choice.\r\nChoosing substrings , , or the entire string would not be possible. Flip\r\nall characters in the substring: . Reverse the substring: . Find the\r\nlexicographically smallest string that can be obtained from s after zero\r\nor more operations.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 19.12.2020 13:21:54       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    string s;\n    cin >> s;\n    int n = (int) s.size();\n    int pos = n;\n    vector<int> a(2 * n);\n    for (int i = 0; i < n; i++) {\n      if (s[i] == '1') {\n        a[pos] += 1;\n        pos += 1;\n      } else {\n        pos -= 1;\n        a[pos] += 1;\n      }\n    }\n    int L = -1;\n    int R = -1;\n    for (int i = 0; i < 2 * n; i++) {\n      if (a[i] != 0) {\n        if (L == -1) L = i;\n        R = i;\n      }\n    }\n    int me = n;\n    for (int i = 0; i < n; i++) {\n      if (a[me - 1] > 0 && !(a[me - 1] == 1 && me - 1 < R)) {\n        a[me - 1] -= 1;\n        me -= 1;\n        cout << 0;\n      } else {\n        assert(a[me] > 0);\n        a[me] -= 1;\n        me += 1;\n        cout << 1;\n      }\n      while (L < R && a[L] == 0) {\n        ++L;\n      }\n      while (L < R && a[R] == 0) {\n        --R;\n      }\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "graphs", "greedy"], "dificulty": "3100", "interactive": false}