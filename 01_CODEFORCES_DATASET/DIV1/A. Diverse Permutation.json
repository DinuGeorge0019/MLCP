{"link": "https://codeforces.com//contest/482/problem/A", "problemId": "15988", "problem_idx": "A", "shortId": "482A", "contest_number": "482", "problem_submissions": {"E": [8395492, 8395487, 8395485, 8395484, 8395481], "D": [8386071, 8389539, 8389292, 8390634, 8390063, 8388875, 8388934, 8389261, 8389687, 8445804, 8390689, 8390772, 9364523, 8390299, 8389829], "C": [8384458, 8395228, 8386818, 8387122, 8391988, 8393481, 8394742, 8391508, 8393489, 8387159, 8387776], "B": [8382609, 8381668, 8382625, 8383076, 8381676, 8382713, 8382593, 8383732, 8383882, 8385352, 8383031, 8383352, 8382682, 8381439, 8383046, 8382782], "A": [8380309, 8380134, 8380145, 8380792, 8380181, 8383494, 8380551, 8380832, 8382370, 8381220, 8380876, 8380679, 8381208, 8382400, 8381109, 8380183]}, "name": "A. Diverse Permutation", "statement": "is an ordered set of integers , consisting of distinct positive integers\r\nnot larger than . We\u2019ll denote as the length of permutation .Your task\r\nis to find such permutation of length , that the group of numbers has\r\nexactly distinct elements.\r\n", "solutions": ["#include <cstring>\n#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <memory.h>\n#include <cassert>\n\nusing namespace std;\n\nint a[1234567];\n\nint main() {\n  int n, k;\n  scanf(\"%d %d\", &n, &k);\n  a[0] = 1;\n  int low = 1, high = 1;\n  for (int i = 1; i <= k; i++) {\n    if (i % 2 == 1) {\n      a[i] = ++high;\n    } else {\n      a[i] = --low;\n    }\n  }\n  for (int i = k + 1; i < n; i++) {\n    if (a[k] == low) {\n      a[i] = a[i - 1] - 1;\n    } else {\n      a[i] = a[i - 1] + 1;\n    }\n  }\n  int smallest = a[0];\n  for (int i = 1; i < n; i++) {\n    if (a[i] < smallest) {\n      smallest = a[i];\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (i > 0) printf(\" \");\n    printf(\"%d\", a[i] - smallest + 1);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["constructive algorithms", "greedy"], "dificulty": "1200", "interactive": false}