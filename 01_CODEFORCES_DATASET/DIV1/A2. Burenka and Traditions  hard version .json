{"link": "https://codeforces.com//contest/1718/problem/A2", "problemId": "1509964", "problem_idx": "A2", "shortId": "1718A2", "contest_number": "1718", "problem_submissions": {"F": [168597010, 168624668, 173812548, 173812098, 168599096], "D": [168565469, 168586026, 168571061, 168581216, 168578771, 168572736, 168587794, 168591318, 168592506, 168597359, 168590948, 168600506, 168597231, 168582453, 168687986], "C": [168541281, 168543939, 168544627, 168545043, 168549826, 168553177, 168540235, 168546151, 168543268, 168562740, 168541559, 168562194, 168567397, 168609760, 168609209, 168608717, 168567701, 168606687, 168620286, 168547337, 168546667, 168553348, 168556898, 168552397], "B": [168533942, 168529866, 168534830, 168535200, 168537223, 168547085, 168528202, 168537852, 168530917, 168805783, 168550097, 168530349, 168548672, 168547336, 168549427, 168545357, 168535673, 168532763, 168537259, 168542957, 168536570], "A2": [168516853, 168520403, 168525192, 168517279, 168521825, 168526171, 168517695, 168521659, 168518863, 168529215, 168520755, 168523804, 168536216, 168521669, 168523926, 168522044, 168518219, 168525244, 168524582, 168517935], "A1": [168516745, 168520669, 168524305, 168517111, 168521468, 168525366, 168517892, 168521859, 168518553, 168529389, 168520943, 168523566, 168536034, 168521371, 168523798, 168521699, 168516764, 168524985, 168524317, 168517770], "E": [168650929, 168598643, 168610266, 173790812]}, "name": "A2. Burenka and Traditions  hard version ", "statement": "Burenka is the crown princess of Buryatia, and soon she will become the\r\nn-th queen of the country. There is an ancient tradition in Buryatia\r\nbefore the coronation, the ruler must show their strength to the\r\ninhabitants. To determine the strength of the n-th ruler, the\r\ninhabitants of the country give them an array of a of exactly n numbers,\r\nafter which the ruler must turn all the elements of the array into zeros\r\nin the shortest time. The ruler can do the following two-step operation\r\nany number of times: select two indices l and r, so that 1\r\nle l\r\nle r\r\nle n and a non-negative integer x, then for all l\r\nleq i\r\nleq r assign a_i := a_i\r\noplus x, where\r\noplus denotes the bitwise XOR operation. It takes\r\nleft\r\nlceil\r\nfrac{r-l+1}{2}\r\nright\r\nrceil seconds to do this operation, where\r\nlceil y\r\nrceil denotes y rounded up to the nearest integer. Help Burenka\r\ncalculate how much time she will need.\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 16.08.2022 17:31:31       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    vector<int> b(n + 1);\n    for (int i = 0; i < n; i++) {\n      b[i + 1] = b[i] ^ a[i];\n    }\n    map<int, int> last;\n    vector<int> dp(n + 1);\n    last[0] = 0;\n    dp[0] = 0;\n    for (int i = 1; i <= n; i++) {\n      dp[i] = dp[i - 1];\n      if (last.find(b[i]) != last.end()) {\n        dp[i] = max(dp[i], dp[last[b[i]]] + 1);\n      }\n      last[b[i]] = i;\n    }\n    cout << n - dp[n] << '\\n';\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "dp", "greedy"], "dificulty": "1900", "interactive": false}