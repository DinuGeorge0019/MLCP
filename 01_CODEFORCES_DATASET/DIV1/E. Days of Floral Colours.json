{"link": "https://codeforces.com//contest/848/problem/E", "problemId": "120620", "problem_idx": "E", "shortId": "848E", "contest_number": "848", "problem_submissions": {"D": [29984461, 29984526, 29990531, 29990452, 29983235, 29986841, 30011180, 30054712, 29986436, 29991292, 29988130, 30025667], "C": [29981953, 29979998, 29991414, 29985145, 29986831, 29981161, 30023429, 30739183, 30739016, 29983074, 29985177, 29986148, 29992066, 29984922, 29985048, 30004311, 29986150, 29985850, 29985839, 29985353, 29988848], "B": [29977726, 29987077, 29983009, 29978119, 29977288, 29977302, 29978411, 29979022, 29978648, 29977708, 29980992, 29981154, 29978110, 29977941, 29980264, 29977663, 29981248, 29982355, 29978027], "A": [29975110, 29976090, 29975270, 29974910, 29974992, 29974976, 29975582, 29975367, 29976038, 29974917, 29976913, 29976388, 29974989, 29978589, 29977088, 29975038, 29977707, 29977980, 29974970], "E": [31234259]}, "name": "E. Days of Floral Colours", "statement": "The Floral Clock has been standing by the side of Mirror Lake for years.\r\nThough unable to keep time, it reminds people of the passage of time and\r\nthe good old days.On the rim of the Floral Clock are flowers, numbered\r\nfrom to clockwise, each of which has a colour among all possible ones.\r\nFor each colour, there are exactly two flowers with it, the between\r\nwhich . Additionally, if flowers and are of the same colour, then\r\nflowers opposite to and opposite to should be of the same colour as well\r\nsymmetry is beautiful!Formally, the between two flowers is plus the\r\nnumber of flowers on the minor arc (or semicircle) between them. Below\r\nis a possible arrangement with that cover all possibilities. The of an\r\narrangement is defined to be the product of the lengths of flower\r\nsegments separated by all opposite flowers of the same colour. In other\r\nwords, in order to compute the beauty, we remove from the circle all\r\nflowers that have the same colour as flowers opposite to them. Then, the\r\nbeauty is the product of lengths of all remaining segments. Note that we\r\ninclude segments of length in this product. If there are no flowers that\r\nhave the same colour as flower opposite to them, the beauty equals . For\r\ninstance, the of the above arrangement equals the segments are , , and\r\n.While keeping the constraints satisfied, there may be lots of different\r\narrangements. Find out the sum of over all possible arrangements, modulo\r\n. Two arrangements are considered different, if a pair () exists such\r\nthat flowers and are of the same colour in one of them, but not in the\r\nother.\r\n", "solutions": ["//by yjz\n#include<bits/stdc++.h>\nusing namespace std;\n#define FF first\n#define SS second\n#define PB push_back\n#define MP make_pair\n#define bged(v) (v).begin(),(v).end()\n#define foreach(it,s) for(__typeof((s).begin()) it=(s).begin();it!=(s).end();it++)\ntypedef long long ll;\nconst int Imx=2147483647;\nconst ll Lbig=2e18;\nconst int mod=998244353;\nconst int proot=3;\n//My i/o stream\nstruct fastio\n{\n\tchar s[100000];\n\tint it,len;\n\tfastio(){it=len=0;}\n\tinline char get()\n\t{\n\t\tif(it<len)return s[it++];it=0;\n\t\tlen=fread(s,1,100000,stdin);\n\t\tif(len==0)return EOF;else return s[it++];\n\t}\n\tbool notend()\n\t{\n\t\tchar c=get();\n\t\twhile(c==' '||c=='\\n')c=get();\n\t\tif(it>0)it--;\n\t\treturn c!=EOF;\n\t}\n}_buff;\n#define geti(x) x=getnum()\n#define getii(x,y) geti(x),geti(y)\n#define getiii(x,y,z) getii(x,y),geti(z)\n#define puti(x) putnum(x),putchar(' ')\n#define putii(x,y) puti(x),puti(y)\n#define putiii(x,y,z) putii(x,y),puti(z)\n#define putsi(x) putnum(x),putchar('\\n')\n#define putsii(x,y) puti(x),putsi(y)\n#define putsiii(x,y,z) putii(x,y),putsi(z)\ninline ll getnum()\n{\n\tll r=0;bool ng=0;char c;c=_buff.get();\n\twhile(c!='-'&&(c<'0'||c>'9'))c=_buff.get();\n\tif(c=='-')ng=1,c=_buff.get();\n\twhile(c>='0'&&c<='9')r=r*10+c-'0',c=_buff.get();\n\treturn ng?-r:r;\n}\ntemplate<class T> inline void putnum(T x)\n{\n\tif(x<0)putchar('-'),x=-x;\n\tregister short a[20]={},sz=0;\n\twhile(x)a[sz++]=x%10,x/=10;\n\tif(sz==0)putchar('0');\n\tfor(int i=sz-1;i>=0;i--)putchar('0'+a[i]);\n}\ninline char getreal(){char c=_buff.get();while(c==' '||c=='\\n')c=_buff.get();return c;}\n\nint n,g[50111],g0[50111],g1[50111],g2[50111];\nint f0[50111],f1[50111],f2[50111];\n\nconst int FFTmx=150111;\nconst int FFTpmx=131072;\nint bitrev_pre[FFTmx],bitrev[FFTmx],fsz;\nint w_pre[FFTmx],w[FFTmx];\nvoid FFTinit(int sz)\n{\n\tfsz=1;\n\twhile(fsz<sz)fsz<<=1;\n\tint tmp=__builtin_ctz(FFTpmx/fsz);\n\tfor(int i=0;i<fsz;i++)bitrev[i]=bitrev_pre[i]>>tmp;\n}\nll qpow(ll x,ll k){return k==0?1:qpow(x*x%mod,k>>1)*(k&1?x:1)%mod;}\nvoid FFT(int a[],int coef)\n{\n\tfor(int i=0;i<fsz;i++)if(i<bitrev[i])swap(a[i],a[bitrev[i]]);\n\tfor(int l=1;l<fsz;l<<=1)\n\t{\n\t\tint l2=l+l,u=FFTpmx/l2;\n\t\tif(coef==1)for(int j=0;j<l;j++)w[j]=w_pre[u*j];\n\t\telse for(int j=0;j<l;j++)w[j]=w_pre[FFTpmx-u*j];\n\t\tfor(int i=0;i<fsz;i+=l2)\n\t\t{\n\t\t\tfor(int j=0;j<l;j++)\n\t\t\t{\n\t\t\t\tint tmp=1ll*a[i+l+j]*w[j]%mod;\n\t\t\t\ta[i+l+j]=a[i+j]-tmp<0?a[i+j]-tmp+mod:a[i+j]-tmp;\n\t\t\t\ta[i+j]=a[i+j]+tmp>=mod?a[i+j]+tmp-mod:a[i+j]+tmp;\n\t\t\t}\n\t\t}\n\t}\n\tif(coef==-1)\n\t{\n\t\tll inv=qpow(fsz,mod-2);\n\t\tfor(int i=0;i<fsz;i++)a[i]=a[i]*inv%mod;\n\t}\n}\nvoid FFTprecalc()\n{\n\tfor(int i=1;i<FFTpmx;i++)bitrev_pre[i]=bitrev_pre[i>>1]>>1|(i&1?FFTpmx>>1:0);\n\tw_pre[0]=1;\n\tint ww=qpow(proot,(mod-1)/FFTpmx);\n\tfor(int i=1;i<=FFTpmx;i++)w_pre[i]=1ll*w_pre[i-1]*ww%mod;\n}\nint ta[FFTmx],tb[FFTmx],tc[FFTmx];\nvoid push(int a[],int asz,int b[],int bsz,int c[],int cl,int cr)\n{\n\tFFTinit(asz+bsz);\n\tfor(int i=0;i<fsz;i++)ta[i]=i<asz?a[i]:0;\n\tfor(int i=0;i<fsz;i++)tb[i]=i<bsz?b[i]:0;\n\tFFT(ta,1);\n\tFFT(tb,1);\n\tfor(int i=0;i<fsz;i++)tc[i]=1ll*ta[i]*tb[i]%mod;\n\tFFT(tc,-1);\n\tassert(cr<=fsz);\n\tfor(int i=cl;i<=cr;i++)c[i]=c[i]+tc[i]>=mod?c[i]+tc[i]-mod:c[i]+tc[i];\n}\nvoid solve(int l,int r)\n{\n//\tcerr<<\"solve:\"<<l<<\",\"<<r<<endl;\n\tif(r-l<=500)\n\t{\n\t\tfor(int i=l;i<=r;i++)\n\t\t{\n\t\t\tfor(int j=l;j<i;j++)\n\t\t\t{\n\t\t\t\tf0[i]=(f0[i]+1ll*f0[j]*g0[i-j]+1ll*f1[j]*g1[i-j])%mod;\n\t\t\t\tf1[i]=(f1[i]+1ll*f0[j]*g1[i-j]+1ll*f1[j]*g2[i-j])%mod;\n\t\t\t\tf2[i]=(f2[i]+1ll*f2[j]*g2[i-j]+1ll*f1[j]*g1[i-j])%mod;\n\t\t\t}\n\t\t\tf0[i]=(f0[i]+g0[i])%mod;\n\t\t\tf1[i]=(f1[i]+g1[i])%mod;\n\t\t\tf2[i]=(f2[i]+g2[i])%mod;\n\t\t}\n\t\treturn;\n\t}\n\tint m=l+r>>1;\n\tsolve(l,m);\n\tpush(f0+l,m+1-l,g0,r+1-l,f0+l,m+1-l,r-l);\n\tpush(f1+l,m+1-l,g1,r+1-l,f0+l,m+1-l,r-l);\n\tpush(f0+l,m+1-l,g1,r+1-l,f1+l,m+1-l,r-l);\n\tpush(f1+l,m+1-l,g2,r+1-l,f1+l,m+1-l,r-l);\n\tpush(f2+l,m+1-l,g2,r+1-l,f2+l,m+1-l,r-l);\n\tpush(f1+l,m+1-l,g1,r+1-l,f2+l,m+1-l,r-l);\n\tsolve(m+1,r);\n}\nint main()\n{\n\tFFTprecalc();\n\tcin>>n;\n//\tn=50000;\n\tg[0]=g[2]=1;\n\tfor(int i=4;i<=n;i+=2)g[i]=(g[i-2]+g[i-4])%mod;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tg0[i+1]=1ll*g[i]*i*i%mod;\n\t\tg1[i+1]=1ll*g[i-1]*i*i%mod;\n\t\tif(i>=2)g2[i+1]=1ll*g[i-2]*i*i%mod;\n\t}\n\tsolve(0,n);\n\tll ans=0;\n\tans=1ll*(g[n-1]+g[n-3])*n%mod*(n-1)%mod*(n-1)%mod;\n\tfor(int i=2;i<n;i++)\n\t{\n\t\tint l=i,r=n-i;\n\t\tll curans=0;\n\t\tcurans+=1ll*g[l-1]*f0[r]%mod;\n\t\tcurans+=1ll*g[l-2]*f1[r]%mod;\n\t\tcurans+=1ll*g[l-2]*f1[r]%mod;\n\t\tif(l>=3)curans+=1ll*g[l-3]*f2[r]%mod;\n\t\tcurans=curans%mod*(i-1)%mod*(i-1)%mod;\n\t\tans+=1ll*curans*i%mod;\n\t}\n\tcout<<ans%mod<<endl;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "dificulty": "3400", "interactive": false}