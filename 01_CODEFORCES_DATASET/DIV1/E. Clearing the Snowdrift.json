{"link": "https://codeforces.com//contest/2097/problem/E", "problemId": "3353169", "problem_idx": "E", "shortId": "2097E", "contest_number": "2097", "problem_submissions": {"F": [317307318, 317309525, 317309102, 317312383, 317316279, 317325883, 317416247, 317580233, 317579495, 317578954, 317578471, 317578170, 317576401, 317575526, 317574565, 317326012], "C": [317301103, 317292740, 317292086, 317292797, 317292557, 317300448, 317293184, 317293569, 317295891, 317295305, 317293328, 317304181, 317299563, 317305951, 317296495, 317302226, 317306136, 317302946], "E": [317299854, 317301108, 317299586, 317304189, 317304951, 317308313, 317313597, 317305664, 317317246, 317322289, 317316806, 317319809, 317318900, 317321182, 317406068, 317321088, 317322736, 317322644], "D": [317296567, 317296050, 317297072, 317301213, 317322631, 317315490, 317304532, 317321371, 317306823, 317303050, 317304957, 317310591, 317315906, 317313581, 317306990, 317307372, 317315011, 317317721], "B": [317283633, 317287516, 317287207, 317285769, 317289590, 317285943, 317288249, 317285819, 317286523, 317288061, 317290152, 317289644, 317297031, 317288240, 317297080, 317298214, 317294941], "A": [317279828, 317283931, 317284029, 317281512, 317283570, 317281675, 317282711, 317280805, 317280621, 317281741, 317281827, 317282878, 317285451, 317282463, 317280852, 317282823, 317324194]}, "editorial_link": "https://codeforces.com//blog/entry/142316", "editorial": "", "name": "E. Clearing the Snowdrift", "statement": "Boy Vasya loves to travel very much. In particular, flying in airplanes\r\nbrings him extraordinary pleasure. He was about to fly to another city,\r\nbut the runway was heavily covered with snow and needed to be\r\ncleared.The runway can be represented as n consecutive sections numbered\r\nfrom 1 to n. The snowstorm was quite strong, but it has already stopped,\r\nso Vasya managed to calculate that the i-th section is covered with a_i\r\nmeters of snow. For such situations, the airport has a snowplow that\r\nworks in a rather unusual way. In one minute, the snowplow can do the\r\nfollowing: Choose a consecutive segment of length no more than d and\r\nremove one meter of snow from the most snow-covered sections.Formally,\r\none can choose 1\r\nle l\r\nle r\r\nle n (r - l + 1\r\nle d). After that, c =\r\nmax\r\n{ a_l, a_{l + 1},\r\nldots , a_r\r\n} is calculated, and if c > 0, then for all i\r\ncolon l\r\nle i\r\nle r such that a_i = c, the value of a_i is decreased by one. Vasya has\r\nbeen preparing for the flight for a long time and wants to understand\r\nhow much time he has left to wait until all sections are completely\r\ncleared of snow. In other words, it is required to calculate the minimum\r\nnumber of minutes that the snowplow will need to achieve a_i = 0 for all\r\ni from 1 to n.\r\n", "solutions": [], "input": "", "output": "", "tags": ["data structures", "dfs and similar", "dp", "greedy"], "dificulty": "3100", "interactive": false, "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\E. Clearing the Snowdrift.json"}