{"link": "https://codeforces.com//contest/1198/problem/D", "problemId": "380938", "problem_idx": "D", "shortId": "1198D", "contest_number": "1198", "problem_submissions": {"F": [58070272, 58050274, 58050240, 58050207, 58050120, 58050094, 58050069, 58050046, 58050006, 58049923, 58049860, 58049749, 58019601, 58020980, 58023606, 58025464, 58030444, 58024358, 58026672, 58028904, 58162403, 58161986, 58161687, 58161301, 58039796, 58039793, 58039362, 58039355, 58039125, 58039123, 58038995, 58038994, 58038812, 58038810, 58038134, 58038133, 58037905, 58037904, 58037582, 58037581, 58037164, 58036882, 58036679, 58032989, 58029905, 58028352, 58028560, 58031397, 58032467, 58052909, 58052897, 58051859, 58036577, 58036553], "D": [58009170, 58008663, 58011717, 58013706, 58003645, 58007012, 58019265, 58015153, 58015508, 58008652, 58007749, 58009878, 58015548, 58020689, 58012149, 58011680, 58013790, 58004635], "E": [58005211, 58006936, 58007024, 58005225, 58009765, 58014251, 58015403, 58012193, 58011483, 58014790, 58013911, 58010339, 58023389, 58007572, 58008131, 57999112, 58014046], "C": [58001259, 57997749, 58001059, 58007271, 58013728, 58018717, 58005961, 58006629, 58048331, 58006607, 57998153, 58003794, 58001508, 58001992, 58002563, 58001272, 58004043, 57999919], "B": [57998572, 58004780, 57994973, 58001340, 57998225, 58001182, 57997197, 58002237, 57998507, 58005059, 58000720, 57998812, 57999975, 57997709, 58009338, 57997300], "A": [57995047, 57995575, 57997676, 57995156, 57995500, 57997301, 57995357, 57998877, 57995263, 58002849, 58004383, 58026838, 57997108, 57995572, 58007187, 57995267]}, "name": "D. Rectangle Painting 1", "statement": "There is a square grid of size n\r\ntimes n. Some cells are colored in black, all others are colored in\r\nwhite. In one operation you can select some rectangle and color all its\r\ncells in white. It costs\r\nmax(h, w) to color a rectangle of size h\r\ntimes w. You are to make all cells white for minimum total cost.\r\n", "solutions": ["//~ while (clock()<=69*CLOCKS_PER_SEC)\n//~ #pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"O3\")\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\nusing namespace std;\n\ntemplate <typename T>\nusing ordered_set =\n    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef LOCAL\n~debug() { cerr << endl; }\neni(!=) cerr << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n  *this << \"[\";\n  for (auto it = d.b; it != d.e; ++it)\n    *this << \", \" + 2 * (it == d.b) << *it;\n  ris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define shandom_ruffle random_shuffle\n\nusing ll=long long;\nusing pii=pair<int,int>;\nusing pll=pair<ll,ll>;\nusing vi=vector<int>;\nusing vll=vector<ll>;\nconst int nax=57;\n\nint n;\n\nchar wcz[nax];\n\nint sum[nax][nax];\n\nint dp[nax][nax][nax][nax];\n\nint licz(int a, int b, int x, int y)\n{\n\ta--;\n\tb--;\n\treturn sum[x][y]-sum[a][y]-sum[x][b]+sum[a][b];\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%s\", wcz+1);\n\t\tfor (int j=1; j<=n; j++)\n\t\t\tsum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+(wcz[j]=='#');\n\t}\n\t//~ debug() << imie(licz(1, n, 1, n));\n\tfor (int j=1; j<=n; j++)\n\t{\n\t\tfor (int i=j; i; i--)\n\t\t{\n\t\t\tfor (int b=1; b<=n; b++)\n\t\t\t{\n\t\t\t\tfor (int a=b; a; a--)\n\t\t\t\t{\n\t\t\t\t\tif (!licz(i, a, j, b))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tdp[i][a][j][b]=max(b-a+1, j-i+1);\n\t\t\t\t\tif (b-a>j-i)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (int x=a; x<b; x++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdp[i][a][j][b]=min(dp[i][a][j][b], dp[i][a][j][x]+dp[i][x+1][j][b]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (int x=i; x<j; x++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdp[i][a][j][b]=min(dp[i][a][j][b], dp[i][a][x][b]+dp[x+1][a][j][b]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//~ debug() << i << \" \" << a << \" \" << j << \" \" << b << \"  \" << dp[i][a][j][b];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", dp[1][1][n][n]);\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2300", "interactive": false}