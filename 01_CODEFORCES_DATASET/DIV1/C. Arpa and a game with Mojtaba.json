{"link": "https://codeforces.com//contest/850/problem/C", "problemId": "120877", "problem_idx": "C", "shortId": "850C", "contest_number": "850", "problem_submissions": {"E": [30079147, 30079321, 30076520, 30070445, 30072131, 30067095, 30068181, 30093004, 30078840, 30069238, 30121826, 30081582, 30080429, 30062854, 30075459, 30063501], "C": [30074039, 30065285, 30068848, 30063413, 30062879, 30062229, 30071925, 30062969, 30065613, 30065926, 30075756, 30070129, 30073758, 30065190, 30073153, 30074735, 30076259, 30065744, 30070888], "A": [30069678, 30056916, 30058041, 30057755, 30055909, 30056498, 30059213, 30058881, 30065583, 30059587, 30062587, 30059533, 30059618, 30080413, 30064068, 30056411, 30066966, 30056135, 30056956, 30066903], "B": [30068250, 30061127, 30081762, 30072437, 30058838, 30066243, 30062293, 30085846, 30070994, 30120525, 30071520, 30064497, 30064013, 30059633, 30059864, 30081342, 30120546, 30077952, 30076711], "F": [30064851, 30071271, 30075755, 30077357, 30079821, 30089510, 30071025], "D": [30071702, 30081255, 30092254, 30077349, 30092387, 30073378, 30075318, 30101681, 30076176, 30093362, 30082776, 30070573]}, "name": "C. Arpa and a game with Mojtaba", "statement": "Mojtaba and Arpa are playing a game. They have a list of numbers in the\r\ngame.In a player\u2019s turn, he chooses a number (where is a prime number\r\nand is a positive integer) such that divides at least one number in the\r\nlist. For each number in the list divisible by , call it , the player\r\nwill delete and add to the list. The player who can not make a valid\r\nchoice of and loses.Mojtaba starts the game and the players\r\nalternatively make moves. Determine which one of players will be the\r\nwinner if both players play optimally.\r\n", "solutions": ["#include<map>\n#include<set>\n#include<vector>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long LL;\nconst int N = 100 + 10;\n\nint n;\nint a[N];\nint mex[N];\nmap<int, int> sg;\n\nvoid solve(long long x)\n{\n    if (sg.count(x)) return;\n\n    vector<int> mex(30, 0);\n    for(int i = 0; x >> i; ++ i) {\n        long long nx = ((x >> (i + 1)) | (x & ((1 << i) - 1)));\n        solve(nx);\n        mex[sg[nx]] = 1;\n    }\n    int ret = 0;\n    for( ; mex[ret]; ++ ret);\n    sg[x] = ret;\n}\n\nint main()\n{\n    cin >> n;\n    set<int> primes;\n    for(int i = 0; i < n; ++ i) {\n        cin >> a[i];\n        int t = a[i];\n        for(int j = 2; j * j <= t; ++ j) {\n            if (t % j == 0) {\n                primes.insert(j);\n                while(t % j == 0) t /= j;\n            }\n        }\n        if (t > 1) primes.insert(t);\n    }\n\n    sg[0] = 0;\n    int ret = 0;\n    for(auto e: primes) {\n        int state = 0;\n        for(int i = 0; i < n; ++ i) {\n            int cnt = 0;\n            while(a[i] % e == 0) {\n                a[i] /= e;\n                cnt ++;\n            }\n            if (cnt) state |= (1 << (cnt - 1));\n        }\n        //cout << e << ' ' << state << endl;\n        solve(state);\n        ret ^= sg[state];\n    }\n    //for(int i = 0; i < 5; ++ i) cout << i << ' ' << sg[i] << endl;\n\n    cout << (ret ? \"Mojtaba\" : \"Arpa\") << endl;\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "dp", "games"], "dificulty": "2200", "interactive": false}