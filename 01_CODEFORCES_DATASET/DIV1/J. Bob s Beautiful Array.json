{"link": "https://codeforces.com//contest/1599/problem/J", "problemId": "1136889", "problem_idx": "J", "shortId": "1599J", "contest_number": "1599", "problem_submissions": {"J": [131341071], "I": [131324833], "F": [131321008], "H": [131309947], "C": [131304492], "A": [131303141], "B": [], "D": [], "E": [], "G": []}, "name": "J. Bob s Beautiful Array", "statement": "Bob really likes playing with arrays of numbers. That\u2019s why for his\r\nbirthday, his friends bought him a really interesting machine an array\r\nbeautifier. The array beautifier takes an array A consisting of N\r\nintegers, and it outputs a new array B of length N that it constructed\r\nbased on the array given to it. The array beautifier constructs the new\r\narray in the following way: it takes two numbers from the original array\r\nand writes their sum to the end of the new array. It does this step N\r\ntimes - resulting in an output array of length N. During this process,\r\nthe machine can take the same index multiple times in different steps.\r\nBob was very excited about the gift that his friends gave him, so he put\r\nhis favorite array in the machine. However, when the machine finished,\r\nBob was not happy with the resulting array. He misses his favorite array\r\nvery much, and hopes to get it back. Given the array that the machine\r\noutputted, help Bob find an array that could be the original array that\r\nhe put in the machine. Sometimes the machine makes mistakes, so it is\r\npossible that no appropriate input array exists for the array it has\r\noutputted. In such case, let Bob know that his array is forever lost.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define L(i, j, k) for (int i = (j); i <= (k); ++i) \n#define R(i, j, k) for (int i = (j); i >= (k); --i)  \n#define ll long long\n#define vi vector < int > \n#define sz(a) ((int) (a).size())\nusing namespace std;\nconst int N = 1e6 + 7, mod = 1e9 + 7, inv6 = (mod + 1) / 6, W = 2;\nint n, a[N], ns[N];\nvoid work (int x, int y, int z) {\n\tint sum = (a[x] + a[y] + a[z]) / 2, tp = 3;\n\tns[1] = sum - a[x], ns[2] = sum - a[y], ns[3] = sum - a[z];\n\tL(i, 1, n) if(i != x && i != y && i != z) \n\t\tns[++tp] = a[i] - ns[1];\n\tcout << \"YES\\n\";\n\tL(i, 1, n) cout << ns[i] << ' ';\n\tcout << '\\n';\n}\nint z;\nshort h[N * 10][11], s[N];\nint arr[N];\nbool vis[N * 11], vs[N];\nvoid dfs (int x, int k, int sum) {\n\tif(k == z + 1) {\n\t\tif(vis[sum])  {\n\t\t\tint tot = 0;\n\t\t\tL(i, 0, z - 1) vs[h[sum][i]] ^= 1;\n\t\t\tL(i, 0, z - 1) vs[s[i]] ^= 1;\n\t\t\tvi S1, S2; \n\t\t\tL(i, 0, z - 1) \n\t\t\t\tif(vs[h[sum][i]]) \n\t\t\t\t\tS1.push_back(h[sum][i]);\n\t\t\tL(i, 0, z - 1) \n\t\t\t\tif(vs[s[i]]) \n\t\t\t\t\tS2.push_back(s[i]);\n\t\t\tassert (sz(S1) == sz(S2));\n\t\t\tL(i, 0, sz(S1) - 1) arr[++tot] = S1[i], arr[++tot] = S2[i];\n\t\t\tcout << \"YES\\n\";\n\t\t\tns[1] = 0;\n\t\t\tL(i, 2, tot) ns[i] = a[arr[i - 1]] - ns[i - 1];\n\t\t\tL(i, 1, n) if(!vs[i]) ++tot, ns[tot] = a[i];\n\t\t\tassert (tot == n);\n\t\t\tL(i, 1, n) cout << ns[i] << ' ';\n\t\t\texit(0);\n\t\t\treturn ;\n\t\t}\n\t\tL(i, 0, z - 1) h[sum][i] = s[i];\n\t\tvis[sum] = 1;\n\t\treturn ;\n\t}\n\tL(i, x + 1, n) \n\t\ts[k - 1] = i, dfs (i, k + 1, sum + a[i]);\t\n}\nint main () {\n\tios::sync_with_stdio(false);\n\tcin.tie(0); cout.tie(0); \n\tcin >> n;\n\tL(i, 1, n) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tL(i, 1, n - 1) {\n\t\tif(a[i] == a[i + 1]) {\n\t\t\tns[1] = 0, ns[2] = a[i];\n\t\t\tint tp = 2;\n\t\t\tL(j, 1, n) \n\t\t\t\tif(j != i && j != i + 1) \n\t\t\t\t\tns[++tp] = a[j];\n\t\t\tcout << \"YES\\n\";\n\t\t\tL(j, 1, n) cout << ns[j] << ' ';\n\t\t\tcout << '\\n';\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tsort(a + 1, a + n + 1, [&] (int x, int y) {\n\t\treturn (x & 1) < (y & 1);\n\t});\n\t\n\tL(i, 1, n) \n\t\tL(j, i + 1, n) \n\t\t\tL(k, j + 1, n) \n\t\t\t\tif(!((a[i] + a[j] + a[k]) & 1)) \n\t\t\t\t\treturn work (i, j, k), 0;\n\t\n\tz = min(9, n / 2);\n\tdfs (0, 1, 0);\n\tcout << \"NO\\n\";\n\treturn 0;\n} "], "input": "", "output": "", "tags": ["bitmasks", "brute force", "greedy"], "dificulty": "2600", "interactive": false}