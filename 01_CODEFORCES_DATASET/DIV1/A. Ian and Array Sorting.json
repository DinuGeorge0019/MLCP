{
    "link": "https://codeforces.com//contest/1815/problem/A",
    "problemId": "1871718",
    "problem_idx": "A",
    "shortId": "1815A",
    "contest_number": "1815",
    "problem_submissions": {
        "F": [
            201555670,
            201558612,
            201561386,
            201567730,
            201566757,
            202046482,
            201726445,
            201935453,
            201585873
        ],
        "E": [
            201530172,
            201528832,
            201551207,
            201544435,
            201543833,
            201554402,
            201555894,
            201557703,
            201554929,
            201556101,
            201557247,
            201555003,
            201557950,
            201556139,
            201563294,
            201546853,
            201542261,
            201546492,
            201570815
        ],
        "D": [
            201513083,
            201506968,
            201521370,
            201517487,
            201522017,
            201533871,
            201533067,
            201531357,
            201527346,
            201537489,
            201539887,
            201539975,
            201543678,
            201546232,
            201566677,
            201568923,
            201534451
        ],
        "C": [
            201497483,
            201499771,
            201506268,
            201502220,
            201510933,
            201510356,
            201506402,
            201517502,
            201515562,
            201517401,
            201523915,
            201524806,
            201533994,
            201523878,
            201503778,
            201512320,
            201510486,
            201513744
        ],
        "B": [
            201489690,
            201490417,
            201495395,
            201494655,
            201496814,
            201493671,
            201494756,
            201502664,
            201501592,
            201503253,
            201515920,
            201510149,
            201510749,
            201492437,
            201503376,
            201496616,
            201500693
        ],
        "A": [
            201483243,
            201480897,
            201480866,
            201480768,
            201483195,
            201480859,
            201480836,
            201481081,
            201480782,
            201481965,
            201483607,
            201482857,
            201481459,
            201480707,
            201481969,
            201481110,
            201483462
        ]
    },
    "name": "A. Ian and Array Sorting",
    "statement": "To thank Ian, Mary gifted an array a of length n to Ian. To make himself\r\nlook smart, he wants to make the array in non-decreasing order by doing\r\nthe following finitely many times: he chooses two adjacent elements a_i\r\nand a_{i+1} (1\r\nle i\r\nle n-1), and increases both of them by 1 or decreases both of them by 1.\r\nNote that, the elements of the array become negative.As a smart person,\r\nyou notice that, there are some arrays such that Ian cannot make it\r\nbecome non-decreasing order! Therefore, you decide to write a program to\r\ndetermine if it is possible to make the array in non-decreasing order.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 09.04.2023 10:44:29       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define debug(...) 42\n#endif\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<long long> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    if (n % 2 == 1) {\n      cout << \"YES\" << '\\n';\n    } else {\n      long long s = 0;\n      for (int i = 0; i < n; i += 2) {\n        s += a[i] - a[i + 1];\n      }\n      cout << (s <= 0 ? \"YES\" : \"NO\") << '\\n';\n    }\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Ian and Array Sorting.json",
    "editorial_link": "https://codeforces.com//blog/entry/114899",
    "editorial": "EditorialWe consider the difference array (). Then the original array is\r\nnon-decreasing if and only if all elements of the difference array is\r\nnon-negative. We can see that either is increased by and is decreased by\r\nor vice versa for , is increased or decreased by or is increased or\r\ndecreased by .If is odd, then is odd. What we can do is to increase and\r\nenough number of times, and then do increase by and decrease by or vice\r\nversa enough times to distribute the values to other elements of . Doing\r\nthis, we can make all of the elements of non-negative, which is what we\r\nwant. So we output \u00e2\u0080\u0099YES\u00e2\u0080\u0099 no matter what for odd .For even , is even. So\r\nby increasing and enough number of times, then distributing, we can only\r\nensure that the elements of with even indices are non-negative. Since\r\nthe only operation that affects odd indices is increasing by and\r\ndecreasing by or vice versa, we can see that the sum of the elements of\r\nwith odd indices will not change. If the sum of the elements of with odd\r\nindices is at least , we can distribute the values such that in the end,\r\nall of them are non-negative, so we should output \u00e2\u0080\u0099YES\u00e2\u0080\u0099. But if the sum\r\nof elements of with odd indices is negative, there must exist a negative\r\nin the end, and we should output \u00e2\u0080\u0099NO\u00e2\u0080\u0099.\r\n"
}