{
    "link": "https://codeforces.com//contest/878/problem/D",
    "problemId": "130660",
    "problem_idx": "D",
    "shortId": "878D",
    "contest_number": "878",
    "problem_submissions": {
        "E": [
            31763989,
            31766344,
            32084568
        ],
        "D": [
            31756901,
            31762689,
            31754129,
            31756452,
            31772004,
            31761487,
            31761339,
            31761633,
            31767096,
            31789313,
            31769411,
            31767240,
            31764633,
            31929002,
            31911110,
            31754793
        ],
        "C": [
            31752735,
            31757112,
            31751479,
            31747354,
            31752922,
            31752815,
            31757860,
            31761336,
            31759682,
            31761695,
            31751021,
            31760902,
            31758288,
            31764916,
            31764825,
            31755837
        ],
        "B": [
            31745139,
            31746290,
            31753553,
            31777437,
            31754012,
            31756298,
            31752132,
            31754987,
            31751846,
            31753351,
            31760932,
            31770059,
            31750086,
            31755233,
            31753552,
            31762144
        ],
        "A": [
            31741277,
            31741357,
            31741777,
            31741474,
            31742096,
            31741956,
            31741731,
            31741469,
            31743565,
            31743908,
            31741393,
            31741983,
            31741174,
            31745067,
            31741499,
            31745657,
            31745328,
            31741742,
            31742765
        ]
    },
    "name": "D. Magic Breeding",
    "statement": "Nikita and Sasha play a computer game where you have to breed some\r\nmagical creatures. Initially, they have creatures numbered from to .\r\nCreatures have different characteristics.Sasha has a spell that allows\r\nto create a new creature from two given creatures. Each of its\r\ncharacteristics will be equal to the maximum of the corresponding\r\ncharacteristics of used creatures. Nikita has a similar spell, but in\r\nhis spell, each characteristic of the new creature is equal to the\r\nminimum of the corresponding characteristics of used creatures. A new\r\ncreature gets the smallest unused number.They use their spells and are\r\ninterested in some characteristics of their new creatures. Help them\r\nfind out these characteristics.\r\n",
    "solutions": [
        "#include <stdio.h>  \n#include <algorithm>  \n#include <assert.h>\n#include <bitset>\n#include <cmath>  \n#include <complex>  \n#include <deque>  \n#include <functional>  \n#include <iostream>  \n#include <limits.h>  \n#include <map>  \n#include <math.h>  \n#include <queue>  \n#include <set>  \n#include <stdlib.h>  \n#include <string.h>  \n#include <string>  \n#include <time.h>  \n#include <unordered_map>  \n#include <unordered_set>  \n#include <vector>  \n\n#pragma warning(disable:4996)  \n#pragma comment(linker, \"/STACK:336777216\")  \nusing namespace std;\n\n#define mp make_pair  \n#define all(x) (x).begin(), (x).end()  \n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 17;\nconst ll MOD = 1000000009;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-8;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<n;i++)\n\nbitset<4096> chk[100050];\nint in[12][100050];\nint main() {\n\tint N, K, Q, i, j;\n\tscanf(\"%d %d %d\", &N, &K, &Q);\n\tfor (i = 0; i < K; i++) for (j = 1; j <= N; j++) scanf(\"%d\", &in[i][j]);\n\n\tint c = K;\n\tfor (i = 1; i <= K; i++) for (j = 0; j < (1 << K); j++) chk[i][j] = !!(j & (1 << (i-1)));\n\twhile (Q--) {\n\t\tint t1, t2, t3;\n\t\tscanf(\"%d %d %d\", &t1, &t2, &t3);\n\t\tif (t1 == 1) {\n\t\t\tc++;\n\t\t\tchk[c] = chk[t3] & chk[t2];\n\t\t}\n\t\tif(t1 == 2) {\n\t\t\tc++;\n\t\t\tchk[c] = chk[t3] | chk[t2];\n\t\t}\n\t\tif (t1 == 3) {\n\t\t\tint u[12];\n\t\t\tfor (i = 0; i < K; i++) u[i] = i;\n\t\t\tsort(u, u + K, [&](int a, int b) {\n\t\t\t\treturn in[a][t3] < in[b][t3];\n\t\t\t});\n\n\t\t\tint v = 0;\n\t\t\tfor (i = 0; i < K; i++) {\n\t\t\t\tv |= 1 << u[i];\n\t\t\t\tif (chk[t2][v]) break;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", in[u[i]][t3]);\n\t\t}\n\t}\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "bitmasks"
    ],
    "dificulty": "2900",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\D. Magic Breeding.json",
    "editorial_link": "https://codeforces.com//blog/entry/55435",
    "editorial": "Let\u00e2\u0080\u0099s consider a special case of the problem: all are 0 or 1. In this\r\ncase there are at most different characteristics. So we can use trivial\r\nsolution, it works in . Also we can sped up it using bitset.Now we\r\nreduce the problem to this special case. We have a characteristic with\r\nvalues . Let\u00e2\u0080\u0099s make characteristics from it. -th of them is one if and\r\nonly if the original characteristic is at least , and zero otherwise.\r\nNew characteristics behave correctly during our operations, and we can\r\nefficiently get old characteristics from them.Number of characteristics\r\nhas increased, but is doesn\u00e2\u0080\u0099t matter for our solution for the special\r\ncase. This solution works in .\r\n"
}