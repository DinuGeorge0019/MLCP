{
    "link": "https://codeforces.com//contest/321/problem/A",
    "problemId": "3263",
    "problem_idx": "A",
    "shortId": "321A",
    "contest_number": "321",
    "problem_submissions": {
        "D": [
            3996276,
            3980026,
            3983272,
            3983312,
            12592698,
            3984131
        ],
        "E": [
            3980136,
            4452055,
            3980389,
            3985877,
            3982432,
            3983276,
            3983985,
            3983546,
            3989402,
            3982283,
            3982901,
            3987486,
            3986621,
            3986597,
            3984324
        ],
        "B": [
            3977018,
            3976497,
            3975346,
            3975457,
            3977862,
            3977933,
            3976248,
            3977096,
            3975835,
            3975367,
            3981509,
            3977308,
            3981308,
            3976604,
            3978354,
            23607133
        ],
        "C": [
            3976574,
            3973635,
            80179378,
            80179360,
            80178543,
            80177368,
            3977407,
            3978721,
            3979609,
            3977413,
            3979117,
            3980301,
            3977480,
            3978832,
            3979230,
            3979055,
            3978017,
            3980667,
            3983932,
            3980825
        ],
        "A": [
            3973735,
            3982224,
            3988924,
            3983503,
            3973922,
            3973057,
            3973436,
            3974764,
            3973866,
            3973513,
            3973909,
            3973666,
            3985547,
            3973654,
            3974568
        ]
    },
    "name": "A. Ciel and Robot",
    "statement": "Fox Ciel has a robot on a 2D plane. Initially it is located in (0, 0).\r\nFox Ciel code a command to it. The command was represented by string .\r\nEach character of is one move operation. There are four move operations\r\nat all: ”: go up, (x, y) (x, y+1); ”: go down, (x, y) (x, y-1); ”: go\r\nleft, (x, y) (x-1, y); ”: go right, (x, y) (x+1, y). The robot will do\r\nthe operations in from left to right, and repeat it infinite times. Help\r\nFox Ciel to determine if after some steps the robot will located in .\r\n",
    "solutions": [
        "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <vector>\n#include <string>\nusing namespace std;\n\nbool can[400][400];\n\nint main() {\n\tint a, b;\n\tcin >> a >> b;\n\tstring s;\n\tcin >> s;\n\tint dx = 0, dy = 0;\n\n\tcan[200 + dx][200 + dy] = true;\n\tfor (int i = 0; i < (int) s.size(); ++i) {\n\t\tif (s[i] == 'U')\n\t\t\t++dy;\n\t\telse if (s[i] == 'D')\n\t\t\t--dy;\n\t\telse if (s[i] == 'L')\n\t\t\t--dx;\n\t\telse if (s[i] == 'R')\n\t\t\t++dx;\n\t\tcan[200 + dx][200 + dy] = true;\n\t}\n\n//a*dx,a*dy\n\n\tfor (int ia = a - 180; ia <= a + 180; ++ia) {\n\t\tfor (int ib = b - 180; ib <= b + 180; ++ib) {\n\t\t\tint c[2], n = 0;\n\t\t\tif (dx == 0) {\n\t\t\t\tif (ia != 0)\n\t\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (ia % dx != 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tc[n++] = ia / dx;\n\t\t\t}\n\n\t\t\tif (dy == 0) {\n\t\t\t\tif (ib != 0)\n\t\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (ib % dy != 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tc[n++] = ib / dy;\n\t\t\t}\n\n\t\t\tif (n == 2 && c[0] != c[1])\n\t\t\t\tcontinue;\n\t\t\tif (n > 0 && c[0] < 0)\n\t\t\t\tcontinue;\n\n\t\t\tint da = a - ia, db = b - ib;\n\t\t\tif (can[200 + da][200 + db]) {\n\t\t\t\tcout << \"Yes\" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tcout << \"No\" << endl;\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "implementation",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Ciel and Robot.json",
    "editorial_link": "https://codeforces.com//blog/entry/8192",
    "editorial": "Note that after Ciel execute string s, it will moves (dx, dy). And for\r\neach repeat, it will alway moves (dx, dy). So the total movement will be\r\nk * (dx, dy) + (dx[p], dy[p]) which (dx[p], dy[p]) denotes the movement\r\nafter execute first p characters. We can enumerate p since (0 <= p < |s|\r\n<= 100), and check if there are such k exists. Note that there are some\r\ntricks: Many people failed on this test case (which no included in the\r\npretest):\r\n",
    "hint": []
}