{"link": "https://codeforces.com//contest/1599/problem/A", "problemId": "1136880", "problem_idx": "A", "shortId": "1599A", "contest_number": "1599", "problem_submissions": {"J": [131341071], "I": [131324833], "F": [131321008], "H": [131309947], "C": [131304492], "A": [131303141]}, "name": "A. Weights", "statement": "You are given an array A of length N weights of masses A_1, A_2...A_N.\r\nNo two weights have the same mass. You can put every weight on one side\r\nof the balance (left or right). You don\u2019t have to put weights in order\r\nA_1,...,A_N. There is also a string S consisting of characters \"L\" and\r\n\"R\", meaning that after putting the i-th weight (not A_i, but i-th\r\nweight of your choice) left or right side of the balance should be\r\nheavier. Find the order of putting the weights on the balance such that\r\nrules of string S are satisfied.\r\n", "solutions": ["#include<bits/stdc++.h>\n#define L(i, j, k) for (int i = (j); i <= (k); ++i) \n#define R(i, j, k) for (int i = (j); i >= (k); --i)  \n#define ll long long\n#define vi vector < int > \n#define sz(a) ((int) (a).size())\nusing namespace std;\nconst int N = 2e5 + 7;\nint n, a[N], cf[N];\nchar s[N];\nint rk[N];\nchar op[N];\nint main () {\n\tios::sync_with_stdio(false);\n\tcin.tie(0); cout.tie(0); \n\tcin >> n;\n\tL(i, 1, n) cin >> a[i];\n\tsort(a + 1, a + n + 1);\n\tcin >> (s + 1);\n\tL(i, 1, n) {\n\t\tif(s[i] != s[i - 1]) { \n\t\t\trk[i] = i, op[i] = s[i];\n\t\t}\n\t\telse {\n\t\t\tcf[i - 1] = 1, rk[i] = 1;\n\t\t\tif(i % 2 == 0) op[i] = s[i] == 'L' ? 'R' : 'L';\n\t\t\telse op[i] = s[i];\n\t\t}\n\t}\n\tR(i, n, 1) cf[i] += cf[i + 1];\n\tL(i, 1, n) rk[i] += cf[i];\n\tL(i, 1, n) cout << a[rk[i]] << \" \" << op[i] << \"\\n\";\n\treturn 0;\n} "], "input": "", "output": "", "tags": ["constructive algorithms", "greedy", "two pointers"], "dificulty": "2600", "interactive": false}