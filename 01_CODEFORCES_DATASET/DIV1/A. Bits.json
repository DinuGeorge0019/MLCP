{"link": "https://codeforces.com//contest/484/problem/A", "problemId": "16628", "problem_idx": "A", "shortId": "484A", "contest_number": "484", "problem_submissions": {"C": [8575684, 8569482, 8574840, 8573079, 8568696, 8568968, 8568953, 8573362, 8573344, 8575027, 8567400, 8571965, 8576498, 8577415], "D": [8571455, 8567671, 8570841, 8566590, 8573430, 8573737, 8570084, 8567140, 8569185, 8572829, 8569478, 8568570, 8570839, 8567603, 8570405, 8575447, 8576600, 8570465], "E": [8569351, 8573776, 8571793, 8588317, 8599514, 8573714, 8570287, 8574072, 8576131, 8573638, 8564834, 8574687], "B": [8564067, 8565086, 8563436, 8564295, 8563987, 8571069, 8564862, 8565541, 8565694, 8569521, 8562876, 8561100, 8562368, 8567973, 8567211, 8562295, 8570348, 8565013], "A": [8560332, 8562129, 8565876, 8560720, 8562390, 8561095, 8562048, 8560946, 8561471, 8562609, 8565347, 8560391, 8562975, 8560379, 8563409, 8565195, 8567495, 8562118]}, "name": "A. Bits", "statement": "Let\u2019s denote as the number of bits set (\u20191\u2019 bits) in the binary\r\nrepresentation of the non-negative integer .You are given multiple\r\nqueries consisting of pairs of integers and . For each query, find the ,\r\nsuch that , and is maximum possible. If there are multiple such numbers\r\nfind the smallest of them.\r\n", "solutions": ["#include <iostream>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <cstdio>\n#include <queue>\n#include <set>\n#include <map>\n#include <fstream>\n#include <cstdlib>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <numeric>\n\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define forn(i, n) for (int i = 0; i < (int)(n); ++i)\n#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)\n#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long long i64;\ntypedef vector<i64> vi64;\ntypedef vector<vi64> vvi64;\n\nint main() {\n    ios::sync_with_stdio(false);\n    cout.precision(10);\n    cout << fixed;\n#ifdef LOCAL_DEFINE\n    freopen(\"input.txt\", \"rt\", stdin);\n#endif\n\n    int N;\n    cin >> N;\n    forn(i, N) {\n        i64 L, R;\n        cin >> L >> R;\n        i64 add = 0;\n        ford(k, 60) {\n            i64 M = (1LL << k) - 1;\n            if (L <= M && M <= R) {\n                add += M;\n                break;\n            }\n            if (L > M) {\n                add += 1LL << k;\n                L -= 1LL << k;\n                R -= 1LL << k;\n            }\n        }\n        cout << add << '\\n';\n    }\n\n#ifdef LOCAL_DEFINE\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\n#endif\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["bitmasks", "constructive algorithms"], "dificulty": "1700", "interactive": false}