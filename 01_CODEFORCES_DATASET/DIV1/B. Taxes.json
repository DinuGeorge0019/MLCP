{
    "link": "https://codeforces.com//contest/736/problem/B",
    "problemId": "82052",
    "problem_idx": "B",
    "shortId": "736B",
    "contest_number": "736",
    "problem_submissions": {
        "C": [
            22555337,
            22554506,
            22542338,
            22535831,
            22538132,
            22542963,
            22545295,
            22544856,
            22555696,
            22545920,
            22543329,
            22542401,
            22544023,
            22544088,
            22549626,
            22550878
        ],
        "E": [
            22551348,
            22559840,
            22556062,
            22550741,
            22535583,
            22555885,
            22560242,
            22554763,
            22557400,
            22557039,
            22555474,
            22555738,
            22555988,
            22544797,
            22548099
        ],
        "B": [
            22540910,
            22533406,
            22531522,
            22550856,
            22532550,
            22535729,
            22553163,
            22533593,
            22532530,
            22545935,
            22532493,
            22534671,
            22535087,
            22535221,
            22540506,
            22540155,
            22534429,
            22543621,
            22539284,
            22532660
        ],
        "D": [
            22539634,
            22548080,
            22543151,
            22542192,
            22547599,
            22543734,
            22549554,
            22547719,
            22543270,
            22554259,
            22553954,
            22555670,
            22555340
        ],
        "A": [
            22535135,
            22530967,
            22530408,
            22545237,
            22532700,
            22532341,
            22531205,
            22530536,
            22540413,
            22530773,
            22536724,
            22531871,
            22532439,
            22531278,
            22530654,
            22531077,
            22533541,
            22530767,
            22530574
        ]
    },
    "name": "B. Taxes",
    "statement": "Mr. Funt now lives in a country with a very specific tax laws. The total\r\nincome of mr. Funt during this year is equal to () burles and the amount\r\nof tax he has to pay is calculated as the maximum divisor of (not equal\r\nto , of course). For example, if then Funt has to pay burles, while for\r\nhe needs to pay and if he pays only burle.As mr. Funt is a very\r\nopportunistic person he wants to cheat a bit. In particular, he wants to\r\nsplit the initial in several parts (here is arbitrary, even is allowed)\r\nand pay the taxes for each part separately. He can\u2019t make some part\r\nequal to because it will reveal him. So, the condition should hold for\r\nall from to .Ostap Bender wonders, how many money Funt has to pay (i.e.\r\nminimal) if he chooses and optimal way to split in parts.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<queue>\n#include<bitset>\n#include<utility>\n#include<functional>\n#include<iomanip>\n#include<sstream>\n#include<ctime>\n#include<cassert>\nusing namespace std;\n#define y0 y0z\n#define y1 y1z\n#define yn ynz\n#define j0 j0z\n#define j1 j1z\n#define jn jnz\n#define tm tmz\n#define buli(x) (__builtin_popcountll(x))\n#define bur0(x) (__builtin_ctzll(x))\n#define bul2(x) (63-__builtin_clzll(x))\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define fil(a,b) memset((a),(b),sizeof(a))\n#define cl(a) fil(a,0)\n#define siz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define foreach(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)\n#define rep(i,a,b) for (int i=(a),_ed=(b);i<_ed;i++)\n#define per(i,a,b) for (int i=(b)-1,_ed=(a);i>=_ed;i--)\n#define forg(i,gu) for (int i=gu;~i;i=e[i].next)\n#define pw(x) ((ll(1))<<(x))\n#define upmo(a,b) (((a)=((a)+(b))%mo)<0?(a)+=mo:(a))\n#define mmo(a,b) (((a)=1ll*(a)*(b)%mo)<0?(a)+=mo:(a))\nvoid getre(){int x=0;printf(\"%d\\n\",1/x);}\nvoid gettle(){int res=1;while(1)res<<=1;printf(\"%d\\n\",res);}\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpii;\ntemplate<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}\ntemplate<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}\ntemplate<typename N,typename PN>inline N flo(N a,PN b){return a>=0?a/b:-((-a-1)/b)-1;}\ntemplate<typename N,typename PN>inline N cei(N a,PN b){return a>0?(a-1)/b+1:-(-a/b);}\ntemplate<typename N>N gcd(N a,N b){return b?gcd(b,a%b):a;}\ntemplate<typename N>inline int sgn(N a){return a>0?1:(a<0?-1:0);}\n#if ( ( _WIN32 || __WIN32__ ) && __cplusplus < 201103L)\n#define lld \"%I64d\"\n#else\n#define lld \"%lld\"\n#endif\ninline void gn(long long&x){\n\tint sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');c=='-'?(sg=-1,x=0):(x=c-'0');\n\twhile((c=getchar())>='0'&&c<='9')x=x*10+c-'0';x*=sg;\n}\ninline void gn(int&x){long long t;gn(t);x=t;}\ninline void gn(unsigned long long&x){long long t;gn(t);x=t;}\ninline void gn(double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gn(long double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gs(char *s){scanf(\"%s\",s);}\ninline void gc(char &c){while((c=getchar())>126 || c<33);}\ninline void pc(char c){putchar(c);}\n#ifdef JCVB\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define debug(...)\n#endif\ntypedef long long ll;\ntypedef double db;\ninline ll sqr(ll a){return a*a;}\ninline db sqrf(db a){return a*a;}\nconst int inf=0x3f3f3f3f;\nconst db pi=3.14159265358979323846264338327950288L;\nconst db eps=1e-6;\n//const int mo=0;\n//int qp(int a,ll b){int n=1;do{if(b&1)n=1ll*n*a%mo;a=1ll*a*a%mo;}while(b>>=1);return n;}\n\nint isp(int x){\n\tfor (int i=2;i*i<=x;i++)\n\t\tif(x%i==0)return 0;\n\treturn 1;\n}\nint main()\n{\n#ifdef JCVB\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tint _time_jc=clock();\n#endif\n\tint n;\n\tgn(n);\n\tint ans;\n\tif(n==2)ans=1;\n\telse if(n==3)ans=1;\n\telse if(n==4)ans=2;\n\telse if(n==5)ans=1;\n\telse if(n%2==0){\n\t\tans=2;\n\t}else{\n\t\tif(isp(n))ans=1;\n\t\telse if(isp(n-2))ans=2;\n\t\telse{\n\t\t\tans=3;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\n\n#ifdef JCVB\n\tdebug(\"time: %d\\n\",int(clock()-_time_jc));\n#endif\n\treturn 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "math",
        "number theory"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Taxes.json",
    "editorial_link": "https://codeforces.com//blog/entry/48659",
    "editorial": "The first obvious fact is that the answer for prime numbers is 1. If the\r\nnumber is not prime, then the answer is at least 2. When is it possible?\r\nIt is possible in 2 cases; when it is sum of 2 primes of its maximal\r\ndivisor is 2. If 2 divides n, then so does integer n/2.\r\nn/2<=2=>n<=4=>n=4, where n is prime. According to Goldbach\u00e2\u0080\u0099s conjecture,\r\nwhich is checked for all numbers no more than 10^9, every number is a\r\nsum of two prime numbers. Odd number can be sum of two primes, if (n-2)\r\nis prime (the only even prime number is 2). Otherwise, the answer is 3\r\nn=3+(n-3), (n-3) is sum of 2 primes, because it is even.\r\n"
}