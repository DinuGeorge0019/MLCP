{"link": "https://codeforces.com//contest/603/problem/B", "problemId": "42011", "problem_idx": "B", "shortId": "603B", "contest_number": "603", "problem_submissions": {"E": [14601511, 14617280, 14604705, 14600443], "B": [14593533, 14587045, 14589326, 14589031, 14586181, 14589818, 14588082, 14588941, 14588018, 14589775, 14590006, 14589946, 14591160, 14588048, 14591719, 14589609, 14588347, 14594211, 14588610], "C": [14591371, 14590095, 14592691, 14592593, 14589544, 14587905, 14590360, 14592646, 14593601, 14593350, 14595265, 14602871, 14589734, 14593412, 14595137, 14591430, 14591097, 14598084, 14593035], "A": [14587155, 14591228, 14594284, 14586714, 14587304, 14592455, 14586190, 14586556, 14586409, 14588357, 14613579, 14591988, 14586421, 14587516, 14587463, 14586240, 14590046, 14586262], "D": [14596780, 14600081, 14597772, 14601222, 14598361, 14599882, 14599185, 14602018, 14603122, 14599499]}, "name": "B. Moodular Arithmetic", "statement": "As behooves any intelligent schoolboy, Kevin Sun is studying psycowlogy,\r\ncowculus, and cryptcowgraphy at the Bovinia State University (BGU) under\r\nFarmer Ivan. During his Mathematics of Olympiads (MoO) class, Kevin was\r\nconfronted with a weird functional equation and needs your help. For two\r\nfixed integers and , where is an odd prime number, the functional\r\nequation states that for some function . (This equation should hold for\r\nany integer in the range to , inclusive.)It turns out that can actually\r\nbe many different functions. Instead of finding a solution, Kevin wants\r\nyou to count the number of distinct functions that satisfy this\r\nequation. Since the answer may be very large, you should print your\r\nresult modulo .\r\n", "solutions": ["#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<memory.h>\n#include<map>\n#include<set>\n#include<queue>\n#include<list>\n#include<sstream>\n#include<cstring>\n#define mp make_pair\n#define pb push_back      \n#define F first\n#define S second\n#define SS stringstream\n#define sqr(x) ((x)*(x))\n#define m0(x) memset(x,0,sizeof(x))\n#define m1(x) memset(x,63,sizeof(x))\n#define CC(x) cout << (x) << endl\n#define pw(x) (1ll<<(x))\n#define buli(x) __builtin_popcountll(x)\n#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)\n#define M 1000000007\n#define N 211111\n\n#define TASK \"1\"\n\nusing namespace std;\ntypedef pair<int,int> pt;\n\nint n, k;\n\nint was[1000111];\n\nint main(){\n//\tfreopen(TASK\".in\",\"r\",stdin);\t\n//\tfreopen(TASK\".out\",\"w\",stdout);\n\tcin >> n >> k;\n\tint ans = 1;\n\tif (k == 0) {\n\t\tfor (int i = 0; i < n - 1; i++) ans = ans * 1ll * n % M;\n\t\tcout << ans << endl;\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i < n; i++) if (!was[i]) {\n\t\tans = ans * 1ll * n % M;\n\t\tint x= i;\n\t\twhile (!was[x]) {\n\t\t\twas[x] = 1;\n\t\t\tx = x * 1ll * k % n;\n\t\t}\n\t}\n\tif (k == 1) ans = ans * 1ll * n % M;\n\tcout << ans << endl;\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["combinatorics", "dfs and similar", "dsu", "math", "number theory"], "dificulty": "1800", "interactive": false}