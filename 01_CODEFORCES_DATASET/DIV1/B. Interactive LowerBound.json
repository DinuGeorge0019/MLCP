{"link": "https://codeforces.com//contest/843/problem/B", "problemId": "119862", "problem_idx": "B", "shortId": "843B", "contest_number": "843", "problem_submissions": {"D": [86210957, 86210473, 29756854, 34937670, 29781848, 29781833, 29781501, 29855864, 30128230, 42158478, 42158439, 30022222, 29772717], "C": [29753044, 29759187, 29746479, 29758195, 29749173, 29747919, 29747700, 29750057, 29750292, 29751827, 29751575, 29754184, 29754916, 29751833, 29755015, 29755103, 29756089, 29752710], "E": [29748360, 29749250, 29756319, 29752227, 29761679, 29956114, 29762394, 35205556, 29781472, 29754090, 29761229, 29762324, 42187009], "A": [29740862, 29750546, 29737212, 29736679, 29736752, 29736447, 29736902, 29737823, 29737375, 29738506, 29737473, 29738082, 29739251, 29737566, 29736802, 29738724, 29737891, 29739246, 29738315], "B": [29755133, 29757158, 29758427, 29740669, 29739815, 29741358, 29743424, 29741532, 29745306, 29741855, 29742825, 29744139, 29742831, 29742430, 29744161, 29746567, 29746080, 29746122]}, "name": "B. Interactive LowerBound", "statement": "You are given a in increasing order singly linked list. You should find\r\nthe minimum integer in the list which is greater than or equal to .More\r\nformally, there is a singly liked list built on an array of elements.\r\nElement with index contains two integers: is the integer value in this\r\nelement, and that is the index of the next element of the singly linked\r\nlist (or , if the current element is the last). The list is sorted, i.e.\r\nif , then .You are given the number of elements in the list , the index\r\nof the first element , and the integer .You can make up to queries of\r\nthe following two types: () ask the values and , give the answer for the\r\nproblem: the minimum integer, greater than or equal to , or , if there\r\nare no such integers. Your program should terminate after this query.\r\nWrite a program that solves this problem.\r\n", "solutions": ["#include<stdio.h>\n#include<vector>\n#include<algorithm>\n#include<time.h>\nusing namespace std;\ntypedef pair<int,int>pii;\npii ask(int t)\n{\n\tprintf(\"? %d\\n\",t);\n\tfflush(stdout);\n\tint za,zb;\n\tscanf(\"%d%d\",&za,&zb);\n\treturn make_pair(za,zb);\n}\ntypedef long long ll;\nint main()\n{\n\tsrand(time(NULL));\n\tint num,st,mok;\n\tscanf(\"%d%d%d\",&num,&st,&mok);\n\tvector<pii>v;\n\tv.push_back(make_pair(-1,st));\n\tfor(int i=0;i<1000;i++)\n\t{\n\t\tint r=((ll)rand()*32768LL+(ll)rand())%num+1;\n\t\tpii z=ask(r);\n\t\tif(z.second!=-1)v.push_back(z);\n\t}\n\tsort(v.begin(),v.end());\n\tint low=lower_bound(v.begin(),v.end(),make_pair(mok,-1))-v.begin()-1;\n\tint now=v[low].second;\n\tfor(;;)\n\t{\n\t\tpii z=ask(now);\n\t\tif(z.first>=mok)\n\t\t{\n\t\t\tprintf(\"! %d\\n\",z.first);\n\t\t\tfflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t\tif(z.second==-1)\n\t\t{\n\t\t\tprintf(\"! -1\\n\");\n\t\t\tfflush(stdout);\n\t\t\treturn 0;\n\t\t}\n\t\tnow=z.second;\n\t}\n}"], "input": "", "output": "", "tags": ["brute force", "interactive", "probabilities"], "dificulty": "2000", "interactive": false}