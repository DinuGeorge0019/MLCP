{"link": "https://codeforces.com//contest/1276/problem/D", "problemId": "495591", "problem_idx": "D", "shortId": "1276D", "contest_number": "1276", "problem_submissions": {"D": [66855093, 66857065, 66845974, 66997276, 66858540, 66861684, 66862730, 66868898, 66866703, 66862266, 66863710, 66863337, 66865506, 66863170, 66863353, 66867792, 66869234, 66868492, 66866182, 66863049], "C": [66843940, 66846263, 66855304, 66856299, 66850349, 66850097, 66849241, 66845111, 66840733, 66851808, 66846583, 66853445, 66848190, 66854997, 66857353, 66855797, 66855510, 66860652, 66856100, 66851090], "B": [66838883, 66837202, 66851887, 66837950, 66845504, 66843521, 66841052, 66839337, 66846582, 66845011, 66837082, 66842169, 66845204, 66846655, 66853297, 66842949, 66842748, 66847818, 66847458, 66873447, 66868214], "A": [66836393, 66834386, 66848931, 66834574, 66835090, 66834499, 66835628, 66834748, 66844259, 66835765, 66834448, 66836891, 66834649, 66835369, 66834624, 66839341, 66838551, 66839846, 66837852, 66838233], "F": [66875333, 66866989, 68039784, 67198171, 67466141], "E": [93753835, 67190434, 67455260, 81662494]}, "name": "D. Tree Elimination", "statement": "Vasya has a tree with n vertices numbered from 1 to n, and n - 1 edges\r\nnumbered from 1 to n - 1. Initially each vertex contains a token with\r\nthe number of the vertex written on it.Vasya plays a game. He considers\r\nall edges of the tree by increasing of their indices. For every edge he\r\nacts as follows: If both endpoints of the edge contain a token, remove a\r\ntoken from one of the endpoints and write down its number. Otherwise, do\r\nnothing.The result of the game is the sequence of numbers Vasya has\r\nwritten down. Note that there may be many possible resulting sequences\r\ndepending on the choice of endpoints when tokens are removed.Vasya has\r\nplayed for such a long time that he thinks he exhausted all possible\r\nresulting sequences he can obtain. He wants you to verify him by\r\ncomputing the number of distinct sequences modulo 998\r\n,244\r\n,353.\r\n", "solutions": ["#include<cstdio>\n#include<algorithm>\n#include<map>\n#include<vector>\n#define N_ 201000\n#define pii pair<int,int>\nusing namespace std;\nint n, pL[N_];\nlong long Mod = 998244353;\nvector<pii>E[N_];\nvector<int>D[N_];\nlong long S1[N_], S2[N_], Back[N_], SS[N_];\nvoid DFS(int a, int pp) {\n\tvector<int>Ch;\n\tfor (auto &t : E[a]) {\n\t\tif (t.second == pp)continue;\n\t\tpL[t.second] = t.first;\n\t\tDFS(t.second, a);\n\t\tCh.push_back(t.second);\n\t}\n\tD[a].resize(E[a].size() + 1);\n\tint sz = E[a].size();\n\tif (Ch.empty()) {\n\t\tD[a][0] = 1;\n\t\tD[a][sz] = 1;\n\t}\n\telse {\n\t\tBack[sz] = 1;\n\t\tfor (int j = sz - 1; j >= 0; j--) {\n\t\t\tBack[j] = Back[j + 1];\n\t\t\tif (E[a][j].second != pp) Back[j] = Back[j] * S2[E[a][j].second] % Mod;\n\t\t}\n\t\tlong long ss = 1;\n\t\tfor (int j = 0; j < sz; j++) {\n\t\t\tint x = E[a][j].second;\n\t\t\tif (x == pp) {\n\t\t\t\tD[a][j] = ss * Back[j + 1] % Mod;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tD[a][j] = ss * (SS[x] - S1[x] + Mod)%Mod * Back[j + 1] % Mod;\n\t\t\t\tss = ss * S1[x] % Mod;\n\t\t\t}\n\t\t}\n\t\tD[a][sz] = ss;\n\t}\n\tfor (int i = 0; i <= sz; i++) {\n\t\tif (i<sz && E[a][i].first <= pL[a]) {\n\t\t\tS1[a] = (S1[a] + D[a][i]) % Mod;\n\t\t}\n\t\tSS[a] = (SS[a] + D[a][i]) % Mod;\n\t\tif (i < sz && E[a][i].second == pp)continue;\n\t\tS2[a] = (S2[a] + D[a][i]) % Mod;\n\t}\n}\nint main() {\n\tint i, a, b;\n\tscanf(\"%d\", &n);\n\tfor (i = 1; i < n; i++) {\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tE[a].push_back({ i,b });\n\t\tE[b].push_back({ i,a });\n\t}\n\tfor (i = 1; i <= n; i++) {\n\t\tsort(E[i].begin(), E[i].end());\n\t}\n\tDFS(1, 0);\n\tlong long res = 0;\n\tfor (i = 0; i <= E[1].size(); i++) {\n\t\tres = (res + D[1][i]) % Mod;\n\t}\n\tprintf(\"%lld\\n\", res);\n}"], "input": "", "output": "", "tags": ["dp", "trees"], "dificulty": "2900", "interactive": false}