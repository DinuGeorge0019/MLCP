{"link": "https://codeforces.com//contest/1071/problem/A", "problemId": "240846", "problem_idx": "A", "shortId": "1071A", "contest_number": "1071", "problem_submissions": {"D": [44637237, 44635977, 44641232, 44642034, 44645226, 44644969, 44641119, 44687822, 44647598, 44647731, 44636247, 44657719, 44657573, 44656873, 44656778, 44656490, 44656434, 44656391, 44656371, 44656287, 44656203, 44656003, 44655947, 44655816, 44655752, 44655740, 44655723, 44655702, 44655688, 44655676, 44655623, 44655613, 44655594, 44655569, 44655560, 44655438, 44655419, 44655291, 44647784, 44642810, 44645755, 44645396, 44646118, 44644322, 44654399], "C": [44633806, 44636722, 44637213, 44636382, 44638429, 44646089, 44638832, 44640208, 44642096, 44639762, 44646904, 44636416, 44638641, 44637725], "B": [44628020, 44627991, 44628766, 44629645, 44629488, 44629819, 44628230, 44629653, 44629034, 44630394, 44631138, 44629791, 44632540, 44629581, 44629264, 44627767, 44636293, 44628785], "A": [44624756, 44630092, 44624598, 44626465, 44625487, 44624461, 44624565, 44624711, 44624763, 44626685, 44624210, 44625000, 44627102, 44624838, 44625068, 44629237, 44625506, 44625349], "E": [44647746, 45395419, 45395353, 44682935, 44682924]}, "name": "A. Cram Time", "statement": "In a galaxy far, far away Lesha the student has just got to know that he\r\nhas an exam in two days. As always, he hasn\u2019t attended any single class\r\nduring the previous year, so he decided to spend the remaining time\r\nwisely.Lesha knows that today he can study for at most a hours, and he\r\nwill have b hours to study tomorrow. Note that it is possible that on\r\nhis planet there are more hours in a day than on Earth. Lesha knows that\r\nthe quality of his knowledge will only depend on the number of lecture\r\nnotes he will read. He has access to an infinite number of notes that\r\nare enumerated with positive integers, but he knows that he can read the\r\nfirst note in one hour, the second note in two hours and so on. In other\r\nwords, Lesha can read the note with number k in k hours. Lesha can read\r\nthe notes in arbitrary order, however, he can\u2019t start reading a note in\r\nthe first day and finish its reading in the second day.Thus, the student\r\nhas to fully read several lecture notes today, spending at most a hours\r\nin total, and fully read several lecture notes tomorrow, spending at\r\nmost b hours in total. What is the maximum number of notes Lesha can\r\nread in the remaining time? Which notes should he read in the first day,\r\nand which in the second?\r\n", "solutions": ["//~ while (clock()<=69*CLOCKS_PER_SEC)\n//~ #pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"O3\")\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace __gnu_pbds;\nusing namespace std;\n\ntemplate <typename T>\nusing ordered_set =\n    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef LOCAL\n~debug() { cerr << endl; }\neni(!=) cerr << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n  *this << \"[\";\n  for (auto it = d.b; it != d.e; ++it)\n    *this << \", \" + 2 * (it == d.b) << *it;\n  ris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define shandom_ruffle random_shuffle\n\nusing ll=long long;\nusing pii=pair<int,int>;\nusing pll=pair<ll,ll>;\nusing vi=vector<int>;\nusing vll=vector<ll>;\nconst int nax=1000*1007;\n\nll a, b;\n\nint main()\n{\n\tscanf(\"%lld%lld\", &a, &b);\n\tll w=0;\n\tll s=0;\n\twhile(s+w+1<=a+b)\n\t{\n\t\tw++;\n\t\ts+=w;\n\t}\n\tvll raz, dwa;\n\tfor (ll i=w; i; i--)\n\t{\n\t\tif (a>=i)\n\t\t{\n\t\t\traz.push_back(i);\n\t\t\ta-=i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tassert(b>=i);\n\t\t\tdwa.push_back(i);\n\t\t\tb-=i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", raz.size());\n\tfor (ll i : raz)\n\t\tprintf(\"%lld \", i);\n\tprintf(\"\\n\");\n\tprintf(\"%d\\n\", dwa.size());\n\tfor (ll i : dwa)\n\t\tprintf(\"%lld \", i);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["greedy"], "dificulty": "1600", "interactive": false}