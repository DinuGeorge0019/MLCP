{
    "link": "https://codeforces.com//contest/891/problem/B",
    "problemId": "134541",
    "problem_idx": "B",
    "shortId": "891B",
    "contest_number": "891",
    "problem_submissions": {
        "D": [
            32405811,
            32403732,
            32402138,
            32430714,
            32405646
        ],
        "B": [
            32397173,
            32384884,
            32383268,
            32389067,
            32402095,
            32392144,
            32390145,
            32392706,
            32386797,
            32391950,
            32394619,
            32391275,
            32387784,
            32402908,
            32394168,
            32390852,
            32393424,
            32402498,
            32390071,
            32396268
        ],
        "C": [
            32396218,
            32388086,
            32389360,
            32395431,
            32392168,
            32396723,
            32397239,
            32390965,
            32393675,
            32398647,
            32398521,
            32396975,
            32390007,
            32404522,
            32396953,
            32387277,
            32386884,
            32403069
        ],
        "A": [
            32391368,
            32389450,
            32385263,
            32382597,
            32388551,
            32393309,
            32385252,
            32391318,
            32384125,
            32393321,
            32386822,
            32382673,
            32385160,
            32385074,
            32382459,
            32389480,
            32400282,
            32382452,
            32383065
        ],
        "E": [
            32389900,
            32397841,
            32401538,
            32399718,
            32400691,
            32399515,
            32401892,
            32401660,
            32405427,
            32400764,
            32394075,
            32405328,
            32405995,
            32402118,
            32511522,
            32397327
        ]
    },
    "name": "B. Gluttony",
    "statement": "You are given an array with distinct integers. Construct an array by\r\npermuting such that for every non-empty subset of indices (, ) the sums\r\nof elements on that positions in and are different, i. e.\r\n",
    "solutions": [
        "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst ll mod=1000000007;\nll powmod(ll a,ll b) {ll res=1;a%=mod; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n// head\n\nconst int N=30;\nint n,a[N],b[N];\nPII p[N];\nint main() {\n\tscanf(\"%d\",&n);\n\trep(i,0,n) scanf(\"%d\",a+i),p[i]=mp(a[i],i);\n\tsort(p,p+n);\n\trep(i,0,n) b[p[(i+1)%n].se]=p[i].fi;\n\trep(i,0,n) {\n\t\tprintf(\"%d \",b[i]);\n\t}\n\tputs(\"\");\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "dificulty": "2000",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Gluttony.json",
    "editorial_link": "https://codeforces.com//blog/entry/55841",
    "editorial": "Sort the array and shift it by one. This array will be an\r\nanswer.Proof:When we shift the sorted array all of the elements become\r\ngreater except the first one, consider and if 1 wasn\u00e2\u0080\u0099t in t we would\r\nhave otherwise consider then 1 can\u00e2\u0080\u0099t be in and we have so and we are\r\ndone!\r\n"
}