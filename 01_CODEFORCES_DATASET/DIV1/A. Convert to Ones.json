{"link": "https://codeforces.com//contest/997/problem/A", "problemId": "194450", "problem_idx": "A", "shortId": "997A", "contest_number": "997", "problem_submissions": {"D": [39842612, 39837685, 39842379, 39838295, 39837935, 39842740, 39843076, 39859781, 39844833, 39844190, 39833354, 39839922, 39854124, 39853938, 39841292, 39838113, 39841101, 39836594, 39854271, 39854180, 39841626], "E": [39838988, 39839303, 40677876, 39860384, 216157458, 207265582], "C": [39833262, 39841343, 39842130, 39832983, 39840312, 39831596, 39835919, 39837971, 39858804, 39838178, 39837144, 39850195, 39850032, 39850007, 39849997, 39849695, 39849346, 39849204, 39848619, 39840597, 39849012, 39851642, 39851588, 39851576, 39851518, 39851506, 39851317, 39851202, 39850994, 39850828, 39850773, 39850608, 39850592, 39850571, 39850194, 39850131, 39850042, 39850008, 39849917, 39849907, 39849611, 39849473, 39849310, 39849195, 39849073, 39849029, 39848917, 39848844, 39833638], "B": [39825922, 39826364, 39827934, 39825576, 39828070, 39839886, 39829927, 39831407, 39858660, 39828494, 39832160, 39839554, 39828743, 39833583, 39835350, 39842444, 39828730, 39826817], "A": [39823476, 39823484, 39823390, 39823892, 39823506, 39823245, 39824375, 39824053, 39858605, 39823570, 39823352, 39837740, 39823612, 39823561, 39841314, 39824552, 39838338, 39823711, 39823355]}, "name": "A. Convert to Ones", "statement": "You\u2019ve got a string a_1, a_2,\r\ndots, a_n, consisting of zeros and ones.Let\u2019s call a sequence of\r\nconsecutive elements a_i, a_{i + 1},\r\nldots, a_j (1\r\nleq i\r\nleq j\r\nleq n) a of string a. You can apply the following operations any number\r\nof times: Choose some substring of string a (for example, you can choose\r\nentire string) and reverse it, paying x coins for it (for example,\r\nto ); Choose some substring of string a (for example, you can choose\r\nentire string or just one symbol) and replace each symbol to the\r\nopposite one (zeros are replaced by ones, and ones by zeros), paying y\r\ncoins for it (for example,\r\nto ). You can apply these operations in any order. It is allowed to\r\napply the operations multiple times to the same substring.What is the\r\nminimum number of coins you need to spend to get a string consisting\r\nonly of ones?\r\n", "solutions": ["#include <iostream>\n#include <stdio.h>\n#include <math.h>\n#include <string.h>\n#include <time.h>\n#include <stdlib.h>\n#include <string>\n#include <bitset>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <algorithm>\n#include <sstream>\n#include <stack>\n#include <iomanip>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\ntypedef pair<int,int> pii;\ntypedef long long ll;\ntypedef double ld;\ntypedef vector<int> vi;\n#define fi first\n#define se second\n#define fe first\n#define FO(x) {freopen(#x\".in\",\"r\",stdin);freopen(#x\".out\",\"w\",stdout);}\n#define Edg int M=0,fst[SZ],vb[SZ],nxt[SZ];void ad_de(int a,int b){++M;nxt[M]=fst[a];fst[a]=M;vb[M]=b;}void adde(int a,int b){ad_de(a,b);ad_de(b,a);}\n#define Edgc int M=0,fst[SZ],vb[SZ],nxt[SZ],vc[SZ];void ad_de(int a,int b,int c){++M;nxt[M]=fst[a];fst[a]=M;vb[M]=b;vc[M]=c;}void adde(int a,int b,int c){ad_de(a,b,c);ad_de(b,a,c);}\n#define es(x,e) (int e=fst[x];e;e=nxt[e])\n#define esb(x,e,b) (int e=fst[x],b=vb[e];e;e=nxt[e],b=vb[e])\n#define SZ 666666\nint n,x,y;\nchar s[SZ];\nint main()\n{\n\tscanf(\"%d%d%d%s\",&n,&x,&y,s+1);\n\tint b=0; ll ans=8e18;\n\tfor(int i=1;i<=n;++i)\n\t\tif(s[i]=='0'&&s[i-1]!='0') ++b;\n\tif(!b) ans=0;\n\tfor(int i=0;i<b;++i)\n\t\tans=min(ans,y*(ll)(b-i)+x*(ll)i);\n\tprintf(\"%lld\\n\",ans);\n}\n"], "input": "", "output": "", "tags": ["brute force", "greedy", "implementation", "math"], "dificulty": "1500", "interactive": false}