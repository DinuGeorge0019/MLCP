{
    "link": "https://codeforces.com//contest/372/problem/A",
    "problemId": "4182",
    "problem_idx": "A",
    "shortId": "372A",
    "contest_number": "372",
    "problem_submissions": {
        "D": [
            5426977,
            5430216,
            5428682,
            5430119,
            5427511,
            5430570,
            5430674,
            5430157,
            5432457,
            5430283,
            5428509,
            5431356,
            5431746,
            5438335,
            5439009,
            5430897,
            5431697,
            5427479,
            5431615,
            5437474
        ],
        "C": [
            5425620,
            5423917,
            5425367,
            5426752,
            5429971,
            5426458,
            5425626,
            5427101,
            5430049,
            5423463,
            5427437,
            5427041,
            5428996,
            5429237,
            5430350,
            5429420,
            5425660,
            5426153
        ],
        "B": [
            5423489,
            5421838,
            5424137,
            5424220,
            5424353,
            5423172,
            5423669,
            5423082,
            5424372,
            5425505,
            5428480,
            5425133,
            5425580,
            5425422,
            5424402,
            5431761,
            5424978,
            5423136,
            5424295
        ],
        "A": [
            5421957,
            5420847,
            5421730,
            5421129,
            5421031,
            5420888,
            5422498,
            5422219,
            5421566,
            5422639,
            5425833,
            5421459,
            5427633,
            5423077,
            5420877,
            5428458,
            5422847,
            5420856,
            5421782
        ],
        "E": [
            5430957
        ]
    },
    "name": "A. Counting Kangaroos is Fun",
    "statement": "There are kangaroos with pockets. Each kangaroo has a size (integer\r\nnumber). A kangaroo can go into another kangaroo\u2019s pocket if and only if\r\nthe size of kangaroo who hold the kangaroo is at least twice as large as\r\nthe size of kangaroo who is held.Each kangaroo can hold at most one\r\nkangaroo, and the kangaroo who is held by another kangaroo cannot hold\r\nany kangaroos.The kangaroo who is held by another kangaroo cannot be\r\nvisible from outside. Please, find a plan of holding kangaroos with the\r\nminimal number of kangaroos who is visible.\r\n",
    "solutions": [
        "#include <cstdlib>\n#include <cctype>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n//#include <iostream>\n#include <sstream>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <fstream>\n#include <numeric>\n#include <iomanip>\n#include <bitset>\n#include <list>\n#include <stdexcept>\n#include <functional>\n#include <utility>\n#include <ctime>\n#include <cassert>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<(int)n;i++)\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n#define ACCU accumulate\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<double> VD;\ntypedef long long ll;\ntypedef pair<int,int> PII;\ntypedef pair<ll,ll> PLL;\ntypedef vector<ll> VL;\nconst ll mod=1000000007;\nconst double eps=1e-9;\nconst double pi=acos(0)*2;\nll powmod(ll a,ll b) {ll res=1;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll powmod(ll a,ll b,ll mod) {ll res=1;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n\nint n,a[6010000],l,r;\nbool check(int x) {\n\tper(i,0,x) if (i-x+n<x||2*a[i]>a[i-x+n]) return 0;\n\treturn 1;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\trep(i,0,n) scanf(\"%d\",a+i);\n\tsort(a,a+n);\n\tl=0;r=n;\n\twhile (l+1<r) {\n\t\tint md=(l+r)/2;\n\t\tif (check(md)) l=md; else r=md;\n\t}\n\tprintf(\"%d\\n\",n-l);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Counting Kangaroos is Fun.json",
    "editorial_link": "https://codeforces.com/blog/entry/9944",
    "editorial": "Because of the number of holding-held relations is at most , We can\r\nassume that first half of kangaroos do not hold any kangaroos, and last\r\nhalf of kangaroos are not held by any kangaroos. So we can split\r\nkangaroos in two set, such that first set contains the kangaroos whose\r\nsize is in smaller half and second set contains the kangaroos whose size\r\nis in larger half, and use easy greedy algorithm. The time conplexity is\r\nO(N log N) for sorting and O(N) for greedy, so the time conplexity is\r\nO(N log N). my solution: http://ideone.com/w8ch4w\r\n"
}