{
    "link": "https://codeforces.com//contest/167/problem/B",
    "problemId": "1061",
    "problem_idx": "B",
    "shortId": "167B",
    "contest_number": "167",
    "problem_submissions": {
        "E": [
            1429386,
            1431660,
            1430538,
            1430207,
            1479431,
            1430621,
            1507864,
            1489249
        ],
        "A": [
            1426561,
            1425295,
            1423883,
            1423692,
            1423784,
            1423907,
            1423753,
            1427774,
            1424703,
            1425193,
            1423661,
            1424092,
            1424249,
            1423770,
            1424171,
            1423924
        ],
        "B": [
            1425782,
            1424634,
            1425254,
            1432486,
            1425184,
            1425747,
            1425398,
            1426194,
            1432748,
            1426937,
            1424930,
            1425807,
            1425826,
            1425888,
            1426390,
            1425899
        ],
        "C": [
            1424483,
            1428090,
            1428465,
            1428006,
            1427996,
            1428587,
            1429943,
            1429298,
            1431073,
            1428990,
            1428193,
            1428363,
            1428419,
            1429448,
            1428344,
            1428582
        ],
        "D": [
            1430967,
            2861371,
            1479835,
            1433356,
            1432586,
            1508890
        ]
    },
    "name": "B. Wizards and Huge Prize",
    "statement": "One must train much to do well on wizardry contests. So, there are\r\nnumerous wizardry schools and magic fees.One of such magic schools\r\nconsists of tours. A winner of each tour gets a huge prize. The school\r\nis organised quite far away, so one will have to take all the prizes\r\nhome in one go. And the bags that you\u2019ve brought with you have space for\r\nno more than huge prizes.Besides the fact that you want to take all the\r\nprizes home, you also want to perform well. You will consider your\r\nperformance good if you win at least tours.In fact, years of organizing\r\ncontests proved to the organizers that transporting huge prizes is an\r\nissue for the participants. Alas, no one has ever invented a spell that\r\nwould shrink the prizes... So, here\u2019s the solution: for some tours the\r\nwinner gets a bag instead of a huge prize. Each bag is characterized by\r\nnumber the number of huge prizes that will fit into it.You already know\r\nthe subject of all tours, so you can estimate the probability of winning\r\nthe -th tour. You cannot skip the tour under any circumstances.Find the\r\nprobability that you will perform well on the contest and will be able\r\nto take all won prizes home (that is, that you will be able to fit all\r\nthe huge prizes that you won into the bags that you either won or\r\nbrought from home).\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\ndouble p[210];\nint a[210];\ndouble dp[210][210][210]; // pos, won, cap\n\nint main(void){\n    int N,L,K,i,j,k;\n    \n    cin >> N >> L >> K;\n    REP(i,N) cin >> p[i];\n    REP(i,N) cin >> a[i];\n    REP(i,N) p[i] /= 100.0;\n    \n    dp[0][0][0] = 1.0;\n    \n    REP(i,N) REP(j,i+1) REP(k,N+1){\n        int c = a[i] + 1;\n        // win\n        dp[i+1][j+1][min(k+c,N)] += dp[i][j][k] * p[i];\n        // lose\n        dp[i+1][j][k] += dp[i][j][k] * (1.0 - p[i]);\n    }\n    \n    double ans = 0.0;\n    REP(i,N+1) REP(j,N+1) if(i >= L && K+j-i >= 0) ans += dp[N][i][j];\n    printf(\"%.9f\\n\",ans);\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "math",
        "probabilities"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Wizards and Huge Prize.json",
    "editorial_link": "https://codeforces.com//blog/entry/4214",
    "editorial": "This problem can be solved using dynamic programming. Let d[i][j][m] the\r\nprobability we won j of first i days and get bags total capacity of m.\r\nFor convenience, we assume that the bag is also a prize and the prize is\r\na bag of capacity 0. To do that, retaining a task we must add 1 to all\r\na[i]. Then from d[i][j][m] we can go to the d[i+1][j+1][m+a[i]] with\r\nprobability p[i]/100, and to d[i+1][j][m] with probability 1-p[i]/100.\r\nThe answer will be the sum of d[n+1][j][m] for all j,m such that . This\r\nsolution works for , and do not fit into the time limit. It remains to\r\nnote that if we have over 200 places for prizes, it does not matter how\r\nmany exactly. So we need to calculate states with and now solution works\r\nfor .\r\n"
}