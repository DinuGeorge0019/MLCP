{
    "link": "https://codeforces.com//contest/351/problem/A",
    "problemId": "3592",
    "problem_idx": "A",
    "shortId": "351A",
    "contest_number": "351",
    "problem_submissions": {
        "D": [
            4670145,
            4670249,
            4674550,
            4670754,
            4674929,
            4684601,
            4669199,
            4669889,
            4672385,
            4680204
        ],
        "C": [
            4665748,
            4664661,
            4663479,
            4665815,
            4667455,
            4687038,
            4686935,
            4686917,
            4668439,
            4666789,
            4670720,
            4671735,
            4670649,
            4671154,
            4668837,
            4669283
        ],
        "B": [
            4661574,
            4660489,
            4662188,
            4663391,
            4665392,
            4662692,
            4661437,
            4662916,
            4663186,
            4668058,
            4662366,
            4666797,
            4662458,
            4659236,
            4659832,
            4665176,
            4659225
        ],
        "A": [
            4661298,
            4659082,
            4658665,
            4661628,
            4664159,
            4659520,
            4666420,
            4665346,
            4659838,
            4662463,
            4658356,
            4660908,
            4660765
        ],
        "E": [
            4658359,
            4666363,
            4665274,
            4666984,
            4664316,
            4666715,
            4668432,
            4666380,
            4665428,
            4663383,
            4671601,
            4671635,
            4660529,
            4661696,
            4664447,
            4673681,
            4671913,
            4664654
        ]
    },
    "name": "A. Jeff and Rounding",
    "statement": "Jeff got real numbers as a birthday present. The boy hates non-integer\r\nnumbers, so he decided to slightly \"adjust\" the numbers he’s got.\r\nNamely, Jeff consecutively executes operations, each of them goes as\r\nfollows: choose indexes and that haven’t been chosen yet; round element\r\nto the nearest integer that isn’t more than (assign to : ); round\r\nelement to the nearest integer that isn’t less than (assign to : ).\r\nNevertheless, Jeff doesn’t want to hurt the feelings of the person who\r\ngave him the sequence. That’s why the boy wants to perform the\r\noperations so as to make the absolute value of the difference between\r\nthe sum of elements before performing the operations and the sum of\r\nelements after performing the operations as small as possible. Help Jeff\r\nfind the minimum absolute value of the difference.\r\n",
    "solutions": [
        "#include <iostream>\n#include <sstream>\n#include <fstream>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <bitset>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <cstdio>\n\nusing namespace std;\n\n#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)\n#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)\n\nint a[4010],b[4010];\n\nint main(void){\n    int N,i;\n    \n    cin >> N;\n    REP(i,2*N){\n        double x;\n        cin >> x;\n        int y = (int)(x * 1000 + 0.5);\n        a[i] = y % 1000;\n    }\n    \n    int sum = 0;\n    REP(i,2*N) sum += a[i];\n    \n    REP(i,2*N) b[i] = ((a[i] == 0) ? 0 : 1000);\n    sort(b, b+2*N);\n    int low = 0, high = 0;\n    REP(i,N) low += b[i];\n    REP(i,N) high += b[N+i];\n    \n    int ans = (1<<29);\n    for(i=low;i<=high;i+=1000) ans = min(ans, abs(i - sum));\n    \n    printf(\"%.3f\\n\", ans / 1000.0);\n    \n    return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
    ],
    "dificulty": "1800",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Jeff and Rounding.json",
    "editorial_link": "https://codeforces.com//blog/entry/9070",
    "editorial": "Initially, we should remember the number of integers . On next step we\r\nwill round down all numbers and count the sum. Now we can change the\r\nsum, rounding up some numbers, with those not matter what kind of, the\r\nmain thing how many. Consider a couple what we could get:1. 2. 3. 4.\r\nIterate over the number of pairs of the first type. Then we know the\r\ntotal number of second and third type and number of the fourth type:1. +\r\n= - 2. = Check to see if you can get such numbers (enough for us count\r\nof integers and real numbers, respectively). We find that we can round\r\nup from to numbers. We will find the best choise.\r\n",
    "hint": []
}