{
    "link": "https://codeforces.com//contest/1470/problem/A",
    "problemId": "855302",
    "problem_idx": "A",
    "shortId": "1470A",
    "contest_number": "1470",
    "problem_submissions": {
        "E": [
            103440669,
            103450045,
            103444324,
            103446807,
            103456209,
            103459429,
            103458872,
            103449311,
            103444803,
            103455366,
            103427287,
            103523513,
            103512117,
            107007766,
            103497278
        ],
        "C": [
            103424863,
            103419731,
            103412394,
            103420749,
            103473095,
            103443608,
            103423946,
            103436573,
            103483233,
            103668985,
            103426627,
            103424859,
            103478420,
            103478404,
            103478387,
            103478371,
            103478354,
            103478316,
            103478307,
            103478286,
            103478261,
            103478250,
            103415351,
            103438274,
            103450179,
            103434430,
            103429394,
            103442814,
            103435400
        ],
        "D": [
            103415926,
            103427083,
            103428552,
            103423208,
            103420751,
            103429115,
            103425438,
            103418855,
            103424458,
            103422509,
            103452603,
            103410374,
            103430035,
            103428165,
            103418606,
            103410543,
            103439473,
            103434901,
            103425306,
            103416679
        ],
        "B": [
            103406584,
            103402617,
            103400867,
            103408140,
            103415671,
            103407933,
            103428755,
            103407002,
            103406514,
            103413492,
            103439686,
            103403315,
            103398826,
            103407557,
            103405634,
            103400232,
            103409460,
            103410649,
            103414139,
            103409541
        ],
        "A": [
            103395440,
            103396207,
            103392457,
            120480996,
            103397804,
            103473156,
            103473127,
            103399272,
            103396942,
            103393409,
            103401022,
            103396664,
            103398098,
            103431488,
            103391970,
            103392128,
            103393954,
            103394467,
            103391951,
            103398410,
            103401147,
            103400351,
            103410763
        ],
        "F": [
            128458334,
            128458191,
            105649646,
            105647576
        ]
    },
    "name": "A. Strange Birthday Party",
    "statement": "Petya organized a strange birthday party. He invited n friends and\r\nassigned an integer k_i to the i-th of them. Now Petya would like to\r\ngive a present to each of them. In the nearby shop there are m unique\r\npresents available, the j-th present costs c_j dollars (1\r\nle c_1\r\nle c_2\r\nle\r\nldots\r\nle c_m). It’s allowed to buy a single present more than once.For the\r\ni-th friend Petya can either buy them a present j\r\nle k_i, which costs c_j dollars, or just give them c_{k_i} dollars\r\ndirectly.Help Petya determine the minimum total cost of hosting his\r\nparty.\r\n",
    "solutions": [
        "/**\n *    author:  tourist\n *    created: 05.01.2021 17:34:59       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n, m;\n    cin >> n >> m;\n    vector<int> k(n);\n    for (int i = 0; i < n; i++) {\n      cin >> k[i];\n    }\n    sort(k.begin(), k.end());\n    vector<int> c(m);\n    for (int i = 0; i < m; i++) {\n      cin >> c[i];\n    }\n    int low = 0, high = min(n, m);\n    while (low < high) {\n      int mid = (low + high + 1) >> 1;\n      bool ok = true;\n      for (int i = 0; i < mid; i++) {\n        if (k[n - mid + i] <= i) {\n          ok = false;\n          break;\n        }\n      }\n      if (ok) {\n        low = mid;\n      } else {\n        high = mid - 1;\n      }\n    }\n    long long ans = 0;\n    for (int i = 0; i < n; i++) {\n      ans += c[k[i] - 1];\n    }\n    long long best = ans;\n    for (int i = 1; i <= low; i++) {\n      ans -= c[k[n - i] - 1];\n      ans += c[i - 1];\n      best = min(best, ans);\n    }\n    cout << best << '\\n';\n  }\n  return 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Strange Birthday Party.json",
    "editorial_link": "https://codeforces.com//blog/entry/86464",
    "editorial": "Letâs note that it is beneficial to give cheaper gifts to people with a\r\nlarger value.Suppose that in the optimal answer a pair of people and ,\r\nsuch that get gifts with values . Then we can give a gift to a person\r\nand to a person give a gift or dollars. If , than we spend the same\r\namount of money. Otherwise, itâs a better answer.So the problem can be\r\nsolved using greedy algorithm. Letâs sort guest in order of descending\r\nvalue . Than give each person a cheapest gift, or dollars, if it better.\r\nTo determinate a cheapest gift, letâs store the index of the last\r\npurchased gift. Thus, the final asymptotics is .\r\n",
    "hint": []
}