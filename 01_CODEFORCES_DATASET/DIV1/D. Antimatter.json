{"link": "https://codeforces.com//contest/383/problem/D", "problemId": "5725", "problem_idx": "D", "shortId": "383D", "contest_number": "383", "problem_submissions": {"B": [5756409, 5751225, 5757744, 5753341, 5808519, 5808489, 5808447, 5758844, 5759238, 5752874, 5755308, 5752676, 5753907, 5753281, 5756832, 5755532], "E": [5754649, 5757705, 5753388, 5758136, 5808454, 5755553, 5754159, 5755881, 5756030, 5755626, 5754883, 5757327, 5758405, 5757943], "D": [5753594, 5752449, 5752307, 5754262, 5808453, 5751984, 5752563, 5753410, 5753070, 5753481, 5755159, 5755983, 5755452, 5753533, 5756037, 5756133, 5757148, 5756616, 5755389, 5756824], "C": [5750456, 5751886, 5754923, 5749119, 5751328, 5751146, 5750311, 5750868, 5752299, 5751003, 5750201, 5751936, 5751653, 5754669, 5750989, 5754841, 5751430, 5750434], "A": [5747280, 5747986, 5747387, 5747246, 5808450, 5747221, 5747445, 5747936, 5747254, 5748686, 5747361, 5747734, 5747935, 5748612, 5748223, 5747638, 5747622, 5749616, 5757219]}, "name": "D. Antimatter", "statement": "Iahub accidentally discovered a secret lab. He found there devices\r\nordered in a line, numbered from to from left to right. Each device can\r\ncreate either units of matter or units of antimatter. Iahub wants to\r\nchoose some contiguous subarray of devices in the lab, specify the\r\nproduction mode for each of them (produce matter or antimatter) and\r\nfinally take a photo of it. However he will be successful only if the\r\namounts of matter and antimatter produced in the selected subarray will\r\nbe the same (otherwise there would be overflowing matter or antimatter\r\nin the photo). You are requested to compute the number of different ways\r\nIahub can successful take a photo. A photo is different than another if\r\nit represents another subarray, or if at least one device of the\r\nsubarray is set to produce matter in one of the photos and antimatter in\r\nthe other one.\r\n", "solutions": ["#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n#include <ctime>\n#include <algorithm>\n#include <bitset>\n#include <numeric>\n#include <string>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#define pb push_back\n#define mp make_pair\n#define sz(x) ((int)(x).size())\n\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<int, ll> pil;\ntypedef pair<ll, ll> pll;\n\nconst int MOD = int(1e9 + 7);\nvoid madd(int &a, int b) { if ((a += b) >= MOD) a -= MOD; }\nint mmul(int a, int b) { return ll(a) * b % MOD; }\n\nvi as;\n\nint calc(int l, int r) {\n  if (l == r) return 0;\n  int m = (l + r) / 2;\n  int res = 0;\n  madd(res, calc(l, m));\n  madd(res, calc(m + 1, r));\n\n  int suml = 0, sumr = 0;\n  for (int i = l; i <= r; i++)\n    if (i <= m) suml += as[i];\n    else sumr += as[i];\n\n  vi canl(2 * suml + 1), canr(2 * sumr + 1);\n  #define step(xxx) \\\n      for (int i2 = 0; i2 < sz(cur); i2++) { \\\n        ncur[i2] = 0; \\\n        if (i2 >= as[i]) madd(ncur[i2], cur[i2 - as[i]]); \\\n        if (i2 + as[i] < sz(cur)) madd(ncur[i2], cur[i2 + as[i]]); \\\n      } \\\n      cur.swap(ncur); \\\n      for (int i2 = 0; i2 < sz(cur); i2++) \\\n        madd(xxx[i2], cur[i2]);\n  {\n    vi cur(sz(canl)), ncur(sz(canl));\n    cur[sz(canl) / 2] = 1;\n    for (int i = m; i >= l; i--) {\n      step(canl)\n    }\n  }\n  {\n    vi cur(sz(canr), 0), ncur(sz(canr));\n    cur[sz(canr) / 2] = 1;\n    for (int i = m + 1; i <= r; i++) {\n      step(canr)\n    }\n  }\n\n//  res = 0;\n  for (int i = 0; i < sz(canl); i++) {\n    int x = i - sz(canl) / 2;\n    int y = -x;\n    int i2 = y + sz(canr) / 2;\n    if (0 <= i2 && i2 < sz(canr)) {\n//      eprintf(\"x=%d (%d), y=%d (%d)\\n\", x, canl[i], y, canr[i2]);\n      madd(res, mmul(canl[i], canr[i2]));\n    }\n  }\n//  eprintf(\"calc(%d..%d)=%d\\n\", l, r, res);\n  return res;\n}\n\nint main() {\n  #ifdef DEBUG\n  freopen(\".in\", \"r\", stdin);\n  freopen(\".out\", \"w\", stdout);\n  #endif\n\n  int n;\n  while (scanf(\"%d\", &n) >= 1) {\n    as = vi(n);\n    for (int i = 0; i < n; i++)\n      scanf(\"%d\", &as[i]);\n    printf(\"%d\\n\", calc(0, n - 1));\n  }\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["dp"], "dificulty": "2300", "interactive": false}