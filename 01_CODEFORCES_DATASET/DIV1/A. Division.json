{
    "link": "https://codeforces.com//contest/1444/problem/A",
    "problemId": "781574",
    "problem_idx": "A",
    "shortId": "1444A",
    "contest_number": "1444",
    "problem_submissions": {
        "E": [
            177060864,
            97660118,
            97359218,
            97528673,
            105295397,
            97391457,
            107899094
        ],
        "D": [
            97340003,
            97340266,
            97342285,
            97342896,
            97337709,
            97340895,
            97341601,
            97345333,
            97349700,
            97373326,
            97348927,
            97326702,
            97346935,
            97347842,
            97348566,
            97344354,
            97348921,
            97341198,
            97348249,
            97341495,
            97349542
        ],
        "C": [
            97320701,
            97319171,
            97319507,
            97327690,
            97320892,
            97327102,
            97328013,
            97321796,
            97328337,
            97336256,
            97330742,
            97325357,
            97336388,
            97333742,
            97327914,
            97322996,
            97331358,
            99653258,
            97349832,
            97328361
        ],
        "B": [
            97309345,
            97307941,
            97312731,
            97313742,
            97309124,
            97318228,
            97312056,
            97312423,
            97316008,
            97338138,
            97314968,
            97311029,
            97312318,
            97313371,
            97314101,
            97346837,
            97315650,
            97314655,
            97317415
        ],
        "A": [
            97303759,
            97308441,
            97306115,
            97307464,
            97305751,
            97307808,
            97306079,
            97306446,
            97310249,
            97339306,
            97309724,
            97306667,
            97305992,
            97307462,
            97306550,
            97306839,
            97306977,
            97308612,
            97308951
        ]
    },
    "name": "A. Division",
    "statement": "Olegâ€™s favorite subjects are History and Math, and his favorite branch\r\nof mathematics is division.To improve his division skills, Oleg came up\r\nwith t pairs of integers p_i and q_i and for each pair decided to find\r\nthe integer x_i, such that: p_i is divisible by x_i; x_i is not\r\ndivisible by q_i. Oleg is really good at division and managed to find\r\nall the answers quickly, how about you?\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\n \nusing ll = long long;\nusing ld = long double;\nusing db = double; \nusing str = string; // yay python!\n\nusing pi = pair<int,int>;\nusing pl = pair<ll,ll>;\nusing pd = pair<db,db>;\n\nusing vi = vector<int>;\nusing vb = vector<bool>;\nusing vl = vector<ll>;\nusing vd = vector<db>; \nusing vs = vector<str>;\nusing vpi = vector<pi>;\nusing vpl = vector<pl>; \nusing vpd = vector<pd>;\n\n#define tcT template<class T\n#define tcTU tcT, class U\n// ^ lol this makes everything look weird but I'll try it\ntcT> using V = vector<T>; \ntcT, size_t SZ> using AR = array<T,SZ>; \ntcT> using PR = pair<T,T>;\n\n// pairs\n#define mp make_pair\n#define f first\n#define s second\n\n// vectors\n#define sz(x) (int)(x).size()\n#define all(x) begin(x), end(x)\n#define rall(x) (x).rbegin(), (x).rend() \n#define sor(x) sort(all(x)) \n#define rsz resize\n#define ins insert \n#define ft front() \n#define bk back()\n#define pf push_front \n#define pb push_back\n#define eb emplace_back \n#define lb lower_bound \n#define ub upper_bound \n\n// loops\n#define FOR(i,a,b) for (int i = (a); i < (b); ++i)\n#define F0R(i,a) FOR(i,0,a)\n#define ROF(i,a,b) for (int i = (b)-1; i >= (a); --i)\n#define R0F(i,a) ROF(i,0,a)\n#define trav(a,x) for (auto& a: x)\n\nconst int MOD = 1e9+7; // 998244353;\nconst int MX = 2e5+5;\nconst ll INF = 1e18; // not too close to LLONG_MAX\nconst ld PI = acos((ld)-1);\nconst int dx[4] = {1,0,-1,0}, dy[4] = {0,1,0,-1}; // for every grid problem!!\nmt19937 rng((uint32_t)chrono::steady_clock::now().time_since_epoch().count()); \ntemplate<class T> using pqg = priority_queue<T,vector<T>,greater<T>>;\n\n// helper funcs\nconstexpr int pct(int x) { return __builtin_popcount(x); } // # of bits set\nconstexpr int bits(int x) { return 31-__builtin_clz(x); } // floor(log2(x)) \nll cdiv(ll a, ll b) { return a/b+((a^b)>0&&a%b); } // divide a by b rounded up\nll fdiv(ll a, ll b) { return a/b-((a^b)<0&&a%b); } // divide a by b rounded down\n\ntcT> bool ckmin(T& a, const T& b) {\n\treturn b < a ? a = b, 1 : 0; } // set a = min(a,b)\ntcT> bool ckmax(T& a, const T& b) {\n\treturn a < b ? a = b, 1 : 0; }\n\ntcTU> T fstTrue(T lo, T hi, U f) {\n\thi ++; assert(lo <= hi); // assuming f is increasing\n\twhile (lo < hi) { // find first index such that f is true \n\t\tT mid = lo+(hi-lo)/2;\n\t\tf(mid) ? hi = mid : lo = mid+1; \n\t} \n\treturn lo;\n}\ntcTU> T lstTrue(T lo, T hi, U f) {\n\tlo --; assert(lo <= hi); // assuming f is decreasing\n\twhile (lo < hi) { // find first index such that f is true \n\t\tT mid = lo+(hi-lo+1)/2;\n\t\tf(mid) ? lo = mid : hi = mid-1;\n\t} \n\treturn lo;\n}\ntcT> void remDup(vector<T>& v) { // sort and remove duplicates\n\tsort(all(v)); v.erase(unique(all(v)),end(v)); }\ntcTU> void erase(T& t, const U& u) { // don't erase\n\tauto it = t.find(u); assert(it != end(t));\n\tt.erase(u); } // element that doesn't exist from (multi)set\n\n// INPUT\n#define tcTUU tcT, class ...U\ntcT> void re(complex<T>& c);\ntcTU> void re(pair<T,U>& p);\ntcT> void re(vector<T>& v);\ntcT, size_t SZ> void re(AR<T,SZ>& a);\n\ntcT> void re(T& x) { cin >> x; }\nvoid re(db& d) { str t; re(t); d = stod(t); }\nvoid re(ld& d) { str t; re(t); d = stold(t); }\ntcTUU> void re(T& t, U&... u) { re(t); re(u...); }\n\ntcT> void re(complex<T>& c) { T a,b; re(a,b); c = {a,b}; }\ntcTU> void re(pair<T,U>& p) { re(p.f,p.s); }\ntcT> void re(vector<T>& x) { trav(a,x) re(a); }\ntcT, size_t SZ> void re(AR<T,SZ>& x) { trav(a,x) re(a); }\ntcT> void rv(int& n, vector<T>& x) { re(n); x.rsz(n); trav(a,x) re(a); }\n\n// TO_STRING\n#define ts to_string\nstr ts(char c) { return str(1,c); }\nstr ts(const char* s) { return (str)s; }\nstr ts(str s) { return s; }\nstr ts(bool b) { \n\t#ifdef LOCAL\n\t\treturn b ? \"true\" : \"false\"; \n\t#else \n\t\treturn ts((int)b);\n\t#endif\n}\ntcT> str ts(complex<T> c) { \n\tstringstream ss; ss << c; return ss.str(); }\nstr ts(vector<bool> v) {\n\tstr res = \"{\"; F0R(i,sz(v)) res += char('0'+v[i]);\n\tres += \"}\"; return res; }\ntemplate<size_t SZ> str ts(bitset<SZ> b) {\n\tstr res = \"\"; F0R(i,SZ) res += char('0'+b[i]);\n\treturn res; }\ntcTU> str ts(pair<T,U> p);\ntcT> str ts(T v) { // containers with begin(), end()\n\t#ifdef LOCAL\n\t\tbool fst = 1; str res = \"{\";\n\t\tfor (const auto& x: v) {\n\t\t\tif (!fst) res += \", \";\n\t\t\tfst = 0; res += ts(x);\n\t\t}\n\t\tres += \"}\"; return res;\n\t#else\n\t\tbool fst = 1; str res = \"\";\n\t\tfor (const auto& x: v) {\n\t\t\tif (!fst) res += \" \";\n\t\t\tfst = 0; res += ts(x);\n\t\t}\n\t\treturn res;\n\n\t#endif\n}\ntcTU> str ts(pair<T,U> p) {\n\t#ifdef LOCAL\n\t\treturn \"(\"+ts(p.f)+\", \"+ts(p.s)+\")\"; \n\t#else\n\t\treturn ts(p.f)+\" \"+ts(p.s);\n\t#endif\n}\n\n// OUTPUT\ntcT> void pr(T x) { cout << ts(x); }\ntcTUU> void pr(const T& t, const U&... u) { \n\tpr(t); pr(u...); }\nvoid ps() { pr(\"\\n\"); } // print w/ spaces\ntcTUU> void ps(const T& t, const U&... u) { \n\tpr(t); if (sizeof...(u)) pr(\" \"); ps(u...); }\n\n// DEBUG\nvoid DBG() { cerr << \"]\" << endl; }\ntcTUU> void DBG(const T& t, const U&... u) {\n\tcerr << ts(t); if (sizeof...(u)) cerr << \", \";\n\tDBG(u...); }\n#ifdef LOCAL // compile with -DLOCAL, chk -> fake assert\n\t#define dbg(...) cerr << \"Line(\" << __LINE__ << \") -> [\" << #__VA_ARGS__ << \"]: [\", DBG(__VA_ARGS__)\n\t#define chk(...) if (!(__VA_ARGS__)) cerr << \"Line(\" << __LINE__ << \") -> function(\" \\\n\t\t << __FUNCTION__  << \") -> CHK FAILED: (\" << #__VA_ARGS__ << \")\" << \"\\n\", exit(0);\n#else\n\t#define dbg(...) 0\n\t#define chk(...) 0\n#endif\n\n// FILE I/O\nvoid setIn(str s) { freopen(s.c_str(),\"r\",stdin); }\nvoid setOut(str s) { freopen(s.c_str(),\"w\",stdout); }\nvoid unsyncIO() { cin.tie(0)->sync_with_stdio(0); }\nvoid setIO(str s = \"\") {\n\tunsyncIO();\n\t// cin.exceptions(cin.failbit); \n\t// throws exception when do smth illegal\n\t// ex. try to read letter into int\n\tif (sz(s)) { setIn(s+\".in\"), setOut(s+\".out\"); } // for USACO\n}\n\n/**\n * Description: Factors integers.\n * Time: O(\\sqrt N)\n * Source: Own\n * Verification: https://csacademy.com/contest/ceoi-2018-day-2/task/toys-big/\n */\n\nnamespace factorBasic {\n\ttemplate<class T> vector<pair<T,int>> factor(T x) { \n\t\tvector<pair<T,int>> pri;\n\t\tfor (T i = 2; i*i <= x; ++i) if (x % i == 0) {\n\t\t\tint t = 0;\n\t\t\twhile (x % i == 0) x /= i, t ++;\n\t\t\tpri.pb({i,t});\n\t\t}\n\t\tif (x > 1) pri.pb({x,1});\n\t\treturn pri;\n\t}\n\t/* Note:\n\t * number of operations needed s.t.\n\t *\t\t\t\t  phi(phi(...phi(n)...))=1\n\t * is O(log n).\n\t * Euler's theorem: a^{\\phi(p)}\\equiv 1 (mod p), gcd(a,p)=1\n\t */\n\tll phi(ll x) {\n\t\ttrav(a,factor(x)) x -= x/a.f;\n\t\treturn x;\n\t}\n\ttemplate<class T> void tour(vector<pair<T,int>>& v, \n\t\tvector<T>& V, int ind, T cur) {\n\t\t\tif (ind == sz(v)) V.pb(cur);\n\t\t\telse {\n\t\t\t\tT mul = 1;\n\t\t\t\tF0R(i,v[ind].s+1) {\n\t\t\t\t\ttour(v,V,ind+1,cur*mul);\n\t\t\t\t\tmul *= v[ind].f;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\ttemplate<class T> vector<T> getDivi(T x) {\n\t\tauto v = factor(x);\n\t\tvector<T> V; tour(v,V,0,(T)1); sort(all(V));\n\t\treturn V;\n\t}\n}\n\nusing namespace factorBasic;\n\nint main() {\n\tsetIO();\n\tint T; re(T);\n\tF0R(i,T) {\n\t\tll p,q; re(p,q);\n\t\tif (p%q == 0) {\n\t\t\tV<pair<ll,int>> v = factor(q);\n\t\t\tll ans = 0;\n\t\t\ttrav(t,v) {\n\t\t\t\tll P = p;\n\t\t\t\twhile (P%q == 0) P /= t.f;\n\t\t\t\tckmax(ans,P);\n\t\t\t}\n\t\t\tps(ans);\n\t\t} else {\n\t\t\tps(p);\n\t\t}\n\t}\n\t// you should actually read the stuff at the bottom\n}\n\n/* stuff you should look for\n\t* int overflow, array bounds\n\t* special cases (n=1?)\n\t* do smth instead of nothing and stay organized\n\t* WRITE STUFF DOWN\n\t* DON'T GET STUCK ON ONE APPROACH\n*/\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "math",
        "number theory"
    ],
    "dificulty": "1500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Division.json",
    "editorial_link": "https://codeforces.com//blog/entry/84248",
    "editorial": "Let . LetÃ¢Â€Â™s assume, that there exists prime , such that divides , but is\r\nnot divisible by . Then we can multiply and and the result will still\r\ndivide , but will not be divisible by . So for maximal there is no such\r\n.LetÃ¢Â€Â™s assume, that there are two primes and , such that they both\r\ndivide , and both divide . Because is not divisible by , there exists\r\nsome prime ( can be equal to or ), such that number of occurrences of in\r\nis less than number of occurrences of in . One of and is not equal to ,\r\nso if we will multiply and such number, the result will not be divisible\r\nby . So for maximal there are no such and .That means that (power of\r\nsome primal divisor of ). So to find maximal , we have to find all prime\r\ndivisors of (we have to factorise for it in time ) and for each of them\r\ndivide by it until result is not divisible by . That will be all our\r\ncandidates for greatest . We will do all of that in time .\r\n",
    "hint": []
}