{"link": "https://codeforces.com//contest/295/problem/A", "problemId": "2834", "problem_idx": "A", "shortId": "295A", "contest_number": "295", "problem_submissions": {"E": [3511398, 3511419, 3511437, 3511617, 3512460, 3509679, 3512315, 3510900, 3508827, 3511729, 3510067, 3513473, 3512096, 3510503, 3513504, 3513446, 3513998, 3513357, 3512431], "D": [3509428, 3508084, 3508466, 3509763, 3509435, 3512601, 3509591, 3512430, 3510879, 3510319, 3512308, 3511034, 3506982, 3509190, 3509840, 3509472, 3580137], "C": [3508174, 3509402, 3509512, 3507449, 3507654, 3508191, 3508111, 3508096, 3513124, 3512841, 3513121, 3508464, 3508663, 3507348, 3507241, 3508781, 3507476, 3507076, 3507577, 3507688], "B": [3506807, 3505379, 3506165, 3505888, 3506089, 3506387, 3506261, 3505484, 3505919, 3507043, 3506794, 3509222, 3505786, 3505827, 3505874, 3505560, 3506566, 3506119], "A": [3505050, 3504656, 3505453, 3504455, 3504863, 3505059, 3505155, 3504693, 3504542, 3504788, 3504749, 3508036, 3504910, 3507685, 3504620, 3504661, 3556448, 3505140, 3504565]}, "name": "A. Greg and Array", "statement": "Greg has an array and operations. Each operation looks as: , , , . To\r\napply operation to the array means to increase all array elements with\r\nnumbers by value .Greg wrote down queries on a piece of paper. Each\r\nquery has the following form: , , . That means that one should apply\r\noperations with numbers to the array.Now Greg is wondering, what the\r\narray will be after all the queries are executed. Help Greg.\r\n", "solutions": ["#include<algorithm>\n#include<cassert>\n#include<complex>\n#include<map>\n#include<iomanip>\n#include<sstream>\n#include<queue>\n#include<set>\n#include<string>\n#include<vector>\n#include<iostream>\n#include<cstring>\n#define FOR(i, a, b) for(int i =(a); i <=(b); ++i)\n#define FORD(i, a, b) for(int i = (a); i >= (b); --i)\n#define fup FOR\n#define fdo FORD\n#define REP(i, n) for(int i = 0;i <(n); ++i)\n#define VAR(v, i) __typeof(i) v=(i)\n#define FORE(i, c) for(VAR(i, (c).begin()); i != (c).end(); ++i)\n#define ALL(x) (x).begin(), (x).end()\n#define SZ(x) ((int)(x).size())\n#define siz SZ\n#define CLR(x) memset((x), 0, sizeof(x))\n#define PB push_back\n#define MP make_pair\n#define X first\n#define Y second \n#define FI X\n#define SE Y\n#define SQR(a) ((a)*(a))\n#define DEBUG 1\n#define debug(x) {if (DEBUG)cerr <<#x <<\" = \" <<x <<endl; }\n#define debugv(x) {if (DEBUG) {cerr <<#x <<\" = \"; FORE(it, (x)) cerr <<*it <<\", \"; cout <<endl; }}\nusing namespace std;\ntypedef long long LL;\ntypedef long double LD;\ntypedef pair<int, int>P;\ntypedef vector<int>VI;\nconst int INF=1E9+7;\ntemplate<class C> void mini(C&a4, C b4){a4=min(a4, b4); }\ntemplate<class C> void maxi(C&a4, C b4){a4=max(a4, b4); }\n#define MAXN 100007\n\nint n,m,k;\nint l[MAXN],r[MAXN],d[MAXN],x[MAXN],y[MAXN],a[MAXN];\nLL ile[MAXN], add[MAXN];\n\nint main(){\n\tios_base::sync_with_stdio(false);\n    cout << setprecision(15) << fixed;\n\t//in\n    cin >> n >> m >> k;\n    FOR(i,1,n) cin >> a[i];\n    FOR(i,1,m) cin >> l[i] >> r[i] >> d[i];\n    FOR(i,1,k) cin >> x[i] >> y[i];\n\t//sol\n    FOR(i,1,k)\n        ile[x[i]]++, ile[y[i]+1]--;\n    FOR(i,1,m) {\n        ile[i] += ile[i-1];\n        add[l[i]] += ile[i] * d[i];\n        add[r[i]+1] -= ile[i] * d[i];\n    }\n\t//out\n    FOR(i,1,n) {\n        add[i] += add[i-1];\n        cout << a[i] + add[i] << \" \" ;\n    }\n    cout << endl;\n\treturn 0;\n}\n\n"], "input": "", "output": "", "tags": ["data structures", "implementation"], "dificulty": "1400", "interactive": false}