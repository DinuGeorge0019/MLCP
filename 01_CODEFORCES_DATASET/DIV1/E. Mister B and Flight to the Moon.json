{"link": "https://codeforces.com//contest/819/problem/E", "problemId": "112027", "problem_idx": "E", "shortId": "819E", "contest_number": "819", "problem_submissions": {"E": [28095868, 28093903, 28090933, 28090593, 28094491, 28097177, 28097247, 28091454, 28092476, 28096909, 28091607, 28092950, 28099143, 28090256, 28093515, 28093604, 28090845, 28094347], "D": [28094321, 28096368, 28099459, 28093095, 28099589, 28093948, 28092918, 28100416, 28094247, 28087916, 31892342, 28089013], "C": [28089679, 28092136, 28087482, 28107336, 28092204, 28092623, 28096714, 79507001, 28096230, 31884749], "B": [28083507, 28085088, 28080609, 28088461, 28084942, 31697997, 28085544, 28084735, 28088088, 28084884, 28083914, 127584112, 127584041, 28087562, 28081410, 28095682, 28086459, 28088790, 28094207, 28087593, 28085906], "A": []}, "name": "E. Mister B and Flight to the Moon", "statement": "In order to fly to the Moon Mister B just needs to solve the following\r\nproblem.There is a complete indirected graph with vertices. You need to\r\ncover it with several simple cycles of length and so that each edge is\r\nin exactly cycles.We are sure that Mister B will solve the problem soon\r\nand will fly to the Moon. Will you?\r\n", "solutions": ["#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n;\nstruct atom{\n\tvector<int>A;\n\tvoid print(){\n\t\tprintf(\"%d \",A.size());\n\t\tfor (int i=0;i<A.size();i++) printf(\"%d \",A[i]); printf(\"\\n\");\n\t}\n};\nvector<atom>A;\nvoid put(int k1,int k2,int k3){\n\tatom k; k.A.push_back(k1); k.A.push_back(k2); k.A.push_back(k3); A.push_back(k);\n}\nvoid put(int k1,int k2,int k3,int k4){\n\tatom k; k.A.push_back(k1); k.A.push_back(k2); k.A.push_back(k3); k.A.push_back(k4); A.push_back(k);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tif (n%2==0){\n\t\tput(1,2,3);\n\t\tput(1,2,4);\n\t\tput(2,3,4);\n\t\tput(1,3,4);\n\t\tfor (int i=5;i<=n;i+=2){\n\t\t\tput(i,i+1,1);\n\t\t\tput(i,i+1,2);\n\t\t\tput(1,i,2,i+1);\n\t\t\tfor (int j=3;j<i;j+=2)\n\t\t\t\tput(j,i,j+1,i+1),put(j,i,j+1,i+1);\n\t\t}\n\t} else {\n\t\tput(1,2,3); put(1,2,3);\n\t\tfor (int i=4;i<=n;i+=2){\n\t\t\tput(1,i,3,i+1); put(2,i,3,i+1);\n\t\t\tput(i,i+1,1); put(i,i+1,2);\n\t\t\tfor (int j=4;j<i;j+=2)\n\t\t\t\tput(j,i,j+1,i+1),put(j,i,j+1,i+1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",A.size());\n\tfor (int i=0;i<A.size();i++) A[i].print();\n\treturn 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "graphs"], "dificulty": "2800", "interactive": false}