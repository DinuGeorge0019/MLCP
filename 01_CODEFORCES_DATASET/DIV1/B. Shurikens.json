{"link": "https://codeforces.com//contest/1434/problem/B", "problemId": "773399", "problem_idx": "B", "shortId": "1434B", "contest_number": "1434", "problem_submissions": {"E": [96677024, 96703305, 96695061, 105543081, 96703526, 96698372], "C": [96660091, 96659353, 96663643, 96664995, 96666231, 96665833, 96660295, 96665975, 96667697, 96663270, 96667899, 96671631, 96669472, 96667880, 96663509, 96656865, 96675583, 96671215, 96671994, 96665979], "B": [96653756, 96655206, 96656896, 96653660, 96657305, 96660070, 96656102, 96658196, 96659133, 96653643, 96661876, 96658486, 96660839, 96661406, 96658185, 96654001, 96679983, 96658727, 96658564, 96660622], "A": [96649454, 96650673, 96653179, 96660619, 96651935, 96654803, 96651530, 96652454, 96653264, 96657461, 96658652, 96653143, 96656680, 96654396, 96655185, 96650897, 96672264, 96652811, 96654828, 96652745], "D": [96673411, 96677110, 96683665, 96678842, 96678338, 96679519, 96679771, 96683979, 96680244, 96683615, 96681902, 96685151, 96688093, 96669235, 96686214, 96686134, 96682142]}, "name": "B. Shurikens", "statement": "Tenten runs a weapon shop for ninjas. Today she is willing to sell n\r\nshurikens which cost 1, 2, ..., n ryo (local currency). During a day,\r\nTenten will place the shurikens onto the showcase, which is empty at the\r\nbeginning of the day. Her job is fairly simple: sometimes Tenten places\r\nanother shuriken (from the available shurikens) on the showcase, and\r\nsometimes a ninja comes in and buys a shuriken from the showcase. Since\r\nninjas are thrifty, they always buy the shuriken from the\r\nshowcase.Tenten keeps a record for all events, and she ends up with a\r\nlist of the following types of records: means that she placed another\r\nshuriken on the showcase; means that the shuriken of price x was bought.\r\nToday was a lucky day, and all shurikens were bought. Now Tenten wonders\r\nif her list is consistent, and what could be a possible order of placing\r\nthe shurikens on the showcase. Help her to find this out!\r\n", "solutions": ["/**\n *    author:  tourist\n *    created: 25.10.2020 14:11:57       \n**/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> op(2 * n);\n  vector<int> st;\n  for (int i = 0; i < 2 * n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"+\") {\n      st.push_back(i);\n    } else {\n      if (st.empty()) {\n        cout << \"NO\" << '\\n';\n        return 0;\n      }\n      cin >> op[i];\n      op[st.back()] = -op[i];\n      st.pop_back();\n    }\n  }\n  set<int> s;\n  for (int i = 0; i < 2 * n; i++) {\n    if (op[i] < 0) {\n      s.insert(-op[i]);\n    } else {\n      if (s.empty() || *s.begin() != op[i]) {\n        cout << \"NO\" << '\\n';\n        return 0;\n      }\n      s.erase(s.begin());\n    }\n  }\n  cout << \"YES\" << '\\n';\n  for (int i = 0; i < 2 * n; i++) {\n    if (op[i] < 0) {\n      cout << -op[i] << \" \";\n    }\n  }\n  cout << '\\n';\n  return 0;\n}\n"], "input": "", "output": "", "tags": ["data structures", "greedy", "implementation"], "dificulty": "1700", "interactive": false}