{"link": "https://codeforces.com//contest/150/problem/D", "problemId": "932", "problem_idx": "D", "shortId": "150D", "contest_number": "150", "problem_submissions": {"D": [1194790, 1195710, 1196410, 1196643, 1195734, 1193495, 1197438, 1194800, 1193784, 1198921], "C": [1192372, 1192889, 1193569, 1192214, 1192135, 1196040, 1193366, 1195697, 1197378, 1191883, 1193918, 1192472, 1192349], "B": [1188186, 2541924, 1188277, 1188125, 1187707, 1188412, 1188356, 1188767, 1186964, 1188247, 1188294, 1188405, 1188647, 1194611, 1188404, 1188925], "A": [1187447, 1187836, 1187271, 1187190, 1197743, 1187054, 1187897, 1187519, 1187187, 1187884, 1187266, 1187565, 1187877, 1187293, 1188217], "E": [1201858, 1204781]}, "name": "D. Mission Impassable", "statement": "Market stalls now have the long-awaited game The Colder Scrools V:\r\nNvodsk. The game turned out to be difficult as hell and most students\r\ncan\u2019t complete the last quest (\"We don\u2019t go to Nvodsk...\"). That\r\nthreatened winter exams. The rector already started to wonder whether he\r\nshould postpone the winter exams till April (in fact, he wanted to\r\ncomplete the quest himself). But all of a sudden a stranger appeared at\r\nthe door of his office. \"Good afternoon. My name is Chuck and I solve\r\nany problems\" he said.And here they are sitting side by side but still\r\nthey can\u2019t complete the mission. The thing is, to kill the final boss\r\none should prove one\u2019s perfect skills in the art of managing letters.\r\nOne should be a real magician to do that. And can you imagine what\r\nhappens when magicians start competing... But let\u2019s put it more\r\nformally: you are given a string and a set of integers . You are allowed\r\nto choose any substring that is a palindrome and delete it. At that we\r\nreceive some number of points equal to , where is the length of the\r\ndeleted palindrome. For some , -1, which means that deleting palindrome\r\nstrings of such length is . After a substring is deleted, the remaining\r\npart \"shifts together\", that is, at no moment of time the string has\r\ngaps. The process is repeated while the string has at least one\r\npalindrome substring that can be deleted. All gained points are summed\r\nup.Determine what maximum number of points can be earned.\"Oh\" said\r\nChuck, raising from the chair, \"I used to love deleting palindromes,\r\njust like you, but one day I took an arrow in the Knee\".\r\n", "solutions": ["#pragma comment (linker, \"/STACK:200000000\")\n#define _SECURE_SCL 0\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <ctime>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <deque>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <string>\n#include <stack>\n#include <sstream>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long int64;\nconst int INF = (int) 1E8;\nconst int64 INF64 = (int64) 1E18;\nconst double EPS = 1E-9;\nconst double PI = acos((double)0) * 2;\n\n#define forn(i,n)  for (int i=0; i<int(n); ++i)\n#define ford(i,n)  for (int i=int(n)-1; i>=0; --i)\n#define fore(i,l,n)  for (int i=int(l); i<int(n); ++i)\n#define all(a)  a.begin(), a.end()\n#define fs  first\n#define sc  second\n#define pb  push_back\n#define mp  make_pair\n\n\nconst int MAXN = 160;\n\n\nint n, cost[MAXN];\nstring s;\n\n\nbool read() {\n\tif (! (cin >> n))\n\t\treturn false;\n\tforn(i,n) {\n\t\tcin >> cost[i+1];\n\t\tif (cost[i+1] == -1)\n\t\t\tcost[i+1] = -INF;\n\t}\n\tcin >> s;\n\treturn true;\n}\n\n\nint d[MAXN][MAXN][MAXN];\nbool u[MAXN][MAXN][MAXN];\n\nint get_d (int l, int r, int len) {\n\tif (l > r)  return cost[len];\n\tif (l == r)  return max (cost[len] + cost[1], cost[len+1]);\n\n\tint & my = d[l][r][len];\n\tbool & myu = u[l][r][len];\n\tif (myu)  return my;\n\tmyu = true;\n\tmy = -INF;\n\n\tif (len != 0)\n\t\tmy = max (my, cost[len] + get_d (l, r, 0));\n\tfore(i,l,r)\n\t\tmy = max (my, get_d (l, i, 0) + get_d (i+1, r, len));\n\tfore(i,l+1,r+1)\n\t\tmy = max (my, get_d (i, r, 0) + get_d (l, i-1, len));\n\tfore(i,l,r+1)\n\t\tmy = max (my, get_d (l, i-1, 0) + cost[len+1] + get_d (i+1, r, 0));\n\n\tif (s[l] == s[r])\n\t\tmy = max (my, get_d (l+1, r-1, len+2));\n\n\treturn my;\n}\n\nint d2[MAXN];\n\nvoid solve() {\n\tmemset (u, 0, sizeof u);\n\tint x = get_d (0, n-1, 0);\n\tforn(i,n) {\n\t\td2[i] = i ? d2[i-1] : 0;\n\t\tforn(j,i+1)\n\t\t\td2[i] = max (d2[i], get_d (j, i, 0) + (j ? d2[j-1] : 0));\n\t}\n\n\tcout << d2[n-1] << endl;\n}\n\n\nint main() {\n#ifdef SU2_PROJ\n\tfreopen (\"input.txt\", \"rt\", stdin);\n\tfreopen (\"output.txt\", \"wt\", stdout);\n\twhile (read())\n\t\tsolve();\n#else\n\tif (!read())  throw;\n\tsolve();\n#endif\n}"], "input": "", "output": "", "tags": ["dp", "strings"], "dificulty": "2600", "interactive": false}