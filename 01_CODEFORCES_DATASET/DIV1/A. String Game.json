{"link": "https://codeforces.com//contest/778/problem/A", "problemId": "95641", "problem_idx": "A", "shortId": "778A", "contest_number": "778", "problem_submissions": {"D": [25045880, 25060354, 25044951, 25042270, 25047480, 25048926, 25045795, 25045544, 25045486, 25047721, 25047363, 25048949, 25046309, 25047075, 25047917, 25047905, 25036950, 25042732], "E": [25042969, 25046345, 25048943, 25037368, 25230220, 25046363, 25054654, 25048918, 25047591, 25047081], "A": [25035252, 25031242, 25245410, 25036410, 25031451, 25031235, 25031489, 25038781, 25031419, 25031309, 25031692, 25032018, 25031359, 25031871, 25031264, 25031548, 25034117, 25032346, 25031343, 25041816, 25031435], "B": [25034518, 25033704, 25035119, 25035355, 25034840, 25040894, 25042142, 25035930, 25034089, 25038221, 25035530, 25036277, 25035911, 25033345, 25036435, 25039201, 25037280, 25038965, 25040791, 25035608], "C": [25038188, 25041985, 25049416, 25045342, 25039545, 25046412, 25037203, 25040856, 25043392, 25042924, 25041581, 25064524, 25064516, 25064118, 25050637, 25050497, 25042489, 25043145, 25043153, 25044553, 25044592, 25043572, 25044608, 25050488, 25049895]}, "name": "A. String Game", "statement": "Little Nastya has a hobby, she likes to remove some letters from word,\r\nto obtain another word. But it turns out to be pretty hard for her,\r\nbecause she is too young. Therefore, her brother Sergey always helps\r\nher.Sergey gives Nastya the word and wants to get the word out of it.\r\nNastya removes letters in a certain order (one after another, in this\r\norder strictly), which is specified by permutation of letters\u2019 indices\r\nof the word : . We denote the length of word as . Note that after\r\nremoving one letter, the indices of other letters don\u2019t change. For\r\nexample, if \"\" and then removals make the following sequence of words \"\"\r\n\"\" \"\" \"\" \"\" \"\" \"\".Sergey knows this permutation. His goal is to stop his\r\nsister at some point and continue removing by himself to get the word .\r\nSince Nastya likes this activity, Sergey wants to stop her as late as\r\npossible. Your task is to determine, how many letters Nastya can remove\r\nbefore she will be stopped by Sergey.It is guaranteed that the word can\r\nbe obtained by removing the letters from word .\r\n", "solutions": ["#include <bits/stdc++.h>\n#ifndef ONLINE_JUDGE\n# include <sys/time.h>\n# include <sys/resource.h>\n#endif\n\n/*** TEMPLATE CODE STARTS HERE ***/\n\nusing namespace std;\n\ntypedef vector<string> vs;\ntypedef long long ll;\ntypedef complex<double> pnt;\ntypedef vector<ll> vi;\ntypedef pair<ll, ll> pii;\n\n#define RA(x) begin(x), end(x)\n#define FE(i, x) for (auto i = begin(x); i != end(x); ++i)\n#define SZ(x) ((ll) (x).size())\n\ntemplate<class T>\nvoid splitstr(const string &s, vector<T> &out)\n{\n    istringstream in(s);\n    out.clear();\n    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));\n}\n\ntemplate<class T> T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }\n\nstatic void redirect(int argc, const char **argv)\n{\n#ifndef ONLINE_JUDGE\n    struct rlimit rlim;\n    getrlimit(RLIMIT_STACK, &rlim);\n    rlim.rlim_cur = 256 * 1024 * 1024;\n    setrlimit(RLIMIT_STACK, &rlim);\n    getrlimit(RLIMIT_DATA, &rlim);\n    rlim.rlim_cur = 256 * 1024 * 1024;\n    setrlimit(RLIMIT_DATA, &rlim);\n#endif\n\n    ios::sync_with_stdio(false);\n    if (argc > 1)\n    {\n        static filebuf f;\n        f.open(argv[1], ios::in);\n        cin.rdbuf(&f);\n        if (!cin)\n        {\n            cerr << \"Failed to open '\" << argv[1] << \"'\" << endl;\n            exit(1);\n        }\n    }\n\n    if (argc > 2)\n    {\n        static filebuf f;\n        f.open(argv[2], ios::out | ios::trunc);\n        cout.rdbuf(&f);\n        if (!cout)\n        {\n            cerr << \"Failed to open '\" << argv[2] << \"'\" << endl;\n        }\n    }\n}\n\n/*** TEMPLATE CODE ENDS HERE */\n\nint main(int argc, const char **argv)\n{\n    redirect(argc, argv);\n    string t, p;\n    cin >> t >> p;\n    int L = SZ(t);\n    vector<int> perm(L);\n    for (int i = 0; i < L; i++)\n    {\n        cin >> perm[i];\n        perm[i]--;\n    }\n    int lo = 0;\n    int hi = L;\n    while (hi - lo > 1)\n    {\n        int mid = (lo + hi) / 2;\n        string r = t;\n        for (int i = 0; i < mid; i++)\n            r[perm[i]] = '_';\n        int pos = 0;\n        for (char c : p)\n        {\n            while (pos < L && r[pos] != c)\n                pos++;\n            pos++;\n        }\n        if (pos <= L)\n            lo = mid;\n        else\n            hi = mid;\n    }\n    cout << lo << '\\n';\n\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["binary search", "greedy", "strings"], "dificulty": "1700", "interactive": false}