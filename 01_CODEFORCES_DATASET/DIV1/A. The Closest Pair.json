{
    "link": "https://codeforces.com//contest/311/problem/A",
    "problemId": "3068",
    "problem_idx": "A",
    "shortId": "311A",
    "contest_number": "311",
    "problem_submissions": {
        "D": [
            3779247,
            3776962,
            3778512,
            3778294,
            7187096,
            3778596,
            3778655,
            3779595,
            3782423,
            3776852,
            3786173,
            3776817,
            3777538,
            3777530,
            3777687,
            3778930,
            3778715,
            3781988,
            3781985,
            3780451,
            3778559
        ],
        "C": [
            3778239,
            3780359,
            3778509,
            3777340,
            3780975
        ],
        "A": [
            3773410,
            3772638,
            3772385,
            3772049,
            3772839,
            3772053,
            3772233,
            3773330,
            3772046,
            3773286,
            3772169,
            3772655,
            3772327,
            3772092,
            3778118,
            3777958,
            3772079,
            3772167,
            3778901
        ],
        "B": [
            3779559,
            3776732,
            3776480,
            3777959,
            3776688,
            3778706,
            3777594,
            3778546
        ],
        "E": [
            3786260,
            3786243,
            3779354,
            3780972,
            3779369
        ]
    },
    "name": "A. The Closest Pair",
    "statement": "Currently Tiny is learning Computational Geometry. When trying to solve\r\na problem called \"The Closest Pair Of Points In The Plane\", he found\r\nthat a code which gave a wrong time complexity got Accepted instead of\r\nTime Limit Exceeded.The problem is the follows. Given points in the\r\nplane, find a pair of points between which the distance is minimized.\r\nDistance between and is .The pseudo code of the unexpected code is as\r\nfollows:input nfor i from 1 to n input the i-th point\u2019s coordinates into\r\np[i]sort array p[] by increasing of x coordinate first and increasing of\r\ny coordinate secondd=INF //here INF is a number big enoughtot=0for i\r\nfrom 1 to n for j from (i+1) to n ++tot if (p[j].x-p[i].x>=d) then break\r\n//notice that \"break\" is only to be //out of the loop \"for j\"\r\nd=min(d,distance(p[i],p[j]))output dHere, can be regarded as the running\r\ntime of the code. Due to the fact that a computer can only run a limited\r\nnumber of operations per second, should not be more than in order not to\r\nget Time Limit Exceeded.You are a great hacker. Would you please help\r\nTiny generate a test data and let the code get Time Limit Exceeded?\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\n#include<string.h>\n#include<stdlib.h>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define fr(i,n) for(int i=0;i<n;i++)\n#define fo(i,n) for(int i=1;i<=n;i++)\n#define fe(i,n) for(__typeof(n.begin()) i=n.begin();i!=n.end();i++)\nint n,k;\nint main()\n{\n\tcin>>n>>k;\n\tif(k>=n*(n-1)/2)\n\t\tputs(\"no solution\");\n\telse\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"1 %d\\n\",i);\n\treturn 0;\n}\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "dificulty": "1300",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. The Closest Pair.json",
    "editorial_link": "https://codeforces.com//blog/entry/7785",
    "editorial": "P.S. I feel really guilty that I've made an awful mistake on the checker.\n\nWe read the pseudo code carefully. If we ignore \"break\", tot will be up to .\n\nConsider whether we can make such inequality d???p[j].x?-?p[i].x is always false. The obvious way is to make all points' x coordinates the same. And we can just choose n distinct numbers to be all points' y coordinate.\n\nThus the problem is solved."
}