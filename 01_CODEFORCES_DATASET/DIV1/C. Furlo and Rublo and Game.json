{"link": "https://codeforces.com//contest/256/problem/C", "problemId": "2402", "problem_idx": "C", "shortId": "256C", "contest_number": "256", "problem_submissions": {"B": [2781429, 2776681, 2779641, 2777927, 2779004, 2777545, 2777829, 2778651, 2777720, 2778451, 2776552, 2782245, 2781330, 2777533], "D": [2779473, 2779904, 2777535, 2782686, 2789193, 2781305], "E": [2777253, 2781852, 2779020, 2775034, 2779843, 2779937, 2778999, 2781729, 2780947, 2779725, 2804945, 2804943, 2781663, 2781905, 2777856, 2780182, 2777426, 2780269], "C": [2776456, 2777569, 2783097, 2779210, 2776586, 2776922, 2776660, 2779042, 2777560, 2782221, 2778280, 2780113, 2780104, 2777296], "A": [2774012, 2782979, 2775596, 2779786, 2774535, 2774925, 2776089, 2773923, 2775590, 2774961, 2782829, 2781660, 2781773, 2774247]}, "name": "C. Furlo and Rublo and Game", "statement": "Furlo and Rublo play a game. The table has piles of coins lying on it,\r\nthe -th pile has coins. Furlo and Rublo move in turns, Furlo moves\r\nfirst. In one move you are allowed to: choose some pile, let\u2019s denote\r\nthe current number of coins in it as ; choose some integer and decrease\r\nthe number of coins in this pile to . In other words, after the\r\ndescribed move the pile will have coins left. The player who can\u2019t make\r\na move, loses. Your task is to find out, who wins in the given game if\r\nboth Furlo and Rublo play optimally well.\r\n", "solutions": ["#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <climits>\n#include <numeric>\n#include <vector>\n#include <cmath>\n#include <set>\nusing namespace std;\ntypedef long long int64;\nint n;\n\nconst int MAX_N = int(1e6);\nint sg[MAX_N];\nconst int MAX_SG = 5;\nint cnt[MAX_SG][MAX_N];\n\nint eval(int64 x) {\n\t//x^(1/4),x^2\n\tint64 y = sqrt((double) x) - 2;\n\tif (y < 0)\n\t\ty = 0;\n\twhile (y * y <= x)\n\t\t++y;\n\t--y;\n\t//y*y<=x\n\tif (y == x)\n\t\t--y;\n\t//y<x\n\tint64 z = sqrt(y) - 2;\n\tif (z < 0)\n\t\tz = 0;\n\twhile (z * z * z * z < x)\n\t\t++z;\n\t//z^4>=x\n\t//z..y\n\tif (z > y)\n\t\treturn 0;\n\tfor (int k = 0; k < MAX_SG; ++k) {\n\t\tint c = cnt[k][y] - cnt[k][z - 1];\n\t\tif (c == 0)\n\t\t\treturn k;\n\t}\n\treturn MAX_SG;\n}\n\nint main() {\n\tsg[0] = sg[1] = 0;\n\tcnt[0][0] = 1;\n\tcnt[0][1] = 2;\n\n\tfor (int i = 2; i < MAX_N; ++i) {\n\t\tsg[i] = eval(i);\n\t\tfor (int j = 0; j < MAX_SG; ++j) {\n\t\t\tcnt[j][i] = cnt[j][i - 1];\n\t\t}\n\t\tcnt[sg[i]][i]++;\n\t}\n\tcin >> n;\n\tint xr = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint64 a;\n\t\tcin >> a;\n\t\tif (a < MAX_N)\n\t\t\txr ^= sg[a];\n\t\telse\n\t\t\txr ^= eval(a);\n\t}\n\tif (xr)\n\t\tputs(\"Furlo\");\n\telse\n\t\tputs(\"Rublo\");\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["games"], "dificulty": "2200", "interactive": false}