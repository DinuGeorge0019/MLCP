{"link": "https://codeforces.com//contest/668/problem/B", "problemId": "57060", "problem_idx": "B", "shortId": "668B", "contest_number": "668", "problem_submissions": {"F": [17499550, 17496606, 17499490, 17520108, 17532592, 18501140, 17506872], "B": [17492263, 17485934, 18962334, 18962098, 17485171, 17485437, 17486714, 17488923, 17486945, 17485337, 17484629, 17487464, 17484958, 17488407, 17491479, 17485748, 17490028, 17488673, 17494403, 17485637], "D": [17490332, 17487430, 17490281, 17491665, 17491589, 17491023, 17492381, 17491847, 17510482, 17491540, 17491742, 17492256, 17492993, 17492659, 17489839, 17492977, 17494347, 17514667, 17493357, 17493004, 17491261], "C": [17488542, 17483428, 17488211, 17499595, 17489413, 17489671, 17487966, 17489865, 17488377, 17490380, 17490343, 17491934, 17490751, 17488239, 17491003, 17488540, 17492291, 17488705, 17488521], "A": [17482539, 17489363, 17482477, 17482341, 17484937, 17482743, 17482929, 17482753, 17482646, 17483327, 17482913, 17484500, 17493264, 17483554, 17483365, 17482861, 17485075, 17503074], "E": [17501421, 17514396, 17516687, 17501875, 18500143, 17500162, 17503103]}, "name": "B. Little Artem and Dance", "statement": "Little Artem is fond of dancing. Most of all dances Artem likes rueda\r\nCuban dance that is danced by pairs of boys and girls forming a circle\r\nand dancing together.More detailed, there are pairs of boys and girls\r\nstanding in a circle. Initially, boy number dances with a girl number ,\r\nboy number dances with a girl number and so on. Girls are numbered in\r\nthe clockwise order. During the dance different moves are announced and\r\nall pairs perform this moves. While performing moves boys move along the\r\ncircle, while girls always stay at their initial position. For the\r\npurpose of this problem we consider two different types of moves: Value\r\nand some direction are announced, and all boys move positions in the\r\ncorresponding direction. Boys dancing with even-indexed girls swap\r\npositions with boys who are dancing with odd-indexed girls. That is the\r\none who was dancing with the girl swaps with the one who was dancing\r\nwith the girl number , while the one who was dancing with girl number\r\nswaps with the one who was dancing with the girl number and so one. It\u2019s\r\nguaranteed that is even. Your task is to determine the final position of\r\neach boy.\r\n", "solutions": ["#include <string>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <set>\n#include <map>\n#include <queue>\n#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <cctype>\n#include <cassert>\n#include <limits>\n#include <functional>\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\n#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))\n#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))\n#if defined(_MSC_VER) || __cplusplus > 199711L\n#define aut(r,v) auto r = (v)\n#else\n#define aut(r,v) __typeof(v) r = (v)\n#endif\n#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)\n#define all(o) (o).begin(), (o).end()\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair((x),(y))\n#define mset(m,v) memset(m,v,sizeof(m))\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\nusing namespace std;\ntypedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii; typedef long long ll;\ntemplate<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }\ntemplate<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }\n\nint main() {\n\tint n; int q;\n\twhile(~scanf(\"%d%d\", &n, &q)) {\n\t\tvector<bool> swapseq;\n\t\tint rot = 0;\n\t\trep(i, q) {\n\t\t\tint ty;\n\t\t\tscanf(\"%d\", &ty);\n\t\t\tif(ty == 1) {\n\t\t\t\tint x;\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\trot = ((rot - x) % n + n) % n;\n\t\t\t} else if(ty == 2) {\n\t\t\t\tswapseq.push_back(rot % 2 != 0);\n\t\t\t\tif(swapseq.size() >= 2 && swapseq.end()[-1] == swapseq.end()[-2])\n\t\t\t\t\tswapseq.resize(swapseq.size() - 2);\n\t\t\t} else abort();\n\t\t}\n\t\tvi ans(n);\n\t\tint t = swapseq.size() % n;\n\t\trep(i, n) {\n\t\t\tint j = (i + (swapseq.empty() ? 0 : swapseq[0])) % 2 == 0 ? i + t : i - t;\n\t\t\tj = (j % n + n) % n;\n\t\t\tans[j] = i + 1;\n\t\t}\n\t\trotate(ans.begin(), ans.begin() + rot, ans.end());\n\t\tfor(int i = 0; i < (int)ans.size(); ++ i) {\n\t\t\tif(i != 0) putchar(' ');\n\t\t\tprintf(\"%d\", ans[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["implementation"], "dificulty": "1800", "interactive": false}