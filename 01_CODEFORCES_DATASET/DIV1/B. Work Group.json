{"link": "https://codeforces.com//contest/533/problem/B", "problemId": "26203", "problem_idx": "B", "shortId": "533B", "contest_number": "533", "problem_submissions": {"A": [10758806, 41260125, 10758808, 10802245, 10802137, 10804672], "F": [10756507, 10757309, 10756418, 10756618, 10756621, 10756168, 10757079, 10756058, 10757142, 10756771, 10757619, 10759646, 10756355, 10754977, 10755266, 10757451, 10757215], "B": [10754115, 10753181, 10753247, 10758386, 10754046, 10755412, 10754879, 10754156, 10755561, 10754427, 10755399, 10754294, 10754859, 10753587, 10753864, 10753648, 10756961, 10754716, 10755774], "E": [10753290, 10754938, 10754117, 10754867, 10757574, 10755405, 10753428, 10753036, 10753133, 10753451, 10753117, 10753877, 10753615, 10753601, 10754357, 10753173, 10756615, 10756357, 10753749, 10753638], "C": [10753054, 10753925, 10753515, 10754395, 10759452, 10754436, 10754096, 10753898, 10753485, 10759228, 10753726, 10753443, 10753028, 10753108, 10754551, 10754248, 10757723, 10757684, 10753241, 10754870], "D": [10759362, 10758040, 10759441, 10756824, 10799120, 10799069]}, "name": "B. Work Group", "statement": "One Big Software Company has employees numbered from to . The director\r\nis assigned number . Every employee of the company except the director\r\nhas exactly one immediate superior. The director, of course, doesn\u2019t\r\nhave a superior.We will call person a subordinates of another person ,\r\nif either is an immediate supervisor of , or the immediate supervisor of\r\nis a subordinate to person . In particular, subordinates of the head are\r\nall other employees of the company.To solve achieve an Important Goal we\r\nneed to form a workgroup. Every person has some efficiency, expressed by\r\na positive integer , where is the person\u2019s number. The efficiency of the\r\nworkgroup is defined as the total efficiency of all the people included\r\nin it.The employees of the big software company are obsessed with modern\r\nways of work process organization. Today pair programming is at the peak\r\nof popularity, so the workgroup should be formed with the following\r\ncondition. Each person entering the workgroup should be able to sort all\r\nof his subordinates who are also in the workgroup into pairs. In other\r\nwords, for each of the members of the workgroup the number of his\r\nsubordinates within the workgroup should be even.Your task is to\r\ndetermine the maximum possible efficiency of the workgroup formed at\r\nobserving the given condition. Any person including the director of\r\ncompany can enter the workgroup.\r\n", "solutions": ["#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef pair<LL,LL> PI;\ntypedef double D;\n#define FI first\n#define SE second\n#define MP make_pair\n#define PB push_back\n#define R(I,N) for(int I=0;I<N;I++)\n#define F(I,A,B) for(int I=A;I<B;I++)\n#define FD(I,N) for(int I=N-1;I>=0;I--)\n#define make(A) scanf(\"%d\",&A)\n#define make2(A,B) scanf(\"%d%d\",&A,&B)\n#define ALL(x) (x).begin(), (x).end()\n#define db if(1)printf\ntemplate<typename C> void MA(C& a,C b){if(a<b)a=b;}\ntemplate<typename C> void MI(C& a,C b){if(a>b)a=b;}\n#define MAX 210001\nint n;\nint c[MAX];\nLL w1[MAX],w2[MAX];\nvector<int> d[MAX];\nPI dfs(int nr){\n  PI res = MP(0ll,(LL)-1e18);\n  R(i,d[nr].size()){\n    PI pom = dfs(d[nr][i]);\n    res = MP(\n      max(pom.FI + res.FI,pom.SE+res.SE),\n      max(pom.FI + res.SE,pom.SE+res.FI)\n    );\n  }\n  MA(res.SE,res.FI + c[nr]);\n  return res;\n}\nmain(){\n  make(n);\n  R(i,n){\n    int a;\n    make2(a,c[i]);\n    if(a != -1){\n      a--;\n      d[a].PB(i);\n    }\n  }\n  PI wyn = dfs(0);\n  printf(\"%lld\\n\",max(wyn.FI,wyn.SE));\n}"], "input": "", "output": "", "tags": ["dfs and similar", "dp", "graphs", "strings", "trees"], "dificulty": "2000", "interactive": false}