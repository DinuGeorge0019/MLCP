{
    "link": "https://codeforces.com//contest/1264/problem/F",
    "problemId": "486707",
    "problem_idx": "F",
    "shortId": "1264F",
    "contest_number": "1264",
    "problem_submissions": {
        "B": [
            66341401,
            66322874,
            66336572,
            66329159,
            66325790,
            66330100,
            66345009,
            66330236,
            66376038,
            66331864,
            66336631,
            66328124,
            66347648,
            66329347,
            66322983,
            66344650,
            66327116,
            66327090,
            66332056
        ],
        "D2": [
            66339545,
            66335577,
            66343751,
            66352069,
            66344993,
            66344301,
            66348378,
            66362083,
            66352256,
            66376168,
            66345089,
            138527512,
            66378228,
            66393120,
            66349950,
            66338137,
            66353567,
            66351786
        ],
        "D1": [
            66334941,
            66334668,
            66343694,
            66345117,
            66344078,
            66344165,
            66344520,
            66350440,
            66349159,
            66376114,
            66339049,
            66358201,
            66357642,
            66351611,
            66357362,
            66352980,
            66346482,
            66338263,
            66345809,
            66347614
        ],
        "A": [
            66330725,
            66323882,
            66323064,
            66323750,
            66337390,
            66323088,
            66323240,
            66323608,
            66323803,
            66375789,
            66323639,
            66328235,
            66324332,
            66323365,
            66323990,
            66326030,
            66323496,
            66322830,
            66323987,
            66323760
        ],
        "C": [
            66326327,
            66330012,
            66334720,
            66339910,
            66341281,
            66334697,
            66340151,
            66333112,
            66337232,
            66376069,
            66331626,
            66349943,
            66341121,
            66340814,
            66329673,
            66346210,
            66334293,
            66333006,
            66337575,
            66339417,
            66355906
        ],
        "E": [
            66322750,
            66338115,
            66328737,
            66333356,
            66334932,
            66353827,
            66331679,
            66338428,
            66427601,
            66422500,
            66422400,
            66421563,
            66419015,
            66419013,
            66380135,
            66362673,
            66361972,
            66357957,
            66377834,
            66346874,
            66338003,
            66349170,
            66358017,
            66342846,
            66355768,
            66361241,
            66346679
        ],
        "F": [
            66498558,
            115183857
        ]
    },
    "name": "F. Beautiful Fibonacci Problem",
    "statement": "The well-known Fibonacci sequence F_0, F_1, F_2,\r\nldots is defined as follows: F_0 = 0, F_1 = 1. For each i\r\ngeq 2: F_i = F_{i - 1} + F_{i - 2}. Given an increasing arithmetic\r\nsequence of positive integers with n elements: (a, a + d, a + 2\r\ncdot d,\r\nldots, a + (n - 1)\r\ncdot d).You need to find another increasing arithmetic sequence of\r\npositive integers with n elements (b, b + e, b + 2\r\ncdot e,\r\nldots, b + (n - 1)\r\ncdot e) such that: 0 < b, e < 2^{64}, for all 0\r\nleq i < n, the decimal representation of a + i\r\ncdot d appears as substring in the last 18 digits of the decimal\r\nrepresentation of F_{b + i\r\ncdot e} (if this number has less than 18 digits, then we consider all\r\nits digits).\r\n",
    "solutions": [
        "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    long long x = 3337867500;\n    int n, a, d;\n    cin >> n >> a >> d;\n    cout << a * x << \" \" << d * x << endl;\n    return 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "constructive algorithms",
        "number theory"
    ],
    "dificulty": "3500",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\F. Beautiful Fibonacci Problem.json",
    "editorial_link": "https://codeforces.com/blog/entry/71995",
    "editorial": "Intuitively, we want to a formula for . This is one we need: .Denote ,\r\none can verify that modulo (directly calculate or use â).So we have\r\nfollowing properties: modulo . modulo . So on, modulo . Notice that ,\r\nwhere .So modulo .Let modulo , modulo . Then we choose .\r\n",
    "hint": []
}