{
    "link": "https://codeforces.com//contest/685/problem/A",
    "problemId": "63492",
    "problem_idx": "A",
    "shortId": "685A",
    "contest_number": "685",
    "problem_submissions": {
        "D": [
            18684968,
            18683037,
            18681924,
            18684130,
            18684858,
            18675255,
            18679526,
            18679808,
            18682052,
            18681014,
            18682178,
            18675901,
            18679039,
            18766980,
            18685989,
            18678764,
            18679061
        ],
        "E": [
            18680021,
            18684845,
            18678334,
            18685890,
            18682877,
            18680554,
            18681882,
            18681692,
            18684390,
            18678520,
            18684936,
            18720222,
            18691735,
            18673504,
            18680472,
            18683676
        ],
        "C": [
            18677291,
            18679523,
            18681119,
            18679602,
            18685346,
            19679131,
            18684317,
            18682713,
            18688360
        ],
        "B": [
            18672960,
            18674692,
            18671800,
            18672771,
            18680872,
            18678053,
            18673109,
            18673699,
            18678361,
            18684612,
            18675812,
            18678146,
            19679139,
            19641621,
            18676260,
            18675658,
            18675674,
            18671554,
            18673419,
            18674754,
            18676154
        ],
        "A": [
            18671402,
            18670567,
            18669065,
            18670159,
            18670329,
            18681950,
            18668946,
            18671121,
            18669783,
            18686475,
            18678918,
            18676980,
            19641683,
            18673416,
            18767003,
            18671711,
            18682810,
            18674563,
            18668359,
            18672213
        ]
    },
    "name": "A. Robbers  watch",
    "statement": "Robbers, who attacked the Gerda\u2019s cab, are very successful in covering\r\nfrom the kingdom police. To make the goal of catching them even harder,\r\nthey use their own watches.First, as they know that kingdom police is\r\nbad at math, robbers use the positional numeral system . Second, they\r\ndivide one day in hours, and each hour in minutes. Personal watches of\r\neach robber are divided in two parts: first of them has the smallest\r\npossible number of places that is necessary to display any integer from\r\nto , while the second has the smallest possible number of places that is\r\nnecessary to display any integer from to . Finally, if some value of\r\nhours or minutes can be displayed using less number of places in base\r\nthan this watches have, the required number of zeroes is added at the\r\nbeginning of notation.Note that to display number section of the watches\r\nis required to have at least one place.Little robber wants to know the\r\nnumber of moments of time (particular values of hours and minutes), such\r\nthat all digits displayed on the watches are . Help her calculate this\r\nnumber.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<queue>\n#include<bitset>\n#include<utility>\n#include<functional>\n#include<iomanip>\n#include<sstream>\n#include<ctime>\n#include<cassert>\nusing namespace std;\n#define y0 y0z\n#define y1 y1z\n#define yn ynz\n#define j0 j0z\n#define j1 j1z\n#define jn jnz\n#define tm tmz\n#define buli(x) (__builtin_popcountll(x))\n#define bur0(x) (__builtin_ctzll(x))\n#define bul2(x) (63-__builtin_clzll(x))\n#define mp make_pair\n#define pb push_back\n#define fi first\n#define se second\n#define fil(a,b) memset((a),(b),sizeof(a))\n#define cl(a) fil(a,0)\n#define siz(x) ((int)(x).size())\n#define all(x) (x).begin(),(x).end()\n#define foreach(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)\n#define rep(i,a,b) for (int i=(a),_ed=(b);i<_ed;i++)\n#define per(i,a,b) for (int i=(b)-1,_ed=(a);i>=_ed;i--)\n#define pw(x) ((ll(1))<<(x))\n#define upmo(a,b) (((a)=((a)+(b))%mo)<0?(a)+=mo:(a))\n#define mmo(a,b) (((a)=1ll*(a)*(b)%mo)<0?(a)+=mo:(a))\nvoid getre(){int x=0;printf(\"%d\\n\",1/x);}\nvoid gettle(){int res=1;while(1)res<<=1;printf(\"%d\\n\",res);}\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpii;\ntemplate<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}\ntemplate<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}\ntemplate<typename N,typename PN>inline N flo(N a,PN b){return a>=0?a/b:-((-a-1)/b)-1;}\ntemplate<typename N,typename PN>inline N cei(N a,PN b){return a>0?(a-1)/b+1:-(-a/b);}\ntemplate<typename N>N gcd(N a,N b){return b?gcd(b,a%b):a;}\ntemplate<typename N>inline int sgn(N a){return a>0?1:(a<0?-1:0);}\n#if ( ( _WIN32 || __WIN32__ ) && __cplusplus < 201103L)\n    #define lld \"%I64d\"\n#else\n    #define lld \"%lld\"\n#endif\ninline void gn(long long&x){\n\tint sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');c=='-'?(sg=-1,x=0):(x=c-'0');\n\twhile((c=getchar())>='0'&&c<='9')x=x*10+c-'0';x*=sg;\n}\ninline void gn(int&x){long long t;gn(t);x=t;}\ninline void gn(unsigned long long&x){long long t;gn(t);x=t;}\ninline void gn(double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gn(long double&x){double t;scanf(\"%lf\",&t);x=t;}\ninline void gs(char *s){scanf(\"%s\",s);}\ninline void gc(char &c){while((c=getchar())>126 || c<33);}\ninline void pc(char c){putchar(c);}\n#ifdef JCVB\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define debug(...) \n#endif\ntypedef long long ll;\ntypedef double db;\ninline ll sqr(ll a){return a*a;}\ninline db sqrf(db a){return a*a;}\nconst int inf=0x3f3f3f3f;\nconst db pi=3.14159265358979323846264338327950288L;\nconst db eps=1e-6;\n//const int mo=0;\n//int qp(int a,ll b){int n=1;do{if(b&1)n=1ll*n*a%mo;a=1ll*a*a%mo;}while(b>>=1);return n;}\nint n,m;\nint la,lb;\n\nint len(int n){\n\tn--;\n\tif(n==0)return 1;\n\tint su=0;\n\twhile(n){\n\t\tsu++;\n\t\tn/=7;\n\t}\n\treturn su;\n}\n\nint arr[20];\nint bo[20];\n\nint ret=0;\nvoid dfs(int i){\n\tif(i==la+lb+1){\n\t\tint su=0;\n\t\trep(j,1,la+1)su=su*7+arr[j];\n\t\tif(su>=n)return;\n\t\tsu=0;\n\t\trep(j,la+1,la+1+lb)su=su*7+arr[j];\n\t\tif(su>=m)return;\n\n\t\tret++;\n\n\n\n\t}else{\n\t\trep(j,0,7)if(!bo[j]){\n\t\t\tbo[j]=1;\n\t\t\tarr[i]=j;\n\t\t\tdfs(i+1);\n\t\t\tbo[j]=0;\n\t\t}\n\t}\n}\nint main()\n{\n#ifdef JCVB\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tint _time_jc=clock();\n#endif\n\tgn(n);gn(m);\n\tla=len(n);\n\tlb=len(m);\n\tif(la+lb>7){\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\tdfs(1);\n\tprintf(\"%d\\n\",ret);\n\n\t\n#ifdef JCVB\n\tdebug(\"time: %d\\n\",int(clock()-_time_jc));\n#endif\n\treturn 0;\n}\n\n"
    ],
    "input": "",
    "output": "",
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. Robbers  watch.json",
    "editorial_link": "https://codeforces.com//blog/entry/45558",
    "editorial": "In this problem we use the septimal number system. It is a very important limitation. Let's count how many digits are showed on the watch display and call it cnt. If cnt more than 7, the answer is clearly 0 (because of pigeonhole principle). If cnt is not greater than 7, then you can just bruteforces all cases.\nDepending on the implementation it will be O(BASE?BASEBASE), O(BASEBASE) or O(BASE?BASE!), where BASE?=?7. Actually the most simple implementation is just to cycle between all posible hour:minute combinations and check them.\nIn the worst case, it will work in O(BASE?BASEBASE)."
}