{"link": "https://codeforces.com//contest/135/problem/C", "problemId": "718", "problem_idx": "C", "shortId": "135C", "contest_number": "135", "problem_submissions": {"C": [944684, 941895, 941745, 941532, 944650, 945527, 942928, 943119, 942454, 943300, 943389, 941561, 941623, 940913, 942350, 941874, 942533], "D": [941660, 943291, 945020, 944509, 943932, 944955, 945060, 946515, 946811, 946183, 947267, 1202616, 943338, 947399, 947531, 948318], "B": [938992, 939256, 939578, 939872, 939430, 940532, 941115, 940491, 940317, 940731, 941548, 939927, 939245, 939945, 939103, 940367, 940260, 939461], "A": [937548, 938377, 938253, 937895, 937980, 938055, 938264, 938797, 937811, 937813, 938237, 937770, 937935, 938511, 937731, 937759, 937846, 937880], "E": [949929, 947660, 945720, 950498, 947878, 947674]}, "name": "C. Zero-One", "statement": "Little Petya very much likes playing with little Masha. Recently he has\r\nreceived a game called \"Zero-One\" as a gift from his mother. Petya\r\nimmediately offered Masha to play the game with him.Before the very\r\nbeginning of the game several cards are lain out on a table in one line\r\nfrom the left to the right. Each card contains a digit: 0 or 1. Players\r\nmove in turns and Masha moves first. During each move a player should\r\nremove a card from the table and shift all other cards so as to close\r\nthe gap left by the removed card. For example, if before somebody\u2019s move\r\nthe cards on the table formed a sequence 01101, then after the fourth\r\ncard is removed (the cards are numbered starting from 1), the sequence\r\nwill look like that: 01101. The game ends when exactly two cards are\r\nleft on the table. The digits on these cards determine the number in\r\nbinary notation: the most significant bit is located to the left.\r\nMasha\u2019s aim is to minimize the number and Petya\u2019s aim is to maximize\r\nit.An unpleasant accident occurred before the game started. The kids\r\nspilled juice on some of the cards and the digits on the cards got\r\nblurred. Each one of the spoiled cards could have either 0 or 1 written\r\non it. Consider all possible variants of initial arrangement of the\r\ndigits (before the juice spilling). For each variant, let\u2019s find which\r\ntwo cards are left by the end of the game, assuming that both Petya and\r\nMasha play optimally. An ordered pair of digits written on those two\r\ncards is called an . Your task is to find the set of outcomes for all\r\nvariants of initial digits arrangement.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <memory.h>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <set>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\n#define forn( i,n ) for ( int i=0; i<(int)(n); i++ )\n#define foreach( it, a ) for ( __typeof((a).begin()) it = (a).begin(); it != (a).end(); it++ )\n#define pb push_back\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\n\nchar s[100010];\n\nint main()\n{\n  gets( s );\n  int n = strlen( s );\n  int c0 = 0, c1 = 0, c2 = 0;\n  forn( i, n ) {\n    if ( s[i] == '0' ) c0++;\n    if ( s[i] == '1' ) c1++;\n    if ( s[i] == '?' ) c2++;\n  }\n\n  vector<string> ans;\n  if ( n&1 ) {\n    if ( c0 + c2 > c1 ) ans.pb( \"00\" );\n    if ( c1 + c2 > c0 + 1 ) ans.pb( \"11\" );\n  } else { \n    if ( c0 + c2 > c1 + 1 ) ans.pb( \"00\" );\n    if ( c1 + c2 > c0 + 1 ) ans.pb( \"11\" );\n  }\n\n    int k = n >> 1;\n    if ( c0 + c2 >= k && c0 <= k ) {\n      int n0 = k-c0;\n      int n1 = c2 - n0;\n      if ( (s[n-1] == '?' && n0 > 0) || s[n-1] == '0' ) ans.pb( \"10\" );\n      if ( (s[n-1] == '?' && n1 > 0) || s[n-1] == '1' ) ans.pb( \"01\" );\n    }\n\n  sort( ans.begin(), ans.end() );\n\n  forn( i, ans.size() )\n    printf( \"%s\\n\", ans[i].c_str() );\n\n  return 0;\n}"], "input": "", "output": "", "tags": ["constructive algorithms", "games", "greedy"], "dificulty": "1900", "interactive": false}