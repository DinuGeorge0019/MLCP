{"link": "https://codeforces.com//contest/1188/problem/E", "problemId": "366824", "problem_idx": "E", "shortId": "1188E", "contest_number": "1188", "problem_submissions": {"A2": [56584964, 56567602, 56566524, 56572382, 56589644, 56583972, 56579938, 56582233, 56570590, 56576661, 56589231, 56587448, 56570901, 56587024, 56574198, 56581669, 56571222], "E": [56582671, 56589474, 56589239, 141774833, 57345099, 56596996, 56642394], "D": [56576903, 56585842, 56583846, 56589764, 56584452, 56586331, 56584084, 56596587, 56577947, 56602284], "C": [56571735, 56576008, 56572799, 56580329, 56577305, 56572037, 56574271, 56570306, 56577496, 56576142, 56583479, 56585009, 56584467, 56575353, 56583067, 56585221, 56572902, 56587295, 56575946, 56586708], "B": [56568214, 56570555, 56562488, 56571471, 56575984, 56607436, 56565158, 56574148, 56570733, 56572983, 56567704, 56568743, 56568263, 56575440, 56583939, 56576017, 56588907, 56575865], "A1": [56561659, 56562944, 56561298, 56564728, 56563727, 56577205, 56564216, 56561247, 56563294, 56561568, 56563293, 56566261, 56569194, 56564914, 56561283, 56572778, 56565086, 56564073, 56561536, 56563748]}, "name": "E. Problem from Red Panda", "statement": "At Moscow Workshops ICPC team gets a balloon for each problem they\r\nsolved first. Team MSU Red Panda got so many balloons that they didn\u2019t\r\nknow how to spend them. So they came up with a problem with them.There\r\nare several balloons, not more than 10^6 in total, each one is colored\r\nin one of k colors. We can perform the following operation: choose k-1\r\nballoons such that they are of k-1 different colors, and recolor them\r\nall into remaining color. We can perform this operation any finite\r\nnumber of times (for example, we can only perform the operation if there\r\nare at least k-1 different colors among current balls).How many\r\ndifferent balloon configurations can we get? Only number of balloons of\r\neach color matters, configurations differing only by the order of\r\nballoons are counted as equal. As this number can be very large, output\r\nit modulo 998244353.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst ll MOD = 998244353;\nll add(ll x, ll y) {\n\tx += y;\n\tif (x >= MOD) return x - MOD;\n\treturn x;\n}\nll sub(ll x, ll y) {\n\tx -= y;\n\tif (x < 0) return x + MOD;\n\treturn x;\n}\nll mult(ll x, ll y) {\n\treturn (x * y) % MOD;\n}\nll bin_pow(ll x, ll p) {\n\tif (p == 0) return 1;\n\tif (p & 1) return mult(x, bin_pow(x, p - 1));\n\treturn bin_pow(mult(x, x), p / 2);\n}\nll rev(ll x) {\n\treturn bin_pow(x, MOD - 2);\n}\n\nconst int N = (int)2e6 + 3;\nint k;\nll f[N], rf[N];\n\nll getC(int n, int m) {\n\tif (m < 0 || m > n) return 0;\n\treturn mult(f[n], mult(rf[m], rf[n - m]));\n}\n\nint a[N], b[N];\n\nint main()\n{\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\n\tf[0] = 1;\n\tfor (int i = 1; i < N; i++)\n\t\tf[i] = mult(f[i - 1], i);\n\trf[N - 1] = rev(f[N - 1]);\n\tfor (int i = N - 1; i > 0; i--)\n\t\trf[i - 1] = mult(rf[i], i);\n\n\tscanf(\"%d\", &k);\n\tfor (int i = 0; i < k; i++) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\ta[x]++;\n\t}\n\tint m = k;\n\tll ans = 1;\n\tint sum = 0;\n\tfor (int i = 0;; i++) {\n\t\tm -= a[i];\n\t\tsum += a[i] + b[i];\n\t\tb[i + k] += a[i] + b[i];\n\t\tif (sum > i + 1) break;\n\t\tif (m == 0) break;\n\t\tint S = i + 1 - sum;\n\t\tans = add(ans, sub(getC(S + k - 1, S), getC(S - m + k - 1, S - m)));\n\t}\n\tprintf(\"%lld\\n\", ans);\n\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics"], "dificulty": "3300", "interactive": false}