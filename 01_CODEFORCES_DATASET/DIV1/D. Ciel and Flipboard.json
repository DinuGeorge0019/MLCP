{"link": "https://codeforces.com//contest/321/problem/D", "problemId": "3266", "problem_idx": "D", "shortId": "321D", "contest_number": "321", "problem_submissions": {"D": [3996276, 3980026, 3983272, 3983312, 12592698, 3984131], "E": [3980136, 4452055, 3980389, 3985877, 3982432, 3983276, 3983985, 3983546, 3989402, 3982283, 3982901, 3987486, 3986621, 3986597, 3984324], "B": [3977018, 3976497, 3975346, 3975457, 3977862, 3977933, 3976248, 3977096, 3975835, 3975367, 3981509, 3977308, 3981308, 3976604, 3978354, 23607133], "C": [3976574, 3973635, 80179378, 80179360, 80178543, 80177368, 3977407, 3978721, 3979609, 3977413, 3979117, 3980301, 3977480, 3978832, 3979230, 3979055, 3978017, 3980667, 3983932, 3980825], "A": [3973735, 3982224, 3988924, 3983503, 3973922, 3973057, 3973436, 3974764, 3973866, 3973513, 3973909, 3973666, 3985547, 3973654, 3974568]}, "name": "D. Ciel and Flipboard", "statement": "Fox Ciel has a board with rows and columns, there is one integer in each\r\ncell.It\u2019s known that is an odd number, so let\u2019s introduce . Fox Ciel can\r\ndo the following operation many times: she choose a sub-board with size\r\nrows and columns, then all numbers in it will be multiplied by -1.Return\r\nthe maximal sum of numbers in the board that she can get by these\r\noperations.\r\n", "solutions": ["#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <vector>\nusing namespace std;\nint n, k;\nconst int MAX_N = 33;\n\nint a[MAX_N][MAX_N], b[MAX_N][MAX_N];\n\nint main() {\n\tcin >> n;\n\tk = n / 2;\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tcin >> b[i][j];\n\t\t}\n\t}\n\n\tint ans = 0;\n\n\tfor (int msk = 0; msk < (1 << (k + 1)); ++msk) {\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tfor (int j = 0; j < n; ++j) {\n\t\t\t\ta[i][j] = b[i][j];\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i <= k; ++i) {\n\t\t\tif (msk >> i & 1) {\n\t\t\t\tfor (int x = k; x <= k + k; ++x) {\n\t\t\t\t\tfor (int j = i; j <= i + k; ++j) {\n\t\t\t\t\t\ta[x][j] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//i,i+k+1\n\n\t\tint cur = 0;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tcur += a[k][i];\n\t\t}\n\n\t\tfor (int i = 0; i < k; ++i) {\n\t\t\tfor (int j = 0; j < n; ++j) {\n\t\t\t\ta[i][j] += a[i + k + 1][j];\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < k; ++i) {\n\t\t\t//i,i+k+1\n\t\t\tint t1 = a[i][k], t2 = -t1;\n\t\t\tfor (int j = 0; j < k; ++j) {\n\t\t\t\t//a[i][j],a[i][j+k+1]\n\t\t\t\tint x = a[i][j], y = a[i][j + k + 1];\n\t\t\t\tt1 += max(x + y, -x - y);\n\t\t\t\tt2 += max(-x + y, x - y);\n\t\t\t}\n\t\t\tcur += max(t1, t2);\n\t\t}\n\n\t\tans = max(ans, cur);\n\t}\n\n\tcout << ans << endl;\n\treturn 0;\n}\n"], "input": "", "output": "", "tags": ["dp", "greedy", "math"], "dificulty": "2900", "interactive": false}