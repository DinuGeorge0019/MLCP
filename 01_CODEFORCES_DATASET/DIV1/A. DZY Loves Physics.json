{
    "link": "https://codeforces.com//contest/444/problem/A",
    "problemId": "11250",
    "problem_idx": "A",
    "shortId": "444A",
    "contest_number": "444",
    "problem_submissions": {
        "B": [
            7031130,
            7030965,
            7024958,
            7024676,
            7030446,
            7027559,
            7026989,
            7029436,
            7032613,
            7026604,
            7041433,
            7024980
        ],
        "C": [
            7029407,
            7026783,
            7028625,
            7029070,
            7027854,
            7035787,
            7035783,
            7031351,
            7029689,
            7028909,
            7032738,
            7033609,
            7027863,
            7030366,
            7026206,
            7047158,
            7029026,
            7027864
        ],
        "A": [
            7026572,
            7023113,
            7022682,
            7021917,
            7022193,
            7021891,
            7023277,
            7021994,
            7023490,
            7022290,
            7021818,
            7029841,
            7024232,
            7028150,
            7022608,
            7022804
        ],
        "E": [
            7025382,
            7029973,
            7031979,
            7031957,
            7039984,
            7039647,
            7030433,
            7029905,
            7030939,
            7032469,
            7032562,
            7035736,
            7041366,
            7041365,
            7041358,
            7041326,
            7036608
        ],
        "D": [
            7030340,
            7032449,
            7029379,
            7031920,
            7032235,
            7032726,
            7027353,
            7024739,
            7032806,
            7032764,
            7032749,
            7032739,
            7032700,
            7031354,
            7029340,
            7031710,
            7032104
        ]
    },
    "name": "A. DZY Loves Physics",
    "statement": "Almost everything has density, even a graph. We define the density of a\r\nnon-directed graph (nodes and edges of the graph have some values) as\r\nfollows: where is the sum of the values of the nodes, is the sum of the\r\nvalues of the edges.Once DZY got a graph , now he wants to find a\r\nconnected induced subgraph of the graph, such that the density of is as\r\nlarge as possible.An induced subgraph of a graph is a graph that\r\nsatisfies: ; edge if and only if , and edge ; the value of an edge in is\r\nthe same as the value of the corresponding edge in , so as the value of\r\na node. Help DZY to find the induced subgraph with maximum density. Note\r\nthat the induced subgraph you choose must be connected.\r\n",
    "solutions": [
        "#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<memory.h>\n#include<map>\n#include<set>\n#include<queue>\n#include<list>\n#include<sstream>\n#include<cstring>\n#define mp make_pair\n#define pb push_back      \n#define F first\n#define S second\n#define SS stringstream\n#define sqr(x) ((x)*(x))\n#define m0(x) memset(x,0,sizeof(x))\n#define m1(x) memset(x,63,sizeof(x))\n#define CC(x) cout << (x) << endl\n#define pw(x) (1ll<<(x))\n#define M 1000000007\n#define N 211111\nusing namespace std;\ntypedef pair<int,int> pt;\n\nint n, m;\nint a[N];\n\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\t\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++)scanf(\"%d\", &a[i]);\n\tdouble ans = 0;\n\tfor (int i = 0; i < m; i++) {\n\t\tint x, y, c;\n\t\tscanf(\"%d%d%d\", &x, &y, &c);\n\t\tx--;\n\t\ty--;\n\t\tans = max(ans, (a[x] + a[y]) / 1. / c); \n\t}\n\tprintf(\"%.10lf\\n\", ans);\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "greedy",
        "math"
    ],
    "dificulty": "1600",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\A. DZY Loves Physics.json",
    "editorial_link": "https://codeforces.com//blog/entry/12959",
    "editorial": "If there is a connected induced subgraph containing more than nodes with\r\nthe maximum density. The density of every connected induced subgraph of\r\nit that contains only one edge can be represented as , where are the\r\nvalues of the two nodes linked by the edge. The density of the bigger\r\nconnected induced subgraph is at most . If , and for every edge, . Then\r\nweâll have , and , and , it leads to contradiction. So just check every\r\nsingle node, and every nodes linked by an edge. The time complexity is .\r\ncheck the C++ code here.\r\n",
    "hint": []
}