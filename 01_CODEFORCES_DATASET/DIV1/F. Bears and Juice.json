{"link": "https://codeforces.com//contest/674/problem/F", "problemId": "59817", "problem_idx": "F", "shortId": "674F", "contest_number": "674", "problem_submissions": {"F": [17795703, 17796640, 17795248, 17796731, 17795284, 17786875, 17793312, 17799447, 17799059, 17796927, 17809648], "E": [17791802, 17792589, 17793136, 17792993, 17792579, 17790993, 17797689, 17793850, 17793986, 17790505, 17793423, 17807249, 17795195, 17795763, 17827053, 17796913], "C": [17789698, 17787708, 17787067, 17789946, 17787511, 17796571, 17795757, 17788550, 17790663, 17794959, 17792670, 17795899, 17791267, 17793511, 17791551, 17791808], "B": [17783364, 17783002, 17794015, 17783259, 17783884, 17783532, 17788831, 17784932, 17787141, 17784301, 17785005, 17785023, 17784292, 17783013, 17783128, 17786182, 17784522], "A": [17780055, 17780264, 17780741, 17780847, 17780248, 17780121, 17787726, 17781230, 17780294, 17782551, 17782250, 17781088, 17780155, 17780065, 17780569, 17780629, 17781843], "D": [17798492, 17808237], "G": [17818293, 17796240, 17798313]}, "name": "F. Bears and Juice", "statement": "There are bears in the inn and places to sleep. Bears will party\r\ntogether for some number of nights (and days).Bears love drinking juice.\r\nThey don\u2019t like wine but they can\u2019t distinguish it from juice by taste\r\nor smell.A bear doesn\u2019t sleep unless he drinks wine. A bear must go to\r\nsleep a few hours after drinking a wine. He will wake up many days after\r\nthe party is over.Radewoosh is the owner of the inn. He wants to put\r\nsome number of barrels in front of bears. One barrel will contain wine\r\nand all other ones will contain juice. Radewoosh will challenge bears to\r\nfind a barrel with wine.Each night, the following happens in this exact\r\norder: Each bear must choose a (maybe empty) set of barrels. The same\r\nbarrel may be chosen by many bears. Each bear drinks a glass from each\r\nbarrel he chose. All bears who drink wine go to sleep (exactly those\r\nbears who chose a barrel with wine). They will wake up many days after\r\nthe party is over. If there are not enough places to sleep then bears\r\nlose immediately. At the end, if it\u2019s sure where wine is and there is at\r\nleast one awake bear then bears win (unless they have lost before\r\nbecause of the number of places to sleep).Radewoosh wants to allow bears\r\nto win. He considers scenarios. In the -th scenario the party will last\r\nfor nights. Then, let denote the maximum number of barrels for which\r\nbears surely win if they behave optimally. Let\u2019s define . Your task is\r\nto find , where denotes the exclusive or (also denoted as XOR).Note that\r\nthe same barrel may be chosen by many bears and all of them will go to\r\nsleep at once.\r\n", "solutions": ["#include <iostream>\n#include <tuple>\n#include <sstream>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <cstdio>\n#include <queue>\n#include <set>\n#include <map>\n#include <fstream>\n#include <cstdlib>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <numeric>\n\n#define mp make_pair\n#define mt make_tuple\n#define fi first\n#define se second\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define forn(i, n) for (int i = 0; i < (int)(n); ++i)\n#define for1(i, n) for (int i = 1; i <= (int)(n); ++i)\n#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)\n#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vpi;\ntypedef vector<vi> vvi;\ntypedef long long i64;\ntypedef vector<i64> vi64;\ntypedef vector<vi64> vvi64;\ntypedef pair<i64, i64> pi64;\ntypedef double ld;\ntypedef unsigned int uint;\n\ntemplate<class T> bool uin(T &a, T b) { return a > b ? (a = b, true) : false; }\ntemplate<class T> bool uax(T &a, T b) { return a < b ? (a = b, true) : false; }\n\nconst int maxp = 131;\nuint cnk[maxp][maxp];\nuint dp[maxp][maxp];\nuint bigcnk[maxp], ways[maxp];\n\nuint gcd(uint a, uint b) {\n    return b ? gcd(b, a % b) : a;\n}\n\nuint bcnk(uint a, uint b) {\n    if (b > a) return 0;\n    vector<uint> v(b);\n    forn(i, b) v[i] = a - i;\n    for1(j, b) {\n        uint k = j;\n        forn(i, b) {\n            uint g = gcd(k, v[i]);\n            v[i] /= g;\n            k /= g;\n        }\n        assert(k == 1);\n    }\n    uint ans = 1;\n    forn(i, b) ans *= v[i];\n    return ans;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.precision(10);\n    cout << fixed;\n#ifdef LOCAL_DEFINE\n    freopen(\"input.txt\", \"rt\", stdin);\n#endif\n\n    uint n, p, q;\n    cin >> n >> p >> q;\n    uin(p, n - 1);\n    n -= p;\n    forn(i, p + 1) cnk[0][i] = bcnk(n, i);\n    for1(i, p) {\n        cnk[i][0] = 1;\n        for1(j, p) forn(k, 2) cnk[i][j] += cnk[i - 1][j - k];\n    }\n    forn(k, p + 1) dp[0][k] = 1;\n    forn(i, p) forn(k, p + 1) {\n        for1(j, p) {\n            if (j + k > p) continue;\n            dp[i + 1][j + k] += dp[i][k] * cnk[j + k][j];\n        }\n    }\n    forn(i, p + 1) ways[i] = dp[i][p];\n\n    bigcnk[0] = 1;\n    uint ans = 0;\n    for1(t, q) {\n        ford(i, p) bigcnk[i + 1] += bigcnk[i];\n        uint res = 0;\n        forn(i, p + 1) res += bigcnk[i] * ways[i];\n//        cerr << t << ' ' << res << '\\n';\n        ans ^= res * t;\n    }\n    cout << ans << '\\n';\n\n#ifdef LOCAL_DEFINE\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\n#endif\n    return 0;\n}\n"], "input": "", "output": "", "tags": ["combinatorics", "dp", "meet-in-the-middle"], "dificulty": "2900", "interactive": false}