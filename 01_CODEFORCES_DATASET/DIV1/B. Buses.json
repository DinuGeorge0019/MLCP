{
    "link": "https://codeforces.com//contest/101/problem/B",
    "problemId": "533",
    "problem_idx": "B",
    "shortId": "101B",
    "contest_number": "101",
    "problem_submissions": {
        "E": [
            581450,
            581204,
            582032,
            581815,
            583533,
            582350,
            582875,
            581883,
            582940,
            581812,
            581652,
            609865,
            581480
        ],
        "D": [
            579906,
            580370,
            580629,
            580693,
            580455,
            580917,
            580822,
            581264,
            581190,
            582420,
            581878,
            582155,
            581732,
            582283
        ],
        "C": [
            578895,
            579347,
            578679,
            583091,
            579544,
            583517,
            579698,
            580054,
            580264,
            580522,
            579262,
            580371,
            580419,
            580066,
            579637,
            580178,
            581241,
            579664
        ],
        "B": [
            578351,
            578696,
            579172,
            578659,
            578843,
            578821,
            579066,
            579006,
            579025,
            579013,
            578685,
            579291,
            579413,
            581846,
            582516,
            579343,
            595573
        ],
        "A": [
            577898,
            577949,
            577912,
            577914,
            578124,
            577923,
            577940,
            577996,
            578084,
            577915,
            577920,
            578550,
            577975,
            578049,
            577936,
            578126,
            578340,
            577971
        ]
    },
    "name": "B. Buses",
    "statement": "Little boy Gerald studies at school which is quite far from his house.\r\nThat’s why he has to go there by bus every day. The way from home to\r\nschool is represented by a segment of a straight line; the segment\r\ncontains exactly bus stops. All of them are numbered with integers from\r\nto in the order in which they follow from Gerald’s home. The bus stop by\r\nGerald’s home has number and the bus stop by the school has number\r\n.There are buses running between the house and the school: the -th bus\r\ngoes from stop to (), visiting all the intermediate stops in the order\r\nin which they follow on the segment. Besides, Gerald’s no idiot and he\r\nwouldn’t get off the bus until it is still possible to ride on it closer\r\nto the school (obviously, getting off would be completely pointless). In\r\nother words, Gerald can get on the -th bus on any stop numbered from to\r\ninclusive, but he can get off the -th bus only on the bus stop .Gerald\r\ncan’t walk between the bus stops and he also can’t move in the direction\r\nfrom the school to the house.Gerald wants to know how many ways he has\r\nto get from home to school. Tell him this number. Two ways are\r\nconsidered different if Gerald crosses some segment between the stops on\r\ndifferent buses. As the number of ways can be too much, find the\r\nremainder of a division of this number by ().\r\n",
    "solutions": [
        "#pragma comment(linker, \"/STACK:65777216\")\n\n#include <algorithm>\n#include <iostream>\n#include <string>\n#include<sstream>\n#include<string.h>\n#include <cstdio>\n#include <vector>\n#include <bitset>\n#include <cmath>\n#include <queue>\n#include<stack>\n#include <set>\n#include <map>\n#include<ctime>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<double,double> pdd;\ntypedef unsigned long long ull;\n\n#define FOR(i,a,b) for (int i(a); i < (b); i++) \n#define REP(i,n) FOR(i,0,n) \n#define SORT(v) sort((v).begin(),(v).end())\n#define UN(v) sort((v).begin(),(v).end()),v.erase(unique(v.begin(),v.end()),v.end())\n#define CL(a,b) memset(a,b,sizeof(a))\n#define pb push_back\n\nconst int mod = 1000000007 ;\n\nint n,m;\nint s[111111];\nint t[111111];\nvi x;\nvector<pii> r;\n\nint rr[444444];\n\nvoid add(int pos,int val){\n\tpos += 222222;\n\twhile(pos){\n\t\trr[pos] += val;\n\t\tif(rr[pos]>=mod) rr[pos]-=mod;\n\t\tpos>>=1;\n\t}\n}\n\nint sum(int p1,int p2){\n\tp1 += 222222;\n\tp2 += 222222;\n\n\tint res = 0;\n\twhile(p1<=p2){\n\t\tif(p1&1){\n\t\t\tres += rr[p1];\n\t\t\tif(res>=mod) res-=mod;\n\t\t}\n\t\tif(!(p2&1)){\n\t\t\tres += rr[p2];\n\t\t\tif(res>=mod) res-=mod;\n\t\t}\n\t\tp1= (p1+1)>>1;\n\t\tp2=(p2-1)>>1;\n\t}\n\treturn res;\n}\n\nint main(){ \n#ifdef LocalHost\n\tfreopen(\"input.txt\",\"r\",stdin);\n//\tfreopen(\"output.txt\",\"w\",stdout);\n#endif\n\n\tcin>>n>>m;\n\tREP(i,m) scanf(\"%d %d\",s+i,t+i),x.pb(s[i]),x.pb(t[i]);\n\tx.pb(0);\n\tx.pb(n);\n\tUN(x);\n\tREP(i,m){\n\t\ts[i] = lower_bound(x.begin(),x.end(),s[i])-x.begin();\n\t\tt[i] = lower_bound(x.begin(),x.end(),t[i])-x.begin();\n\t\tr.pb(pii(t[i],s[i]));\n\t}\n\tSORT(r);\n\t\n\tadd(0,1);\n\tREP(i,r.size())\n\t\tadd(r[i].first, sum(r[i].second, r[i].first-1));\n\tcout<<sum(x.size()-1,x.size()-1)<<endl;\n\n#ifdef LocalHost\n\tcout<<endl<<endl<<\"TIME: \"<<clock()<<endl;\n#endif\n\treturn 0;\n}"
    ],
    "input": "",
    "output": "",
    "tags": [
        "binary search",
        "data structures",
        "dp"
    ],
    "dificulty": "1700",
    "interactive": false,
    "file_name": "D:\\scoala\\RESEARCH\\MLCP\\01_CODEFORCES_DATASET\\DIV1\\B. Buses.json",
    "editorial_link": "https://codeforces.com//blog/entry/2393",
    "editorial": "For every slop from 0 to n lets calculate kx - number of ways come to them. Consider the i-th bus. Number of ways come to stop ti applied i-th bus is uqual to number of way to embus to i-th bus.\nOne can embus to i-th bus on the stops si,?si?+?1,?...,?ti?-?1. Thus number of ways come to stop ti in the i bus is equal to sum ksi?+?ksi?+?1?+?...?+?kti?-?1. Finally, lets note that overall number of way to come to stop ti is the sum of numbers of ways to come to stop ti on every bus.\nIt's remained two problems. First problem: 0???n???109. Therefore all kx not climb in memory limit. But we need to know only non-zero kx. For instance, one can gripe coordinates: create list of all occured stops (and also stops 0 and n), sort this list, delete the repeated stops and replace all numbers of stops they indexes in this list. After this operations all number of stops not exceed 200001, and all kx are climb to the memory.\nSecond problem: if we will use loop \"for\" for counting sum ksi?+?ksi?+?1?+?...?+?kti?-?1, asymptotic of time of working will be O(m^2). There is an easy way to solve this problem: one can create and update array sum[], such that sum[i]?=?k[0]?+?k[1]?+?...?+?k[i?-?1], by another words, sum[0]?=?0,?sum[i?+?1]?=?sum[i]?+?k[i].\nThen munber of ways to come to stop ti using bus i is equal to sum[ti]?-?sum[si].\nSo time complexity is O(m \\cdot log(m)), memory complexity is O(m).",
    "hint": []
}