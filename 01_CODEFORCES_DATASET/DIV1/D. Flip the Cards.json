{"link": "https://codeforces.com//contest/1503/problem/D", "problemId": "945472", "problem_idx": "D", "shortId": "1503D", "contest_number": "1503", "problem_submissions": {"F": [111939776, 111936345, 111953640, 111949537, 111942068, 111944734, 111944711, 111948141, 111947867, 113984444], "E": [111918055, 111912666, 111918864, 111923939, 111922990, 111923269, 111922053, 111920801, 111927922, 111926604, 111931364, 111936374, 111926173, 111935792, 111929517, 111930613, 111937713, 111935328, 111934244], "D": [111903738, 111902585, 111898744, 111893896, 111901869, 111902624, 111880076, 111902059, 111906951, 111905795, 111910439, 111899185, 111916472, 111904574, 111913444, 111910826, 111914877, 111924091, 111906860], "C": [111886477, 111890876, 111881938, 111886094, 111882409, 111883959, 111902446, 111905834, 111885208, 111897171, 111889963, 111890061, 111888926, 111886850, 111898651, 111896248, 111894668, 111884135, 111889304], "B": [111876447, 111888244, 111877449, 111876120, 111878468, 111878981, 111893644, 111877927, 111878327, 111877579, 111878407, 111882807, 111900739, 111880662, 111889601, 111886898, 111883228, 111878516, 111916268], "A": [111871860, 111872029, 111873354, 111871912, 111872701, 111874636, 111888931, 111872574, 111873406, 111872331, 111873739, 111875192, 111873092, 111873513, 111878839, 111875591, 111873509, 111872858, 111893066]}, "name": "D. Flip the Cards", "statement": "There is a deck of n cards. The i-th card has a number a_i on the front\r\nand a number b_i on the back. Every integer between 1 and 2n appears\r\nexactly once on the cards.A deck is called sorted if the front values\r\nare in order and the back values are in order. That is, if a_i< a_{i+1}\r\nand b_i> b_{i+1} for all 1\r\nle i<n.To flip a card i means swapping the values of a_i and b_i. You\r\nmust flip some subset of cards (possibly, none), then put all the cards\r\nin any order you like. What is the minimum number of cards you must flip\r\nin order to sort the deck?\r\n", "solutions": ["#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tios_base::sync_with_stdio(false), cin.tie(nullptr);\n\tint n;\n\tcin >> n;\n\tvector<vector<int> > a(n, vector<int>(2));\n\tvector<int> sw(n);\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> a[i][0] >> a[i][1];\n\t\tsw[i] = (a[i][0] > a[i][1]);\n\t\tsort(a[i].begin(), a[i].end());\n\t}\n\tvector<int> xord(n);\n\tset<pair<int,int> > xs, ys;\n\tfor(int i = 0; i < n; i++){\n\t\txs.insert({a[i][0], i});\n\t\tys.insert({a[i][1], i});\n\t}\n\tvector<pair<int,int> > used;\n\tint ans = 0;\n\twhile(!xs.empty()){\n\t\tauto [_, i] = *xs.begin();\n\t\tint tot = 0;\n\t\tint nsw = 0;\n\t\txs.erase({a[i][0], i});\n\t\tys.erase({a[i][1], i});\n\t\tused.push_back({a[i][0], a[i][1]});\n\t\ttot++;\n\t\tnsw += sw[i];\n\t\tint ly = a[i][1];\n\t\tint tx = 0;\n\t\twhile(!xs.empty()){\n\t\t\t{\n\t\t\t\tauto [y, j] = *prev(ys.end());\n\t\t\t\tif(y > ly){\n\t\t\t\t\ttx = max(tx, a[j][0]);\n\t\t\t\t\txs.erase({a[j][0], j});\n\t\t\t\t\tys.erase({a[j][1], j});\n\t\t\t\t\ttot++;\n\t\t\t\t\tnsw += (1 ^ sw[j]);\n\t\t\t\t\tused.push_back({a[j][1], a[j][0]});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t{\n\t\t\t\tauto [x, j] = *xs.begin();\n\t\t\t\tif(x < tx){\n\t\t\t\t\tly = min(ly, a[j][1]);\n\t\t\t\t\txs.erase({a[j][0], j});\n\t\t\t\t\tys.erase({a[j][1], j});\n\t\t\t\t\ttot++;\n\t\t\t\t\tnsw += sw[j];\n\t\t\t\t\tused.push_back({a[j][0], a[j][1]});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tans += min(nsw, tot - nsw);\n\t}\n\tsort(used.begin(), used.end());\n\tfor(int i = 0; i + 1 < n; i++){\n\t\tif(used[i].first < used[i+1].first && used[i].second > used[i+1].second) continue;\n\t\tcout << -1 << '\\n';\n\t\treturn 0;\n\t}\n\tcout << ans << '\\n';\n}"], "input": "", "output": "", "tags": ["2-sat", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "dificulty": "2600", "interactive": false}